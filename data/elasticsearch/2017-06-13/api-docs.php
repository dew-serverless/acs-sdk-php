<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'ROA',
    'product' => 'elasticsearch',
    'version' => '2017-06-13',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 123893,
      'title' => 'APM',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeApm',
        1 => 'RemoveApm',
        2 => 'StartApm',
        3 => 'StopApm',
        4 => 'UpdateApm',
        5 => 'ListApm',
      ),
    ),
    1 => 
    array (
      'id' => 123900,
      'title' => '实例',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 123901,
          'title' => '索引管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CloseManagedIndex',
            1 => 'CreateDataStream',
            2 => 'CreateILMPolicy',
            3 => 'CreateIndexTemplate',
            4 => 'DeleteDataStream',
            5 => 'DeleteILMPolicy',
            6 => 'DeleteIndexTemplate',
            7 => 'DescribeILMPolicy',
            8 => 'DescribeIndexTemplate',
            9 => 'ListDataStreams',
            10 => 'ListILMPolicies',
            11 => 'ListIndexTemplates',
            12 => 'RolloverDataStream',
            13 => 'UpdateILMPolicy',
            14 => 'UpdateIndexTemplate',
            15 => 'CreateComponentIndex',
            16 => 'DeleteComponentIndex',
            17 => 'DeleteDeprecatedTemplate',
            18 => 'DescribeComponentIndex',
            19 => 'DescribeDeprecatedTemplate',
            20 => 'ListComponentIndices',
            21 => 'ListDeprecatedTemplates',
            22 => 'UpdateComponentIndex',
          ),
        ),
        1 => 'DeleteInstance',
        2 => 'UpdateInstanceChargeType',
        3 => 'UpdateDescription',
        4 => 'UpdateReadWritePolicy',
        5 => 'ModifyElastictask',
        6 => 'ModifyInstanceMaintainTime',
        7 => 'UpdateKibanaWhiteIps',
        8 => 'UpdateWhiteIps',
        9 => 'ListInstance',
        10 => 'DescribeInstance',
        11 => 'DescribeRegions',
        12 => 'ListAllNode',
        13 => 'GetElastictask',
        14 => 'ListInstanceIndices',
        15 => 'createInstance',
        16 => 'EstimatedRestartTime',
        17 => 'RestartInstance',
        18 => 'RenewInstance',
        19 => 'ActivateZones',
        20 => 'DeactivateZones',
        21 => 'InterruptElasticsearchTask',
        22 => 'ResumeElasticsearchTask',
        23 => 'MigrateToOtherZone',
        24 => 'CancelDeletion',
        25 => 'DiagnoseInstance',
        26 => 'MoveResourceGroup',
        27 => 'CapacityPlan',
        28 => 'GetOpenStoreUsage',
        29 => 'ListDicts',
        30 => 'ListShardRecoveries',
      ),
    ),
    2 => 
    array (
      'id' => 123955,
      'title' => '标签',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListTags',
        1 => 'ListTagResources',
        2 => 'UntagResources',
        3 => 'TagResources',
      ),
    ),
    3 => 
    array (
      'id' => 123960,
      'title' => '数据迁移',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DeleteDataTask',
        1 => 'GetTransferableNodes',
        2 => 'ListDataTasks',
        3 => 'GetClusterDataInformation',
        4 => 'ValidateTransferableNodes',
        5 => 'TransferNode',
        6 => 'CancelTask',
      ),
    ),
    4 => 
    array (
      'id' => 123968,
      'title' => '采集器',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateCollector',
        1 => 'DeleteCollector',
        2 => 'ModifyDeployMachine',
        3 => 'UpdateCollector',
        4 => 'UpdateCollectorName',
        5 => 'StartCollector',
        6 => 'StopCollector',
        7 => 'DescribeCollector',
        8 => 'ListDefaultCollectorConfigurations',
        9 => 'ListCollectors',
        10 => 'ListNodes',
        11 => 'RestartCollector',
        12 => 'ReinstallCollector',
      ),
    ),
    5 => 
    array (
      'id' => 123982,
      'title' => '实例升降配',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'UpdateInstance',
        1 => 'GetSuggestShrinkableNodes',
        2 => 'ValidateShrinkNodes',
        3 => 'ShrinkNode',
        4 => 'UpgradeEngineVersion',
      ),
    ),
    6 => 
    array (
      'id' => 123988,
      'title' => '集群配置',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'UpdateInstanceSettings',
        1 => 'UpdateHotIkDicts',
        2 => 'UpdateSynonymsDicts',
        3 => 'UpdateDict',
        4 => 'UpdateAdvancedSetting',
        5 => 'UpdateExtendConfig',
        6 => 'UpdateTemplate',
        7 => 'UpdateAliwsDict',
        8 => 'UpdateBlackIps',
        9 => 'DescribeTemplates',
        10 => 'ListAckClusters',
        11 => 'ListDictInformation',
        12 => 'ListEcsInstances',
        13 => 'DescribeAckOperator',
        14 => 'GetRegionConfiguration',
        15 => 'ListAckNamespaces',
        16 => 'InstallAckOperator',
        17 => 'InstallUserPlugins',
        18 => 'RecommendTemplates',
        19 => 'ValidateSlrPermission',
        20 => 'InitializeOperationRole',
      ),
    ),
    7 => 
    array (
      'id' => 124011,
      'title' => '插件管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListPlugins',
        1 => 'InstallSystemPlugin',
        2 => 'UninstallPlugin',
      ),
    ),
    8 => 
    array (
      'id' => 124015,
      'title' => '集群监控',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'GetEmonMonitorData',
        1 => 'DescribeElasticsearchHealth',
        2 => 'GetEmonGrafanaAlerts',
        3 => 'GetEmonGrafanaDashboards',
        4 => 'PostEmonTryAlarmRule',
      ),
    ),
    9 => 
    array (
      'id' => 124021,
      'title' => '日志查询',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListSearchLog',
      ),
    ),
    10 => 
    array (
      'id' => 124023,
      'title' => '安全配置',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddConnectableCluster',
        1 => 'DeleteConnectedCluster',
        2 => 'UpdatePrivateNetworkWhiteIps',
        3 => 'UpdatePublicWhiteIps',
        4 => 'UpdatePublicNetwork',
        5 => 'UpdateAdminPassword',
        6 => 'ModifyWhiteIps',
        7 => 'DescribeConnectableClusters',
        8 => 'ListConnectedClusters',
        9 => 'TriggerNetwork',
        10 => 'OpenHttps',
        11 => 'CloseHttps',
        12 => 'CreateVpcEndpoint',
        13 => 'DeleteVpcEndpoint',
        14 => 'ListVpcEndpoints',
      ),
    ),
    11 => 
    array (
      'id' => 124039,
      'title' => '数据备份',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateSnapshot',
        1 => 'AddSnapshotRepo',
        2 => 'DeleteSnapshotRepo',
        3 => 'UpdateSnapshotSetting',
        4 => 'DescribeSnapshotSetting',
        5 => 'ListSnapshotReposByInstanceId',
        6 => 'ListAlternativeSnapshotRepos',
      ),
    ),
    12 => 
    array (
      'id' => 124047,
      'title' => '智能运维',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListDiagnosisItems',
        1 => 'UpdateDiagnosisSettings',
        2 => 'ListDiagnoseReport',
        3 => 'ListDiagnoseReportIds',
        4 => 'DescribeDiagnoseReport',
        5 => 'DescribeDiagnosisSettings',
        6 => 'ListDiagnoseIndices',
        7 => 'OpenDiagnosis',
        8 => 'CloseDiagnosis',
      ),
    ),
    13 => 
    array (
      'id' => 124056,
      'title' => 'Kibana',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'UpdateKibanaSettings',
        1 => 'DescribeKibanaSettings',
        2 => 'ListKibanaPlugins',
        3 => 'InstallKibanaSystemPlugin',
        4 => 'UninstallKibanaPlugin',
      ),
    ),
    14 => 
    array (
      'id' => 124062,
      'title' => 'Logstash',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 124063,
          'title' => '实例管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'DeleteLogstash',
            1 => 'UpdateLogstash',
            2 => 'UpdateLogstashDescription',
            3 => 'UpdateLogstashChargeType',
            4 => 'ListLogstash',
            5 => 'DescribeLogstash',
            6 => 'RenewLogstash',
            7 => 'RestartLogstash',
            8 => 'EstimatedLogstashRestartTime',
          ),
        ),
        1 => 
        array (
          'id' => 124073,
          'title' => '集群配置',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'UpdateLogstashSettings',
            1 => 'ListExtendfiles',
          ),
        ),
        2 => 
        array (
          'id' => 124076,
          'title' => '插件管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ListLogstashPlugins',
            1 => 'InstallLogstashSystemPlugin',
            2 => 'UninstallLogstashPlugin',
          ),
        ),
        3 => 
        array (
          'id' => 124080,
          'title' => '日志查询',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ListLogstashLog',
          ),
        ),
        4 => 
        array (
          'id' => 124082,
          'title' => '集群监控',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'UpdateXpackMonitorConfig',
            1 => 'ListAvailableEsInstanceIds',
            2 => 'DescribeXpackMonitorConfig',
            3 => 'ValidateConnection',
          ),
        ),
        5 => 
        array (
          'id' => 124087,
          'title' => '变更任务管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'InterruptLogstashTask',
            1 => 'ResumeLogstashTask',
          ),
        ),
        6 => 
        array (
          'id' => 124090,
          'title' => '管道管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreatePipelines',
            1 => 'DeletePipelines',
            2 => 'UpdatePipelines',
            3 => 'StopPipelines',
            4 => 'UpdatePipelineManagementConfig',
            5 => 'ListPipeline',
            6 => 'DescribePipeline',
            7 => 'DescribePipelineManagementConfig',
            8 => 'RunPipelines',
          ),
        ),
        7 => 'CreateLogstash',
        8 => 'UpdateExtendfiles',
        9 => 'ListPipelineIds',
        10 => 'CancelLogstashDeletion',
      ),
    ),
    15 => 
    array (
      'id' => 178119,
      'title' => '其他',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListInstanceHistoryEvents',
        1 => 'UpdateDynamicSettings',
        2 => 'DescribeDynamicSettings',
        3 => 'ListActionRecords',
      ),
    ),
    16 => 
    array (
      'id' => 0,
      'title' => '其它',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DisableKibanaPvlNetwork',
        1 => 'UpdateKibanaPvlNetwork',
        2 => 'ListKibanaPvlNetwork',
        3 => 'EnableKibanaPvlNetwork',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
      'ClientNodeConfiguration' => 
      array (
        'title' => '协调节点配置信息',
        'description' => '协调节点配置信息。',
        'type' => 'object',
        'properties' => 
        array (
          'diskType' => 
          array (
            'title' => '协调节点磁盘类型',
            'description' => '协调节点存储类型，仅支持cloud_efficiency（高效云盘）。',
            'type' => 'string',
            'required' => true,
            'example' => 'cloud_ssd',
            'enum' => 
            array (
              0 => 'cloud_efficiency',
            ),
          ),
          'amount' => 
          array (
            'title' => '协调节点数量',
            'description' => '协调节点数量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '25',
            'minimum' => '2',
            'example' => '3',
          ),
          'spec' => 
          array (
            'title' => '协调节点规格',
            'description' => '协调节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'elasticsearch.sn2ne.large',
            'enum' => 
            array (
              0 => 'elasticsearch.sn1ne.large.new',
              1 => 'elasticsearch.sn2ne.large.new',
              2 => 'elasticsearch.sn1ne.xlarge.new',
              3 => 'elasticsearch.sn2ne.xlarge.new',
              4 => 'elasticsearch.sn1ne.2xlarge.new',
              5 => 'elasticsearch.sn2ne.2xlarge.new',
              6 => 'elasticsearch.sn1ne.4xlarge.new',
              7 => 'elasticsearch.sn2ne.4xlarge.new',
              8 => 'elasticsearch.sn1ne.8xlarge.new',
              9 => 'elasticsearch.ic5.large',
              10 => 'elasticsearch.sn1ne.large',
              11 => 'elasticsearch.sn2ne.large',
              12 => 'elasticsearch.r5.large',
              13 => 'elasticsearch.ic5.xlarge',
              14 => 'elasticsearch.sn1ne.xlarge',
              15 => 'elasticsearch.sn2ne.xlarge',
              16 => 'elasticsearch.r5.xlarge',
              17 => 'elasticsearch.ic5.2xlarge',
              18 => 'elasticsearch.sn1ne.2xlarge',
              19 => 'elasticsearch.sn2ne.2xlarge',
              20 => 'elasticsearch.r5.2xlarge',
              21 => 'elasticsearch.ic5.3xlarge',
              22 => 'elasticsearch.ic5.4xlarge',
              23 => 'elasticsearch.sn1ne.4xlarge',
              24 => 'elasticsearch.sn2ne.4xlarge',
              25 => 'elasticsearch.sn1ne.8xlarge',
            ),
          ),
          'disk' => 
          array (
            'title' => '协调节点磁盘大小',
            'description' => '协调节点存储空间大小，单位：GB。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '20',
            'minimum' => '20',
            'example' => '20',
            'enum' => 
            array (
              0 => '20',
            ),
          ),
        ),
        'required' => false,
      ),
      'CollectorDeployMachine' => 
      array (
        'title' => '采集器安装实例信息',
        'description' => '采集器安装实例信息',
        'type' => 'object',
        'properties' => 
        array (
          'configType' => 
          array (
            'title' => '固定值：collectorDeployMachine',
            'type' => 'string',
            'required' => true,
            'example' => 'collectorDeployMachine',
            'enum' => 
            array (
              0 => 'collectorDeployMachine',
            ),
          ),
          'type' => 
          array (
            'title' => '采集器部署机器目标的类型，分为ECS和ACK两种',
            'type' => 'string',
            'required' => true,
            'example' => 'ACKCluster',
            'enum' => 
            array (
              0 => 'ECSInstanceId ACKCluster',
            ),
          ),
          'machines' => 
          array (
            'title' => '部署在ECS时，部署到的机器的相关信息，包括ECS的id和每台机器上的采集器状态',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'instanceId' => 
                array (
                  'title' => 'ECS实例Id',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'i-xs34****',
                ),
                'agentStatus' => 
                array (
                  'title' => '当前ECS实例采集器安装状态',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'UNINSTALLED',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
          'groupId' => 
          array (
            'title' => 'ECS机器组Id',
            'type' => 'string',
            'required' => false,
            'example' => 'default_ct-cn-f3t0dq5p97199ru3z',
          ),
          'instanceId' => 
          array (
            'title' => 'ACK集群Id',
            'type' => 'string',
            'required' => false,
            'example' => 'ce93d7566df2141f490f0f60f646252c3',
          ),
          'totalPodsCount' => 
          array (
            'title' => '返回ACK集群所有采集的Pod节点数',
            'type' => 'string',
            'required' => false,
            'example' => '2',
          ),
          'successPodsCount' => 
          array (
            'title' => '返回ACK集群中成功采集状态的Pod节点数',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        'required' => false,
      ),
      'CollectorKibanaInstance' => 
      array (
        'title' => '采集器Output为Kibana时配置信息',
        'description' => '采集器Kibana目标采集信息',
        'type' => 'object',
        'properties' => 
        array (
          'configType' => 
          array (
            'title' => '采集器Output配置类型，固定值：collectorElasticsearchForKibana',
            'type' => 'string',
            'required' => true,
            'example' => 'collectorElasticsearchForKibana',
            'enum' => 
            array (
              0 => 'collectorElasticsearchForKibana',
            ),
          ),
          'instanceId' => 
          array (
            'title' => '采集器Output实例Id',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-45dfy****',
          ),
          'host' => 
          array (
            'title' => 'kibana对应的es实例地址',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-*****-kibana.internal.elasticsearch.aliyuncs.com:5601',
          ),
          'protocol' => 
          array (
            'title' => '传输协议',
            'type' => 'string',
            'required' => true,
            'example' => 'HTTP',
            'enum' => 
            array (
              0 => 'HTTP HTTPS',
            ),
          ),
          'kibanaHost' => 
          array (
            'title' => 'kibana地址',
            'type' => 'string',
            'required' => true,
            'example' => 'https://es-cn-****.kibana.elasticsearch.aliyuncs.com:5601',
          ),
          'userName' => 
          array (
            'title' => 'kibana用户名',
            'type' => 'string',
            'required' => true,
            'example' => 'username',
          ),
          'password' => 
          array (
            'title' => 'kibana密码',
            'type' => 'string',
            'required' => true,
            'example' => 'password',
          ),
        ),
        'required' => false,
      ),
      'CollectorTargetInstance' => 
      array (
        'title' => '采集器Output目标实例信息，ES/Logstash',
        'description' => '采集器目标实例信息',
        'type' => 'object',
        'properties' => 
        array (
          'instanceId' => 
          array (
            'title' => 'output实例Id',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-ks8x****',
          ),
          'instanceType' => 
          array (
            'title' => '实例类型',
            'type' => 'string',
            'required' => true,
            'example' => 'elasticsearch',
            'enum' => 
            array (
              0 => 'elasticsearch logstash',
            ),
          ),
          'hosts' => 
          array (
            'title' => 'output实例地址',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
              'example' => 'es-cn-n6w1o1x*****.elasticsearch.aliyuncs.com:9200',
            ),
            'required' => false,
          ),
          'protocol' => 
          array (
            'title' => '传输协议',
            'type' => 'string',
            'required' => true,
            'example' => 'HTTP',
            'enum' => 
            array (
              0 => 'HTTP HTTPS',
            ),
          ),
          'userName' => 
          array (
            'title' => 'output实例用户名',
            'type' => 'string',
            'required' => true,
            'example' => 'username',
          ),
          'password' => 
          array (
            'title' => 'output实例密码',
            'type' => 'string',
            'required' => true,
            'example' => 'password',
          ),
          'enableMonitoring' => 
          array (
            'title' => '采集器是否启用Monitoring',
            'type' => 'boolean',
            'required' => true,
            'example' => 'false',
            'default' => 'false',
          ),
          'configType' => 
          array (
            'title' => '当前配置类型。固定值：collectorTargetInstance',
            'type' => 'string',
            'required' => true,
            'example' => 'collectorTargetInstance',
            'enum' => 
            array (
              0 => 'collectorTargetInstance',
            ),
          ),
        ),
        'required' => false,
      ),
      'DictInfo' => 
      array (
        'title' => '词典信息',
        'description' => '词典配置信息。',
        'type' => 'object',
        'properties' => 
        array (
          'type' => 
          array (
            'title' => '词典类型',
            'description' => '词典文件类型，支持：

- STOP：停用词
- MAIN：主词典
- SYNONYMS：同义词词典
- ALI_WS：阿里词典',
            'type' => 'string',
            'example' => 'ALI_WS',
          ),
          'sourceType' => 
          array (
            'title' => '词典来源',
            'description' => '词典文件来源类型，支持：

- OSS：OSS开放存储（需要确保OSS存储空间为公共可读）
- ORIGIN：开源Elasticsearch
- UPLOAD：上传的文件',
            'type' => 'string',
            'example' => 'OSS',
          ),
          'fileSize' => 
          array (
            'title' => '词典文件大小',
            'description' => '词典文件大小，单位：Byte。',
            'type' => 'integer',
            'format' => 'int64',
            'example' => '2782602',
          ),
          'name' => 
          array (
            'title' => '词典文件名称',
            'description' => '词典文件名称。要求如下：

- 主词典/停用词：每行一个词，保存为UTF-8编码的DIC文件；。文件名包含大小写字母、数字和下划线，且长度不超过30个字符；不允许上传同名文件，主分词文件和停用词文件也不允许重名。
- 同义词词典：每行只有一个同义词表达式，保存为UTF-8编码的TXT文件。
- 阿里词典：文件名必须是aliws_ext_dict.txt；文件格式必须是UTF-8格式；文件内容要求每行一个词，前后不能有空白字符；需要使用UNIX或Linux的换行符，即每行结尾是\\n。如果是在Windows系统中生成的文件，需要在Linux机器上使用dos2unix工具将词典文件处理后再上传。
',
            'type' => 'string',
            'example' => 'aliws_ext_dict.txt',
          ),
        ),
      ),
      'ElasticDataNodeConfiguration' => 
      array (
        'title' => '弹性节点配置信息',
        'description' => '弹性数据节点配置信息。',
        'type' => 'object',
        'properties' => 
        array (
          'diskType' => 
          array (
            'title' => '弹性节点磁盘类型',
            'description' => '弹性节点存储类型，支持：

- cloud_ssd：SSD云盘
- cloud_essd：ESSD云盘
- cloud_efficiency：高效云盘
',
            'type' => 'string',
            'required' => false,
            'example' => 'cloud_ssd',
            'enum' => 
            array (
              0 => 'cloud_essd',
              1 => 'cloud_efficiency',
              2 => 'cloud_ssd',
            ),
          ),
          'diskEncryption' => 
          array (
            'title' => '弹性节点磁盘加密',
            'description' => '是否为弹性节点开启云盘加密：

- true：开启
- false：不开启',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
          'amount' => 
          array (
            'title' => '弹性节点数量',
            'description' => '弹性节点数量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '50',
            'minimum' => '2',
            'example' => '3',
          ),
          'spec' => 
          array (
            'title' => '弹性节点规格',
            'description' => '弹性节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'elasticsearch.sn2ne.large',
            'enum' => 
            array (
              0 => 'elasticsearch.sn1ne.large.new',
              1 => 'elasticsearch.sn2ne.large.new',
              2 => 'elasticsearch.sn1ne.xlarge.new',
              3 => 'elasticsearch.sn2ne.xlarge.new',
              4 => 'elasticsearch.sn1ne.2xlarge.new',
              5 => 'elasticsearch.sn2ne.2xlarge.new',
              6 => 'elasticsearch.sn1ne.4xlarge.new',
              7 => 'elasticsearch.sn2ne.4xlarge.new',
              8 => 'elasticsearch.sn1ne.8xlarge.new',
              9 => 'openstore.hybrid.i2.2xlarge',
              10 => 'openstore.hybrid.i2g.4xlarge',
              11 => 'openstore.i2g.4xlarge',
              12 => 'elasticsearch.sn1ne.large',
              13 => 'elasticsearch.sn2ne.large',
              14 => 'elasticsearch.r5.large',
              15 => 'elasticsearch.ic5.xlarge',
              16 => 'elasticsearch.sn1ne.xlarge',
              17 => 'elasticsearch.sn2ne.xlarge',
              18 => 'elasticsearch.r5.xlarge',
              19 => 'elasticsearch.ic5.2xlarge',
              20 => 'elasticsearch.sn1ne.2xlarge',
              21 => 'elasticsearch.sn2ne.2xlarge',
              22 => 'elasticsearch.r5.2xlarge',
              23 => 'elasticsearch.ic5.3xlarge',
              24 => 'elasticsearch.ic5.4xlarge',
              25 => 'elasticsearch.sn1ne.4xlarge',
              26 => 'elasticsearch.sn2ne.4xlarge',
              27 => 'elasticsearch.r6.4xlarge',
              28 => 'elasticsearch.sn1ne.8xlarge',
              29 => 'elasticsearch.sn2ne.8xlarge',
              30 => 'elasticsearch.r6.8xlarge',
              31 => 'elasticsearch.c6.13xlarge',
              32 => 'elasticsearch.i2g.2xlarge',
              33 => 'elasticsearch.i2g.4xlarge',
              34 => 'elasticsearch.i2.4xlarge',
              35 => 'elasticsearch.i2g.8xlarge',
              36 => 'elasticsearch.d1.2xlarge',
              37 => 'elasticsearch.d1.4xlarge',
              38 => 'elasticsearch.n4.small',
              39 => 'elasticsearch.ic5.large',
            ),
          ),
          'disk' => 
          array (
            'title' => '弹性节点磁盘大小',
            'description' => '弹性节点存储空间大小，单位为GB。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '20480',
            'minimum' => '20',
            'example' => '20',
          ),
          'performanceLevel' => 
          array (
            'title' => '弹性节点essd磁盘等级',
            'description' => 'ESSD云盘的性能级别。当弹性节点的磁盘类型为ESSD云盘时，必选。支持：PL1、PL2、PL3。',
            'type' => 'string',
            'required' => false,
            'example' => 'PL1',
            'enum' => 
            array (
              0 => 'PL0',
              1 => 'PL1',
              2 => 'PL2',
              3 => 'PL3',
            ),
          ),
        ),
        'required' => false,
      ),
      'Elasticsearch' => 
      array (
        'title' => 'Elasticsearchsh实例配置信息',
        'description' => 'Elasticsearchsh实例配置信息。',
        'type' => 'object',
        'properties' => 
        array (
          'masterConfiguration' => 
          array (
            'description' => '专有主节点配置。',
            'required' => false,
            '$ref' => '#/components/schemas/MasterNodeConfiguration',
          ),
          'resourceGroupId' => 
          array (
            'title' => '资源组标识',
            'description' => '实例所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-aekzvowej3i****',
          ),
          'elasticDataNodeConfiguration' => 
          array (
            'description' => '弹性数据节点配置。',
            'required' => false,
            '$ref' => '#/components/schemas/ElasticDataNodeConfiguration',
          ),
          'dedicateMaster' => 
          array (
            'title' => '是否包含旧专有主节点',
            'description' => '是否包含旧专有主节点（已废弃）。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
          'createdAt' => 
          array (
            'title' => '创建时间',
            'description' => '实例创建时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2018-07-13T03:58:07.253Z',
          ),
          'ikHotDicts' => 
          array (
            'title' => 'IK热词词典配置',
            'description' => 'IK热词词典配置。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'IK词典配置。',
              '$ref' => '#/components/schemas/DictInfo',
            ),
            'required' => false,
          ),
          'port' => 
          array (
            'title' => '集群私网访问端口',
            'description' => '实例的私网访问端口号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '9200',
          ),
          'kibanaPrivateIPWhitelist' => 
          array (
            'title' => 'Kibana节点私网访问IP',
            'description' => 'Kibana私网访问IP白名单配置。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'Kibana私网地址访问白名单列表。',
              'type' => 'string',
              'example' => '["192.168.XX.XX"]',
            ),
            'required' => false,
          ),
          'esVersion' => 
          array (
            'title' => '实例版本',
            'description' => '实例版本。',
            'type' => 'string',
            'required' => false,
            'example' => '6.3.2_with_X-Pack',
          ),
          'kibanaConfiguration' => 
          array (
            'description' => 'Kibana节点配置。',
            'required' => false,
            '$ref' => '#/components/schemas/KibanaNodeConfiguration',
          ),
          'dataNode' => 
          array (
            'title' => '是否包含数据节点',
            'description' => '实例是否包含数据节点：

- true：包含
- false：不包含',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
          'serviceVpc' => 
          array (
            'title' => '云服务VPC',
            'description' => '实例是否处于Elasticsearch服务VPC下：

- true：处于
- false：不处于',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
          'tags' => 
          array (
            'title' => '标签',
            'description' => '实例标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签配置。',
              '$ref' => '#/components/schemas/Tag',
            ),
            'required' => false,
          ),
          'haveKibana' => 
          array (
            'title' => '存在kibana节点',
            'description' => '实例是否包含Kibana节点：

- true：包含
- false：不包含',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
          'dictList' => 
          array (
            'title' => 'IK词典配置',
            'description' => 'IK词典配置。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'IK词典配置信息。',
              '$ref' => '#/components/schemas/DictInfo',
            ),
            'required' => false,
          ),
          'extendConfigs' => 
          array (
            'title' => '集群扩展参数配置',
            'description' => '实例的扩展参数配置。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '实例的扩展配置。',
              'type' => 'object',
              'example' => '[{ "configType": "aliVersion","aliVersion": "ali1.3.0" }]',
            ),
            'required' => false,
          ),
          'status' => 
          array (
            'title' => '集群变更状态',
            'description' => '实例的状态，支持：

- active：正常
- activating：生效中
- inactive：冻结
- invalid：失效',
            'type' => 'string',
            'required' => false,
            'example' => 'active',
          ),
          'instanceId' => 
          array (
            'title' => '实例ID',
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'es-cn-3h4k3axh33th9****',
          ),
          'zoneInfos' => 
          array (
            'title' => '集群可用区分布状态',
            'description' => '实例所在的可用区信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '可用区信息。',
              '$ref' => '#/components/schemas/ZoneInfo',
            ),
            'required' => false,
          ),
          'kibanaProtocol' => 
          array (
            'title' => 'Kibana访问协议',
            'description' => 'Kibana访问协议，支持HTTP和HTTPS。',
            'type' => 'string',
            'required' => false,
            'example' => 'HTTPS',
          ),
          'enableKibanaPrivateNetwork' => 
          array (
            'title' => '是否开启Kibana私网访问',
            'description' => '是否开启Kibana私网访问：

- true：开启
- false：不开启',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
          'kibanaDomain' => 
          array (
            'title' => 'Kibana公网访问链接',
            'description' => 'Kibana公网访问地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'es-cn-3h4k3axh33th9****.kibana.elasticsearch.aliyuncs.com',
          ),
          'nodeSpec' => 
          array (
            'description' => '数据节点配置。',
            'required' => false,
            '$ref' => '#/components/schemas/NodeSpec',
          ),
          'warmNode' => 
          array (
            'title' => '是否开启冷节点',
            'description' => '是否开启冷数据节点：

- true：开启
- false：不开启',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
          'warmNodeConfiguration' => 
          array (
            'description' => '冷数据节点配置。',
            'required' => false,
            '$ref' => '#/components/schemas/WarmNodeConfiguration',
          ),
          'domain' => 
          array (
            'title' => 'Elasticsearch集群私网访问链接',
            'description' => 'Elasticsearch实例的私网访问地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'es-cn-3h4k3axh33th9****.elasticsearch.aliyuncs.com',
          ),
          'haveClientNode' => 
          array (
            'title' => '是否开启协调节点',
            'description' => '是否开启协调节点：

- true：开启
- false：不开启',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
          'clientNodeConfiguration' => 
          array (
            'title' => '协调节点配置',
            'description' => '协调节点配置。',
            'required' => false,
            '$ref' => '#/components/schemas/ClientNodeConfiguration',
          ),
          'description' => 
          array (
            'title' => '集群自定义名称',
            'description' => '实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'es-cn-abc',
          ),
          'endTime' => 
          array (
            'title' => '集群到期时间，后付费实例默认100年',
            'description' => '实例到期时间，按量付费实例默认为100年。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '5',
          ),
          'enablePublic' => 
          array (
            'title' => 'Elasticsearch是否开启公网访问',
            'description' => '是否开启实例的公网地址：

- true：开启
- false：不开启',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
          'aliwsDicts' => 
          array (
            'title' => 'Aliws词典配置',
            'description' => 'Aliws词典配置。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '词典配置信息。',
              '$ref' => '#/components/schemas/DictInfo',
            ),
            'required' => false,
          ),
          'advancedDedicateMaster' => 
          array (
            'title' => '开启新版专有主节点',
            'description' => '是否开启新版专有主节点：

- true：开启
- false：不开启',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
          'paymentType' => 
          array (
            'title' => '实例付费类型',
            'description' => '实例的付费类型，支持：

- prepaid：包年包月
- postpaid：按量付费',
            'type' => 'string',
            'required' => false,
            'example' => 'prepaid',
          ),
          'readWritePolicy' => 
          array (
            'description' => '实例高可用特性的配置信息。',
            'required' => false,
            '$ref' => '#/components/schemas/ReadWritePolicy',
          ),
          'protocol' => 
          array (
            'title' => 'Elasticsearch集群访问协议',
            'description' => '实例的访问协议。支持：HTTP和HTTPS。',
            'type' => 'string',
            'required' => false,
            'example' => 'HTTP',
          ),
          'publicIpWhitelist' => 
          array (
            'title' => 'Elasticsearch集群公网访问IP',
            'description' => '实例的公网访问白名单配置。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '实例的公网地址访问白名单列表。',
              'type' => 'string',
              'example' => '["0.0.0.0/0"]',
            ),
            'required' => false,
          ),
          'kibanaPort' => 
          array (
            'title' => 'Kibana公网访问端口号',
            'description' => 'Kibana公网访问端口号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '5601',
          ),
          'enableKibanaPublicNetwork' => 
          array (
            'title' => '是否开启kibana公网访问',
            'description' => '是否开启Kibana的公网访问：

- true：开启
- false：不开启',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
          'networkConfig' => 
          array (
            'title' => '实例网络设置',
            'description' => '实例网络配置。',
            'required' => false,
            '$ref' => '#/components/schemas/NetworkConfig',
          ),
          'productType' => 
          array (
            'title' => '实例类型',
            'description' => '实例版本类型。可选值：

- logEnhancement：日志增强版
- generalBusiness：普通商业版',
            'type' => 'string',
            'required' => false,
            'example' => 'generalBusiness',
            'enum' => 
            array (
              0 => 'generalBusiness',
              1 => 'logEnhancement',
              2 => 'community',
            ),
          ),
          'advancedSetting' => 
          array (
            'title' => '高级配置',
            'description' => '高级配置。',
            'type' => 'object',
            'properties' => 
            array (
              'gcName' => 
              array (
                'title' => 'GC垃圾回收器名称',
                'description' => 'GC垃圾回收器名称。支持CMS和G1。',
                'type' => 'string',
                'example' => 'CMS',
                'enum' => 
                array (
                  0 => 'CMS',
                  1 => 'G1',
                ),
              ),
            ),
            'required' => false,
          ),
          'nodeAmount' => 
          array (
            'title' => 'Elasticseach集群热数据节点数量',
            'description' => '实例的数据节点数量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '2',
          ),
          'updatedAt' => 
          array (
            'title' => '实例修改时间',
            'description' => '实例最后更新时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2018-07-13T03:58:07.253Z',
          ),
          'esConfig' => 
          array (
            'title' => 'Elasticsearch集群settings配置',
            'description' => '实例的YML文件配置信息。',
            'type' => 'object',
            'required' => false,
            'additionalProperties' => 
            array (
              'description' => 'YML文件配置。',
              'type' => 'string',
              'example' => '{"http.cors.allow-credentials":"false"}',
            ),
          ),
          'esIPWhitelist' => 
          array (
            'title' => 'Elasticsearch集群私网访问白名单。已废弃',
            'description' => '实例的私网访问白名单配置（已废弃）。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '私网访问报名单列表。',
              'type' => 'string',
              'example' => '["0.0.0.0/0"]',
            ),
            'required' => false,
          ),
          'kibanaIPWhitelist' => 
          array (
            'title' => 'Kibana公网访问白名单',
            'description' => 'Kibana公网访问白名单配置。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'Kibana公网地址访问白名单列表。',
              'type' => 'string',
              'example' => '["0.0.0.0/0"]',
            ),
            'required' => false,
          ),
          'privateNetworkIpWhiteList' => 
          array (
            'title' => 'Elasticsearch集群私网访问白名单',
            'description' => '实例的私网地址访问白名单配置。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '实例的私网地址访问白名单列表。',
              'type' => 'string',
              'example' => '["0.0.0.0/0"]',
            ),
            'required' => false,
          ),
          'synonymsDicts' => 
          array (
            'title' => '实例同义词配置',
            'description' => '实例的同义词词典配置。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '词典配置信息。',
              '$ref' => '#/components/schemas/DictInfo',
            ),
            'required' => false,
          ),
          'haveElasticDataNode' => 
          array (
            'title' => '是否开启弹性节点',
            'description' => '是否开启弹性数据节点：

- true：开启
- false：不开启',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
          'zoneCount' => 
          array (
            'title' => '实例所在可用区数量',
            'description' => '实例的可用区个数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
          'kibanaPrivateDomain' => 
          array (
            'title' => 'Kibana私网访问链接',
            'description' => 'Kibana私网访问地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'es-cn-tl329rbpc0001****-kibana.internal.elasticsearch.aliyuncs.com',
          ),
          'kibanaPrivatePort' => 
          array (
            'title' => 'Kibana私网访问端口号',
            'description' => 'Kibana私网访问端口号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '5601',
          ),
          'publicDomain' => 
          array (
            'title' => 'Elasticsearch公网访问',
            'description' => 'Elasticsearch实例的公网访问地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'es-cn-3h4k3axh33th9****.elasticsearch.aliyuncs.com',
          ),
          'publicPort' => 
          array (
            'title' => 'Elasticsearch集群公网访问端口号',
            'description' => 'Elasticsearch实例的公网访问端口号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '9200',
          ),
        ),
        'required' => false,
      ),
      'KibanaNodeConfiguration' => 
      array (
        'title' => 'Kibana节点设置',
        'description' => 'Kibana节点配置信息。',
        'type' => 'object',
        'properties' => 
        array (
          'amount' => 
          array (
            'title' => 'Kibana节点数量',
            'description' => 'Kibana节点数量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '1',
            'minimum' => '1',
            'example' => '2',
            'enum' => 
            array (
              0 => '1',
            ),
          ),
          'spec' => 
          array (
            'title' => 'Kibana节点规格',
            'description' => 'Kibana节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'elasticsearch.sn2ne.large',
            'enum' => 
            array (
              0 => 'elasticsearch.sn1ne.large.new',
              1 => 'elasticsearch.sn2ne.large.new',
              2 => 'elasticsearch.sn2ne.xlarge.new',
              3 => 'elasticsearch.sn2ne.2xlarge.new',
              4 => 'elasticsearch.sn1ne.large',
              5 => 'elasticsearch.n4.small',
              6 => 'elasticsearch.sn2ne.large',
              7 => 'elasticsearch.sn2ne.xlarge',
              8 => 'elasticsearch.sn2ne.2xlarge',
            ),
          ),
          'disk' => 
          array (
            'title' => 'Kibana节点磁盘大小',
            'description' => 'Kibana节点存储空间大小，单位：GB。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        'required' => false,
      ),
      'Logstash' => 
      array (
        'title' => 'Logstash实例信息',
        'description' => '参数对象。',
        'type' => 'object',
        'properties' => 
        array (
          'endpointList' => 
          array (
            'title' => 'EndpointList',
            'description' => '节点信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '对象信息。',
              'type' => 'object',
              'properties' => 
              array (
                'host' => 
                array (
                  'title' => 'Host',
                  'description' => '节点的IP地址。',
                  'type' => 'string',
                  'example' => '172.16.xx.xx',
                ),
                'port' => 
                array (
                  'title' => 'Port',
                  'description' => '节点的访问端口号。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'example' => '9200',
                ),
                'zoneId' => 
                array (
                  'title' => 'ZoneId',
                  'description' => '节点所在的可用区ID。',
                  'type' => 'string',
                  'example' => 'cn-hangzhou-i',
                ),
              ),
            ),
          ),
          'status' => 
          array (
            'title' => 'Status',
            'description' => '可用区状态。支持：

- ISOLATION：下线
- NORMAL：正常',
            'type' => 'string',
            'example' => 'NORMAL',
          ),
          'description' => 
          array (
            'title' => 'Description',
            'description' => '实例名称。',
            'type' => 'string',
            'example' => 'ls-cn-abc',
          ),
          'resourceGroupId' => 
          array (
            'title' => 'ResourceGroupId',
            'description' => '实例所在的资源组ID。',
            'type' => 'string',
            'example' => 'rg-acfm2h5vbzd****',
          ),
          'endTime' => 
          array (
            'title' => 'EndTime',
            'description' => '包年包月实例最后的失效时间。',
            'type' => 'integer',
            'format' => 'int64',
            'example' => '4749897600000',
          ),
          'instanceId' => 
          array (
            'title' => 'InstanceId',
            'description' => '实例ID。',
            'type' => 'string',
            'example' => 'ls-cn-n6w1o5jq****',
          ),
          'config' => 
          array (
            'title' => 'Config',
            'description' => '实例配置。',
            'type' => 'object',
            'additionalProperties' => 
            array (
              'description' => '实例配置信息。',
              'type' => 'string',
              'example' => '[]',
            ),
          ),
          'createdAt' => 
          array (
            'title' => 'CreatedAt',
            'description' => '实例创建时间。',
            'type' => 'string',
            'example' => '2018-07-13T03:58:07.253Z',
          ),
          'networkConfig' => 
          array (
            'title' => 'NetworkConfig',
            'description' => '网络配置。',
            'type' => 'object',
            'properties' => 
            array (
              'type' => 
              array (
                'title' => 'Type',
                'description' => '网络类型，目前仅支持专有网络VPC（Virtual Private Cloud）。',
                'type' => 'string',
                'example' => 'vpc',
              ),
              'vpcId' => 
              array (
                'title' => 'VpcId',
                'description' => '专有网络ID。',
                'type' => 'string',
                'example' => 'vpc-abc',
              ),
              'vsArea' => 
              array (
                'title' => 'VsArea',
                'description' => '实例所在的可用区。',
                'type' => 'string',
                'example' => 'cn-hangzhou-*',
              ),
              'vswitchId' => 
              array (
                'title' => 'VswitchId',
                'description' => '交换机ID。',
                'type' => 'string',
                'example' => 'vsw-def',
              ),
            ),
          ),
          'zoneInfos' => 
          array (
            'title' => 'ZoneInfos',
            'description' => '可用区信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '可用区对象信息。',
              'type' => 'object',
              'properties' => 
              array (
                'status' => 
                array (
                  'title' => 'Status',
                  'description' => '可用区状态。支持：

- ISOLATION：下线
- NORMAL：正常',
                  'type' => 'string',
                  'example' => 'NORMAL',
                ),
                'zoneId' => 
                array (
                  'title' => 'ZoneId',
                  'description' => '可用区ID。',
                  'type' => 'string',
                  'example' => 'cn-hangzhou-i',
                ),
              ),
            ),
          ),
          'nodeAmount' => 
          array (
            'title' => 'NodeAmount',
            'description' => '实例的节点个数。',
            'type' => 'integer',
            'format' => 'int64',
            'example' => '2',
          ),
          'updatedAt' => 
          array (
            'title' => 'UpdatedAt',
            'description' => '实例最后更新的时间。',
            'type' => 'string',
            'example' => '2018-07-18T10:10:04.484Z',
          ),
          'version' => 
          array (
            'title' => 'Version',
            'description' => '实例版本。支持：

- 6.7.0_with_X-Pack
- 7.4.0_with_X-Pack',
            'type' => 'string',
            'example' => '6.7.0_with_X-Pack',
          ),
          'dataNode' => 
          array (
            'title' => 'DataNode',
            'description' => '是否启用数据节点，必须设置为true。',
            'type' => 'boolean',
            'example' => 'true',
          ),
          'nodeSpec' => 
          array (
            'title' => 'NodeSpec',
            'description' => '数据节点配置。',
            'type' => 'object',
            'properties' => 
            array (
              'disk' => 
              array (
                'title' => 'Disk',
                'description' => '节点磁盘大小。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '50',
              ),
              'diskType' => 
              array (
                'title' => 'DiskType',
                'description' => '节点磁盘类型。',
                'type' => 'string',
                'example' => 'cloud_ssd',
              ),
              'spec' => 
              array (
                'title' => 'Spec',
                'description' => '节点规格。',
                'type' => 'string',
                'example' => 'logstash.n4.small',
              ),
            ),
          ),
          'paymentType' => 
          array (
            'title' => 'PaymentType',
            'description' => '实例的付费模式。支持：

- prepaid：包年包月
- postpaid：按量付费',
            'type' => 'string',
            'example' => 'postpaid',
          ),
          'protocol' => 
          array (
            'title' => 'Protocol',
            'description' => '实例的访问协议。',
            'type' => 'string',
            'example' => 'HTTP',
          ),
          'tags' => 
          array (
            'title' => 'Tags',
            'description' => '实例标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签对象。',
              'type' => 'object',
              'properties' => 
              array (
                'tagKey' => 
                array (
                  'title' => 'TagKey',
                  'description' => '标签键。',
                  'type' => 'string',
                  'example' => 'env',
                ),
                'tagValue' => 
                array (
                  'title' => 'TagValue',
                  'description' => '标签值。',
                  'type' => 'string',
                  'example' => 'dev',
                ),
              ),
            ),
          ),
          'zoneCount' => 
          array (
            'title' => 'ZoneCount',
            'description' => '实例的可用区个数。',
            'type' => 'integer',
            'format' => 'int64',
            'example' => '1',
          ),
        ),
      ),
      'MasterNodeConfiguration' => 
      array (
        'title' => '专有主节点设置',
        'description' => '专有主节点配置信息。',
        'type' => 'object',
        'properties' => 
        array (
          'amount' => 
          array (
            'title' => '专有主节点数量',
            'description' => '专有主节点数量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '3',
            'minimum' => '3',
            'example' => '3',
          ),
          'spec' => 
          array (
            'title' => '专有主节点规格',
            'description' => '专有主节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'elasticsearch.sn2ne.large',
            'enum' => 
            array (
              0 => 'elasticsearch.sn1ne.large.new',
              1 => 'elasticsearch.sn2ne.large.new',
              2 => 'elasticsearch.sn1ne.xlarge.new',
              3 => 'elasticsearch.sn2ne.xlarge.new',
              4 => 'elasticsearch.sn1ne.2xlarge.new',
              5 => 'elasticsearch.sn2ne.2xlarge.new',
              6 => 'elasticsearch.sn1ne.4xlarge.new',
              7 => 'elasticsearch.sn2ne.4xlarge.new',
              8 => 'elasticsearch.sn1ne.8xlarge.new',
              9 => 'elasticsearch.sn2ne.large',
              10 => 'elasticsearch.r5.large',
              11 => 'elasticsearch.ic5.xlarge',
              12 => 'elasticsearch.sn1ne.xlarge',
              13 => 'elasticsearch.sn2ne.xlarge',
              14 => 'elasticsearch.r5.xlarge',
              15 => 'elasticsearch.ic5.2xlarge',
              16 => 'elasticsearch.sn1ne.2xlarge',
              17 => 'elasticsearch.sn2ne.2xlarge',
              18 => 'elasticsearch.r5.2xlarge',
              19 => 'elasticsearch.ic5.3xlarge',
            ),
          ),
          'disk' => 
          array (
            'title' => '专有主节点磁盘大小',
            'description' => '专有主节点存储空间，单位：GB。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '20',
            'minimum' => '20',
            'example' => '20',
          ),
          'diskType' => 
          array (
            'title' => '专有主节点磁盘类型',
            'description' => '专有主节点存储类型，支持：
- cloud_ssd：SSD云盘
- cloud_essd（默认）：ESSD云盘',
            'type' => 'string',
            'required' => true,
            'example' => 'cloud_essd',
            'enum' => 
            array (
              0 => 'cloud_essd',
              1 => 'cloud_ssd',
            ),
          ),
        ),
        'required' => false,
      ),
      'MigrationJob' => 
      array (
        'title' => 'A short description of struct',
        'type' => 'object',
        'properties' => 
        array (
          'migrationJobId' => 
          array (
            'title' => 'migrationJobId',
            'type' => 'string',
          ),
          'sourceCluster' => 
          array (
            'title' => 'sourceCluster',
            'type' => 'object',
            'properties' => 
            array (
              'type' => 
              array (
                'title' => 'type',
                'type' => 'string',
              ),
              'instanceId' => 
              array (
                'title' => 'instanceId',
                'type' => 'string',
              ),
            ),
          ),
          'targetCluster' => 
          array (
            'title' => 'targetCluster',
            'type' => 'object',
            'properties' => 
            array (
              'type' => 
              array (
                'title' => 'type',
                'type' => 'string',
              ),
              'instanceId' => 
              array (
                'title' => 'type',
                'type' => 'string',
              ),
            ),
          ),
          'currentState' => 
          array (
            'title' => 'currentState',
            'type' => 'string',
          ),
          'statusResult' => 
          array (
            'title' => 'statusResult',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'code' => 
                array (
                  'title' => 'code',
                  'type' => 'string',
                ),
                'success' => 
                array (
                  'title' => 'success',
                  'type' => 'boolean',
                ),
              ),
            ),
          ),
          'phase' => 
          array (
            'title' => 'phase',
            'type' => 'string',
          ),
          'startTime' => 
          array (
            'title' => 'startTime',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'updateTime' => 
          array (
            'title' => 'updateTime',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'endTime' => 
          array (
            'title' => 'endTime',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'disableSourceClusterAuth' => 
          array (
            'title' => 'disableSourceClusterAuth',
            'type' => 'boolean',
          ),
          'disableTargetClusterAuth' => 
          array (
            'title' => 'disableTargetClusterAuth',
            'type' => 'boolean',
          ),
        ),
      ),
      'NetworkConfig' => 
      array (
        'title' => '网络信息',
        'description' => '网络配置信息。',
        'type' => 'object',
        'properties' => 
        array (
          'type' => 
          array (
            'title' => '网络类型',
            'description' => '网络类型，只支持专有网络VPC。',
            'type' => 'string',
            'example' => 'vpc',
          ),
          'vpcId' => 
          array (
            'title' => '专有网络VPC标识',
            'description' => '专有网络ID。',
            'type' => 'string',
            'example' => 'vpc-bp1xk0naij7jx4ph1****',
          ),
          'whiteIpGroupList' => 
          array (
            'title' => 'IP白名单分组列表',
            'description' => 'IP白名单分组配置。createInstance实例创建时无需设置，无法在创建时生效。需要单独使用API设置不同角色的白名单。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'IP白名单分组列表。',
              '$ref' => '#/components/schemas/WhiteIpGroup',
            ),
          ),
          'vswitchId' => 
          array (
            'title' => '专有网络交换机标识',
            'description' => '虚拟交换机ID。',
            'type' => 'string',
            'example' => 'vsw-bp1ogpdintii5qvyx****',
          ),
          'vsArea' => 
          array (
            'title' => '网络所属可用区',
            'description' => '网络所属的可用区ID。',
            'type' => 'string',
            'example' => 'cn-hangzhou-e',
          ),
        ),
      ),
      'NodeInfo' => 
      array (
        'title' => '集群节点信息',
        'description' => '节点信息。',
        'type' => 'object',
        'properties' => 
        array (
          'host' => 
          array (
            'title' => '节点IP',
            'description' => '节点IP地址。',
            'type' => 'string',
            'example' => '172.16.xx.xx',
          ),
          'hostName' => 
          array (
            'title' => '节点名称',
            'description' => '节点名称，仅支持7.16版本基于ACK部署的实例。',
            'type' => 'string',
            'example' => 'es-cn-tl32vdghe0005cd99-data-b-2',
          ),
          'port' => 
          array (
            'title' => '节点端口号',
            'description' => '节点端口号。',
            'type' => 'integer',
            'format' => 'int64',
            'example' => '9200',
          ),
          'zoneId' => 
          array (
            'title' => '节点所在可用区标识',
            'description' => '节点所在可用区ID。',
            'type' => 'string',
            'example' => 'cn-hangzhou-b',
          ),
        ),
      ),
      'NodeSpec' => 
      array (
        'title' => '数据节点配置',
        'description' => '数据节点配置信息。',
        'type' => 'object',
        'properties' => 
        array (
          'diskType' => 
          array (
            'title' => '数据节点磁盘类型',
            'description' => '数据节点存储类型，支持：

- cloud_ssd：SSD云盘
- cloud_essd：ESSD云盘
- cloud_efficiency：高效云盘',
            'type' => 'string',
            'required' => false,
            'example' => 'cloud_ssd',
            'enum' => 
            array (
              0 => 'cloud_essd',
              1 => 'cloud_efficiency',
              2 => 'cloud_ssd',
            ),
          ),
          'spec' => 
          array (
            'title' => '数据节点规格',
            'description' => '数据节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'elasticsearch.sn2ne.large',
            'enum' => 
            array (
              0 => 'elasticsearch.sn1ne.large.new',
              1 => 'elasticsearch.sn2ne.large.new',
              2 => 'elasticsearch.sn1ne.xlarge.new',
              3 => 'elasticsearch.sn2ne.xlarge.new',
              4 => 'elasticsearch.sn1ne.2xlarge.new',
              5 => 'elasticsearch.sn2ne.2xlarge.new',
              6 => 'elasticsearch.sn1ne.4xlarge.new',
              7 => 'elasticsearch.sn2ne.4xlarge.new',
              8 => 'elasticsearch.sn1ne.8xlarge.new',
              9 => 'openstore.hybrid.i2.2xlarge',
              10 => 'openstore.hybrid.i2g.4xlarge',
              11 => 'openstore.i2g.4xlarge',
              12 => 'elasticsearch.sn1ne.large',
              13 => 'elasticsearch.sn2ne.large',
              14 => 'elasticsearch.r5.large',
              15 => 'elasticsearch.ic5.xlarge',
              16 => 'elasticsearch.sn1ne.xlarge',
              17 => 'elasticsearch.sn2ne.xlarge',
              18 => 'elasticsearch.r5.xlarge',
              19 => 'elasticsearch.ic5.2xlarge',
              20 => 'elasticsearch.sn1ne.2xlarge',
              21 => 'elasticsearch.sn2ne.2xlarge',
              22 => 'elasticsearch.r5.2xlarge',
              23 => 'elasticsearch.ic5.3xlarge',
              24 => 'elasticsearch.ic5.4xlarge',
              25 => 'elasticsearch.sn1ne.4xlarge',
              26 => 'elasticsearch.sn2ne.4xlarge',
              27 => 'elasticsearch.r6.4xlarge',
              28 => 'elasticsearch.sn1ne.8xlarge',
              29 => 'elasticsearch.sn2ne.8xlarge',
              30 => 'elasticsearch.r6.8xlarge',
              31 => 'elasticsearch.c6.13xlarge',
              32 => 'elasticsearch.i2g.2xlarge',
              33 => 'elasticsearch.i2g.4xlarge',
              34 => 'elasticsearch.i2.4xlarge',
              35 => 'elasticsearch.i2g.8xlarge',
              36 => 'elasticsearch.d1.2xlarge',
              37 => 'elasticsearch.d1.4xlarge',
              38 => 'elasticsearch.n4.small',
              39 => 'elasticsearch.ic5.large',
            ),
          ),
          'disk' => 
          array (
            'title' => '数据节点磁盘大小',
            'description' => '数据节点存储空间大小，单位为GB。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '20480',
            'minimum' => '20',
            'example' => '20',
          ),
          'diskEncryption' => 
          array (
            'title' => '数据节点磁盘加密',
            'description' => '是否为数据节点开启云盘加密：

- true：开启
- false：不开启',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
          'performanceLevel' => 
          array (
            'title' => '数据节点essd磁盘等级',
            'description' => 'ESSD云盘的性能级别。当数据节点的磁盘类型为ESSD云盘时，必选。支持：PL1、PL2、PL3。',
            'type' => 'string',
            'required' => false,
            'example' => 'PL1',
            'enum' => 
            array (
              0 => 'PL0',
              1 => 'PL1',
              2 => 'PL2',
              3 => 'PL3',
            ),
          ),
        ),
        'required' => false,
      ),
      'PaymentInfo' => 
      array (
        'title' => '预付费信息',
        'description' => '包年包月实例的付费详情。',
        'type' => 'object',
        'properties' => 
        array (
          'duration' => 
          array (
            'title' => '预付费时间数',
            'description' => '购买时间，必选，支持按月和按年购买。',
            'type' => 'integer',
            'format' => 'int64',
            'example' => '1',
          ),
          'pricingCycle' => 
          array (
            'title' => '预付费时间单位',
            'description' => '包年包月单位，必选，可选值：

- Year：年
- Month：月',
            'type' => 'string',
            'example' => 'Month',
          ),
          'isAutoRenew' => 
          array (
            'title' => '到期是否自动续费',
            'description' => '是否开启自动续费设置。可选值：

- true：开启
- false（默认）：不开启',
            'type' => 'boolean',
            'example' => 'true',
          ),
          'autoRenewDuration' => 
          array (
            'title' => '自动续费时间周期',
            'description' => '自动续费周期，单位：月。**isAutoRenew**为**true**时必填，参数值可选范围与售卖页一致。',
            'type' => 'integer',
            'format' => 'int64',
            'example' => '3',
          ),
        ),
      ),
      'ReadWritePolicy' => 
      array (
        'title' => '读写分离设置',
        'description' => '高可用特性的参数配置。',
        'type' => 'object',
        'properties' => 
        array (
          'writeHa' => 
          array (
            'title' => '是否开启读写分离',
            'description' => '是否开启写入高可用特性：

- true：开启
- false：不开启',
            'type' => 'boolean',
            'example' => 'true',
          ),
          'autoGeneratePk' => 
          array (
            'title' => '是否开启自动主键',
            'description' => '无主键时，是否自动生成文档哈希值主键：

- true（默认）：自动生成主键
- false：不会自动生成主键

><notice> autoGeneratePk不可单独修改，只有在writeHa从false更新为true的时候，同时设置autoGeneratePk才生效。
></notice>',
            'type' => 'boolean',
            'example' => 'true',
          ),
          'writePolicy' => 
          array (
            'title' => '读写分离方式',
            'description' => '设置临时切换同步和异步高可用。可选值：

- sync：临时由异步写入高可用切换为同步写入。
- async：临时开启同步写入后，恢复异步写入高可用。

> 只有在开通高可用，即writeHa为true的情况下，设置此字段才有效。设置此字段时不需要同时传入writeHa字段。',
            'type' => 'string',
            'example' => 'sync',
            'enum' => 
            array (
              0 => 'sync',
              1 => 'async',
            ),
          ),
        ),
      ),
      'Tag' => 
      array (
        'title' => '标签',
        'description' => '标签信息。',
        'type' => 'object',
        'properties' => 
        array (
          'tagKey' => 
          array (
            'title' => '标签Key',
            'description' => '标签键。',
            'type' => 'string',
            'example' => 'env',
          ),
          'tagValue' => 
          array (
            'title' => '标签Value',
            'description' => '标签值。',
            'type' => 'string',
            'example' => 'dev',
          ),
        ),
      ),
      'WarmNodeConfiguration' => 
      array (
        'title' => '集群节点设置',
        'description' => '冷数据节点配置信息。',
        'type' => 'object',
        'properties' => 
        array (
          'diskType' => 
          array (
            'title' => '节点磁盘类型',
            'description' => '冷数据节点存储类型，仅支持cloud_efficiency（高效云盘）。',
            'type' => 'string',
            'required' => false,
            'example' => 'cloud_efficiency',
            'enum' => 
            array (
              0 => 'cloud_efficiency',
            ),
          ),
          'diskEncryption' => 
          array (
            'title' => '节点磁盘加密',
            'description' => '是否为冷数据节点开启云盘加密：

- true：开启
- false：不开启',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
          'amount' => 
          array (
            'title' => '节点数量',
            'description' => '冷数据节点数量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '3',
          ),
          'spec' => 
          array (
            'title' => '节点规格',
            'description' => '冷数据节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
            'type' => 'string',
            'required' => true,
            'example' => 'elasticsearch.sn2ne.large',
            'enum' => 
            array (
              0 => 'elasticsearch.sn1ne.large.new',
              1 => 'elasticsearch.sn2ne.large.new',
              2 => 'elasticsearch.sn1ne.xlarge.new',
              3 => 'elasticsearch.sn2ne.xlarge.new',
              4 => 'elasticsearch.sn1ne.2xlarge.new',
              5 => 'elasticsearch.sn2ne.2xlarge.new',
              6 => 'elasticsearch.sn1ne.4xlarge.new',
              7 => 'elasticsearch.sn2ne.4xlarge.new',
              8 => 'elasticsearch.sn1ne.8xlarge.new',
              9 => 'elasticsearch.ic5.large',
              10 => 'elasticsearch.sn1ne.large',
              11 => 'elasticsearch.sn2ne.large',
              12 => 'elasticsearch.r5.large',
              13 => 'elasticsearch.ic5.xlarge',
              14 => 'elasticsearch.sn1ne.xlarge',
              15 => 'elasticsearch.sn2ne.xlarge',
              16 => 'elasticsearch.r5.xlarge',
              17 => 'elasticsearch.ic5.2xlarge',
              18 => 'elasticsearch.sn1ne.2xlarge',
              19 => 'elasticsearch.sn2ne.2xlarge',
              20 => 'elasticsearch.r5.2xlarge',
              21 => 'elasticsearch.ic5.3xlarge',
              22 => 'elasticsearch.ic5.4xlarge',
              23 => 'elasticsearch.sn1ne.4xlarge',
              24 => 'elasticsearch.sn2ne.4xlarge',
              25 => 'openstore.i2g.4xlarge',
              26 => 'elasticsearch.r6.4xlarge',
              27 => 'elasticsearch.sn1ne.8xlarge',
              28 => 'elasticsearch.sn2ne.8xlarge',
              29 => 'elasticsearch.r6.8xlarge',
              30 => 'group.c6.large.200',
              31 => 'group.c6.large.500',
              32 => 'group.c6.large.1t',
              33 => 'group.g6.large.1t',
              34 => 'group.g6.large.2t',
              35 => 'group.g6.xlarge.2t',
              36 => 'group.g6.xlarge.4t',
              37 => 'group.g6.2xlarge.4t',
              38 => 'group.g6.2xlarge.8t',
              39 => 'group.c6.4xlarge.8t',
              40 => 'group.c6.4xlarge.16t',
              41 => 'elasticsearch.d1.2xlarge',
              42 => 'elasticsearch.d1.4xlarge',
              43 => 'elasticsearch.d2s.5xlarge',
            ),
          ),
          'disk' => 
          array (
            'title' => '节点磁盘',
            'description' => '冷数据节点存储空间大小，单位为GB。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '20480',
            'minimum' => '500',
            'example' => '500',
          ),
          'performanceLevel' => 
          array (
            'title' => '节点essd磁盘等级',
            'description' => 'ESSD云盘的性能级别。当冷数据节点的磁盘类型为ESSD云盘时，必选。支持：PL1、PL2、PL3。',
            'type' => 'string',
            'required' => false,
            'example' => 'PL1',
            'enum' => 
            array (
              0 => 'PL0',
              1 => 'PL1',
              2 => 'PL2',
              3 => 'PL3',
            ),
          ),
        ),
        'required' => false,
      ),
      'WhiteIpGroup' => 
      array (
        'title' => 'IP白名单分组',
        'description' => 'IP白名单分组。',
        'type' => 'object',
        'properties' => 
        array (
          'groupName' => 
          array (
            'title' => 'IP白名单分组名称',
            'description' => 'IP白名单分组名称。',
            'type' => 'string',
            'example' => 'test_group',
          ),
          'WhiteIpType' => 
          array (
            'title' => 'IP白名单分组类型',
            'description' => 'IP白名单的类型，支持：

- PRIVATE_ES：Elasticsearch私网访问白名单
- PUBLIC_ES：Elasticsearch公网访问白名单
- PRIVATE_KIBANA：Kibana私网访问白名单
- PUBLIC_KIBANA：Kibana公网访问白名单',
            'type' => 'string',
            'example' => 'PRIVATE_ES',
          ),
          'ips' => 
          array (
            'title' => 'IP白名单列表',
            'description' => '白名单组中的IP白名单列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '白名单组中的IP白名单列表。',
              'type' => 'string',
              'example' => '["10.2.xx.xx", "10.3.xx.xx"]',
            ),
          ),
        ),
      ),
      'ZoneInfo' => 
      array (
        'title' => '可用区信息',
        'description' => '可用区信息。',
        'type' => 'object',
        'properties' => 
        array (
          'status' => 
          array (
            'title' => '可用区状态',
            'description' => '可用区状态，支持：

- ISOLATION：下线
- NORMAL：正常',
            'type' => 'string',
            'example' => 'NORMAL',
          ),
          'zoneId' => 
          array (
            'title' => '可用区唯一标识',
            'description' => '可用区ID，为可用区的唯一标识。',
            'type' => 'string',
            'example' => 'cn-hangzhou-b',
          ),
        ),
      ),
    ),
  ),
  'apis' => 
  array (
    'DescribeApm' => 
    array (
      'summary' => '查看APM实例详情。',
      'path' => '/openapi/apm/{instanceId}',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'instanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'apm-cn-2r42fhp5****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '实例详情。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '97597D87-8066-5493-B692-5C50DA236D68',
              ),
              'Result' => 
              array (
                'description' => '请求结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'apmServerDomain' => 
                  array (
                    'description' => '实例域名。',
                    'type' => 'string',
                    'example' => 'apm-cn-i7m2fuae****.apm.elasticsearch.aliyuncs.com:8200',
                  ),
                  'createdAt' => 
                  array (
                    'description' => '创建时间。',
                    'type' => 'string',
                    'example' => '2021-11-16T07:15:51.967Z',
                  ),
                  'deployedReplica' => 
                  array (
                    'description' => '已发布的副本数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'description' => 
                  array (
                    'description' => '实例名称。',
                    'type' => 'string',
                    'example' => 'APMtest',
                  ),
                  'endTime' => 
                  array (
                    'description' => '实例到期时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '4792752000000',
                  ),
                  'instanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'apm-cn-i7m2fuae****',
                  ),
                  'nodeAmount' => 
                  array (
                    'description' => '节点数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'outputES' => 
                  array (
                    'description' => '关联的Elasticsearch实例。',
                    'type' => 'string',
                    'example' => 'es-cn-i7m2fsfhc001x****',
                  ),
                  'outputESUserName' => 
                  array (
                    'description' => '关联的Elasticsearch实例的用户名。',
                    'type' => 'string',
                    'example' => 'elastic',
                  ),
                  'ownerId' => 
                  array (
                    'description' => '用户账号ID。',
                    'type' => 'string',
                    'example' => '133071096032****',
                  ),
                  'paymentType' => 
                  array (
                    'description' => '付费方式，取值如下：

- postpaid：按量付费。

- prepaid：包年包月。',
                    'type' => 'string',
                    'example' => 'postpaid',
                  ),
                  'region' => 
                  array (
                    'description' => '地域。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'replica' => 
                  array (
                    'description' => '副本数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'resourceSpec' => 
                  array (
                    'description' => '规格，取值如下：

- C1M2（1核2 GB）

- C2M4（2核4 GB）',
                    'type' => 'string',
                    'example' => 'C1M2',
                  ),
                  'status' => 
                  array (
                    'description' => '生命周期状态，取值如下：

- CREATING：创建中。

- ACTIVATING：生效中。

- ACTIVE：正常。

- INACTIVE：冻结。

- INVALID：失效。',
                    'type' => 'string',
                    'example' => 'active',
                  ),
                  'version' => 
                  array (
                    'description' => '版本信息。',
                    'type' => 'string',
                    'example' => '7.10.2',
                  ),
                  'vpcId' => 
                  array (
                    'description' => '专有网络ID。',
                    'type' => 'string',
                    'example' => 'vpc-bp1530vdhqkamm9s0****',
                  ),
                  'vsArea' => 
                  array (
                    'description' => '交换机所在的可用区。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou-i',
                  ),
                  'vswitchId' => 
                  array (
                    'description' => '交换机ID。',
                    'type' => 'string',
                    'example' => 'vsw-bp1j1mql6r9g5vfb4****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"97597D87-8066-5493-B692-5C50DA236D68\\",\\n  \\"Result\\": {\\n    \\"apmServerDomain\\": \\"apm-cn-i7m2fuae****.apm.elasticsearch.aliyuncs.com:8200\\",\\n    \\"createdAt\\": \\"2021-11-16T07:15:51.967Z\\",\\n    \\"deployedReplica\\": 1,\\n    \\"description\\": \\"APMtest\\",\\n    \\"endTime\\": 4792752000000,\\n    \\"instanceId\\": \\"apm-cn-i7m2fuae****\\",\\n    \\"nodeAmount\\": 1,\\n    \\"outputES\\": \\"es-cn-i7m2fsfhc001x****\\",\\n    \\"outputESUserName\\": \\"elastic\\",\\n    \\"ownerId\\": \\"133071096032****\\",\\n    \\"paymentType\\": \\"postpaid\\",\\n    \\"region\\": \\"cn-hangzhou\\",\\n    \\"replica\\": 1,\\n    \\"resourceSpec\\": \\"C1M2\\",\\n    \\"status\\": \\"active\\",\\n    \\"version\\": \\"7.10.2\\",\\n    \\"vpcId\\": \\"vpc-bp1530vdhqkamm9s0****\\",\\n    \\"vsArea\\": \\"cn-hangzhou-i\\",\\n    \\"vswitchId\\": \\"vsw-bp1j1mql6r9g5vfb4****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'APM实例详情',
    ),
    'RemoveApm' => 
    array (
      'summary' => '删除已经创建完成的APM实例。',
      'path' => '/openapi/apm/{instanceId}',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'instanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'apm-cn-7pp2fsi2****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '29A879FB-86BF-54CA-9426-B769A099E1A1',
              ),
              'Result' => 
              array (
                'description' => '删除是否成功。取值如下：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"29A879FB-86BF-54CA-9426-B769A099E1A1\\",\\n  \\"Result\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '删除APM实例',
    ),
    'StartApm' => 
    array (
      'summary' => '启动APM Server实例，代理数据。',
      'path' => '/openapi/apm/{instanceId}/actions/start',
      'methods' => 
      array (
        0 => 'post',
        1 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'instanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID，可调用[ListApm](~~348721~~)获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'apm-cn-7mz2ffhq****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '526F30AB-4A43-55BA-910F-ACD275FD5F14',
              ),
              'Result' => 
              array (
                'description' => '启动是否成功。取值如下：

- true：成功。

- false：失败。
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"526F30AB-4A43-55BA-910F-ACD275FD5F14\\",\\n  \\"Result\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '启动APM实例',
    ),
    'StopApm' => 
    array (
      'summary' => '停止APM Server，停止APM代理上传数据。',
      'path' => '/openapi/apm/{instanceId}/actions/stop',
      'methods' => 
      array (
        0 => 'post',
        1 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'instanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'apm-cn-7mz2ffhq****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FEC32FE6-4697-5110-9668-C6016EAEB5DE',
              ),
              'Result' => 
              array (
                'description' => '停止是否成功。取值如下：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FEC32FE6-4697-5110-9668-C6016EAEB5DE\\",\\n  \\"Result\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '停止APM 实例',
    ),
    'UpdateApm' => 
    array (
      'summary' => '修改APM Server实例配置信息。',
      'path' => '/openapi/apm/{instanceId}',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'instanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'APM Server实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'apm-cn-i7m2fuae****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '请求体',
            'description' => '修改信息。',
            'type' => 'object',
            'properties' => 
            array (
              'outputES' => 
              array (
                'title' => 'es实例id',
                'description' => '关联的Elasticsearch实例ID。',
                'type' => 'string',
                'required' => false,
                'example' => 'es-cn-i7m2fsfhc001x****',
              ),
              'outputESUserName' => 
              array (
                'title' => 'es实例用户名',
                'description' => '关联的Elasticsearch实例的用户名。',
                'type' => 'string',
                'required' => false,
                'example' => 'elastic',
              ),
              'outputESPassword' => 
              array (
                'title' => 'es实例密码',
                'description' => '关联的Elasticsearch实例的登录密码。',
                'type' => 'string',
                'required' => false,
                'example' => 'ESPassword****',
              ),
              'token' => 
              array (
                'title' => 'apm server密码',
                'description' => 'APM Server实例的登录密码。',
                'type' => 'string',
                'required' => false,
                'example' => 'AMPPassword****',
              ),
              'description' => 
              array (
                'title' => 'apm实例名',
                'description' => 'APM Server实例的名称。',
                'type' => 'string',
                'required' => false,
                'example' => 'APMtest',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '18061926-CC50-5F9B-9600-034C29F1D5B0',
              ),
              'Result' => 
              array (
                'description' => '修改是否成功。取值如下：

- true：成功。

- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"18061926-CC50-5F9B-9600-034C29F1D5B0\\",\\n  \\"Result\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改APM Server配置',
    ),
    'ListApm' => 
    array (
      'summary' => '查看APM实例列表。',
      'path' => '/openapi/apm',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'APMtest',
          ),
        ),
        1 => 
        array (
          'name' => 'instanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'apm-cn-i7m2fuae****',
          ),
        ),
        2 => 
        array (
          'name' => 'output',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联的Elasticsearch实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'es-cn-i7m2fsfhc001x****',
          ),
        ),
        3 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例列表的页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页条数。默认值：20。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '实例信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '080D3399-76CF-519D-A540-2C44BC056EB7',
              ),
              'Headers' => 
              array (
                'description' => '消息头。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '返回的记录数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '实例详细信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'createdAt' => 
                    array (
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2021-11-16T07:15:51.967Z',
                    ),
                    'deployedReplica' => 
                    array (
                      'description' => '已发布的副本数。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'description' => 
                    array (
                      'description' => '实例名称。',
                      'type' => 'string',
                      'example' => 'APMtest',
                    ),
                    'instanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'apm-cn-i7m2fuae****',
                    ),
                    'nodeAmount' => 
                    array (
                      'description' => '节点数量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'outputES' => 
                    array (
                      'description' => '关联的Elasticsearch实例ID。',
                      'type' => 'string',
                      'example' => 'es-cn-i7m2fsfhc001x****',
                    ),
                    'outputESUserName' => 
                    array (
                      'description' => '关联的Elasticsearch实例用户名。',
                      'type' => 'string',
                      'example' => 'elastic',
                    ),
                    'ownerId' => 
                    array (
                      'description' => '用户账号ID。',
                      'type' => 'string',
                      'example' => '133071096032****',
                    ),
                    'paymentType' => 
                    array (
                      'description' => '付费方式，取值如下：

- postpaid：按量付费。

- prepaid：包年包月。',
                      'type' => 'string',
                      'example' => 'postpaid',
                    ),
                    'region' => 
                    array (
                      'description' => '地域。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'replica' => 
                    array (
                      'description' => '副本数。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'resourceSpec' => 
                    array (
                      'description' => '规格，取值如下：

- C1M2（1核2 GB）

- C2M4（2核4 GB）',
                      'type' => 'string',
                      'example' => 'C1M2',
                    ),
                    'status' => 
                    array (
                      'description' => '生命周期状态，支持：

- creating：创建中。
- activating：生效中。
- active：正常。
- inactive：冻结。
- invalid：失效。',
                      'type' => 'string',
                      'example' => 'active',
                    ),
                    'version' => 
                    array (
                      'description' => '版本信息。',
                      'type' => 'string',
                      'example' => '7.10.2',
                    ),
                    'vpcId' => 
                    array (
                      'description' => '专有网络ID。',
                      'type' => 'string',
                      'example' => 'vpc-bp1530vdhqkamm9s0****',
                    ),
                    'vsArea' => 
                    array (
                      'description' => '交换机所在的可用区。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou-i',
                    ),
                    'vswitchId' => 
                    array (
                      'description' => '交换机ID。',
                      'type' => 'string',
                      'example' => 'vsw-bp1j1mql6r9g5vfb4****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"080D3399-76CF-519D-A540-2C44BC056EB7\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 1\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"createdAt\\": \\"2021-11-16T07:15:51.967Z\\",\\n      \\"deployedReplica\\": 1,\\n      \\"description\\": \\"APMtest\\",\\n      \\"instanceId\\": \\"apm-cn-i7m2fuae****\\",\\n      \\"nodeAmount\\": 1,\\n      \\"outputES\\": \\"es-cn-i7m2fsfhc001x****\\",\\n      \\"outputESUserName\\": \\"elastic\\",\\n      \\"ownerId\\": \\"133071096032****\\",\\n      \\"paymentType\\": \\"postpaid\\",\\n      \\"region\\": \\"cn-hangzhou\\",\\n      \\"replica\\": 1,\\n      \\"resourceSpec\\": \\"C1M2\\",\\n      \\"status\\": \\"active\\",\\n      \\"version\\": \\"7.10.2\\",\\n      \\"vpcId\\": \\"vpc-bp1530vdhqkamm9s0****\\",\\n      \\"vsArea\\": \\"cn-hangzhou-i\\",\\n      \\"vswitchId\\": \\"vsw-bp1j1mql6r9g5vfb4****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'APM实例列表',
    ),
    'CloseManagedIndex' => 
    array (
      'summary' => '关闭Indexing Service集群中某个索引的云端托管功能。此功能不可逆，关闭后无法再开启。',
      'path' => '/openapi/instances/{InstanceId}/indices/{Index}/close-managed',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-m7r24d27d007q****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'Index',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '索引名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test-index1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '是否成功关闭索引的云端托管：

- true：成功

- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '关闭索引托管',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateDataStream' => 
    array (
      'summary' => '创建数据流，管理一批索引。',
      'path' => '/openapi/instances/{InstanceId}/data-streams',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif24adwc0082****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF***',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
              'Result' => 
              array (
                'description' => '返回创建的数据流名称。',
                'type' => 'object',
                'properties' => 
                array (
                  'name' => 
                  array (
                    'description' => '数据流名称。',
                    'type' => 'string',
                    'example' => 'ds-',
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\",\\n  \\"Result\\": {\\n    \\"name\\": \\"ds-\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '创建数据流',
      'description' => '> 您创建的数据流名称需要与索引模板中的索引模式一一对应，且该索引模板已开启数据流。例如：索引模板中的索引模式为ds-*，则对应的数据流名称应该为ds-。',
      'requestParamsDescription' => 'RequestBody中需要填入以下参数，用来指定待创建数据流。
|参数|类型|是否必填|示例值|描述|
| --- | --- | --- | --- |--- |
|name|String|是|ds-|数据流名称。|',
      'responseParamsDescription' => '>- 当系统返回【DatastreamUnmatchedIndexTemplateError】消息时，表示数据流没有匹配的索引模板，请修改数据流名称，或前往索引模板管理进行创建或修改。- 当系统返回【DatastreamDuplicatedError】消息时，表示数据流已经存在时，请重新命名，或前往索引模板管理进行创建或修改。',
      'extraInfo' => ' ',
    ),
    'CreateILMPolicy' => 
    array (
      'summary' => '创建索引生命周期策略，如果创建的策略名已经存在，则替换成该策略并递增版本。',
      'path' => '/openapi/instances/{InstanceId}/ilm-policies',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-m7r23wodb006n****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '请求返回的创建的生命周期的名称。',
                'type' => 'string',
                'example' => 'my-policy',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": \\"my-policy\\",\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '创建索引生命周期策略',
      'requestParamsDescription' => '## RequestBody
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|name|String|my-policy |是|索引生命周期策略名称。|
|phases|Map| |否|索引生命周期策略内容。详情请参见**phases字段数据结构说明**。|

**phases字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|{key}|Struct| |否|当前生命周期阶段，支持以下三种阶段：hot（热数据阶段，正在积极更新和查询索引）；cold（冷数据阶段，索引不再被更新并且很少被查询。信息仍然需要可搜索，但是如果这些查询速度较慢也可以。）；delete（删除阶段，不再需要该索引，可以安全地将其删除）。|
|minAge|String|30d|否|索引到达目标阶段所需要的时间。|
|actions|Struct| |否|当前阶段策略设置。详情请参见**actions字段数据结构说明**。|

**actions字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|rollver|Struct| |否|hot阶段的索引滚动更新操作。详情请参见**rollver字段数据结构说明**。|
|setPriority|Struct| |否|hot或cold阶段的索引优先级。详情请参见**setPriority字段数据结构说明**。|
|allocate|Struct| |否|cold阶段的分配操作。详情请参见**allocate字段数据结构说明**。|
|delete|Struct| {} |否|删除索引操作。delete阶段开启时，属性必传，为空对象。|

**rollver字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|maxAge|String|30d|否|触发滚动索引所需要的时间阈值。maxAge、maxDocs和maxSize三者中至少选填一个。单位：d（天）或者h（小时）。 |
|maxDocs|Integer|10000|否|触发滚动索引所需要的文档数量的阈值。|
|maxSize|String|50gb|否|触发滚动索引所需要的索引大小的阈值。maxAge、maxDocs和maxSize三者中至少选填一个。单位：MB或者GB。|

**setPriority字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|priority|Integer|100|否|当前节点默认的优先级。|

**allocate字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|numberOfReplicas|Integer|1|否|分配指定的副本数，如果设置，则默认值为1。与migrate配合使用，开启自动迁移时，默认进行副本数分配。|
|require |Struct| |否|可选设置，冷热分离架构集群可用。详情请参见**require字段数据结构说明**。|

**require字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|boxType|String|warm|否|自定义节点属性标识，冷热分离架构集群可用，迁移至冷节点。可选值：warm。|',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateIndexTemplate' => 
    array (
      'summary' => '创建集群索引模板，可用于索引模版的组件化设置。',
      'path' => '/openapi/instances/{InstanceId}/index-templates',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w24n9u900am****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'E1136AE9-4E49-4585-9358-6FDD2A6D****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体参数，用来指定待创建的集群索引模板的信息。',
            'type' => 'object',
            'properties' => 
            array (
              'indexTemplate' => 
              array (
                'title' => '索引模版名称',
                'description' => '索引模版名称。',
                'type' => 'string',
                'required' => true,
                'example' => 'index-template',
              ),
              'indexPatterns' => 
              array (
                'title' => '索引匹配模式正则',
                'description' => '索引匹配模式正则。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '索引匹配模式正则元素',
                  'description' => '索引匹配模式正则。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '["schema1*","schema2*"]',
                ),
                'required' => true,
                'minItems' => 1,
              ),
              'dataStream' => 
              array (
                'title' => '是否同时自动创建数据流',
                'description' => '是否开启数据流。可选值：

- true：开启
- false（默认）：不开启
',
                'type' => 'boolean',
                'required' => true,
                'example' => 'false',
              ),
              'priority' => 
              array (
                'title' => '优先级。数组越大，优先级越高。',
                'description' => '集群索引模板的优先级。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'maximum' => '2147483647',
                'minimum' => '0',
                'example' => '30',
                'default' => '0',
              ),
              'ilmPolicy' => 
              array (
                'title' => '生命周期策略名称',
                'description' => '生命周期策略名称。',
                'type' => 'string',
                'required' => false,
                'example' => 'policy-1',
              ),
              'template' => 
              array (
                'title' => '模版设置。详情见：https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-put-template.html#multiple-component-templates',
                'description' => '模版设置，详细信息请参见[官方Multiple Component Templates文档](https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-put-template.html#multiple-component-templates)。',
                'type' => 'object',
                'properties' => 
                array (
                  'settings' => 
                  array (
                    'title' => 'settings设置',
                    'description' => 'settings设置。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '{\\"index.number_of_shards\\":\\"1\\"}',
                  ),
                  'mappings' => 
                  array (
                    'title' => 'mappings设置',
                    'description' => 'mappings设置。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '{\\"properties\\":{\\"created_at\\":{\\"format\\":\\"EEE MMM dd HH:mm:ss Z yyyy\\",\\"type\\":\\"date\\"},\\"host_name\\":{\\"type\\":\\"keyword\\"}}}',
                  ),
                  'aliases' => 
                  array (
                    'title' => 'aliases设置',
                    'description' => 'aliases设置。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '{\\"mydata\\":{}}',
                  ),
                ),
                'required' => false,
              ),
            ),
            'required' => false,
            'docRequired' => false,
            'example' => '{     "indexTemplate": "index-template",      "indexPatterns": [         "schema1*",          "schema2*"     ],      "dataStream": true,      "priority": 30,      "ilmPolicy": "policy-1",      "template": {         "settings": "{\\"index.number_of_shards\\":\\"1\\"}",          "mappings": "{\\"properties\\":{\\"created_at\\":{\\"format\\":\\"EEE MMM dd HH:mm:ss Z yyyy\\",\\"type\\":\\"date\\"},\\"host_name\\":{\\"type\\":\\"keyword\\"}}}",          "aliases": "{\\"mydata\\":{}}"     } }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'title' => '索引模版名称',
                'description' => '返回创建集群索引模板的名称。',
                'type' => 'string',
                'example' => 'index-template',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": \\"index-template\\",\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '创建索引模版',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDataStream' => 
    array (
      'summary' => '删除指定的集群数据流。',
      'path' => '/openapi/instances/{InstanceId}/data-streams/{DataStream}',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif24adwc0082****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'DataStream',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '数据流名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ds-001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：删除数据流成功。

- false：删除数据流失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '删除数据流',
      'description' => '> - 删除数据流的同时会删除其对应的后备索引，请谨慎操作。- 索引模板存在关联的数据流时，需要先删除关联该索引模板的数据流，才能删除索引模板。在数据流列表页需要查看数据流详情，才能找到数据流匹配的索引模板。
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteILMPolicy' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/ilm-policies/{PolicyName}',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '64235',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREelasticsearchFBYZT8',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif24adwc0082****',
          ),
        ),
        1 => 
        array (
          'name' => 'PolicyName',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '索引生命周期策略名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'slm-history-ilm-policy',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：成功删除指定的生命周期策略定义。

- false：删除指定的生命周期策略定义失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '694FDC20-0FDD-47C4-B921-BFF902FA****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"694FDC20-0FDD-47C4-B921-BFF902FA****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '删除索引生命周期策略',
      'summary' => '删除指定的索引生命周期策略。',
      'description' => '> 您无法删除当前正在使用的策略。如果该策略正用于管理任一索引，则请求将失败并返回错误。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteIndexTemplate' => 
    array (
      'summary' => '删除置顶的索引模版。',
      'path' => '/openapi/instances/{InstanceId}/index-templates/{IndexTemplate}',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif24adwc0082****',
          ),
        ),
        1 => 
        array (
          'name' => 'IndexTemplate',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '索引模板名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'index-name',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：删除索引模板成功。

- false：删除索引模板失败。

',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A0761F7E-0B50-46B9-8CAA-EBB3A420****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"A0761F7E-0B50-46B9-8CAA-EBB3A420****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '删除索引模板',
      'description' => '> 删除索引模板前，请先删除关联该索引模板的数据流。否则，将无法删除对应的索引模板。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeILMPolicy' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/ilm-policies/{PolicyName}',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif24adwc0082****',
          ),
        ),
        1 => 
        array (
          'name' => 'PolicyName',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '索引生命周期策略名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'policy-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FF44681E-FD41-4FDE-B8DF-295DCDD6****',
              ),
              'Result' => 
              array (
                'description' => '指定索引生命周期的详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'name' => 
                  array (
                    'description' => '索引生命周期名称。',
                    'type' => 'string',
                    'example' => 'ilm-history-ilm-policy',
                  ),
                  'phases' => 
                  array (
                    'description' => '索引生命周期内容。',
                    'type' => 'object',
                    'example' => '{"cold":{"minAge":"30d","actions":{"allocate":{"numberOfReplicas":1,"require":{"boxType":"warm"}},"setPriority":{"priority":100}}},"hot":{"minAge":"0s","actions":{"rollover":{"maxAge":"30d","maxDocs":10000,"maxSize":"50gb"},"setPriority":{"priority":1000}}},"delete":{"minAge":"30d","actions":{"delete":{}}}}',
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FF44681E-FD41-4FDE-B8DF-295DCDD6****\\",\\n  \\"Result\\": {\\n    \\"name\\": \\"ilm-history-ilm-policy\\",\\n    \\"phases\\": {\\n      \\"cold\\": {\\n        \\"minAge\\": \\"30d\\",\\n        \\"actions\\": {\\n          \\"allocate\\": {\\n            \\"numberOfReplicas\\": 1,\\n            \\"require\\": {\\n              \\"boxType\\": \\"warm\\"\\n            }\\n          },\\n          \\"setPriority\\": {\\n            \\"priority\\": 100\\n          }\\n        }\\n      },\\n      \\"hot\\": {\\n        \\"minAge\\": \\"0s\\",\\n        \\"actions\\": {\\n          \\"rollover\\": {\\n            \\"maxAge\\": \\"30d\\",\\n            \\"maxDocs\\": 10000,\\n            \\"maxSize\\": \\"50gb\\"\\n          },\\n          \\"setPriority\\": {\\n            \\"priority\\": 1000\\n          }\\n        }\\n      },\\n      \\"delete\\": {\\n        \\"minAge\\": \\"30d\\",\\n        \\"actions\\": {\\n          \\"delete\\": {}\\n        }\\n      }\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查询索引生命周期详情',
      'summary' => '查询指定索引生命周期详情。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => '**phases字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|{key}|Struct| |否|当前生命周期阶段，支持以下三种阶段：<br>hot（热数据阶段，正在积极更新和查询索引）；<br>cold（冷数据阶段，索引不再被更新并且很少被查询。信息仍然需要可搜索，但是如果这些查询速度较慢也可以。）；<br>delete（删除阶段，不再需要该索引，可以安全地将其删除）。|
|minAge|String|30d|否|索引到达目标阶段所需要的时间。|
|actions|Struct| |否|当前阶段策略设置。详情请参见下方的**actions字段数据结构说明**。|

**actions字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|rollover|Struct| |否|hot阶段的索引滚动更新操作。详情请参见下方的**rollover字段数据结构说明**。|
|setPriority|Struct| |否|hot或cold阶段的索引优先级。详情请参见下方的**setPriority字段数据结构说明**。|
|allocate|Struct| |否|cold阶段的分配操作。详情请参见下方的**allocate字段数据结构说明**。|
|delete|Struct| {} |否|删除索引操作。delete阶段开启时，属性必传，为空对象。|

**rollover字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|maxAge|String|30d|否|触发滚动索引所需要的时间阈值。maxAge、maxDocs和maxSize三者中至少选填一个。单位：d（天）或者h（小时）。 |
|maxDocs|Integer|10000|否|触发滚动索引所需要的文档数量的阈值。|
|maxSize|String|50gb|否|触发滚动索引所需要的索引大小的阈值。maxAge、maxDocs和maxSize三者中至少选填一个。单位：mb或者gb。|

**setPriority字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|priority|Integer|100|否|当前节点默认的优先级。|

**allocate字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|numberOfReplicas|Integer|1|否|分配指定的副本数，如果设置，则默认值为1。与migrate配合使用，开启自动迁移时，默认进行副本数分配。|
|require |Struct| |否|可选设置，冷热分离架构集群可用。详情请参见下方的**require字段数据结构说明**。|

**require字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|boxType|String|warm|否|自定义节点属性标识，冷热分离架构集群可用，迁移至冷节点。可选值：warm。|
',
      'extraInfo' => ' ',
    ),
    'DescribeIndexTemplate' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/index-templates/{IndexTemplate}',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w24n9u900am****',
          ),
        ),
        1 => 
        array (
          'name' => 'IndexTemplate',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '索引模版名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'data-stream-default',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '25DB38F8-82E4-4D16-82BB-FF077C7F****',
              ),
              'Result' => 
              array (
                'description' => '返回索引模板详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'dataStream' => 
                  array (
                    'description' => '是否开启数据流：

- true：开启

- false：不开启

默认值：false（不开启）。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'indexTemplate' => 
                  array (
                    'description' => '索引模版名称。',
                    'type' => 'string',
                    'example' => 'data-stream-default',
                  ),
                  'ilmPolicy' => 
                  array (
                    'description' => '生命周期策略名称。',
                    'type' => 'string',
                    'example' => 'cube_default_ilm_policy',
                  ),
                  'priority' => 
                  array (
                    'description' => '优先级。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'indexPatterns' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '索引匹配模式正则。',
                      'type' => 'string',
                      'example' => 'ds-*',
                    ),
                  ),
                  'template' => 
                  array (
                    'description' => '组件模版。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'settings' => 
                      array (
                        'description' => 'settings设置。',
                        'type' => 'string',
                        'example' => '{\\"index.refresh_interval\\":\\"1s\\"}',
                      ),
                      'mappings' => 
                      array (
                        'description' => 'mappings设置。',
                        'type' => 'string',
                        'example' => '{\\"properties\\":{\\"created_at\\":{\\"format\\":\\"EEE MMM dd HH:mm:ss Z yyyy\\",\\"type\\":\\"date\\"},\\"host_name\\":{\\"type\\":\\"keyword\\"}}}',
                      ),
                      'aliases' => 
                      array (
                        'description' => 'aliases设置。',
                        'type' => 'string',
                        'example' => '{\\"mydata\\":{}}',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"25DB38F8-82E4-4D16-82BB-FF077C7F****\\",\\n  \\"Result\\": {\\n    \\"dataStream\\": true,\\n    \\"indexTemplate\\": \\"data-stream-default\\",\\n    \\"ilmPolicy\\": \\"cube_default_ilm_policy\\",\\n    \\"priority\\": 0,\\n    \\"indexPatterns\\": [\\n      \\"ds-*\\"\\n    ],\\n    \\"template\\": {\\n      \\"settings\\": \\"{\\\\\\\\\\\\\\"index.refresh_interval\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1s\\\\\\\\\\\\\\"}\\",\\n      \\"mappings\\": \\"{\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"created_at\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"EEE MMM dd HH:mm:ss Z yyyy\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"host_name\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"keyword\\\\\\\\\\\\\\"}}}\\",\\n      \\"aliases\\": \\"{\\\\\\\\\\\\\\"mydata\\\\\\\\\\\\\\":{}}\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查看索引模版信息',
      'summary' => '返回有关一个索引模板的信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDataStreams' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/data-streams',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif24adwc0082****',
          ),
        ),
        1 => 
        array (
          'name' => 'isManaged',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只显示托管中的索引，取值含义如下：

- true：只显示托管中的索引。

- false（默认值）：显示全部索引。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据流名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'Log1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Managed-StorageSize' => 
                  array (
                    'description' => '索引存储总大小，单位：Byte。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '143993923932990',
                  ),
                  'X-Managed-Count' => 
                  array (
                    'description' => '数据流总个数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '返回的数据流详情。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'totalStorageSize' => 
                    array (
                      'description' => '当前数据流下的全部索引，所占用的总存储空间。单位：Byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1788239393298',
                    ),
                    'indexTemplateName' => 
                    array (
                      'description' => '索引模版名称。',
                      'type' => 'string',
                      'example' => 'template1',
                    ),
                    'ilmPolicyName' => 
                    array (
                      'description' => '生命周期策略名称。',
                      'type' => 'string',
                      'example' => 'rollver1',
                    ),
                    'name' => 
                    array (
                      'description' => '索引名称。',
                      'type' => 'string',
                      'example' => 'my-index-0001',
                    ),
                    'health' => 
                    array (
                      'description' => '数据流状态，支持以下三种状态：

- Green：健康。

- Yellow：报警。

- Red：异常。',
                      'type' => 'string',
                      'example' => 'Green',
                    ),
                    'managedStorageSize' => 
                    array (
                      'description' => '当前数据流下的托管索引，所占用的总存储空间。单位：Byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1788239393298',
                    ),
                    'indices' => 
                    array (
                      'description' => '当前数据流下的索引信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'isManaged' => 
                          array (
                            'description' => '该字段已废弃，无需关注。',
                            'type' => 'boolean',
                            'example' => 'false',
                          ),
                          'createTime' => 
                          array (
                            'description' => '查询数据流列表的时间。',
                            'type' => 'string',
                            'example' => '2018-07-13T03:58:07.253Z',
                          ),
                          'size' => 
                          array (
                            'description' => '当前索引所占用的总存储空间。单位：Byte。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '15393899',
                          ),
                          'managedStatus' => 
                          array (
                            'description' => '索引托管状态，支持以下三种状态：
- following：托管中。

- closing：取消托管中。

- closed：未托管。',
                            'type' => 'string',
                            'example' => 'following',
                          ),
                          'name' => 
                          array (
                            'description' => '数据流名称。',
                            'type' => 'string',
                            'example' => 'Log1',
                          ),
                          'health' => 
                          array (
                            'description' => '索引状态，支持以下三种状态：

- Green：健康。

- Yellow：报警。

- Red：异常。',
                            'type' => 'string',
                            'example' => 'Green',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\",\\n  \\"Headers\\": {\\n    \\"X-Managed-StorageSize\\": 143993923932990,\\n    \\"X-Managed-Count\\": 100\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"totalStorageSize\\": 1788239393298,\\n      \\"indexTemplateName\\": \\"template1\\",\\n      \\"ilmPolicyName\\": \\"rollver1\\",\\n      \\"name\\": \\"my-index-0001\\",\\n      \\"health\\": \\"Green\\",\\n      \\"managedStorageSize\\": 1788239393298,\\n      \\"indices\\": [\\n        {\\n          \\"isManaged\\": false,\\n          \\"createTime\\": \\"2018-07-13T03:58:07.253Z\\",\\n          \\"size\\": 15393899,\\n          \\"managedStatus\\": \\"following\\",\\n          \\"name\\": \\"Log1\\",\\n          \\"health\\": \\"Green\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'ES集群数据流列表',
      'summary' => '获取Elasticserch集群中，索引数据流列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListILMPolicies' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/ilm-policies',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-m7r23wodb006n****',
          ),
        ),
        1 => 
        array (
          'name' => 'policyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '索引生命周期策略名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'policy-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
              'Result' => 
              array (
                'description' => '请求返回的索引生命周期策略列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'name' => 
                    array (
                      'description' => '索引生命周期策略名称。',
                      'type' => 'string',
                      'example' => 'policy-1',
                    ),
                    'phases' => 
                    array (
                      'description' => '索引生命周期内容。',
                      'type' => 'object',
                      'example' => '{"hot":{"minAge":"0ms","actions":{"rollover":{"maxSize":"50gb","maxAge":"30d"},"setPriority":{"priority":100}}},"delete":{"minAge":"3d","actions":{"delete":{}}}}',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\",\\n  \\"Result\\": [\\n    {\\n      \\"name\\": \\"policy-1\\",\\n      \\"phases\\": {\\n        \\"hot\\": {\\n          \\"minAge\\": \\"0ms\\",\\n          \\"actions\\": {\\n            \\"rollover\\": {\\n              \\"maxSize\\": \\"50gb\\",\\n              \\"maxAge\\": \\"30d\\"\\n            },\\n            \\"setPriority\\": {\\n              \\"priority\\": 100\\n            }\\n          }\\n        },\\n        \\"delete\\": {\\n          \\"minAge\\": \\"3d\\",\\n          \\"actions\\": {\\n            \\"delete\\": {}\\n          }\\n        }\\n      }\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查询索引生命周期列表',
      'summary' => '查询集群已经创建的索引生命周期列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => '**phases字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|{key}|Struct| |否|当前生命周期阶段，支持以下三种阶段：hot（热数据阶段，正在积极更新和查询索引）；cold（冷数据阶段，索引不再被更新并且很少被查询。信息仍然需要可搜索，但是如果这些查询速度较慢也可以。）；delete（删除阶段，不再需要该索引，可以安全地将其删除）。|
|minAge|String|30d|否|索引到达目标阶段所需要的时间。|
|actions|Struct| |否|当前阶段策略设置。详情请参见下方的**actions字段数据结构说明**。|

**actions字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|rollover|Struct| |否|hot阶段的索引滚动更新操作。详情请参见下方的**rollover字段数据结构说明**。|
|setPriority|Struct| |否|hot或cold阶段的索引优先级。详情请参见下方的**setPriority字段数据结构说明**。|
|allocate|Struct| |否|cold阶段的分配操作。详情请参见下方的**allocate字段数据结构说明**。|
|delete|Struct| {} |否|删除索引操作。delete阶段开启时，属性必传，为空对象。|

**rollover字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|maxAge|String|30d|否|触发滚动索引所需要的时间阈值。maxAge、maxDocs和maxSize三者中至少选填一个。单位：d（天）或者h（小时）。 |
|maxDocs|Integer|10000|否|触发滚动索引所需要的文档数量的阈值。|
|maxSize|String|50gb|否|触发滚动索引所需要的索引大小的阈值。maxAge、maxDocs和maxSize三者中至少选填一个。单位：MB或者GB。|

**setPriority字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|priority|Integer|100|否|当前节点默认的优先级。|

**allocate字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|numberOfReplicas|Integer|1|否|分配指定的副本数，如果设置，则默认值为1。与migrate配合使用，开启自动迁移时，默认进行副本数分配。|
|require |Struct| |否|可选设置，冷热分离架构集群可用。详情请参见下方的**require字段数据结构说明**。|

**require字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|boxType|String|warm|否|自定义节点属性标识，冷热分离架构集群可用，迁移至冷节点。可选值：warm。|
',
      'extraInfo' => ' ',
    ),
    'ListIndexTemplates' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/index-templates',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif24adwc0082****',
          ),
        ),
        1 => 
        array (
          'name' => 'indexTemplate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '索引模板名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'my-template',
          ),
        ),
        2 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例列表的页码。起始值：1，默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5',
          ),
        ),
        3 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页条数。最大值：100，默认值：20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '50',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果对象。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
              'Result' => 
              array (
                'description' => '索引模板列表信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回结果对象信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'dataStream' => 
                    array (
                      'description' => '是否开启数据流，参数取值如下：

- true：开启。

- false（默认值）：不开启。
',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'indexTemplate' => 
                    array (
                      'description' => '索引模版名称。',
                      'type' => 'string',
                      'example' => 'my-template',
                    ),
                    'ilmPolicy' => 
                    array (
                      'description' => '索引生命周期策略名称。',
                      'type' => 'string',
                      'example' => 'my_ilm_policy',
                    ),
                    'priority' => 
                    array (
                      'description' => '索引模板优先级。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '100',
                    ),
                    'indexPatterns' => 
                    array (
                      'description' => '索引模式信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '索引模式。',
                        'type' => 'string',
                        'example' => 'console-*',
                      ),
                    ),
                    'template' => 
                    array (
                      'description' => '组件模版。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'settings' => 
                        array (
                          'description' => 'settings设置。',
                          'type' => 'string',
                          'example' => '{\\"mydata\\":{}}',
                        ),
                        'mappings' => 
                        array (
                          'description' => 'mappings设置。',
                          'type' => 'string',
                          'example' => '{\\"properties\\":{\\"created_at\\":{\\"format\\":\\"EEE MMM dd HH:mm:ss Z yyyy\\",\\"type\\":\\"date\\"},\\"host_name\\":{\\"type\\":\\"keyword\\"}}}',
                        ),
                        'aliases' => 
                        array (
                          'description' => 'aliases设置。',
                          'type' => 'string',
                          'example' => '{\\"index.number_of_shards\\":\\"1\\"}',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\",\\n  \\"Result\\": [\\n    {\\n      \\"dataStream\\": true,\\n      \\"indexTemplate\\": \\"my-template\\",\\n      \\"ilmPolicy\\": \\"my_ilm_policy\\",\\n      \\"priority\\": 100,\\n      \\"indexPatterns\\": [\\n        \\"console-*\\"\\n      ],\\n      \\"template\\": {\\n        \\"settings\\": \\"{\\\\\\\\\\\\\\"mydata\\\\\\\\\\\\\\":{}}\\",\\n        \\"mappings\\": \\"{\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"created_at\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"EEE MMM dd HH:mm:ss Z yyyy\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"host_name\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"keyword\\\\\\\\\\\\\\"}}}\\",\\n        \\"aliases\\": \\"{\\\\\\\\\\\\\\"index.number_of_shards\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\"}\\"\\n      }\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查询索引模板列表',
      'summary' => '查询索引模板列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RolloverDataStream' => 
    array (
      'summary' => '为数据流或索引别名创建新索引。',
      'path' => '/openapi/instances/{InstanceId}/data-streams/{DataStream}/rollover',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif24adwc0082****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'DataStream',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '数据流名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ds-001',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：滚动更新成功。

- false：滚动更新失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '滚动更新数据',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateILMPolicy' => 
    array (
      'summary' => '修改Elasticsearch索引生命周期策略。',
      'path' => '/openapi/instances/{InstanceId}/ilm-policies/{PolicyName}',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif24adwc0082w2ka****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'PolicyName',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '索引生命周期策略名称。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'my-policy',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'string',
                'example' => 'my-policy',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": \\"my-policy\\",\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改索引生命周期策略',
      'requestParamsDescription' => '## RequestBody
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|name|String|my-policy |是|索引生命周期策略名称。|
|phases|Map| |否|索引生命周期策略内容。详情请参见**phases字段数据结构说明**。|

**phases字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|{key}|Struct| |否|当前生命周期阶段，支持以下三种阶段：hot（热数据阶段，正在积极更新和查询索引）；cold（冷数据阶段，索引不再被更新并且很少被查询。信息仍然需要可搜索，但是如果这些查询速度较慢也可以。）；delete（删除阶段，不再需要该索引，可以安全地将其删除）。|
|minAge|String|30d|否|索引到达目标阶段所需要的时间。|
|actions|Struct| |否|当前阶段策略设置。详情请参见**actions字段数据结构说明**。|

**actions字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|rollver|Struct| |否|hot阶段的索引滚动更新操作。详情请参见**rollver字段数据结构说明**。|
|setPriority|Struct| |否|hot或cold阶段的索引优先级。详情请参见**setPriority字段数据结构说明**。|
|allocate|Struct| |否|cold阶段的分配操作。详情请参见**allocate字段数据结构说明**。|
|delete|Struct| {} |否|删除索引操作。delete阶段开启时，属性必传，为空对象。|

**rollver字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|maxAge|String|30d|否|触发滚动索引所需要的时间阈值。maxAge、maxDocs和maxSize三者中至少选填一个。单位：d（天）或者h（小时）。 |
|maxDocs|Integer|10000|否|触发滚动索引所需要的文档数量的阈值。|
|maxSize|String|50gb|否|触发滚动索引所需要的索引大小的阈值。maxAge、maxDocs和maxSize三者中至少选填一个。单位：MB或者GB。|

**setPriority字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|priority|Integer|100|否|当前节点默认的优先级。|

**allocate字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|numberOfReplicas|Integer|1|否|分配指定的副本数，如果设置，则默认值为1。与migrate配合使用，开启自动迁移时，默认进行副本数分配。|
|require |Struct| |否|可选设置，冷热分离架构集群可用。详情请参见**require字段数据结构说明**。|

**require字段数据结构说明**
|参数|类型|示例值|是否必选|描述|
| :--- | :--- | :--- | :--- | :--- |
|boxType|String|warm|否|自定义节点属性标识，冷热分离架构集群可用，迁移至冷节点。可选值：warm。|',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateIndexTemplate' => 
    array (
      'summary' => '修改Elasticsearch实例模版配置。',
      'path' => '/openapi/instances/{InstanceId}/index-templates/{IndexTemplate}',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w24n9u900am****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'IndexTemplate',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '索引模版名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'my-template',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '更新的索引模板名称。',
                'type' => 'string',
                'example' => 'my-template',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": \\"my-template\\",\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改实例模版配置',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需要填入以下参数，用来指定待更新的索引模版信息。
|参数|类型|是否必选|示例值|描述|
| :--- | :--- | :--- | :--- | :--- |
|indexTemplate|String|是|my-template|索引模版名称。必须和path值相同。|
|indexPatterns|String|是|["schema1*","schema2*"]|索引匹配模式正则。|
|dataStream|Boolean|是|true|是否开启数据流：true（开启）、false（不开启）。默认值：false（不开启）。|
|priority|Integre|否|30|集群索引模板的优先级。|
|ilmPolicy|String|否|policy-1|生命周期策略名称。|
|template|Object|否| |组件模版。|

template字段数据结构说明
|参数|类型|是否必选|示例值|描述|
| :--- | :--- | :--- | :--- | :--- |
|settings|String|否|{\\"index.refresh_interval\\":\\"1s\\"}|settings设置。|
|mappings|String|否|{"properties": {"created_at": {"type": "date","format": "EEE MMM dd HH:mm:ss Z yyyy"},"host_name": {"type": "keyword"}}}|mappings设置。|
|aliases|String|否|{"mydata": {}}|aliases设置。|
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateComponentIndex' => 
    array (
      'summary' => '调用CreateComponentIndex，创建Elasticsearch组合模板。',
      'path' => '/openapi/instances/{InstanceId}/component-index/{name}',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-tl329rbpc0001****',
          ),
        ),
        1 => 
        array (
          'name' => 'name',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '模板名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'template',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体信息。',
            'type' => 'object',
            'properties' => 
            array (
              'template' => 
              array (
                'description' => '组合模板信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'settings' => 
                  array (
                    'description' => '模板settings配置。',
                    'type' => 'object',
                    'required' => false,
                    'example' => '{ 			"index.number_of_replicas": 0 		}',
                  ),
                  'mappings' => 
                  array (
                    'description' => '模板mappings配置。',
                    'type' => 'object',
                    'required' => false,
                    'example' => '{ 			"properties": { 				"@timestamp": { 					"type": "date" 				} 			} 		}',
                  ),
                  'aliases' => 
                  array (
                    'description' => '模板别名配置。',
                    'type' => 'object',
                    'required' => false,
                    'example' => '{}',
                  ),
                ),
                'required' => false,
              ),
              '_meta' => 
              array (
                'description' => '元数据，用于存储备注等信息。',
                'type' => 'object',
                'required' => false,
                'example' => '{       "description": "set number of shards to one"   }',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回对象。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C20022BA-5382-4339-89FB-30AF48A05431',
              ),
              'Result' => 
              array (
                'description' => '返回结果：

- true：创建成功
- false：创建失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C20022BA-5382-4339-89FB-30AF48A05431\\",\\n  \\"Result\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '创建一个组件',
      'description' => '详细信息请参见[通过OpenStore实现海量数据存储](~~317694~~)。',
    ),
    'DeleteComponentIndex' => 
    array (
      'summary' => '删除Elasticsearch的组合索引模板。',
      'path' => '/openapi/instances/{InstanceId}/component-index/{name}',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-tl329rbpc0001****',
          ),
        ),
        1 => 
        array (
          'name' => 'name',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '组合模板名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'template',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回对象。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC47D9',
              ),
              'Result' => 
              array (
                'description' => '返回结果：

- true：删除成功
- false：删除失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC47D9\\",\\n  \\"Result\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '删除组合索引模板',
      'description' => '详细信息请参见[通过OpenStore实现海量数据存储](~~317694~~)。',
    ),
    'DeleteDeprecatedTemplate' => 
    array (
      'summary' => '删除历史索引模板。',
      'path' => '/openapi/instances/{InstanceId}/deprecated-templates/{name}',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-tl329rbpc0001****',
          ),
        ),
        1 => 
        array (
          'name' => 'name',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '索引模板名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'template',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果对象。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC47D9',
              ),
              'Result' => 
              array (
                'description' => '返回结果：

- true：创建成功
- false：创建失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC47D9\\",\\n  \\"Result\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '删除历史索引模板',
      'description' => '详细信息请参见[通过OpenStore实现海量数据存储](~~317694~~)。',
    ),
    'DescribeComponentIndex' => 
    array (
      'summary' => '查看Elasticsearch的组合模板详情。',
      'path' => '/openapi/instances/{InstanceId}/component-index/{name}',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-tl329rbpc0001****',
          ),
        ),
        1 => 
        array (
          'name' => 'name',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '组合模板名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'template',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果对象。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC47D9',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'template' => 
                  array (
                    'description' => '模板信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'aliases' => 
                      array (
                        'description' => '模板别名配置。',
                        'type' => 'object',
                        'example' => '{}',
                      ),
                      'mappings' => 
                      array (
                        'description' => '模板mappings配置。',
                        'type' => 'object',
                        'example' => '{ "properties": { "@timestamp": { "type": "date" } } }',
                      ),
                      'settings' => 
                      array (
                        'description' => '模板settings配置。',
                        'type' => 'object',
                        'example' => '{ "index.number_of_replicas": 0 }',
                      ),
                    ),
                  ),
                  '_meta' => 
                  array (
                    'description' => '元数据，用于存储备注等信息。',
                    'type' => 'object',
                    'example' => '{ "description": "set number of shards to one" }',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC47D9\\",\\n  \\"Result\\": {\\n    \\"template\\": {\\n      \\"aliases\\": {},\\n      \\"mappings\\": {\\n        \\"properties\\": {\\n          \\"@timestamp\\": {\\n            \\"type\\": \\"date\\"\\n          }\\n        }\\n      },\\n      \\"settings\\": {\\n        \\"index.number_of_replicas\\": 0\\n      }\\n    },\\n    \\"_meta\\": {\\n      \\"description\\": \\"set number of shards to one\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查看组合索引模板详情',
      'description' => '详细信息请参见[通过OpenStore实现海量数据存储](~~317694~~)。',
    ),
    'DescribeDeprecatedTemplate' => 
    array (
      'summary' => '查看历史索引模板详情。',
      'path' => '/openapi/instances/{InstanceId}/deprecated-templates/{name}',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-tl329rbpc0001****',
          ),
        ),
        1 => 
        array (
          'name' => 'name',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '索引模板名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'template',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果对象。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC47D9',
              ),
              'Result' => 
              array (
                'description' => '返回结果信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'dataStream' => 
                  array (
                    'description' => '是否同时自动创建数据流：

- true：是
- false：否',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'indexPatterns' => 
                  array (
                    'description' => '索引模式信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '索引模式数组。',
                      'type' => 'string',
                      'example' => '["schema1*","schema2*"]',
                    ),
                  ),
                  'indexTemplate' => 
                  array (
                    'description' => '索引模版名称。',
                    'type' => 'string',
                    'example' => 'openstore-index-template',
                  ),
                  'order' => 
                  array (
                    'description' => '优先级。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '100',
                  ),
                  'template' => 
                  array (
                    'description' => '索引模板配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'aliases' => 
                      array (
                        'description' => '别名配置。',
                        'type' => 'string',
                        'example' => '"{}"',
                      ),
                      'mappings' => 
                      array (
                        'description' => '索引模板的mappings配置。',
                        'type' => 'string',
                        'example' => '"{\\"properties\\":{\\"created_at\\":{\\"format\\":\\"EEE MMM dd HH:mm:ss Z yyyy\\",\\"type\\":\\"date\\"},\\"host_name\\":{\\"type\\":\\"keyword\\"}}}"',
                      ),
                      'settings' => 
                      array (
                        'description' => '索引模板的settings配置。',
                        'type' => 'string',
                        'example' => '"{\\"index.number_of_shards\\":\\"1\\"}"',
                      ),
                    ),
                  ),
                  'version' => 
                  array (
                    'description' => '索引模板的版本。',
                    'type' => 'string',
                    'example' => '70000',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC47D9\\",\\n  \\"Result\\": {\\n    \\"dataStream\\": false,\\n    \\"indexPatterns\\": [\\n      \\"[\\\\\\"schema1*\\\\\\",\\\\\\"schema2*\\\\\\"]\\"\\n    ],\\n    \\"indexTemplate\\": \\"openstore-index-template\\",\\n    \\"order\\": 100,\\n    \\"template\\": {\\n      \\"aliases\\": \\"\\\\\\"{}\\\\\\"\\",\\n      \\"mappings\\": \\"\\\\\\"{\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"created_at\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"EEE MMM dd HH:mm:ss Z yyyy\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"host_name\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"keyword\\\\\\\\\\\\\\"}}}\\\\\\"\\",\\n      \\"settings\\": \\"\\\\\\"{\\\\\\\\\\\\\\"index.number_of_shards\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\"}\\\\\\"\\"\\n    },\\n    \\"version\\": \\"70000\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查看历史索引模板详情',
    ),
    'ListComponentIndices' => 
    array (
      'summary' => '获取Elasticsearch的组合模板列表。',
      'path' => '/openapi/instances/{InstanceId}/component-index',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-tl329rbpc0001****',
          ),
        ),
        1 => 
        array (
          'name' => 'name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组合模板名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'template',
          ),
        ),
        2 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的页数。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '1000',
            'minimum' => '1',
            'example' => '5',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页条数。默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '1000',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回对象。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC47D9',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '返回结果条数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '10',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '返回结果详情。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回对象信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'composed' => 
                    array (
                      'description' => '引用该组合模板的索引模板信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '引用该组合模板的索引模板名构成的数组。',
                        'type' => 'string',
                        'example' => '["template1", "template2"]',
                      ),
                    ),
                    'content' => 
                    array (
                      'description' => '组合模板内容。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'template' => 
                        array (
                          'description' => '组合模版对象。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'settings' => 
                            array (
                              'description' => '模板settings配置。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'index' => 
                                array (
                                  'description' => '索引信息。',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'codec' => 
                                    array (
                                      'description' => '索引压缩方法。支持：

- LZ4：Elasticsearch的默认压缩算法，解压或压缩效率很快，但压缩率较低一些。
- best_compression：使用best_compression算法进行压缩，具有更高的压缩率。',
                                      'type' => 'string',
                                      'example' => 'best_compression',
                                    ),
                                    'lifecycle' => 
                                    array (
                                      'description' => '索引生命周期配置。',
                                      'type' => 'object',
                                      'properties' => 
                                      array (
                                        'name' => 
                                        array (
                                          'description' => '生命周期策略名称。',
                                          'type' => 'string',
                                          'example' => 'synthetics',
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'version' => 
                        array (
                          'description' => '组合模板的版本。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        '_meta' => 
                        array (
                          'description' => '元数据，用于存储备注等信息。',
                          'type' => 'object',
                          'example' => '{ "description": "set number of shards to one" }',
                        ),
                      ),
                    ),
                    'name' => 
                    array (
                      'description' => '组合模板名称。',
                      'type' => 'string',
                      'example' => 'synthetics-settings',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC47D9\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 10\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"composed\\": [\\n        \\"[\\\\\\"template1\\\\\\", \\\\\\"template2\\\\\\"]\\"\\n      ],\\n      \\"content\\": {\\n        \\"template\\": {\\n          \\"settings\\": {\\n            \\"index\\": {\\n              \\"codec\\": \\"best_compression\\",\\n              \\"lifecycle\\": {\\n                \\"name\\": \\"synthetics\\"\\n              }\\n            }\\n          }\\n        },\\n        \\"version\\": 0,\\n        \\"_meta\\": {\\n          \\"description\\": \\"set number of shards to one\\"\\n        }\\n      },\\n      \\"name\\": \\"synthetics-settings\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '组合索引列表',
      'description' => '详细信息请参见[通过OpenStore实现海量数据存储](~~317694~~)。',
    ),
    'ListDeprecatedTemplates' => 
    array (
      'summary' => 'ListDeprecatedTemplates，查看历史索引模板列表。',
      'path' => '/openapi/instances/{InstanceId}/deprecated-templates',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'produces' => 
      array (
        0 => 'application/json',
        1 => 'application/octet-stream',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-t57p81n7ai89v****',
          ),
        ),
        1 => 
        array (
          'name' => 'name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '索引模板名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'component-openstore-index-template',
          ),
        ),
        2 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的页数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5',
          ),
        ),
        3 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '
分页查询时设置的每页条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC47D9',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '返回结果条数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '5',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '返回结果信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回对象信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'dataStream' => 
                    array (
                      'description' => '是否匹配数据流：

- true：匹配
- false：不匹配',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'indexPatterns' => 
                    array (
                      'description' => '索引模板信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '索引模式列表。',
                        'type' => 'string',
                        'example' => '["schema1*","schema2*"]',
                      ),
                    ),
                    'indexTemplate' => 
                    array (
                      'description' => '索引模版名称。',
                      'type' => 'string',
                      'example' => 'openstore-index-template',
                    ),
                    'order' => 
                    array (
                      'description' => '优先级。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '100',
                    ),
                    'template' => 
                    array (
                      'description' => '索引模板配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'aliases' => 
                        array (
                          'description' => '模板别名配置。',
                          'type' => 'string',
                          'example' => '"{}"',
                        ),
                        'mappings' => 
                        array (
                          'description' => '模板的mappings配置。',
                          'type' => 'string',
                          'example' => '"{\\"properties\\":{\\"created_at\\":{\\"format\\":\\"EEE MMM dd HH:mm:ss Z yyyy\\",\\"type\\":\\"date\\"},\\"host_name\\":{\\"type\\":\\"keyword\\"}}}"',
                        ),
                        'settings' => 
                        array (
                          'description' => '模板的settings配置。',
                          'type' => 'string',
                          'example' => '"{\\"index.number_of_shards\\":\\"1\\"}"',
                        ),
                      ),
                    ),
                    'version' => 
                    array (
                      'description' => '索引模板的版本。',
                      'type' => 'string',
                      'example' => '70000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC47D9\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 5\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"dataStream\\": false,\\n      \\"indexPatterns\\": [\\n        \\"[\\\\\\"schema1*\\\\\\",\\\\\\"schema2*\\\\\\"]\\"\\n      ],\\n      \\"indexTemplate\\": \\"openstore-index-template\\",\\n      \\"order\\": 100,\\n      \\"template\\": {\\n        \\"aliases\\": \\"\\\\\\"{}\\\\\\"\\",\\n        \\"mappings\\": \\"\\\\\\"{\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"created_at\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"EEE MMM dd HH:mm:ss Z yyyy\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\"host_name\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"keyword\\\\\\\\\\\\\\"}}}\\\\\\"\\",\\n        \\"settings\\": \\"\\\\\\"{\\\\\\\\\\\\\\"index.number_of_shards\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\"}\\\\\\"\\"\\n      },\\n      \\"version\\": \\"70000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '历史索引模板列表',
      'description' => '详细信息请参见[通过OpenStore实现海量数据存储](~~317694~~)。',
    ),
    'UpdateComponentIndex' => 
    array (
      'summary' => 'UpdateComponentIndex，更新Elasticsearch的组合模板。',
      'path' => '/openapi/instances/{InstanceId}/component-index/{name}',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-t57p81n7ai89v****',
          ),
        ),
        1 => 
        array (
          'name' => 'name',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '模板名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'component-openstore-index-template',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'RequestBody参数。',
            'type' => 'object',
            'properties' => 
            array (
              'template' => 
              array (
                'description' => '组合模板信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'settings' => 
                  array (
                    'description' => '模板settings配置。',
                    'type' => 'object',
                    'required' => false,
                    'example' => '{ "index.number_of_replicas": 0 }',
                  ),
                  'mappings' => 
                  array (
                    'description' => '模板mappings配置。',
                    'type' => 'object',
                    'required' => false,
                    'example' => '{ "properties": { "@timestamp": { "type": "date" } } }',
                  ),
                  'aliases' => 
                  array (
                    'description' => '模板别名配置。',
                    'type' => 'object',
                    'required' => false,
                    'example' => '{}',
                  ),
                ),
                'required' => false,
              ),
              '_meta' => 
              array (
                'description' => '元数据，用于存储备注等信息。',
                'type' => 'object',
                'required' => false,
                'example' => '{ "description": "set number of shards to one" }',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'requestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC47D9',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"requestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC47D9\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更新组合索引模板',
      'description' => '详细信息请参见[通过OpenStore实现海量数据存储](~~317694~~)。',
    ),
    'DeleteInstance' => 
    array (
      'path' => '/openapi/instances/{InstanceId}',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-t57p81n7ai89v****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'deleteType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '释放类型。可选值：

- immediate：立即删除。删除后，系统会彻底清除所有数据，且实例不再显示在实例列表中。
- protective：实例会被冻结24小时后，再彻底清除数据，期间实例仍在实例列表中显示，您可以选择[恢复实例](~~202195~~)或[立即释放](~~202195~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'protective',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '94B03BBA-A132-42C3-8367-0A0C1C45****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"94B03BBA-A132-42C3-8367-0A0C1C45****\\"\\n}","errorExample":"{\\n    \\"Code\\":\\"InstanceNotFound\\",\\n    \\"Message\\":\\"The specified instance does not exist. Check the instance status and try again.\\",\\n    \\"RequestId\\":\\"829F38F6-E2D6-4109-90A6-888160BD16C2\\"\\n}"},{"type":"xml","example":"","errorExample":""}]',
      'title' => '释放指定按量付费类型的实例',
      'summary' => '实例所使用的物理资源都被回收，相关数据全部丢失且不可恢复；挂载实例节点的云盘和相应的快照都会被释放。',
      'description' => '调用此接口前，需要注意：
实例释放后数据无法恢复，建议您在释放前先备份数据。具体操作，请参见[快照备份与恢复命令](~~65675~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => '返回数据中还包括Result参数。详细信息，请参见[ListInstance](~~142230~~)。',
      'extraInfo' => ' ',
    ),
    'UpdateInstanceChargeType' => 
    array (
      'summary' => 'Elasticsearch实例更改付费类型，按量付费实例转换为包年包月实例。',
      'path' => '/openapi/instances/{InstanceId}/actions/convert-pay-type',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-0pp1jxvcl000z****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：转换成功
- false：转换失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '转换付费类型',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定转换为包年包月后，实例的付费信息。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| paymentInfo | Array  | 是 |  |实例转换后的付费信息。 |
|  └duration | Integer | 是 | 1 |付费时长。如果pricingCycle为Year，可选值：1~3；如果pricingCycle为Month，可选值：1~9。|
|  └pricingCycle | String | 是 | Year |付费周期。可选值：Year、Month。 |
| paymentType | String | 是 | prepaid |实例当前的付费类型。目前只支持将按量付费实例转换为包年包月，因此该参数值固定为prepaid。|

> └表示子参数。

示例如下。

```
{
  "paymentInfo":{ 
       "duration":1,
       "pricingCycle":"Month"
    },
  "paymentType":"prepaid"
}
```
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDescription' => 
    array (
      'summary' => '更改Elasticsearch实例名称。',
      'path' => '/openapi/instances/{InstanceId}/description',
      'methods' => 
      array (
        0 => 'patch',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1ptcb30009****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B350****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'RequestBody参数。',
            'type' => 'object',
            'properties' => 
            array (
              'description' => 
              array (
                'description' => '指定更新后的实例名称。',
                'type' => 'string',
                'required' => false,
                'example' => 'aliyunes_name_test',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FDF34727-1664-44C1-A8DA-3EB72D60****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'description' => 
                  array (
                    'description' => '修改后的实例名称。',
                    'type' => 'string',
                    'example' => 'aliyunes_test_name',
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FDF34727-1664-44C1-A8DA-3EB72D60****\\",\\n  \\"Result\\": {\\n    \\"description\\": \\"aliyunes_test_name\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更改实例名称',
      'requestParamsDescription' => '
',
      'responseParamsDescription' => '> 以下返回示例中，本文只保证包含返回数据列表中的参数，而未提到的参数仅供参考，参数说明可参见[ListInstance](~~142230~~)。程序中不能强制依赖获取这些参数。',
      'extraInfo' => ' ',
    ),
    'UpdateReadWritePolicy' => 
    array (
      'summary' => '开启或关闭集群的写入高可用特性。目前仅支持华北2（北京）区域的实例。',
      'path' => '/openapi/instances/{InstanceId}/actions/update-read-write-policy',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-oew1oxiro000f****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：开启或关闭写入高可用成功
- false：开启或关闭写入高可用失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '开启或关闭集群写入高可用特性',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定高可用特性的参数配置。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| writeHa | Boolean | 否 | true |是否开启写入高可用特性。true表示是，false表示否。|
| autoGeneratePk | Boolean | 否 | true |无主键时，是否自动生成文档哈希值主键。true为默认值，表示自动生成主键；false表示不会自动生成主键。<br>autoGeneratePk不可单独修改，只有在writeHa从false更新为true的时候，同时设置autoGeneratePk才生效。|
| writePolicy | String | 否 | sync |设置临时切换同步和异步高可用。只有在开通高可用，即writeHa为true的情况下，设置此字段才有效。设置此字段时不需要同时传入writeHa字段。<br>可选值：<br>sync：临时由异步写入高可用切换为同步。<br>async：临时开启同步写入后，恢复异步写入高可用。|

示例如下。

```
{
    "writeHa":true,
    "autoGeneratePk":true
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyElastictask' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/elastic-task',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-6ja1ro4jt000c****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'description' => '指定扩缩容信息。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '{     "elasticExpansionTask":     {         "triggerType":"crontab",         "cronExpression":"0 0 0 ? * MON",         "elasticNodeCount":"2",         "targetIndices":["*"],         "replicaCount":"2"     } }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'elasticExpansionTask' => 
                  array (
                    'description' => '弹性节点扩容规则。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'triggerType' => 
                      array (
                        'description' => '触发条件。固定为crontab，表示定时触发。',
                        'type' => 'string',
                        'example' => 'crontab',
                      ),
                      'replicaCount' => 
                      array (
                        'description' => '目标索引的副本数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'elasticNodeCount' => 
                      array (
                        'description' => '目标高峰期弹性数据节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'cronExpression' => 
                      array (
                        'description' => '触发周期，使用Quartz Cron表达式。',
                        'type' => 'string',
                        'example' => '0 0 0 ? * MON',
                      ),
                      'targetIndices' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '目标弹性索引名称，支持通配符。',
                          'type' => 'string',
                          'example' => '["index"]',
                        ),
                      ),
                    ),
                  ),
                  'elasticShrinkTask' => 
                  array (
                    'description' => '弹性节点缩容规则。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'triggerType' => 
                      array (
                        'description' => '触发条件。可选值：crontab，表示定时触发。',
                        'type' => 'string',
                        'example' => 'crontab',
                      ),
                      'replicaCount' => 
                      array (
                        'description' => '目标索引的副本数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'elasticNodeCount' => 
                      array (
                        'description' => '目标低峰期弹性数据节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'cronExpression' => 
                      array (
                        'description' => '触发周期，使用Quartz Cron表达式。',
                        'type' => 'string',
                        'example' => '4 4 4 ? * WED',
                      ),
                      'targetIndices' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '目标弹性索引名称，支持通配符。',
                          'type' => 'string',
                          'example' => '["index"] ',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The specified cluster does not exist. Check the cluster status and try again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****\\",\\n  \\"Result\\": {\\n    \\"elasticExpansionTask\\": {\\n      \\"triggerType\\": \\"crontab\\",\\n      \\"replicaCount\\": 2,\\n      \\"elasticNodeCount\\": 2,\\n      \\"cronExpression\\": \\"0 0 0 ? * MON\\",\\n      \\"targetIndices\\": [\\n        \\"[\\\\\\"index\\\\\\"]\\"\\n      ]\\n    },\\n    \\"elasticShrinkTask\\": {\\n      \\"triggerType\\": \\"crontab\\",\\n      \\"replicaCount\\": 2,\\n      \\"elasticNodeCount\\": 2,\\n      \\"cronExpression\\": \\"4 4 4 ? * WED\\",\\n      \\"targetIndices\\": [\\n        \\"[\\\\\\"index\\\\\\"] \\"\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ModifyElastictaskResponse>\\n    <RequestId>ECF7F13B-A26F-44E6-B77A-5AD5AC32****</RequestId>\\n    <Result>\\n        <elasticExpansionTask>\\n            <TriggerType>crontab</TriggerType>\\n            <ReplicaCount>2</ReplicaCount>\\n            <CronExpression>0 0 0 ? * MON</CronExpression>\\n            <ElasticNodeCount>2</ElasticNodeCount>\\n            <TargetIndices>*</TargetIndices>\\n        </elasticExpansionTask>\\n    </Result>\\n</ModifyElastictaskResponse>","errorExample":""}]',
      'title' => '更新集群弹性扩缩容规则',
      'summary' => '调用ModifyElastictask，更新集群弹性扩缩容规则。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定扩缩容信息。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| elasticExpansionTask|  | 否 |  |弹性节点扩容规则。|
|  └triggerType | String | 是 | crontab |触发条件。可选值：crontab，表示定时触发。|
|  └cronExpression | String | 是 | 0 0 0 ? * MON |触发周期，使用Quartz Cron表达式。|
|  └elasticNodeCount | Integer | 否 | 2 |目标高峰期弹性数据节点数量。|
|  └targetIndices | List | 否 | ["index"] |目标弹性索引名称，支持通配符。|
|  └replicaCount | String | 是 | 2 |目标索引的副本数。|
| elasticShrinkTask|  | 否 |  |弹性节点缩容规则。|
|  └triggerType | String | 是 | crontab |触发条件。可选值：crontab，表示定时触发。|
|  └cronExpression | String | 是 | 4 4 4 ? * WED |触发周期，使用Quartz Cron表达式。|
|  └elasticNodeCount | Integer | 否 | 2 |目标低峰期弹性数据节点数量。|
|  └targetIndices | List | 否 | ["index"] |目标弹性索引名称，支持通配符。|
|  └replicaCount | String | 是 | 2 |目标索引的副本数。|

> elasticExpansionTask和elasticShrinkTask二者必须选其一，不能都为空。

示例如下。

```
{
    "elasticExpansionTask":
    {
        "triggerType":"crontab",
        "cronExpression":"0 0 0 ? * MON",
        "elasticNodeCount":"2",
        "targetIndices":["*"],
        "replicaCount":"2"
    }
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyInstanceMaintainTime' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/actions/modify-maintaintime',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'description' => '请求体参数，详情请参见下文的RequestBody章节。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '{     "openMaintainTime": true,     "maintainStartTime": "03:00Z",     "maintainEndTime": "04:00Z" }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更改并开启实例的可维护时间',
      'summary' => '调用ModifyInstanceMaintainTime，更改并开启实例的可维护时间。',
      'description' => '调用此接口前，请注意：
- 在进行正式维护前，阿里云会给您阿里云账号中设置的联系人发送短信和邮件，请注意查收。
- 实例维护当天，为保障整个维护过程的稳定性，实例会在可维护时间段之前进入生效中的状态。当实例处于该状态时，对集群的访问以及查询类操作（如性能监控）不会受到影响，但相关集群变更操作（如集群升配、重启等）均暂时无法使用。
- 在可维护时间段内，实例连接可能发生闪断，请确保应用程序具有重连机制。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定可维护时间段信息。
|  名称  | 类型  | 是否必选 | 示例值  | 描述  |
|  ----  | ----  | ----  | ----  |
| maintainStartTime| String |  否    | 02:00Z  |可维护时间段的开始时间，格式：HH:mmZ（UTC时间）。|
| maintainEndTime| String |  否    | 06:00Z  |可维护时间段的结束时间，格式：HH:mmZ（UTC时间）。|
| openMaintainTime| boolean |  是    | true  |是否开启可维护时间段功能。仅支持**true**，表示开启。|

示例如下。

```
{
    "openMaintainTime": true,
    "maintainStartTime": "03:00Z",
    "maintainEndTime": "04:00Z"
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateKibanaWhiteIps' => 
    array (
      'summary' => '更新指定阿里云Elasticsearch实例的Kibana访问白名单。',
      'path' => '/openapi/instances/{InstanceId}/kibana-white-ips',
      'methods' => 
      array (
        0 => 'patch',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-tl329rbpc0001****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不值过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'modifyMode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '修改方式，覆盖/新增/删除，针对设置分组时使用。不设置分组，默认覆盖default分组值',
            'description' => '修改方式，取值含义如下：

- Cover（默认值）：使用ips参数的值覆盖原IP白名单。

- Append：在原IP白名单中增加ips参数中输入的IP地址。

- Delete：在原IP白名单中删除ips参数中输入的IP地址，至少需要保留一个IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'Cover',
            'default' => 'Cover',
            'enum' => 
            array (
              0 => 'Cover',
              1 => 'Append',
              2 => 'Delete',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体。',
            'type' => 'object',
            'properties' => 
            array (
              'kibanaIPWhitelist' => 
              array (
                'title' => 'kibana节点IP访问白名单。不可与分组同时设置。',
                'description' => 'Kibana节点IP访问白名单。不可与分组同时设置。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'IP地址白名单列表。whiteIpGroup为空时可用，该参数值会更新Default白名单分组中的IP白名单配置。

不支持同时配置kibanaIPWhitelist和whiteIpGroup。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '["110.0.XX.XX/8"]',
                ),
                'required' => false,
              ),
              'whiteIpGroup' => 
              array (
                'title' => 'Kibana 访问白名单分组设置',
                'description' => '以白名单组方式更新Kibana访问白名单配置，仅支持更新一个白名单组。

不支持同时配置kibanaIPWhitelist和whiteIpGroup。',
                'type' => 'object',
                'properties' => 
                array (
                  'groupName' => 
                  array (
                    'title' => '分组名称',
                    'description' => '白名单组的组名。如果选填了whiteIpGroup参数，则该参数必填。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'test_group_name',
                  ),
                  'whiteIpType' => 
                  array (
                    'title' => '白名单类型，固定设置PUBLIC_KIBANA',
                    'description' => '白名单类型，仅支持PUBLIC_KIBANA（公网访问白名单）。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'PUBLIC_KIBANA',
                  ),
                  'ips' => 
                  array (
                    'title' => '分组白名单列表',
                    'description' => '白名单组中的IP列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'title' => '白名单IP',
                      'description' => '白名单组中的IP列表。如果选填了whiteIpGroup参数，则该参数必填。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '["0.0.0.0", "10.2.XX.XX"]',
                    ),
                    'required' => false,
                  ),
                ),
                'required' => false,
              ),
            ),
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E5EF11F1-DBAE-4020-AC24-DFA6C4345CAE',
              ),
              'Result' => 
              array (
                'description' => '返回对应Elasticsearch实例的详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'kibanaPrivateIPWhitelist' => 
                  array (
                    'description' => 'Kibana私网访问白名单列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'Kibana私网访问白名单列表。',
                      'type' => 'string',
                      'example' => '[ "192.168.XX.XX/24" ]',
                    ),
                  ),
                  'kibanaIPWhitelist' => 
                  array (
                    'description' => 'Kibana访问白名单列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'Kibana访问白名单列表。',
                      'type' => 'string',
                      'example' => '["0.0.XX.XX",       "10.2.XX.XX",       "110.0.XX.XX/9"]',
                    ),
                  ),
                  'networkConfig' => 
                  array (
                    'description' => '网络配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'vpcId' => 
                      array (
                        'description' => '专有网络ID。',
                        'type' => 'string',
                        'example' => 'vpc-bp1jy348ibzulk6hn****',
                      ),
                      'vswitchId' => 
                      array (
                        'description' => '交换机ID。',
                        'type' => 'string',
                        'example' => 'vsw-bp1a0mifpletdd1da****',
                      ),
                      'vsArea' => 
                      array (
                        'description' => '实例所在地域。',
                        'type' => 'string',
                        'example' => 'cn-hangzhou-h',
                      ),
                      'type' => 
                      array (
                        'description' => '网络类型。',
                        'type' => 'string',
                        'example' => 'vpc',
                      ),
                      'whiteIpGroupList' => 
                      array (
                        'description' => '白名单组列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '白名单组列表。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'groupName' => 
                            array (
                              'description' => '白名单组组名。',
                              'type' => 'string',
                              'example' => 'test_group_name',
                            ),
                            'ips' => 
                            array (
                              'description' => '白名单组中的IP列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '白名单组中的IP列表。',
                                'type' => 'string',
                                'example' => '["0.0.0.0", "10.2.XX.XX"]',
                              ),
                            ),
                            'whiteIpType' => 
                            array (
                              'description' => '白名单类型。',
                              'type' => 'string',
                              'example' => 'PUBLIC_KIBANA',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E5EF11F1-DBAE-4020-AC24-DFA6C4345CAE\\",\\n  \\"Result\\": {\\n    \\"kibanaPrivateIPWhitelist\\": [\\n      \\"[ \\\\\\"192.168.XX.XX/24\\\\\\" ]\\"\\n    ],\\n    \\"kibanaIPWhitelist\\": [\\n      \\"[\\\\\\"0.0.XX.XX\\\\\\",       \\\\\\"10.2.XX.XX\\\\\\",       \\\\\\"110.0.XX.XX/9\\\\\\"]\\"\\n    ],\\n    \\"networkConfig\\": {\\n      \\"vpcId\\": \\"vpc-bp1jy348ibzulk6hn****\\",\\n      \\"vswitchId\\": \\"vsw-bp1a0mifpletdd1da****\\",\\n      \\"vsArea\\": \\"cn-hangzhou-h\\",\\n      \\"type\\": \\"vpc\\",\\n      \\"whiteIpGroupList\\": [\\n        {\\n          \\"groupName\\": \\"test_group_name\\",\\n          \\"ips\\": [\\n            \\"[\\\\\\"0.0.0.0\\\\\\", \\\\\\"10.2.XX.XX\\\\\\"]\\"\\n          ],\\n          \\"whiteIpType\\": \\"PUBLIC_KIBANA\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更新实例Kibana访问白名单',
      'description' => '## 注意事项
- 调用该接口时，当实例状态为生效中（activating）、失效（invalid）和冻结（inactive）时，无法更新信息。
- 您可以通过两种方式更新白名单：IP白名单列表和IP白名单组。两种方式不能同时使用，且除了InstanceId和clientToken外，两种方式支持配置的参数也不同，具体如下： 
    - IP白名单列表：kibanaIPWhitelist
    - IP白名单组：modifyMode、whiteIpGroup
- 公网访问白名单不支持配置私网IP地址，私网访问白名单不支持配置公网IP地址。',
      'requestParamsDescription' => '><notice> 白名单组的增加和删除是由modifyMode为Cover的调用来实现的，Delete和Append无法实现白名单组粒度的增删，只能修改白名单组中的IP地址列表。具体说明如下：

- modifyMode为Cover时，如果ips为空，则删除该白名单组。如果groupName不在已有白名单组组名的列表中，则会新建一个白名单组。
- modifyMode为Delete时，删除后的ips至少需要保留一个IP地址。
- modifyMode为Append时，需要保证白名单组组名为已创建，否则会提示NotFound的错误。

></notice>
',
      'responseParamsDescription' => '> 下文返回示例中，本文只保证包含返回数据列表中的参数，而未提到的参数仅供参考，程序中不能强制依赖获取这些参数。',
      'extraInfo' => ' ',
    ),
    'UpdateWhiteIps' => 
    array (
      'summary' => '修改ES实例的VPC私网访问白名单。',
      'path' => '/openapi/instances/{InstanceId}/white-ips',
      'methods' => 
      array (
        0 => 'patch',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-npk2154oi000b****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'modifyMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改方式，可选值：

- Cover（默认）：使用ips参数的值覆盖原白名单的IP地址。

- Append：在原白名单的IP地址中增加ips参数中输入的IP地址。

- Delete：在原白名单的IP地址中删除ips参数中输入的IP地址，至少需要保留一个IP地址。

',
            'type' => 'string',
            'required' => false,
            'example' => 'Cover',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'RequestBody信息。',
            'type' => 'object',
            'properties' => 
            array (
              'esIPWhitelist' => 
              array (
                'description' => '白名单中的IP地址信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'IP地址白名单列表。whiteIpGroup为空时可用，该参数值会更新Default白名单分组中的IP白名单配置。
><notice> 不支持同时配置esIPWhitelist和whiteIpGroup。
></notice>',
                  'type' => 'string',
                  'required' => false,
                  'example' => '["10.61.xx.xx", "106.11.xx.xx”]',
                ),
                'required' => false,
              ),
              'whiteIpGroup' => 
              array (
                'description' => '以白名单组方式更新实例白名单配置，仅支持更新一个白名单组。
><notice> 不支持同时配置esIPWhitelist和whiteIpGroup。
></notice>',
                'type' => 'object',
                'properties' => 
                array (
                  'groupName' => 
                  array (
                    'description' => '白名单组的组名。如果选填了whiteIpGroup参数，则该参数必填。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'test_group',
                  ),
                  'ips' => 
                  array (
                    'description' => '白名单组中的IP地址列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '白名单组中的IP地址列表。如果选填了whiteIpGroup参数，则该参数必填。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '["10.2.xx.xx", "10.3.xx.xx"]',
                    ),
                    'required' => false,
                  ),
                  'whiteIpType' => 
                  array (
                    'description' => 'IP白名单的类型。固定为**PRIVATE_ES**，即私网访问白名单。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'PRIVATE_ES',
                  ),
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8D58B014-BBD7-4D80-B219-00B9D5C6860C',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'esIPWhitelist' => 
                  array (
                    'description' => '私网访问白名单（已废弃）。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '更新后的白名单列表。',
                      'type' => 'string',
                      'example' => '["106.11.xx.xx", "10.61.xx.xx"]',
                    ),
                  ),
                  'networkConfig' => 
                  array (
                    'description' => '网络配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'whiteIpGroupList' => 
                      array (
                        'description' => '白名单组列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '白名单组信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'groupName' => 
                            array (
                              'description' => '白名单组的组名。默认包含default分组。',
                              'type' => 'string',
                              'example' => 'test_group',
                            ),
                            'ips' => 
                            array (
                              'description' => '白名单组中的IP地址信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '白名单组中的IP地址列表。',
                                'type' => 'string',
                                'example' => '["10.2.xx.xx", "10.3.xx.xx"]',
                              ),
                            ),
                            'whiteIpType' => 
                            array (
                              'description' => '白名单类型。固定为PRIVATE_ES，即私网访问白名单。',
                              'type' => 'string',
                              'example' => 'PRIVATE_ES',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8D58B014-BBD7-4D80-B219-00B9D5C6860C\\",\\n  \\"Result\\": {\\n    \\"esIPWhitelist\\": [\\n      \\"[\\\\\\"106.11.xx.xx\\\\\\", \\\\\\"10.61.xx.xx\\\\\\"]\\"\\n    ],\\n    \\"networkConfig\\": {\\n      \\"whiteIpGroupList\\": [\\n        {\\n          \\"groupName\\": \\"test_group\\",\\n          \\"ips\\": [\\n            \\"[\\\\\\"10.2.xx.xx\\\\\\", \\\\\\"10.3.xx.xx\\\\\\"]\\"\\n          ],\\n          \\"whiteIpType\\": \\"PRIVATE_ES\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改实例的VPC私网访问白名单',
      'description' => '## 注意事项
- 当实例状态为生效中（activating）、失效（invalid）和冻结（inactive）时，无法更新信息。
- 您可以通过两种方式更新白名单：IP白名单列表和IP白名单组。两种方式不能同时使用，且除了InstanceId和clientToken外，两种方式支持配置的参数也不同，具体如下： 
    - IP白名单列表：esIPWhitelist
    - IP白名单组：modifyMode、whiteIpGroup
- 公网访问白名单不支持配置私网IP地址，私网访问白名单不支持配置公网IP地址。',
      'requestParamsDescription' => '><notice> 白名单组的增加和删除是由modifyMode为Cover的调用来实现的，Delete和Append无法实现白名单组粒度的增删，只能修改白名单组中的IP地址列表。具体说明如下：

- modifyMode为Cover时，如果ips为空，则删除该白名单组。如果groupName不在已有白名单组组名的列表中，则会新建一个白名单组。
- modifyMode为Delete时，删除后的ips至少需要保留一个IP地址。
- modifyMode为Append时，需要保证白名单组组名为已创建，否则会提示NotFound的错误。

></notice>',
      'responseParamsDescription' => '>  以下返回示例中，本文只保证包含返回数据列表中的参数，而未提到的参数仅供参考，参数说明可参见[ListInstance](~~142230~~)。程序中不能强制依赖获取这些参数。',
      'extraInfo' => ' ',
    ),
    'ListInstance' => 
    array (
      'summary' => '获取ES实例列表信息。',
      'path' => '/openapi/instances',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '64319',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREelasticsearchFBYZT8',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例列表的页码。
起始值：**1**，默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页条数。最大值：**100**，默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例名称，支持模糊查询。例如搜索**abc**的所有实例，则可能返回**abc**、**abcde**、**xyabc**、**xabcy**的所有实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'aliyunes_test1',
          ),
        ),
        3 => 
        array (
          'name' => 'instanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'es-cn-v641a0ta3000g****',
          ),
        ),
        4 => 
        array (
          'name' => 'esVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例版本。',
            'type' => 'string',
            'required' => false,
            'example' => '6.7_with_X-Pack',
          ),
        ),
        5 => 
        array (
          'name' => 'resourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所在的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-aekzvowej3i****',
          ),
        ),
        6 => 
        array (
          'name' => 'tags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例标签。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"tagKey":"key1","tagValue":"value1"}]',
          ),
        ),
        7 => 
        array (
          'name' => 'vpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所在的专有网络ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp16k1dvzxtmagcva****',
          ),
        ),
        8 => 
        array (
          'name' => 'zoneId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所在的可用区ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou-i',
          ),
        ),
        9 => 
        array (
          'name' => 'paymentType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的付费类型。可选值：

- postpaid：按量付费

- prepaid：包年包月',
            'type' => 'string',
            'required' => false,
            'example' => 'postpaid',
          ),
        ),
        10 => 
        array (
          'name' => 'instanceCategory',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例版本类型。可选值：

- x-pack：商业版

- advanced/IS：增强版

- community：基础版',
            'type' => 'string',
            'required' => false,
            'example' => 'advanced',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '实例总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'advancedDedicateMaster' => 
                    array (
                      'description' => '是否包含专有主节点，取值含义如下：

- true：包含

- false：不包含',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'nodeAmount' => 
                    array (
                      'description' => '实例的数据节点数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '2',
                    ),
                    'createdAt' => 
                    array (
                      'description' => '实例创建时间。',
                      'type' => 'string',
                      'example' => '2018-07-13T03:58:07.253Z',
                    ),
                    'status' => 
                    array (
                      'description' => '实例的状态，取值含义如下：

- active：正常

- activating：生效中

- inactive：冻结

- invalid：失效',
                      'type' => 'string',
                      'example' => 'active',
                    ),
                    'dedicateMaster' => 
                    array (
                      'description' => '是否包含专有主节点（已废弃），取值含义如下：

- true：包含

- false：不包含',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'serviceVpc' => 
                    array (
                      'description' => '是否为服务VPC。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'paymentType' => 
                    array (
                      'description' => '实例的付费方式。支持：

- **prepaid**：包年包月

- **postpaid**：按量付费',
                      'type' => 'string',
                      'example' => 'postpaid',
                    ),
                    'resourceGroupId' => 
                    array (
                      'description' => '资源组ID。',
                      'type' => 'string',
                      'example' => 'rg-aekzvowej3i****',
                    ),
                    'postpaidServiceStatus' => 
                    array (
                      'description' => '预付费实例叠加的后付费服务状态。支持：

- **active**：正常

- **closed**：关闭

- **indebt**：欠费冻结中',
                      'type' => 'string',
                      'example' => 'active',
                    ),
                    'description' => 
                    array (
                      'description' => '实例名称。',
                      'type' => 'string',
                      'example' => 'es-cn-abc',
                    ),
                    'esVersion' => 
                    array (
                      'description' => '实例版本。',
                      'type' => 'string',
                      'example' => '6.7_with_X-Pack',
                    ),
                    'isNewDeployment' => 
                    array (
                      'description' => '是否为新部署架构。',
                      'type' => 'string',
                      'example' => 'true',
                    ),
                    'updatedAt' => 
                    array (
                      'description' => '实例最后更新的时间。',
                      'type' => 'string',
                      'example' => '2018-07-18T10:10:04.484Z',
                    ),
                    'instanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'es-cn-v641a0ta3000g****',
                    ),
                    'tags' => 
                    array (
                      'description' => '实例标签。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'tagKey' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'env',
                          ),
                          'tagValue' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'dev',
                          ),
                        ),
                      ),
                    ),
                    'extendConfigs' => 
                    array (
                      'description' => '集群扩展参数配置。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '集群扩展参数配置。',
                        'type' => 'object',
                        'example' => '[{ "configType": "aliVersion",	"aliVersion": "ali1.3.0" }]',
                      ),
                    ),
                    'clientNodeConfiguration' => 
                    array (
                      'description' => '协调节点配置。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'spec' => 
                        array (
                          'description' => '节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
                          'type' => 'string',
                          'example' => 'elasticsearch.sn2ne.large',
                        ),
                        'amount' => 
                        array (
                          'description' => '节点数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'disk' => 
                        array (
                          'description' => '节点存储空间大小，单位为GB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'diskType' => 
                        array (
                          'description' => '节点的存储类型，只支持高效云盘（cloud_efficiency）。',
                          'type' => 'string',
                          'example' => 'cloud_efficiency',
                        ),
                        'specInfo' => 
                        array (
                          'description' => '节点规格描述。',
                          'type' => 'string',
                          'example' => '1C 2G',
                        ),
                      ),
                    ),
                    'elasticDataNodeConfiguration' => 
                    array (
                      'description' => '弹性数据节点配置。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'spec' => 
                        array (
                          'description' => '节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
                          'type' => 'string',
                          'example' => 'elasticsearch.sn2ne.large',
                        ),
                        'amount' => 
                        array (
                          'description' => '节点数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'disk' => 
                        array (
                          'description' => '节点存储空间大小，单位为GB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'diskEncryption' => 
                        array (
                          'description' => '是否为节点开启云盘加密，取值含义如下：

- true：开启

- false：不开启',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'diskType' => 
                        array (
                          'description' => '节点存储类型。支持：

- cloud_ssd：SSD云盘

- cloud_essd：ESSD云盘

- cloud_efficiency：高效云盘',
                          'type' => 'string',
                          'example' => 'cloud_ssd',
                        ),
                        'specInfo' => 
                        array (
                          'description' => '节点规格描述',
                          'type' => 'string',
                          'example' => '1C 2G ',
                        ),
                      ),
                    ),
                    'kibanaConfiguration' => 
                    array (
                      'description' => 'Kibana节点配置。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'spec' => 
                        array (
                          'description' => '节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
                          'type' => 'string',
                          'example' => 'elasticsearch.n4.small',
                        ),
                        'amount' => 
                        array (
                          'description' => '节点数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'disk' => 
                        array (
                          'description' => '节点存储空间大小，单位为GB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'diskType' => 
                        array (
                          'description' => '节点存储类型。',
                          'type' => 'string',
                          'example' => 'cloud_ssd',
                        ),
                        'specInfo' => 
                        array (
                          'description' => '节点规格描述',
                          'type' => 'string',
                          'example' => '1C 2G ',
                        ),
                      ),
                    ),
                    'masterConfiguration' => 
                    array (
                      'description' => 'Master节点配置。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'spec' => 
                        array (
                          'description' => '节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
                          'type' => 'string',
                          'example' => 'elasticsearch.sn2ne.large',
                        ),
                        'amount' => 
                        array (
                          'description' => '节点数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'disk' => 
                        array (
                          'description' => '节点存储空间大小，单位为GB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'diskType' => 
                        array (
                          'description' => '节点存储类型。只支持cloud_ssd（SSD云盘）。',
                          'type' => 'string',
                          'example' => 'cloud_ssd',
                        ),
                        'specInfo' => 
                        array (
                          'description' => '节点规格描述',
                          'type' => 'string',
                          'example' => '1C 2G ',
                        ),
                      ),
                    ),
                    'networkConfig' => 
                    array (
                      'description' => '网络配置。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'vpcId' => 
                        array (
                          'description' => '专有网络ID。',
                          'type' => 'string',
                          'example' => 'vpc-abc',
                        ),
                        'vsArea' => 
                        array (
                          'description' => '实例所在的可用区。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-e',
                        ),
                        'type' => 
                        array (
                          'description' => '网络类型，只支持专有网络VPC（Virtual Private Cloud）。',
                          'type' => 'string',
                          'example' => 'vpc',
                        ),
                        'vswitchId' => 
                        array (
                          'description' => '虚拟交换机ID。',
                          'type' => 'string',
                          'example' => 'vsw-def',
                        ),
                        'whiteIpGroupList' => 
                        array (
                          'title' => '集群公私网网络白名单分组设置。',
                          'description' => '集群公私网网络白名单分组设置。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'groupName' => 
                              array (
                                'title' => '分组名。',
                                'description' => '分组名。',
                                'type' => 'string',
                                'example' => 'default',
                              ),
                              'whiteIpType' => 
                              array (
                                'title' => '网络类型。PRIVATE_ES，ES私网。PUBLIC_KIBANA。Kibana公网。PUBLIC_ES，ES公网。PRIVATE_KIBANA，Kibana私网。',
                                'description' => '网络类型。PRIVATE_ES，ES私网。PUBLIC_KIBANA。Kibana公网。PUBLIC_ES，ES公网。PRIVATE_KIBANA，Kibana私网。',
                                'type' => 'string',
                                'example' => 'PUBLIC_KIBANA',
                                'enum' => 
                                array (
                                  0 => 'PRIVATE_ES',
                                  1 => 'PUBLIC_KIBANA',
                                  2 => 'PUBLIC_ES',
                                  3 => 'PRIVATE_KIBANA',
                                ),
                              ),
                              'ips' => 
                              array (
                                'title' => '网络白名单列表。',
                                'description' => '网络白名单列表。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '网络白名单列表。',
                                  'type' => 'string',
                                  'example' => '["0.0.0.0", "127.0.XX.XX"]',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'nodeSpec' => 
                    array (
                      'description' => '数据节点配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'spec' => 
                        array (
                          'description' => '节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
                          'type' => 'string',
                          'example' => 'elasticsearch.n4.small',
                        ),
                        'disk' => 
                        array (
                          'description' => '节点的存储空间大小，单位为GB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '50',
                        ),
                        'diskEncryption' => 
                        array (
                          'description' => '是否使用磁盘加密，取值含义如下：

- true：使用
- false：不使用',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'diskType' => 
                        array (
                          'description' => '节点的存储类型。支持：

- cloud_ssd：SSD云盘

- cloud_efficiency：高效云盘',
                          'type' => 'string',
                          'example' => 'cloud_ssd',
                        ),
                        'performanceLevel' => 
                        array (
                          'description' => 'ESSD云盘的性能级别。当diskType为cloud_essd时，该参数必选，支持PL1、PL2、PL3。',
                          'type' => 'string',
                          'example' => 'PL1',
                        ),
                        'specInfo' => 
                        array (
                          'description' => '节点规格描述',
                          'type' => 'string',
                          'example' => '1C 2G ',
                        ),
                      ),
                    ),
                    'vpcInstanceId' => 
                    array (
                      'description' => '专有网络ID。',
                      'type' => 'string',
                      'example' => 'vpc-bp1uag5jj38c****',
                    ),
                    'kibanaIPWhitelist' => 
                    array (
                      'title' => '集群Kibana节点公网访问白名单。',
                      'description' => '集群Kibana节点公网访问白名单。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '集群Kibana节点公网访问白名单。',
                        'type' => 'string',
                        'example' => '"0.0.0.0/0"',
                      ),
                    ),
                    'kibanaPrivateIPWhitelist' => 
                    array (
                      'title' => '集群Kibana节点私网访问白名单。',
                      'description' => '集群Kibana节点私网访问白名单。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '集群Kibana节点私网访问白名单。',
                        'type' => 'string',
                        'example' => '["192.168.XX.XX"]',
                      ),
                    ),
                    'publicIpWhitelist' => 
                    array (
                      'title' => 'Elasticsearch集群公网访问白名单。',
                      'description' => 'Elasticsearch集群公网访问白名单。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'Elasticsearch集群公网访问白名单。',
                        'type' => 'string',
                        'example' => '[ "0.0.0.0/0" ]',
                      ),
                    ),
                    'privateNetworkIpWhiteList' => 
                    array (
                      'title' => 'Elasticsearch集群私网访问白名单。',
                      'description' => 'Elasticsearch集群私网访问白名单。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'Elasticsearch集群私网访问白名单。',
                        'type' => 'string',
                        'example' => '["192.168.XX.XX/25"]',
                      ),
                    ),
                    'endTime' => 
                    array (
                      'description' => '实例到期时间。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1715826092044',
                    ),
                    'archType' => 
                    array (
                      'description' => '部署模式，架构类型：
exclusive：基础管控
public：云原生新管控',
                      'type' => 'string',
                      'example' => 'public',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'title' => 'Code',
                'description' => 'Code',
                'type' => 'string',
              ),
              'Message' => 
              array (
                'title' => 'Message',
                'description' => 'Message',
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => 'RequestId',
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 10\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"advancedDedicateMaster\\": false,\\n      \\"nodeAmount\\": 2,\\n      \\"createdAt\\": \\"2018-07-13T03:58:07.253Z\\",\\n      \\"status\\": \\"active\\",\\n      \\"dedicateMaster\\": false,\\n      \\"serviceVpc\\": true,\\n      \\"paymentType\\": \\"postpaid\\",\\n      \\"resourceGroupId\\": \\"rg-aekzvowej3i****\\",\\n      \\"postpaidServiceStatus\\": \\"active\\",\\n      \\"description\\": \\"es-cn-abc\\",\\n      \\"esVersion\\": \\"6.7_with_X-Pack\\",\\n      \\"isNewDeployment\\": \\"true\\",\\n      \\"updatedAt\\": \\"2018-07-18T10:10:04.484Z\\",\\n      \\"instanceId\\": \\"es-cn-v641a0ta3000g****\\",\\n      \\"tags\\": [\\n        {\\n          \\"tagKey\\": \\"env\\",\\n          \\"tagValue\\": \\"dev\\"\\n        }\\n      ],\\n      \\"extendConfigs\\": [\\n        [\\n          {\\n            \\"configType\\": \\"aliVersion\\",\\n            \\"aliVersion\\": \\"ali1.3.0\\"\\n          }\\n        ]\\n      ],\\n      \\"clientNodeConfiguration\\": {\\n        \\"spec\\": \\"elasticsearch.sn2ne.large\\",\\n        \\"amount\\": 3,\\n        \\"disk\\": 20,\\n        \\"diskType\\": \\"cloud_efficiency\\",\\n        \\"specInfo\\": \\"1C 2G\\"\\n      },\\n      \\"elasticDataNodeConfiguration\\": {\\n        \\"spec\\": \\"elasticsearch.sn2ne.large\\",\\n        \\"amount\\": 3,\\n        \\"disk\\": 20,\\n        \\"diskEncryption\\": true,\\n        \\"diskType\\": \\"cloud_ssd\\",\\n        \\"specInfo\\": \\"1C 2G \\"\\n      },\\n      \\"kibanaConfiguration\\": {\\n        \\"spec\\": \\"elasticsearch.n4.small\\",\\n        \\"amount\\": 1,\\n        \\"disk\\": 20,\\n        \\"diskType\\": \\"cloud_ssd\\",\\n        \\"specInfo\\": \\"1C 2G \\"\\n      },\\n      \\"masterConfiguration\\": {\\n        \\"spec\\": \\"elasticsearch.sn2ne.large\\",\\n        \\"amount\\": 3,\\n        \\"disk\\": 20,\\n        \\"diskType\\": \\"cloud_ssd\\",\\n        \\"specInfo\\": \\"1C 2G \\"\\n      },\\n      \\"networkConfig\\": {\\n        \\"vpcId\\": \\"vpc-abc\\",\\n        \\"vsArea\\": \\"cn-hangzhou-e\\",\\n        \\"type\\": \\"vpc\\",\\n        \\"vswitchId\\": \\"vsw-def\\",\\n        \\"whiteIpGroupList\\": [\\n          {\\n            \\"groupName\\": \\"default\\",\\n            \\"whiteIpType\\": \\"PUBLIC_KIBANA\\",\\n            \\"ips\\": [\\n              \\"[\\\\\\"0.0.0.0\\\\\\", \\\\\\"127.0.XX.XX\\\\\\"]\\"\\n            ]\\n          }\\n        ]\\n      },\\n      \\"nodeSpec\\": {\\n        \\"spec\\": \\"elasticsearch.n4.small\\",\\n        \\"disk\\": 50,\\n        \\"diskEncryption\\": false,\\n        \\"diskType\\": \\"cloud_ssd\\",\\n        \\"performanceLevel\\": \\"PL1\\",\\n        \\"specInfo\\": \\"1C 2G \\"\\n      },\\n      \\"vpcInstanceId\\": \\"vpc-bp1uag5jj38c****\\",\\n      \\"kibanaIPWhitelist\\": [\\n        \\"\\\\\\"0.0.0.0/0\\\\\\"\\"\\n      ],\\n      \\"kibanaPrivateIPWhitelist\\": [\\n        \\"[\\\\\\"192.168.XX.XX\\\\\\"]\\"\\n      ],\\n      \\"publicIpWhitelist\\": [\\n        \\"[ \\\\\\"0.0.0.0/0\\\\\\" ]\\"\\n      ],\\n      \\"privateNetworkIpWhiteList\\": [\\n        \\"[\\\\\\"192.168.XX.XX/25\\\\\\"]\\"\\n      ],\\n      \\"endTime\\": 1715826092044,\\n      \\"archType\\": \\"public\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'ES实例列表信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => '  > 以下返回示例中，包含响应返回中的大部分参数，具体以实际返回为准，程序中不建议强制依赖获取以上参数。',
      'extraInfo' => ' ',
    ),
    'DescribeInstance' => 
    array (
      'summary' => '调用DescribeInstance，查询指定实例的详细信息。',
      'path' => '/openapi/instances/{InstanceId}',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '64251',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREelasticsearchFBYZT8',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-3h4k3axh33th9****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。
',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'advancedDedicateMaster' => 
                  array (
                    'description' => '是否包含专有主节点。取值含义如下：

- true：包含。

- false：不包含。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'protocol' => 
                  array (
                    'description' => '访问协议。支持：HTTP和HTTPS。',
                    'type' => 'string',
                    'example' => 'HTTP',
                  ),
                  'enableKibanaPublicNetwork' => 
                  array (
                    'description' => '是否开启Kibana公网访问。取值含义如下：

- true：开启。

- false：不开启。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'nodeAmount' => 
                  array (
                    'description' => '实例的数据节点数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'createdAt' => 
                  array (
                    'description' => '实例创建时间。',
                    'type' => 'string',
                    'example' => '2018-07-13T03:58:07.253Z',
                  ),
                  'enableKibanaPrivateNetwork' => 
                  array (
                    'description' => '是否开启Kibana私网访问。取值含义如下：

- true：开启。

- false：不开启。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'vpcInstanceId' => 
                  array (
                    'description' => '专有网络ID。',
                    'type' => 'string',
                    'example' => 'vpc-bp1uag5jj38c****',
                  ),
                  'port' => 
                  array (
                    'description' => '实例的访问端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '9200',
                  ),
                  'enablePublic' => 
                  array (
                    'description' => '是否开启实例的公网地址。取值含义如下：

- true：开启。

- false：不开启。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'dedicateMaster' => 
                  array (
                    'description' => '专有主节点（已废弃）。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'kibanaPort' => 
                  array (
                    'description' => 'Kibana的访问端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5601',
                  ),
                  'esConfig' => 
                  array (
                    'description' => '实例的YML文件配置信息。',
                    'type' => 'object',
                    'example' => '{"http.cors.allow-credentials":"false"}',
                  ),
                  'resourceGroupId' => 
                  array (
                    'description' => '实例所属的资源组ID。',
                    'type' => 'string',
                    'example' => 'rg-aekzvowej3i****',
                  ),
                  'paymentType' => 
                  array (
                    'description' => '实例的付费方式。支持：

- prepaid：包年包月。

- postpaid：按量付费。',
                    'type' => 'string',
                    'example' => 'postpaid',
                  ),
                  'postpaidServiceStatus' => 
                  array (
                    'description' => '预付费实例叠加的后付费服务状态。取值含义如下：

- active：正常。

- closed：关闭。

- indebt：欠费冻结中。',
                    'type' => 'string',
                    'example' => 'active',
                  ),
                  'esVersion' => 
                  array (
                    'description' => '实例版本。',
                    'type' => 'string',
                    'example' => '6.3.2_with_X-Pack',
                  ),
                  'haveKibana' => 
                  array (
                    'description' => '是否包含Kibana节点。取值含义如下：

- true：包含。

- false：不包含。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'isNewDeployment' => 
                  array (
                    'description' => '是否为新部署架构。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'warmNode' => 
                  array (
                    'description' => '是否开启冷数据节点。取值含义如下：

- true：开启。

- false：不开启。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'updatedAt' => 
                  array (
                    'description' => '实例最后更新时间。',
                    'type' => 'string',
                    'example' => '2018-07-13T03:58:07.253Z',
                  ),
                  'instanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'es-cn-3h4k3axh33th9****',
                  ),
                  'zoneCount' => 
                  array (
                    'description' => '实例的可用区个数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'publicDomain' => 
                  array (
                    'description' => '实例的公网地址。',
                    'type' => 'string',
                    'example' => 'es-cn-3h4k3axh33th9****.elasticsearch.aliyuncs.com',
                  ),
                  'status' => 
                  array (
                    'description' => '实例的状态，取值含义如下：

- active：正常。

- activating：生效中。

- inactive：冻结。

- invalid：失效。',
                    'type' => 'string',
                    'example' => 'active',
                  ),
                  'serviceVpc' => 
                  array (
                    'description' => '是否为服务vpc。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'publicPort' => 
                  array (
                    'description' => '实例的公网访问端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '9200',
                  ),
                  'haveClientNode' => 
                  array (
                    'description' => '是否包含协调节点。取值含义如下：

- true：包含。

- false：不包含。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'domain' => 
                  array (
                    'description' => '实例的内网地址。',
                    'type' => 'string',
                    'example' => 'es-cn-3h4k3axh33th9****.elasticsearch.aliyuncs.com',
                  ),
                  'description' => 
                  array (
                    'description' => '实例名称。',
                    'type' => 'string',
                    'example' => 'es-cn-abc',
                  ),
                  'kibanaDomain' => 
                  array (
                    'description' => 'Kibana地址。',
                    'type' => 'string',
                    'example' => 'es-cn-3h4k3axh33th9****.kibana.elasticsearch.aliyuncs.com',
                  ),
                  'dictList' => 
                  array (
                    'description' => 'IK词典配置。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'fileSize' => 
                        array (
                          'description' => '词典文件大小，单位：Byte。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2782602',
                        ),
                        'sourceType' => 
                        array (
                          'description' => '词典文件来源类型，取值含义如下：

- OSS：OSS开放存储（需要确保OSS存储空间为公共可读）。
- ORIGIN：开源Elasticsearch。
- UPLOAD：上传的文件。',
                          'type' => 'string',
                          'example' => 'ORIGIN',
                        ),
                        'name' => 
                        array (
                          'description' => '词典文件名称。',
                          'type' => 'string',
                          'example' => 'SYSTEM_MAIN.dic',
                        ),
                        'type' => 
                        array (
                          'description' => '词典文件类型，取值含义如下：

- STOP：停用词。
- MAIN：主词典。
- SYNONYMS：同义词词典。
- ALI_WS：阿里词典。',
                          'type' => 'string',
                          'example' => 'MAIN',
                        ),
                      ),
                    ),
                  ),
                  'synonymsDicts' => 
                  array (
                    'description' => '同义词词典配置。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'fileSize' => 
                        array (
                          'description' => '词典文件大小，单位：字节。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2782602',
                        ),
                        'sourceType' => 
                        array (
                          'description' => '来源类型。',
                          'type' => 'string',
                          'example' => 'ORIGIN',
                        ),
                        'name' => 
                        array (
                          'description' => '词典文件名称。',
                          'type' => 'string',
                          'example' => 'SYSTEM_MAIN.dic',
                        ),
                        'type' => 
                        array (
                          'description' => '词典类型。取值含义如下：

- STOP：停用词。

- MAIN：主词典。

- SYNONYMS：同义词词典。

- ALI_WS：阿里词典。',
                          'type' => 'string',
                          'example' => 'STOP',
                        ),
                      ),
                    ),
                  ),
                  'zoneInfos' => 
                  array (
                    'description' => '可用区信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'status' => 
                        array (
                          'description' => '可用区状态。支持：

- ISOLATION：下线
- NORMAL：正常',
                          'type' => 'string',
                          'example' => 'NORMAL',
                        ),
                        'zoneId' => 
                        array (
                          'description' => '可用区ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-b',
                        ),
                      ),
                    ),
                  ),
                  'aliwsDicts' => 
                  array (
                    'description' => '阿里分词词典配置。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'fileSize' => 
                        array (
                          'description' => '词典文件大小，单位：字节。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2782602',
                        ),
                        'sourceType' => 
                        array (
                          'description' => '词典文件来源类型，取值含义如下：

- OSS：OSS开放存储（需要确保OSS存储空间为公共可读）。
- ORIGIN：开源Elasticsearch。
- UPLOAD：上传的文件。',
                          'type' => 'string',
                          'example' => 'OSS',
                        ),
                        'name' => 
                        array (
                          'description' => '词典文件名称。',
                          'type' => 'string',
                          'example' => 'aliws_ext_dict.txt',
                        ),
                        'type' => 
                        array (
                          'description' => '词典文件类型，取值含义如下：

- STOP：停用词。
- MAIN：主词典。
- SYNONYMS：同义词词典。
- ALI_WS：阿里词典。',
                          'type' => 'string',
                          'example' => 'ALI_WS',
                        ),
                      ),
                    ),
                  ),
                  'tags' => 
                  array (
                    'description' => '实例标签。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'tagKey' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'env',
                        ),
                        'tagValue' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'dev',
                        ),
                      ),
                    ),
                  ),
                  'esIPWhitelist' => 
                  array (
                    'description' => '私网访问白名单列表（已废弃）。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '私网访问白名单（已废弃）。',
                      'type' => 'string',
                      'example' => '[ "0.0.0.0/0" ]',
                    ),
                  ),
                  'extendConfigs' => 
                  array (
                    'description' => '实例的扩展配置数组。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '实例的扩展配置。',
                      'type' => 'object',
                      'example' => '[{ "configType": "aliVersion","aliVersion": "ali1.3.0" }]',
                    ),
                  ),
                  'privateNetworkIpWhiteList' => 
                  array (
                    'description' => '实例的私网地址访问白名单列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '实例的私网地址访问白名单列表。',
                      'type' => 'string',
                      'example' => '0.0.0.0/0',
                    ),
                  ),
                  'publicIpWhitelist' => 
                  array (
                    'description' => '实例的公网地址访问白名单列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '实例的公网地址访问白名单。',
                      'type' => 'string',
                      'example' => '[ "0.0.0.0/0" ]',
                    ),
                  ),
                  'kibanaPrivateIPWhitelist' => 
                  array (
                    'description' => 'kibana私网地址访问白名单列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'Kibana私网地址访问白名单列表。',
                      'type' => 'string',
                      'example' => '["192.168.XX.XX"]',
                    ),
                  ),
                  'esIPBlacklist' => 
                  array (
                    'description' => '私网访问黑名单（已废弃）。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '私网访问黑名单（已废弃）。',
                      'type' => 'string',
                      'example' => '[ "0.0.0.0/0" ]',
                    ),
                  ),
                  'kibanaIPWhitelist' => 
                  array (
                    'description' => 'kibana公网地址访问白名单列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'Kibana公网地址访问白名单列表。',
                      'type' => 'string',
                      'example' => '[ "0.0.0.0/0" ]',
                    ),
                  ),
                  'nodeSpec' => 
                  array (
                    'description' => '数据节点配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'description' => '节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
                        'type' => 'string',
                        'example' => 'elasticsearch.n4.small',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点存储空间大小，单位：GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '0',
                      ),
                      'diskEncryption' => 
                      array (
                        'description' => '是否开启云盘加密：

- true：开启。
- false：不开启。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点磁盘类型。支持：

- cloud_ssd：SSD云盘
- cloud_efficiency：高效云盘',
                        'type' => 'string',
                        'example' => 'cloud_ssd',
                      ),
                      'performanceLevel' => 
                      array (
                        'description' => 'ESSD云盘的性能级别。当diskType为cloud_essd时，该参数必选，支持PL1、PL2、PL3。',
                        'type' => 'string',
                        'example' => 'PL1',
                      ),
                      'specInfo' => 
                      array (
                        'description' => '节点规格描述',
                        'type' => 'string',
                        'example' => '1C 2G ',
                      ),
                    ),
                  ),
                  'networkConfig' => 
                  array (
                    'description' => '网络配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'vpcId' => 
                      array (
                        'description' => 'VPC网络ID。',
                        'type' => 'string',
                        'example' => 'vpc-abc',
                      ),
                      'vsArea' => 
                      array (
                        'description' => '实例所在的可用区。',
                        'type' => 'string',
                        'example' => 'cn-hangzhou-b',
                      ),
                      'type' => 
                      array (
                        'description' => '网络类型，只支持专有网络VPC（Virtual Private Cloud）。',
                        'type' => 'string',
                        'example' => 'vpc',
                      ),
                      'vswitchId' => 
                      array (
                        'description' => '虚拟交换机ID。',
                        'type' => 'string',
                        'example' => 'vsw-abc',
                      ),
                      'whiteIpGroupList' => 
                      array (
                        'description' => '白名单组列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'whiteIpType' => 
                            array (
                              'description' => '白名单类型。取值含义如下：

- PRIVATE_ES：Elasticsearch私网。

- PUBLIC_ES：Elasticsearch公网。

- PRIVATE_KIBANA：Kibana私网。

- PUBLIC_KIBANA：Kibana公网。

',
                              'type' => 'string',
                              'example' => 'PRIVATE_ES',
                            ),
                            'groupName' => 
                            array (
                              'description' => '白名单组的组名。默认包含default分组。',
                              'type' => 'string',
                              'example' => 'default',
                            ),
                            'ips' => 
                            array (
                              'description' => '白名单组中的ip列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '白名单组中的IP列表。',
                                'type' => 'string',
                                'example' => '["0.0.0.0", "127.0.XX.XX"]',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'kibanaConfiguration' => 
                  array (
                    'description' => 'Kibana节点的配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'amount' => 
                      array (
                        'description' => '节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'spec' => 
                      array (
                        'description' => '节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
                        'type' => 'string',
                        'example' => 'elasticsearch.n4.small',
                      ),
                      'disk' => 
                      array (
                        'description' => '单节点存储空间大小。，单位：GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '20',
                      ),
                      'specInfo' => 
                      array (
                        'description' => '节点规格描述',
                        'type' => 'string',
                        'example' => '1C 2G ',
                      ),
                    ),
                  ),
                  'masterConfiguration' => 
                  array (
                    'description' => 'Master节点配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'description' => '节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
                        'type' => 'string',
                        'example' => 'elasticsearch.n4.small',
                      ),
                      'amount' => 
                      array (
                        'description' => '节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点存储空间大小，单位：GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '40',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点存储类型。只支持cloud_ssd（SSD云盘）。',
                        'type' => 'string',
                        'example' => 'cloud_ssd',
                      ),
                      'specInfo' => 
                      array (
                        'description' => '节点规格描述',
                        'type' => 'string',
                        'example' => '1C 2G ',
                      ),
                    ),
                  ),
                  'clientNodeConfiguration' => 
                  array (
                    'description' => '协调节点配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'description' => '节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
                        'type' => 'string',
                        'example' => 'elasticsearch.n4.small',
                      ),
                      'amount' => 
                      array (
                        'description' => '节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点存储空间大小，单位：GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '40',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点存储类型，只支持高效云盘（cloud_efficiency）。',
                        'type' => 'string',
                        'example' => 'cloud_efficiency',
                      ),
                      'specInfo' => 
                      array (
                        'description' => '节点规格描述',
                        'type' => 'string',
                        'example' => '1C 2G ',
                      ),
                    ),
                  ),
                  'warmNodeConfiguration' => 
                  array (
                    'description' => '冷数据节点配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'amount' => 
                      array (
                        'description' => '节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '6',
                      ),
                      'spec' => 
                      array (
                        'description' => '节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
                        'type' => 'string',
                        'example' => 'elasticsearch.n4.small',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点存储空间大小，单位：GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '500',
                      ),
                      'diskEncryption' => 
                      array (
                        'description' => '是否开启云盘加密。取值含义如下：

- true：开启。

- false：不开启。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点存储空间类型。只支持cloud_efficiency（高效云盘）。',
                        'type' => 'string',
                        'example' => 'cloud_efficiency',
                      ),
                      'specInfo' => 
                      array (
                        'description' => '节点规格描述',
                        'type' => 'string',
                        'example' => '1C 2G',
                      ),
                    ),
                  ),
                  'advancedSetting' => 
                  array (
                    'description' => '高级配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'gcName' => 
                      array (
                        'description' => 'GC垃圾回收器名称。支持CMS、G1。',
                        'type' => 'string',
                        'example' => 'CMS',
                      ),
                    ),
                  ),
                  'elasticDataNodeConfiguration' => 
                  array (
                    'description' => '弹性数据节点配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'amount' => 
                      array (
                        'description' => '节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'spec' => 
                      array (
                        'description' => '节点规格。规格信息可通过[产品规格](~~271718~~)查看。',
                        'type' => 'string',
                        'example' => 'elasticsearch.sn2ne.large',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点存储空间大小，单位：GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '20',
                      ),
                      'diskEncryption' => 
                      array (
                        'description' => '是否为节点开启云盘加密，取值含义如下：

- true：开启。

- false：不开启。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点存储类型。支持：

- cloud_ssd：SSD云盘。
- cloud_essd：ESSD云盘。
- cloud_efficiency：高效云盘。',
                        'type' => 'string',
                        'example' => 'cloud_ssd',
                      ),
                      'specInfo' => 
                      array (
                        'description' => '节点规格描述。',
                        'type' => 'string',
                        'example' => '1C 2G ',
                      ),
                    ),
                  ),
                  'ikHotDicts' => 
                  array (
                    'description' => 'IK词典热更新配置。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'type' => 
                        array (
                          'description' => '要更新的词典类型。支持：

- MAIN：IK主分词词库
- STOP：IK停用词库',
                          'type' => 'string',
                          'example' => 'MAIN',
                        ),
                        'sourceType' => 
                        array (
                          'description' => '词典文件来源类型，支持：

- OSS：使用OSS开放存储
- ORIGIN：保留之前已经上传的词典',
                          'type' => 'string',
                          'example' => 'OSS',
                        ),
                        'fileSize' => 
                        array (
                          'description' => '词典文件大小，单位：Byte。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '6',
                        ),
                        'name' => 
                        array (
                          'description' => '词典文件名。',
                          'type' => 'string',
                          'example' => 'deploy_0.dic',
                        ),
                      ),
                    ),
                  ),
                  'instanceCategory' => 
                  array (
                    'title' => '版本类型。',
                    'description' => '实例版本类型。返回值含义如下：
- x-pack：商业版
- advanced/IS：增强版
- community：基础版',
                    'type' => 'string',
                    'example' => 'advanced',
                    'enum' => 
                    array (
                      0 => 'x-pack',
                      1 => 'advanced',
                      2 => 'IS',
                      3 => 'community',
                    ),
                  ),
                  'endtime' => 
                  array (
                    'description' => '实例到期时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1715826092044',
                  ),
                  'archType' => 
                  array (
                    'description' => '部署模式，架构类型：
 exclusive：基础管控
 public：云原生新管控',
                    'type' => 'string',
                    'example' => 'public',
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": {\\n    \\"advancedDedicateMaster\\": true,\\n    \\"protocol\\": \\"HTTP\\",\\n    \\"enableKibanaPublicNetwork\\": true,\\n    \\"nodeAmount\\": 2,\\n    \\"createdAt\\": \\"2018-07-13T03:58:07.253Z\\",\\n    \\"enableKibanaPrivateNetwork\\": false,\\n    \\"vpcInstanceId\\": \\"vpc-bp1uag5jj38c****\\",\\n    \\"port\\": 9200,\\n    \\"enablePublic\\": true,\\n    \\"dedicateMaster\\": false,\\n    \\"kibanaPort\\": 5601,\\n    \\"esConfig\\": {\\n      \\"http.cors.allow-credentials\\": \\"false\\"\\n    },\\n    \\"resourceGroupId\\": \\"rg-aekzvowej3i****\\",\\n    \\"paymentType\\": \\"postpaid\\",\\n    \\"postpaidServiceStatus\\": \\"active\\",\\n    \\"esVersion\\": \\"6.3.2_with_X-Pack\\",\\n    \\"haveKibana\\": true,\\n    \\"isNewDeployment\\": true,\\n    \\"warmNode\\": true,\\n    \\"updatedAt\\": \\"2018-07-13T03:58:07.253Z\\",\\n    \\"instanceId\\": \\"es-cn-3h4k3axh33th9****\\",\\n    \\"zoneCount\\": 2,\\n    \\"publicDomain\\": \\"es-cn-3h4k3axh33th9****.elasticsearch.aliyuncs.com\\",\\n    \\"status\\": \\"active\\",\\n    \\"serviceVpc\\": true,\\n    \\"publicPort\\": 9200,\\n    \\"haveClientNode\\": true,\\n    \\"domain\\": \\"es-cn-3h4k3axh33th9****.elasticsearch.aliyuncs.com\\",\\n    \\"description\\": \\"es-cn-abc\\",\\n    \\"kibanaDomain\\": \\"es-cn-3h4k3axh33th9****.kibana.elasticsearch.aliyuncs.com\\",\\n    \\"dictList\\": [\\n      {\\n        \\"fileSize\\": 2782602,\\n        \\"sourceType\\": \\"ORIGIN\\",\\n        \\"name\\": \\"SYSTEM_MAIN.dic\\",\\n        \\"type\\": \\"MAIN\\"\\n      }\\n    ],\\n    \\"synonymsDicts\\": [\\n      {\\n        \\"fileSize\\": 2782602,\\n        \\"sourceType\\": \\"ORIGIN\\",\\n        \\"name\\": \\"SYSTEM_MAIN.dic\\",\\n        \\"type\\": \\"STOP\\"\\n      }\\n    ],\\n    \\"zoneInfos\\": [\\n      {\\n        \\"status\\": \\"NORMAL\\",\\n        \\"zoneId\\": \\"cn-hangzhou-b\\"\\n      }\\n    ],\\n    \\"aliwsDicts\\": [\\n      {\\n        \\"fileSize\\": 2782602,\\n        \\"sourceType\\": \\"OSS\\",\\n        \\"name\\": \\"aliws_ext_dict.txt\\",\\n        \\"type\\": \\"ALI_WS\\"\\n      }\\n    ],\\n    \\"tags\\": [\\n      {\\n        \\"tagKey\\": \\"env\\",\\n        \\"tagValue\\": \\"dev\\"\\n      }\\n    ],\\n    \\"esIPWhitelist\\": [\\n      \\"[ \\\\\\"0.0.0.0/0\\\\\\" ]\\"\\n    ],\\n    \\"extendConfigs\\": [\\n      [\\n        {\\n          \\"configType\\": \\"aliVersion\\",\\n          \\"aliVersion\\": \\"ali1.3.0\\"\\n        }\\n      ]\\n    ],\\n    \\"privateNetworkIpWhiteList\\": [\\n      \\"0.0.0.0/0\\"\\n    ],\\n    \\"publicIpWhitelist\\": [\\n      \\"[ \\\\\\"0.0.0.0/0\\\\\\" ]\\"\\n    ],\\n    \\"kibanaPrivateIPWhitelist\\": [\\n      \\"[\\\\\\"192.168.XX.XX\\\\\\"]\\"\\n    ],\\n    \\"esIPBlacklist\\": [\\n      \\"[ \\\\\\"0.0.0.0/0\\\\\\" ]\\"\\n    ],\\n    \\"kibanaIPWhitelist\\": [\\n      \\"[ \\\\\\"0.0.0.0/0\\\\\\" ]\\"\\n    ],\\n    \\"nodeSpec\\": {\\n      \\"spec\\": \\"elasticsearch.n4.small\\",\\n      \\"disk\\": 0,\\n      \\"diskEncryption\\": true,\\n      \\"diskType\\": \\"cloud_ssd\\",\\n      \\"performanceLevel\\": \\"PL1\\",\\n      \\"specInfo\\": \\"1C 2G \\"\\n    },\\n    \\"networkConfig\\": {\\n      \\"vpcId\\": \\"vpc-abc\\",\\n      \\"vsArea\\": \\"cn-hangzhou-b\\",\\n      \\"type\\": \\"vpc\\",\\n      \\"vswitchId\\": \\"vsw-abc\\",\\n      \\"whiteIpGroupList\\": [\\n        {\\n          \\"whiteIpType\\": \\"PRIVATE_ES\\",\\n          \\"groupName\\": \\"default\\",\\n          \\"ips\\": [\\n            \\"[\\\\\\"0.0.0.0\\\\\\", \\\\\\"127.0.XX.XX\\\\\\"]\\"\\n          ]\\n        }\\n      ]\\n    },\\n    \\"kibanaConfiguration\\": {\\n      \\"amount\\": 1,\\n      \\"spec\\": \\"elasticsearch.n4.small\\",\\n      \\"disk\\": 20,\\n      \\"specInfo\\": \\"1C 2G \\"\\n    },\\n    \\"masterConfiguration\\": {\\n      \\"spec\\": \\"elasticsearch.n4.small\\",\\n      \\"amount\\": 3,\\n      \\"disk\\": 40,\\n      \\"diskType\\": \\"cloud_ssd\\",\\n      \\"specInfo\\": \\"1C 2G \\"\\n    },\\n    \\"clientNodeConfiguration\\": {\\n      \\"spec\\": \\"elasticsearch.n4.small\\",\\n      \\"amount\\": 3,\\n      \\"disk\\": 40,\\n      \\"diskType\\": \\"cloud_efficiency\\",\\n      \\"specInfo\\": \\"1C 2G \\"\\n    },\\n    \\"warmNodeConfiguration\\": {\\n      \\"amount\\": 6,\\n      \\"spec\\": \\"elasticsearch.n4.small\\",\\n      \\"disk\\": 500,\\n      \\"diskEncryption\\": true,\\n      \\"diskType\\": \\"cloud_efficiency\\",\\n      \\"specInfo\\": \\"1C 2G\\"\\n    },\\n    \\"advancedSetting\\": {\\n      \\"gcName\\": \\"CMS\\"\\n    },\\n    \\"elasticDataNodeConfiguration\\": {\\n      \\"amount\\": 3,\\n      \\"spec\\": \\"elasticsearch.sn2ne.large\\",\\n      \\"disk\\": 20,\\n      \\"diskEncryption\\": true,\\n      \\"diskType\\": \\"cloud_ssd\\",\\n      \\"specInfo\\": \\"1C 2G \\"\\n    },\\n    \\"ikHotDicts\\": [\\n      {\\n        \\"type\\": \\"MAIN\\",\\n        \\"sourceType\\": \\"OSS\\",\\n        \\"fileSize\\": 6,\\n        \\"name\\": \\"deploy_0.dic\\"\\n      }\\n    ],\\n    \\"instanceCategory\\": \\"advanced\\",\\n    \\"endtime\\": 1715826092044,\\n    \\"archType\\": \\"public\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查看实例详情',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' > 以下返回示例中，本文只保证包含返回数据列表中的参数，而未提到的参数仅供参考，程序中不能强制依赖获取这些参数。',
      'extraInfo' => ' ',
    ),
    'DescribeRegions' => 
    array (
      'path' => '/openapi/regions',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '64256',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREelasticsearchFBYZT8',
        ),
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1ADFG',
              ),
              'Result' => 
              array (
                'description' => '返回结果列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'regionId' => 
                    array (
                      'description' => '地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'status' => 
                    array (
                      'description' => '地域的可用状态。',
                      'type' => 'string',
                      'example' => 'available',
                    ),
                    'regionEndpoint' => 
                    array (
                      'description' => '地域的Endpoint地址。',
                      'type' => 'string',
                      'example' => 'elasticsearch.cn-hangzhou.aliyuncs.com',
                    ),
                    'localName' => 
                    array (
                      'description' => '地域名称。',
                      'type' => 'string',
                      'example' => 'China (Hangzhou)',
                    ),
                    'consoleEndpoint' => 
                    array (
                      'description' => '地域在控制台中暴露的Endpoint地址。',
                      'type' => 'string',
                      'example' => 'https://elasticsearch-cn-hangzhou.console.aliyun.com',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1ADFG\\",\\n  \\"Result\\": [\\n    {\\n      \\"regionId\\": \\"cn-hangzhou\\",\\n      \\"status\\": \\"available\\",\\n      \\"regionEndpoint\\": \\"elasticsearch.cn-hangzhou.aliyuncs.com\\",\\n      \\"localName\\": \\"China (Hangzhou)\\",\\n      \\"consoleEndpoint\\": \\"https://elasticsearch-cn-hangzhou.console.aliyun.com\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取区域信息',
      'summary' => '获取阿里云Elasticsearch的区域信息。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListAllNode' => 
    array (
      'summary' => '获取Elasticsearch集群下的所有节点信息。',
      'path' => '/openapi/instances/{InstanceId}/nodes',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-tl32cpgwa002l****',
          ),
        ),
        1 => 
        array (
          'name' => 'extended',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否返回节点的监控信息。可选值：

- true（默认值）：返回

- false：不返回',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0D71B597-F3FF-5B56-88D7-74F9D3F7****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'heapPercent' => 
                    array (
                      'description' => 'JVM内存使用率。',
                      'type' => 'string',
                      'example' => '21.6%',
                    ),
                    'zoneId' => 
                    array (
                      'description' => '节点所在可用区。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou-i',
                    ),
                    'cpuPercent' => 
                    array (
                      'description' => 'CPU使用率。
> 当**extended**为**true**且节点的监控信息在同步时，参数值会返回null，此时需要等待10秒重新发送请求获取该值。',
                      'type' => 'string',
                      'example' => '4.2%',
                    ),
                    'host' => 
                    array (
                      'description' => '节点IP。
',
                      'type' => 'string',
                      'example' => '10.15.XX.XX',
                    ),
                    'nodeType' => 
                    array (
                      'description' => '节点类型，支持：

- MASTER：专有主节点
- WORKER：热节点
- WORKER_WARM：冷节点
- COORDINATING：协调节点
- KIBANA：Kibana节点',
                      'type' => 'string',
                      'example' => 'WORKER',
                    ),
                    'diskUsedPercent' => 
                    array (
                      'description' => '磁盘使用率。',
                      'type' => 'string',
                      'example' => '1.0%',
                    ),
                    'port' => 
                    array (
                      'description' => '节点访问端口。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '9200',
                    ),
                    'loadOneM' => 
                    array (
                      'description' => '一分钟负载。',
                      'type' => 'string',
                      'example' => '0.12',
                    ),
                    'health' => 
                    array (
                      'description' => '节点健康状态。支持：GREEN、YELLOW、RED和GRAY。

',
                      'type' => 'string',
                      'example' => 'GREEN',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0D71B597-F3FF-5B56-88D7-74F9D3F7****\\",\\n  \\"Result\\": [\\n    {\\n      \\"heapPercent\\": \\"21.6%\\",\\n      \\"zoneId\\": \\"cn-hangzhou-i\\",\\n      \\"cpuPercent\\": \\"4.2%\\",\\n      \\"host\\": \\"10.15.XX.XX\\",\\n      \\"nodeType\\": \\"WORKER\\",\\n      \\"diskUsedPercent\\": \\"1.0%\\",\\n      \\"port\\": 9200,\\n      \\"loadOneM\\": \\"0.12\\",\\n      \\"health\\": \\"GREEN\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'ES实例节点信息',
      'requestParamsDescription' => ' ',
      'extraInfo' => '## 常见问题
Q：使用ListAllNode API，返回结果不完整，部分情况下没有返回diskUsedPercent、cpuPercent、heapPercent等指标信息，怎么处理？
A：OpenAPI与Elasticsearch Client API不同，无法确保可实时获取到集群的所有指标状态。例如当集群负载高或不稳定时，会导致某些指标信息无法返回。此时您可以使用Elasticsearch Client API获取Elasticsearch集群自身的指标信息，详细信息请参见[通过客户端访问阿里云Elasticsearch](~~69194~~)。',
    ),
    'GetElastictask' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/elastic-task',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-6ja1ro4jt000c****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'elasticExpansionTask' => 
                  array (
                    'description' => '弹性扩容规则。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'triggerType' => 
                      array (
                        'description' => '触发条件。目前仅支持**crontab**，表示定时触发。',
                        'type' => 'string',
                        'example' => 'crontab',
                      ),
                      'replicaCount' => 
                      array (
                        'description' => '目标索引的副本数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'elasticNodeCount' => 
                      array (
                        'description' => '目标高峰期弹性数据节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'cronExpression' => 
                      array (
                        'description' => '触发周期，使用Quartz Cron表达式。',
                        'type' => 'string',
                        'example' => '0 0 0 ? * MON',
                      ),
                      'targetIndices' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '目标弹性索引名称，支持通配符。',
                          'type' => 'string',
                          'example' => 'index',
                        ),
                      ),
                    ),
                  ),
                  'elasticShrinkTask' => 
                  array (
                    'description' => '弹性缩容规则。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'triggerType' => 
                      array (
                        'description' => '触发条件。目前仅支持crontab，表示定时触发。',
                        'type' => 'string',
                        'example' => 'crontab',
                      ),
                      'replicaCount' => 
                      array (
                        'description' => '目标索引的副本数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'elasticNodeCount' => 
                      array (
                        'description' => '目标低峰期弹性数据节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'cronExpression' => 
                      array (
                        'description' => '触发周期，使用Quartz Cron表达式。',
                        'type' => 'string',
                        'example' => '4 4 4 ? * WED',
                      ),
                      'targetIndices' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '目标弹性索引名称，支持通配符。',
                          'type' => 'string',
                          'example' => 'index',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The specified cluster does not exist. Check the cluster status and try again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Result\\": {\\n    \\"elasticExpansionTask\\": {\\n      \\"triggerType\\": \\"crontab\\",\\n      \\"replicaCount\\": 2,\\n      \\"elasticNodeCount\\": 2,\\n      \\"cronExpression\\": \\"0 0 0 ? * MON\\",\\n      \\"targetIndices\\": [\\n        \\"index\\"\\n      ]\\n    },\\n    \\"elasticShrinkTask\\": {\\n      \\"triggerType\\": \\"crontab\\",\\n      \\"replicaCount\\": 2,\\n      \\"elasticNodeCount\\": 2,\\n      \\"cronExpression\\": \\"4 4 4 ? * WED\\",\\n      \\"targetIndices\\": [\\n        \\"index\\"\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取集群弹性扩缩容规则',
      'summary' => '获取集群的弹性扩缩容规则。必须在创建实例时购买弹性节点才可。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListInstanceIndices' => 
    array (
      'summary' => '能够过滤系统索引。',
      'path' => '/openapi/instances/{InstanceId}/indices',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-tl329rbpc0001****',
          ),
        ),
        1 => 
        array (
          'name' => 'all',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否获取所有索引，取值含义如下：

- true：返回包含系统索引在内的索引列表。

- false（默认值）：返回除系统索引外的索引列表。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '索引名称，支持模糊匹配。',
            'type' => 'string',
            'required' => false,
            'example' => 'log-0001',
          ),
        ),
        3 => 
        array (
          'name' => 'isManaged',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查看托管中的索引，取值含义如下：

- true：只查看托管中的索引。

- false（默认值）：查看全部索引。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'isOpenstore',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否仅查看OpenStore冷阶段索引。可选值：

- true：仅查看OpenStore冷阶段索引。

- false（默认值）：查看全部索引。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例列表的页码。起始值：1，默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页条数。最大值：100，默认值：20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '15',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Managed-StorageSize' => 
                  array (
                    'description' => '云端托管中的索引总大小。单位：Byte。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '18093942932',
                  ),
                  'X-Managed-Count' => 
                  array (
                    'description' => '云端托管中的索引总个数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '15',
                  ),
                  'X-OSS-StorageSize' => 
                  array (
                    'description' => '该实例的OpenStore冷阶段索引总大小。单位：Byte。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '9093942932',
                  ),
                  'X-OSS-Count' => 
                  array (
                    'description' => 'OpenStore冷阶段索引总条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '索引列表详情。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'isManaged' => 
                    array (
                      'description' => '该参数已废弃，无需关注。',
                      'type' => 'string',
                      'example' => 'false',
                    ),
                    'createTime' => 
                    array (
                      'description' => '查询索引列表的时间。',
                      'type' => 'string',
                      'example' => '2021-01-11T05:49:41.114Z',
                    ),
                    'size' => 
                    array (
                      'description' => '当前索引所占用的总存储空间。单位：Byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '49298589',
                    ),
                    'managedStatus' => 
                    array (
                      'description' => '索引托管状态，支持以下三种状态：

- following：托管中。

- closing：取消托管中。

- closed：未托管。',
                      'type' => 'string',
                      'example' => 'closing',
                    ),
                    'name' => 
                    array (
                      'description' => '索引名称。',
                      'type' => 'string',
                      'example' => '.kibana_task_manager_1',
                    ),
                    'health' => 
                    array (
                      'description' => '索引的运行状态，支持以下三种状态：

- green：健康。

- yellow：报警。

- red：异常。',
                      'type' => 'string',
                      'example' => 'green',
                    ),
                    'phase' => 
                    array (
                      'description' => '当前存储生命周期。取值含义：

- warm：温阶段。

- cold：冷阶段。

- hot：热阶段。

- delete：删除阶段。

> 为空时，表示当前索引不被生命周期所管理。',
                      'type' => 'string',
                      'example' => 'warm',
                    ),
                    'ilmExplain' => 
                    array (
                      'description' => '当前索引的全量生命周期状态。',
                      'type' => 'string',
                      'example' => '{    "indices": {         ".ds-console-2021.08.18-000002": {             "index": ".ds-console-2021.08.18-000002",             "managed": true,             "policy": "console",             "lifecycle_date_millis": 1629277498775,             "age": "2.64h",             "phase": "hot",             "phase_time_millis": 1629277450334,             "action": "complete",             "action_time_millis": 1629278605586,             "step": "complete",             "step_time_millis": 1629278605586,             "phase_execution": {                 "policy": "console",                 "phase_definition": {                     "min_age": "0s",                     "actions": {                         "rollover": {                             "max_size": "1gb",                             "max_age": "1d",                             "max_docs": 10000                         },                         "set_priority": {                             "priority": 1000                         }                     }                 },                 "version": 1,                 "modified_date_in_millis": 1629277370953             }         }     } }',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\",\\n  \\"Headers\\": {\\n    \\"X-Managed-StorageSize\\": 18093942932,\\n    \\"X-Managed-Count\\": 15,\\n    \\"X-OSS-StorageSize\\": 9093942932,\\n    \\"X-OSS-Count\\": 5\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"isManaged\\": \\"false\\",\\n      \\"createTime\\": \\"2021-01-11T05:49:41.114Z\\",\\n      \\"size\\": 49298589,\\n      \\"managedStatus\\": \\"closing\\",\\n      \\"name\\": \\".kibana_task_manager_1\\",\\n      \\"health\\": \\"green\\",\\n      \\"phase\\": \\"warm\\",\\n      \\"ilmExplain\\": \\"{    \\\\\\"indices\\\\\\": {         \\\\\\".ds-console-2021.08.18-000002\\\\\\": {             \\\\\\"index\\\\\\": \\\\\\".ds-console-2021.08.18-000002\\\\\\",             \\\\\\"managed\\\\\\": true,             \\\\\\"policy\\\\\\": \\\\\\"console\\\\\\",             \\\\\\"lifecycle_date_millis\\\\\\": 1629277498775,             \\\\\\"age\\\\\\": \\\\\\"2.64h\\\\\\",             \\\\\\"phase\\\\\\": \\\\\\"hot\\\\\\",             \\\\\\"phase_time_millis\\\\\\": 1629277450334,             \\\\\\"action\\\\\\": \\\\\\"complete\\\\\\",             \\\\\\"action_time_millis\\\\\\": 1629278605586,             \\\\\\"step\\\\\\": \\\\\\"complete\\\\\\",             \\\\\\"step_time_millis\\\\\\": 1629278605586,             \\\\\\"phase_execution\\\\\\": {                 \\\\\\"policy\\\\\\": \\\\\\"console\\\\\\",                 \\\\\\"phase_definition\\\\\\": {                     \\\\\\"min_age\\\\\\": \\\\\\"0s\\\\\\",                     \\\\\\"actions\\\\\\": {                         \\\\\\"rollover\\\\\\": {                             \\\\\\"max_size\\\\\\": \\\\\\"1gb\\\\\\",                             \\\\\\"max_age\\\\\\": \\\\\\"1d\\\\\\",                             \\\\\\"max_docs\\\\\\": 10000                         },                         \\\\\\"set_priority\\\\\\": {                             \\\\\\"priority\\\\\\": 1000                         }                     }                 },                 \\\\\\"version\\\\\\": 1,                 \\\\\\"modified_date_in_millis\\\\\\": 1629277370953             }         }     } }\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取集群的索引列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'createInstance' => 
    array (
      'summary' => '创建Elasticsearch实例。',
      'path' => '/openapi/instances',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。
',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体参数。',
            'type' => 'object',
            'properties' => 
            array (
              'zoneCount' => 
              array (
                'description' => '实例的可用区数量。可选值：1、2、3，默认值：1。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '2',
              ),
              'paymentType' => 
              array (
                'description' => '付费类型。可选值：

- postpaid：按量计费
- prepaid：包年包月',
                'type' => 'string',
                'required' => false,
                'example' => 'postpaid',
              ),
              'paymentInfo' => 
              array (
                'description' => '包年包月实例的付费详情。创建包年包月实例时必填。',
                'required' => false,
                '$ref' => '#/components/schemas/PaymentInfo',
              ),
              'nodeAmount' => 
              array (
                'description' => '数据节点个数，取值范围为2~50。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => true,
                'example' => '3',
              ),
              'instanceCategory' => 
              array (
                'description' => '版本类型：
- x-pack：创建商业版实例，或不开启Indexing Service和OpenStore的内核增强版实例。
- IS：创建开启Indexing Service或OpenStore的内核增强版实例。',
                'type' => 'string',
                'required' => false,
                'example' => 'advanced',
              ),
              'esAdminPassword' => 
              array (
                'description' => '实例的访问密码。要求包含以下字符中的三种：大写字母、小写字母、数字、特殊字符：!@#$%^&*()_+-=，长度为8~32位。',
                'type' => 'string',
                'required' => true,
                'example' => 'Es_password',
              ),
              'esVersion' => 
              array (
                'description' => '实例版本。可选值：
- 8.5.1_with_X-Pack
- 7.10_with_X-Pack
- 6.7_with_X-Pack
- 7.7_with_X-Pack
- 6.8_with_X-Pack
- 6.3_with_X-Pack
- 5.6_with_X-Pack
- 5.5.3_with_X-Pack

> 以上所列版本不一定包含Elasticsearch实例支持的所有版本，实际支持的版本可调用[GetRegionConfiguration](~~254099~~)接口查看。',
                'type' => 'string',
                'required' => true,
                'example' => '5.5.3_with_X-Pack',
              ),
              'nodeSpec' => 
              array (
                'description' => '数据节点配置。

> 在北京、上海、杭州和深圳地域，通过createInstance创建新一代云盘型数据节点的实例时，需指定规格族+后缀`.new`，例如， elasticsearch.sn1ne.large.new。',
                'required' => false,
                '$ref' => '#/components/schemas/NodeSpec',
              ),
              'masterConfiguration' => 
              array (
                'description' => '专有主节点配置。
> 在北京、上海、杭州和深圳地域，通过createInstance创建新一代云盘型数据节点的实例时，需指定规格族+后缀`.new`，例如， elasticsearch.sn1ne.large.new。',
                'required' => false,
                '$ref' => '#/components/schemas/MasterNodeConfiguration',
              ),
              'warmNodeConfiguration' => 
              array (
                'description' => '冷数据节点配置。',
                'required' => false,
                '$ref' => '#/components/schemas/WarmNodeConfiguration',
              ),
              'clientNodeConfiguration' => 
              array (
                'description' => '协调节点配置。',
                'required' => false,
                '$ref' => '#/components/schemas/ClientNodeConfiguration',
              ),
              'elasticDataNodeConfiguration' => 
              array (
                'description' => '弹性节点配置。',
                'required' => false,
                '$ref' => '#/components/schemas/ElasticDataNodeConfiguration',
              ),
              'kibanaConfiguration' => 
              array (
                'description' => 'Kibana节点配置。

> 强烈建议开启Kibana节点。',
                'required' => false,
                '$ref' => '#/components/schemas/KibanaNodeConfiguration',
              ),
              'networkConfig' => 
              array (
                'description' => '网络配置。

> 创建实例时不支持指定IP白名单。',
                'required' => true,
                '$ref' => '#/components/schemas/NetworkConfig',
              ),
              'resourceGroupId' => 
              array (
                'title' => '资源组id。',
                'description' => '实例所属的资源组ID。',
                'type' => 'string',
                'required' => false,
                'example' => 'rg-aekzu7tsu4n****',
              ),
              'description' => 
              array (
                'title' => '实例名称，',
                'description' => '实例名称。',
                'type' => 'string',
                'required' => false,
                'example' => 'es',
              ),
              'tags' => 
              array (
                'title' => '实例标签组。',
                'description' => '实例标签组。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '实例标签。',
                  'description' => '实例标签。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'tagKey' => 
                    array (
                      'title' => '实例标签键。',
                      'description' => '实例的标签键。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'KeyTest',
                    ),
                    'tagValue' => 
                    array (
                      'title' => '实例标签值。',
                      'description' => '实例的标签值。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'KeyValue',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
            ),
            'required' => false,
            'example' => '{   "description": "xpack-hot-cold",   "nodeAmount": 2,   "esVersion": "7.10_with_X-Pack",   "instanceCategory": "x-pack",   "nodeSpec": {     "spec": "elasticsearch.sn2ne.xlarge",     "disk": 20,     "diskType": "cloud_ssd"   },   "warmNodeConfiguration": {     "spec": "elasticsearch.sn1ne.xlarge",     "amount": 3,     "diskType": "cloud_efficiency",     "disk": 500   },   "networkConfig": {     "type": "vpc",     "vpcId": "vpc-8vbfu74bmw4m7m84a****",     "vswitchId": "vsw-8vbnk6cmurbpump2f****",     "vsArea": "cn-zhangjiakou-c"   },   "paymentType": "postpaid",   "esAdminPassword": "yourPassword",   "kibanaConfiguration": {     "spec": "elasticsearch.sn1ne.large"   } }',
          ),
        ),
      ),
      'responses' => 
      array (
        202 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '838D9D11-8EEF-46D8-BF0D-BC8FC2B0C2F3',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'instanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'es-is-0u2ecp69tt****',
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{}","errorExample":""},{"type":"xml","example":"<createInstanceResponse>\\n    <RequestId>838D9D11-8EEF-46D8-BF0D-BC8FC2B0C2F3</RequestId>\\n    <Result>\\n        <instanceId>es-is-0u2ecp69tt****</instanceId>\\n    </Result>\\n</createInstanceResponse>","errorExample":""}]',
      'title' => '创建ES实例',
      'description' => '### 注意事项
- 请确保在使用该接口前，已充分了解Elasticsearch产品的收费方式和价格。详情请参见[阿里云Elasticsearch定价](https://www.aliyun.com/price/product?spm=a2c4g.11186623.2.7.657d2cbeRoSPCd#/elasticsearch/detail)。
- 创建实例需要通过实名认证。<props="china"><ph>详情请参见[实名认证](~~37175~~)。</ph></props>
- 创建实例时不需要指定可用区，实例默认与所选VPC在同一可用区中。

',
      'requestParamsDescription' => '> - 阿里云Elasticsearch支持的节点规格列表，请参见[阿里云Elasticsearch定价信息](https://www.aliyun.com/price/product?spm=a2c4g.11186623.2.10.653c6c88NcQPZY#/elasticsearch/detail)和[产品规格](~~271718~~)。
- diskType参数是节点的存储类型，普通云盘型规格该参数必填，本地盘规格该参数非必填。



请求体参数示例如下：

- 创建通用商业版实例，同时包含冷、热节点。
```
{
  "description": "xpack-hot-cold",
  "nodeAmount": 2,
  "esVersion": "7.10_with_X-Pack",
  "instanceCategory": "x-pack",
  "nodeSpec": {
    "spec": "elasticsearch.sn2ne.xlarge",
    "disk": 20,
    "diskType": "cloud_ssd"
  },
  "warmNodeConfiguration": {
    "spec": "elasticsearch.sn1ne.xlarge",
    "amount": 3,
    "diskType": "cloud_efficiency",
    "disk": 500
  },
  "networkConfig": {
    "type": "vpc",
    "vpcId": "vpc-8vbfu74bmw4m7m84a****",
    "vswitchId": "vsw-8vbnk6cmurbpump2f****",
    "vsArea": "cn-zhangjiakou-c"
  },
  "paymentType": "postpaid",
  "esAdminPassword": "yourPassword",
  "kibanaConfiguration": {
    "spec": "elasticsearch.sn1ne.large"
  }
}
```
- 创建Indexing Service系列实例，只包含热节点。
```
{
  "description": "is-hot",
  "nodeAmount": 2,
  "esVersion": "7.10_with_X-Pack",
  "instanceCategory": "IS",
  "nodeSpec": {
    "spec": "elasticsearch.sn1ne.xlarge",
    "disk": 20,
    "diskType": "cloud_ssd"
  },
  "networkConfig": {
    "type": "vpc",
    "vpcId": "vpc-8vbfu74bmw4m7m84a****",
    "vswitchId": "vsw-8vbnk6cmurbpump2f****",
    "vsArea": "cn-zhangjiakou-c"
  },
  "paymentType": "postpaid",
  "esAdminPassword": "yourPassword",
  "kibanaConfiguration": {
    "spec": "elasticsearch.sn1ne.large"
  }
}
```
- 创建Indexing Service系列实例，只包含冷节点。
```
{
  "description": "is-cold",
  "nodeAmount": 2,
  "esVersion": "7.10_with_X-Pack",
  "instanceCategory": "IS",
  "warmNodeConfiguration": {
    "spec": "group.c6.large.500",
    "amount": 3,
    "disk": 300
  },
  "networkConfig": {
    "type": "vpc",
    "vpcId": "vpc-8vbfu74bmw4m7m84a****",
    "vswitchId": "vsw-8vbnk6cmurbpump2f****",
    "vsArea": "cn-zhangjiakou-c"
  },
  "paymentType": "postpaid",
  "esAdminPassword": "yourPassword",
  "kibanaConfiguration": {
    "spec": "elasticsearch.sn1ne.large"
  }
}
```
- 创建Indexing Service系列实例，同时包含冷、热节点。
```
{
  "description": "is-hot-cold",
  "nodeAmount": 2,
  "esVersion": "7.10_with_X-Pack",
  "instanceCategory": "IS",
  "nodeSpec": {
    "spec": "elasticsearch.sn2ne.xlarge",
    "disk": 50,
    "diskType": "cloud_ssd"
  },
  "warmNodeConfiguration": {
    "spec": "group.c6.large.500",
    "amount": 3,
    "disk": 300
  },
  "networkConfig": {
    "type": "vpc",
    "vpcId": "vpc-8vbfu74bmw4m7m84a****",
    "vswitchId": "vsw-8vbnk6cmurbpump2f****",
    "vsArea": "cn-zhangjiakou-c"
  },
  "paymentType": "postpaid",
  "esAdminPassword": "yourPassword",
  "kibanaConfiguration": {
    "spec": "elasticsearch.sn1ne.large"
  }
}
```
- 创建Indexing Service系列实例，开启OpenStore存储，同时包含冷、热节点。
```
{
  "description": "os-1",
  "nodeAmount": 2,
  "esVersion": "7.10_with_X-Pack",
  "instanceCategory": "IS",
  "nodeSpec": {
    "spec": "elasticsearch.sn2ne.xlarge",
    "disk": 50,
    "diskType": "cloud_ssd"
  },
  "warmNodeConfiguration": {
    "spec": "openstore.i2g.4xlarge",
    "amount": 3
  },
  "networkConfig": {
    "type": "vpc",
    "vpcId": "vpc-8vbfu74bmw4m7m84a****",
    "vswitchId": "vsw-8vbnk6cmurbpump2f****",
    "vsArea": "cn-zhangjiakou-c"
  },
  "paymentType": "postpaid",
  "esAdminPassword": "yourPassword",
  "kibanaConfiguration": {
    "spec": "elasticsearch.sn1ne.large"
  }
}
```
- 创建Indexing Service系列实例，开启OpenStore存储，包含冷热共享型节点。
```
{
  "description": "os-2",
  "nodeAmount": 2,
  "esVersion": "7.10_with_X-Pack",
  "instanceCategory": "IS",
  "nodeSpec": {
    "spec": "openstore.i2g.4xlarge",
    "disk": 50,
    "diskType": "cloud_ssd"
  },
  "networkConfig": {
    "type": "vpc",
    "vpcId": "vpc-8vbfu74bmw4m7m84a****",
    "vswitchId": "vsw-8vbnk6cmurbpump2f****",
    "vsArea": "cn-zhangjiakou-c"
  },
  "paymentType": "postpaid",
  "esAdminPassword": "yourPassword",
  "kibanaConfiguration": {
    "spec": "elasticsearch.sn1ne.large"
  }
}
```
- 创建通用商业版7.10版本实例，并开启自动续费。
> paymentType设置为prepaid，表示实例为预付费模式。自动续费在paymentInfo参数中设置。
```
{
 "description": "自动续费",
 "nodeAmount": 3,
 "instanceCategory": "x-pack",
 "esVersion": "7.10_with_X-Pack",
 "nodeSpec": {
 "spec": "elasticsearch.sn2ne.xlarge",
 "disk": 50,
 "diskType": "cloud_ssd"
 },
 "kibanaConfiguration": {
 "spec": "elasticsearch.sn1ne.large"
 },
 "networkConfig": {
 "type": "vpc",
 "vpcId": "vpc-8vbfu74bmw4m7m84a****",
 "vswitchId": "vsw-8vbnk6cmurbpump2f****",
 "vsArea": "cn-zhangjiakou-c"
 },
 "paymentType": "prepaid",
 "paymentInfo": {
 "duration": 1,
 "pricingCycle": "Month",
 "isAutoRenew": true,
 "autoRenewDuration": 1
 },
 "esAdminPassword": "yourPassword"
}
```',
      'responseParamsDescription' => '## 返回参数
| 名称 | 类型 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| RequestId | String | 838D9D11-8EEF-46D8-BF0D-BC8FC2B0C2F3 | 请求ID。|
| Result | object |   | 返回结果。|
| └instanceId | string | es-is-0u2ecp69tt**** | 实例ID。|',
      'extraInfo' => ' ',
    ),
    'EstimatedRestartTime' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/estimated-time/restart-time',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否是强制重启。默认：false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'unit' => 
                  array (
                    'description' => '单位。',
                    'type' => 'string',
                    'example' => 'second',
                  ),
                  'value' => 
                  array (
                    'description' => '重启预估时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '50',
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": {\\n    \\"unit\\": \\"second\\",\\n    \\"value\\": 50\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '实例重启预估时间',
      'summary' => '获取实例重启的大致时间。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还可以填入以下参数，用来指定重启参数信息。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| restartType| String | 否 | instance|重启类型，支持：instance（重启实例）、nodeIp（节点重启）。默认值：重启实例。|
| nodes| List<String\\> | 否| ["127.0.0.1"] |选择节点重启时，目标节点的IP地址列表。|
| blueGreenDep| Boolean | 否 | false |节点重启时，是否进行蓝绿变更。默认值：false。|
| batch| Integer | 否| 25.0 | 实例强制重启的并发度。默认值：1/实例总节点数。|
| batchUnit| String | 否 | percent |batch单位。默认值：percent。|

   * restartType为instance时，忽略blueGreenDep参数。
       * force为true，batch必须大于0，小于等于100，否则系统会提示RestartBatchValueError的报错。
       * force为false，batch默认为0，输入其他值时，会报错NormalRestartNotSupportBatch。
  * restartType为nodeIp时，忽略batch参数。
      * nodeIp为空，系统会提示参数错误。
      * blueGreenDep为true，进行蓝绿变更重启；为false，正常重启。

示例如下。

```
{
    "restartType":"nodeIp",
    "nodes": ["172.16.xx.xx"],
    "blueGreenDep":true
}
```

',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RestartInstance' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/actions/restart',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => ' 实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q8auz0003****',
          ),
        ),
        1 => 
        array (
          'name' => 'force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否忽略集群状态，强制重启。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不值过64个ASCII字符。

',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DC****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'nodeAmount' => 
                  array (
                    'description' => '实例的数据节点数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'publicDomain' => 
                  array (
                    'description' => '公网访问地址。',
                    'type' => 'string',
                    'example' => 'es-cn-n6w1o1x0w001c****.public.elasticsearch.aliyuncs.com',
                  ),
                  'createdAt' => 
                  array (
                    'description' => '实例创建时间。',
                    'type' => 'string',
                    'example' => '2020-07-06T10:18:48.662Z',
                  ),
                  'status' => 
                  array (
                    'description' => '实例的状态。

支持：active（正常）、activating（生效中）、inactive（冻结）和invalid（失效）。',
                    'type' => 'string',
                    'example' => 'active',
                  ),
                  'kibanaPort' => 
                  array (
                    'description' => 'Kibana公网端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5601',
                  ),
                  'publicPort' => 
                  array (
                    'description' => '公网端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '9200',
                  ),
                  'paymentType' => 
                  array (
                    'description' => '实例的付费方式。

支持：prepaid（包年包月）和postpaid（按量付费）。',
                    'type' => 'string',
                    'example' => 'postpaid',
                  ),
                  'domain' => 
                  array (
                    'description' => '实例的内网访问地址。',
                    'type' => 'string',
                    'example' => 'es-cn-nif1q8auz0003****.elasticsearch.aliyuncs.com',
                  ),
                  'description' => 
                  array (
                    'description' => '实例名称。',
                    'type' => 'string',
                    'example' => 'es-cn-abc',
                  ),
                  'esVersion' => 
                  array (
                    'description' => '实例版本。',
                    'type' => 'string',
                    'example' => '6.7.0_with_X-Pack',
                  ),
                  'kibanaDomain' => 
                  array (
                    'description' => 'Kibana公网访问地址。',
                    'type' => 'string',
                    'example' => 'es-cn-nif1q8auz0003****.kibana.elasticsearch.aliyuncs.com',
                  ),
                  'updatedAt' => 
                  array (
                    'description' => '实例最后更新的时间。',
                    'type' => 'string',
                    'example' => '2018-07-18T10:10:04.484Z',
                  ),
                  'instanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'es-cn-n6w1o1x0w001c****',
                  ),
                  'dictList' => 
                  array (
                    'description' => 'IK词典配置。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'fileSize' => 
                        array (
                          'description' => '词典文件大小，单位：字节。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2782602',
                        ),
                        'type' => 
                        array (
                          'description' => '词典类型，取值：

- STOP：停用词
- MAIN：主词典
- SYNONYMS：同义词词典
- ALI_WS：阿里词典',
                          'type' => 'string',
                          'example' => 'MAIN',
                        ),
                        'name' => 
                        array (
                          'description' => '词典文件名称。',
                          'type' => 'string',
                          'example' => 'SYSTEM_MAIN.dic',
                        ),
                        'sourceType' => 
                        array (
                          'description' => '来源类型，支持：

- OSS：OSS开放存储（需要确保OSS存储空间为公共可读）
- ORIGIN：开源Elasticsearch
- UPLOAD：上传的文件',
                          'type' => 'string',
                          'example' => 'ORIGIN',
                        ),
                      ),
                    ),
                  ),
                  'synonymsDicts' => 
                  array (
                    'description' => '同义词词典配置。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'fileSize' => 
                        array (
                          'description' => '词典文件大小，单位：字节。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2782602',
                        ),
                        'type' => 
                        array (
                          'description' => '词典类型，取值：

- STOP：停用词
- MAIN：主词典
- SYNONYMS：同义词词典
- ALI_WS：阿里词典',
                          'type' => 'string',
                          'example' => 'STOP',
                        ),
                        'name' => 
                        array (
                          'description' => '词典文件名称。',
                          'type' => 'string',
                          'example' => 'SYSTEM_MAIN.dic',
                        ),
                        'sourceType' => 
                        array (
                          'description' => '来源类型，支持：

- OSS：OSS开放存储（需要确保OSS存储空间为公共可读）
- ORIGIN：开源Elasticsearch
- UPLOAD：上传的文件',
                          'type' => 'string',
                          'example' => 'ORIGIN',
                        ),
                      ),
                    ),
                  ),
                  'kibanaConfiguration' => 
                  array (
                    'description' => 'Kibana节点配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'description' => '节点规格。',
                        'type' => 'string',
                        'example' => 'elasticsearch.n4.small',
                      ),
                      'amount' => 
                      array (
                        'description' => '节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点存储空间大小，单位为GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '20',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点存储类型。',
                        'type' => 'string',
                        'example' => 'cloud_ssd',
                      ),
                    ),
                  ),
                  'masterConfiguration' => 
                  array (
                    'description' => 'Master节点配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'description' => '节点规格。',
                        'type' => 'string',
                        'example' => 'elasticsearch.sn2ne.large',
                      ),
                      'amount' => 
                      array (
                        'description' => '节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点存储空间大小，单位为GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '20',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点存储类型。只支持cloud_ssd（SSD云盘）。',
                        'type' => 'string',
                        'example' => 'cloud_ssd',
                      ),
                    ),
                  ),
                  'networkConfig' => 
                  array (
                    'description' => '网络配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'vpcId' => 
                      array (
                        'description' => '专有网络ID。',
                        'type' => 'string',
                        'example' => 'vpc-bp16k1dvzxtmagcva****',
                      ),
                      'vsArea' => 
                      array (
                        'description' => '实例所在的可用区。',
                        'type' => 'string',
                        'example' => 'cn-hangzhou-i',
                      ),
                      'type' => 
                      array (
                        'description' => '网络类型，只支持专有网络VPC（Virtual Private Cloud）。',
                        'type' => 'string',
                        'example' => 'vpc',
                      ),
                      'vswitchId' => 
                      array (
                        'description' => '虚拟交换机ID。',
                        'type' => 'string',
                        'example' => 'vsw-bp1k4ec6s7sjdbudw****',
                      ),
                    ),
                  ),
                  'nodeSpec' => 
                  array (
                    'description' => '数据节点配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'description' => '节点规格。',
                        'type' => 'string',
                        'example' => 'elasticsearch.n4.small',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点的存储空间大小，单位为GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '50',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点的存储类型。',
                        'type' => 'string',
                        'example' => 'cloud_ssd',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DC****\\",\\n  \\"Result\\": {\\n    \\"nodeAmount\\": 2,\\n    \\"publicDomain\\": \\"es-cn-n6w1o1x0w001c****.public.elasticsearch.aliyuncs.com\\",\\n    \\"createdAt\\": \\"2020-07-06T10:18:48.662Z\\",\\n    \\"status\\": \\"active\\",\\n    \\"kibanaPort\\": 5601,\\n    \\"publicPort\\": 9200,\\n    \\"paymentType\\": \\"postpaid\\",\\n    \\"domain\\": \\"es-cn-nif1q8auz0003****.elasticsearch.aliyuncs.com\\",\\n    \\"description\\": \\"es-cn-abc\\",\\n    \\"esVersion\\": \\"6.7.0_with_X-Pack\\",\\n    \\"kibanaDomain\\": \\"es-cn-nif1q8auz0003****.kibana.elasticsearch.aliyuncs.com\\",\\n    \\"updatedAt\\": \\"2018-07-18T10:10:04.484Z\\",\\n    \\"instanceId\\": \\"es-cn-n6w1o1x0w001c****\\",\\n    \\"dictList\\": {\\n      \\"dictList\\": [\\n        {\\n          \\"fileSize\\": 2782602,\\n          \\"type\\": \\"MAIN\\",\\n          \\"name\\": \\"SYSTEM_MAIN.dic\\",\\n          \\"sourceType\\": \\"ORIGIN\\"\\n        }\\n      ]\\n    },\\n    \\"synonymsDicts\\": {\\n      \\"synonymsDicts\\": [\\n        {\\n          \\"fileSize\\": 2782602,\\n          \\"type\\": \\"STOP\\",\\n          \\"name\\": \\"SYSTEM_MAIN.dic\\",\\n          \\"sourceType\\": \\"ORIGIN\\"\\n        }\\n      ]\\n    },\\n    \\"kibanaConfiguration\\": {\\n      \\"spec\\": \\"elasticsearch.n4.small\\",\\n      \\"amount\\": 1,\\n      \\"disk\\": 20,\\n      \\"diskType\\": \\"cloud_ssd\\"\\n    },\\n    \\"masterConfiguration\\": {\\n      \\"spec\\": \\"elasticsearch.sn2ne.large\\",\\n      \\"amount\\": 3,\\n      \\"disk\\": 20,\\n      \\"diskType\\": \\"cloud_ssd\\"\\n    },\\n    \\"networkConfig\\": {\\n      \\"vpcId\\": \\"vpc-bp16k1dvzxtmagcva****\\",\\n      \\"vsArea\\": \\"cn-hangzhou-i\\",\\n      \\"type\\": \\"vpc\\",\\n      \\"vswitchId\\": \\"vsw-bp1k4ec6s7sjdbudw****\\"\\n    },\\n    \\"nodeSpec\\": {\\n      \\"spec\\": \\"elasticsearch.n4.small\\",\\n      \\"disk\\": 50,\\n      \\"diskType\\": \\"cloud_ssd\\"\\n    }\\n  }\\n}","errorExample":"{\\n  \\"RequestId\\" : \\"F78BCD23-A133-4E32-A0FD-3D06E014402F\\",\\n  \\"Code\\" : \\"InstanceNotFound\\",\\n  \\"Message\\" : \\"The specified instance does not exist. Check the instance status and try again.\\"\\n}\\n"},{"type":"xml","example":"","errorExample":""}]',
      'title' => '重启Elasticsearch',
      'summary' => '重启Elasticsearch集群。',
      'description' => '> 重启后，实例进入生效中（activing）状态。重启成功后，实例状态变为正常（active）。阿里云Elasticsearch支持单节点重启，节点重启分为普通重启和蓝绿重启。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定重启参数信息。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| restartType | String | 否 |  instance |重启类型。可选值：<br>**instance**（默认）：实例重启。<br>**nodeIp**：节点重启，需要指定节点的IP地址。<br>**nodeEcsId**：节点重启，需要指定集群中ECS实例的ID。|
| nodes | List<String>  | 否| ["127.0.0.1"] |选择节点重启时，指定待重启的节点的IP地址或ID。|
| blueGreenDep | Boolean | 否 | false |节点重启时，是否启用蓝绿部署，默认值为**false**。|
| batchCount | Double | 否| 25.0 | 实例强制重启时，设置的并发度。|
| batchUnit | String | 否 | percent |**batchCount**的单位，默认为**percent**。|

> * **restartType**不传或者传空字符串时，默认为**instance**。为**instance**时，默认忽略**blueGreenDep**参数，并且需要满足以下条件：
    * **force**为**true**时，**batchCount**必须大于0，小于等于100，否则会报错RestartBatchValueError。
    * **force**为**false**时，**batchCount**默认为0，设置为其他值时，会报错NormalRestartNotSupportBatch。
* **restartType**为**nodeIp**时，默认忽略**batchCount**参数，并且需要满足以下条件：
    * **nodes**不可为空，否则提醒参数错误。
    * **blueGreenDep**为**true**时，在重启节点时，会启用蓝绿部署。为**false**时，不会启用蓝绿部署，即正常重启。


示例如下。

```
{
    "restartType":"nodeIp",
    "nodes":["172.16.xx.xx","172.16.xx.xx"],
    "blueGreenDep":true
}
```
',
      'responseParamsDescription' => '以下返回示例中，本文只保证包含返回数据列表中的参数，而未提到的参数仅供参考，程序中不能强制依赖获取这些参数。',
      'extraInfo' => ' ',
    ),
    'RenewInstance' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/actions/renew',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B350****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：续费成功
- false：续费失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'ES实例续费',
      'summary' => '为包年包月的Elasticseach实例续费。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还要填入以下字段，用来指定续费信息。
| 参数 | 类型 | 是否必选 | 示例值 | 描述 |
| --- | --- | --- | --- | --- |
| duration | Integer | 是 | 1 | 续费时长。如果pricingCycle为Year，可选时长为1~3；如果pricingCycle为Month，可选时长为1~9。|
| pricingCycle | String | 是 | Year | 续费周期。可选值：Year（按年续费）、Month（按月续费）。 |

示例如下。

```
{
    "duration":1,
    "pricingCycle":"Year"
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ActivateZones' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/actions/recover-zones',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：
- true：恢复可用区成功
- false：恢复可用区失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5A5D8E74-565C-43DC-B031-29289FA****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5A5D8E74-565C-43DC-B031-29289FA****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '恢复已下线的可用区',
      'summary' => '恢复已下线的可用区。仅对多可用区实例有效。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需要填入待恢复的可用区ID列表，示例如下。
`["cn-hangzhou-i","cn-hangzhou-h"]`',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeactivateZones' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/actions/down-zones',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：下线可用区成功
- false：下线可用区失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '下线部分可用区',
      'summary' => '在有多个可用区的情况下，下线部分可用区。并将下线的可用区中的节点迁移到其他可用区。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需要填入待下线的可用区ID列表，示例如下。
`["cn-hangzhou-i","cn-hangzhou-f"]`
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InterruptElasticsearchTask' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/actions/interrupt',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '错误码。仅当返回异常时显示。',
                'type' => 'string',
                'example' => 'InstanceStatusNotSupportCurrentAction',
              ),
              'Message' => 
              array (
                'description' => '错误信息。仅当返回异常时显示。',
                'type' => 'string',
                'example' => 'The cluster is running tasks or in an error status. Try again later.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****',
              ),
              'Result' => 
              array (
                'description' => '返回结果：

- true：中断变更成功
- false：中断变更失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"InstanceStatusNotSupportCurrentAction\\",\\n  \\"Message\\": \\"The cluster is running tasks or in an error status. Try again later.\\",\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****\\",\\n  \\"Result\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '中断变更中的实例',
      'summary' => '中断实例变更任务，仅对状态为生效中的实例有效，中断后，实例进入变更中断（suspended）状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ResumeElasticsearchTask' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/actions/resume',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：恢复中断变更成功
- false：恢复中断变更失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '恢复中断变更',
      'summary' => '恢复实例之间啊变更中断的任务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'MigrateToOtherZone' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/actions/migrate-zones',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'dryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '校验是否可以进行可用区节点迁移。true表示只校验不执行迁移任务；false表示校验通过后即进行迁移任务。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：迁移成功
- false：迁移失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '迁移可用区',
      'summary' => '迁移对应可用区下的节点到目标可用区。',
      'description' => '当您升配实例，遇到可用区规格库存不足的问题时，可以通过迁移可用区节点来解决。在调用此接口前，需要确保：

- 当前账号存在资源充足的可用区。

   在迁移当前规格的节点到其他可用区后，需手动[升配集群](~~96650~~)，并不会在迁移过程中升配集群，因此要选择资源充足的可用区，避免集群升配失败。建议优先选择字母顺序靠后的新可用区（例如对于cn-hangzhou-e和cn-hangzhou-h可用区，优先选择cn-hangzhou-h）。

- 集群处于健康状态。

   可通过`GET _cat/health?v`命令查看集群健康状态。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定迁移的可用区信息。
|  名称  | 类型  | 是否必选 | 示例值  | 描述  |
|  ----  | ----  | ----  | ----  |
| fromZoneId| String |  是    | cn-hangzhou-i  |实例目前所在的可用区。|
| toZoneId| String |  是    | cn-hangzhou-b  |迁移到的目标可用区。|
| toVswitchId| String |  是    | vsw-bp1f7r0ma00pf9h2l****  |虚拟交换机ID。|

示例如下。

```
{
    "fromZoneId": "cn-hangzhou-e",
    "toZoneId": "cn-hangzhou-f",
    "toVswitchId": "vsw-bp16t5hpc689dgkgc****"
}
```

',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CancelDeletion' => 
    array (
      'summary' => '恢复释放后被冻结的Elasticsearch实例。',
      'path' => '/openapi/instances/{InstanceId}/actions/cancel-deletion',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-z2q1wk6z00007****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不值过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '是否成功恢复实例：

- true：是
- false：否',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D682B6B3-B425-46DA-A5FC-5F5C60553622',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"D682B6B3-B425-46DA-A5FC-5F5C60553622\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '恢复释放后被冻结的实例',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DiagnoseInstance' => 
    array (
      'summary' => '调用DiagnoseInstance，即刻诊断实例。',
      'path' => '/openapi/diagnosis/instances/{InstanceId}/actions/diagnose',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取的报告的语言。默认为浏览器语言，支持：

- en：英语
- zh：简体中文
- zt：繁体中文
- es：西班牙语
- fr：法语',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。
',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '诊断任务信息。
',
            'type' => 'object',
            'properties' => 
            array (
              'indices' => 
              array (
                'description' => '待诊断的索引列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '诊断索引列表。type为ALL时，indices可设置为空。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '["library"]',
                ),
                'required' => false,
              ),
              'diagnoseItems' => 
              array (
                'description' => '诊断项。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '诊断项，详细信息请参见[ListDiagnosisItems](https://next.api.aliyun.com/document/elasticsearch/2017-06-13/ListDiagnosisItems)的返回结果。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '["ClusterBulkRejectDiagnostic",...]',
                ),
                'required' => false,
              ),
              'type' => 
              array (
                'description' => '诊断任务类型，支持：

- ALL：诊断所有索引。
- SELECT：诊断选定的索引。',
                'type' => 'string',
                'required' => false,
                'example' => 'ALL',
              ),
            ),
            'required' => false,
            'docRequired' => false,
            'example' => '{     "indices":[],     "type":"ALL",     "diagnoseItems":[         "ClusterBulkRejectDiagnostic",         "IndexAliasUseDiagnostic"     ] }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Result' => 
              array (
                'description' => '返回结果。
',
                'type' => 'object',
                'properties' => 
                array (
                  'createTime' => 
                  array (
                    'description' => '诊断报告生成的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1535745731000',
                  ),
                  'reportId' => 
                  array (
                    'description' => '报告ID。
',
                    'type' => 'string',
                    'example' => 'trigger__2020-08-17T17:09:02',
                  ),
                  'state' => 
                  array (
                    'description' => '诊断状态。支持：SUCCESS、FAILED和RUNNING。
',
                    'type' => 'string',
                    'example' => 'RUNNING',
                  ),
                  'instanceId' => 
                  array (
                    'description' => '诊断的实例ID。
',
                    'type' => 'string',
                    'example' => 'es-cn-n6w1o1x0w001c****',
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Result\\": {\\n    \\"createTime\\": 1535745731000,\\n    \\"reportId\\": \\"trigger__2020-08-17T17:09:02\\",\\n    \\"state\\": \\"RUNNING\\",\\n    \\"instanceId\\": \\"es-cn-n6w1o1x0w001c****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '诊断实例',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'MoveResourceGroup' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/resourcegroup',
      'methods' => 
      array (
        0 => 'patch',
        1 => 'post',
        2 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'nodeAmount' => 
                  array (
                    'description' => '实例的数据节点数量。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'publicDomain' => 
                  array (
                    'description' => '公网访问地址。',
                    'type' => 'string',
                    'example' => 'es-cn-n6w1o1x0w001c****.public.elasticsearch.aliyuncs.com',
                  ),
                  'createdAt' => 
                  array (
                    'description' => '实例创建时间。
',
                    'type' => 'string',
                    'example' => '2020-07-06T10:18:48.662Z',
                  ),
                  'status' => 
                  array (
                    'description' => '实例的状态。支持：

- active：正常
- activating：生效中
- inactive：冻结
- invalid：失效',
                    'type' => 'string',
                    'example' => 'active',
                  ),
                  'publicPort' => 
                  array (
                    'description' => '公网端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '9200',
                  ),
                  'kibanaPort' => 
                  array (
                    'description' => 'Kibana公网端口。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5601',
                  ),
                  'paymentType' => 
                  array (
                    'description' => '实例的付费方式。支持：

- prepaid：包年包月
- postpaid：按量付费',
                    'type' => 'string',
                    'example' => 'postpaid',
                  ),
                  'domain' => 
                  array (
                    'description' => '实例的内网访问地址。
',
                    'type' => 'string',
                    'example' => 'es-cn-nif1q8auz0003****.elasticsearch.aliyuncs.com',
                  ),
                  'description' => 
                  array (
                    'description' => '实例名称。',
                    'type' => 'string',
                    'example' => 'es-cn-abc',
                  ),
                  'esVersion' => 
                  array (
                    'description' => '实例版本。
',
                    'type' => 'string',
                    'example' => '6.7.0_with_X-Pack',
                  ),
                  'kibanaDomain' => 
                  array (
                    'description' => 'Kibana公网访问地址。
',
                    'type' => 'string',
                    'example' => 'es-cn-nif1q8auz0003****.kibana.elasticsearch.aliyuncs.com',
                  ),
                  'updatedAt' => 
                  array (
                    'description' => '实例最后更新的时间。',
                    'type' => 'string',
                    'example' => '2018-07-18T10:10:04.484Z',
                  ),
                  'instanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'es-cn-n6w1o1x0w001c****',
                  ),
                  'dictList' => 
                  array (
                    'description' => 'IK词典配置。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'fileSize' => 
                        array (
                          'description' => '词典文件大小，单位：字节。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2782602',
                        ),
                        'sourceType' => 
                        array (
                          'description' => '来源类型，支持：

- OSS：OSS开放存储（需要确保OSS存储空间为公共可读）
- ORIGIN：保留之前已经上传的词典',
                          'type' => 'string',
                          'example' => 'ORIGIN',
                        ),
                        'name' => 
                        array (
                          'description' => '词典文件名称。',
                          'type' => 'string',
                          'example' => 'SYSTEM_MAIN.dic',
                        ),
                        'type' => 
                        array (
                          'description' => '词典类型，支持：

- STOP：停用词
- MAIN：主词典
- SYNONYMS：同义词词典
- ALI_WS：阿里词典',
                          'type' => 'string',
                          'example' => 'MAIN',
                        ),
                      ),
                    ),
                  ),
                  'synonymsDicts' => 
                  array (
                    'description' => '同义词词典配置。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'fileSize' => 
                        array (
                          'description' => '词典文件大小，单位：字节。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2782602',
                        ),
                        'sourceType' => 
                        array (
                          'description' => '来源类型，支持：

- OSS：OSS开放存储（需要确保OSS存储空间为公共可读）
- ORIGIN：保留之前已经上传的词典',
                          'type' => 'string',
                          'example' => 'ORIGIN',
                        ),
                        'name' => 
                        array (
                          'description' => '词典文件名称。',
                          'type' => 'string',
                          'example' => 'SYSTEM_MAIN.dic',
                        ),
                        'type' => 
                        array (
                          'description' => '词典类型，支持：

- STOP：停用词
- MAIN：主词典
- SYNONYMS：同义词词典
- ALI_WS：阿里词典',
                          'type' => 'string',
                          'example' => 'STOP',
                        ),
                      ),
                    ),
                  ),
                  'nodeSpec' => 
                  array (
                    'description' => '数据节点配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'description' => '节点规格。',
                        'type' => 'string',
                        'example' => 'elasticsearch.n4.small',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点的存储空间大小，单位：GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '50',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点的存储类型。',
                        'type' => 'string',
                        'example' => 'cloud_ssd',
                      ),
                    ),
                  ),
                  'networkConfig' => 
                  array (
                    'description' => '网络配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'vpcId' => 
                      array (
                        'description' => '专有网络ID。',
                        'type' => 'string',
                        'example' => 'vpc-bp16k1dvzxtmagcva****',
                      ),
                      'vsArea' => 
                      array (
                        'description' => '实例所在的可用区。',
                        'type' => 'string',
                        'example' => 'cn-hangzhou-i',
                      ),
                      'type' => 
                      array (
                        'description' => '网络类型，只支持专有网络。',
                        'type' => 'string',
                        'example' => 'vpc',
                      ),
                      'vswitchId' => 
                      array (
                        'description' => '虚拟交换机ID。',
                        'type' => 'string',
                        'example' => 'vsw-bp1k4ec6s7sjdbudw****',
                      ),
                    ),
                  ),
                  'kibanaConfiguration' => 
                  array (
                    'description' => 'Kibana节点配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'description' => '节点规格。',
                        'type' => 'string',
                        'example' => 'elasticsearch.n4.small',
                      ),
                      'amount' => 
                      array (
                        'description' => '节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点存储空间大小，单位：GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '20',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点存储类型。',
                        'type' => 'string',
                        'example' => 'cloud_ssd',
                      ),
                    ),
                  ),
                  'masterConfiguration' => 
                  array (
                    'description' => 'Master节点配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'description' => '节点规格。',
                        'type' => 'string',
                        'example' => 'elasticsearch.sn2ne.large',
                      ),
                      'amount' => 
                      array (
                        'description' => '节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点存储空间大小，单位：GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '20',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点存储类型。',
                        'type' => 'string',
                        'example' => 'cloud_ssd',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Result\\": {\\n    \\"nodeAmount\\": 2,\\n    \\"publicDomain\\": \\"es-cn-n6w1o1x0w001c****.public.elasticsearch.aliyuncs.com\\",\\n    \\"createdAt\\": \\"2020-07-06T10:18:48.662Z\\",\\n    \\"status\\": \\"active\\",\\n    \\"publicPort\\": 9200,\\n    \\"kibanaPort\\": 5601,\\n    \\"paymentType\\": \\"postpaid\\",\\n    \\"domain\\": \\"es-cn-nif1q8auz0003****.elasticsearch.aliyuncs.com\\",\\n    \\"description\\": \\"es-cn-abc\\",\\n    \\"esVersion\\": \\"6.7.0_with_X-Pack\\",\\n    \\"kibanaDomain\\": \\"es-cn-nif1q8auz0003****.kibana.elasticsearch.aliyuncs.com\\",\\n    \\"updatedAt\\": \\"2018-07-18T10:10:04.484Z\\",\\n    \\"instanceId\\": \\"es-cn-n6w1o1x0w001c****\\",\\n    \\"dictList\\": [\\n      {\\n        \\"fileSize\\": 2782602,\\n        \\"sourceType\\": \\"ORIGIN\\",\\n        \\"name\\": \\"SYSTEM_MAIN.dic\\",\\n        \\"type\\": \\"MAIN\\"\\n      }\\n    ],\\n    \\"synonymsDicts\\": [\\n      {\\n        \\"fileSize\\": 2782602,\\n        \\"sourceType\\": \\"ORIGIN\\",\\n        \\"name\\": \\"SYSTEM_MAIN.dic\\",\\n        \\"type\\": \\"STOP\\"\\n      }\\n    ],\\n    \\"nodeSpec\\": {\\n      \\"spec\\": \\"elasticsearch.n4.small\\",\\n      \\"disk\\": 50,\\n      \\"diskType\\": \\"cloud_ssd\\"\\n    },\\n    \\"networkConfig\\": {\\n      \\"vpcId\\": \\"vpc-bp16k1dvzxtmagcva****\\",\\n      \\"vsArea\\": \\"cn-hangzhou-i\\",\\n      \\"type\\": \\"vpc\\",\\n      \\"vswitchId\\": \\"vsw-bp1k4ec6s7sjdbudw****\\"\\n    },\\n    \\"kibanaConfiguration\\": {\\n      \\"spec\\": \\"elasticsearch.n4.small\\",\\n      \\"amount\\": 1,\\n      \\"disk\\": 20,\\n      \\"diskType\\": \\"cloud_ssd\\"\\n    },\\n    \\"masterConfiguration\\": {\\n      \\"spec\\": \\"elasticsearch.sn2ne.large\\",\\n      \\"amount\\": 3,\\n      \\"disk\\": 20,\\n      \\"diskType\\": \\"cloud_ssd\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"\\n","errorExample":""}]',
      'title' => '修改实例资源组',
      'summary' => '修改实例所属资源组。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定将实例迁移到的资源组信息。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
|resourceGroupId| String | 是 | rg-acfm2h5vbzd**** |目标资源组ID。可在[资源组](https://resourcemanager.console.aliyun.com/resource-groups)页面获取。|
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CapacityPlan' => 
    array (
      'summary' => '用于系统根据业务场景、QPS和日志产生量等情况为您推荐集群容量规划的最佳配置信息。',
      'path' => '/openapi/assist/actions/capacity-plan',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'Anonymous' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'description' => '请求参数信息。',
            'type' => 'object',
            'properties' => 
            array (
              'complexQueryAvailable' => 
              array (
                'description' => '是否具有复杂聚合查询的需求。可选值：

- true：是
- false（默认）：否',
                'type' => 'boolean',
                'required' => false,
                'example' => 'true',
              ),
              'dataInfo' => 
              array (
                'description' => '磁盘使用情况。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'dataInfo信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'code' => 
                    array (
                      'description' => '磁盘数据指标代码。可选值：

- totalRawData：源数据信息
- document：数据文档信息，预估文档数
- dailyIncrement：数据每日增长量
- dailyIncrement：每日增量文档数
- retentionTime：数据保留时长
- replica：副本设置',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'totalRawData',
                    ),
                    'size' => 
                    array (
                      'description' => '磁盘使用情况指标数值。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '100',
                    ),
                    'type' => 
                    array (
                      'description' => '磁盘数据类型，可选值：

- hot：热数据
- warm：冷数据',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'hot',
                    ),
                    'unit' => 
                    array (
                      'description' => '数据单位或时间单位，可选值：

- 数据单位：MiB、GiB、TB、PB
- 时间单位：DAYS、WEEKS、MONTHS、YEARS',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'MiB',
                    ),
                    'totalCount' => 
                    array (
                      'description' => '数据总条数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'required' => false,
                      'example' => '10000',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'metric' => 
              array (
                'description' => '磁盘使用情况、搜索和写入情况、聚合请求等指标信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'metric参数信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'code' => 
                    array (
                      'description' => '搜索或写入指标代码。可选值：

- write：写入
- search：搜索',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'write',
                    ),
                    'concurrent' => 
                    array (
                      'description' => '并发数。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '2',
                    ),
                    'throughput' => 
                    array (
                      'description' => '吞吐量，单位：MB/S。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => false,
                      'example' => '100',
                    ),
                    'type' => 
                    array (
                      'description' => '搜索/写入峰值类型。可选值：

- common：常规
- peak：高峰',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'common',
                    ),
                    'peakQps' => 
                    array (
                      'description' => '峰值QPS。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'required' => false,
                      'example' => '30',
                    ),
                    'averageQps' => 
                    array (
                      'description' => '平均QPS。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'required' => false,
                      'example' => '30',
                    ),
                    'responseTime' => 
                    array (
                      'description' => '期望平均响应时间，单位：毫秒。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'required' => false,
                      'example' => '100',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
              'usageScenario' => 
              array (
                'description' => '使用场景，可选值：

- general：通用场景
- analysisVisualization：数据分析场景
- dbAcceleration：数据库加速场景
- search：搜索场景
- log：日志场景',
                'type' => 'string',
                'required' => false,
                'example' => 'general',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '当前请求的ID。',
                'type' => 'string',
                'example' => 'E91B7129-A669-4D9D-A743-F90A0FF1F5EF',
              ),
              'Result' => 
              array (
                'description' => '请求返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'ExtendConfigs' => 
                  array (
                    'description' => '拓展配置信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'ExtendConfigs信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ConfigType' => 
                        array (
                          'description' => '配置类型，唯一取值：sharedDisk。

> 当规划实例类型为增强版（advanced）时，可能出现的extendConfigs属性。
',
                          'type' => 'string',
                          'example' => 'sharedDisk',
                        ),
                        'Disk' => 
                        array (
                          'description' => '磁盘大小，单位：GiB。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2048',
                        ),
                        'DiskType' => 
                        array (
                          'description' => '磁盘类型，唯一取值：CPFS_PREMIUM。

> 当规划实例类型为增强版（advanced）时，可能出现的extendConfigs属性。',
                          'type' => 'string',
                          'example' => 'CPFS_PREMIUM',
                        ),
                      ),
                    ),
                  ),
                  'InstanceCategory' => 
                  array (
                    'description' => '版本类型，取值含义如下：

- advanced：增强版

- x-pack：商业版

- community：社区版本',
                    'type' => 'string',
                    'example' => 'advanced',
                  ),
                  'NodeConfigurations' => 
                  array (
                    'description' => '节点信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'NodeConfigurations信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Amount' => 
                        array (
                          'description' => '节点个数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '10',
                        ),
                        'Cpu' => 
                        array (
                          'description' => 'CPU数量。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'Disk' => 
                        array (
                          'description' => '磁盘大小，单位：GiB。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '20',
                        ),
                        'DiskType' => 
                        array (
                          'description' => '硬盘类型，取值含义如下：

- cloud_essd：ESSD云盘

- cloud_ssd：SSD云盘

- cloud_efficiency：高效云盘

- local_ssd：本地SSD盘

- local_efficiency：本地高效磁盘',
                          'type' => 'string',
                          'example' => 'cloud_ssd',
                        ),
                        'Memory' => 
                        array (
                          'description' => '当前节点角色的规格内存大小。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'NodeType' => 
                        array (
                          'description' => '节点类型，支持的类型如下：

- WORKER：数据节点

- WORKER_WARM：冷数据节点

- MASTER：专有主节点

- KIBANA：Kibana节点

- COORDINATING：协调节点

- ELASTIC_WORKER：弹性节点',
                          'type' => 'string',
                          'example' => 'WORKER',
                        ),
                      ),
                    ),
                  ),
                  'OversizedCluster' => 
                  array (
                    'description' => '根据容量规划计算出来的结果，无默认值。取值含义如下：

- true：代表超大集群，指容量规划计算出的数据节点数量超过阈值50。

- false：容量规划计算出的数据节点数量在50以内。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E91B7129-A669-4D9D-A743-F90A0FF1F5EF\\",\\n  \\"Result\\": {\\n    \\"ExtendConfigs\\": [\\n      {\\n        \\"ConfigType\\": \\"sharedDisk\\",\\n        \\"Disk\\": 2048,\\n        \\"DiskType\\": \\"CPFS_PREMIUM\\"\\n      }\\n    ],\\n    \\"InstanceCategory\\": \\"advanced\\",\\n    \\"NodeConfigurations\\": [\\n      {\\n        \\"Amount\\": 10,\\n        \\"Cpu\\": 1,\\n        \\"Disk\\": 20,\\n        \\"DiskType\\": \\"cloud_ssd\\",\\n        \\"Memory\\": 2,\\n        \\"NodeType\\": \\"WORKER\\"\\n      }\\n    ],\\n    \\"OversizedCluster\\": true\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '容量规划',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetOpenStoreUsage' => 
    array (
      'summary' => '查看OpensStore实例的存储容量和使用情况。',
      'path' => '/openapi/instances/{InstanceId}/openstore/usage',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-zvp2cqw1f0020****',
            'title' => '实例id',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E1DE2491-804F-4C86-BAB4-548DD70B****',
                'title' => 'Id of the request',
              ),
              'Result' => 
              array (
                'description' => '当前请求结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'lastDayUsage' => 
                  array (
                    'description' => '昨日OpenStore存储使用容量，单位：Byte。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '184320',
                    'title' => '昨日使用容量',
                  ),
                  'currentUsage' => 
                  array (
                    'description' => '当前OpenStore存储使用容量（根据实际索引得到的预估值），单位：Byte。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '204800',
                    'title' => '当前使用量',
                  ),
                ),
              ),
            ),
            'title' => 'Schema of Response',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E1DE2491-804F-4C86-BAB4-548DD70B****\\",\\n  \\"Result\\": {\\n    \\"currentUsage\\": 204800,\\n    \\"lastDayUsage\\": 184320\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查看OpenStore实例用量',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDicts' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/dicts',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'analyzerType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '词典类型，支持：

- IK：IK冷更新词典。

- IK_HOT：IK热更新词典。

- SYNONYMS：同义词。

- ALIWS：阿里词典。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'IK',
          ),
        ),
        1 => 
        array (
          'name' => 'name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '筛选指定的文件名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'SYSTEM_MAIN.dic',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-0ju29ifnc0005****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2937F832-F39E-41EF-89BA-B528342A2A3A',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '返回的请求结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'fileSize' => 
                    array (
                      'description' => '词典文件的字节数大小，单位：Byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '2782602',
                    ),
                    'downloadUrl' => 
                    array (
                      'description' => '公网可下载链接。有效时长为90秒。',
                      'type' => 'string',
                      'example' => 'http://test_bucket.oss-cn-hangzhou.aliyuncs.com/AliyunEs/test.dic?Expires=162573****&OSSAccessKeyId=LTAI*****V9&Signature=PNPO********BBGsJDO4V3VfU4sE%3D',
                    ),
                    'sourceType' => 
                    array (
                      'description' => '固定值。',
                      'type' => 'string',
                      'example' => 'ORIGIN',
                    ),
                    'type' => 
                    array (
                      'description' => 'IK词典的类型，取值含义如下：

- MAIN：主分词词库。

- STOP：停用词词库。',
                      'type' => 'string',
                      'example' => 'MAIN',
                    ),
                    'name' => 
                    array (
                      'description' => '词典文件的文件名。',
                      'type' => 'string',
                      'example' => 'SYSTEM_MAIN.dic',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2937F832-F39E-41EF-89BA-B528342A2A3A\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 1\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"fileSize\\": 2782602,\\n      \\"downloadUrl\\": \\"http://test_bucket.oss-cn-hangzhou.aliyuncs.com/AliyunEs/test.dic?Expires=162573****&OSSAccessKeyId=LTAI*****V9&Signature=PNPO********BBGsJDO4V3VfU4sE%3D\\",\\n      \\"sourceType\\": \\"ORIGIN\\",\\n      \\"type\\": \\"MAIN\\",\\n      \\"name\\": \\"SYSTEM_MAIN.dic\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查看词典列表详情',
      'summary' => '查看指定类型的词典列表详情。',
      'requestParamsDescription' => ' > 每种elasticsearchAnalyzer下的词典name是唯一的，即使IK的主分词库和停用分词库也不会存在相同name的词典文件。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListShardRecoveries' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/cat-recovery',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-7mz293m9a003j****',
          ),
        ),
        1 => 
        array (
          'name' => 'activeOnly',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '显示分片数据恢复跟踪情况，取值含义如下：

- true：显示正在进行中的分片数据恢复跟踪情况。

- false：显示全部的分片数据恢复跟踪情况。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC47D9',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'index' => 
                    array (
                      'description' => '索引名称。',
                      'type' => 'string',
                      'example' => 'my-index-000001',
                    ),
                    'sourceHost' => 
                    array (
                      'description' => '源节点IP。',
                      'type' => 'string',
                      'example' => '192.168.XX.XX',
                    ),
                    'sourceNode' => 
                    array (
                      'description' => '源节点。',
                      'type' => 'string',
                      'example' => '2Kni3dJ',
                    ),
                    'filesTotal' => 
                    array (
                      'description' => '文件总数。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '79',
                    ),
                    'bytesPercent' => 
                    array (
                      'description' => '数据恢复进度。',
                      'type' => 'string',
                      'example' => '80%',
                    ),
                    'translogOps' => 
                    array (
                      'description' => '待恢复的Translog操作的数量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12086',
                    ),
                    'translogOpsPercent' => 
                    array (
                      'description' => '恢复Translog操作的进度。',
                      'type' => 'string',
                      'example' => '80%',
                    ),
                    'bytesTotal' => 
                    array (
                      'description' => '数据恢复总量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12086',
                    ),
                    'targetHost' => 
                    array (
                      'description' => '目标节点IP。',
                      'type' => 'string',
                      'example' => '192.168.XX.XX',
                    ),
                    'targetNode' => 
                    array (
                      'description' => '目标节点。',
                      'type' => 'string',
                      'example' => 'YVVKLmW',
                    ),
                    'filesPercent' => 
                    array (
                      'description' => '文件执行进度。',
                      'type' => 'string',
                      'example' => '80.0%',
                    ),
                    'stage' => 
                    array (
                      'description' => '数据恢复阶段状态。取值含义如下：

- done：执行完毕。

- finalize：清理工作。

- index：读取索引元数据并将字节从源复制到目标。

- init：恢复尚未开始。

- start：开始恢复。

- translog：重做事务日志。',
                      'type' => 'string',
                      'example' => 'done',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC47D9\\",\\n  \\"Result\\": [\\n    {\\n      \\"index\\": \\"my-index-000001\\",\\n      \\"sourceHost\\": \\"192.168.XX.XX\\",\\n      \\"sourceNode\\": \\"2Kni3dJ\\",\\n      \\"filesTotal\\": 79,\\n      \\"bytesPercent\\": \\"80%\\",\\n      \\"translogOps\\": 12086,\\n      \\"translogOpsPercent\\": \\"80%\\",\\n      \\"bytesTotal\\": 12086,\\n      \\"targetHost\\": \\"192.168.XX.XX\\",\\n      \\"targetNode\\": \\"YVVKLmW\\",\\n      \\"filesPercent\\": \\"80.0%\\",\\n      \\"stage\\": \\"done\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '分片恢复数据列表',
      'summary' => '查询有关正在进行和已完成的分片恢复的数据进度列表，默认返回正在进行的分片恢复信息。',
      'description' => '> 分片恢复是从主分片同步到副分片的过程。恢复完成后，副分片可供搜索。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTags' => 
    array (
      'summary' => '用户在当前区域创建的所有标签。',
      'path' => '/openapi/tags/all-tags',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'pageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果的分页数。默认值：20，最小值：1，最大值：50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
          ),
        ),
        1 => 
        array (
          'name' => 'resourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型，固定为INSTANCE。',
            'type' => 'string',
            'required' => false,
            'example' => 'INSTANCE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TagValue' => 
                    array (
                      'description' => '标签值。',
                      'type' => 'string',
                      'example' => 'dev',
                    ),
                    'TagKey' => 
                    array (
                      'description' => '标签键。',
                      'type' => 'string',
                      'example' => 'env',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Result\\": [\\n    {\\n      \\"TagValue\\": \\"dev\\",\\n      \\"TagKey\\": \\"env\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '标签列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTagResources' => 
    array (
      'summary' => '获取所有实例和标签的关系。',
      'path' => '/openapi/tags',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源关系列表的分页数，废弃字段。',
            'type' => 'integer',
            'format' => 'int32',
            'deprecated' => true,
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'Size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页条数，废弃字段。',
            'type' => 'integer',
            'format' => 'int32',
            'deprecated' => true,
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型定义。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'INSTANCE',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一个查询开始的Token。',
            'type' => 'string',
            'required' => false,
            'example' => '1d2db86sca4384811e0b5e8707e******',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的实例ID列表。采用JSON数组格式，最多支持20个子项。',
            'type' => 'string',
            'required' => false,
            'example' => '["es-cn-aaa","es-cn-bbb"]',
          ),
        ),
        5 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的Tags列表，采用JSON字符串的形式，最多包含20个子项。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"key":"env","value","dev"},{"key":"dev",  "value":"IT"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果对象。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6D******	',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。该参数为空，仅供参考，程序中不能强制依赖此参数。
> 返回示例中不包含此参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '查询到TagResource的资源数量。

',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                ),
              ),
              'TagResources' => 
              array (
                'description' => '标签资源组。',
                'type' => 'object',
                'properties' => 
                array (
                  'TagResource' => 
                  array (
                    'description' => '标签资源。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TagValue' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'dev',
                        ),
                        'ResourceType' => 
                        array (
                          'description' => '资源类型。固定为`ALIYUN::ELASTICSEARCH::INSTANCE`。',
                          'type' => 'string',
                          'example' => 'ALIYUN::ELASTICSEARCH::INSTANCE',
                        ),
                        'ResourceId' => 
                        array (
                          'description' => '资源ID。',
                          'type' => 'string',
                          'example' => 'es-cn-oew1q8bev0002****',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'env',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 1,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6D******\\\\t\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 10\\n  },\\n  \\"TagResources\\": {\\n    \\"TagResource\\": [\\n      {\\n        \\"TagValue\\": \\"dev\\",\\n        \\"ResourceType\\": \\"ALIYUN::ELASTICSEARCH::INSTANCE\\",\\n        \\"ResourceId\\": \\"es-cn-oew1q8bev0002****\\",\\n        \\"TagKey\\": \\"env\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '实例可见资源标签关系',
      'requestParamsDescription' => '- 您需要在**ResourceIds**和**Tags**参数中，至少选择一个传入值，否则报错。
- 您只能查询系统标签中的可见标签，不能查询不可见标签。
    > 系统标签是指云产品（即阿里云服务）给用户实例添加的标签。系统标签分为可见标签和不可见标签。

  ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UntagResources' => 
    array (
      'summary' => '删除指定实例的用户资源标签关系。',
      'path' => '/openapi/tags',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的资源列表。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '["es-cn-09k1rocex0006****","es-cn-oew1rgiev0009****"]',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。固定为**INSTANCE**。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'INSTANCE',
          ),
        ),
        2 => 
        array (
          'name' => 'TagKeys',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的标签列表，最多包含20个子项。',
            'type' => 'string',
            'required' => false,
            'example' => '["tagKey1","tagKey2"]',
          ),
        ),
        3 => 
        array (
          'name' => 'All',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否全部删除，默认为**false**。仅当**TagKeys**为空时有效。

',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：删除成功
- false：删除失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6D******',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6D******\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '删除用户资源标签关系',
      'description' => '调用该接口时，请注意：
- 只能删除用户标签。
  
    > 用户标签是指用户手动给实例添加的标签。对应的系统标签是指云产品（即阿里云服务）给用户实例添加的标签。系统标签分为可见标签和不可见标签。

- 对于没有关联任何资源的标签，在删除资源标签关系时，对应标签也要被删除。',
      'requestParamsDescription' => '- 当TagKeys为空，且**All = true**时，调用该接口会删除资源下所有的资源标签关系。对于没有标签的资源，不处理接口，并返回成功。
- 当传入**TagKeys**为空，同时**All = false**时，不处理接口，并返回成功。
- **TagKeys**不为空，**All**无论为true或者false，调用该接口会忽略此字段。
- 指定**TagKeys**后，调用该接口会删除资源上指定的标签。当资源上不存在指定标签时，将不处理该标签。
- 如果资源不存在，调用该接口会返回**InvalidResourceId.NotFound**。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TagResources' => 
    array (
      'summary' => '指定实例创建标签资源关系。',
      'path' => '/openapi/tags',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '要创建的资源及标签信息。',
            'type' => 'object',
            'properties' => 
            array (
              'ResourceIds' => 
              array (
                'title' => '实例ID列表。',
                'description' => '资源ID。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '实例ID',
                  'description' => '资源ID列表。采用JSON数组格式，最多支持20个子项。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '["es-cn-aaa","es-cn-bbb"]',
                ),
                'required' => true,
                'maxItems' => 50,
                'minItems' => 1,
              ),
              'Tags' => 
              array (
                'title' => '所关联的标签列表。',
                'description' => '标签信息。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '标签元素',
                  'description' => '标签对象。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'key' => 
                    array (
                      'title' => '标签Key',
                      'description' => '标签键。',
                      'type' => 'string',
                      'required' => true,
                      'example' => 'env',
                    ),
                    'value' => 
                    array (
                      'title' => '标签Value',
                      'description' => '标签值。',
                      'type' => 'string',
                      'required' => true,
                      'example' => 'IT',
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
                'maxItems' => 20,
                'minItems' => 1,
              ),
              'ResourceType' => 
              array (
                'title' => '资源类型，固定为INSTANCE。',
                'description' => '资源类型，固定为INSTANCE。',
                'type' => 'string',
                'required' => true,
                'example' => 'INSTANCE',
                'enum' => 
                array (
                  0 => 'INSTANCE',
                ),
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果对象。',
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'title' => '返回结果，true 标签关联资源成功。',
                'description' => '返回结果：

- true：标签资源关系创建成功。
- false：标签资源关系创建失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3D8795D9-8FF5-46B2-86E6-E3B407*******',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"3D8795D9-8FF5-46B2-86E6-E3B407*******\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '创建标签资源关系',
      'requestParamsDescription' => '> - Tags中如果存在key，则必须存在value（可以为空字符串），否则报错InvalidParameter.TagKey。
- 当传入的键值对重复时，会报错Duplicate.TagKey。
- 如果在自定义Tags之前已经存在相同的Tag key，则之前的Tag key的value值会被覆盖。',
      'extraInfo' => ' ',
    ),
    'DeleteDataTask' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/data-task',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-oew1oxiro000f****',
          ),
        ),
        2 => 
        array (
          'name' => 'taskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '索引迁移任务ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'et_cn_0oyg09o96ib40****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '删除索引迁移任务',
      'summary' => '删除Elasticsearch索引迁移任务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetTransferableNodes' => 
    array (
      'summary' => '指定节点类型和个数，获取可进行数据迁移的节点。',
      'path' => '/openapi/instances/{InstanceId}/transferable-nodes',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        1 => 
        array (
          'name' => 'nodeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要进行数据迁移的节点类型。**WORKER**表示热节点，**WORKER_WARM**表示冷节点。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'WORKER',
          ),
        ),
        2 => 
        array (
          'name' => 'count',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '期望获取进行数据迁移节点的数量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'port' => 
                    array (
                      'description' => '节点的访问端口。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '9200',
                    ),
                    'host' => 
                    array (
                      'description' => '节点的IP地址。',
                      'type' => 'string',
                      'example' => '192.168.**.**',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\",\\n  \\"Result\\": [\\n    {\\n      \\"port\\": 9200,\\n      \\"host\\": \\"192.168.**.**\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取可数据迁移节点',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => 'Result中还包含以下参数。
| 名称   | 类型  |示例值  |描述  |
|  ------   | ---- -- |------  |------  |
| nodeType  | String |WORKER  |节点类型，取值包括：MASTER（专有主节点）、WORKER（热节点）、WORKER_WARM（冷节点）、COORDINATING（协调节点）、KIBANA（Kibana节点）。|
| zoneId  | String |cn-hangzhou-b  |节点所在的可用区ID。|
',
      'extraInfo' => ' ',
    ),
    'ListDataTasks' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/data-task',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-oew1oxiro000f****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'createTime' => 
                    array (
                      'description' => '任务创建的时间。',
                      'type' => 'string',
                      'example' => '2020-07-30 06:32:18',
                    ),
                    'taskId' => 
                    array (
                      'description' => '任务ID。',
                      'type' => 'string',
                      'example' => 'et_cn_mfv1233r47272****',
                    ),
                    'status' => 
                    array (
                      'description' => '任务状态。',
                      'type' => 'string',
                      'example' => 'SUCCESS',
                    ),
                    'sinkCluster' => 
                    array (
                      'description' => '目标集群信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'index' => 
                        array (
                          'description' => '目标索引。',
                          'type' => 'string',
                          'example' => 'product_info',
                        ),
                        'type' => 
                        array (
                          'description' => '索引类型。',
                          'type' => 'string',
                          'example' => '_doc',
                        ),
                        'endpoint' => 
                        array (
                          'description' => '目标集群的公网访问地址。',
                          'type' => 'string',
                          'example' => 'http://192.168.xx.xx:4101',
                        ),
                        'vpcId' => 
                        array (
                          'description' => '集群所在的专有网络ID。',
                          'type' => 'string',
                          'example' => 'vpc-2ze55voww95g82gak****',
                        ),
                        'vpcInstancePort' => 
                        array (
                          'description' => '集群的访问端口号。',
                          'type' => 'string',
                          'example' => '9200',
                        ),
                        'vpcInstanceId' => 
                        array (
                          'description' => '当前集群的实例ID或负载均衡SLB（Server Load Balancer）实例ID。',
                          'type' => 'string',
                          'example' => 'es-cn-09k1rnu3g0002****-worker',
                        ),
                        'dataSourceType' => 
                        array (
                          'description' => '目标集群类型。默认为elasticsearch。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                      ),
                    ),
                    'sourceCluster' => 
                    array (
                      'description' => '源集群信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'index' => 
                        array (
                          'description' => '待迁移的索引。',
                          'type' => 'string',
                          'example' => 'product_info',
                        ),
                        'settings' => 
                        array (
                          'description' => '集群的Settings配置。',
                          'type' => 'string',
                          'example' => '{\\n  \\"index\\": {\\n    \\"replication\\": {\\n}.....}}',
                        ),
                        'mapping' => 
                        array (
                          'description' => '集群的Mapping配置。',
                          'type' => 'string',
                          'example' => '{\\"_doc\\":{\\"properties\\":{\\"user\\":{\\"properties\\":{\\"last\\":{\\"type\\":\\"text\\",...}}}}}}',
                        ),
                        'type' => 
                        array (
                          'description' => '索引类型。',
                          'type' => 'string',
                          'example' => '_doc',
                        ),
                        'routing' => 
                        array (
                          'description' => '索引路由字段，默认使用主键字段。',
                          'type' => 'string',
                          'example' => '_id',
                        ),
                        'dataSourceType' => 
                        array (
                          'description' => '源集群类型。默认为elasticsearch。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Result\\": [\\n    {\\n      \\"createTime\\": \\"2020-07-30 06:32:18\\",\\n      \\"taskId\\": \\"et_cn_mfv1233r47272****\\",\\n      \\"status\\": \\"SUCCESS\\",\\n      \\"sinkCluster\\": {\\n        \\"index\\": \\"product_info\\",\\n        \\"type\\": \\"_doc\\",\\n        \\"endpoint\\": \\"http://192.168.xx.xx:4101\\",\\n        \\"vpcId\\": \\"vpc-2ze55voww95g82gak****\\",\\n        \\"vpcInstancePort\\": \\"9200\\",\\n        \\"vpcInstanceId\\": \\"es-cn-09k1rnu3g0002****-worker\\",\\n        \\"dataSourceType\\": \\"1\\"\\n      },\\n      \\"sourceCluster\\": {\\n        \\"index\\": \\"product_info\\",\\n        \\"settings\\": \\"{\\\\\\\\n  \\\\\\\\\\\\\\"index\\\\\\\\\\\\\\": {\\\\\\\\n    \\\\\\\\\\\\\\"replication\\\\\\\\\\\\\\": {\\\\\\\\n}.....}}\\",\\n        \\"mapping\\": \\"{\\\\\\\\\\\\\\"_doc\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"user\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"last\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\",...}}}}}}\\",\\n        \\"type\\": \\"_doc\\",\\n        \\"routing\\": \\"_id\\",\\n        \\"dataSourceType\\": \\"1\\"\\n      }\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'ES数据迁移任务列表',
      'summary' => '获取不同Elasticsearch集群之间的数据迁移任务的列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetClusterDataInformation' => 
    array (
      'summary' => '获取索引迁移数据信息。',
      'path' => '/openapi/cluster/data-information',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'connectable' => 
                  array (
                    'description' => '是否可连通。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'metaInfo' => 
                  array (
                    'description' => '集群的元数据信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'mapping' => 
                      array (
                        'description' => '集群的Mapping配置。',
                        'type' => 'string',
                        'example' => '{\\"_doc\\":{\\"properties\\":{\\"user\\":{\\"properties\\":{\\"last\\":{\\"type\\":\\"text\\",...}}}}}}',
                      ),
                      'settings' => 
                      array (
                        'description' => '集群的Settings配置。',
                        'type' => 'string',
                        'example' => '{\\n  \\"index\\": {\\n    \\"replication\\": {\\n}.....}}',
                      ),
                      'typeName' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '指定索引的type。',
                          'type' => 'string',
                          'example' => '["index1-type"]',
                        ),
                      ),
                      'fields' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '索引Mapping对应的字段。',
                          'type' => 'string',
                          'example' => '["id","name"]',
                        ),
                      ),
                      'indices' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '集群的索引列表。',
                          'type' => 'string',
                          'example' => '["index1","index2","index3"]',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": {\\n    \\"connectable\\": true,\\n    \\"metaInfo\\": {\\n      \\"mapping\\": \\"{\\\\\\\\\\\\\\"_doc\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"user\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"last\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"text\\\\\\\\\\\\\\",...}}}}}}\\",\\n      \\"settings\\": \\"{\\\\\\\\n  \\\\\\\\\\\\\\"index\\\\\\\\\\\\\\": {\\\\\\\\n    \\\\\\\\\\\\\\"replication\\\\\\\\\\\\\\": {\\\\\\\\n}.....}}\\",\\n      \\"typeName\\": [\\n        \\"[\\\\\\"index1-type\\\\\\"]\\"\\n      ],\\n      \\"fields\\": [\\n        \\"[\\\\\\"id\\\\\\",\\\\\\"name\\\\\\"]\\"\\n      ],\\n      \\"indices\\": [\\n        \\"[\\\\\\"index1\\\\\\",\\\\\\"index2\\\\\\",\\\\\\"index3\\\\\\"]\\"\\n      ]\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '索引迁移数据信息',
      'requestParamsDescription' => '请求参数为空，但需填写RequestBody。
RequestBody中需要填入以下参数，用来指定集群信息。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| dataSourceType| String | 是 | elasticsearch |集群类型，默认为elasticsearch。|
| endpoint| String | 否 | http://10.01.xx.xx |集群公网域名。源集群的网络环境为公网时必填。|
| instanceId| String | 否 | es-cn-09k1rnu3g0002**** |Elasticsearch实例ID。源集群的网络环境为阿里云Elasticsearch集群时必填。|
| vpcInstancePort| Integer | 否 | 9200 |集群的访问端口号。源集群的网络环境为阿里云Elasticsearch集群、阿里云ECS服务自建集群时必填。|
| vpcId| String | 否 | vpc-2ze59tt67m3nzkko9****  |集群所在的专有网络ID。源集群的网络环境为阿里云Elasticsearch集群、阿里云ECS服务自建集群时必填。|
| vpcInstanceId| String | 否 | es-09k1rnu3g0002****-worker |当前集群的实例ID或负载均衡SLB（Server Load Balancer）实例ID。源集群的网络环境为阿里云Elasticsearch集群时必填。|
| username| String | 否 | elastic |集群的访问用户名。|
| password| String | 否 | xxxxxx |集群的访问密码。|
| index| String | 否 | product |索引名称。|
| type| String | 否 | default |索引类型。|


> - index为空，可校验Elasticsearch集群是否可连通。如果可连通，返回结果中indices不为空。
- index不为空，可获取当前index下，settings和mapping的信息。
- type不为空，可获取当前type对应的routing字段信息。


源集群的网络环境不同，需要填写的参数不同：
- 公网集群：需要填写的参数包括endpoint，示例如下。
       
       ```
        {
         "dataSourceType": "elasticsearch",
         "endpoint": "http://es-cn-npk1shyiq000d****.public.elasticsearch.aliyuncs.com:9200",
         "username": "elastic",
         "password": "xxxxxx",
         "index": "default",
         "type": "default"
         }
      ```

- 阿里云ECS服务自建集群：需要填写的参数包括vpcInstancePort、vpcId和vpcIp，示例如下。
     
      ```
       {
            "dataSourceType": "elasticsearch",
            "vpcId":"vpc-2ze55voww95g82gak****",
            "vpcInstancePort": "9200",
            "vpcIp": "10.12.xx.xx",
            "username" : "elastic",
            "password" : "xxxxxx",
            "index":  "product",
            "type" : "default"
       }
      ```
      
- 阿里云Elasticsearch集群：需要填写的参数包括vpcInstancePort、vpcId、vpcInstanceId和instanceId，示例如下。
  
    ```
    {
        "dataSourceType" : "elasticsearch",
        "vpcId":"vpc-2ze55voww95g82gak****",
        "vpcInstancePort" : "9200",
        "vpcInstanceId" : "es-cn-09k1rnu3g0002****-worker",
        "instanceId" : "es-cn-oew1oxiro000f****",
        "username" : "elastic",
        "password" : "xxxxxx",
        "index":  "product",
        "type" : "default"
     }

    ```
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ValidateTransferableNodes' => 
    array (
      'summary' => '校验是否可以迁移指定实例中某些节点上的数据。',
      'path' => '/openapi/instances/{InstanceId}/validate-transfer-nodes',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        1 => 
        array (
          'name' => 'nodeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点类型，可选值：

- WORKER：热节点
- WORKER_WARM：冷节点

> 不支持COORDINATING（协调节点）和KIBANA（Kibana节点）。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'WORKER',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '请求对象。',
              'type' => 'object',
              'properties' => 
              array (
                'host' => 
                array (
                  'description' => '节点的IP地址。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '172.16.xx.xx',
                ),
                'port' => 
                array (
                  'description' => '节点的访问端口号。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '9200',
                ),
                'zoneId' => 
                array (
                  'description' => '实例节点所在的可用区ID。例如，上海可用区C为cn-shanghai-c。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cn-shanghai-c',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果对象。',
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：可以迁移
- false：不可以迁移',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '校验是否可以迁移实例中节点',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TransferNode' => 
    array (
      'summary' => '节点数据迁移，方便进行缩节点操作。',
      'path' => '/openapi/instances/{InstanceId}/actions/transfer',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        1 => 
        array (
          'name' => 'nodeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点类型，可选值：

- WORKER：热节点
- WORKER_WARM：冷节点',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'WORKER',
          ),
        ),
        2 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '请求对象。',
              'type' => 'object',
              'properties' => 
              array (
                'host' => 
                array (
                  'description' => '节点的IP地址。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.xx.xx',
                ),
                'port' => 
                array (
                  'description' => '节点的访问端口号。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '9200',
                ),
                'zoneId' => 
                array (
                  'description' => '实例节点所在的可用区ID。例如，上海可用区C为cn-shanghai-c。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cn-shanghai-c',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果对象。',
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：任务执行成功
- false：任务执行失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '节点数据迁移',
      'requestParamsDescription' => '
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CancelTask' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/actions/cancel-task',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        1 => 
        array (
          'name' => 'taskType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务类型，固定为MigrateData，表示数据迁移任务。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'MigrateData',
          ),
        ),
        2 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：取消任务成功
- false：取消任务失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '取消数据迁移任务',
      'summary' => '取消正在运行的数据迁移任务。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateCollector' => 
    array (
      'summary' => '创建采集器，采集指定服务上的数据。',
      'path' => '/openapi/collectors',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体参数。用来指定待创建采集器的配置信息。',
            'type' => 'object',
            'properties' => 
            array (
              'dryRun' => 
              array (
                'title' => '创建是否校验。true:只校验不创建，false：校验并创建',
                'description' => '是否校验并创建采集器，只有在创建或更新采集器时使用此参数。可选值：

- true：只校验不更新
- false：校验并更新

',
                'type' => 'boolean',
                'required' => true,
                'example' => 'true',
                'default' => 'false',
              ),
              'name' => 
              array (
                'title' => '采集器实例名称，自定义',
                'description' => '采集器名称。长度为1~30个字符，以大小写字母开头，可以包含字母、数字、下划线（_）或连字符（-）。',
                'type' => 'string',
                'required' => true,
                'example' => 'ct-test',
              ),
              'resType' => 
              array (
                'title' => '采集器类型。',
                'description' => '采集器类型。可选值：fileBeat、metricBeat、heartBeat和auditBeat。',
                'type' => 'string',
                'required' => true,
                'example' => 'fileBeat',
                'enum' => 
                array (
                  0 => 'fileBeat',
                  1 => 'metricBeat',
                  2 => 'heartBeat',
                  3 => 'auditBeat',
                ),
              ),
              'vpcId' => 
              array (
                'title' => '采集器所属专有网络ID。',
                'description' => '采集器所在的专有网络ID。',
                'type' => 'string',
                'required' => true,
                'example' => 'vpc-bp12nu14urf0upaf*****',
              ),
              'resVersion' => 
              array (
                'title' => '采集器版本',
                'description' => '采集器版本。可选值：
- 基于ECS部署：6.8.5_with_community
- 基于ACK部署：6.8.13_with_community',
                'type' => 'string',
                'required' => true,
                'example' => '6.8.5_with_community',
                'enum' => 
                array (
                  0 => '6.8.13_with_community',
                  1 => '6.8.5_with_community',
                ),
              ),
              'collectorPaths' => 
              array (
                'title' => 'filebeat的采集路径，只有ECS机器上的使用',
                'description' => 'fileBeat采集路径。仅当采集器的安装机器为ECS时，需要配置。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => 'filebeat的采集路径元素',
                  'description' => 'fileBeat采集路径。仅当采集器的安装机器为ECS时，需要配置。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '["/var/log"]',
                ),
                'required' => false,
              ),
              'configs' => 
              array (
                'title' => '配置文件信息',
                'description' => '采集器的配置文件信息。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '配置文件信息',
                  'description' => '采集器的配置文件信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'fileName' => 
                    array (
                      'title' => '文件路径名称',
                      'description' => '文件名。',
                      'type' => 'string',
                      'required' => true,
                      'example' => 'filebeat.yml',
                    ),
                    'content' => 
                    array (
                      'title' => '文件内容。详见：https://help.aliyun.com/document_detail/146447.html',
                      'description' => '文件内容。',
                      'type' => 'string',
                      'required' => true,
                      'example' => '"filebeat.inputs:xxx"',
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
              ),
              'extendConfigs' => 
              array (
                'title' => '采集器Output实例配置',
                'description' => '采集器扩展配置。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '采集器Output设置，详见数据结构：CollectorDeployMachine、CollectorKibanaInstance、CollectorTargetInstance',
                  'description' => '采集器扩展配置，详情请参见下文的extendConfigs参数说明章节。',
                  'type' => 'object',
                  'required' => true,
                  'example' => '{             "instanceId": "es-cn-nif201ihd0012****",              "instanceType": "elasticsearch",              "configType": "collectorTargetInstance",              "hosts": [                 "es-cn-nif201ihd0012****.elasticsearch.aliyuncs.com:9200"             ],              "userName": "elastic",              "password": "*****",              "protocol": "HTTP"         },          {             "type": "ECSInstanceId",              "configType": "collectorDeployMachine",              "machines": [                 {                     "instanceId": "i-bp11u91xgubypcuz****"                 }             ]         }     ]',
                ),
                'required' => true,
              ),
            ),
            'required' => false,
            'docRequired' => false,
            'example' => '{     "dryRun": false,      "name": "test_beats_1",      "resType": "fileBeat",      "resVersion": "6.8.5_with_community",      "vpcId": "vpc-bp12nu14urf0upaf*****",      "collectorPaths": [         "/var/log"     ],      "configs": [         {             "fileName": "filebeat.yml",              "content": "filebeat.inputs:xxx"         }     ] }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8466BDFB-C513-4B8D-B4E3-5AB256AB****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'resId' => 
                  array (
                    'description' => '创建成功的采集器ID。',
                    'type' => 'string',
                    'example' => 'ct-cn-4135is2tj194p****',
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8466BDFB-C513-4B8D-B4E3-5AB256AB****\\",\\n  \\"Result\\": {\\n    \\"resId\\": \\"ct-cn-4135is2tj194p****\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '创建收集器',
      'requestParamsDescription' => '## extendConfigs参数说明
extendConfigs中的参数含义如下。
|  名称  | 类型  | 是否必选 | 示例值  | 描述  |
|  ----  | ----  | ----  | ----  |
| extendConfigs| Array |   |   | 采集器扩展配置。|
| └configType | String |  是    | collectorElasticsearchForKibana  | 配置类型。可选值：collectorTargetInstance（采集器Output）、collectorDeployMachine（采集器的部署机器）、collectorElasticsearchForKibana（支持Kibana仪表盘的Elasticsearch实例信息）。|
| └type| String |  否    | ECSInstanceId  | 采集器部署的机器类型。可选值：ECSInstanceId（ECS）、ACKCluster（容器Kubernetes）。当**configType**为**collectorDeployMachine**时必填。|
| └instanceType| String |  否  | elasticsearch  | 采集器Output指定的实例类型。可选值：elasticsearch、logstash。当**configType**为**collectorTargetInstance**时必填。|
| └instanceId | String |  是    | es-cn-nif201ihd0012****  |采集器关联的实例ID。当**configType**为**collectorTargetInstance**时，为采集器Output的实例ID；当**configType**为**collectorDeployMachines**，且**type**为**ACKCluster**时，为ACK集群ID。|
| └machines| Array |  否  |   |采集器所部署的ECS机器列表信息。当**configType**为**collectorDeployMachines**，且**type**为**ECSInstanceId**时，必填。|
|   └└instanceId | String |  是  | i-bp11u91xgubypcuz****  |ECS机器ID列表。|
| └groupId | String |  | default_ct-cn-5i2l75bz4776**** | 机器组ID。当**configType**为**collectorDeployMachine**时，必填。 |
| └protocol | String |  否    |  HTTP | 传输协议，需要与采集器Output指定实例的访问协议保持一致。可选值：HTTP、HTTPS。当**configType**为**collectorTargetInstance**时必填。|
| └userName| String |  否    | elastic  |采集器Output指定实例的访问用户名，默认为elastic。当**configType**为**collectorTargetInstance**或**collectorElasticsearchForKibana**时必填。|
| └password| String |  否    | \\*****  |对应用户名的密码。|
| └enableMonitoring| Boolean |  否    | true |是否启用Monitoring，当**configType**为**collectorTargetInstance**，且**instanceType**为**elasticsearch**时必填。可选值：true（启用）、false（不启用）。|
| └hosts| List<String> |  否  | ["es-cn-nif201i\\*****.elasticsearch.aliyuncs.com:9200"]  |采集器Output指定实例的访问地址列表。当**configType**为**collectorTargetInstance**时必填。|
| └host | String |  否    | es-cn-nif201ihd0012****-kibana.internal.elasticsearch.aliyuncs.com:5601  |启用Kibana Dashboard后，Kibana的私网访问地址。当**configType**为**collectorElasticsearchForKibana**时必填。|
| └kibanaHost| String |  否    | https://es-cn-nif201ihd0012****.kibana.elasticsearch.aliyuncs.com:5601  |启用Kibana Dashboard后，Kibana的公网访问地址。当**configType**为**collectorElasticsearchForKibana**时必填。|

> └表示子参数。

**extendConfigs**中包括3种configType，分别为collectorTargetInstance、collectorElasticsearchForKibana、collectorDeployMachine，部署机器不同，需要配置的参数不同，具体组合方式如下：

- collectorTargetInstance
    - ECS
      configType、instanceId、instanceType、hosts、userName、password、protocol、enableMonitoring
    - ACK
      configType、instanceId、instanceType、userName、password、protocol、enableMonitoring

- collectorElasticsearchForKibana
    - ECS
      configType、instanceId、host、kibanaHost、userName、password、protocol
    - ACK
      configType
   
- collectorDeployMachine
    - ECS
      configType、type、machines、groupId
    - ACK
      configType、type、instanceId
     ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteCollector' => 
    array (
      'summary' => '删除指定的采集器。',
      'path' => '/openapi/collectors/{ResId}',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '采集器ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ct-cn-92z1h38882dal****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：
- true：删除成功
- false：删除失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '删除采集器',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyDeployMachine' => 
    array (
      'path' => '/openapi/collectors/{ResId}/actions/modify-deploy-machines',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '采集器ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ct-cn-xb1i7q79u65nk****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '是否更新成功：

- true：成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C37CE536-6C0F-4778-9B59-6D94C7F7EB63',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"C37CE536-6C0F-4778-9B59-6D94C7F7EB63\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更新一个collector安装的机器',
      'summary' => '更新一个collector安装的esc机器。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定目标ECS实例信息。
|  名称  | 类型  | 是否必选 | 示例值  | 描述  |
|  ----  | ----  | ----  | ----  |
| machines| List | 是   |   |目标ECS实例信息。|
|  └instanceId | String |  是    | i-bp11u91xgubypcuz****  |实例ID。|
| type| String |  是    | ECSInstanceId  |采集器部署的机器类型。仅支持ECSInstanceId（ECS机器部署）。|
| configType| String |  是 |collectorDeployMachine |配置类型。仅支持collectorDeployMachine（采集器的部署机器）。|
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateCollector' => 
    array (
      'path' => '/openapi/collectors/{ResId}',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '采集器实例ID。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ct-cn-77uqof2s7rg5c****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。
',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'resId' => 
                  array (
                    'description' => '采集器实例ID。
',
                    'type' => 'string',
                    'example' => 'ct-cn-0v3xj86085dvq****',
                  ),
                  'gmtUpdateTime' => 
                  array (
                    'description' => '采集器更新时间。',
                    'type' => 'string',
                    'example' => '2020-06-20T07:26:47.000+0000',
                  ),
                  'dryRun' => 
                  array (
                    'description' => '是否校验并创建采集器。支持：

- true：只校验不创建
- false：校验并创建
',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'ownerId' => 
                  array (
                    'description' => '账号ID。
',
                    'type' => 'string',
                    'example' => '16852099488*****',
                  ),
                  'vpcId' => 
                  array (
                    'description' => '采集器所在的专有网络ID。
',
                    'type' => 'string',
                    'example' => 'vpc-bp16k1dvzxtma*****',
                  ),
                  'resType' => 
                  array (
                    'description' => '采集器类型。支持fileBeat、metricBeat、heartBeat和auditBeat。
',
                    'type' => 'string',
                    'example' => 'fileBeat',
                  ),
                  'resVersion' => 
                  array (
                    'description' => '采集器版本。
',
                    'type' => 'string',
                    'example' => '6.8.5_with_community',
                  ),
                  'gmtCreatedTime' => 
                  array (
                    'description' => '采集器创建时间。
',
                    'type' => 'string',
                    'example' => '2020-06-20T07:26:47.000+0000',
                  ),
                  'status' => 
                  array (
                    'description' => '采集器状态。支持：

- activing：生效中

- active：已生效
',
                    'type' => 'string',
                    'example' => 'active',
                  ),
                  'name' => 
                  array (
                    'description' => '采集器名称。
',
                    'type' => 'string',
                    'example' => 'ct-test',
                  ),
                  'configs' => 
                  array (
                    'description' => '采集器的配置文件信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'content' => 
                        array (
                          'description' => '文件内容
',
                          'type' => 'string',
                          'example' => 'filebeat.inputs:xxx',
                        ),
                        'fileName' => 
                        array (
                          'description' => '文件名称
',
                          'type' => 'string',
                          'example' => 'filebeat.yml',
                        ),
                      ),
                    ),
                  ),
                  'extendConfigs' => 
                  array (
                    'description' => '扩展参数信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'successPodsCount' => 
                        array (
                          'description' => 'ACK集群所有成功采集的Pod节点数。当**configType**为**collectorDeployMachines**，且**type**为**ACKCluster**时显示。',
                          'type' => 'string',
                          'example' => '8',
                        ),
                        'protocol' => 
                        array (
                          'description' => '传输协议，需要与采集器Output指定实例的访问协议保持一致。支持HTTP、HTTPS。当**configType**为**collectorTargetInstance**时显示。

',
                          'type' => 'string',
                          'example' => 'HTTP',
                        ),
                        'userName' => 
                        array (
                          'description' => '采集器Output指定实例的访问用户名，默认为elastic。当**configType**为**collectorTargetInstance**或**collectorElasticsearchForKibana**时显示。

',
                          'type' => 'string',
                          'example' => 'elastic',
                        ),
                        'totalPodsCount' => 
                        array (
                          'description' => 'ACK集群所有采集的Pod节点数。当**configType**为**collectorDeployMachines**，且**type**为**ACKCluster**时显示。',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'type' => 
                        array (
                          'description' => '采集器部署的机器类型，当**configType**为**collectorDeployMachine**时显示。支持：

- ECSInstanceId：ECS

- ACKCluster：容器Kubernetes
',
                          'type' => 'string',
                          'example' => 'ECSInstanceId',
                        ),
                        'kibanaHost' => 
                        array (
                          'description' => '启用Kibana Dashboard后，Kibana的公网访问地址。当**configType**为**collectorElasticsearchForKibana**时显示。',
                          'type' => 'string',
                          'example' => 'https://es-cn-nif1z89fz003i****.kibana.elasticsearch.aliyuncs.com:5601',
                        ),
                        'enableMonitoring' => 
                        array (
                          'description' => '是否启用Monitoring，当**configType**为**collectorTargetInstance**，且**instanceType**为**elasticsearch**时显示。支持true（启用）、false（不启用）。

',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'configType' => 
                        array (
                          'description' => '配置类型。支持：

- collectorTargetInstance：采集器Output
- collectorDeployMachine：采集器的部署机器
- collectorElasticsearchForKibana：支持Kibana仪表盘的Elasticsearch实例信息
',
                          'type' => 'string',
                          'example' => 'collectorDeployMachine',
                        ),
                        'instanceType' => 
                        array (
                          'description' => '采集器Output指定的实例类型。支持elasticsearch、logstash。当**configType**为**collectorTargetInstance**时显示。

',
                          'type' => 'string',
                          'example' => 'elasticsearch',
                        ),
                        'groupId' => 
                        array (
                          'description' => '机器组ID。当**configType**为**collectorDeployMachine**时显示。
',
                          'type' => 'string',
                          'example' => 'default_ct-cn-5i2l75bz4776****',
                        ),
                        'host' => 
                        array (
                          'description' => '启用Kibana Dashboard后，Kibana的私网访问地址。当**configType**为**collectorElasticsearchForKibana**时显示。',
                          'type' => 'string',
                          'example' => 'es-cn-n6w1o1x0w001c****-kibana.internal.elasticsearch.aliyuncs.com:5601',
                        ),
                        'instanceId' => 
                        array (
                          'description' => '采集器关联的实例ID。当**configType**为**collectorTargetInstance**时，为采集器Output的实例ID；当**configType**为**collectorDeployMachines**，且**type**为**ACKCluster**时，为ACK（容器Kubernetes）集群ID。

',
                          'type' => 'string',
                          'example' => 'es-cn-nif1z89fz003i****',
                        ),
                        'machines' => 
                        array (
                          'description' => 'collectorDeployMachine类型专用：

部署ECS机器/ACK集群信息

',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'agentStatus' => 
                              array (
                                'description' => 'ECS上各采集器的状态。支持：

- heartOk：心跳正常
- heartLost：心跳异常
- uninstalled：未安装
- failed：安装失败

',
                                'type' => 'string',
                                'example' => 'heartOk',
                              ),
                              'instanceId' => 
                              array (
                                'description' => 'ECS机器ID列表。
',
                                'type' => 'string',
                                'example' => 'i-bp13y63575oypr9d****',
                              ),
                            ),
                          ),
                        ),
                        'hosts' => 
                        array (
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '采集器Output指定实例的访问地址列表。当**configType**为**collectorTargetInstance**时显示。

',
                            'type' => 'string',
                            'example' => '["es-cn-n6w1o1x*****.elasticsearch.aliyuncs.com:9200"]',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'collectorPaths' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'Filebeat的采集路径。
',
                      'type' => 'string',
                      'example' => '["/var/log"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Result\\": {\\n    \\"resId\\": \\"ct-cn-0v3xj86085dvq****\\",\\n    \\"gmtUpdateTime\\": \\"2020-06-20T07:26:47.000+0000\\",\\n    \\"dryRun\\": false,\\n    \\"ownerId\\": \\"16852099488*****\\",\\n    \\"vpcId\\": \\"vpc-bp16k1dvzxtma*****\\",\\n    \\"resType\\": \\"fileBeat\\",\\n    \\"resVersion\\": \\"6.8.5_with_community\\",\\n    \\"gmtCreatedTime\\": \\"2020-06-20T07:26:47.000+0000\\",\\n    \\"status\\": \\"active\\",\\n    \\"name\\": \\"ct-test\\",\\n    \\"configs\\": [\\n      {\\n        \\"content\\": \\"filebeat.inputs:xxx\\",\\n        \\"fileName\\": \\"filebeat.yml\\"\\n      }\\n    ],\\n    \\"extendConfigs\\": [\\n      {\\n        \\"successPodsCount\\": \\"8\\",\\n        \\"protocol\\": \\"HTTP\\",\\n        \\"userName\\": \\"elastic\\",\\n        \\"totalPodsCount\\": \\"10\\",\\n        \\"type\\": \\"ECSInstanceId\\",\\n        \\"kibanaHost\\": \\"https://es-cn-nif1z89fz003i****.kibana.elasticsearch.aliyuncs.com:5601\\",\\n        \\"enableMonitoring\\": true,\\n        \\"configType\\": \\"collectorDeployMachine\\",\\n        \\"instanceType\\": \\"elasticsearch\\",\\n        \\"groupId\\": \\"default_ct-cn-5i2l75bz4776****\\",\\n        \\"host\\": \\"es-cn-n6w1o1x0w001c****-kibana.internal.elasticsearch.aliyuncs.com:5601\\",\\n        \\"instanceId\\": \\"es-cn-nif1z89fz003i****\\",\\n        \\"machines\\": [\\n          {\\n            \\"agentStatus\\": \\"heartOk\\",\\n            \\"instanceId\\": \\"i-bp13y63575oypr9d****\\"\\n          }\\n        ],\\n        \\"hosts\\": [\\n          \\"[\\\\\\"es-cn-n6w1o1x*****.elasticsearch.aliyuncs.com:9200\\\\\\"]\\"\\n        ]\\n      }\\n    ],\\n    \\"collectorPaths\\": [\\n      \\"[\\\\\\"/var/log\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改采集器',
      'summary' => '修改采集器配置。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定待更新采集器的配置信息。
| 参数 | 类型 | 是否必选 | 示例值 | 描述 |
| --- | --- | --- | --- | --- |
| dryRun | boolean | 是 | false | 是否校验并更新采集器。可选值：true（只校验不更新）、false（校验并更新）。 |
| name | String | 是 | ct-test | 采集器名称。 |
| status | String | 是 | activing | 采集器状态。可选值：activing（生效中）、active（已生效）。 |
| resType | String | 是 | fileBeat | 采集器类型。可选值：fileBeat、metricBeat、heartBeat、auditBeat。|
| vpcId | String | 是  | vpc-bp16k1dvzxtma\\***** | 采集器所在的专有网络ID。|
| resVersion | String | 是 | 6.8.5\\_with_community | 采集器版本。|
| ownerId | String | 是 | 16852099488\\***** | 账号ID。 |
| gmtCreatedTime | Date | 是 | 2020-06-20T07:26:47.000+0000 | 采集器创建时间。 |
| gmtUpdateTime | Date | 是 | 2020-06-20T07:26:47.000+0000 | 采集器更新时间。 |
| collectorPaths | List<String> | 否 | ["/var/log"] | Filebeat采集路径。|
| configs | List | 是 |  | 采集器的配置文件信息。|
| └fileName | String | 是 | filebeat.yml | 文件名称。|
| └content | String | 是 | "filebeat.inputs:xxx" | 文件内容。|
| extendConfigs | Array | 是 |  | 采集器扩展配置。|
| └configType | String | 是 | collectorElasticsearchForKibana | 配置类型。可选值：collectorTargetInstance（采集器Output）、collectorDeployMachine（采集器的部署机器）、collectorElasticsearchForKibana（支持Kibana仪表盘的Elasticsearch实例信息）。|
| └type | String | 是 | ECSInstanceId | 采集器部署的机器类型。可选值：ECSInstanceId（ECS）、ACKCluster（容器Kubernetes）。当**configType**为**collectorDeployMachine**时必填。|
| └machines | Array | 否 |  | 采集器所部署的ECS机器列表信息。当**configType**为**collectorDeployMachines**，且**type**为**ECSInstanceId**时，必填。 |
|   └└instanceId | String | 否 | i-bp13y63575oypr9d**** | ECS机器ID列表。|
|   └└agentStatus | String | 否 | failed | ECS上各采集器的状态。可选值：heartOk（心跳正常）、heartLost（心跳异常）、uninstalled（未安装）、failed（安装失败）。|
| └groupId | String |  | default_ct-cn-5i2l75bz4776**** | 机器组ID。当**configType**为**collectorDeployMachine**时，必填。 |
| └instanceId | String | 是 | es-cn-nif1z89fz003i**** | 采集器关联的实例ID。当**configType**为**collectorTargetInstance**时，为采集器Output的实例ID；当**configType**为**collectorDeployMachines**，且**type**为**ACKCluster**时，为ACK集群ID。 |
| └protocol | String | 是 | HTTP | 传输协议，需要与采集器Output指定实例的访问协议保持一致。可选值HTTP、HTTPS。当**configType**为**collectorTargetInstance**时必填。|
| └userName | String | 是 | elastic | 采集器Output指定实例的访问用户名，默认为elastic。当**configType**为**collectorTargetInstance**或**collectorElasticsearchForKibana**时必填。|
| └enableMonitoring | Boolean | 是 | true | 是否启用Monitoring，当**configType**为**collectorTargetInstance**，且**instanceType**为**elasticsearch**时必填。可选值：true（启用）、false（不启用）。|
| └hosts | List<String> | 否 | ["es-cn-n6w1o1x\\*****.elasticsearch.aliyuncs.com:9200"] | 采集器Output指定实例的访问地址列表。当**configType**为**collectorTargetInstance**时必填。 |
| └instanceType | String | 是 | elasticsearch | 采集器Output指定的实例类型。可选值：elasticsearch、logstash。当**configType**为**collectorTargetInstance**时必填。|
| └host | String | 否 | es-cn-n6w1o1x0w001c****-kibana.internal.elasticsearch.aliyuncs.com:5601 | 启用Kibana Dashboard后，Kibana的私网访问地址。当**configType**为**collectorElasticsearchForKibana**时必填。 |
| └kibanaHost | String | 否 | https://es-cn-nif1z89fz003i****.kibana.elasticsearch.aliyuncs.com:5601 | 启用Kibana Dashboard后，Kibana的公网访问地址。当**configType**为**collectorElasticsearchForKibana**时必填。|

> └表示子参数。

### 特殊参数说明
**extendConfigs**中包括3种configType，分别为collectorTargetInstance、collectorElasticsearchForKibana、collectorDeployMachine，部署机器不同，需要配置的参数不同，具体组合方式如下：

- collectorTargetInstance
    - ECS
      configType、instanceId、instanceType、hosts、userName、password、protocol、enableMonitoring
    - ACK
      configType、instanceId、instanceType、userName、password、protocol、enableMonitoring

- collectorElasticsearchForKibana
    - ECS
      configType、instanceId、host、kibanaHost、userName、password、protocol
    - ACK
      configType
   
- collectorDeployMachine
    - ECS
      configType、type、machines、groupId
    - ACK
      configType、type、instanceId、totalPodsCount、successPodsCount


',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateCollectorName' => 
    array (
      'summary' => '调用UpdateCollectorName，修改采集器名称。',
      'path' => '/openapi/collectors/{ResId}/actions/rename',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '采集器ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ct-cn-77uqof2s7rg5c****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'resId' => 
                  array (
                    'description' => '采集器实例ID。',
                    'type' => 'string',
                    'example' => 'ct-cn-77uqof2s7rg5c****',
                  ),
                  'gmtUpdateTime' => 
                  array (
                    'description' => '采集器更新时间。',
                    'type' => 'string',
                    'example' => '2020-06-20T07:26:47.000+0000',
                  ),
                  'dryRun' => 
                  array (
                    'description' => '是否校验并创建采集器。支持：

- true：只校验不更新
- false：校验并更新
',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'ownerId' => 
                  array (
                    'description' => '账号ID。',
                    'type' => 'string',
                    'example' => '16852099488*****',
                  ),
                  'vpcId' => 
                  array (
                    'description' => '采集器所在的专有网络ID。',
                    'type' => 'string',
                    'example' => 'vpc-bp16k1dvzxtma*****',
                  ),
                  'resType' => 
                  array (
                    'description' => '采集器类型，支持fileBeat、metricBeat、heartBeat和audiBeat。',
                    'type' => 'string',
                    'example' => 'fileBeat',
                  ),
                  'resVersion' => 
                  array (
                    'description' => '采集器版本。支持的版本与采集器的部署机器类型相关，具体如下：

- ECS：6.8.5_with_community
- ACK：6.8.13_with_community',
                    'type' => 'string',
                    'example' => '6.8.5_with_community',
                  ),
                  'gmtCreatedTime' => 
                  array (
                    'description' => '采集器创建时间。

',
                    'type' => 'string',
                    'example' => '2020-06-20T07:26:47.000+0000',
                  ),
                  'status' => 
                  array (
                    'description' => '采集器状态。支持activing（生效中）和active（已生效）。

',
                    'type' => 'string',
                    'example' => 'active',
                  ),
                  'name' => 
                  array (
                    'description' => '采集器名称。',
                    'type' => 'string',
                    'example' => 'ct-test',
                  ),
                  'configs' => 
                  array (
                    'description' => '采集器的配置文件信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'content' => 
                        array (
                          'description' => '文件内容。',
                          'type' => 'string',
                          'example' => '- key: log\\n title: Log file content\\n description: >\\n Contains log file lines.\\n ....',
                        ),
                        'fileName' => 
                        array (
                          'description' => '文件名。',
                          'type' => 'string',
                          'example' => 'fields.yml',
                        ),
                      ),
                    ),
                  ),
                  'extendConfigs' => 
                  array (
                    'description' => '采集器扩展配置。
',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'successPodsCount' => 
                        array (
                          'description' => 'ACK集群所有成功采集的Pod节点数。当**configType**为**collectorDeployMachines**，且**type**为**ACKCluster**时显示。',
                          'type' => 'string',
                          'example' => '8',
                        ),
                        'protocol' => 
                        array (
                          'description' => '传输协议，支持**HTTP**、**HTTPS**。
',
                          'type' => 'string',
                          'example' => 'HTTP',
                        ),
                        'userName' => 
                        array (
                          'description' => '采集器Output指定实例的访问用户名，默认为elastic。当**configType**为**collectorTargetInstance**或**collectorElasticsearchForKibana**时显示。

',
                          'type' => 'string',
                          'example' => 'elastic',
                        ),
                        'totalPodsCount' => 
                        array (
                          'description' => 'ACK集群所有采集的Pod节点数。当**configType**为**collectorDeployMachines**，且**type**为**ACKCluster**时显示。',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'type' => 
                        array (
                          'description' => '采集器部署的机器类型，当**configType**为**collectorDeployMachine**时显示。支持：

- ECSInstanceId：ECS实例
- ACKCluster：容器Kubernetes集群',
                          'type' => 'string',
                          'example' => 'ECSInstanceId',
                        ),
                        'kibanaHost' => 
                        array (
                          'description' => '启用Kibana Dashboard后，Kibana的公网访问地址。当**configType**为**collectorElasticsearchForKibana**时显示。',
                          'type' => 'string',
                          'example' => 'https://es-cn-4591jumei000u****.kibana.elasticsearch.aliyuncs.com:5601',
                        ),
                        'enableMonitoring' => 
                        array (
                          'description' => '是否启用Monitoring。当**configType**为**collectorTargetInstance**，且**instanceType**为**elasticsearch**时显示。支持：

- true：启用
- false：不启用',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'configType' => 
                        array (
                          'description' => '配置类型。支持：

- collectorTargetInstance：采集器Output
- collectorDeployMachine：采集器的部署机器
- collectorElasticsearchForKibana：支持Kibana仪表盘的Elasticsearch实例信息
',
                          'type' => 'string',
                          'example' => 'collectorDeployMachine',
                        ),
                        'instanceType' => 
                        array (
                          'description' => '采集器Output指定的实例类型，支持：elasticsearch、logstash。当**configType**为**collectorTargetInstance**时显示。',
                          'type' => 'string',
                          'example' => 'elasticsearch',
                        ),
                        'groupId' => 
                        array (
                          'description' => '机器组ID。当**configType**为**collectorDeployMachine**时显示。',
                          'type' => 'string',
                          'example' => 'default_ct-cn-5i2l75bz4776****',
                        ),
                        'host' => 
                        array (
                          'description' => '启用Kibana Dashboard后，Kibana的私网访问地址。当**configType**为**collectorElasticsearchForKibana**时显示。',
                          'type' => 'string',
                          'example' => 'es-cn-4591jumei000u****-kibana.internal.elasticsearch.aliyuncs.com:5601',
                        ),
                        'instanceId' => 
                        array (
                          'description' => '采集器关联的实例ID。当**configType**为**collectorTargetInstance**时，为采集器Output的实例ID；当**configType**为**collectorDeployMachines**，且**type**为**ACKCluster**时，为ACK集群ID。',
                          'type' => 'string',
                          'example' => 'es-cn-n6w1o1****',
                        ),
                        'machines' => 
                        array (
                          'description' => '采集器所部署的ECS机器列表信息。当**configType**为**collectorDeployMachines**，且**type**为**ECSInstanceId**时显示。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'agentStatus' => 
                              array (
                                'description' => 'ECS上各采集器的状态。支持：**heartOk**（心跳正常）、**heartLost**（心跳异常）、**uninstalled**（未安装）和**failed**（安装失败）。',
                                'type' => 'string',
                                'example' => 'heartOk',
                              ),
                              'instanceId' => 
                              array (
                                'description' => 'ECS机器ID列表。
',
                                'type' => 'string',
                                'example' => 'c1b9fde5172b84f82b9928e825a7b8988',
                              ),
                            ),
                          ),
                        ),
                        'hosts' => 
                        array (
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '采集器Output指定实例的访问地址列表。当**configType**为**collectorTargetInstance**时显示。
',
                            'type' => 'string',
                            'example' => '["es-cn-n6w1o1x*****.elasticsearch.aliyuncs.com:9200"]',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'collectorPaths' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'fileBeat采集路径。当采集器的部署机器为ECS时显示。',
                      'type' => 'string',
                      'example' => '["/var/log"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": {\\n    \\"resId\\": \\"ct-cn-77uqof2s7rg5c****\\",\\n    \\"gmtUpdateTime\\": \\"2020-06-20T07:26:47.000+0000\\",\\n    \\"dryRun\\": false,\\n    \\"ownerId\\": \\"16852099488*****\\",\\n    \\"vpcId\\": \\"vpc-bp16k1dvzxtma*****\\",\\n    \\"resType\\": \\"fileBeat\\",\\n    \\"resVersion\\": \\"6.8.5_with_community\\",\\n    \\"gmtCreatedTime\\": \\"2020-06-20T07:26:47.000+0000\\",\\n    \\"status\\": \\"active\\",\\n    \\"name\\": \\"ct-test\\",\\n    \\"configs\\": [\\n      {\\n        \\"content\\": \\"- key: log\\\\\\\\n title: Log file content\\\\\\\\n description: >\\\\\\\\n Contains log file lines.\\\\\\\\n ....\\",\\n        \\"fileName\\": \\"fields.yml\\"\\n      }\\n    ],\\n    \\"extendConfigs\\": [\\n      {\\n        \\"successPodsCount\\": \\"8\\",\\n        \\"protocol\\": \\"HTTP\\",\\n        \\"userName\\": \\"elastic\\",\\n        \\"totalPodsCount\\": \\"10\\",\\n        \\"type\\": \\"ECSInstanceId\\",\\n        \\"kibanaHost\\": \\"https://es-cn-4591jumei000u****.kibana.elasticsearch.aliyuncs.com:5601\\",\\n        \\"enableMonitoring\\": true,\\n        \\"configType\\": \\"collectorDeployMachine\\",\\n        \\"instanceType\\": \\"elasticsearch\\",\\n        \\"groupId\\": \\"default_ct-cn-5i2l75bz4776****\\",\\n        \\"host\\": \\"es-cn-4591jumei000u****-kibana.internal.elasticsearch.aliyuncs.com:5601\\",\\n        \\"instanceId\\": \\"es-cn-n6w1o1****\\",\\n        \\"machines\\": [\\n          {\\n            \\"agentStatus\\": \\"heartOk\\",\\n            \\"instanceId\\": \\"c1b9fde5172b84f82b9928e825a7b8988\\"\\n          }\\n        ],\\n        \\"hosts\\": [\\n          \\"[\\\\\\"es-cn-n6w1o1x*****.elasticsearch.aliyuncs.com:9200\\\\\\"]\\"\\n        ]\\n      }\\n    ],\\n    \\"collectorPaths\\": [\\n      \\"[\\\\\\"/var/log\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改采集器名称',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定修改后的采集器名称。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| name| String | 是 |collectorName1 |修改后的采集器名称。|

示例如下。

```
{
  "name": "collectorName1"
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StartCollector' => 
    array (
      'summary' => '启动采集器，进行数据采集。',
      'path' => '/openapi/collectors/{ResId}/actions/start',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '采集器ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ct-cn-77uqof2s7rg5c****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '启动采集器',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StopCollector' => 
    array (
      'summary' => '调用StopCollector，停止运行中的采集器。',
      'path' => '/openapi/collectors/{ResId}/actions/stop',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '采集器ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ct-cn-77uqof2s7rg5c****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '停止运行中的采集器',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCollector' => 
    array (
      'path' => '/openapi/collectors/{ResId}',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '采集器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ct-cn-rg31ahn82m0qd****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'resId' => 
                  array (
                    'description' => '采集器实例ID。',
                    'type' => 'string',
                    'example' => 'ct-cn-rg31ahn82m0qd****',
                  ),
                  'gmtUpdateTime' => 
                  array (
                    'description' => '采集器更新时间。',
                    'type' => 'string',
                    'example' => '2020-06-20T07:26:47.000+0000',
                  ),
                  'dryRun' => 
                  array (
                    'description' => '是否校验并创建采集器。支持：

- true：只校验不创建
- false：校验并创建',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'ownerId' => 
                  array (
                    'description' => '账号ID。

',
                    'type' => 'string',
                    'example' => '16852099488*****',
                  ),
                  'vpcId' => 
                  array (
                    'description' => '采集器所在的专有网络ID。',
                    'type' => 'string',
                    'example' => 'vpc-bp16k1dvzxtma*****',
                  ),
                  'resType' => 
                  array (
                    'description' => '采集器类型。支持fileBeat、metricBeat、heartBeat和auditBeat。',
                    'type' => 'string',
                    'example' => 'fileBeat',
                  ),
                  'resVersion' => 
                  array (
                    'description' => '采集器版本。',
                    'type' => 'string',
                    'example' => '6.8.5_with_community',
                  ),
                  'gmtCreatedTime' => 
                  array (
                    'description' => '采集器创建时间。',
                    'type' => 'string',
                    'example' => '2020-06-20T07:26:47.000+0000',
                  ),
                  'status' => 
                  array (
                    'description' => '采集器状态。支持：

- activing：生效中
- active：已生效

',
                    'type' => 'string',
                    'example' => 'active',
                  ),
                  'name' => 
                  array (
                    'description' => '采集器名称。',
                    'type' => 'string',
                    'example' => 'ct-cn-4135is2tj194p****',
                  ),
                  'configs' => 
                  array (
                    'description' => '采集器的配置文件信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'content' => 
                        array (
                          'description' => '文件内容。',
                          'type' => 'string',
                          'example' => 'fileBeat.inputs:xxx',
                        ),
                        'fileName' => 
                        array (
                          'description' => '文件名称。',
                          'type' => 'string',
                          'example' => 'filebeat.yml',
                        ),
                      ),
                    ),
                  ),
                  'extendConfigs' => 
                  array (
                    'description' => '采集器扩展配置。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'successPodsCount' => 
                        array (
                          'description' => 'ACK集群所有采集成功的Pod节点数。',
                          'type' => 'string',
                          'example' => '8',
                        ),
                        'protocol' => 
                        array (
                          'description' => '传输协议，需要与采集器Output指定实例的访问协议保持一致。支持HTTP、HTTPS。当**configType**为**collectorTargetInstance**时显示。',
                          'type' => 'string',
                          'example' => 'HTTP',
                        ),
                        'userName' => 
                        array (
                          'description' => '采集器Output指定实例的访问用户名，默认为elastic。当**configType**为**collectorTargetInstance**或**collectorElasticsearchForKibana**时显示。
',
                          'type' => 'string',
                          'example' => 'elastic',
                        ),
                        'totalPodsCount' => 
                        array (
                          'description' => 'ACK集群所有采集的Pod节点数。',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'type' => 
                        array (
                          'description' => '采集器部署的机器类型，当**configType**为**collectorDeployMachine**时显示。支持：

- ECSInstanceId：ECS
- ACKCluster：容器Kubernetes
',
                          'type' => 'string',
                          'example' => 'ECSInstanceId',
                        ),
                        'kibanaHost' => 
                        array (
                          'description' => '启用Kibana Dashboard后，Kibana的公网访问地址。当**configType**为**collectorElasticsearchForKibana**时显示。',
                          'type' => 'string',
                          'example' => 'https://es-cn-nif1z89fz003i****.kibana.elasticsearch.aliyuncs.com:5601',
                        ),
                        'enableMonitoring' => 
                        array (
                          'description' => '是否启用Monitoring，当**configType**为**collectorTargetInstance**时显示。支持：

- true：启用

- false：不启用',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'configType' => 
                        array (
                          'description' => '配置类型。支持：

- collectorTargetInstance：采集器Output
- collectorDeployMachine：采集器的部署机器
- collectorElasticsearchForKibana：支持Kibana仪表盘的Elasticsearch实例信息',
                          'type' => 'string',
                          'example' => 'collectorDeployMachine',
                        ),
                        'instanceType' => 
                        array (
                          'description' => '采集器Output指定的实例类型。支持elasticsearch、logstash。当**configType**为**collectorTargetInstance**时显示。',
                          'type' => 'string',
                          'example' => 'elasticsearch',
                        ),
                        'groupId' => 
                        array (
                          'description' => '机器组ID。当**configType**为**collectorDeployMachine**时显示。',
                          'type' => 'string',
                          'example' => 'default_ct-cn-5i2l75bz4776****',
                        ),
                        'host' => 
                        array (
                          'description' => '启用Kibana Dashboard后，Kibana的私网地址。当**configType**为**collectorElasticsearchForKibana**时显示。',
                          'type' => 'string',
                          'example' => 'es-cn-n6w1o1x0w001c****-kibana.internal.elasticsearch.aliyuncs.com:5601',
                        ),
                        'instanceId' => 
                        array (
                          'description' => '采集器关联的实例ID。当**configType**为**collectorTargetInstance**时，为采集器Output的实例ID；当**configType**为**collectorDeployMachines**，且**type**为**ACKCluster**时，为ACK（容器Kubernetes）集群ID。

',
                          'type' => 'string',
                          'example' => 'es-cn-n6w1o1****',
                        ),
                        'machines' => 
                        array (
                          'description' => '采集器所部署的ECS机器列表信息。当**configType**为**collectorDeployMachines**，且**type**为**ECSInstanceId**时显示。

',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'agentStatus' => 
                              array (
                                'description' => 'ECS上各采集器的状态。支持：

- heartOk：心跳正常
- heartLost：心跳异常
- uninstalled：未安装
- failed：安装失败',
                                'type' => 'string',
                                'example' => 'heartOk',
                              ),
                              'instanceId' => 
                              array (
                                'description' => 'ECS机器ID列表。
',
                                'type' => 'string',
                                'example' => 'i-bp1gyhphjaj73jsr****',
                              ),
                            ),
                          ),
                        ),
                        'hosts' => 
                        array (
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '采集器Output指定实例的访问地址列表。当**configType**为**collectorTargetInstance**时显示。
',
                            'type' => 'string',
                            'example' => '["es-cn-n6w1o1x*****.elasticsearch.aliyuncs.com:9200"]',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'collectorPaths' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'Filebeat采集路径。',
                      'type' => 'string',
                      'example' => '["/var/log"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": {\\n    \\"resId\\": \\"ct-cn-rg31ahn82m0qd****\\",\\n    \\"gmtUpdateTime\\": \\"2020-06-20T07:26:47.000+0000\\",\\n    \\"dryRun\\": false,\\n    \\"ownerId\\": \\"16852099488*****\\",\\n    \\"vpcId\\": \\"vpc-bp16k1dvzxtma*****\\",\\n    \\"resType\\": \\"fileBeat\\",\\n    \\"resVersion\\": \\"6.8.5_with_community\\",\\n    \\"gmtCreatedTime\\": \\"2020-06-20T07:26:47.000+0000\\",\\n    \\"status\\": \\"active\\",\\n    \\"name\\": \\"ct-cn-4135is2tj194p****\\",\\n    \\"configs\\": [\\n      {\\n        \\"content\\": \\"fileBeat.inputs:xxx\\",\\n        \\"fileName\\": \\"filebeat.yml\\"\\n      }\\n    ],\\n    \\"extendConfigs\\": [\\n      {\\n        \\"successPodsCount\\": \\"8\\",\\n        \\"protocol\\": \\"HTTP\\",\\n        \\"userName\\": \\"elastic\\",\\n        \\"totalPodsCount\\": \\"10\\",\\n        \\"type\\": \\"ECSInstanceId\\",\\n        \\"kibanaHost\\": \\"https://es-cn-nif1z89fz003i****.kibana.elasticsearch.aliyuncs.com:5601\\",\\n        \\"enableMonitoring\\": true,\\n        \\"configType\\": \\"collectorDeployMachine\\",\\n        \\"instanceType\\": \\"elasticsearch\\",\\n        \\"groupId\\": \\"default_ct-cn-5i2l75bz4776****\\",\\n        \\"host\\": \\"es-cn-n6w1o1x0w001c****-kibana.internal.elasticsearch.aliyuncs.com:5601\\",\\n        \\"instanceId\\": \\"es-cn-n6w1o1****\\",\\n        \\"machines\\": [\\n          {\\n            \\"agentStatus\\": \\"heartOk\\",\\n            \\"instanceId\\": \\"i-bp1gyhphjaj73jsr****\\"\\n          }\\n        ],\\n        \\"hosts\\": [\\n          \\"[\\\\\\"es-cn-n6w1o1x*****.elasticsearch.aliyuncs.com:9200\\\\\\"]\\"\\n        ]\\n      }\\n    ],\\n    \\"collectorPaths\\": [\\n      \\"[\\\\\\"/var/log\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取采集器实例信息',
      'summary' => '获取采集器实例的详细信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' **extendConfigs**中包括3种configType，分别为collectorTargetInstance、collectorElasticsearchForKibana、collectorDeployMachine，部署机器不同，返回的参数不同，具体组合方式如下：
- collectorTargetInstance
    - ECS
      configType、instanceId、instanceType、hosts、userName、password、protocol、enableMonitoring
    - ACK
      configType、instanceId、instanceType、userName、password、protocol、enableMonitoring

- collectorElasticsearchForKibana
    - ECS
      configType、instanceId、host、kibanaHost、userName、password、protocol
    - ACK
      configType
   
- collectorDeployMachine
    - ECS
      configType、type、machines、groupId
    - ACK
      configType、type、instanceId、totalPodsCount、successPodsCount',
      'extraInfo' => ' ',
    ),
    'ListDefaultCollectorConfigurations' => 
    array (
      'path' => '/openapi/beats/default-configurations',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'resType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '采集器类型。可选值：

- fileBeat
- metricBeat
- heartBeat
- auditBeat',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fileBeat',
          ),
        ),
        1 => 
        array (
          'name' => 'resVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '采集器版本。采集器部署的机器类型不同，可选的版本也不同，具体说明如下：

- ECS：6.8.5_with_community
- ACK：6.8.13_with_community',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '6.8.5_with_community',
          ),
        ),
        2 => 
        array (
          'name' => 'sourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定采集器部署机器的类型，不填则返回全部。可选值：

- ECS：ECS服务器
- ACK：容器Kubernetes集群',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8BAE3C32-8E4A-47D6-B4B0-95B5DE643BF5',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'content' => 
                    array (
                      'description' => '配置文件内容。',
                      'type' => 'string',
                      'example' => '- key: log\\n  title: Log file content\\n  description: >\\n    Contains log file lines.\\n  fields:\\n ......',
                    ),
                    'fileName' => 
                    array (
                      'description' => '配置文件名称。',
                      'type' => 'string',
                      'example' => 'fields.yml',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8BAE3C32-8E4A-47D6-B4B0-95B5DE643BF5\\",\\n  \\"Result\\": [\\n    {\\n      \\"content\\": \\"- key: log\\\\\\\\n  title: Log file content\\\\\\\\n  description: >\\\\\\\\n    Contains log file lines.\\\\\\\\n  fields:\\\\\\\\n ......\\",\\n      \\"fileName\\": \\"fields.yml\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取默认收集器配置列表',
      'summary' => '调用ListDefaultCollectorConfigurations，获取采集器的默认配置文件。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListCollectors' => 
    array (
      'path' => '/openapi/collectors',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'resId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '采集器ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'ct-cn-77uqof2s7rg5c****',
          ),
        ),
        1 => 
        array (
          'name' => 'name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '采集器名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'collectorName1',
          ),
        ),
        2 => 
        array (
          'name' => 'instanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '采集器关联的实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'es-cn-nif1q8auz0003****',
          ),
        ),
        3 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果的分页数。默认值：1，最小值：1，最大值：200。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页的结果数。默认值：20，最小值：1，最大值：500。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'sourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定采集器部署机器的类型，不填返回全部类型。可选值：

- ECS：ECS实例

- ACK：容器Kubernetes集群',
            'type' => 'string',
            'required' => false,
            'example' => 'ECS',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '返回的记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'resId' => 
                    array (
                      'description' => '采集器实例ID。',
                      'type' => 'string',
                      'example' => 'ct-cn-0v3xj86085dvq****',
                    ),
                    'gmtUpdateTime' => 
                    array (
                      'description' => '采集器更新时间。',
                      'type' => 'string',
                      'example' => '2020-08-18T09:40:43.000+0000',
                    ),
                    'dryRun' => 
                    array (
                      'description' => '是否校验并创建采集器。支持：

- true：只校验不创建
- false：校验并创建',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'ownerId' => 
                    array (
                      'description' => '账号ID。',
                      'type' => 'string',
                      'example' => '168520994880****',
                    ),
                    'vpcId' => 
                    array (
                      'description' => '采集器所在的专有网络ID。',
                      'type' => 'string',
                      'example' => 'vpc-bp16k1dvzxtma*****',
                    ),
                    'resType' => 
                    array (
                      'description' => '采集器类型。支持fileBeat、metricBeat、heartBeat和auditBeat。',
                      'type' => 'string',
                      'example' => 'fileBeat',
                    ),
                    'resVersion' => 
                    array (
                      'description' => '采集器版本。',
                      'type' => 'string',
                      'example' => '6.8.5_with_community',
                    ),
                    'gmtCreatedTime' => 
                    array (
                      'description' => '采集器创建时间。',
                      'type' => 'string',
                      'example' => '2020-08-18T02:06:12.000+0000',
                    ),
                    'status' => 
                    array (
                      'description' => '采集器状态。支持：

- activing：生效中

- active：已生效',
                      'type' => 'string',
                      'example' => 'active',
                    ),
                    'name' => 
                    array (
                      'description' => '采集器名称。',
                      'type' => 'string',
                      'example' => 'FileBeat001',
                    ),
                    'configs' => 
                    array (
                      'description' => '采集器的配置文件信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'content' => 
                          array (
                            'description' => '文件内容。',
                            'type' => 'string',
                            'example' => '- key: log\\n title: Log file content\\n description: >\\n Contains log file lines.\\n ....',
                          ),
                          'fileName' => 
                          array (
                            'description' => '文件名称。',
                            'type' => 'string',
                            'example' => 'fields.yml',
                          ),
                        ),
                      ),
                    ),
                    'extendConfigs' => 
                    array (
                      'description' => '扩展参数信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'successPodsCount' => 
                          array (
                            'description' => 'ACK集群所有成功采集的Pod节点数。当**configType**为**collectorDeployMachines**，且**type**为**ACKCluster**时显示。',
                            'type' => 'string',
                            'example' => '8',
                          ),
                          'protocol' => 
                          array (
                            'description' => '传输协议，需要与采集器Output指定实例的访问协议保持一致。支持HTTP、HTTPS。当**configType**为**collectorTargetInstance**时显示。
',
                            'type' => 'string',
                            'example' => 'HTTP',
                          ),
                          'userName' => 
                          array (
                            'description' => '采集器Output指定实例的访问用户名，默认为elastic。当**configType**为**collectorTargetInstance**或**collectorElasticsearchForKibana**时显示。
',
                            'type' => 'string',
                            'example' => 'elastic',
                          ),
                          'totalPodsCount' => 
                          array (
                            'description' => 'ACK集群所有采集的Pod节点数。当**configType**为**collectorDeployMachines**，且**type**为**ACKCluster**时显示。',
                            'type' => 'string',
                            'example' => '10',
                          ),
                          'type' => 
                          array (
                            'description' => '采集器部署的机器类型，当**configType**为**collectorDeployMachine**时显示。支持：

- ECSInstanceId：ECS

- ACKCluster：容器Kubernetes',
                            'type' => 'string',
                            'example' => 'ECSInstanceId',
                          ),
                          'kibanaHost' => 
                          array (
                            'description' => '启用Kibana Dashboard后，Kibana的公网访问地址。当**configType**为**collectorElasticsearchForKibana**时显示。',
                            'type' => 'string',
                            'example' => 'https://es-cn-nif1z89fz003i****.kibana.elasticsearch.aliyuncs.com:5601',
                          ),
                          'enableMonitoring' => 
                          array (
                            'description' => '是否启用Monitoring，当**configType**为**collectorTargetInstance**，且**instanceType**为**elasticsearch**时显示。支持：

- true：启用

- false：不启用',
                            'type' => 'boolean',
                            'example' => 'true',
                          ),
                          'configType' => 
                          array (
                            'description' => '配置类型。支持：

- collectorTargetInstance：采集器Output
- collectorDeployMachine：采集器的部署机器
- collectorElasticsearchForKibana：支持Kibana仪表盘的Elasticsearch实例信息
',
                            'type' => 'string',
                            'example' => 'collectorDeployMachine',
                          ),
                          'instanceType' => 
                          array (
                            'description' => '采集器Output指定的实例类型。支持elasticsearch、logstash。当**configType**为**collectorTargetInstance**时显示。

',
                            'type' => 'string',
                            'example' => 'elasticsearch',
                          ),
                          'groupId' => 
                          array (
                            'description' => '机器组ID。当**configType**为**collectorDeployMachine**时显示。',
                            'type' => 'string',
                            'example' => 'default_ct-cn-5i2l75bz4776****',
                          ),
                          'host' => 
                          array (
                            'description' => '启用Kibana Dashboard后，Kibana的私网访问地址。当**configType**为**collectorElasticsearchForKibana**时显示。',
                            'type' => 'string',
                            'example' => 'es-cn-n6w1o1x0w001c****-kibana.internal.elasticsearch.aliyuncs.com:5601',
                          ),
                          'instanceId' => 
                          array (
                            'description' => '采集器关联的实例ID。当**configType**为**collectorTargetInstance**时，为采集器Output的实例ID；当**configType**为**collectorDeployMachines**，且**type**为**ACKCluster**时，为ACK（容器Kubernetes）集群ID。

',
                            'type' => 'string',
                            'example' => 'es-cn-nif1z89fz003i****',
                          ),
                          'machines' => 
                          array (
                            'description' => '采集器所部署的ECS机器列表信息。当**configType**为**collectorDeployMachines**，且**type**为**ECSInstanceId**时显示。
',
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'agentStatus' => 
                                array (
                                  'description' => 'ECS上各采集器的状态。支持：

- heartOk：心跳正常
- heartLost：心跳异常
- uninstalled：未安装
- failed：安装失败
',
                                  'type' => 'string',
                                  'example' => 'heartOk',
                                ),
                                'instanceId' => 
                                array (
                                  'description' => 'ECS机器ID列表。
',
                                  'type' => 'string',
                                  'example' => 'i-bp13y63575oypr9d****',
                                ),
                              ),
                            ),
                          ),
                          'hosts' => 
                          array (
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '采集器Output指定实例的访问地址列表。当**configType**为**collectorTargetInstance**时显示。',
                              'type' => 'string',
                              'example' => '["es-cn-n6w1o1x*****.elasticsearch.aliyuncs.com:9200"]',
                            ),
                          ),
                        ),
                      ),
                    ),
                    'collectorPaths' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'Filebeat的采集路径。',
                        'type' => 'string',
                        'example' => '["/var/log"]',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 5\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"resId\\": \\"ct-cn-0v3xj86085dvq****\\",\\n      \\"gmtUpdateTime\\": \\"2020-08-18T09:40:43.000+0000\\",\\n      \\"dryRun\\": false,\\n      \\"ownerId\\": \\"168520994880****\\",\\n      \\"vpcId\\": \\"vpc-bp16k1dvzxtma*****\\",\\n      \\"resType\\": \\"fileBeat\\",\\n      \\"resVersion\\": \\"6.8.5_with_community\\",\\n      \\"gmtCreatedTime\\": \\"2020-08-18T02:06:12.000+0000\\",\\n      \\"status\\": \\"active\\",\\n      \\"name\\": \\"FileBeat001\\",\\n      \\"configs\\": [\\n        {\\n          \\"content\\": \\"- key: log\\\\\\\\n title: Log file content\\\\\\\\n description: >\\\\\\\\n Contains log file lines.\\\\\\\\n ....\\",\\n          \\"fileName\\": \\"fields.yml\\"\\n        }\\n      ],\\n      \\"extendConfigs\\": [\\n        {\\n          \\"successPodsCount\\": \\"8\\",\\n          \\"protocol\\": \\"HTTP\\",\\n          \\"userName\\": \\"elastic\\",\\n          \\"totalPodsCount\\": \\"10\\",\\n          \\"type\\": \\"ECSInstanceId\\",\\n          \\"kibanaHost\\": \\"https://es-cn-nif1z89fz003i****.kibana.elasticsearch.aliyuncs.com:5601\\",\\n          \\"enableMonitoring\\": true,\\n          \\"configType\\": \\"collectorDeployMachine\\",\\n          \\"instanceType\\": \\"elasticsearch\\",\\n          \\"groupId\\": \\"default_ct-cn-5i2l75bz4776****\\",\\n          \\"host\\": \\"es-cn-n6w1o1x0w001c****-kibana.internal.elasticsearch.aliyuncs.com:5601\\",\\n          \\"instanceId\\": \\"es-cn-nif1z89fz003i****\\",\\n          \\"machines\\": [\\n            {\\n              \\"agentStatus\\": \\"heartOk\\",\\n              \\"instanceId\\": \\"i-bp13y63575oypr9d****\\"\\n            }\\n          ],\\n          \\"hosts\\": [\\n            \\"[\\\\\\"es-cn-n6w1o1x*****.elasticsearch.aliyuncs.com:9200\\\\\\"]\\"\\n          ]\\n        }\\n      ],\\n      \\"collectorPaths\\": [\\n        \\"[\\\\\\"/var/log\\\\\\"]\\"\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '采集器列表信息',
      'summary' => '获取采集器列表信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' **extendConfigs**中包括3种configType，分别为collectorTargetInstance、collectorElasticsearchForKibana、collectorDeployMachine，部署机器不同，返回的参数不同，具体组合方式如下：
- collectorTargetInstance
    - ECS
      configType、instanceId、instanceType、hosts、userName、password、protocol、enableMonitoring
    - ACK
      configType、instanceId、instanceType、userName、password、protocol、enableMonitoring

- collectorElasticsearchForKibana
    - ECS
      configType、instanceId、host、kibanaHost、userName、password、protocol
    - ACK
      configType
   
- collectorDeployMachine
    - ECS
      configType、type、machines、groupId
    - ACK
      configType、type、instanceId、totalPodsCount、successPodsCount',
      'extraInfo' => ' ',
    ),
    'ListNodes' => 
    array (
      'path' => '/openapi/collectors/{ResId}/nodes',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果的分页数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页的结果数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ecsInstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS实例ID列表。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-bp1ei8ysh7orb6eq****',
          ),
        ),
        3 => 
        array (
          'name' => 'ecsInstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'tags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS实例的标签信息。必须包含标签键（tagKey）和标签值（tagValue）。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"tagKey":"abc","tagValue":"xyz"}]',
          ),
        ),
        5 => 
        array (
          'name' => 'ResId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '采集器ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ct-cn-l871nd0u73c45****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E1FD7642-7C40-4FF2-9C0F-21F1A1746F70',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '返回记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'cloudAssistantStatus' => 
                    array (
                      'description' => '是否已开通云助手。支持：

- true：开通
- false：未开通',
                      'type' => 'string',
                      'example' => 'true',
                    ),
                    'ecsInstanceName' => 
                    array (
                      'description' => 'ECS实例名称。',
                      'type' => 'string',
                      'example' => 'ECS_beat',
                    ),
                    'ecsInstanceId' => 
                    array (
                      'description' => 'ECS实例ID。',
                      'type' => 'string',
                      'example' => 'i-bp13y63575oypr****',
                    ),
                    'osType' => 
                    array (
                      'description' => 'ECS实例的操作系统类型。支持：

- windows：Windows Server
- linux：Linux',
                      'type' => 'string',
                      'example' => 'linux',
                    ),
                    'status' => 
                    array (
                      'description' => 'ECS实例状态。支持：

- running：运行中
- starting：启动中
- stopping：停止中
- stopped：已停止',
                      'type' => 'string',
                      'example' => 'running',
                    ),
                    'agentStatus' => 
                    array (
                      'description' => 'ECS上各采集器的状态。支持：

- heartOk：心跳正常
- heartLost：心跳异常
- uninstalled：未安装
- failed：安装失败',
                      'type' => 'string',
                      'example' => 'heartOk',
                    ),
                    'tags' => 
                    array (
                      'description' => 'ECS实例的标签信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'tagKey' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'abc',
                          ),
                          'tagValue' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'xyz',
                          ),
                        ),
                      ),
                    ),
                    'ipAddress' => 
                    array (
                      'description' => 'ECS实例的IP信息列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'ipType' => 
                          array (
                            'description' => 'IP地址类型。支持：

- public：公网IP地址
- private：私网IP地址',
                            'type' => 'string',
                            'example' => 'public',
                          ),
                          'host' => 
                          array (
                            'description' => 'IP地址。',
                            'type' => 'string',
                            'example' => '192.168.xx.xx',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E1FD7642-7C40-4FF2-9C0F-21F1A1746F70\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 10\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"cloudAssistantStatus\\": \\"true\\",\\n      \\"ecsInstanceName\\": \\"ECS_beat\\",\\n      \\"ecsInstanceId\\": \\"i-bp13y63575oypr****\\",\\n      \\"osType\\": \\"linux\\",\\n      \\"status\\": \\"running\\",\\n      \\"agentStatus\\": \\"heartOk\\",\\n      \\"tags\\": [\\n        {\\n          \\"tagKey\\": \\"abc\\",\\n          \\"tagValue\\": \\"xyz\\"\\n        }\\n      ],\\n      \\"ipAddress\\": [\\n        {\\n          \\"ipType\\": \\"public\\",\\n          \\"host\\": \\"192.168.xx.xx\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查询搜索采集器下机器状态',
      'summary' => '智能运维的历史报告列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RestartCollector' => 
    array (
      'summary' => '重启采集器，进行数据采集工作。',
      'path' => '/openapi/collectors/{ResId}/actions/restart',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '采集器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ct-cn-77uqof2s7rg5c****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果，支持：

- true：重启成功
- false：重启失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '84B4038A-AF38-4BF4-9FAD-EA92A4FFF00A',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"84B4038A-AF38-4BF4-9FAD-EA92A4FFF00A\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '重启采集器',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ReinstallCollector' => 
    array (
      'summary' => '重试安装在创建时没有安装成功的采集器。',
      'path' => '/openapi/collectors/{ResId}/actions/reinstall',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '采集器ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ct-cn-l871nd0u73c45****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'description' => '请求体参数，详情请参见下文的RequestBody章节。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '{
  "restartType": "nodeEcsId",
  "nodes":["i-bp1gyhphjaj73jsr****","i-bp10piq1mkfnyw9t****"]
}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '请求结果：

- true：安装成功
- false：安装失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '重试采集器的安装',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定重试安装采集器的机器信息。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| nodes| List<String\\> | 是 | ["ecs-cn-abc"] |待重试安装采集器的ECS实例ID。|
| restartType| String | 是 | nodeEcsId |重试安装采集器的类型，目前仅支持nodeEcsId，表示ECS实例。|

示例如下。

```
{
  "restartType": "nodeEcsId",
  "nodes":["i-bp1gyhphjaj73jsr****","i-bp10piq1mkfnyw9t****"]
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateInstance' => 
    array (
      'summary' => 'Elasticsearch集群升配，增加节点数，角色，规格，磁盘配置。',
      'path' => '/openapi/instances/{InstanceId}',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1ptcb30009****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'orderActionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置变更类型，可选值：

- upgrade（默认）：升配
- downgrade：降配',
            'type' => 'string',
            'required' => false,
            'example' => 'upgrade',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体参数。',
            'type' => 'object',
            'properties' => 
            array (
              'nodeAmount' => 
              array (
                'description' => '节点数量。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'example' => '3',
              ),
              'nodeSpec' => 
              array (
                'description' => '数据节点配置。',
                'required' => false,
                '$ref' => '#/components/schemas/NodeSpec',
              ),
              'masterConfiguration' => 
              array (
                'description' => '专有主节点配置。',
                'required' => false,
                '$ref' => '#/components/schemas/MasterNodeConfiguration',
              ),
              'clientNodeConfiguration' => 
              array (
                'description' => '协调节点配置。',
                'required' => false,
                '$ref' => '#/components/schemas/ClientNodeConfiguration',
              ),
              'warmNodeConfiguration' => 
              array (
                'description' => '冷数据节点配置。',
                'required' => false,
                '$ref' => '#/components/schemas/WarmNodeConfiguration',
              ),
              'kibanaConfiguration' => 
              array (
                'description' => 'kibana节点配置。',
                'required' => false,
                '$ref' => '#/components/schemas/KibanaNodeConfiguration',
              ),
              'elasticDataNodeConfiguration' => 
              array (
                'description' => '弹性节点配置。',
                'required' => false,
                '$ref' => '#/components/schemas/ElasticDataNodeConfiguration',
              ),
              'instanceCategory' => 
              array (
                'description' => '版本类型。可选值：

- x-pack：商业版实例
- advanced：增强版实例
- IS：开启Indexing Service的增强版实例
- community：基础版实例
> 创建增强版开启OpenStore的实例需要同时开启Indexing Service。
',
                'type' => 'string',
                'required' => false,
                'example' => 'advanced',
              ),
            ),
            'required' => false,
            'example' => '{   "nodeSpec": {     "spec": "elasticsearch.r5.xlarge"   } }',
          ),
        ),
        4 => 
        array (
          'name' => 'force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制重启：

- true：是
- false（默认）：否',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'nodeAmount' => 
                  array (
                    'description' => '数据节点的数量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'createdAt' => 
                  array (
                    'description' => '实例创建时间。',
                    'type' => 'string',
                    'example' => '2018-07-13T03:58:07.253Z',
                  ),
                  'status' => 
                  array (
                    'description' => '实例的状态。支持：

- active：正常
- activating：生效中
- inactive：冻结
- invalid：失效',
                    'type' => 'string',
                    'example' => 'active',
                  ),
                  'paymentType' => 
                  array (
                    'description' => '实例的付费方式。支持：

- prepaid：包年包月
- postpaid：按量付费',
                    'type' => 'string',
                    'example' => 'postpaid',
                  ),
                  'domain' => 
                  array (
                    'description' => '实例的私网访问域名。',
                    'type' => 'string',
                    'example' => 'es-cn-abc.elasticsearch.aliyuncs.com',
                  ),
                  'description' => 
                  array (
                    'description' => '实例名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'esVersion' => 
                  array (
                    'description' => '实例版本。',
                    'type' => 'string',
                    'example' => '5.5.3_with_X-Pack',
                  ),
                  'instanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'es-cn-abc',
                  ),
                  'nodeSpec' => 
                  array (
                    'description' => '数据节点配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'description' => '节点规格。',
                        'type' => 'string',
                        'example' => 'elasticsearch.sn2ne.xlarge',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点存储空间大小，单位：GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '40',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点存储类型。支持：

- cloud_ssd：SSD云盘
- cloud_efficiency：高效云盘',
                        'type' => 'string',
                        'example' => 'cloud_ssd',
                      ),
                    ),
                  ),
                  'kibanaConfiguration' => 
                  array (
                    'description' => 'Kibana节点配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'description' => '节点规格。',
                        'type' => 'string',
                        'example' => 'elasticsearch.n4.small',
                      ),
                      'amount' => 
                      array (
                        'description' => '节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点存储空间大小。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '20',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点存储类型（可忽略该参数）。',
                        'type' => 'string',
                        'example' => 'cloud_ssd',
                      ),
                    ),
                  ),
                  'masterConfiguration' => 
                  array (
                    'description' => 'Master节点配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'description' => '节点规格。',
                        'type' => 'string',
                        'example' => 'elasticsearch.sn2ne.large',
                      ),
                      'amount' => 
                      array (
                        'description' => '节点数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点的存储空间大小，单位：GB。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '20',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点的存储类型。只支持cloud_ssd（SSD云盘）。
',
                        'type' => 'string',
                        'example' => 'cloud_ssd',
                      ),
                    ),
                  ),
                ),
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": {\\n    \\"nodeAmount\\": 2,\\n    \\"createdAt\\": \\"2018-07-13T03:58:07.253Z\\",\\n    \\"status\\": \\"active\\",\\n    \\"paymentType\\": \\"postpaid\\",\\n    \\"domain\\": \\"es-cn-abc.elasticsearch.aliyuncs.com\\",\\n    \\"description\\": \\"test\\",\\n    \\"esVersion\\": \\"5.5.3_with_X-Pack\\",\\n    \\"instanceId\\": \\"es-cn-abc\\",\\n    \\"nodeSpec\\": {\\n      \\"spec\\": \\"elasticsearch.sn2ne.xlarge\\",\\n      \\"disk\\": 40,\\n      \\"diskType\\": \\"cloud_ssd\\"\\n    },\\n    \\"kibanaConfiguration\\": {\\n      \\"spec\\": \\"elasticsearch.n4.small\\",\\n      \\"amount\\": 1,\\n      \\"disk\\": 20,\\n      \\"diskType\\": \\"cloud_ssd\\"\\n    },\\n    \\"masterConfiguration\\": {\\n      \\"spec\\": \\"elasticsearch.sn2ne.large\\",\\n      \\"amount\\": 3,\\n      \\"disk\\": 20,\\n      \\"diskType\\": \\"cloud_ssd\\"\\n    }\\n  },\\n  \\"Code\\": \\"\\",\\n  \\"Message\\": \\"\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '集群升配',
      'description' => '调用该接口时，请注意：

- 当实例状态为生效中（activating）、失效（invalid）和冻结（inactive）时，无法变更配置。
- 如果集群负载过高且索引没有副本，同时在升配或者降配过程中存在大量的写入或查询等情况，业务可能会出现偶发的访问超时现象。建议在集群变更前，在客户端访问机制中配置重试机制，以减小对业务的影响。
- 每次只能变更一种类型的节点（数据节点、专有主节点、冷数据节点、协调节点、Kibana节点、弹性节点）的配置。
- 出于您的集群健康和稳定性的考虑，自2021年5月起，阿里云Elasticsearch已不支持购买1核2 GB规格、专有主节点的2核2 GB规格和7.4版本实例，如果您已确认已购规格不再支持售卖，那么您需要先完成以下操作：
  - 对于1核2 GB和2核2 GB规格，建议提前升配至购买页开放的稳定的售卖规格。购买页开放的售卖规格请参见<props="china"><ph>[购买页面参数（商业版）](~~97672~~)或者[购买页面参数（增强版）](~~143091~~)</ph></props><props="intl">[购买页面参数](~~163243~~)</props>。
  - 对于7.4版本，建议您重新选购7.10版本实例，然后再进行数据迁移。<props="china"><ph>数据迁移请参见[迁移方案选取指南](~~96650~~)。</ph></props>

更多注意事项，请参见[升配集群](~~96650~~)和[降配集群](~~198887~~)。
',
      'requestParamsDescription' => '
Elasticsearch支持的节点规格列表，请参见[阿里云Elasticsearch定价信息](https://www.aliyun.com/price/product?spm=a2c4g.11186623.2.10.653c6c88NcQPZY#/elasticsearch/detail)、[产品规格](~~271718~~)。


请求体参数示例如下：
**升配**

  > 升配时，不支持降低存储空间数值、存储类型配置、节点数量、规格的CPU核数或内存值。


- 升配存储空间
  目前仅支持数据节点、冷数据节点和弹性数据节点升配存储空间。

   将冷数据节点的存储空间升配至1000 GiB。
```
{
  "warmNodeConfiguration": {
   "disk": 1000
  }
}
```

- 升配存储类型
  目前仅支持数据节点、弹性数据节点和专有主节点升配存储类型。

   - 将专有主节点的存储类型升配为ESSD云盘类型。
```
{
  "masterConfiguration": {
    "diskType": "cloud_essd"
  }
}
```

   - 当专有主节点的存储类型为ESSD云盘类型时，将节点存储性能级别升配为PL3。
     指定**performanceLevel**后，**diskType**会默认填充为**cloud_essd**。
     指定**cloud_essd**后，**performanceLevel**默认为**PL1**。

	```
	{
	  "masterConfiguration": {
		"performanceLevel": "PL3"
	  }
	}
	```

- 升配节点数量
  目前仅支持数据节点、冷数据节点、弹性数据节点和协调节点升配节点数量。
  数据节点升配节点数量的方式与其他节点不同，具体参见下文示例。

   - 将数据节点的节点数量升至12个。
```
{
  "nodeAmount": 12
}
```

   - 将其他类型节点（以冷数据节点为例）的节点数量升至12个。
```
{
  "warmNodeConfiguration": {
    "amount": 12
  }
}
```

- 升配节点规格
将数据节点的规格升至4核32 GB。
```
{
  "nodeSpec": {
    "spec": "elasticsearch.r5.xlarge"
  }
}
```
- 同时升配同一节点的几种配置
  同时升配同一节点的几种配置，需要您同时写入升配资源RequestBody。

   - 将协调节点的节点数量升至8，规格升至4核8 GB。
```
{
  "clientNodeConfiguration": {
    "amount": 8,
    "spec": "elasticsearch.sn1ne.xlarge"
  }
}
```
   - 将数据节点的节点数量升至12，存储类型升至ESSD云盘。
```
{
  "nodeAmount": 12,
  "nodeSpec": {
    "diskType": "cloud_essd"
  }
}
```
- 启用节点
  您可以参见[createInstance](~~148782~~)接口设置完整的节点资源配置。

   - 启用协调节点，同时设置协调节点配置。
```
{
  "clientNodeConfiguration": {
    "amount": 5,
    "disk": 20,
    "spec": "elasticsearch.sn1ne.xlarge"
  }
}
```

   - 启用弹性数据节点，同时设置弹性数据节点配置（此配置只适用于中国站）。
```
{
  "elasticNodeConfiguration": {
    "disk": 200,
    "amount": 5,
    "diskType": "cloud_essd",
    "spec": "elasticsearch.sn1ne.xlarge"
  }
}
```

   - 启用冷数据节点，同时设置冷数据节点配置。
```
{
  "warmNodeConfiguration": {
    "disk": 1000,
    "amount": 3,
    "spec": "elasticsearch.sn1ne.xlarge"
  }
}
```
- 升配开启OpenStore（此配置只适用于中国站）
  已启用冷数据节点的实例以及数据节点存储类型为ESSD云盘的实例，目前不支持升配开启OpenStore。
  如果实例类型为普通商业版，升配开启OpenStore后，实例类型同时由普通商业版升配至开启Indexing Service的日志增强版。

   - 冷数据节点打开OpenStore。
```
{
  "warmNodeConfiguration": {
    "amount": 5,
    "spec": "openstore.i2g.4xlarge"
  }
}
```

   - 数据节点规格转换为OpenStore。
```
{
  "nodeAmount": 6,
  "nodeSpec": {
    "spec": "openstore.i2g.4xlarge",
    "diskType": "cloud_ssd",
    "disk": 100
  }
}
```

- 指定变更方式
   - 变更方式默认为智能变更，将其指定为蓝绿变更（blue_green）或原地变更（normal）。
```
{
  "nodeSpec": {
    "spec": "elasticsearch.r5.xlarge"
  },
  "updateType": "blue_green"  ## 原地变更为normal。
}
```
   - 开启强制变更。
```
{
  "nodeSpec": {
    "spec": "elasticsearch.r5.xlarge"
  },
  "force": true
}
```
- 使用dryRun接口进行升配预校验
在RequestBody中添加dryRun字段。
```
{
  "nodeSpec": {
    "spec": "elasticsearch.r5.xlarge"
  },
  "dryRun": true
}
```


**降配**
   > 降配时，不支持升级存储空间数值、存储类型、节点数量、规格的CPU核数或内存值。<br>UpdateInstance接口无法降低节点数量，如有需求请使用[ShrinkNode](~~144668~~)接口。<br>不支持降配节点存储空间大小，启用的节点不支持关闭。<br>不支持选择强制变更，不支持指定变更类型，默认使用智能变更。<br>降配时，**orderActionType**参数需要设置为**Downgrade**。<br>您可以同时降配多个资源配置，也可以进行dryRun预校验。

- 降配存储类型
  降配时，不支持变更冷数据节点（不变更实例类型）、协调节点、Kibana节点的存储类型。

 将专有主节点的存储类型变更为SSD云盘。
```
{
  "masterConfiguration": {
    "diskType": "cloud_ssd"
  }
}
```
- 降配规格
将数据节点的规格降配至4核32 GB。
```
{
  "nodeSpec": {
    "spec": "elasticsearch.r5.xlarge"
  }
}
```',
      'extraInfo' => ' ',
    ),
    'GetSuggestShrinkableNodes' => 
    array (
      'summary' => '指定节点类型和数量，获取可缩容的节点。',
      'path' => '/openapi/instances/{InstanceId}/suggest-shrinkable-nodes',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        1 => 
        array (
          'name' => 'nodeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要缩容的节点类型。**WORKER**表示热节点，**WORKER_WARM**表示冷节点。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'WORKER',
          ),
        ),
        2 => 
        array (
          'name' => 'count',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '期望获取可缩容节点的数量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'ignoreStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否忽略实例状态，默认为false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'port' => 
                    array (
                      'description' => '节点的访问端口号。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '9200',
                    ),
                    'host' => 
                    array (
                      'description' => '节点的IP地址。',
                      'type' => 'string',
                      'example' => '192.168.**.**',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\",\\n  \\"Result\\": [\\n    {\\n      \\"port\\": 9200,\\n      \\"host\\": \\"192.168.**.**\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取可缩容节点',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' Result中还包含以下参数。
|  名称   | 类型  | 示例值  | 描述  |
|  ----  | ----  |----  |----  |
| nodeType  | String | WORKER  | 节点类型，取值包括：MASTER（专有主节点）、WORKER（热节点）、WORKER_WARM（冷节点）、COORDINATING（协调节点）、KIBANA（Kibana节点）。  |
| zoneId  | String | cn-hangzhou-b  | 节点所在的可用区ID。|',
      'extraInfo' => ' ',
    ),
    'ValidateShrinkNodes' => 
    array (
      'summary' => '校验指定实例中的某些节点是否可以缩容。',
      'path' => '/openapi/instances/{InstanceId}/validate-shrink-nodes',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        1 => 
        array (
          'name' => 'nodeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要缩容的节点类型，可选值：

- WORKER：热节点
- WORKER_WARM：冷节点',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'WORKER',
          ),
        ),
        2 => 
        array (
          'name' => 'ignoreStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否忽略集群健康状态：

- true：忽略
- false（默认）：不忽略',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'count',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点数量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        4 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '请求对象。',
              'type' => 'object',
              'properties' => 
              array (
                'nodeType' => 
                array (
                  'description' => '节点类型，可选值：

- WORKER：热节点
- WORKER_WARM：冷节点',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'WORKER',
                ),
                'host' => 
                array (
                  'description' => '节点的IP地址。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.xx.xx',
                ),
                'port' => 
                array (
                  'description' => '节点的访问端口号。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '9200',
                ),
                'zoneId' => 
                array (
                  'description' => '实例节点所在的可用区ID。例如，上海可用区C为cn-shanghai-c。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cn-shanghai-c',
                ),
                'hostName' => 
                array (
                  'description' => '云原生ACK架构集群的节点名称，可调用[ListAllNode](~~183958~~)接口获取。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'es-cn-pl32xxxxxxx-data-f-1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果对象。',
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：可以缩容
- false：不可以缩容',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '校验缩节点',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ShrinkNode' => 
    array (
      'summary' => '指定Elasticsearch节点角色进行缩节点操作。',
      'path' => '/openapi/instances/{InstanceId}/actions/shrink',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        1 => 
        array (
          'name' => 'nodeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要缩容的节点类型，可选值：

- WORKER：热节点
- WORKER_WARM：冷节点',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'WORKER',
          ),
        ),
        2 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        3 => 
        array (
          'name' => 'ignoreStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否忽略集群健康状态：

- true：忽略
- false：不忽略',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'count',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '缩节点数量。
><notice> 此参数仅适用于ACK架构实例，且不支持填写body中的host参数。
></notice>',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        5 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '请求对象。',
              'type' => 'object',
              'properties' => 
              array (
                'host' => 
                array (
                  'description' => '节点的IP地址。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.xx.xx',
                ),
                'zoneId' => 
                array (
                  'description' => '实例节点所在的可用区ID。例如，上海可用区C为cn-shanghai-c。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cn-shanghai-c',
                ),
                'nodeType' => 
                array (
                  'description' => '需要缩容的节点类型，可选值：

- WORKER：热节点
- WORKER_WARM：冷节点',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'WORKER',
                ),
                'port' => 
                array (
                  'description' => '节点的访问端口号。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '9200',
                ),
                'hostName' => 
                array (
                  'description' => '云原生ACK架构集群的节点名称，可调用[ListAllNode](~~183958~~)接口获取。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'es-cn-pl32xxxxxxx-data-f-1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果对象。',
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：缩容成功
- false：缩容失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '集群缩节点',
      'description' => '调用该接口时请注意：<br>
在进行集群数据节点缩容前，需要先将待缩容节点中的数据迁移到其他节点，保证待缩容节点中无数据后，再进行集群节点缩容操作。
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpgradeEngineVersion' => 
    array (
      'summary' => '升级Elasticsearch实例版本，支持版本升级和内核版本升级。',
      'path' => '/openapi/instances/{InstanceId}/actions/upgrade-version',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'dryRun',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否进行升级前校验。true表示校验，false表示不校验。
注意：版本升级校验涉及集群YML、插件配置、集群状态、索引、资源等检查，强烈建议升级前进行前置校验，否则可能带来升级问题。',
            'description' => '是否进行升级前校验：

- true：校验
- false（默认）：不校验

><warning> 版本升级校验涉及集群YML、插件配置、集群状态、索引、资源等检查，强烈建议升级前进行前置校验，否则可能带来升级问题。
></warning>',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体。',
            'type' => 'object',
            'properties' => 
            array (
              'version' => 
              array (
                'title' => '升级后的版本',
                'description' => '升级后的版本。当type为engineVersion时，取值为实例版本，例如6.7；当type为aliVersion时，取值为内核版本，例如ali1.2.0。',
                'type' => 'string',
                'required' => false,
                'example' => '6.7',
              ),
              'type' => 
              array (
                'title' => '升级类型。',
                'description' => '升级类型，可选值：

- engineVersion（默认）：大版本升级
- aliVersion：内核版本升级',
                'type' => 'string',
                'required' => false,
                'example' => 'engineVersion',
                'enum' => 
                array (
                  0 => 'engineVersion',
                  1 => 'aliVersion',
                ),
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DC*****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'validateType' => 
                    array (
                      'description' => '校验类型。支持：

- checkClusterHealth：集群健康状态
- checkConfigCompatible：配置兼容状态
- checkClusterResource：资源空间状态
- checkClusterSnapshot：是否存在快照',
                      'type' => 'string',
                      'example' => 'checkClusterHealth',
                    ),
                    'validateResult' => 
                    array (
                      'description' => '校验信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'errorType' => 
                          array (
                            'description' => '错误类型。支持：

- clusterStatus：集群健康状态
- clusterConfigYml：集群YML文件
- clusterConfigPlugins：集群配置文件
- clusterResource：集群资源
- clusterSnapshot：集群快照',
                            'type' => 'string',
                            'example' => 'clusterStatus',
                          ),
                          'errorCode' => 
                          array (
                            'description' => '错误码。',
                            'type' => 'string',
                            'example' => 'ClusterStatusNotHealth',
                          ),
                          'errorMsg' => 
                          array (
                            'description' => '错误信息。',
                            'type' => 'string',
                            'example' => 'The cluster status is not health',
                          ),
                        ),
                      ),
                    ),
                    'status' => 
                    array (
                      'description' => '校验是否通过。支持：

- success：通过
- failed：未通过',
                      'type' => 'string',
                      'example' => 'success',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DC*****\\",\\n  \\"Result\\": [\\n    {\\n      \\"validateType\\": \\"checkClusterHealth\\",\\n      \\"validateResult\\": [\\n        {\\n          \\"errorType\\": \\"clusterStatus\\",\\n          \\"errorCode\\": \\"ClusterStatusNotHealth\\",\\n          \\"errorMsg\\": \\"The cluster status is not health\\"\\n        }\\n      ],\\n      \\"status\\": \\"success\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '升级实例版本或内核补丁版本',
      'description' => '> 升级实例版本功能目前只支持5.5.3版本升级到5.6.16版本、5.6.16版本升级到6.3.2版本、6.3.2版本升级到6.7.0版本，暂不支持其他版本间的升级。详情请参见[升级版本](~~148786~~)。',
      'requestParamsDescription' => '
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateInstanceSettings' => 
    array (
      'summary' => '修改指定ES实例的YML参数配置。',
      'path' => '/openapi/instances/{InstanceId}/instance-settings',
      'methods' => 
      array (
        0 => 'patch',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BB1C321A-211C-4FD7-BD8B-7F2FABE2****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BB1C321A-211C-4FD7-BD8B-7F2FABE2****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改实例的YML参数配置',
      'description' => '调用该接口时，请注意：<br>
实例状态为生效中（activating）、失效（invalid）和冻结（inactive）时，无法更新配置。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入**esConfig**参数，用来指定待更新的YML参数和值，示例如下。

```
{
    "esConfig": {
        "thread_pool.bulk.queue_size": 500
    }
}
```',
      'responseParamsDescription' => '返回数据中还包括Result参数，详情请参见[ListInstance](~~142230~~)。',
      'extraInfo' => ' ',
    ),
    'UpdateHotIkDicts' => 
    array (
      'summary' => '更新阿里云Elasticsearch实例的IK热词词典。',
      'path' => '/openapi/instances/{InstanceId}/ik-hot-dict',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-oew1q8bev0002****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'description' => 'RequestBody',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '请参见RequestBody中的示例',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'fileSize' => 
                    array (
                      'description' => '词典文件大小，单位：Byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '6',
                    ),
                    'sourceType' => 
                    array (
                      'description' => '词典文件来源类型，支持：

- OSS：使用OSS开放存储
- ORIGIN：保留之前已经上传的词典',
                      'type' => 'string',
                      'example' => 'OSS',
                    ),
                    'name' => 
                    array (
                      'description' => '词典文件名。',
                      'type' => 'string',
                      'example' => 'deploy_0.dic',
                    ),
                    'type' => 
                    array (
                      'description' => '词典类型，支持：

- MAIN：IK主分词词库
- STOP：IK停用词词库',
                      'type' => 'string',
                      'example' => 'MAIN',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": [\\n    {\\n      \\"fileSize\\": 6,\\n      \\"sourceType\\": \\"OSS\\",\\n      \\"name\\": \\"deploy_0.dic\\",\\n      \\"type\\": \\"MAIN\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更新实例IK热词词典',
      'description' => '调用此接口时，请注意：

- 如果词典文件来源于OSS，需要确保OSS存储空间为公共可读。
- 如果已经上传的词典不加ORIGIN配置，调用此接口后，词典文件会被删除。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数。
| 参数 | 类型 | 是否必须 | 示例值 | 描述 |
| --- | --- | --- | --- | --- |
| name | String | 是 | dic_0.dic | 上传的词典文件名称。|
| ossObject | Array  | 是 |  | OSS的开放存储文件描述。当sourceType为OSS时，必填。|
| └bucketName | String | 是 | search-cloud-test-cn-**** | OSS存储空间（Bucket）名称。|
| └key | String | 是 | oss/dic_0.dic | 词典文件在OSS Bucket中的存储路径。|
| sourceType | String | 是 | OSS | 词典文件来源类型，可选值：OSS（使用OSS开放存储）、ORIGIN（保留之前已经上传的词典）。<br>**注意**：<br>本地文件需要先上传至OSS，再通过OSS引用。<br>如果之前已经完成上传的词典不加ORIGIN进行配置，会被系统删除。|
| type | String | 是 | MAIN | 要更新的词典类型。可选值：MAIN（IK主分词词库）、STOP（IK停用词库）。|

- └表示子参数。
- RequestBody要添加全量API参数。例如，添加停用词时，默认或已安装词库中的词典文件都需要写入RequestBody，以下示例中`"sourceType":"ORIGIN"`就是存量词典文件。

```
[
    {
        "name":"deploy_0.dic",
        "ossObject":{
            "bucketName":"search-cloud-test-cn-****",
            "key":"user_dict/dict_0.dic"
        },
        "sourceType":"OSS",
        "type":"MAIN"
    },
    {
        "name":"deploy_2.dic",
        "ossObject":{
            "bucketName":"search-cloud-test-cn-****",
            "key":"user_dict/dict_2.dic"
        },
        "sourceType":"OSS",
        "type":"STOP"
    },
    {
        "name":"SYSTEM_MAIN.dic",
        "sourceType":"ORIGIN",
         "type":"MAIN"
    },
    {
        "name":"SYSTEM_STOPWORD.dic",
        "sourceType":"ORIGIN",
        "type":"STOP"
    }
]
```
',
      'extraInfo' => ' ',
    ),
    'UpdateSynonymsDicts' => 
    array (
      'summary' => '更新阿里云Elasticsearch实例的同义词词典。',
      'path' => '/openapi/instances/{InstanceId}/synonymsDict',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7C5622CC-B312-426F-85AA-B0271*******',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'fileSize' => 
                    array (
                      'description' => '词典文件大小，单位：Byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '220',
                    ),
                    'sourceType' => 
                    array (
                      'description' => '词典文件来源类型，支持：

- OSS：OSS开放存储
- ORIGIN：保留之前已经上传的词典',
                      'type' => 'string',
                      'example' => 'OSS',
                    ),
                    'name' => 
                    array (
                      'description' => '词典文件名称。',
                      'type' => 'string',
                      'example' => 'deploy_0.txt',
                    ),
                    'type' => 
                    array (
                      'description' => '词典类型，支持：SYNONYMS（同义词）。',
                      'type' => 'string',
                      'example' => 'SYNONYMS',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7C5622CC-B312-426F-85AA-B0271*******\\",\\n  \\"Result\\": [\\n    {\\n      \\"fileSize\\": 220,\\n      \\"sourceType\\": \\"OSS\\",\\n      \\"name\\": \\"deploy_0.txt\\",\\n      \\"type\\": \\"SYNONYMS\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更新实例同义词词典',
      'description' => '调用此接口时，请注意：

- 如果词典文件来源于OSS，需要确保OSS存储空间为公共可读。
- 如果已经上传的词典不加ORIGIN配置，调用此接口后，词典文件会被删除。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数。
| 参数 | 类型 | 是否必须 | 示例值 | 描述 |
| --- | --- | --- | --- | --- |
| name | String | 是 | dic_0.txt | 上传的词典文件名称，必须为TXT类型。 |
| ossObject | Array  | 否 |  | OSS的开放存储文件描述。当sourceType为OSS时，必填。|
| └bucketName | String | 否 | search-cloud-test-cn-**** | OSS存储空间（Bucket）名称。|
| └key | String | 否 | oss/dic_0.txt | 词典文件在OSS Bucket中的存储路径。|
| sourceType | String | 是 | OSS | 词典文件来源类型，可选值：OSS（使用OSS开放存储）、ORIGIN（保留之前已经上传的词典）。<br>**注意：**<br>本地文件需要先上传至OSS，再通过OSS引用。<br>如果已经完成上传的词典不加ORIGIN进行配置，会被系统删除。|
| type | String | 是 | SYNONYMS | 要更新的词典类型，固定为SYNONYMS。|

> └表示子参数。

示例如下。

```
[
    {
        "name":"deploy_0.txt",
        "ossObject":{
            "bucketName":"search-cloud-test-cn-****",
            "key":"user_dict/dict_0.dic"
        },
        "sourceType":"OSS",
        "type":"SYNONYMS"
    },
    {
        "name":"SYSTEM_STOPWORD.txt",
        "sourceType":"ORIGIN",
        "type":"SYNONYMS"
    }
]

```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDict' => 
    array (
      'summary' => '更新Elasticsearch实例的用户词典。',
      'path' => '/openapi/instances/{InstanceId}/dict',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'fileSize' => 
                    array (
                      'description' => '词典文件大小，单位：Byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '2782602',
                    ),
                    'sourceType' => 
                    array (
                      'description' => '词典文件来源类型，支持：

- OSS：OSS开放存储
- ORIGIN：保留之前已经上传的词典',
                      'type' => 'string',
                      'example' => 'ORIGIN',
                    ),
                    'name' => 
                    array (
                      'description' => '词典文件名称。',
                      'type' => 'string',
                      'example' => 'SYSTEM_MAIN.dic',
                    ),
                    'type' => 
                    array (
                      'description' => '词典类型，支持：

- MAIN：IK主分词词库
- STOP：IK停用词词库',
                      'type' => 'string',
                      'example' => 'MAIN',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****\\",\\n  \\"Result\\": [\\n    {\\n      \\"fileSize\\": 2782602,\\n      \\"sourceType\\": \\"ORIGIN\\",\\n      \\"name\\": \\"SYSTEM_MAIN.dic\\",\\n      \\"type\\": \\"MAIN\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更新实例用户词典',
      'description' => '调用此接口时，请注意：

- 如果词典文件来源于OSS，需要确保OSS存储空间为公共可读。
- 如果已经上传的词典不加ORIGIN配置，调用此接口后，词典文件会被删除。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数。
| 参数 | 类型 | 是否必须 | 示例值 | 描述 |
| --- | --- | --- | --- | --- |
| name | String | 是 | dic_0.dic | 上传的词典文件名称。 |
| ossObject | Array  | 是 |  | OSS的开放存储文件描述。当sourceType为OSS时，必填。|
| └bucketName | String | 是 | search-cloud-test-cn-**** | OSS存储空间（Bucket）名称。|
| └key | String | 是 | oss/dic_0.dic | 词典文件在OSS Bucket中的存储路径。|
| sourceType | String | 是 | OSS |  词典文件来源类型，可选值：OSS（使用OSS开放存储）、ORIGIN（保留之前已经上传的词典）。<br>**注意：**<br>本地文件需要先上传至OSS，再通过OSS引用。<br>如果之前已经完成上传的词典不加ORIGIN进行配置，会被系统删除。 |
| type | String | 是 | MAIN | 要更新的词典类型。可选值：MAIN（IK主分词词库）或STOP（IK停用词库）。|

> └表示子参数。

示例如下。

```
[
    {
        "name":"deploy_0.dic",
        "ossObject":{
            "bucketName":"search-cloud-test-cn-****",
            "key":"user_dict/dict_0.dic"
        },
        "sourceType":"OSS",
        "type":"MAIN"
    },
    {
        "name":"deploy_2.dic",
        "ossObject":{
            "bucketName":"search-cloud-test-cn-****",
            "key":"user_dict/dict_2.dic"
        },
        "sourceType":"OSS",
        "type":"STOP"
    },
    {
        "name":"SYSTEM_MAIN.dic",
        "sourceType":"ORIGIN",
         "type":"MAIN"
    },
    {
        "name":"SYSTEM_STOPWORD.dic",
        "sourceType":"ORIGIN",
       "type":"STOP"
    }
]
```
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateAdvancedSetting' => 
    array (
      'summary' => '更改Elasticsearch指定实例的垃圾回收器配置。',
      'path' => '/openapi/instances/{InstanceId}/actions/update-advanced-setting',
      'methods' => 
      array (
        0 => 'post',
        1 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-09k1ruw79000u****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：垃圾回收器配置更改成功
- false：垃圾回收器配置更改失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更改指定实例的垃圾回收器配置',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定修改后的垃圾回收器配置。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| gcName| String | 是 |CMS|修改后的垃圾回收器名称。支持：CMS、G1。|

示例如下。

```
{
    "gcName":"CMS"
}
```
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateExtendConfig' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/extend-configs/actions/update',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：修改场景模板配置成功
- false：修改场景模板配置失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改场景化配置模板',
      'summary' => '修改Elasticsearch场景化配置模板。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定场景化配置模板信息。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| configType| String | 是 | usageScenario |配置类型。支持：usageScenario（使用场景化配置）。|
| value | String | 是 | general | 商业版实例可选：general（通用场景）、analysisVisualization（数据分析场景）、dbAcceleration（数据库加速场景）、search（搜索场景）。<br>增强版实例可选：log（日志场景）。|

示例如下。

```
{
    "configType": "usageScenario",
    "value": "search"
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateTemplate' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/templates/{TemplateName}',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        2 => 
        array (
          'name' => 'TemplateName',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '模板名称。可选值：
- dynamicSettings：集群动态配置
- indexTemplate：索引模板配置
- ilmPolicy：索引生命周期配置
- staticSettings：集群动态配置',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dynamicSettings',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'description' => '指定模板配置内容，详细信息请参见下文的RequestBody章节。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '{     "content": "{\\n\\t\\"persistent\\":{\\n\\t\\t\\"search\\":{\\n\\t\\t\\t\\"max_buckets\\":\\"10000\\"\\n\\t\\t}\\n\\t}\\n}" }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '场景化模板配置是否修改成功：

- true：修改成功
- false：修改失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改实例场景化模板配置',
      'summary' => '修改集群的场景化模板配置内容。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定模板配置内容。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| content| String | 是 | {\\n\\t\\"persistent\\":{\\n\\t\\t\\"search\\":{\\n\\t\\t\\t\\"max_buckets\\":\\"10000\\"\\n\\t\\t}\\n\\t}\\n} |模板配置内容。|

示例如下。

```
{
    "content": "{\\n\\t\\"persistent\\":{\\n\\t\\t\\"search\\":{\\n\\t\\t\\t\\"max_buckets\\":\\"10000\\"\\n\\t\\t}\\n\\t}\\n}"
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateAliwsDict' => 
    array (
      'summary' => '更新AliNLP分词插件（英文名为analysis-aliws）的词典。',
      'path' => '/openapi/instances/{InstanceId}/aliws-dict',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'fileSize' => 
                    array (
                      'description' => '文件大小，单位：Byte。
',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '6226',
                    ),
                    'sourceType' => 
                    array (
                      'description' => '词典文件来源类型，支持：
- OSS：使用OSS开放存储
- ORIGIN：保留之前已经上传的词典',
                      'type' => 'string',
                      'example' => 'OSS',
                    ),
                    'name' => 
                    array (
                      'description' => '上传的文件名称。',
                      'type' => 'string',
                      'example' => 'aliws_ext_dict.txt',
                    ),
                    'type' => 
                    array (
                      'description' => '词典类型，支持：ALI_WS（AliNLP分词）。',
                      'type' => 'string',
                      'example' => 'ALI_WS',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": [\\n    {\\n      \\"fileSize\\": 6226,\\n      \\"sourceType\\": \\"OSS\\",\\n      \\"name\\": \\"aliws_ext_dict.txt\\",\\n      \\"type\\": \\"ALI_WS\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更新AliNLP分词插件',
      'description' => '调用此接口时，请注意：
- 5.x版本的实例不支持AliNLP分词插件。
- 如果词典文件来源于OSS，需要确保OSS存储空间为公共可读。
- 如果已经上传的词典不加ORIGIN配置，调用此接口后，词典文件会被删除。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数。
| 参数 | 类型 | 是否必须 | 示例值 | 描述 |
| --- | --- | --- | --- | --- |
| name | String | 是 | aliws\\_ext\\_dict.txt | 上传的词典文件名称。 |
| ossObject | Array  | 是 |  | OSS的开放存储文件描述。当sourceType为OSS时，必填。|
| └bucketName | String | 是 | search-cloud-test-cn-**** | OSS存储空间（Bucket）名称。|
| └key | String | 是 | oss/aliws\\_ext\\_dict.txt  | 词典文件在OSS Bucket中的存储路径。|
| sourceType | String | 是 | OSS |  词典文件来源类型，可选值：OSS（使用OSS开放存储）、ORIGIN（保留之前已经上传的词典）。<br>**注意：**<br>本地文件需要先上传至OSS，再通过OSS引用。<br>如果之前已经上传的词典不加ORIGIN进行配置，会被系统删除。 |
| type | String | 是 | ALI_WS | 词典类型，固定值：ALI_WS（AliNLP分词）。|

> └表示子参数。

示例如下。

```
[
    {
        "name":"deploy_0.txt",
        "ossObject":{
            "bucketName":"search-cloud-test-cn-****",
            "key":"user_dict/dict_0.txt"
        },
        "sourceType":"OSS",
        "type":"ALI_WS"
    },
    {
        "name":"aliws_ext_dict.txt",
        "sourceType":"ORIGIN",
       "type":"ALI_WS"
    }
]
```
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateBlackIps' => 
    array (
      'summary' => '修改ES实例访问黑名单，已废弃',
      'path' => '/openapi/instances/{InstanceId}/black-ips',
      'methods' => 
      array (
        0 => 'patch',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Result' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'esIPBlacklist' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '',
    ),
    'DescribeTemplates' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/templates',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'content' => 
                    array (
                      'description' => '模板内容。',
                      'type' => 'string',
                      'example' => '{\\n\\t\\"persistent\\":{\\n\\t\\t\\"search\\":{\\n\\t\\t\\t\\"max_buckets\\":\\"10000\\"\\n\\t\\t}\\n\\t}\\n}',
                    ),
                    'templateName' => 
                    array (
                      'description' => '模板名称。支持：
- staticSettings：elasticsearch.yml配置
- ilmPolicy：索引生命周期配置
- indexTemplate：索引模板配置
- dynamicSettings：集群动态配置',
                      'type' => 'string',
                      'example' => 'dynamicSettings',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": [\\n    {\\n      \\"content\\": \\"{\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\\"persistent\\\\\\\\\\\\\\":{\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\\"search\\\\\\\\\\\\\\":{\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\\"max_buckets\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"10000\\\\\\\\\\\\\\"\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\n\\\\\\\\t}\\\\\\\\n}\\",\\n      \\"templateName\\": \\"dynamicSettings\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取实例的场景模板配置',
      'summary' => '获取实例的场景模板配置，集群settings配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListAckClusters' => 
    array (
      'path' => '/openapi/ack-clusters',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页数。（已废弃）',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数。（已废弃）',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '15',
          ),
        ),
        2 => 
        array (
          'name' => 'vpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ACK集群所在的专有网络ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp12nu14urf0upaf4****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id。',
                'type' => 'string',
                'example' => 'F93EAA49-284F-4FCE-9E67-FA23FB4BB512',
              ),
              'Result' => 
              array (
                'description' => '当前请求返回的ACK集群列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '单个ACK集群信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'clusterType' => 
                    array (
                      'description' => '集群类型，仅支持ManagedKubernetes，即Kubernetes集群。',
                      'type' => 'string',
                      'example' => 'ManagedKubernetes',
                    ),
                    'vpcId' => 
                    array (
                      'description' => '集群所在的专有网络id。',
                      'type' => 'string',
                      'example' => 'vpc-bp12nu14urf0upaf4****',
                    ),
                    'name' => 
                    array (
                      'description' => '集群名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'clusterId' => 
                    array (
                      'description' => '集群id。',
                      'type' => 'string',
                      'example' => 'c5ea2c2d9a3cf499481292f60425d****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"F93EAA49-284F-4FCE-9E67-FA23FB4BB512\\",\\n  \\"Result\\": [\\n    {\\n      \\"clusterType\\": \\"ManagedKubernetes\\",\\n      \\"vpcId\\": \\"vpc-bp12nu14urf0upaf4****\\",\\n      \\"name\\": \\"test\\",\\n      \\"clusterId\\": \\"c5ea2c2d9a3cf499481292f60425d****\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取 ACK 群集列表',
      'summary' => '获取容器服务Kubernetes版ACK（Container Service for Kubernetes）集群列表。',
    ),
    'ListDictInformation' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/dict/_info',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'bucketName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '词典文件所在的OSS存储空间（Bucket）名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'search-cloud-test-cn-****',
          ),
        ),
        2 => 
        array (
          'name' => 'key',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '词典文件在OSS Bucket中的存储路径。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'oss/dic_0.dic',
          ),
        ),
        3 => 
        array (
          'name' => 'analyzerType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户待添加的OSS词典类型。支持IK_HOT、IK、SYNONYMS、ALIWS四种类型。默认值：IK',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'ALIWS',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。
',
                'type' => 'string',
                'example' => '7C4334EA-D22B-48BD-AE28-08EE68******',
              ),
              'Result' => 
              array (
                'description' => '返回结果。
',
                'type' => 'object',
                'properties' => 
                array (
                  'type' => 
                  array (
                    'description' => '词库类型，支持以下两种类型：

- MAIN：主分词词库

- STOP：停用词库',
                    'type' => 'string',
                    'example' => 'STOP',
                  ),
                  'fileSize' => 
                  array (
                    'description' => '词典文件大小，单位：Byte。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2202301',
                  ),
                  'ossObject' => 
                  array (
                    'description' => 'OSS开放存储文件详情。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'key' => 
                      array (
                        'description' => '词典文件在OSS Bucket中的存储路径。',
                        'type' => 'string',
                        'example' => 'oss/dict_0*.dic',
                      ),
                      'bucketName' => 
                      array (
                        'description' => 'OSS存储文件所在的空间（Bucket）名称。',
                        'type' => 'string',
                        'example' => 'es-osstest*',
                      ),
                      'etag' => 
                      array (
                        'description' => 'OSS存储文件的MD5校验码ETag（大写）。',
                        'type' => 'string',
                        'example' => '2ABAB5E70BBF631145647F6BE533****',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7C4334EA-D22B-48BD-AE28-08EE68******\\",\\n  \\"Result\\": {\\n    \\"type\\": \\"STOP\\",\\n    \\"fileSize\\": 2202301,\\n    \\"ossObject\\": {\\n      \\"key\\": \\"oss/dict_0*.dic\\",\\n      \\"bucketName\\": \\"es-osstest*\\",\\n      \\"etag\\": \\"2ABAB5E70BBF631145647F6BE533****\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查看词典信息',
      'summary' => '查看对应的词典信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListEcsInstances' => 
    array (
      'path' => '/openapi/ecs',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果页数。最大值500。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页包含的结果数。默认值10，最大值500。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ecsInstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS实例ID列表。取值可以由多个实例ID组成一个JSON数组，最多支持100个ID，ID之间用半角逗号（,）隔开。',
            'type' => 'string',
            'required' => false,
            'example' => '["i-bp13y63575oypr9d****","i-bp1gyhphjaj73jsr****"]',
          ),
        ),
        3 => 
        array (
          'name' => 'ecsInstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'tags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS实例标签，必须包含：

- tagKey：标签键
- tagValue：标签值',
            'type' => 'string',
            'required' => false,
            'example' => '[{ "tagKey":"a","tagValue":"b"}]',
          ),
        ),
        5 => 
        array (
          'name' => 'vpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS实例所在的VPC ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp16k1dvzxtmagcva****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '返回的记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '11',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'cloudAssistantStatus' => 
                    array (
                      'description' => '云助手安装状态，支持：

- true：已安装
- false：未安装',
                      'type' => 'string',
                      'example' => 'true',
                    ),
                    'ecsInstanceName' => 
                    array (
                      'description' => 'ECS实例名称。',
                      'type' => 'string',
                      'example' => 'ecsTestName',
                    ),
                    'ecsInstanceId' => 
                    array (
                      'description' => 'ECS实例ID。',
                      'type' => 'string',
                      'example' => 'i-bp14ncqge8wy3l3d****',
                    ),
                    'tags' => 
                    array (
                      'description' => 'ECS实例的标签信息。',
                      'type' => 'string',
                      'example' => '[ { "tagKey": "a", "tagValue": "b" } ]',
                    ),
                    'osType' => 
                    array (
                      'description' => 'ECS实例的操作系统类型。支持：

- windows：Windows操作系统
- linux：Linux操作系统',
                      'type' => 'string',
                      'example' => 'linux',
                    ),
                    'status' => 
                    array (
                      'description' => 'ECS实例的状态。支持：

- running：运行中
- starting：启动中
- stopping：停止中
- stopped：已停止',
                      'type' => 'string',
                      'example' => 'running',
                    ),
                    'ipAddress' => 
                    array (
                      'description' => 'ECS实例的IP地址信息。
',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'ipType' => 
                          array (
                            'description' => 'IP地址类型。支持：

- public：公网地址
- private：私网地址',
                            'type' => 'string',
                            'example' => 'private',
                          ),
                          'host' => 
                          array (
                            'description' => 'IP地址。',
                            'type' => 'string',
                            'example' => '172.16.xx.xx',
                          ),
                        ),
                      ),
                    ),
                    'collectors' => 
                    array (
                      'description' => '该ECS实例上，采集器信息列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'resId' => 
                          array (
                            'description' => '采集器实例ID。',
                            'type' => 'string',
                            'example' => 'ct-cn-0v3xj86085dvq****',
                          ),
                          'gmtUpdateTime' => 
                          array (
                            'description' => '采集器更新时间。',
                            'type' => 'string',
                            'example' => '2020-06-20T07:26:47.000+0000',
                          ),
                          'dryRun' => 
                          array (
                            'description' => '是否校验并创建采集器。支持：

- true：只校验不创建
- false：校验并创建',
                            'type' => 'boolean',
                            'example' => 'false',
                          ),
                          'ownerId' => 
                          array (
                            'description' => '账号ID。',
                            'type' => 'string',
                            'example' => '16852***488*****',
                          ),
                          'vpcId' => 
                          array (
                            'description' => '采集器所在的专有网络ID。

',
                            'type' => 'string',
                            'example' => 'vpc-bp16k1dvzxtm******',
                          ),
                          'resType' => 
                          array (
                            'description' => '采集器类型。支持fileBeat、metricBeat、heartBeat和auditBeat。',
                            'type' => 'string',
                            'example' => 'fileBeat',
                          ),
                          'resVersion' => 
                          array (
                            'description' => '采集器版本。采集器部署的机器类型为ECS时，只支持**6.8.5_with_community**。',
                            'type' => 'string',
                            'example' => '6.8.5_with_community',
                          ),
                          'gmtCreatedTime' => 
                          array (
                            'description' => '采集器创建时间。',
                            'type' => 'string',
                            'example' => '2020-06-20T07:26:47.000+0000',
                          ),
                          'status' => 
                          array (
                            'description' => '采集器状态。支持：

- activing：生效中
- active：已生效',
                            'type' => 'string',
                            'example' => 'activing',
                          ),
                          'name' => 
                          array (
                            'description' => '采集器名称。

',
                            'type' => 'string',
                            'example' => 'ct-testAbc',
                          ),
                          'configs' => 
                          array (
                            'description' => '采集器的配置文件信息。
',
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'content' => 
                                array (
                                  'description' => '文件内容。
',
                                  'type' => 'string',
                                  'example' => '- key: log\\n title: Log file content\\n description: >\\n Contains log file lines.\\n ....',
                                ),
                                'fileName' => 
                                array (
                                  'description' => '文件名称。',
                                  'type' => 'string',
                                  'example' => 'fields.yml',
                                ),
                              ),
                            ),
                          ),
                          'extendConfigs' => 
                          array (
                            'description' => '扩展参数信息。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'enableMonitoring' => 
                                array (
                                  'description' => '是否启用Monitoring，当**configType**为**collectorTargetInstance**，且**instanceType**为**elasticsearch**时显示。支持：

- true：启用
- false：不启用',
                                  'type' => 'boolean',
                                  'example' => 'true',
                                ),
                                'groupId' => 
                                array (
                                  'description' => '机器组ID。当**configType**为**collectorDeployMachine**时显示。',
                                  'type' => 'string',
                                  'example' => 'default_ct-cn-5i2l75bz4776****',
                                ),
                                'configType' => 
                                array (
                                  'description' => '配置类型。支持：

- collectorTargetInstance：采集器Output
- collectorDeployMachine：采集器的部署机器
- collectorElasticsearchForKibana：支持Kibana仪表盘的Elasticsearch实例信息',
                                  'type' => 'string',
                                  'example' => 'collectorDeployMachine',
                                ),
                                'instanceType' => 
                                array (
                                  'description' => '采集器Output指定的实例类型。支持elasticsearch、logstash。当**configType**为**collectorTargetInstance**时显示。',
                                  'type' => 'string',
                                  'example' => 'elasticsearch',
                                ),
                                'protocol' => 
                                array (
                                  'description' => '传输协议，需要与采集器Output指定实例的访问协议保持一致。支持HTTP、HTTPS。当**configType**为**collectorTargetInstance**时显示。',
                                  'type' => 'string',
                                  'example' => 'HTTP',
                                ),
                                'userName' => 
                                array (
                                  'description' => '采集器Output指定实例的访问用户名，默认为elastic。当**configType**为**collectorTargetInstance**或**collectorElasticsearchForKibana**时显示。',
                                  'type' => 'string',
                                  'example' => 'elastic',
                                ),
                                'type' => 
                                array (
                                  'description' => '采集器部署的机器类型，当**configType**为**collectorDeployMachine**时显示。支持：

- ECSInstanceId：ECS
- ACKCluster：容器Kubernetes',
                                  'type' => 'string',
                                  'example' => 'ECSInstanceId',
                                ),
                                'instanceId' => 
                                array (
                                  'description' => '采集器关联的实例ID。当**configType**为**collectorTargetInstance**时，为采集器Output的实例ID；当**configType**为**collectorDeployMachines**，且**type**为**ACKCluster**时，为ACK（容器Kubernetes）集群ID。',
                                  'type' => 'string',
                                  'example' => 'es-cn-nif1z89fz003i****',
                                ),
                                'machines' => 
                                array (
                                  'description' => '采集器所部署的ECS机器列表信息。当**configType**为**collectorDeployMachines**，且**type**为**ECSInstanceId**时显示。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'agentStatus' => 
                                      array (
                                        'description' => 'ECS上各采集器的状态。支持：

- heartOk：心跳正常
- heartLost：心跳异常
- uninstalled：未安装
- failed：安装失败',
                                        'type' => 'string',
                                        'example' => 'heartOk',
                                      ),
                                      'instanceId' => 
                                      array (
                                        'description' => 'ECS机器ID列表。',
                                        'type' => 'string',
                                        'example' => 'i-bp13y63575oypr9d****',
                                      ),
                                    ),
                                  ),
                                ),
                                'hosts' => 
                                array (
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '采集器Output指定实例的访问地址列表。当**configType**为**collectorTargetInstance**时显示。',
                                    'type' => 'string',
                                    'example' => '["es-cn-n6w1o1x*****.elasticsearch.aliyuncs.com:9200"]',
                                  ),
                                ),
                              ),
                            ),
                          ),
                          'collectorPaths' => 
                          array (
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => 'Filebeat的采集路径。',
                              'type' => 'string',
                              'example' => '["/var/log"]',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 11\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"cloudAssistantStatus\\": \\"true\\",\\n      \\"ecsInstanceName\\": \\"ecsTestName\\",\\n      \\"ecsInstanceId\\": \\"i-bp14ncqge8wy3l3d****\\",\\n      \\"tags\\": \\"[ { \\\\\\"tagKey\\\\\\": \\\\\\"a\\\\\\", \\\\\\"tagValue\\\\\\": \\\\\\"b\\\\\\" } ]\\",\\n      \\"osType\\": \\"linux\\",\\n      \\"status\\": \\"running\\",\\n      \\"ipAddress\\": [\\n        {\\n          \\"ipType\\": \\"private\\",\\n          \\"host\\": \\"172.16.xx.xx\\"\\n        }\\n      ],\\n      \\"collectors\\": [\\n        {\\n          \\"resId\\": \\"ct-cn-0v3xj86085dvq****\\",\\n          \\"gmtUpdateTime\\": \\"2020-06-20T07:26:47.000+0000\\",\\n          \\"dryRun\\": false,\\n          \\"ownerId\\": \\"16852***488*****\\",\\n          \\"vpcId\\": \\"vpc-bp16k1dvzxtm******\\",\\n          \\"resType\\": \\"fileBeat\\",\\n          \\"resVersion\\": \\"6.8.5_with_community\\",\\n          \\"gmtCreatedTime\\": \\"2020-06-20T07:26:47.000+0000\\",\\n          \\"status\\": \\"activing\\",\\n          \\"name\\": \\"ct-testAbc\\",\\n          \\"configs\\": [\\n            {\\n              \\"content\\": \\"- key: log\\\\\\\\n title: Log file content\\\\\\\\n description: >\\\\\\\\n Contains log file lines.\\\\\\\\n ....\\",\\n              \\"fileName\\": \\"fields.yml\\"\\n            }\\n          ],\\n          \\"extendConfigs\\": [\\n            {\\n              \\"enableMonitoring\\": true,\\n              \\"groupId\\": \\"default_ct-cn-5i2l75bz4776****\\",\\n              \\"configType\\": \\"collectorDeployMachine\\",\\n              \\"instanceType\\": \\"elasticsearch\\",\\n              \\"protocol\\": \\"HTTP\\",\\n              \\"userName\\": \\"elastic\\",\\n              \\"type\\": \\"ECSInstanceId\\",\\n              \\"instanceId\\": \\"es-cn-nif1z89fz003i****\\",\\n              \\"machines\\": [\\n                {\\n                  \\"agentStatus\\": \\"heartOk\\",\\n                  \\"instanceId\\": \\"i-bp13y63575oypr9d****\\"\\n                }\\n              ],\\n              \\"hosts\\": [\\n                \\"[\\\\\\"es-cn-n6w1o1x*****.elasticsearch.aliyuncs.com:9200\\\\\\"]\\"\\n              ]\\n            }\\n          ],\\n          \\"collectorPaths\\": [\\n            \\"[\\\\\\"/var/log\\\\\\"]\\"\\n          ]\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取 ECS 实例列表',
      'summary' => '获取当前用户vpc和vswitch下的ECS 实例列表。',
      'description' => '><notice> 接口前置需要创建AliyunElasticsearchAccessingOOSRole和AliyunOOSAccessingECS4ESRole的系统服务角色，用于Elasticsearch服务账号获取主账号的ECS访问权限等，详细信息请参见[采集ECS服务日志](~~146446~~)。
></notice>',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeAckOperator' => 
    array (
      'path' => '/openapi/ack-clusters/{ClusterId}/operator',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '目标集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c79acd3fbf462423fb6450e513bb6****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6615EE8D-FD9D-4FD3-997E-6FEA5B8D82ED',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'version' => 
                  array (
                    'description' => 'Operator版本。',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'status' => 
                  array (
                    'description' => 'Operator安装状态。支持：

- deployed：已安装
- not-deploy：未安装
- failed：安装失败
- unknown：未知状态',
                    'type' => 'string',
                    'example' => 'deployed',
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6615EE8D-FD9D-4FD3-997E-6FEA5B8D82ED\\",\\n  \\"Result\\": {\\n    \\"version\\": \\"1\\",\\n    \\"status\\": \\"deployed\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取ack运算符详情',
      'summary' => '调用DescribeAckOperator，查看指定容器服务Kubernetes版ACK（Container Service for Kubernetes）集群上安装的Elasticsearch Operator信息。',
      'description' => '> 在ACK集群上安装采集器前，可以先调用该接口，查看目标集群上Elasticsearch Operator的安装状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetRegionConfiguration' => 
    array (
      'path' => '/openapi/region',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '64288',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREelasticsearchFBYZT8',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'zoneId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前可用区ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou-f',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6F******',
              ),
              'Result' => 
              array (
                'description' => '返回的地域配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'env' => 
                  array (
                    'description' => '环境标志。',
                    'type' => 'string',
                    'example' => 'production',
                  ),
                  'regionId' => 
                  array (
                    'description' => '当前地域ID。',
                    'type' => 'string',
                    'example' => 'cn-hangzhou',
                  ),
                  'createUrl' => 
                  array (
                    'description' => '售卖页入口地址。',
                    'type' => 'string',
                    'example' => 'https://common-buy.aliyun.com/?commodityCode=elasticsearch&orderType=BUY#/buy',
                  ),
                  'dataDiskList' => 
                  array (
                    'description' => '数据节点磁盘允许值。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'scaleLimit' => 
                        array (
                          'description' => '磁盘允许设置连续值的最大值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2048',
                        ),
                        'minSize' => 
                        array (
                          'description' => '磁盘允许的最小值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'maxSize' => 
                        array (
                          'description' => '磁盘允许的最大值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5120',
                        ),
                        'diskType' => 
                        array (
                          'description' => '磁盘存储类型。',
                          'type' => 'string',
                          'example' => 'cloud_ssd',
                        ),
                        'valueLimitSet' => 
                        array (
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '磁盘允许的离散值。',
                            'type' => 'string',
                            'example' => '[2560,3072,3584,4096,4608,5120]',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'esVersionsLatestList' => 
                  array (
                    'description' => 'Elasticsearch开放售卖的版本列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'key' => 
                        array (
                          'description' => '支持的大版本号。',
                          'type' => 'string',
                          'example' => '5.5_with_X-Pack',
                        ),
                        'value' => 
                        array (
                          'description' => '支持的小版本号全称 。',
                          'type' => 'string',
                          'example' => '5.5.3_with_X-Pack',
                        ),
                      ),
                    ),
                  ),
                  'nodeSpecList' => 
                  array (
                    'description' => '数据节点规格列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'memorySize' => 
                        array (
                          'description' => '节点内存大小。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '64',
                        ),
                        'cpuCount' => 
                        array (
                          'description' => '该规格对应的CPU核数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '16',
                        ),
                        'diskType' => 
                        array (
                          'description' => '磁盘存储类型。',
                          'type' => 'string',
                          'example' => 'local_efficiency',
                        ),
                        'spec' => 
                        array (
                          'description' => '规格名称。',
                          'type' => 'string',
                          'example' => 'elasticsearch.sn2ne.large',
                        ),
                        'disk' => 
                        array (
                          'description' => '该规格对应的磁盘大小。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '44000',
                        ),
                        'specGroupType' => 
                        array (
                          'description' => '存储类型，支持以下三种类型：

- common：云盘型

- local_efficiency：本地SATA盘

- local_ssd：本地SSD盘


',
                          'type' => 'string',
                          'example' => 'local_efficiency',
                        ),
                        'enable' => 
                        array (
                          'description' => '是否支持购买：

- true：支持
- false：不支持',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                  'clientNodeDiskList' => 
                  array (
                    'description' => '协调节点磁盘允许值。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'scaleLimit' => 
                        array (
                          'description' => '磁盘允许设置连续值的最大值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '18',
                        ),
                        'minSize' => 
                        array (
                          'description' => '磁盘允许的最小值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'maxSize' => 
                        array (
                          'description' => '磁盘允许的最大值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'diskType' => 
                        array (
                          'description' => '磁盘存储类型。',
                          'type' => 'string',
                          'example' => 'cloud_efficiency',
                        ),
                      ),
                    ),
                  ),
                  'masterDiskList' => 
                  array (
                    'description' => '专有主节点磁盘允许值。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'scaleLimit' => 
                        array (
                          'description' => '磁盘允许设置连续值的最大值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'minSize' => 
                        array (
                          'description' => '磁盘允许的最小值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'maxSize' => 
                        array (
                          'description' => '磁盘允许的最大值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'diskType' => 
                        array (
                          'description' => '磁盘存储类型。',
                          'type' => 'string',
                          'example' => 'cloud_ssd',
                        ),
                      ),
                    ),
                  ),
                  'supportVersions' => 
                  array (
                    'description' => '支持的版本配置。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'instanceCategory' => 
                        array (
                          'description' => '实例类别，支持以下两种类别：

- advanced：增强版

- x-pack：商业版',
                          'type' => 'string',
                          'example' => 'x-pack',
                        ),
                        'supportVersionList' => 
                        array (
                          'description' => '支持的Elasticsearch版本信息。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'key' => 
                              array (
                                'description' => '售卖页支持可选的版本。',
                                'type' => 'string',
                                'example' => '5.5',
                              ),
                              'value' => 
                              array (
                                'description' => '详细版本号。',
                                'type' => 'string',
                                'example' => '5.5.3',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'masterSpec' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '专有主节点规格。',
                      'type' => 'string',
                      'example' => '["elasticsearch.sn2ne.large","elasticsearch.sn2ne.xlarge","elasticsearch.sn2ne.2xlarge","elasticsearch.sn2ne.4xlarge","elasticsearch.sn1ne.4xlarge","elasticsearch.r5.large","elasticsearch.r5.xlarge","elasticsearch.r5.2xlarge" ]',
                    ),
                  ),
                  'clientNodeSpec' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '协调节点规格。',
                      'type' => 'string',
                      'example' => '["elasticsearch.sn2ne.large","elasticsearch.sn2ne.xlarge","elasticsearch.sn2ne.2xlarge","elasticsearch.sn2ne.4xlarge","elasticsearch.sn1ne.4xlarge","elasticsearch.ic5.xlarge","elasticsearch.ic5.2xlarge","elasticsearch.ic5.3xlarge","elasticsearch.ic5.4xlarge","elasticsearch.r5.large","elasticsearch.r5.xlarge","elasticsearch.r5.2xlarge"]',
                    ),
                  ),
                  'zones' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '支持的可用区。',
                      'type' => 'string',
                      'example' => '["cn-hangzhou-b","cn-hangzhou-f"]',
                    ),
                  ),
                  'instanceSupportNodes' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '区域开放的实例节点类型。',
                      'type' => 'string',
                      'example' => '[ "WORKER", "WORKER_WARM", "COORDINATING", "KIBANA", "MASTER", "ELASTIC_WORKER" ]',
                    ),
                  ),
                  'esVersions' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '允许创建的Elasticsearch版本列表。',
                      'type' => 'string',
                      'example' => '[ "5.5.3_with_X-Pack"]',
                    ),
                  ),
                  'node' => 
                  array (
                    'description' => '节点配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'maxAmount' => 
                      array (
                        'description' => '数据节点允许的最大节点数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '50',
                      ),
                      'minAmount' => 
                      array (
                        'description' => '数据节点允许的最小节点数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                    ),
                  ),
                  'jvmConfine' => 
                  array (
                    'description' => 'Jvm校验配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'memory' => 
                      array (
                        'description' => '开启Jvm回收所需规格的内存最小值。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '32',
                      ),
                      'supportEsVersions' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '开启Jvm回收支持的Elasticsearch版本信息。',
                          'type' => 'string',
                          'example' => '["6.7.0_with_X-Pack","6.7.0_with_A-Pack","7.4.0_with_X-Pack"]',
                        ),
                      ),
                      'supportGcs' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '允许设置的Jvm回收器列表。',
                          'type' => 'string',
                          'example' => '["CMS","G1"]',
                        ),
                      ),
                    ),
                  ),
                  'clientNodeAmountRange' => 
                  array (
                    'description' => '协调节点节点数范围。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'maxAmount' => 
                      array (
                        'description' => '协调节点节点数的最大值。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '25',
                      ),
                      'minAmount' => 
                      array (
                        'description' => '协调节点节点数的最小值。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                    ),
                  ),
                  'warmNodeProperties' => 
                  array (
                    'description' => '冷节点配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'diskList' => 
                      array (
                        'description' => '磁盘配置列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'scaleLimit' => 
                            array (
                              'description' => '磁盘允许设置连续值的最大值。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2048',
                            ),
                            'minSize' => 
                            array (
                              'description' => '磁盘允许的最小值。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '500',
                            ),
                            'diskEncryption' => 
                            array (
                              'description' => '是否支持开启磁盘加密：

- true：支持

- false：不支持',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                            'maxSize' => 
                            array (
                              'description' => '磁盘允许的最大值。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5120',
                            ),
                            'diskType' => 
                            array (
                              'description' => '磁盘存储类型。',
                              'type' => 'string',
                              'example' => 'cloud_efficiency',
                            ),
                            'valueLimitSet' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '磁盘允许的离散值。',
                                'type' => 'string',
                                'example' => '[2560,3072,3584,4096,4608,5120]',
                              ),
                            ),
                          ),
                        ),
                      ),
                      'spec' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '冷节点支持的规格。',
                          'type' => 'string',
                          'example' => '["elasticsearch.sn2ne.large","elasticsearch.sn2ne.xlarge","elasticsearch.sn2ne.2xlarge","elasticsearch.sn2ne.4xlarge","elasticsearch.sn1ne.8xlarge","elasticsearch.ic5.large","elasticsearch.ic5.xlarge","elasticsearch.ic5.2xlarge","elasticsearch.ic5.3xlarge","elasticsearch.ic5.4xlarge","elasticsearch.r5.large","elasticsearch.r5.xlarge","elasticsearch.r5.2xlarge"]',
                        ),
                      ),
                      'amountRange' => 
                      array (
                        'description' => '节点数范围值。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'maxAmount' => 
                          array (
                            'description' => '节点数最大值。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '50',
                          ),
                          'minAmount' => 
                          array (
                            'description' => '节点数最小值。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '2',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'kibanaNodeProperties' => 
                  array (
                    'description' => 'Kibana节点配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '允许设置的规格列表。',
                          'type' => 'string',
                          'example' => '["elasticsearch.n4.small","elasticsearch.sn2ne.large","elasticsearch.sn2ne.xlarge","elasticsearch.sn2ne.2xlarge","elasticsearch.sn1ne.large"]',
                        ),
                      ),
                      'amountRange' => 
                      array (
                        'description' => '节点数允许值范围。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'maxAmount' => 
                          array (
                            'description' => '节点数最大值。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '20',
                          ),
                          'minAmount' => 
                          array (
                            'description' => '节点数最小值。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '1',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'elasticNodeProperties' => 
                  array (
                    'description' => '弹性节点配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'diskList' => 
                      array (
                        'description' => '磁盘配置列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'scaleLimit' => 
                            array (
                              'description' => '磁盘允许设置连续值的最大值。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2048',
                            ),
                            'minSize' => 
                            array (
                              'description' => '磁盘允许的最小值。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '500',
                            ),
                            'diskEncryption' => 
                            array (
                              'description' => '是否支持开启磁盘加密：

- true：支持

- false：不支持',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                            'maxSize' => 
                            array (
                              'description' => '磁盘允许的最大值。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5120',
                            ),
                            'diskType' => 
                            array (
                              'description' => '磁盘存储类型。',
                              'type' => 'string',
                              'example' => 'cloud_ssd',
                            ),
                            'valueLimitSet' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '磁盘允许的离散值。',
                                'type' => 'string',
                                'example' => '[2560,3072,3584,4096,4608,5120]',
                              ),
                            ),
                          ),
                        ),
                      ),
                      'spec' => 
                      array (
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '节点规格。',
                          'type' => 'string',
                          'example' => '["elasticsearch.sn2ne.large","elasticsearch.sn2ne.xlarge","elasticsearch.sn2ne.2xlarge","elasticsearch.sn2ne.4xlarge","elasticsearch.sn1ne.8xlarge","elasticsearch.ic5.large","elasticsearch.ic5.xlarge","elasticsearch.ic5.2xlarge","elasticsearch.ic5.3xlarge","elasticsearch.ic5.4xlarge","elasticsearch.r5.large","elasticsearch.r5.xlarge","elasticsearch.r5.2xlarge"]',
                        ),
                      ),
                      'amountRange' => 
                      array (
                        'description' => '冷节点节点数范围值。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'maxAmount' => 
                          array (
                            'description' => '节点数最大值。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '25',
                          ),
                          'minAmount' => 
                          array (
                            'description' => '节点数最小值。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '2',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6F******\\",\\n  \\"Result\\": {\\n    \\"env\\": \\"production\\",\\n    \\"regionId\\": \\"cn-hangzhou\\",\\n    \\"createUrl\\": \\"https://common-buy.aliyun.com/?commodityCode=elasticsearch&orderType=BUY#/buy\\",\\n    \\"dataDiskList\\": [\\n      {\\n        \\"scaleLimit\\": 2048,\\n        \\"minSize\\": 20,\\n        \\"maxSize\\": 5120,\\n        \\"diskType\\": \\"cloud_ssd\\",\\n        \\"valueLimitSet\\": [\\n          \\"[2560,3072,3584,4096,4608,5120]\\"\\n        ]\\n      }\\n    ],\\n    \\"esVersionsLatestList\\": [\\n      {\\n        \\"key\\": \\"5.5_with_X-Pack\\",\\n        \\"value\\": \\"5.5.3_with_X-Pack\\"\\n      }\\n    ],\\n    \\"nodeSpecList\\": [\\n      {\\n        \\"memorySize\\": 64,\\n        \\"cpuCount\\": 16,\\n        \\"diskType\\": \\"local_efficiency\\",\\n        \\"spec\\": \\"elasticsearch.sn2ne.large\\",\\n        \\"disk\\": 44000,\\n        \\"specGroupType\\": \\"local_efficiency\\",\\n        \\"enable\\": true\\n      }\\n    ],\\n    \\"clientNodeDiskList\\": [\\n      {\\n        \\"scaleLimit\\": 18,\\n        \\"minSize\\": 20,\\n        \\"maxSize\\": 20,\\n        \\"diskType\\": \\"cloud_efficiency\\"\\n      }\\n    ],\\n    \\"masterDiskList\\": [\\n      {\\n        \\"scaleLimit\\": 20,\\n        \\"minSize\\": 20,\\n        \\"maxSize\\": 20,\\n        \\"diskType\\": \\"cloud_ssd\\"\\n      }\\n    ],\\n    \\"supportVersions\\": [\\n      {\\n        \\"instanceCategory\\": \\"x-pack\\",\\n        \\"supportVersionList\\": [\\n          {\\n            \\"key\\": \\"5.5\\",\\n            \\"value\\": \\"5.5.3\\"\\n          }\\n        ]\\n      }\\n    ],\\n    \\"masterSpec\\": [\\n      \\"[\\\\\\"elasticsearch.sn2ne.large\\\\\\",\\\\\\"elasticsearch.sn2ne.xlarge\\\\\\",\\\\\\"elasticsearch.sn2ne.2xlarge\\\\\\",\\\\\\"elasticsearch.sn2ne.4xlarge\\\\\\",\\\\\\"elasticsearch.sn1ne.4xlarge\\\\\\",\\\\\\"elasticsearch.r5.large\\\\\\",\\\\\\"elasticsearch.r5.xlarge\\\\\\",\\\\\\"elasticsearch.r5.2xlarge\\\\\\" ]\\"\\n    ],\\n    \\"clientNodeSpec\\": [\\n      \\"[\\\\\\"elasticsearch.sn2ne.large\\\\\\",\\\\\\"elasticsearch.sn2ne.xlarge\\\\\\",\\\\\\"elasticsearch.sn2ne.2xlarge\\\\\\",\\\\\\"elasticsearch.sn2ne.4xlarge\\\\\\",\\\\\\"elasticsearch.sn1ne.4xlarge\\\\\\",\\\\\\"elasticsearch.ic5.xlarge\\\\\\",\\\\\\"elasticsearch.ic5.2xlarge\\\\\\",\\\\\\"elasticsearch.ic5.3xlarge\\\\\\",\\\\\\"elasticsearch.ic5.4xlarge\\\\\\",\\\\\\"elasticsearch.r5.large\\\\\\",\\\\\\"elasticsearch.r5.xlarge\\\\\\",\\\\\\"elasticsearch.r5.2xlarge\\\\\\"]\\"\\n    ],\\n    \\"zones\\": [\\n      \\"[\\\\\\"cn-hangzhou-b\\\\\\",\\\\\\"cn-hangzhou-f\\\\\\"]\\"\\n    ],\\n    \\"instanceSupportNodes\\": [\\n      \\"[ \\\\\\"WORKER\\\\\\", \\\\\\"WORKER_WARM\\\\\\", \\\\\\"COORDINATING\\\\\\", \\\\\\"KIBANA\\\\\\", \\\\\\"MASTER\\\\\\", \\\\\\"ELASTIC_WORKER\\\\\\" ]\\"\\n    ],\\n    \\"esVersions\\": [\\n      \\"[ \\\\\\"5.5.3_with_X-Pack\\\\\\"]\\"\\n    ],\\n    \\"node\\": {\\n      \\"maxAmount\\": 50,\\n      \\"minAmount\\": 2\\n    },\\n    \\"jvmConfine\\": {\\n      \\"memory\\": 32,\\n      \\"supportEsVersions\\": [\\n        \\"[\\\\\\"6.7.0_with_X-Pack\\\\\\",\\\\\\"6.7.0_with_A-Pack\\\\\\",\\\\\\"7.4.0_with_X-Pack\\\\\\"]\\"\\n      ],\\n      \\"supportGcs\\": [\\n        \\"[\\\\\\"CMS\\\\\\",\\\\\\"G1\\\\\\"]\\"\\n      ]\\n    },\\n    \\"clientNodeAmountRange\\": {\\n      \\"maxAmount\\": 25,\\n      \\"minAmount\\": 2\\n    },\\n    \\"warmNodeProperties\\": {\\n      \\"diskList\\": [\\n        {\\n          \\"scaleLimit\\": 2048,\\n          \\"minSize\\": 500,\\n          \\"diskEncryption\\": true,\\n          \\"maxSize\\": 5120,\\n          \\"diskType\\": \\"cloud_efficiency\\",\\n          \\"valueLimitSet\\": [\\n            \\"[2560,3072,3584,4096,4608,5120]\\"\\n          ]\\n        }\\n      ],\\n      \\"spec\\": [\\n        \\"[\\\\\\"elasticsearch.sn2ne.large\\\\\\",\\\\\\"elasticsearch.sn2ne.xlarge\\\\\\",\\\\\\"elasticsearch.sn2ne.2xlarge\\\\\\",\\\\\\"elasticsearch.sn2ne.4xlarge\\\\\\",\\\\\\"elasticsearch.sn1ne.8xlarge\\\\\\",\\\\\\"elasticsearch.ic5.large\\\\\\",\\\\\\"elasticsearch.ic5.xlarge\\\\\\",\\\\\\"elasticsearch.ic5.2xlarge\\\\\\",\\\\\\"elasticsearch.ic5.3xlarge\\\\\\",\\\\\\"elasticsearch.ic5.4xlarge\\\\\\",\\\\\\"elasticsearch.r5.large\\\\\\",\\\\\\"elasticsearch.r5.xlarge\\\\\\",\\\\\\"elasticsearch.r5.2xlarge\\\\\\"]\\"\\n      ],\\n      \\"amountRange\\": {\\n        \\"maxAmount\\": 50,\\n        \\"minAmount\\": 2\\n      }\\n    },\\n    \\"kibanaNodeProperties\\": {\\n      \\"spec\\": [\\n        \\"[\\\\\\"elasticsearch.n4.small\\\\\\",\\\\\\"elasticsearch.sn2ne.large\\\\\\",\\\\\\"elasticsearch.sn2ne.xlarge\\\\\\",\\\\\\"elasticsearch.sn2ne.2xlarge\\\\\\",\\\\\\"elasticsearch.sn1ne.large\\\\\\"]\\"\\n      ],\\n      \\"amountRange\\": {\\n        \\"maxAmount\\": 20,\\n        \\"minAmount\\": 1\\n      }\\n    },\\n    \\"elasticNodeProperties\\": {\\n      \\"diskList\\": [\\n        {\\n          \\"scaleLimit\\": 2048,\\n          \\"minSize\\": 500,\\n          \\"diskEncryption\\": true,\\n          \\"maxSize\\": 5120,\\n          \\"diskType\\": \\"cloud_ssd\\",\\n          \\"valueLimitSet\\": [\\n            \\"[2560,3072,3584,4096,4608,5120]\\"\\n          ]\\n        }\\n      ],\\n      \\"spec\\": [\\n        \\"[\\\\\\"elasticsearch.sn2ne.large\\\\\\",\\\\\\"elasticsearch.sn2ne.xlarge\\\\\\",\\\\\\"elasticsearch.sn2ne.2xlarge\\\\\\",\\\\\\"elasticsearch.sn2ne.4xlarge\\\\\\",\\\\\\"elasticsearch.sn1ne.8xlarge\\\\\\",\\\\\\"elasticsearch.ic5.large\\\\\\",\\\\\\"elasticsearch.ic5.xlarge\\\\\\",\\\\\\"elasticsearch.ic5.2xlarge\\\\\\",\\\\\\"elasticsearch.ic5.3xlarge\\\\\\",\\\\\\"elasticsearch.ic5.4xlarge\\\\\\",\\\\\\"elasticsearch.r5.large\\\\\\",\\\\\\"elasticsearch.r5.xlarge\\\\\\",\\\\\\"elasticsearch.r5.2xlarge\\\\\\"]\\"\\n      ],\\n      \\"amountRange\\": {\\n        \\"maxAmount\\": 25,\\n        \\"minAmount\\": 2\\n      }\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取区域信息',
      'summary' => '获取当前的区域信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => '> 以上的示例值仅供参考，以接口实际返回值为准。 ',
      'extraInfo' => ' ',
    ),
    'ListAckNamespaces' => 
    array (
      'path' => '/openapi/ack-clusters/{ClusterId}/namespaces',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页数。（已废弃）',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页包含的记录数。（已废弃）',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ClusterId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '目标集群id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c79acd3fbf462423fb6450e513bb6****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求id。',
                'type' => 'string',
                'example' => '95789100-A329-473B-9D14-9E0B7DB4BD5A',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回结果。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'namespace' => 
                    array (
                      'description' => '集群的命名空间。',
                      'type' => 'string',
                      'example' => 'logging',
                    ),
                    'status' => 
                    array (
                      'description' => '命名空间状态。',
                      'type' => 'string',
                      'example' => 'Active',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"95789100-A329-473B-9D14-9E0B7DB4BD5A\\",\\n  \\"Result\\": [\\n    {\\n      \\"namespace\\": \\"logging\\",\\n      \\"status\\": \\"Active\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取ack命名空间列表',
      'summary' => '查看指定容器服务Kubernetes版ACK（Container Service for Kubernetes）集群的所有命名空间。',
      'description' => '不建议使用，即将下线。',
    ),
    'InstallAckOperator' => 
    array (
      'summary' => '在指定容器服务集群上安装 Ack Operator。',
      'path' => '/openapi/ack-clusters/{ClusterId}/operator',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '目标集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'c79acd3fbf462423fb6450e513bb6****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果。支持：

- true：安装成功
- false：安装失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EFA88951-7A6F-4A8E-AB8F-2BB7132BA751',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"EFA88951-7A6F-4A8E-AB8F-2BB7132BA751\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '安装 Ack Operator',
      'description' => '> 在ACK集群上安装采集器前，需要先调用该接口，在目标集群上安装Elasticsearch Operator。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InstallUserPlugins' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/plugins/user/actions/install',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-i7m27ausp001l****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6F*****',
              ),
              'Result' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'description' => '请求安装的插件列表。如果安装失败，系统会返回对应的错误码，请参考错误码进行问题定位。',
                  'type' => 'string',
                  'example' => '["pluginName1.zip", "pluginName2.zip"]',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6F*****\\",\\n  \\"Result\\": [\\n    \\"[\\\\\\"pluginName1.zip\\\\\\", \\\\\\"pluginName2.zip\\\\\\"]\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '安装自定义插件',
      'summary' => '调用InstallUserPlugins，安装用户自定义的已经上传至Elasticsearch控制台的插件。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定自定义插件列表。
| 参数 | 类型 | 是否必须 | 示例值 | 描述 |
| --- | --- | --- | --- | --- |
| RequestBody | Array |  |  |  |
| └ name | String | 是 | pluginName1.zip | 用户自定义的已经上传至Elasticsearch控制台的插件。 |

└表示子参数。

示例如下：

```
[
    {"name": "pluginName1.zip"},
    {"name": "pluginName2.zip"}
]

```
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RecommendTemplates' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/recommended-templates',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '64346',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREelasticsearchFBYZT8',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '集群ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-oew20apwz0007****',
          ),
        ),
        1 => 
        array (
          'name' => 'usageScenario',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '集群使用的场景化模板类型。可选值：

- general：通用场景
- analysisVisualization：数据分析场景
- dbAcceleration：数据库加速场景
- search：搜索场景
- log：日志场景

> 商业版实例支持通用场景、数据分析场景、数据库加速场景和搜索场景；日志增强版仅支持日志场景。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'general',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '66B060CF-7381-49C7-9B89-7757927FDA16',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'content' => 
                    array (
                      'description' => '模板配置内容。',
                      'type' => 'string',
                      'example' => '{\\n\\t\\"persistent\\": {\\n\\t\\t\\"search\\": {\\n\\t\\t\\t\\"max_buckets\\": \\"10000\\"\\n\\t\\t}\\n\\t}\\n}',
                    ),
                    'templateName' => 
                    array (
                      'description' => '模板名称。支持：
- staticSettings：集群静态配置
- dynamicSettings：集群动态配置
- indexTemplate：索引模板配置
- ilmPolicy：索引生命周期配置

> 6.7.0及以上版本的日志增强版实例，支持启用索引生命周期模板。',
                      'type' => 'string',
                      'example' => 'dynamicSettings',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"66B060CF-7381-49C7-9B89-7757927FDA16\\",\\n  \\"Result\\": [\\n    {\\n      \\"content\\": \\"{\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\\"persistent\\\\\\\\\\\\\\": {\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\\"search\\\\\\\\\\\\\\": {\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\\"max_buckets\\\\\\\\\\\\\\": \\\\\\\\\\\\\\"10000\\\\\\\\\\\\\\"\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\n\\\\\\\\t}\\\\\\\\n}\\",\\n      \\"templateName\\": \\"dynamicSettings\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取推荐模板列表',
      'summary' => '调用RecommendTemplates，获取推荐的集群配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ValidateSlrPermission' => 
    array (
      'path' => '/openapi/user/servicerolepermission',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '64400',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREelasticsearchZEMBRN',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        1 => 
        array (
          'name' => 'rolename',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务关联角色名称。可选值：

<props="china">- AliyunServiceRoleForElasticsearchOps：执行集群弹性扩缩容任务</props>- AliyunServiceRoleForElasticsearchCollector：创建和管理Beats采集器',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'AliyunServiceRoleForElasticsearchCollector',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '是否已创建服务关联角色。支持：

- true：已创建
- false：未创建',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BC4ED7DD-8C84-49B5-8A95-456F82E44D13',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"BC4ED7DD-8C84-49B5-8A95-456F82E44D13\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '验证SLR权限',
      'summary' => '验证当前账户SLR权限。',
      'description' => '> 在通过采集器采集来自不同数据源的日志时，需要先授权创建服务关联角色。您可以调用此接口，验证是否已经创建。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InitializeOperationRole' => 
    array (
      'summary' => '调用InitializeOperationRole，创建服务关联角色。',
      'path' => '/openapi/user/slr',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果。支持：

- true：创建成功
- false：创建失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '29101430-4797-4D1D-96C3-9FCBCCA8F845',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"29101430-4797-4D1D-96C3-9FCBCCA8F845\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '创建服务关联角色',
      'description' => '> 通过采集器采集不同数据源的日志，或执行集群弹性扩缩容任务（是适用于中国站）时，需要先授权创建服务关联角色。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定待创建的服务关联角色的名称。
| 名称 | 类型 | 是否必选 |  示例值 | 描述 |
|--------|-------|--------------|-----------|--------|
| rolename | String | 是 |  AliyunServiceRoleForElasticsearchCollector | 服务关联角色名称。可选值： AliyunServiceRoleForElasticsearchOps（执行集群弹性扩缩容任务角色，只适用于中国站）、AliyunServiceRoleForElasticsearchCollector（创建和管理Beats采集器）。|
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListPlugins' => 
    array (
      'summary' => '获取指定阿里云Elasticsearch实例的插件列表。',
      'path' => '/openapi/instances/{InstanceId}/plugins',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        1 => 
        array (
          'name' => 'name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'analysis-ik',
          ),
        ),
        2 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页数。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件来源类型，仅支持SYSTEM（系统插件）。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'SYSTEM',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5A5D8E74-565C-43DC-B031-29289FA9****',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '返回的总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'description' => 
                    array (
                      'description' => '插件描述。',
                      'type' => 'string',
                      'example' => 'IK analysis plug-in for Elasticsearch.',
                    ),
                    'specificationUrl' => 
                    array (
                      'description' => '插件说明文档的地址。',
                      'type' => 'string',
                      'example' => 'https://xxxx.html',
                    ),
                    'state' => 
                    array (
                      'description' => '插件状态。',
                      'type' => 'string',
                      'example' => 'INSTALLED',
                    ),
                    'source' => 
                    array (
                      'description' => '插件来源类型。',
                      'type' => 'string',
                      'example' => 'SYSTEM',
                    ),
                    'name' => 
                    array (
                      'description' => '插件名称。',
                      'type' => 'string',
                      'example' => 'analysis-ik',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5A5D8E74-565C-43DC-B031-29289FA9****\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 2\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"description\\": \\"IK analysis plug-in for Elasticsearch.\\",\\n      \\"specificationUrl\\": \\"https://xxxx.html\\",\\n      \\"state\\": \\"INSTALLED\\",\\n      \\"source\\": \\"SYSTEM\\",\\n      \\"name\\": \\"analysis-ik\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取实例插件列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InstallSystemPlugin' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/plugins/system/actions/install',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
              'Result' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'description' => '请求安装的插件列表。',
                  'type' => 'string',
                  'example' => '["aliyun-sql"]',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\",\\n  \\"Result\\": [\\n    \\"[\\\\\\"aliyun-sql\\\\\\"]\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '安装ES系统插件',
      'summary' => 'Elasticsearch实例安装系统插件。',
      'requestParamsDescription' => '## RequestBody
   
RequestBody中还需要填入待安装的插件名称，格式为`["plugin_name1","plugin_name2",...,"plugin_namen"]`，例如`["aliyun-sql","codec-compression"]`。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UninstallPlugin' => 
    array (
      'summary' => 'Elasticsearch实例卸载系统插件。',
      'path' => '/openapi/instances/{InstanceId}/plugins/actions/uninstall',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'force',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否强制卸载。可取消安装正在安装中的插件，仅限于新架构实例。默认值：false。',
            'type' => 'boolean',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
              'Result' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'description' => '请求卸载的插件列表，失败则异常返回。',
                  'type' => 'string',
                  'example' => '["aliyun-mysql"]',
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\",\\n  \\"Result\\": [\\n    \\"[\\\\\\"aliyun-mysql\\\\\\"]\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'UninstallPlugin',
      'requestParamsDescription' => '## RequestBody
   
  RequestBody中还需要填入待卸载的插件名称，格式为`["pluginname1","pluginname2",…,"plugin_namen"]`，例如`["aliyun-sql","codec-compression"]`。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetEmonMonitorData' => 
    array (
      'path' => '/openapi/emon/projects/{ProjectId}/metrics/query',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProjectId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '项目ID，格式为`es-当前账号ID`。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-185320276651****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'description' => '指定指标监控参数。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '{     "start": 1522127381471,      "queries": [     {         "metric": "elasticbuild.elasticsearch.source.total_doc_count",         "aggregator": "sum",         "downsample": "avg",          "tags": {           "taskName": "et-testtsk",           "userId":"123456"          },          "granularity": "1m"        }     ],      "limit": "",       "end": 1522129151000 }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '请求状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '请求结果。',
                'type' => 'string',
                'example' => '""',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2D184B55-FA51-43F7-A1EF-E68A0545****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功：
- true：成功
- false：不成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'integrity' => 
                    array (
                      'description' => '指标查询返回的结果里，时序曲线数据点的完整度。1.0表示100%完整。',
                      'type' => 'number',
                      'format' => 'float',
                      'example' => '1.0',
                    ),
                    'summary' => 
                    array (
                      'description' => 'queries里如果有通配符，result会包含多条匹配到的时间序列数据，summary是在每个时间点上对这些时间线的value集合，按照query里提供的aggregator类型来聚合。目前聚合方式仅支持avg。',
                      'type' => 'number',
                      'format' => 'float',
                      'example' => '10',
                    ),
                    'messageWatermark' => 
                    array (
                      'description' => '请求到达服务端的时间戳，用于排查问题。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1522127381471',
                    ),
                    'dps' => 
                    array (
                      'description' => '指标实时监控数据。格式为`{时间戳:数据}`。',
                      'type' => 'object',
                      'example' => ' { "1586249280": 465.1980465119913, "1586249300": 213.45243650423305 }',
                    ),
                    'tags' => 
                    array (
                      'description' => '查询标签。

',
                      'type' => 'object',
                      'example' => '{"taskName":"et-xxx","userId":"123456"}',
                    ),
                    'metric' => 
                    array (
                      'description' => '指标名称。',
                      'type' => 'string',
                      'example' => 'elasticbuild.elasticsearch.source.total_doc_count',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"\\\\\\"\\\\\\"\\",\\n  \\"RequestId\\": \\"2D184B55-FA51-43F7-A1EF-E68A0545****\\",\\n  \\"Success\\": true,\\n  \\"Result\\": [\\n    {\\n      \\"integrity\\": 1,\\n      \\"summary\\": 10,\\n      \\"messageWatermark\\": 1522127381471,\\n      \\"dps\\": {\\n        \\"1586249280\\": 465.1980465119913,\\n        \\"1586249300\\": 213.45243650423305\\n      },\\n      \\"tags\\": {\\n        \\"taskName\\": \\"et-xxx\\",\\n        \\"userId\\": \\"123456\\"\\n      },\\n      \\"metric\\": \\"elasticbuild.elasticsearch.source.total_doc_count\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查询实例的Grafana指标监控数据',
      'summary' => '查询Elasticsearch实例的Grafana指标监控数据。',
      'requestParamsDescription' => '## RequestBody

| 参数名 | 类型 | 是否必填 | 示例值 | 描述 |
| -------- | -------- | -------- | -------- | -------- |
|start | Long | 是 | 1522127381471 | 指标监控开始的时间戳。单位：毫秒。|
|expression | String | 否 |  a+b | 指标数据查询表达式。|
|queries | List | 是 |  | 指标查询条件。|
| └id | String | 否 | a | 查询条件queries如果用到了表达式expression，queries json数组里会描述expression里参与运算的指标，id就是每个指标在expression里的代数符号，真正的指标名称在queries数组的每个元素里。|
| └metric | String | 是  | elasticbuild.elasticsearch.source.total_doc_count  | 指标名称。|
| └aggregator | String | 是 | sum | 指标按tags维度聚合方式。即对指标按给定的tags group by，进行sum、avg、max、min等聚合运算。|
| └downsample | String | 是 | avg | 指标按时间精度聚合方式。即对指标在[start,end]窗口内的时间线，在时间维度降精度，例如把20s精度聚合为1min、10min、1hour精度，根据时间窗口的大小会自动降精度。|
| └tags | Map | 是 | [env,dev] | 指标查询标签。格式为[key,value]，key要明确指定，value支持通配符，使用通配符可返回满足条件的多序列数据。|
| └granularity | String | 是 | 1m | 指标查询的时间精度。范围为[start,end]。单位：毫秒。 |
|limit | String | 是 |"100 "| 限定返回结果集的大小。为空则不限制，返回所有查询数据。一般用于tags里value使用通配符，返回结果集非常大的情况。|
|end | String | 是 | 1522129151000 | 指标监控结束的时间戳。单位：毫秒。|

> └表示子参数。

示例如下。

```
{
    "start": 1522127381471, 
    "queries": [
    {
        "metric": "elasticbuild.elasticsearch.source.total_doc_count",
        "aggregator": "sum",
        "downsample": "avg", 
        "tags": {
          "taskName": "et-testtsk",
          "userId":"123456" 
        }, 
        "granularity": "1m" 
      }
    ], 
    "limit": "",  
    "end": 1522129151000
}
```',
      'responseParamsDescription' => '以下返回示例中，本文只保证包含返回数据列表中的参数，而未提到的参数仅供参考，程序中不能强制依赖获取这些参数。',
      'extraInfo' => ' ',
    ),
    'DescribeElasticsearchHealth' => 
    array (
      'summary' => '查看集群运行的健康状态，是否正常运行。',
      'path' => '/openapi/instances/{InstanceId}/elasticsearch-health',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '请求ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-tl325wxga000l****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => 'success',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0731F217-2C8A-4D42-8BCD-5C352866E3B7',
              ),
              'Result' => 
              array (
                'description' => '返回的实例健康状态。',
                'type' => 'string',
                'example' => 'GREEN',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"success\\",\\n  \\"RequestId\\": \\"0731F217-2C8A-4D42-8BCD-5C352866E3B7\\",\\n  \\"Result\\": \\"GREEN\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查看集群健康状态',
      'description' => '实例健康情况，支持以下三种状态：

- GREEN：主、副分片分配正常。

- YELLOW：主分片正常分配，副本未正常分配。

- RED：主分片未正常分配。

',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetEmonGrafanaAlerts' => 
    array (
      'summary' => '调用GetEmonGrafanaAlerts，获取Grafana报警列表。',
      'path' => '/openapi/emon/projects/{ProjectId}/grafana/proxy/api/alerts',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProjectId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '监控报警项目ID，格式为**es-<yourUID>**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-133071096032****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'description' => '请求体，无需填写。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '空',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => '""',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '08FA74C7-5654-4309-9729-D555AF587B7F',
              ),
              'Success' => 
              array (
                'description' => '是否成功获取Grafana报警列表：

- true：成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"\\\\\\"\\\\\\"\\",\\n  \\"RequestId\\": \\"08FA74C7-5654-4309-9729-D555AF587B7F\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取Grafana报警列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetEmonGrafanaDashboards' => 
    array (
      'summary' => '调用GetEmonGrafanaDashboards，获取Grafana大盘列表。',
      'path' => '/openapi/emon/projects/{ProjectId}/grafana/proxy/api/search',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProjectId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '监控报警项目ID，格式为**es-<yourUID>**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-133071096032****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'description' => '请求体参数，无需填写。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '空',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => '""',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1E9D9827-2092-4385-9DA1-FC5A8D1DB3F5',
              ),
              'Success' => 
              array (
                'description' => '是否成功获取Grafana大盘列表：

- true：成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"\\\\\\"\\\\\\"\\",\\n  \\"RequestId\\": \\"1E9D9827-2092-4385-9DA1-FC5A8D1DB3F5\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取Grafana大盘列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PostEmonTryAlarmRule' => 
    array (
      'path' => '/openapi/emon/projects/{ProjectId}/alarm-groups/{AlarmGroupId}/alarm-rules/_test',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProjectId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '监控报警项目ID，格式为**es-<yourUID>**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-133071096032****',
          ),
        ),
        1 => 
        array (
          'name' => 'AlarmGroupId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '从[GetEmonGrafanaAlerts](~~254890~~)接口中获取的报警列表中的ID之一。您可以按需求指定具体的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '123',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'description' => '指定待发送的测试报警消息。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '{     "alarmRuleName": "test_alarm_rule",      "channel": {         "sms": true,          "dingWebHook": true,          "phone": true     },      "receivers": [         {             "id": 33,              "contactGroup": true         },          {             "id": 19,              "contactGroup": false         }     ] }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => '""',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3EC5731F-0944-4E4F-9DD5-1F976B3FCC3D',
              ),
              'Success' => 
              array (
                'description' => '报警消息是否发送成功：true（发送成功）、 false（发送失败）。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'boolean',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"\\\\\\"\\\\\\"\\",\\n  \\"RequestId\\": \\"3EC5731F-0944-4E4F-9DD5-1F976B3FCC3D\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<PostEmonTryAlarmRuleResponse>\\n    <Code>200</Code>\\n    <Message>\\"\\"</Message>\\n    <RequestId>3EC5731F-0944-4E4F-9DD5-1F976B3FCC3D</RequestId>\\n    <Success>true</Success>\\n</PostEmonTryAlarmRuleResponse>","errorExample":""}]',
      'title' => '发送报警消息',
      'summary' => '调用PostEmonTryAlarmRule，发送测试的报警消息。',
      'description' => '> 此API接口每小时最多被调用10次。',
      'requestParamsDescription' => '** RequestBody**

RequestBody中还需要填入以下参数，用来指定待发送的测试报警消息。
| 参数 | 类型 | 是否必要 | 示例值 | 描述 |
| --- | --- | --- | --- | --- |
| alarmRuleName | String | 是 | test_rule | 测试的报警规则名称。 |
| AlarmChannel | Object | 是 |  | 通知方式。 |
| └phone | Boolean | 否 | true | 是否打电话：true（打电话）、false（不打电话）。 |
| └sms | Boolean | 否 | true | 是否发短信：true（发短信）、false（不发短信）。 |
| └dingWebHook | Boolean | 否 | true | 是否发钉钉消息：true（发钉钉消息）、false（不发钉钉消息）。 |
| receivers | List | 是 |  | 消息接收人列表。 |
| └id | long | 是 | 19 | 联系人或者联系人组ID。 |
| └contactGroup | Boolean | 否 | false | 此ID是否是联系人组ID：true（是联系人组ID）、false（不是联系人组ID）。 |


> └表示子参数。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListSearchLog' => 
    array (
      'summary' => '查看ES实例不同类型的日志。',
      'path' => '/openapi/instances/{InstanceId}/search-log',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'title' => '',
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志类型。可选值：
- INSTANCELOG：主日志。
- SEARCHSLOW：searching慢日志。
- INDEXINGSLOW：indexing慢日志。
- JVMLOG：GC日志。
- ES_SEARCH_ACCESS_LOG：ES访问日志。
- AUDIT：审计日志。

查看日志的相关限制信息，请参见[查询日志](~~72026~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'INSTANCELOG',
          ),
        ),
        2 => 
        array (
          'name' => 'query',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的关键词。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'host:172.16.**.** AND content:netty',
          ),
        ),
        3 => 
        array (
          'name' => 'beginTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志开始时间戳，单位：毫秒。必须为最近7天内的时间，如果不填会查询\\[当前时间-7天,endTime\\]范围内的所有日志。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '1531910852074',
          ),
        ),
        4 => 
        array (
          'name' => 'endTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志结束时间戳，单位：毫秒。必须为最近7天内的时间，建议填写，如果不填返回结果为空。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '1531910852074',
          ),
        ),
        5 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件列表的页码。起始值：1，默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页条数。默认值：20，最小值：1，最大值：50。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7F40EAA1-6F1D-4DD9-8DB8-C5F00C4E****',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '实例总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1000',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '请求返回的日志列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'level' => 
                    array (
                      'description' => '日志等级。取值包括：

- warn：警告日志
- info：信息日志
- error：错误日志
- trace：跟踪日志
- debug：调试日志

level信息已迁移至contentCollection字段中。',
                      'type' => 'string',
                      'example' => 'info',
                    ),
                    'host' => 
                    array (
                      'description' => '生成日志的节点的IP地址。',
                      'type' => 'string',
                      'example' => '192.168.**.**',
                    ),
                    'content' => 
                    array (
                      'description' => '日志详细内容。已迁移至contentCollection字段中。',
                      'type' => 'string',
                      'example' => '[GC (Allocation Failure) 2018-07-19T17:24:20.682+0800: 7516.513: [ParNew: 6604768K->81121K(7341504K), 0.0760606 secs] 7226662K->703015K(31813056K), 0.0762507 secs] [Times: user=0.52 sys=0.00, real=0.07 secs] ',
                    ),
                    'timestamp' => 
                    array (
                      'description' => '日志生成的时间戳，单位为ms。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1531985112420',
                    ),
                    'contentCollection' => 
                    array (
                      'description' => '日志详细信息。不同的日志类型，返回不同的内容字段。',
                      'type' => 'object',
                      'example' => '{"level": "info", "host": "192.168.**.**", "time": "2019-03-18T08:16:12.741Z","content": "[o.e.c.r.a.AllocationService] [MnNASM_] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[my_index][3]] ...])."}',
                    ),
                    'instanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'es-cn-n6w1o1x0w001c****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
        ),
        '4XX' => 
        array (
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7F40EAA1-6F1D-4DD9-8DB8-C5F00C4E****\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 1000\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"level\\": \\"info\\",\\n      \\"host\\": \\"192.168.**.**\\",\\n      \\"content\\": \\"[GC (Allocation Failure) 2018-07-19T17:24:20.682+0800: 7516.513: [ParNew: 6604768K->81121K(7341504K), 0.0760606 secs] 7226662K->703015K(31813056K), 0.0762507 secs] [Times: user=0.52 sys=0.00, real=0.07 secs] \\",\\n      \\"timestamp\\": 1531985112420,\\n      \\"contentCollection\\": {\\n        \\"level\\": \\"info\\",\\n        \\"host\\": \\"192.168.**.**\\",\\n        \\"time\\": \\"2019-03-18T08:16:12.741Z\\",\\n        \\"content\\": \\"[o.e.c.r.a.AllocationService] [MnNASM_] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[my_index][3]] ...]).\\"\\n      },\\n      \\"instanceId\\": \\"es-cn-n6w1o1x0w001c****\\"\\n    }\\n  ]\\n}","errorExample":"{}"},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查看实例日志',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => 'Result.contentCollection中包含以下参数。
|  名称  | 类型  | 示例值  | 描述  |
|  ----  | ----  | ----  | ----  |
| time | String |  2020-07-21T11:12:53.057Z  |日志产生的时间。|
| content | String | [o.e.c.r.a.AllocationService] [MnNASM_] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[my_index][3]] ...]).| 日志详细内容。|
| host |String| 192.168.\\*\\*.\\*\\* |  生成日志的节点IP。 |
| level | String | warn | 日志等级。取值包括： warn（警告日志）、info（信息日志）、error（错误日志）、trace（跟踪日志）、debug（调试日志）。|
',
      'extraInfo' => ' ',
    ),
    'AddConnectableCluster' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/connected-clusters',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '当前实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'description' => '远程实例ID。用来指定需要进行网络互通的远程实例ID，要求与当前实例在同一专有网络下。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '{     "instanceId":"es-cn-09k1rgid9000g****" }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：配置成功
- false：配置失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5A5D8E74-565C-43DC-B031-29289FA****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5A5D8E74-565C-43DC-B031-29289FA****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '配置实例网络互通',
      'summary' => '配置网络互通，完成不同实例的连接。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteConnectedCluster' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/connected-clusters',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '当前实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'connectedInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '已进行网络互通的远程实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-09k1rgid9000g****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：移除互通实例成功
- false：移除互通实例失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '移除互通实例',
      'summary' => '删除两个实例之间的网络互通。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdatePrivateNetworkWhiteIps' => 
    array (
      'summary' => '更新指定实例的VPC私网访问白名单。',
      'path' => '/openapi/instances/{InstanceId}/private-network-white-ips',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => ' es-cn-tl329rbpc0001****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'modifyMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改方式，取值含义如下：

- Cover（默认值）：使用ips参数的值覆盖原IP白名单。

- Append：在原IP白名单中增加ips参数中输入的IP地址。

- Delete：在原IP白名单中删除ips参数中输入的IP地址，至少需要保留一个IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'Cover',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6DEBE5EE-0368-4757-8F82-EF9C3972****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'privateNetworkIpWhiteList' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'VPC私网访问白名单列表。',
                      'type' => 'string',
                      'example' => '["192.168.XX.XX/25"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6DEBE5EE-0368-4757-8F82-EF9C3972****\\",\\n  \\"Result\\": {\\n    \\"privateNetworkIpWhiteList\\": [\\n      \\"[\\\\\\"192.168.XX.XX/25\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改实例的VPC私网访问白名单',
      'description' => '## 注意事项

- 当实例状态为生效中（activating）、失效（invalid）和冻结（inactive）时，无法更新实例的VPC私网访问白名单。
- 您可以通过两种方式更新白名单：IP白名单列表和IP白名单组。两种方式不能同时使用，且除了InstanceId和clientToken外，两种方式支持配置的参数也不同，具体如下：
    - IP白名单列表：privateNetworkIpWhiteList
    - IP白名单组：modifyMode、whiteIpGroup
- 公网访问白名单不支持配置私网IP地址，私网访问白名单不支持配置公网IP地址。
',
      'requestParamsDescription' => '## RequestBody
|参数|类型|是否必选|示例值|描述|
| ----- | ----- | ----- | ----- | ----- |
|privateNetworkIpWhiteList|List<String>|否|["0.0.XX.XX","10.2.XX.XX","192.168.XX.XX/25"]|IP地址白名单列表。whiteIpGroup为空时可用，该参数值会更新Default白名单分组中的IP白名单配置。<br>不支持同时配置privateNetworkIpWhiteList和whiteIpGroup。|
|whiteIpGroup|Object|否| |以白名单组方式更新实例白名单配置，仅支持更新一个白名单组。<br>不支持同时配置privateNetworkIpWhiteList和whiteIpGroup。|
|└ groupName|String|否|test_group_name|白名单组的组名。如果选填了whiteIpGroup参数，则该参数必填。|
|└ ips|List<String>|否|["0.0.0.0", "10.2.XX.XX"]|白名单组中的IP地址列表。如果选填了whiteIpGroup参数，则该参数必填。|

><notice> 白名单组的增加和删除是由modifyMode为Cover的调用来实现的，Delete和Append无法实现白名单组粒度的增删，只能修改白名单组中的IP地址列表。具体说明如下：

- modifyMode为Cover时，如果ips为空，则删除该白名单组。如果groupName不在已有白名单组组名的列表中，则会新建一个白名单组。
- modifyMode为Delete时，删除后的ips至少需要保留一个IP地址。
- modifyMode为Append时，需要保证白名单组组名为已创建，否则会提示NotFound的错误。

></notice>
',
      'responseParamsDescription' => '> 下文返回示例中，本文只保证包含返回数据列表中的参数，而未提到的参数仅供参考，参数说明可参见[ListInstance](~~142230~~)。程序中不能强制依赖获取这些参数。',
      'extraInfo' => ' ',
    ),
    'UpdatePublicWhiteIps' => 
    array (
      'summary' => '更新指定Elasticsearch实例的公网地址访问白名单。',
      'path' => '/openapi/instances/{InstanceId}/public-white-ips',
      'methods' => 
      array (
        0 => 'patch',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-tl329rbpc0001****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'modifyMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改方式，取值含义如下：

- Cover（默认值）：使用ips参数的值覆盖原IP白名单。

- Append：在原IP白名单中增加ips参数中输入的IP地址。

- Delete：在原IP白名单中删除ips参数中输入的IP地址，至少需要保留一个IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'Cover',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C82758DD-282F-4D48-934F-92170A33****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'publicIpWhitelist' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '公网地址访问白名单列表。',
                      'type' => 'string',
                      'example' => '["0.0.0.0","10.2.XX.XX","110.0.XX.XX/8"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C82758DD-282F-4D48-934F-92170A33****\\",\\n  \\"Result\\": {\\n    \\"publicIpWhitelist\\": [\\n      \\"[\\\\\\"0.0.0.0\\\\\\",\\\\\\"10.2.XX.XX\\\\\\",\\\\\\"110.0.XX.XX/8\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更新实例公网地址访问白名单',
      'description' => '## 注意事项
- 当实例状态为生效中（activating）、失效（invalid）和冻结（inactive）时，无法更新实例的公网地址访问白名单。
- 您可以通过两种方式更新白名单：IP白名单列表和IP白名单组。两种方式不能同时使用，且除了InstanceId和clientToken外，两种方式支持配置的参数也不同，具体如下：   
    - IP白名单列表：publicIpWhitelist
    - IP白名单组：modifyMode、whiteIpGroup
- 公网访问白名单不支持配置私网IP地址，私网访问白名单不支持配置公网IP地址。',
      'requestParamsDescription' => '## RequestBody
|参数|类型|是否必选|示例值|描述|
| ----- | ----- |----- |------| ------|
|publicIpWhitelist|List<String>|是|["0.0.0.0/0","0.0.0.0/1"]|IP地址白名单列表。whiteIpGroup为空时可用，该参数值会更新Default白名单分组中的IP白名单配置。<br>不支持同时配置publicIpWhitelist和whiteIpGroup。|
|whiteIpGroup|Object|否| |以白名单组方式更新实例白名单配置，仅支持更新一个白名单组。<br>不支持同时配置publicIpWhitelist和whiteIpGroup。 |
|└ groupName|String |否 |test_group_name| 白名单组的组名。如果选填了whiteIpGroup参数，则该参数必填。|
|└ ips| List<String> |否 |["0.0.0.0", "10.2.XX.XX"]| 白名单组中的IP列表。如果选填了whiteIpGroup参数，则该参数必填。|

><notice> 白名单组的增加和删除是由modifyMode为Cover的调用来实现的，Delete和Append无法实现白名单组粒度的增删，只能修改白名单组中的IP地址列表。具体说明如下：

- modifyMode为Cover时，如果ips为空，则删除该白名单组。如果groupName不在已有白名单组组名的列表中，则会新建一个白名单组。
- modifyMode为Delete时，删除后的ips至少需要保留一个IP地址。
- modifyMode为Append时，需要保证白名单组组名为已创建，否则会提示NotFound的错误。

></notice>

',
      'responseParamsDescription' => '> 下文返回示例中，本文只保证包含返回数据列表中的参数，而未提到的参数仅供参考，参数说明请参见[ListInstance](~~142230~~)。程序中不能强制依赖获取这些参数。',
      'extraInfo' => ' ',
    ),
    'UpdatePublicNetwork' => 
    array (
      'summary' => '开启或关闭指定Elasticsearch实例的公网地址。',
      'path' => '/openapi/instances/{InstanceId}/public-network',
      'methods' => 
      array (
        0 => 'patch',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2A88ECA1-D827-4581-AD39-05149586****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'enablePublic' => 
                  array (
                    'description' => '公网地址开关状态。
',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2A88ECA1-D827-4581-AD39-05149586****\\",\\n  \\"Result\\": {\\n    \\"enablePublic\\": false\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '开启或关闭实例公网地址',
      'description' => '调用该接口时，请注意：<br>
当实例状态为生效中（activating）、失效（invalid）和冻结（inactive）时，无法更新信息。',
      'requestParamsDescription' => '## RequestBody
您还可以在RequestBody中填入**enablePublic**参数（可选，默认为false）。Boolean类型，为true时表示开启公网地址访问，为false时表示关闭公网地址访问，示例如下。

```
{
  "enablePublic": true
}
```',
      'responseParamsDescription' => '> 下文返回示例中，本文只保证包含返回数据列表中的参数，而未提到的参数仅供参考，参数说明请参见[ListInstance](~~142230~~)。程序中不能强制依赖获取这些参数。',
      'extraInfo' => ' ',
    ),
    'UpdateAdminPassword' => 
    array (
      'summary' => '更新指定Elasticsearch实例的elastic账号的密码。',
      'path' => '/openapi/instances/{InstanceId}/admin-pwd',
      'methods' => 
      array (
        0 => 'patch',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体参数。',
            'type' => 'object',
            'properties' => 
            array (
              'esAdminPassword' => 
              array (
                'title' => 'Elasticsearch实例的elastic账号的密码。',
                'description' => '指定更新后的密码。
> 密码长度为8~32个字符，必须同时包含三项：大写字母、小写字母、特殊字符：!@#$%^&*()_+-=。',
                'type' => 'string',
                'required' => false,
                'example' => 'es_password',
                'maxLength' => 32,
                'minLength' => 8,
              ),
            ),
            'required' => false,
            'docRequired' => false,
            'example' => '{   "esAdminPassword": "es_password*" }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0FA05123-745C-42FD-A69B-AFF48EF9****',
              ),
              'Result' => 
              array (
                'description' => '密码是否更新成功：

- true：成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0FA05123-745C-42FD-A69B-AFF48EF9****\\",\\n  \\"Result\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更新实例的elastic账号密码',
      'description' => '调用该接口时，请注意：<br>
实例状态为生效中（activating）、失效（invalid）和冻结（inactive）时，无法更新信息。',
      'extraInfo' => ' ',
    ),
    'ModifyWhiteIps' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/actions/modify-white-ips',
      'methods' => 
      array (
        0 => 'patch',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-0pp1jxvcl000z****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ascii字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体参数。',
            'type' => 'object',
            'properties' => 
            array (
              'nodeType' => 
              array (
                'title' => '节点类型。可选值：WORKER（Elasticsearch集群）、KIBANA（Kibana集群）。如果选填了whiteIpList参数，则该参数必填。',
                'description' => '节点类型，如果选填了whiteIpList参数，则该参数必填。可选值：

- WORKER：Elasticsearch集群
- KIBANA：Kibana集群',
                'type' => 'string',
                'required' => false,
                'example' => 'WORKER',
              ),
              'networkType' => 
              array (
                'title' => '网络类型。可选值：PRIVATE（私网）、PUBLIC（公网）。如果选填了whiteIpList参数，则该参数必填。',
                'description' => '网络类型，如果选填了whiteIpList参数，则该参数必填。可选值：

- PRIVATE：私网
- PUBLIC：公网',
                'type' => 'string',
                'required' => false,
                'example' => 'PUBLIC',
              ),
              'modifyMode' => 
              array (
                'title' => '修改方式，取值含义如下：

Cover（默认值）：使用ips参数的值覆盖原IP白名单。

Append：在原IP白名单中增加ips参数中输入的IP地址。

Delete：Delete：在原IP白名单中删除ips参数中输入的IP地址，至少需要保留一个IP地址。',
                'description' => '修改方式，可选值：

- Cover（默认）：使用ips参数的值覆盖原IP白名单。
- Append：在原IP白名单中增加ips参数中输入的IP地址。
- Delete：在原IP白名单中删除ips参数中输入的IP地址，至少需要保留一个IP地址。',
                'type' => 'string',
                'required' => false,
                'example' => 'Cover',
              ),
              'whiteIpList' => 
              array (
                'title' => '白名单列表。whiteIpGroup为空时可用，更改默认分组白名单',
                'description' => 'IP地址白名单列表。whiteIpGroup为空时可用，更改默认分组白名单。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'IP地址白名单列表。whiteIpGroup为空时可用，该参数值会更新Default白名单分组中的IP白名单配置。
><notice>不支持同时配置whiteIpList和whiteIpGroup。
></notice>',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.xx.xx',
                ),
                'required' => false,
              ),
              'whiteIpGroup' => 
              array (
                'title' => '以白名单组whiteIpGroup传参方式，更新实例白名单安全配置。仅支持更新一个白名单组。',
                'description' => '以白名单组方式更新实例白名单配置，仅支持更新一个白名单组。
><notice>不支持同时配置whiteIpList和whiteIpGroup。
></notice>',
                'type' => 'object',
                'properties' => 
                array (
                  'groupName' => 
                  array (
                    'title' => '白名单组的组名。如果选填了whiteIpGroup参数，则该参数必填。',
                    'description' => '白名单组的组名。如果选填了whiteIpGroup参数，则该参数必填。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'test_group',
                  ),
                  'ips' => 
                  array (
                    'title' => '白名单组中的IP列表。如果选填了whiteIpGroup参数，则该参数必填。',
                    'description' => '白名单组中的IP地址列表。如果选填了whiteIpGroup参数，则该参数必填。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '白名单组中的IP地址列表。如果选填了whiteIpGroup参数，则该参数必填。',
                      'type' => 'string',
                      'required' => false,
                      'example' => '192.168.xx.xx',
                    ),
                    'required' => false,
                  ),
                  'whiteIpType' => 
                  array (
                    'title' => 'ip白名单的类型',
                    'description' => 'IP白名单的类型，可选值：

- PRIVATE_KIBANA：Kibana私网访问白名单
- PRIVATE_ES：Elasticsearch私网访问白名单
- PUBLIC_ES：Elasticsearch公网访问白名单
- PUBLIC_KIBANA：Kibana公网访问白名单',
                    'type' => 'string',
                    'required' => false,
                    'enumValueTitles' => 
                    array (
                      'PRIVATE_KIBANA' => 'kibana私网白名单',
                      'PRIVATE_ES' => 'Es实例私网白名单',
                      'PUBLIC_ES' => 'Es实例公网白名单',
                      'PUBLIC_KIBANA' => 'kibana公网白名单',
                    ),
                    'example' => 'PRIVATE_ES',
                  ),
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果对象。',
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：白名单更新成功
- false：白名单更新失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1DERFG',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1DERFG\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyWhiteIpsResponse>\\n    <Result>true</Result>\\n    <RequestId>5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1DERFG</RequestId>\\n</ModifyWhiteIpsResponse>","errorExample":""}]',
      'title' => '更新指定实例的访问白名单',
      'summary' => '调用ModifyWhiteIps，更新指定实例的访问白名单。',
      'description' => '## 注意事项
- 实例状态为生效中（activating）、失效（invalid）和冻结（inactive），无法更新信息。
- 您可以通过两种方式更新白名单：IP白名单列表和IP白名单组。两种方式不能同时使用，且除了InstanceId和clientToken外，两种方式支持配置的参数也不同，具体如下：
    - IP白名单列表：whiteIpList、nodeType、networkType
    - IP白名单组：modifyMode、whiteIpGroup
- 公网访问白名单不支持配置私网IP地址，私网访问白名单不支持配置公网IP地址。',
      'requestParamsDescription' => '><notice> 白名单组的增加和删除是由modifyMode为Cover的调用来实现的，Delete和Append无法实现白名单组粒度的增删，只能修改白名单组中的IP地址列表。具体说明如下：

- modifyMode为Cover时，如果ips为空，则删除该白名单组。如果groupName不在已有白名单组组名的列表中，则会新建一个白名单组。
- modifyMode为Delete时，删除后的ips至少需要保留一个IP地址。
- modifyMode为Append时，需要保证白名单组组名为已创建，否则会提示NotFound的错误。

></notice>',
    ),
    'DescribeConnectableClusters' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/connectable-clusters',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '当前实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'alreadySetItems',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否返回已经互通的实例：

- true（默认）：返回的实例列表中包括已经互通的实例。
- false：返回的实例列表中不包括已经互通的实例。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'networkType' => 
                    array (
                      'description' => '实例的网络类型。',
                      'type' => 'string',
                      'example' => 'vpc',
                    ),
                    'instances' => 
                    array (
                      'description' => '可以进行网络互通的实例ID。',
                      'type' => 'string',
                      'example' => 'es-cn-xxx',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Result\\": [\\n    {\\n      \\"networkType\\": \\"vpc\\",\\n      \\"instances\\": \\"es-cn-xxx\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取网络互通实例列表',
      'summary' => '获取能够与当前实例进行网络互通的实例列表。不包括已经打通的实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListConnectedClusters' => 
    array (
      'summary' => '获取已经与当前实例进行了网络互通的实例列表。',
      'path' => '/openapi/instances/{InstanceId}/connected-clusters',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '当前实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-0pp1jxvcl000z****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Result' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Result' => 
                  array (
                    'description' => '返回结果。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'networkType' => 
                        array (
                          'description' => '实例的网络类型。',
                          'type' => 'string',
                          'example' => 'vpc',
                        ),
                        'instances' => 
                        array (
                          'description' => '已经与当前实例进行网络互通的远程实例ID。',
                          'type' => 'string',
                          'example' => 'es-cn-09k1rocex0006****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Result\\": {\\n    \\"Result\\": [\\n      {\\n        \\"networkType\\": \\"vpc\\",\\n        \\"instances\\": \\"es-cn-09k1rocex0006****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取与当前实例进行网络互通的实例列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TriggerNetwork' => 
    array (
      'summary' => '开启或关闭Elasticsearch或Kibana集群的公网或私网访问。',
      'path' => '/openapi/instances/{InstanceId}/actions/network-trigger',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'title' => '实例ID',
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '407d02b74c49beb5bfdac7ec8bde2488',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '',
            'description' => '请求体参数。',
            'type' => 'object',
            'properties' => 
            array (
              'nodeType' => 
              array (
                'title' => '实例类型。KIBANA kibana公私网/WORKER 集群公私网',
                'description' => '实例类型。可选值：

- KIBANA：Kibana集群
- WORKER：Elasticsearch集群',
                'type' => 'string',
                'required' => true,
                'docRequired' => true,
                'example' => 'KIBANA',
              ),
              'networkType' => 
              array (
                'title' => '网络类型。PUBLIC：公网；PRIVATE：私网',
                'description' => '网络类型。可选值：

- PUBLIC：公网
- PRIVATE：私网',
                'type' => 'string',
                'required' => true,
                'docRequired' => true,
                'example' => 'PUBLIC',
              ),
              'actionType' => 
              array (
                'title' => '动作类型。CLOSE：关闭; OPEN：开启',
                'description' => '动作类型。可选值：

- CLOSE：关闭
- OPEN：开启',
                'type' => 'string',
                'required' => true,
                'docRequired' => true,
                'example' => 'OPEN',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：操作成功
- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5A5D8E74-565C-43DC-B031-29289FA****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5A5D8E74-565C-43DC-B031-29289FA****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '开启或关闭公网或私网访问',
    ),
    'OpenHttps' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/actions/open-https',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：开启HTTPS协议成功
- false：开启HTTPS协议失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '开启HTTPS协议',
      'summary' => '开启HTTPS协议。开启前请确保已购买协调节点。',
      'description' => '> 为了保障您数据的安全性，建议开启HTTPS协议。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CloseHttps' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/actions/close-https',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不值过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B350****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：关闭HTTPS协议成功
- false：关闭HTTPS协议失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DC****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '关闭HTTPS协议',
      'summary' => '关闭集群HTTPS协议。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateVpcEndpoint' => 
    array (
      'summary' => '创建私网链接VPC终端节点，用于连接用户VPC下创建的终端节点服务。',
      'path' => '/openapi/instances/{InstanceId}/vpc-endpoints',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-2r429tctl000d****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
          ),
        ),
        2 => 
        array (
          'name' => 'dryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求，取值含义如下：

- true：发送检查请求，不会创建终端节点。检查项包括AccessKey是否有效、RAM用户的授权情况和是否填写了必需参数。
- false（默认值）：立即触发创建终端节点。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '终端节点服务信息。',
            'type' => 'object',
            'properties' => 
            array (
              'serviceId' => 
              array (
                'title' => '终端节点服务ID',
                'description' => '您创建的终端节点服务ID。服务VPC侧终端节点将要关联的此服务ID。',
                'type' => 'string',
                'required' => false,
                'example' => 'epsrv-hp3xdsq46ael67lo****',
              ),
              'zoneId' => 
              array (
                'title' => '可用区ID',
                'description' => '您创建的终端节点服务对应的可用区ID。',
                'type' => 'string',
                'required' => false,
                'example' => 'cn-hangzhou-i',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC47D9',
              ),
              'Result' => 
              array (
                'description' => '返回结果详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'serviceId' => 
                  array (
                    'description' => '终端节点关联的用户终端节点服务的ID。',
                    'type' => 'string',
                    'example' => 'epsrv-bp1w0p3jdirbfmt6****',
                  ),
                  'endpointDomain' => 
                  array (
                    'description' => '终端节点域名，用于连接配置。',
                    'type' => 'string',
                    'example' => 'ep-bp1tah7zbrwmkjef****.epsrv-bp1w0p3jdirbfmt6****.cn-hangzhou.privatelink.aliyuncs.com',
                  ),
                  'endpointId' => 
                  array (
                    'description' => '服务VPC侧终端节点ID。',
                    'type' => 'string',
                    'example' => 'ep-bp1tah7zbrwmkjef****',
                  ),
                  'endpointName' => 
                  array (
                    'description' => '服务VPC侧终端节点名称。',
                    'type' => 'string',
                    'example' => 'vpcElasticSearchABC',
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC47D9\\",\\n  \\"Result\\": {\\n    \\"serviceId\\": \\"epsrv-bp1w0p3jdirbfmt6****\\",\\n    \\"endpointDomain\\": \\"ep-bp1tah7zbrwmkjef****.epsrv-bp1w0p3jdirbfmt6****.cn-hangzhou.privatelink.aliyuncs.com\\",\\n    \\"endpointId\\": \\"ep-bp1tah7zbrwmkjef****\\",\\n    \\"endpointName\\": \\"vpcElasticSearchABC\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '创建私网链接VPC终端节点',
      'description' => '该API的详细信息请参见[配置实例私网连接](~~279559~~)。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteVpcEndpoint' => 
    array (
      'summary' => '调用DeleteVpcEndpoint，删除服务VPC下的终端节点。',
      'path' => '/openapi/instances/{InstanceId}/vpc-endpoints/{EndpointId}',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-2r429tctl000d****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不值过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
          ),
        ),
        2 => 
        array (
          'name' => 'EndpointId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '要删除的终端节点ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ep-bp18s6wy9420wdi4****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '是否删除成功，取值含义如下：

- true：成功删除。

- false：删除失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC47D9',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC47D9\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '删除服务账号vpc下的终端节点',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListVpcEndpoints' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/vpc-endpoints',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-2r429tctl000d****',
          ),
        ),
        1 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页条数。默认值：20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。

起始值：1，默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC47D9',
              ),
              'Result' => 
              array (
                'description' => '终端节点信息详情。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'endpointBusinessStatus' => 
                    array (
                      'description' => '终端节点的业务状态，取值含义如下：

- Normal：正常。

- FinancialLocked：欠费锁定。',
                      'type' => 'string',
                      'example' => 'Normal',
                    ),
                    'serviceId' => 
                    array (
                      'description' => '终端节点关联的终端节点服务的ID。',
                      'type' => 'string',
                      'example' => 'epsrv-bp1w0p3jdirbfmt6****',
                    ),
                    'endpointName' => 
                    array (
                      'description' => '终端节点名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'endpointId' => 
                    array (
                      'description' => '终端节点ID。',
                      'type' => 'string',
                      'example' => 'ep-bp1tah7zbrwmkjef****',
                    ),
                    'serviceName' => 
                    array (
                      'description' => '终端节点关联的终端节点服务的名称。',
                      'type' => 'string',
                      'example' => 'com.aliyuncs.privatelink.cn-hangzhou.epsrv-bp1w0p3jdirbfmt6****',
                    ),
                    'createTime' => 
                    array (
                      'description' => '终端节点的创建时间。',
                      'type' => 'string',
                      'example' => '2021-07-22T01:19:24Z',
                    ),
                    'connectionStatus' => 
                    array (
                      'description' => '终端节点连接状态，取值含义如下：

- Pending：修改中。

- Connecting：连接中。

- Connected：已连接。

- Disconnecting：断开连接中。

- Disconnected：未连接。

- Deleting：删除中。

- ServiceDeleted：终端节点对应的服务已删除。',
                      'type' => 'string',
                      'example' => 'Disconnected',
                    ),
                    'endpointDomain' => 
                    array (
                      'description' => '终端节点域名，用于连接配置。',
                      'type' => 'string',
                      'example' => 'ep-bp18s6wy9420wdi4****.epsrv-bp1bz3efowa4kc0****.cn-hangzhou.privatelink.aliyuncs.com',
                    ),
                    'endpointStatus' => 
                    array (
                      'description' => '终端节点状态，取值含义如下：

- Creating：创建中。

- Active：可用。

- Pending：修改中。

- Deleting：删除中。',
                      'type' => 'string',
                      'example' => 'Active',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC47D9\\",\\n  \\"Result\\": [\\n    {\\n      \\"endpointBusinessStatus\\": \\"Normal\\",\\n      \\"serviceId\\": \\"epsrv-bp1w0p3jdirbfmt6****\\",\\n      \\"endpointName\\": \\"test\\",\\n      \\"endpointId\\": \\"ep-bp1tah7zbrwmkjef****\\",\\n      \\"serviceName\\": \\"com.aliyuncs.privatelink.cn-hangzhou.epsrv-bp1w0p3jdirbfmt6****\\",\\n      \\"createTime\\": \\"2021-07-22T01:19:24Z\\",\\n      \\"connectionStatus\\": \\"Disconnected\\",\\n      \\"endpointDomain\\": \\"ep-bp18s6wy9420wdi4****.epsrv-bp1bz3efowa4kc0****.cn-hangzhou.privatelink.aliyuncs.com\\",\\n      \\"endpointStatus\\": \\"Active\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查看终端节点状态',
      'summary' => '查看服务服务账号vpc下的终端节点状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSnapshot' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/snapshots',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-nif1q9o8r0008****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：手动快照备份成功
- false：手动快照备份失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '集群索引快照备份',
      'summary' => '调用CreateSnapshot，手动对集群进行快照备份。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddSnapshotRepo' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/snapshot-repos',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '需要设置跨集群OSS仓库的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：引用仓库创建成功
- false：引用仓库创建失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '创建引用仓库',
      'summary' => '在设置跨集群OSS仓库时，创建引用仓库。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定跨集群备份信息。

| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| repoPath| String | 是 | es-cn-4591jumei000u**** |需要恢复数据的实例。指定后，Elasticsearch会为您创建该实例的快照引用仓库，您可以从该快照仓库进行数据恢复。<br>该实例需要与源实例满足以下条件：<br>相同区域；归属于相同账号；源端实例的版本低于或等于目标端实例的版本，更多限制详情请参见[设置跨集群OSS仓库](~~131441~~)。 |

示例如下。

```
{
    "repoPath" :"es-cn-4591jumei000u****"
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSnapshotRepo' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/snapshot-repos',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'repoPath',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '引用实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1rux8i000w****',
          ),
        ),
        2 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：引用仓库删除成功
- false：引用仓库删除失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'DeleteSnapshotRepo',
      'summary' => '删除实例跨集群OSS引用仓库。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateSnapshotSetting' => 
    array (
      'summary' => '更新指定实例的数据备份配置。',
      'path' => '/openapi/instances/{InstanceId}/snapshot-setting',
      'methods' => 
      array (
        0 => 'post',
        1 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-oew1rgiev0009****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。
',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'quartzRegex' => 
                  array (
                    'description' => '自动备份开始时间。',
                    'type' => 'string',
                    'example' => '0 0 01 ? * * *',
                  ),
                  'enable' => 
                  array (
                    'description' => '是否开启自动备份。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****\\",\\n  \\"Result\\": {\\n    \\"quartzRegex\\": \\"0 0 01 ? * * *\\",\\n    \\"enable\\": true\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改实例的数据备份配置',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定修改后的数据备份信息。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| quartzRegex | String | 否 | 0 0 01 ? * * * |自动备份开始时间。当enable为true时，必填。|
| enable | Boolean | 是 | true |是否开启定时备份。|

示例如下。

```
{
    "quartzRegex":"0 0 01 ? * * *",
    "enable":true
}
```
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSnapshotSetting' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/snapshot-setting',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-0pp1jxvcl000z****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'Enable' => 
                  array (
                    'description' => '是否开启自动备份。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'QuartzRegex' => 
                  array (
                    'description' => '自动备份时间配置，采用Quartz Cron表达式。',
                    'type' => 'string',
                    'example' => '0 0 01 ? * * *',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The specified cluster does not exist. Check the cluster status and try again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****\\",\\n  \\"Result\\": {\\n    \\"Enable\\": true,\\n    \\"QuartzRegex\\": \\"0 0 01 ? * * *\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取集群的快照备份设置',
      'summary' => '获取集群的快照备份设置，备份周期。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListSnapshotReposByInstanceId' => 
    array (
      'summary' => '获取当前实例的跨集群OSS仓库设置列表。',
      'path' => '/openapi/instances/{InstanceId}/snapshot-repos',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-0pp1jxvcl000z****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'snapWarehouse' => 
                    array (
                      'description' => '引用仓库名称。',
                      'type' => 'string',
                      'example' => 'aliyun_snapshot_from_es-cn-6ja1ro4jt000c****',
                    ),
                    'repoPath' => 
                    array (
                      'description' => '仓库地址。',
                      'type' => 'string',
                      'example' => 'es-cn-6ja1ro4jt000c****',
                    ),
                    'status' => 
                    array (
                      'description' => '引用仓库状态。available表示生效；unavailable表示失效。',
                      'type' => 'string',
                      'example' => 'available',
                    ),
                    'instanceId' => 
                    array (
                      'description' => '引用实例ID。',
                      'type' => 'string',
                      'example' => 'es-cn-6ja1ro4jt000c****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****\\",\\n  \\"Result\\": [\\n    {\\n      \\"snapWarehouse\\": \\"aliyun_snapshot_from_es-cn-6ja1ro4jt000c****\\",\\n      \\"repoPath\\": \\"es-cn-6ja1ro4jt000c****\\",\\n      \\"status\\": \\"available\\",\\n      \\"instanceId\\": \\"es-cn-6ja1ro4jt000c****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'ES实例的跨集群OSS仓库列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListAlternativeSnapshotRepos' => 
    array (
      'summary' => '获取当前实例可添加的OSS引用仓库。',
      'path' => '/openapi/instances/{InstanceId}/alternative-snapshot-repos',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-0pp1jxvcl000z****',
          ),
        ),
        1 => 
        array (
          'name' => 'alreadySetItems',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否返回已添加的OSS引用仓库。true为默认值，表示返回；false表示不返回。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'repoPath' => 
                    array (
                      'description' => '仓库地址。',
                      'type' => 'string',
                      'example' => 'RepoPath',
                    ),
                    'instanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'es-cn-6ja1ro4jt000c****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Result\\": [\\n    {\\n      \\"repoPath\\": \\"RepoPath\\",\\n      \\"instanceId\\": \\"es-cn-6ja1ro4jt000c****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '实例可添加的OSS引用仓库',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDiagnosisItems' => 
    array (
      'summary' => '列举Elasticsearch实例智能诊断项目。',
      'path' => '/openapi/diagnosis/items',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '163553',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREelasticsearchMWTZRB',
          1 => 'FEATUREelasticsearchEC84H8',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '支持的请求语言，默认为浏览器请求语言。可选值：

- en：英语
- zh：简体中文
- zt：繁体中文
- es：西班牙语
- fr：法语',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'en' => '英语',
              'zt' => '繁体中文',
              'fr' => '法语',
              'zh' => '简体中文',
              'es' => '西班牙语',
            ),
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回结果对象。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'key' => 
                    array (
                      'title' => '诊断项标识。',
                      'description' => '诊断项标识。',
                      'type' => 'string',
                      'example' => 'ClusterBulkRejectDiagnostic',
                    ),
                    'name' => 
                    array (
                      'title' => '诊断项名称',
                      'description' => '诊断项名称',
                      'type' => 'string',
                      'example' => '索引写入BulkReject诊断',
                    ),
                    'description' => 
                    array (
                      'title' => '诊断项说明',
                      'description' => '诊断项说明',
                      'type' => 'string',
                      'example' => '诊断集群写数据是否有堆积当集群的数据写入存在堆积时，会造成BulkReject异常，可能会导致数据丢失，且会造成系统资源消耗严重',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****\\",\\n  \\"Result\\": [\\n    {\\n      \\"key\\": \\"ClusterBulkRejectDiagnostic\\",\\n      \\"name\\": \\"索引写入BulkReject诊断\\",\\n      \\"description\\": \\"诊断集群写数据是否有堆积当集群的数据写入存在堆积时，会造成BulkReject异常，可能会导致数据丢失，且会造成系统资源消耗严重\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '智能诊断项列表',
    ),
    'UpdateDiagnosisSettings' => 
    array (
      'path' => '/openapi/diagnosis/instances/{InstanceId}/settings',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-45914gy290009****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。
',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果的语言，默认为en。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：更新成功
- false：更新失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改智能运维场景设置',
      'summary' => '修改指定Elasticsearch实例的智能运维场景设置。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定智能运维场景的配置。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| scene| String | 是 | Business Analysis |待设置的智能运维场景的名称。支持Business Search（业务搜索）、Data Acceleration（数据加速）、Statistics（指标统计）、Business Analysis（业务分析）以及自定义的场景名称。|

示例如下。

```
{
    "scene":"Business Analysis"
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDiagnoseReport' => 
    array (
      'summary' => '调用ListDiagnoseReport，获取智能运维的历史报告。',
      'path' => '/openapi/diagnosis/instances/{InstanceId}/reports',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1qu7ei000p****',
          ),
        ),
        1 => 
        array (
          'name' => 'lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取的报告的语言。默认为浏览器语言，支持：

- en：英语
- zh：简体中文
- zt：繁体中文
- es：西班牙语
- fr：法语',
            'type' => 'string',
            'required' => false,
            'example' => 'es',
          ),
        ),
        2 => 
        array (
          'name' => 'startTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询开始时间戳。单位：毫秒。

- 最小值：1000000000000
- 最大值：2000000000000',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'maximum' => '2000000000000',
            'minimum' => '1000000000000',
            'example' => '1594569600000',
          ),
        ),
        3 => 
        array (
          'name' => 'endTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询结束时间戳。单位：毫秒。
- 最小值：1000000000000
- 最大值：2000000000000',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'maximum' => '2000000000000',
            'minimum' => '1000000000000',
            'example' => '1595174399999',
          ),
        ),
        4 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页数。默认值：1，最小值：1，最大值：200。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页报告数。默认值：10，最小值：1，最大值：500。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'minimum' => '1',
            'example' => '20',
          ),
        ),
        6 => 
        array (
          'name' => 'detail',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否展示诊断项详情。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'trigger',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康诊断的触发方式，支持：

- SYSTEM（默认）：系统自动触发
- INNER：内部触发
- USER：用户手动触发
',
            'type' => 'string',
            'required' => false,
            'example' => 'SYSTEM',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。
',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '返回的总记录数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '15',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'trigger' => 
                    array (
                      'description' => '健康诊断的触发方式。支持：

- SYSTEM：系统自动触发
- INNER：内部触发
- USER：用户手动触发',
                      'type' => 'string',
                      'example' => 'USER',
                    ),
                    'createTime' => 
                    array (
                      'description' => '报告创建的时间戳。
',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1535745731000',
                    ),
                    'reportId' => 
                    array (
                      'description' => '报告ID。
',
                      'type' => 'string',
                      'example' => 'trigger__2020-08-17T17:09:02f',
                    ),
                    'state' => 
                    array (
                      'description' => '诊断状态。支持：SUCCESS、FAILED和RUNNING。
',
                      'type' => 'string',
                      'example' => 'SUCCESS',
                    ),
                    'instanceId' => 
                    array (
                      'description' => '诊断的实例ID。
',
                      'type' => 'string',
                      'example' => 'es-cn-abc',
                    ),
                    'health' => 
                    array (
                      'description' => '报告中集群整体的健康度。支持：GREEN、YELLOW、RED和UNKNOWN。
',
                      'type' => 'string',
                      'example' => 'YELLOW',
                    ),
                    'diagnoseItems' => 
                    array (
                      'description' => '报告诊断项信息列表。
',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'item' => 
                          array (
                            'description' => '诊断项名称。
',
                            'type' => 'string',
                            'example' => 'IndexAliasUseDiagnostic',
                          ),
                          'health' => 
                          array (
                            'description' => '诊断项的健康度。支持：GREEN、YELLOW、RED和UNKNOWN。
',
                            'type' => 'string',
                            'example' => 'YELLOW',
                          ),
                          'detail' => 
                          array (
                            'description' => '诊断项详情。
',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'type' => 
                              array (
                                'description' => '诊断结果类型。支持：

- TEXT：文本描述
- CONSOLE_API：控制台触发型
- ES_API：API触发型
',
                                'type' => 'string',
                                'example' => 'ES_API',
                              ),
                              'name' => 
                              array (
                                'description' => '诊断项全称。
',
                                'type' => 'string',
                                'example' => 'Number of Replica Shards',
                              ),
                              'desc' => 
                              array (
                                'description' => '诊断项说明。
',
                                'type' => 'string',
                                'example' => 'Check whether the number of replica shards is optimal and easy to maintain',
                              ),
                              'result' => 
                              array (
                                'description' => '诊断结果。',
                                'type' => 'string',
                                'example' => 'You may need to adjust the numbers of replica shards of some indices as follows:  [geoname08 : 0 -&gt; 1][geoname09 : 0 -&gt; 1][geonametest01 : 0 -&gt; 1]',
                              ),
                              'suggest' => 
                              array (
                                'description' => '诊断建议。
',
                                'type' => 'string',
                                'example' => 'You can call the following function in the Elasticsearch API....',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 15\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"trigger\\": \\"USER\\",\\n      \\"createTime\\": 1535745731000,\\n      \\"reportId\\": \\"trigger__2020-08-17T17:09:02f\\",\\n      \\"state\\": \\"SUCCESS\\",\\n      \\"instanceId\\": \\"es-cn-abc\\",\\n      \\"health\\": \\"YELLOW\\",\\n      \\"diagnoseItems\\": [\\n        {\\n          \\"item\\": \\"IndexAliasUseDiagnostic\\",\\n          \\"health\\": \\"YELLOW\\",\\n          \\"detail\\": {\\n            \\"type\\": \\"ES_API\\",\\n            \\"name\\": \\"Number of Replica Shards\\",\\n            \\"desc\\": \\"Check whether the number of replica shards is optimal and easy to maintain\\",\\n            \\"result\\": \\"You may need to adjust the numbers of replica shards of some indices as follows:  [geoname08 : 0 -&gt; 1][geoname09 : 0 -&gt; 1][geonametest01 : 0 -&gt; 1]\\",\\n            \\"suggest\\": \\"You can call the following function in the Elasticsearch API....\\"\\n          }\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '智能运维的历史报告列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDiagnoseReportIds' => 
    array (
      'path' => '/openapi/diagnosis/instances/{InstanceId}/report-ids',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1qu7ei000p****',
          ),
        ),
        1 => 
        array (
          'name' => 'lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取的报告的语言。默认为浏览器语言，支持：
- en：英语
- zh：简体中文
- zt：繁体中文
- es：西班牙语
- fr：法语',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        2 => 
        array (
          'name' => 'startTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询开始时间戳。
最小值：1000000000000 ms
最大值：2000000000000 ms',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'maximum' => '2000000000000',
            'minimum' => '1000000000000',
            'example' => '1595088000000',
          ),
        ),
        3 => 
        array (
          'name' => 'endTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询结束时间戳。
最小值：1000000000000 ms
最大值：2000000000000 ms',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'maximum' => '2000000000000',
            'minimum' => '1000000000000',
            'example' => '1595174399999',
          ),
        ),
        4 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页数。默认值：1，最小值：1，最大值：200。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页报告ID的数量。默认值：10，最小值：1，最大值：500。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '500',
            'minimum' => '1',
            'example' => '15',
          ),
        ),
        6 => 
        array (
          'name' => 'trigger',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康诊断的触发方式，支持：SYSTEM（系统自动触发）、INNER（内部触发）和USER（用户手动触发）。
',
            'type' => 'string',
            'required' => false,
            'example' => 'SYSTEM',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回结果。',
                  'type' => 'string',
                  'example' => '["scheduled__2020-09-13T00:40:00"]',
                ),
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。
',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '返回的总记录数。
',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": [\\n    \\"[\\\\\\"scheduled__2020-09-13T00:40:00\\\\\\"]\\"\\n  ],\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 1\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '智能运维历史报告ID列表',
      'summary' => '获取智能运维历史报告所有的ID。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDiagnoseReport' => 
    array (
      'path' => '/openapi/diagnosis/instances/{InstanceId}/reports/{ReportId}',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-mp91kzb8m0009****',
          ),
        ),
        1 => 
        array (
          'name' => 'lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '生成智能诊断报告的语言。默认为浏览器语言，支持：

- en：英语
- zh：简体中文
- zt：繁体中文
- es：西班牙语
- fr：法语',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        2 => 
        array (
          'name' => 'ReportId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '报告ID。可通过[ListDiagnoseReportIds](~~183774~~) API获取。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'scheduled__2020-09-15T00:40:00',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'trigger' => 
                  array (
                    'description' => '健康诊断的触发方式。支持：SYSTEM（系统自动触发）、INNER（内部触发）和USER（用户手动触发）。',
                    'type' => 'string',
                    'example' => 'SYSTEM',
                  ),
                  'createTime' => 
                  array (
                    'description' => '报告创建的时间戳，单位：ms。
',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1535745731000',
                  ),
                  'reportId' => 
                  array (
                    'description' => '报告ID。',
                    'type' => 'string',
                    'example' => 'trigger__2020-08-17T17:09:02',
                  ),
                  'state' => 
                  array (
                    'description' => '诊断状态。支持：SUCCESS、FAILED和RUNNING。',
                    'type' => 'string',
                    'example' => 'SUCCESS',
                  ),
                  'instanceId' => 
                  array (
                    'description' => '诊断的实例ID。',
                    'type' => 'string',
                    'example' => 'es-cn-abc',
                  ),
                  'health' => 
                  array (
                    'description' => '报告中集群整体的健康度。支持：GREEN、YELLOW、RED和UNKNOWN。',
                    'type' => 'string',
                    'example' => 'YELLOW',
                  ),
                  'diagnoseItems' => 
                  array (
                    'description' => '报告诊断项信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'item' => 
                        array (
                          'description' => '诊断项名称。',
                          'type' => 'string',
                          'example' => 'IndexAliasUseDiagnostic',
                        ),
                        'health' => 
                        array (
                          'description' => '诊断项的健康度。支持：GREEN、YELLOW、RED和UNKNOWN。',
                          'type' => 'string',
                          'example' => 'YELLOW',
                        ),
                        'detail' => 
                        array (
                          'description' => '诊断项详情。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'type' => 
                            array (
                              'description' => '诊断结果类型。支持：TEXT（文本描述）、CONSOLE_API（控制台触发型）、ES_API（API触发型）。',
                              'type' => 'string',
                              'example' => 'ES_API',
                            ),
                            'name' => 
                            array (
                              'description' => '诊断项全称。',
                              'type' => 'string',
                              'example' => 'Number of Replica Shards',
                            ),
                            'desc' => 
                            array (
                              'description' => '诊断项说明。',
                              'type' => 'string',
                              'example' => 'Check whether the number of replica shards is optimal and easy to maintain',
                            ),
                            'result' => 
                            array (
                              'description' => '诊断结果。',
                              'type' => 'string',
                              'example' => 'You may need to adjust the numbers of replica shards of some indices as follows: [geoname08 : 0 -&gt; 1][geoname09 : 0 -&gt; 1][geonametest01 : 0 -&gt; 1]',
                            ),
                            'suggest' => 
                            array (
                              'description' => '诊断建议。',
                              'type' => 'string',
                              'example' => 'You can call the following function in the Elasticsearch API....',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": {\\n    \\"trigger\\": \\"SYSTEM\\",\\n    \\"createTime\\": 1535745731000,\\n    \\"reportId\\": \\"trigger__2020-08-17T17:09:02\\",\\n    \\"state\\": \\"SUCCESS\\",\\n    \\"instanceId\\": \\"es-cn-abc\\",\\n    \\"health\\": \\"YELLOW\\",\\n    \\"diagnoseItems\\": [\\n      {\\n        \\"item\\": \\"IndexAliasUseDiagnostic\\",\\n        \\"health\\": \\"YELLOW\\",\\n        \\"detail\\": {\\n          \\"type\\": \\"ES_API\\",\\n          \\"name\\": \\"Number of Replica Shards\\",\\n          \\"desc\\": \\"Check whether the number of replica shards is optimal and easy to maintain\\",\\n          \\"result\\": \\"You may need to adjust the numbers of replica shards of some indices as follows: [geoname08 : 0 -&gt; 1][geoname09 : 0 -&gt; 1][geonametest01 : 0 -&gt; 1]\\",\\n          \\"suggest\\": \\"You can call the following function in the Elasticsearch API....\\"\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查看智能运维的历史报告',
      'summary' => '调用DescribeDiagnoseReport，查看智能运维的历史报告。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDiagnosisSettings' => 
    array (
      'path' => '/openapi/diagnosis/instances/{InstanceId}/settings',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-68n1n8b7f000a****',
          ),
        ),
        1 => 
        array (
          'name' => 'lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置返回结果的语言，默认为en。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5E82B8A8-EED7-4557-A6E9-D1AD3E58****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'updateTime' => 
                  array (
                    'description' => '上次更新智能运维应用场景的时间戳。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1588994035385',
                  ),
                  'scene' => 
                  array (
                    'description' => '智能运维的应用场景。',
                    'type' => 'string',
                    'example' => 'Business Search',
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5E82B8A8-EED7-4557-A6E9-D1AD3E58****\\",\\n  \\"Result\\": {\\n    \\"updateTime\\": 1588994035385,\\n    \\"scene\\": \\"Business Search\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取智能运维的场景设置',
      'summary' => '调用DescribeDiagnosisSettings，获取智能运维的场景设置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDiagnoseIndices' => 
    array (
      'path' => '/openapi/diagnosis/instances/{InstanceId}/indices',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言配置，支持多种语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F05ED12E-140A-4ACB-B059-3A508A69F2E1',
              ),
              'Result' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'description' => '诊断索引列表。',
                  'type' => 'string',
                  'example' => '["my_index_aliws", "aliyun-index-test","filebeat-6.7.0-2020.11.15", "filebeat-6.7.0-2020.12.27"]',
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F05ED12E-140A-4ACB-B059-3A508A69F2E1\\",\\n  \\"Result\\": [\\n    \\"[\\\\\\"my_index_aliws\\\\\\", \\\\\\"aliyun-index-test\\\\\\",\\\\\\"filebeat-6.7.0-2020.11.15\\\\\\", \\\\\\"filebeat-6.7.0-2020.12.27\\\\\\"]\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取智能运维模块中的诊断索引',
      'summary' => '获取指定实例智能运维模块中健康诊断的诊断索引。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'OpenDiagnosis' => 
    array (
      'path' => '/openapi/diagnosis/instances/{InstanceId}/actions/open-diagnosis',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '支持的请求语言，默认为浏览器请求语言。可选值：

- en：英语
- zh：简体中文
- zt：繁体中文
- es：西班牙语
- fr：法语',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '是否成功开启智能运维功能：

- true：成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '开启智能运维',
      'summary' => '打开实例的智能运维功能。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CloseDiagnosis' => 
    array (
      'summary' => '关闭实例的智能运维功能。',
      'path' => '/openapi/diagnosis/instances/{InstanceId}/actions/close-diagnosis',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-s9dsk3k4k****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '多语言支持，默认为浏览器语言，支持：

- en：英语
- zh：简体中文
- zt：繁体中文
- es：西班牙语
- fr：法语',
            'type' => 'string',
            'required' => false,
            'example' => 'spanish',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '是否成功关闭智能运维：

- true：成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '关闭实例的智能运维功能',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateKibanaSettings' => 
    array (
      'summary' => '修改Kibana配置。目前仅支持修改Kibana语言配置。',
      'path' => '/openapi/instances/{InstanceId}/actions/update-kibana-settings',
      'methods' => 
      array (
        0 => 'patch',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B350****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：Kibana语言修改成功
- false：Kibana语言修改失败
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DC*****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DC*****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改Kibana配置',
      'requestParamsDescription' => '## RequestBody
您还可以在RequestBody中填入**i18n.locale**参数（可选，默认为en），用来设置Kibana语言，示例如下。

```
{
  "i18n.locale":"en"
}
```

> `i18n.locale`参数只能取en（英文）或zh-CN（中文）。
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeKibanaSettings' => 
    array (
      'summary' => '获取Elasticsearch实例的Kibana节点的配置。',
      'path' => '/openapi/instances/{InstanceId}/kibana-settings',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w001c****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '部分可配置的Kibana settings信息，详细信息请参见[Kibana settings](https://www.elastic.co/guide/cn/kibana/current/settings.html)。',
                'type' => 'object',
                'example' => '{"map.includeElasticMapsService": "false", "server.ssl.cert": "/home/admin/packages/kibana/config/cert/client.crt", "server.ssl.enabled": "true", "server.ssl.key": "/home/admin/packages/kibana/config/cert/client.key", "xpack.reporting.capture.browser.chromium.disableSandbox": "true"}',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6D*****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": {\\n    \\"map.includeElasticMapsService\\": \\"false\\",\\n    \\"server.ssl.cert\\": \\"/home/admin/packages/kibana/config/cert/client.crt\\",\\n    \\"server.ssl.enabled\\": \\"true\\",\\n    \\"server.ssl.key\\": \\"/home/admin/packages/kibana/config/cert/client.key\\",\\n    \\"xpack.reporting.capture.browser.chromium.disableSandbox\\": \\"true\\"\\n  },\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6D*****\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeKibanaSettingsResponse>\\n    <RequestId>F99407AB-2FA9-489E-A259-40CF6D*****</RequestId>\\n</DescribeKibanaSettingsResponse>","errorExample":""}]',
      'title' => '获取Kibana配置',
    ),
    'ListKibanaPlugins' => 
    array (
      'summary' => '获取Elasticsearch Kibana节点的插件列表。',
      'path' => '/openapi/instances/{InstanceId}/kibana-plugins',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-oew1q8bev0002****',
          ),
        ),
        1 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例列表的页码。默认值：1。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页条数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '11234B4A-34CE-473B-8E61-AD95702E****',
              ),
              'Headers' => 
              array (
                'description' => '请求头。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '返回的数据条数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '当前请求返回的插件信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'description' => 
                    array (
                      'description' => '插件描述。',
                      'type' => 'string',
                      'example' => 'Customize DSL statements to query data.',
                    ),
                    'specificationUrl' => 
                    array (
                      'description' => '插件简介地址，支持null。',
                      'type' => 'string',
                      'example' => 'https://xxxx',
                    ),
                    'state' => 
                    array (
                      'description' => '插件安装状态。',
                      'type' => 'string',
                      'example' => 'INSTALLED',
                    ),
                    'source' => 
                    array (
                      'description' => '插件来源。',
                      'type' => 'string',
                      'example' => 'SYSTEM',
                    ),
                    'name' => 
                    array (
                      'description' => '插件名称。',
                      'type' => 'string',
                      'example' => 'bsearch_querybuilder	',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"11234B4A-34CE-473B-8E61-AD95702E****\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 3\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"description\\": \\"Customize DSL statements to query data.\\",\\n      \\"specificationUrl\\": \\"https://xxxx\\",\\n      \\"state\\": \\"INSTALLED\\",\\n      \\"source\\": \\"SYSTEM\\",\\n      \\"name\\": \\"bsearch_querybuilder\\\\t\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'Kibana节点插件列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InstallKibanaSystemPlugin' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/kibana-plugins/system/actions/install',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-n6w1o1x0w00******',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DC****',
              ),
              'Result' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'description' => '请求安装的插件列表。',
                  'type' => 'string',
                  'example' => '["bsearch_querybuilder"]	',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DC****\\",\\n  \\"Result\\": [\\n    \\"[\\\\\\"bsearch_querybuilder\\\\\\"]\\\\t\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '安装Kibana预置插件',
      'summary' => '安装Kibana预置插件。要求Kibana的规格为2核4G及以上。',
      'requestParamsDescription' => '## RequestBody

RequestBody中还需填入插件名称，格式为`["pluginname1","pluginname2",…,"plugin_namen"]`，例如`["bsearch_label","bsearch_querybuilder"]`。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UninstallKibanaPlugin' => 
    array (
      'summary' => '卸载Elasticsearch实例Kibana节点插件。',
      'path' => '/openapi/instances/{InstanceId}/kibana-plugins/actions/uninstall',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'es-cn-6ja1ro4jt000c****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****',
              ),
              'Result' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回结果，卸载的插件列表。',
                  'type' => 'string',
                  'example' => '["bsearch_querybuilder"]',
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D****\\",\\n  \\"Result\\": [\\n    \\"[\\\\\\"bsearch_querybuilder\\\\\\"]\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '卸载Kibana插件',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需要填入待卸载的Kibana插件名称，格式为`["pluginname1","pluginname2",…,"plugin_namen"]`，例如`["bsearch_label","bsearch_querybuilder"]`。

',
      'responseParamsDescription' => '> 返回数据中还包含Headers参数，表示请求头信息。',
      'extraInfo' => ' ',
    ),
    'DeleteLogstash' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-n6w1o5jq****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'deleteType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '释放类型，可选值：

- immediate：立即删除。删除后，系统会彻底清除所有数据，且实例不再显示在实例列表中。
- protective：实例会被冻结24小时后，再彻底清除数据，期间实例仍在实例列表中显示，您可以选择[恢复实例](~~202205~~)或[立即释放](~~160591~~)。
',
            'type' => 'string',
            'required' => false,
            'example' => 'protective',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '94B03BBA-A132-42C3-8367-0A0C1C45****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"94B03BBA-A132-42C3-8367-0A0C1C45****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '释放Logstash实例',
      'summary' => '主动释放Logstash实例。',
      'description' => '在调用接口前，请注意：
释放后，实例所使用的物理资源都被回收，相关数据全部丢失且不可恢复；挂载实例节点的云盘也会被释放；相应的快照会被删除。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => '返回数据中还包括Result参数，参数说明请参见[ListLogstash](~~160534~~)。',
      'extraInfo' => ' ',
    ),
    'UpdateLogstash' => 
    array (
      'summary' => '修改指定实例的部分信息，例如节点数、配额、名称、硬盘大小等。',
      'path' => '/openapi/logstashes/{InstanceId}',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-n6w1o5jq****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体。',
            'type' => 'object',
            'properties' => 
            array (
              'nodeSpec' => 
              array (
                'description' => '节点规格配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'spec' => 
                  array (
                    'title' => '实例规格',
                    'description' => '规格信息，可在[产品规格](~~271718~~)中查看。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'elasticsearch.sn1ne.large',
                    'enum' => 
                    array (
                      0 => '2核4G elasticsearch.sn1ne.large',
                      1 => '2核8G elasticsearch.sn2ne.large',
                      2 => '2核16G elasticsearch.r5.large',
                      3 => '4核4G elasticsearch.ic5.xlarge',
                      4 => '4核16G elasticsearch.sn2ne.xlarge',
                      5 => '4核32G elasticsearch.r5.xlarge',
                      6 => '8核8G elasticsearch.ic5.2xlarge',
                      7 => '8核32G elasticsearch.sn2ne.2xlarge',
                      8 => '8核64G elasticsearch.r5.2xlarge',
                      9 => '12核12G elasticsearch.ic5.3xlarge',
                      10 => '16核16G elasticsearch.ic5.4xlarge',
                      11 => '16核32G elasticsearch.sn1ne.4xlarge',
                      12 => '16核64G elasticsearch.sn2ne.4xlarge',
                      13 => '32核64G elasticsearch.sn1ne.8xlarge',
                    ),
                  ),
                  'disk' => 
                  array (
                    'title' => '实例磁盘大小。单位GB。步长为20，最大值受磁盘规格影响',
                    'description' => '磁盘大小，单位：GB。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'maximum' => '2048',
                    'minimum' => '20',
                    'example' => '20',
                  ),
                  'diskType' => 
                  array (
                    'title' => '磁盘存储类型',
                    'description' => '磁盘类型。可选值：
- cloud_efficiency：高效云盘
- cloud_ssd：ssd云盘',
                    'type' => 'string',
                    'required' => false,
                    'enumValueTitles' => 
                    array (
                      'cloud_efficiency' => '高效云盘',
                      'cloud_ssd' => 'ssd云盘',
                    ),
                    'example' => 'cloud_efficiency',
                    'enum' => 
                    array (
                      0 => 'cloud_efficiency 高效云盘',
                      1 => 'cloud_ssd ssd云盘',
                    ),
                  ),
                ),
                'required' => false,
              ),
              'nodeAmount' => 
              array (
                'title' => '实例节点数量。',
                'description' => '节点数量。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => false,
                'maximum' => '20',
                'minimum' => '1',
                'example' => '3',
              ),
            ),
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '实例信息是否修改成功：

- true：成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改实例部分信息',
      'description' => '调用该接口时，请注意：
实例状态为生效中（activating）、失效（invalid）和冻结（inactive）时，无法修改实例信息。',
    ),
    'UpdateLogstashDescription' => 
    array (
      'summary' => '修改指定Logstash实例名称。',
      'path' => '/openapi/logstashes/{InstanceId}/description',
      'methods' => 
      array (
        0 => 'patch',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-n6w1o5jq****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'description' => 
              array (
                'type' => 'string',
              ),
            ),
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'description' => 
                  array (
                    'description' => '实例名称。',
                    'type' => 'string',
                    'example' => 'logstash_name',
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": {\\n    \\"description\\": \\"logstash_name\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改Logstash实例名称',
      'description' => '调用该接口时，请注意：
实例状态为生效中（activating）、失效（invalid）和冻结（inactive）时，无法修改实例名称。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入description字段，用来指定修改后的实例名称，示例如下。

```
{
    "description": "logstash_name"
}
```
',
      'responseParamsDescription' => 'Result中还包含以下参数。
| 参数名称 | 数据类型 | 示例值 | 描述 |
| --- | --- | --- | --- |
| instanceId | String | ls-cn-n6w1o5jq**** | 实例ID。|
| description | String | ls-cn-abc | 实例名称。 |
| nodeAmount | Integer | 2 | 实例的节点个数。 |
| paymentType | String | postpaid | 实例的付费方式。支持：prepaid（包年包月）、postpaid（按量付费）。 |
| status | String | active | 实例的状态，支持四种状态：正常（active）、生效中（activating）、冻结（inactive）和失效（invalid）。 |
| esVersion | String | 6.7.0_with_X-Pack | 实例的版本。 |
| createdAt | String | 2018-07-13T03:58:07.253Z | 实例的创建时间。 |
| updatedAt | String | 2018-07-13T03:58:07.253Z | 实例最后更新的时间。 |
| nodeSpec |  |  | 节点的配置信息。 |
|   └spec | String | logstash.n4.small | 节点规格。 |
|   └disk | Integer | 40 | 节点的硬盘大小。 |
| networkConfig |  |  | 网络配置。 |
|   └type | String | vpc | 网络类型。目前只支持专有网络VPC（Virtual Private Cloud）。 |
|   └vpcId | String | vpc-abc | VPC ID。 |
|   └vswitchId | String | vsw-abc | 虚拟交换机ID。 |
| vsArea | String | cn-hangzhou-* | 实例所在的可用区。 |
| domainList |  |  | 域名列表。 |
|   └domain | String | ls-cn-abc.logstash.aliyuncs.com | 实例分配的私网域名。 |
|   └port | Integer | 7001 | 端口号。 |

> └表示子参数，其他参数说明请参见[ListLogstash](~~160534~~)。',
      'extraInfo' => ' ',
    ),
    'UpdateLogstashChargeType' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/actions/convert-pay-type',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-n6w1o5jq****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：转换成功
- false：转换失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '将Logstash实例转换为包年包月',
      'summary' => '将按量付费的阿里云Logstash实例转换为包年包月实例。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数。

|  名称  | 类型  | 是否必选 | 示例值  | 描述  |
|  ----  | ----  | ----  | ----  |
| paymentInfo  | Array |  是    |   | 实例转换后的付费信息。|
|  └duration | Integer |  是    | 1  | 付费时长。如果pricingCycle为Year，可选值：1~3；如果pricingCycle为Month，可选值：1~9。|
|  └pricingCycle | String |  是    | Year  | 付费周期。可选值：Year、Month。|
| paymentType | String |  是    | prepaid  | 实例当前的付费类型。目前只支持将按量付费实例转换为包年包月，因此该参数值固定为prepaid。|

> └表示子参数。

示例如下。

```
{
  "paymentInfo":{ 
       "duration":1,
       "pricingCycle":"Month"
    },
  "paymentType":"prepaid"
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListLogstash' => 
    array (
      'summary' => '在列表中展示所有或指定Logstash实例的详细信息。',
      'path' => '/openapi/logstashes',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例列表的页码。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页条数。默认值：20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例名称，支持模糊查询。例如查询名称为abc的实例，则可能返回名称为abc、abcde、xyabc、xabcy的所有实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'ls-cn-abc',
          ),
        ),
        3 => 
        array (
          'name' => 'instanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ls-cn-n6w1o5jq****',
          ),
        ),
        4 => 
        array (
          'name' => 'version',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例版本。',
            'type' => 'string',
            'required' => false,
            'example' => '5.5.3_with_X-Pack',
          ),
        ),
        5 => 
        array (
          'name' => 'resourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm2h5vbzd****',
          ),
        ),
        6 => 
        array (
          'name' => 'tags',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例标签。',
            'type' => 'string',
            'required' => false,
            'example' => '[{"tagKey":"key1","tagValue":"value1"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AC442F2F-5068-4434-AA21-E78947A9****',
              ),
              'Headers' => 
              array (
                'description' => '请求头信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '实例总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '10',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '当前请求返回的实例列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'paymentType' => 
                    array (
                      'description' => '实例的付费模式。支持：prepaid（包年包月）、postpaid（按量付费）。',
                      'type' => 'string',
                      'example' => 'postpaid',
                    ),
                    'nodeAmount' => 
                    array (
                      'description' => '实例的节点个数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '2',
                    ),
                    'description' => 
                    array (
                      'description' => '实例名称。',
                      'type' => 'string',
                      'example' => 'ls-cn-abc',
                    ),
                    'createdAt' => 
                    array (
                      'description' => '实例创建时间。',
                      'type' => 'string',
                      'example' => '2018-07-13T03:58:07.253Z',
                    ),
                    'status' => 
                    array (
                      'description' => '实例的状态。支持四种状态：正常（active）、生效中（activating）、冻结（inactive）和失效（invalid）。',
                      'type' => 'string',
                      'example' => 'active',
                    ),
                    'updatedAt' => 
                    array (
                      'description' => '实例最后更新的时间。',
                      'type' => 'string',
                      'example' => '2018-07-18T10:10:04.484Z',
                    ),
                    'instanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'ls-cn-n6w1o5jq****',
                    ),
                    'version' => 
                    array (
                      'description' => '实例版本。目前仅支持6.7.0_with_X-Pack、7.4.0_with_X-Pack。',
                      'type' => 'string',
                      'example' => '6.7.0_with_X-Pack',
                    ),
                    'Tags' => 
                    array (
                      'description' => '实例标签。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'TagValue' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'dev',
                          ),
                          'TagKey' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'env',
                          ),
                        ),
                      ),
                    ),
                    'nodeSpec' => 
                    array (
                      'description' => '数据节点的配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'spec' => 
                        array (
                          'description' => '实例规格。',
                          'type' => 'string',
                          'example' => 'logstash.n4.small',
                        ),
                        'disk' => 
                        array (
                          'description' => '节点磁盘大小。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '50',
                        ),
                        'diskEncryption' => 
                        array (
                          'description' => '是否使用磁盘加密：

- true：使用
- false：不使用',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'diskType' => 
                        array (
                          'description' => '磁盘类型。',
                          'type' => 'string',
                          'example' => 'cloud_ssd',
                        ),
                      ),
                    ),
                    'networkConfig' => 
                    array (
                      'description' => '
网络配置。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'vpcId' => 
                        array (
                          'description' => '专有网络ID。',
                          'type' => 'string',
                          'example' => 'vpc-abc',
                        ),
                        'vsArea' => 
                        array (
                          'description' => '实例所在的可用区。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-*',
                        ),
                        'type' => 
                        array (
                          'description' => '网络类型，目前仅支持专有网络VPC（Virtual Private Cloud）。',
                          'type' => 'string',
                          'example' => 'vpc',
                        ),
                        'vswitchId' => 
                        array (
                          'description' => '交换机ID。',
                          'type' => 'string',
                          'example' => 'vsw-def',
                        ),
                      ),
                    ),
                    'resourceGroupId' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AC442F2F-5068-4434-AA21-E78947A9****\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 10\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"paymentType\\": \\"postpaid\\",\\n      \\"nodeAmount\\": 2,\\n      \\"description\\": \\"ls-cn-abc\\",\\n      \\"createdAt\\": \\"2018-07-13T03:58:07.253Z\\",\\n      \\"status\\": \\"active\\",\\n      \\"updatedAt\\": \\"2018-07-18T10:10:04.484Z\\",\\n      \\"instanceId\\": \\"ls-cn-n6w1o5jq****\\",\\n      \\"version\\": \\"6.7.0_with_X-Pack\\",\\n      \\"Tags\\": [\\n        {\\n          \\"TagValue\\": \\"dev\\",\\n          \\"TagKey\\": \\"env\\"\\n        }\\n      ],\\n      \\"nodeSpec\\": {\\n        \\"spec\\": \\"logstash.n4.small\\",\\n        \\"disk\\": 50,\\n        \\"diskEncryption\\": false,\\n        \\"diskType\\": \\"cloud_ssd\\"\\n      },\\n      \\"networkConfig\\": {\\n        \\"vpcId\\": \\"vpc-abc\\",\\n        \\"vsArea\\": \\"cn-hangzhou-*\\",\\n        \\"type\\": \\"vpc\\",\\n        \\"vswitchId\\": \\"vsw-def\\"\\n      },\\n      \\"resourceGroupId\\": \\"\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取Logstash实例',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => '返回数据中还包含以下参数。
|  名称  | 类型  | 示例值  | 描述  |
|  ----  | ----  | ----  | ----  |
| enablePublic | Boolean |  false  | 是否开启公网访问，默认为false。|
| commodityCode | String |  elasticsearch_logstash_post  |产品代码。|
| endTime | Long |  4749897600000 | 包年包月实例，最后的失效时间。|
| clusterTasks | Array |  []  | 实例的任务列表。|
| resourceGroupId | String  |  rg-acfm2h5vbzd**** | 实例所在的资源组ID。|
| zoneCount | Integer |  1  | 实例的可用区个数。|
| protocol | String  | HTTP  | 实例的访问协议。|
| zoneInfos | Array |    | 可用区信息。|
|   └zoneId| String  |  cn-hangzhou-i   |可用区ID。|
|   └status | String  |  NORMAL |可用区状态。支持：**ISOLATION**（下线）、**NORMAL**（正常）。|
| instanceType | String  |  logstash | 实例类型。|
| inited | Boolean |  true  | 实例是否已完成初始化。|
| config | Array |  []  |实例配置。|
| endpointList |  Array |   | 节点信息。|
|  └host | String  |  172.16.xx.xx  |节点的IP地址。|
|  └port | Integer |  9200  |节点的访问端口号。|
|  └zoneId | String  |  cn-hangzhou-i  | 节点所在的可用区ID。|

> └表示子参数。',
      'extraInfo' => ' ',
    ),
    'DescribeLogstash' => 
    array (
      'summary' => '查询Logstash实例详细信息。',
      'path' => '/openapi/logstashes/{InstanceId}',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-s9dsk3k4k****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C9334241-4837-46C2-B24B-9BDC517318DE',
              ),
              'Result' => 
              array (
                'description' => '当前实例的详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'config' => 
                  array (
                    'description' => '实例配置信息。',
                    'type' => 'object',
                    'example' => '{"slowlog.threshold.warn": "2s","slowlog.threshold.info": "1s","slowlog.threshold.debug": "500ms","slowlog.threshold.trace": "100ms" }',
                  ),
                  'paymentType' => 
                  array (
                    'description' => '实例的付费模式。支持：

- prepaid：包年包月
- postpaid：按量付费',
                    'type' => 'string',
                    'example' => 'prepaid',
                  ),
                  'ResourceGroupId' => 
                  array (
                    'description' => '实例所属的资源组ID。',
                    'type' => 'string',
                    'example' => 'rg-aekzvowej3i****',
                  ),
                  'nodeAmount' => 
                  array (
                    'description' => '实例的节点个数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'description' => 
                  array (
                    'description' => '实例名称。',
                    'type' => 'string',
                    'example' => 'ls-cn-abc',
                  ),
                  'createdAt' => 
                  array (
                    'description' => '实例创建时间。',
                    'type' => 'string',
                    'example' => '2020-02-06T14:12:03.672Z',
                  ),
                  'status' => 
                  array (
                    'description' => '实例的状态。支持四种状态：

- 正常：active
- 生效中：activating
- 冻结：inactive
- 失效：invalid',
                    'type' => 'string',
                    'example' => 'active',
                  ),
                  'vpcInstanceId' => 
                  array (
                    'description' => '实例所属的VPC ID。',
                    'type' => 'string',
                    'example' => 'vpc-bp16k1dvzxtmagcva****',
                  ),
                  'updatedAt' => 
                  array (
                    'description' => '实例最后更新的时间。',
                    'type' => 'string',
                    'example' => '2020-02-06T14:22:36.850Z',
                  ),
                  'version' => 
                  array (
                    'description' => '实例版本。',
                    'type' => 'string',
                    'example' => '7.4.0_with_X-Pack',
                  ),
                  'instanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'ls-cn-abc',
                  ),
                  'endpointList' => 
                  array (
                    'description' => '节点的访问信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'zoneId' => 
                        array (
                          'description' => '节点所在的可用区ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-b',
                        ),
                        'port' => 
                        array (
                          'description' => '端口号。',
                          'type' => 'string',
                          'example' => '9600',
                        ),
                        'host' => 
                        array (
                          'description' => '节点的IP地址。',
                          'type' => 'string',
                          'example' => '172.16.**.**',
                        ),
                      ),
                    ),
                  ),
                  'Tags' => 
                  array (
                    'description' => '实例标签。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'tagKey' => 
                        array (
                          'description' => '标签键。',
                          'type' => 'string',
                          'example' => 'env',
                        ),
                        'tagValue' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'dev',
                        ),
                      ),
                    ),
                  ),
                  'ZoneInfos' => 
                  array (
                    'description' => '可用区信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'status' => 
                        array (
                          'description' => '可用区状态。支持：

- ISOLATION：下线
- NORMAL：正常',
                          'type' => 'string',
                          'example' => 'NORMAL',
                        ),
                        'zoneId' => 
                        array (
                          'description' => '可用区ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-b',
                        ),
                      ),
                    ),
                  ),
                  'ExtendConfigs' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '集群扩展参数配置。',
                      'type' => 'object',
                      'example' => '[{ "configType": "aliVersion","aliVersion": "ali1.3.0" }]',
                    ),
                  ),
                  'nodeSpec' => 
                  array (
                    'description' => '节点的配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'spec' => 
                      array (
                        'description' => '节点的规格。',
                        'type' => 'string',
                        'example' => 'elasticsearch.sn1ne.large',
                      ),
                      'disk' => 
                      array (
                        'description' => '节点的磁盘大小。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '20',
                      ),
                      'diskEncryption' => 
                      array (
                        'description' => '是否使用云盘加密：

- true：使用
- false：不使用',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'diskType' => 
                      array (
                        'description' => '节点的磁盘类型。',
                        'type' => 'string',
                        'example' => 'cloud_ssd',
                      ),
                    ),
                  ),
                  'networkConfig' => 
                  array (
                    'description' => '网络配置。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'vpcId' => 
                      array (
                        'description' => '专有网络ID。',
                        'type' => 'string',
                        'example' => 'vpc-bp16k1dvzxtmagcva****',
                      ),
                      'vsArea' => 
                      array (
                        'description' => '实例所在的可用区。',
                        'type' => 'string',
                        'example' => 'cn-hangzhou-*',
                      ),
                      'type' => 
                      array (
                        'description' => '网络类型。目前只支持专有网络VPC（Virtual Private Cloud）。',
                        'type' => 'string',
                        'example' => 'vpc',
                      ),
                      'vswitchId' => 
                      array (
                        'description' => '虚拟交换机ID。',
                        'type' => 'string',
                        'example' => 'vsw-bp1k4ec6s7sjdbudw****',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C9334241-4837-46C2-B24B-9BDC517318DE\\",\\n  \\"Result\\": {\\n    \\"config\\": {\\n      \\"slowlog.threshold.warn\\": \\"2s\\",\\n      \\"slowlog.threshold.info\\": \\"1s\\",\\n      \\"slowlog.threshold.debug\\": \\"500ms\\",\\n      \\"slowlog.threshold.trace\\": \\"100ms\\"\\n    },\\n    \\"paymentType\\": \\"prepaid\\",\\n    \\"ResourceGroupId\\": \\"rg-aekzvowej3i****\\",\\n    \\"nodeAmount\\": 2,\\n    \\"description\\": \\"ls-cn-abc\\",\\n    \\"createdAt\\": \\"2020-02-06T14:12:03.672Z\\",\\n    \\"status\\": \\"active\\",\\n    \\"vpcInstanceId\\": \\"vpc-bp16k1dvzxtmagcva****\\",\\n    \\"updatedAt\\": \\"2020-02-06T14:22:36.850Z\\",\\n    \\"version\\": \\"7.4.0_with_X-Pack\\",\\n    \\"instanceId\\": \\"ls-cn-abc\\",\\n    \\"endpointList\\": [\\n      {\\n        \\"zoneId\\": \\"cn-hangzhou-b\\",\\n        \\"port\\": \\"9600\\",\\n        \\"host\\": \\"172.16.**.**\\"\\n      }\\n    ],\\n    \\"Tags\\": [\\n      {\\n        \\"tagKey\\": \\"env\\",\\n        \\"tagValue\\": \\"dev\\"\\n      }\\n    ],\\n    \\"ZoneInfos\\": [\\n      {\\n        \\"status\\": \\"NORMAL\\",\\n        \\"zoneId\\": \\"cn-hangzhou-b\\"\\n      }\\n    ],\\n    \\"ExtendConfigs\\": [\\n      [\\n        {\\n          \\"configType\\": \\"aliVersion\\",\\n          \\"aliVersion\\": \\"ali1.3.0\\"\\n        }\\n      ]\\n    ],\\n    \\"nodeSpec\\": {\\n      \\"spec\\": \\"elasticsearch.sn1ne.large\\",\\n      \\"disk\\": 20,\\n      \\"diskEncryption\\": true,\\n      \\"diskType\\": \\"cloud_ssd\\"\\n    },\\n    \\"networkConfig\\": {\\n      \\"vpcId\\": \\"vpc-bp16k1dvzxtmagcva****\\",\\n      \\"vsArea\\": \\"cn-hangzhou-*\\",\\n      \\"type\\": \\"vpc\\",\\n      \\"vswitchId\\": \\"vsw-bp1k4ec6s7sjdbudw****\\"\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查询Logstash实例信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => '更多参数说明请参见[ListLogstash](~~160534~~)。',
      'extraInfo' => ' ',
    ),
    'RenewLogstash' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/actions/renew',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-n6w1o5jq****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：续费成功
- false：续费失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DC****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DC****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'Logstash实例续费',
      'summary' => '指定Logstash实例续费。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数。

| 参数 | 类型 | 是否必选 | 示例值 | 描述 |
| --- | --- | --- | --- | --- |
| duration | Integer | 是 | 1 | 续费时长。<br />如果pricingCycle为Year，可选值：1~3。<br />如果pricingCycle为Month，可选值：1~9。 |
| pricingCycle | String | 是 | Year | 续费周期。可选值：Year、Month。|

示例如下。

```
{
    "duration":1,
    "pricingCycle":"Year"
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RestartLogstash' => 
    array (
      'summary' => '重启指定实例。重启后，实例会进入生效中（activing）状态。',
      'path' => '/openapi/logstashes/{InstanceId}/actions/restart',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-v0h1kzca****',
          ),
        ),
        1 => 
        array (
          'name' => 'force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制重启：

- true：强制，
- false（默认）：不强制',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        2 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体。',
            'type' => 'object',
            'properties' => 
            array (
              'batchCount' => 
              array (
                'title' => '强制重启百分比。蓝绿重启时，无法强制重启，无需设置。',
                'description' => '强制重启的并发度。蓝绿重启时，无法进行强制重启，无需设置。',
                'type' => 'number',
                'format' => 'double',
                'required' => false,
                'maximum' => '100',
                'minimum' => '0',
                'example' => '20%',
              ),
              'restartType' => 
              array (
                'title' => '重启类型
',
                'description' => '重启类型，可选值：

- instance：重启实例
- nodeIp：重启节点
',
                'type' => 'string',
                'required' => false,
                'example' => 'instance',
                'enum' => 
                array (
                  0 => 'instance 实例重启',
                  1 => 'nodeType 角色类型重启',
                  2 => 'nodeIp 指定节点IP重启',
                ),
              ),
              'nodes' => 
              array (
                'title' => '节点重启时，选择的节点IP',
                'description' => '重启节点时，选择的节点信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '待重启的节点的IP地址列表，采用JSON数组格式。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '["192.168.1.1"]',
                ),
                'required' => false,
              ),
              'nodeTypes' => 
              array (
                'title' => '角色重启时，选择的角色类型。',
                'description' => '重启的角色节点类型，暂不支持。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '重启的角色节点类型，暂不支持。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'kibana',
                ),
                'required' => false,
              ),
              'blueGreenDep' => 
              array (
                'title' => '是否蓝绿重启',
                'description' => '是否进行蓝绿重启，默认为false。',
                'type' => 'boolean',
                'required' => false,
                'example' => 'false',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
              'Result' => 
              array (
                'description' => '当前实例的详情。',
                '$ref' => '#/components/schemas/Logstash',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\",\\n  \\"Result\\": {\\n    \\"endpointList\\": [\\n      {\\n        \\"host\\": \\"\\",\\n        \\"port\\": 0,\\n        \\"zoneId\\": \\"\\"\\n      }\\n    ],\\n    \\"status\\": \\"\\",\\n    \\"description\\": \\"\\",\\n    \\"resourceGroupId\\": \\"\\",\\n    \\"endTime\\": 0,\\n    \\"instanceId\\": \\"\\",\\n    \\"config\\": {\\n      \\"key\\": \\"\\"\\n    },\\n    \\"createdAt\\": \\"\\",\\n    \\"networkConfig\\": {\\n      \\"type\\": \\"\\",\\n      \\"vpcId\\": \\"\\",\\n      \\"vsArea\\": \\"\\",\\n      \\"vswitchId\\": \\"\\"\\n    },\\n    \\"zoneInfos\\": [\\n      {\\n        \\"status\\": \\"\\",\\n        \\"zoneId\\": \\"\\"\\n      }\\n    ],\\n    \\"nodeAmount\\": 0,\\n    \\"updatedAt\\": \\"\\",\\n    \\"version\\": \\"\\",\\n    \\"dataNode\\": true,\\n    \\"nodeSpec\\": {\\n      \\"disk\\": 0,\\n      \\"diskType\\": \\"\\",\\n      \\"spec\\": \\"\\"\\n    },\\n    \\"paymentType\\": \\"\\",\\n    \\"protocol\\": \\"\\",\\n    \\"tags\\": [\\n      {\\n        \\"tagKey\\": \\"\\",\\n        \\"tagValue\\": \\"\\"\\n      }\\n    ],\\n    \\"zoneCount\\": 0\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '重启实例',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => '返回数据中还包括Result参数，参数说明请参见[ListLogstash](~~160534~~)。',
      'extraInfo' => ' ',
    ),
    'EstimatedLogstashRestartTime' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/estimated-time/restart-time',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否是强制重启。默认：false。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'unit' => 
                  array (
                    'description' => '单位。',
                    'type' => 'string',
                    'example' => 'second',
                  ),
                  'value' => 
                  array (
                    'description' => '重启预估时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '600',
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Result\\": {\\n    \\"unit\\": \\"second\\",\\n    \\"value\\": 600\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取Logstash实例重启预估时间',
      'summary' => '获取Logstash实例重启的预估时间。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还可以填入以下参数，用来指定重启参数信息。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| restartType| String | 否 | instance|重启类型，支持：instance（重启实例，默认）、nodeIp（节点重启）。|
| nodes| List<String\\> | 否| ["127.0.xx.xx"] |选择节点重启时，目标节点的IP地址列表。|
| blueGreenDep| Boolean | 否 | false |节点重启时，是否进行蓝绿变更，默认为false。|
| batch| Integer | 否| 25.0 | 实例强制重启的并发度。默认：1/实例总节点数。|
| batchUnit| String | 否 | percent |batch单位。默认：percent。|

   * restartType为instance时，忽略blueGreenDep参数。
       * force为true，batch必须大于0，小于等于100，否则系统会提示RestartBatchValueError的报错。
       * force为false，batch默认为0，输入其他值时，会报错NormalRestartNotSupportBatch。
  * restartType为nodeIp时，忽略batch参数。
      * nodeIp为空，系统会提示参数错误。
      * blueGreenDep为true，进行蓝绿变更重启；为false，正常重启。

示例如下。

```
{
    "restartType":"nodeIp",
    "nodes": ["172.16.xx.xx"],
    "blueGreenDep":true
}
```

',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateLogstashSettings' => 
    array (
      'summary' => '更新指定Logstash实例的配置。',
      'path' => '/openapi/logstashes/{InstanceId}/instance-settings',
      'methods' => 
      array (
        0 => 'patch',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-2r42btxr****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '71D0D1DA-B22F-58CB-AF5B-D1657A6A****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"71D0D1DA-B22F-58CB-AF5B-D1657A6A****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改Logstash实例配置',
      'description' => '调用该接口时，请注意：
实例状态为生效中（activating）、失效（invalid）和冻结（inactive）时，无法更新信息。',
      'requestParamsDescription' => ' ** RequestBody**

RequestBody中还需要填入以下参数，用来更新指定Logstash实例的配置。
| 参数 | 类型 | 是否必要 | 示例值 | 描述 |
| --- | --- | --- | --- | --- |
|config|Map|否|{"thread_pool.bulk.queue_size":500}|用于更新实例的YML配置信息。|',
      'responseParamsDescription' => ' 返回数据中还包含Result参数，参数说明请参见[ListLogstash](~~160534~~)。',
      'extraInfo' => ' ',
    ),
    'ListExtendfiles' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/extendfiles',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'filePath' => 
                    array (
                      'description' => '扩展文件路径。',
                      'type' => 'string',
                      'example' => '/ssd/1/share/ls-cn-oew1qbgl****/logstash/current/config/custom/mysql-connector-java-5.1.35.jar',
                    ),
                    'fileSize' => 
                    array (
                      'description' => '扩展文件大小。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '968668',
                    ),
                    'name' => 
                    array (
                      'description' => '扩展文件名称。',
                      'type' => 'string',
                      'example' => 'mysql-connector-java-5.1.35.jar',
                    ),
                    'sourceType' => 
                    array (
                      'description' => '来源类型。',
                      'type' => 'string',
                      'example' => 'ORIGIN',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": [\\n    {\\n      \\"filePath\\": \\"/ssd/1/share/ls-cn-oew1qbgl****/logstash/current/config/custom/mysql-connector-java-5.1.35.jar\\",\\n      \\"fileSize\\": 968668,\\n      \\"name\\": \\"mysql-connector-java-5.1.35.jar\\",\\n      \\"sourceType\\": \\"ORIGIN\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'Logstash扩展文件配置',
      'summary' => '获取Logstash实例的扩展文件配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListLogstashPlugins' => 
    array (
      'summary' => '调用ListLogstashPlugins，获取所有或指定插件的详细信息。',
      'path' => '/openapi/logstashes/{InstanceId}/plugins',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'logstash-filter-clone',
          ),
        ),
        2 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件列表的分页数。默认值：1，最小值：1，最大值：200。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页条数。最小值：1，最大值：200。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '3',
          ),
        ),
        4 => 
        array (
          'name' => 'source',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件来源。可选值：

- USER：自定义插件
- SYSTEM：系统预置插件',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'USER',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '99407AB-2FA9-489E-A259-40CF6DCC****	',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'description' => 
                    array (
                      'description' => '插件描述。',
                      'type' => 'string',
                      'example' => 'The clone filter is for duplicating events.',
                    ),
                    'specificationUrl' => 
                    array (
                      'description' => '插件的说明文档地址。',
                      'type' => 'string',
                      'example' => 'https://xxx.html',
                    ),
                    'state' => 
                    array (
                      'description' => '插件的状态。支持：

- INSTALLED：已安装
- UNINSTALLED：未安装
- INSTALLING：安装中
- UNINSTALLING：卸载中
- UPGRADING：升级中
- FAILED：安装失败
- UNKNOWN：集群失联无法获取到创建状态',
                      'type' => 'string',
                      'example' => 'INSTALLED',
                    ),
                    'source' => 
                    array (
                      'description' => '插件来源。',
                      'type' => 'string',
                      'example' => 'SYSTEM',
                    ),
                    'name' => 
                    array (
                      'description' => '插件名称。',
                      'type' => 'string',
                      'example' => 'logstash-filter-clone',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"99407AB-2FA9-489E-A259-40CF6DCC****\\\\t\\",\\n  \\"Result\\": [\\n    {\\n      \\"description\\": \\"The clone filter is for duplicating events.\\",\\n      \\"specificationUrl\\": \\"https://xxx.html\\",\\n      \\"state\\": \\"INSTALLED\\",\\n      \\"source\\": \\"SYSTEM\\",\\n      \\"name\\": \\"logstash-filter-clone\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取Logstash插件列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' 返回数据中还包含以下参数。
|  名称  | 类型  | 示例值  | 描述  |
|  ----  | ----  | ----  | ----  |
| Headers | Struct |    | 返回头信息。|
|  └X-Total-Count  | Integer |  131  | 返回的插件数量。|

> └表示子参数。',
      'extraInfo' => ' ',
    ),
    'InstallLogstashSystemPlugin' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/plugins/system/actions/install',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回对象。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC4****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '安装成功的插件列表。',
                  'type' => 'string',
                  'example' => '["logstash-input-datahub", "logstash-input-maxcompute"]',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC4****\\",\\n  \\"Result\\": [\\n    \\"[\\\\\\"logstash-input-datahub\\\\\\", \\\\\\"logstash-input-maxcompute\\\\\\"]\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '安装Logstash系统插件',
      'summary' => '为指定的Logstash实例安装系统插件。',
      'description' => '调用该接口前，请注意：
待安装的插件必须包含在阿里云Logstash的[系统默认插件列表](~~139626~~)中，不支持外部开源插件。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入待安装的插件名称，格式为`["pluginName1","pluginName2",...,"pluginNamen"]`，示例如下。

```
[
    "logstash-input-datahub",
    "logstash-input-maxcompute"
]
```',
      'responseParamsDescription' => '返回数据中还包含**Headers**参数，表示返回头信息。',
      'extraInfo' => ' ',
    ),
    'UninstallLogstashPlugin' => 
    array (
      'summary' => 'Logstash实例卸载已安装的插件。',
      'path' => '/openapi/logstashes/{InstanceId}/plugins/actions/uninstall',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '待卸载的插件名称列表，格式为`["pluginName1","pluginName2",...,"pluginNamen"]`。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => false,
            ),
            'required' => false,
            'example' => '["logstash-input-datahub", "logstash-input-maxcompute" ]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
              'Result' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'description' => '已经卸载的插件列表。',
                  'type' => 'string',
                  'example' => '["logstash-input-datahub", "logstash-input-maxcompute" ]',
                ),
              ),
              'Headers' => 
              array (
                'type' => 'object',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\",\\n  \\"Result\\": [\\n    \\"[\\\\\\"logstash-input-datahub\\\\\\", \\\\\\"logstash-input-maxcompute\\\\\\" ]\\"\\n  ],\\n  \\"Headers\\": {\\n    \\"test\\": \\"test\\",\\n    \\"test2\\": 1\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '卸载已安装的插件',
      'responseParamsDescription' => '返回数据中还包含Headers参数，表示返回头信息。',
      'extraInfo' => ' ',
    ),
    'ListLogstashLog' => 
    array (
      'summary' => '调用ListLogstashLog，查看Logstash实例的日志。',
      'path' => '/openapi/logstashes/{InstanceId}/search-log',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-v0h1kzca****',
          ),
        ),
        1 => 
        array (
          'name' => 'type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志类型。可选值：

- LOGSTASH_INSTANCE_LOG：主日志。
- SEARCHSLOW：searching慢日志。
- INDEXINGSLOW：indexing慢日志。
- JVMLOG：GC日志。
- LOGSTASH_DEBUG_LOG：调试日志。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'LOGSTASH_INSTANCE_LOG',
          ),
        ),
        2 => 
        array (
          'name' => 'query',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的关键词。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'host:10.7.xx.xx AND level:info AND content:opening',
          ),
        ),
        3 => 
        array (
          'name' => 'beginTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志开始的时间戳。单位：毫秒。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '1531910852074',
          ),
        ),
        4 => 
        array (
          'name' => 'endTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志结束的时间戳。单位：毫秒。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '1531910852074',
          ),
        ),
        5 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例列表的页码。默认值：1，最小值：1，最大值：200。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页条数。默认值：20，最小值：1，最大值：100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7F40EAA1-6F1D-4DD9-8DB8-C5F00C4E****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'level' => 
                    array (
                      'description' => '日志级别。包括trace、debug、info、warn、error等内容（GC日志没有level）。',
                      'type' => 'string',
                      'example' => 'info',
                    ),
                    'content' => 
                    array (
                      'description' => '日志的详细内容。',
                      'type' => 'string',
                      'example' => '[logstash.outputs.fileextend] Opening file {:path=>\\"/ssd/1/ls-cn-v0h1kzca****/logstash/logs/debug/test\\"}',
                    ),
                    'timestamp' => 
                    array (
                      'description' => '日志生成的时间戳。单位：毫秒。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1531985112420',
                    ),
                    'instanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'ls-cn-v0h1kzca****',
                    ),
                    'host' => 
                    array (
                      'description' => '生成日志的节点的IP地址。',
                      'type' => 'string',
                      'example' => '192.168.xx.xx',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7F40EAA1-6F1D-4DD9-8DB8-C5F00C4E****\\",\\n  \\"Result\\": [\\n    {\\n      \\"level\\": \\"info\\",\\n      \\"content\\": \\"[logstash.outputs.fileextend] Opening file {:path=>\\\\\\\\\\\\\\"/ssd/1/ls-cn-v0h1kzca****/logstash/logs/debug/test\\\\\\\\\\\\\\"}\\",\\n      \\"timestamp\\": 1531985112420,\\n      \\"instanceId\\": \\"ls-cn-v0h1kzca****\\",\\n      \\"host\\": \\"192.168.xx.xx\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '查看Logstash实例的日志',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => '返回数据中还包含以下参数。
|  名称  | 类型  |  示例值  | 描述  |
|  ----  | ----  | ----  | ----  |
| Result | Struct |     | 返回结果。|
|  └time | String | 2020-07-22T16:58:00.506Z   | 日志产生的时间。|
| Headers | Struct |    | 返回头信息。|
|  └X-Total-Count | Integer | 1  | 返回的日志数量。|

> └表示子参数。',
      'extraInfo' => ' ',
    ),
    'UpdateXpackMonitorConfig' => 
    array (
      'summary' => '更新Logstash实例的X-Pack监控报警配置。',
      'path' => '/openapi/logstashes/{InstanceId}/xpack-monitor-config',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'X-Pack监控的配置信息。',
            'type' => 'object',
            'properties' => 
            array (
              'enable' => 
              array (
                'title' => 'xpack 监控是否启用。设置为false时，无需设置其他参数',
                'description' => '是否开启X-Pack监控：

- true：开启
- false：不开启',
                'type' => 'boolean',
                'required' => false,
                'example' => 'true',
                'default' => 'false',
              ),
              'endpoints' => 
              array (
                'title' => 'Elasticsearch实例的访问地址。',
                'description' => 'Elasticsearch实例的访问地址。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => 'Elasticsearch实例的访问地址。',
                  'description' => 'Elasticsearch实例的访问地址。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'http://es-cn-n6w1o1x0w001c****.elasticsearch.aliyuncs.com:9200',
                ),
                'required' => false,
                'maxItems' => 2,
                'minItems' => 1,
              ),
              'userName' => 
              array (
                'title' => 'Elasticsearch实例的用户名。',
                'description' => 'Elasticsearch实例的用户名。',
                'type' => 'string',
                'required' => false,
                'example' => 'elastic',
              ),
              'password' => 
              array (
                'title' => 'Elasticsearch实例的访问密码。',
                'description' => 'Elasticsearch实例的密码。',
                'type' => 'string',
                'required' => false,
                'example' => '******',
              ),
            ),
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：更新成功
- false：更新失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。
',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更新X-Pack监控报警配置',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListAvailableEsInstanceIds' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/available-elasticsearch-for-centralized-management',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'endpoint' => 
                    array (
                      'description' => 'Elasticsearch实例的公网访问地址。',
                      'type' => 'string',
                      'example' => 'http://es-cn-n6w1o1x0w001c****.elasticsearch.aliyuncs.com:9200',
                    ),
                    'description' => 
                    array (
                      'description' => 'Elasticsearch实例名称。',
                      'type' => 'string',
                      'example' => 'instanceName',
                    ),
                    'kibanaEndpoint' => 
                    array (
                      'description' => 'Kibana的公网访问地址。',
                      'type' => 'string',
                      'example' => 'https://es-cn-n6w1o1x0w001c****.kibana.elasticsearch.aliyuncs.com:5601',
                    ),
                    'esInstanceId' => 
                    array (
                      'description' => 'Elasticsearch实例ID。',
                      'type' => 'string',
                      'example' => 'es-cn-n6w1o1x0w001c****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": [\\n    {\\n      \\"endpoint\\": \\"http://es-cn-n6w1o1x0w001c****.elasticsearch.aliyuncs.com:9200\\",\\n      \\"description\\": \\"instanceName\\",\\n      \\"kibanaEndpoint\\": \\"https://es-cn-n6w1o1x0w001c****.kibana.elasticsearch.aliyuncs.com:5601\\",\\n      \\"esInstanceId\\": \\"es-cn-n6w1o1x0w001c****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取可用的实例列表',
      'summary' => '在设置Logstash实例的X-Pack监控时，获取可用的Elasticsearch实例列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeXpackMonitorConfig' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/xpack-monitor-config',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'userName' => 
                  array (
                    'description' => 'X-Pack监控关联的Elasticsearch实例的访问用户名。',
                    'type' => 'string',
                    'example' => 'elastic',
                  ),
                  'esInstanceId' => 
                  array (
                    'description' => 'X-Pack监控关联的Elasticsearch实例ID。',
                    'type' => 'string',
                    'example' => 'es-cn-n6w1o1x0w001c****',
                  ),
                  'enable' => 
                  array (
                    'description' => '是否开启X-Pack监控：
- true：开启
- false：未开启',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'endpoints' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'X-Pack监控关联的Elasticsearch实例的访问地址列表。',
                      'type' => 'string',
                      'example' => '["http://es-cn-n6w1o1x0w001c****.elasticsearch.aliyuncs.com:9200"]',
                    ),
                  ),
                  'pipelineIds' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'X-Pack监控关联的Kibana实例管理的管道列表。',
                      'type' => 'string',
                      'example' => '[]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": {\\n    \\"userName\\": \\"elastic\\",\\n    \\"esInstanceId\\": \\"es-cn-n6w1o1x0w001c****\\",\\n    \\"enable\\": true,\\n    \\"endpoints\\": [\\n      \\"[\\\\\\"http://es-cn-n6w1o1x0w001c****.elasticsearch.aliyuncs.com:9200\\\\\\"]\\"\\n    ],\\n    \\"pipelineIds\\": [\\n      \\"[]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取实例X-Pack监控配置',
      'summary' => '获取Logstash实例的X-Pack监控配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ValidateConnection' => 
    array (
      'summary' => '验证提供X-Pack监控的Elasticsearch实例的联通性。',
      'path' => '/openapi/logstashes/{InstanceId}/validate-connection',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。
',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：验证成功
- false：验证失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '验证监控联通性',
      'description' => '> 开启Logstash的X-Pack监控需配置Elasticsearch实例。配置后，即可在对应Elasticsearch实例的Kibana中监控Logstash实例。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定需要连通的Elasticsearch实例的信息。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| endpoints|  List<String\\>|是|["http://es-cn-n6w1o1x0w001c****.elasticsearch.aliyuncs.com:9200"]|提供X-Pack监控的Elasticsearch实例的访问地址。|
| userName| String | 是 | elastic|Elasticsearch实例的用户名。|
| password| String | 是 | xxx|Elasticsearch实例的密码。|

示例如下。

```
{
    "endpoints": [
        "http://es-cn-n6w1o1x0w001c****.elasticsearch.aliyuncs.com:9200"
    ],
    "userName": "elastic",
    "password": "xxxx"
}
```',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'InterruptLogstashTask' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/actions/interrupt',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-4591f1y6****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '错误码 ，正常调用时，不会返回该参数。',
                'type' => 'string',
                'example' => '.',
              ),
              'Message' => 
              array (
                'description' => '错误信息，正常调用时，不会返回该参数。',
                'type' => 'string',
                'example' => '.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0FA05123-745C-42FD-A69B-AFF48EF9****',
              ),
              'Result' => 
              array (
                'description' => '返回结果：

- true：中断任务成功
- false：中断任务失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\".\\",\\n  \\"Message\\": \\".\\",\\n  \\"RequestId\\": \\"0FA05123-745C-42FD-A69B-AFF48EF9****\\",\\n  \\"Result\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '中断实例变更任务',
      'summary' => '中断后，实例会进入中断中（suspended）状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ResumeLogstashTask' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/actions/resume',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-4591f1y6****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '错误码 ，正常调用时，不会返回该参数。',
                'type' => 'string',
                'example' => 'InstanceNotFound',
              ),
              'Message' => 
              array (
                'description' => '错误信息，正常调用时，不会返回该参数。',
                'type' => 'string',
                'example' => 'The specified cluster does not exist. Check the cluster status and try again.',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0FA05123-745C-42FD-A69B-AFF48EF9****',
              ),
              'Result' => 
              array (
                'description' => '返回结果：

- true：恢复任务成功
- false：恢复任务失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"InstanceNotFound\\",\\n  \\"Message\\": \\"The specified cluster does not exist. Check the cluster status and try again.\\",\\n  \\"RequestId\\": \\"0FA05123-745C-42FD-A69B-AFF48EF9****\\",\\n  \\"Result\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '恢复实例变更中断任务',
      'summary' => '恢复实例的变更中断任务。恢复后实例会进入生效中（activating）状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreatePipelines' => 
    array (
      'summary' => '创建Logstash管道，采集数据。',
      'path' => '/openapi/logstashes/{InstanceId}/pipelines',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'trigger',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否部署。true，保存并部署。false，仅保存。',
            'description' => '是否保存并部署管道。可选值：

- true：保存并部署
- false（默认）：仅保存',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。
',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体参数，用来指定管道信息，更多详细信息请参见[logstash.yml](https://www.elastic.co/guide/en/logstash/6.7/logstash-settings-file.html)。',
            'type' => 'array',
            'items' => 
            array (
              'title' => '',
              'description' => '请求体对象。',
              'type' => 'object',
              'properties' => 
              array (
                'pipelineId' => 
                array (
                  'title' => '管道Id。',
                  'description' => '管道ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'pipeline-test',
                ),
                'description' => 
                array (
                  'title' => '管道描述。',
                  'description' => '管道描述。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'this is a test',
                ),
                'config' => 
                array (
                  'title' => '管道具体配置。',
                  'description' => '管道具体配置。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'input { } filter { } output { }',
                ),
                'workers' => 
                array (
                  'title' => '管道工作线程数。',
                  'description' => '管道工作线程数。默认值：实例的CPU核数。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '2',
                  'default' => '实例的CPU核数。',
                ),
                'batchSize' => 
                array (
                  'title' => '管道批大小。',
                  'description' => '管道批大小。默认值：125。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '125',
                  'default' => '125',
                ),
                'batchDelay' => 
                array (
                  'title' => '管道批延迟。单位ms。',
                  'description' => '管道批延迟。单位：毫秒，默认值：50。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '50',
                  'default' => '50',
                ),
                'queueType' => 
                array (
                  'title' => '队列类型。',
                  'description' => '队列类型。可选值：
- MEMORY：基于内存的传统队列。
- PERSISTED：基于磁盘的ACKed队列（持久队列）。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'MEMORY',
                  'enum' => 
                  array (
                    0 => 'MEMORY',
                    1 => 'PERSISTED',
                  ),
                ),
                'queueMaxBytes' => 
                array (
                  'title' => '队列最大字节数。单位：MB。',
                  'description' => '队列的总容量（以字节数表示）。单位：MB，默认值：1024。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1024',
                  'default' => '1024',
                ),
                'queueCheckPointWrites' => 
                array (
                  'title' => '队列检查点写入数。',
                  'description' => '队列检查点写入数。默认值：1024。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1024',
                  'default' => '1024',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '管道是否创建成功：

- true：创建成功
- false：创建失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '创建Logstash管道',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeletePipelines' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/pipelines',
      'methods' => 
      array (
        0 => 'delete',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'pipelineIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '管道ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'pipeline-test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：删除成功
- false：删除失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '删除Logstash管道',
      'summary' => '删除Logstash实例所配置的管道。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdatePipelines' => 
    array (
      'summary' => '调用UpdatePipelines，更新Logstash管道信息。',
      'path' => '/openapi/logstashes/{InstanceId}/pipelines',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'trigger',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否立即部署。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：更新成功
- false：更新失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更新Logstash管道信息',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定更新的管道信息。

> RequestBody中需填入JSON格式的pipeline数组。

| 名称 | 类型 | 是否必选 | 示例值 | 描述 | 
| ---- | ---- | ---- | ---- | ---- | 
| pipelineId| String | 是 | pipeline-test |待更新的管道的ID。| 
| description| String | 否 | this is a test |管道描述。|
| config| String | 是 | input { } filter { } output { } |管道具体配置。|
| workers| Integer | 否 | 2 |管道工作线程数。| 
| batchSize| Integer | 否 | 125 |管道批大小。|
| batchDelay| Integer | 否 | 50 |管道批延迟。|
| queueType| String | 否 | MEMORY |队列类型，支持：MEMORY、PERSISTED。|
| pipelineStatus| String | 否 | RUNNING |管道状态，支持：NOT_DEPLOYED、RUNNING、DELETED。trigger为true时，必填。 | 
| queueMaxBytes| Integer| 否 | 1024 |队列最大字节数。 |
| queueCheckPointWrites|Integer|否| 1024 |队列检查点写入数。|

示例如下。

```
[
    {
        "pipelineId": "test",
        "config": "input {\\n\\n}\\nfilter {\\n\\n}\\noutput {\\n \\n}"
    }
]
```

',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StopPipelines' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/pipelines/action/stop',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：停止运行管道成功
- false：停止运行管道失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '停止运行Logstash管道',
      'summary' => '调用StopPipelines，停止运行Logstash管道。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入管道ID列表，用来指定待部署的管道，示例：`["PipelineId1","PipelineId2","..."]`。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdatePipelineManagementConfig' => 
    array (
      'summary' => '修改指定Logstash实例的管道管理方式。',
      'path' => '/openapi/logstashes/{InstanceId}/pipeline-management-config',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '关联的Elasticsearch实例信息。',
            'type' => 'object',
            'properties' => 
            array (
              'endpoints' => 
              array (
                'title' => '开启Kibana管理管道后，Kibana所在Elasticsearch实例的访问地址列表。',
                'description' => '开启Kibana管理管道后，Kibana所在Elasticsearch实例的访问地址列表。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '开启Kibana管理管道后，Kibana所在Elasticsearch实例的访问地址',
                  'description' => '开启Kibana管理管道后，Kibana所在Elasticsearch实例的访问地址列表。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '["http://es-cn-n6w1o1x0w001c****.elasticsearch.aliyuncs.com:9200"]',
                ),
                'required' => false,
              ),
              'userName' => 
              array (
                'title' => 'Kibana的用户名。管理方式为ES设置',
                'description' => '登录Kibana的用户名。',
                'type' => 'string',
                'required' => false,
                'example' => 'elastic',
              ),
              'password' => 
              array (
                'title' => 'Kibana的密码。管理方式为ES设置',
                'description' => '登录Kibana的密码。',
                'type' => 'string',
                'required' => false,
                'example' => '******',
              ),
              'pipelineIds' => 
              array (
                'title' => 'Kibana管理的管道列表。管理方式为ES设置',
                'description' => 'Kibana管理的管道列表。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => 'Kibana管理的管道。管理方式为ES设置',
                  'description' => 'Kibana管理的管道列表。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '["testKibanaManagement"]',
                ),
                'required' => false,
              ),
              'pipelineManagementType' => 
              array (
                'title' => '管道管理方式',
                'description' => '管道管理方式，可选值：

- ES：Kibana管道管理
- MULTIPLE_PIPELINE：配置文件管理',
                'type' => 'string',
                'required' => false,
                'example' => 'ES',
                'enum' => 
                array (
                  0 => 'ES Kibana管道管理',
                  1 => 'MULTIPLE_PIPELINE 配置文件管理',
                ),
              ),
            ),
            'required' => false,
            'example' => '{     "pipelineManagementType": "ES",     "endpoints": [         "http://es-cn-n6w1o1x0w001c****.elasticsearch.aliyuncs.com:9200"     ],     "pipelineIds": [         "testKibanaManagement"     ],     "userName": "elastic",     "password": "xxxx",     "esInstanceId": "es-cn-n6w1o1x0w001c****" }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：更新成功
- false：更新失败
',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '修改管道管理方式',
      'description' => '> 管道管理方式分为配置文件管理和Kibana管道管理，目前控制台已不支持Kibana管道管理，仅可通过API使用此功能。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListPipeline' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/pipelines',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'pipelineId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '管道ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'pipeline_test',
          ),
        ),
        2 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时，设置当前页面的页码。取值范围：1~200，默认值：1。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时，设置每页包含管道的数量。取值范围：1~200。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '15',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。
',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'pipelineId' => 
                    array (
                      'description' => '管道ID。',
                      'type' => 'string',
                      'example' => 'pipeline_test',
                    ),
                    'gmtUpdateTime' => 
                    array (
                      'description' => '管道更新时间。',
                      'type' => 'string',
                      'example' => '2020-08-05T08:43:31.757Z',
                    ),
                    'gmtCreatedTime' => 
                    array (
                      'description' => '管道创建时间。',
                      'type' => 'string',
                      'example' => '2020-08-05T03:10:38.188Z',
                    ),
                    'pipelineStatus' => 
                    array (
                      'description' => '管道状态，支持：

- NOT_DEPLOYED：未部署
- RUNNING：运行中
- DELETED：已删除（控制台不展示此状态）',
                      'type' => 'string',
                      'example' => 'NOT_DEPLOYED',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 2\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"pipelineId\\": \\"pipeline_test\\",\\n      \\"gmtUpdateTime\\": \\"2020-08-05T08:43:31.757Z\\",\\n      \\"gmtCreatedTime\\": \\"2020-08-05T03:10:38.188Z\\",\\n      \\"pipelineStatus\\": \\"NOT_DEPLOYED\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'Logstash的管道列表',
      'summary' => '获取Logstash的管道列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribePipeline' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/pipelines/{PipelineId}',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'PipelineId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '管道ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pipeline_test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '829F38F6-E2D6-4109-90A6-888160BD1***',
              ),
              'Result' => 
              array (
                'description' => '返回的管道信息，更多详细信息请参见[logstash.yml](https://www.elastic.co/guide/en/logstash/6.7/logstash-settings-file.html)。',
                'type' => 'object',
                'properties' => 
                array (
                  'pipelineId' => 
                  array (
                    'description' => '管道ID。',
                    'type' => 'string',
                    'example' => 'pipeline_test',
                  ),
                  'gmtUpdateTime' => 
                  array (
                    'description' => '管道更新时间。',
                    'type' => 'string',
                    'example' => '2020-06-20T07:26:47.000+0000',
                  ),
                  'queueType' => 
                  array (
                    'description' => '队列类型。支持：

- MEMORY：基于内存的传统队列。
- PERSISTED：基于磁盘的ACKed队列（持久队列）。

',
                    'type' => 'string',
                    'example' => 'MEMORY',
                  ),
                  'queueCheckPointWrites' => 
                  array (
                    'description' => '队列检查点写入数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1024',
                  ),
                  'queueMaxBytes' => 
                  array (
                    'description' => '队列的总容量（以字节数表示）。单位：MB。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1024',
                  ),
                  'config' => 
                  array (
                    'description' => '管道具体配置。

',
                    'type' => 'string',
                    'example' => 'input {  }  filter {  }  output {  }',
                  ),
                  'batchDelay' => 
                  array (
                    'description' => '管道批延迟。单位：毫秒。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '50',
                  ),
                  'workers' => 
                  array (
                    'description' => '管道工作线程数。

',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'description' => 
                  array (
                    'description' => '管道描述。',
                    'type' => 'string',
                    'example' => 'this is a test',
                  ),
                  'gmtCreatedTime' => 
                  array (
                    'description' => '管道创建时间。',
                    'type' => 'string',
                    'example' => '2020-06-20T07:26:47.000+0000',
                  ),
                  'batchSize' => 
                  array (
                    'description' => '管道批大小。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '125',
                  ),
                  'pipelineStatus' => 
                  array (
                    'description' => '管道状态。支持：

- NOT_DEPLOYED：未部署
- RUNNING：运行中
- DELETED：已删除（控制台不展示此状态）

',
                    'type' => 'string',
                    'example' => 'RUNNING',
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"829F38F6-E2D6-4109-90A6-888160BD1***\\",\\n  \\"Result\\": {\\n    \\"pipelineId\\": \\"pipeline_test\\",\\n    \\"gmtUpdateTime\\": \\"2020-06-20T07:26:47.000+0000\\",\\n    \\"queueType\\": \\"MEMORY\\",\\n    \\"queueCheckPointWrites\\": 1024,\\n    \\"queueMaxBytes\\": 1024,\\n    \\"config\\": \\"input {  }  filter {  }  output {  }\\",\\n    \\"batchDelay\\": 50,\\n    \\"workers\\": 2,\\n    \\"description\\": \\"this is a test\\",\\n    \\"gmtCreatedTime\\": \\"2020-06-20T07:26:47.000+0000\\",\\n    \\"batchSize\\": 125,\\n    \\"pipelineStatus\\": \\"RUNNING\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取Logstash管道信息',
      'summary' => '获取Logstash实例的管道信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' > 未配置的管道参数将使用系统默认值，不会在返回结果中显示。',
      'extraInfo' => ' ',
    ),
    'DescribePipelineManagementConfig' => 
    array (
      'summary' => '调用DescribePipelineManagementConfig，获取Logstash管道管理配置。',
      'path' => '/openapi/logstashes/{InstanceId}/pipeline-management-config',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'endpoints' => 
                  array (
                    'description' => 'Elasticsearch实例的访问地址列表，格式为：`域名:端口号`。',
                    'type' => 'string',
                    'example' => '["http://es-cn-n6w1o1x0w001c****.elasticsearch.aliyuncs.com:9200"]',
                  ),
                  'userName' => 
                  array (
                    'description' => '访问实例的用户名。',
                    'type' => 'string',
                    'example' => 'elastic',
                  ),
                  'pipelineManagementType' => 
                  array (
                    'description' => '管道管理方式。支持Kibana和MULTIPLE_PIPELINE。',
                    'type' => 'string',
                    'example' => 'MULTIPLE_PIPELINE',
                  ),
                  'esInstanceId' => 
                  array (
                    'description' => 'Elasticsearch实例ID。',
                    'type' => 'string',
                    'example' => 'es-cn-n6w1o1x0w001c****',
                  ),
                  'pipelineIds' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '管道名称列表。',
                      'type' => 'string',
                      'example' => '["testKibanaManagement"]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Result\\": {\\n    \\"endpoints\\": \\"[\\\\\\"http://es-cn-n6w1o1x0w001c****.elasticsearch.aliyuncs.com:9200\\\\\\"]\\",\\n    \\"userName\\": \\"elastic\\",\\n    \\"pipelineManagementType\\": \\"MULTIPLE_PIPELINE\\",\\n    \\"esInstanceId\\": \\"es-cn-n6w1o1x0w001c****\\",\\n    \\"pipelineIds\\": [\\n      \\"[\\\\\\"testKibanaManagement\\\\\\"]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '获取Logstash管道配置',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RunPipelines' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/pipelines/action/run',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：部署成功
- false：部署失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '部署运行Logstash管道',
      'summary' => '调用RunPipelines，立即部署Logstash管道。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入管道ID列表，用来指定待部署的管道，示例：`["PipelineId1","PipelineId2","..."]`。',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateLogstash' => 
    array (
      'summary' => '调用CreateLogstash，创建一个Logstash实例。',
      'path' => '/openapi/logstashes',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体。',
            'type' => 'object',
            'properties' => 
            array (
              'paymentType' => 
              array (
                'description' => '实例的付费模式。可选值：

- prepaid：包年包月
- postpaid：按量付费',
                'type' => 'string',
                'required' => false,
                'example' => 'prepaid',
              ),
              'version' => 
              array (
                'description' => '实例版本。可选值：

- 6.7_with_X-Pack
- 7.4_with_X-Pack',
                'type' => 'string',
                'required' => true,
                'example' => '6.7_with_X-Pack',
              ),
              'nodeAmount' => 
              array (
                'description' => '实例所包含的节点个数。',
                'type' => 'integer',
                'format' => 'int32',
                'required' => true,
                'example' => '2',
              ),
              'nodeSpec' => 
              array (
                'description' => '数据节点配置信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'disk' => 
                  array (
                    'description' => '节点磁盘大小，单位：GB。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => false,
                    'example' => '50',
                  ),
                  'diskType' => 
                  array (
                    'description' => '节点磁盘类型。可选值：

- cloud_ssd
- cloud_efficiency',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'cloud_ssd',
                  ),
                  'spec' => 
                  array (
                    'description' => '节点规格，规格信息可通过[产品规格](~~271718~~)查看。',
                    'type' => 'string',
                    'required' => true,
                    'example' => 'elasticsearch.ic5.2xlarge',
                  ),
                ),
                'required' => true,
              ),
              'networkConfig' => 
              array (
                'description' => '网络配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'type' => 
                  array (
                    'description' => '网络类型，目前仅支持专有网络。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'vpc',
                  ),
                  'vpcId' => 
                  array (
                    'description' => '专有网络ID。',
                    'type' => 'string',
                    'required' => true,
                    'example' => 'vpc-bp16k1dvzxtmagcva****',
                  ),
                  'vswitchId' => 
                  array (
                    'description' => '交换机ID。',
                    'type' => 'string',
                    'required' => true,
                    'example' => 'vsw-bp1k4ec6s7sjdbudw****',
                  ),
                  'vsArea' => 
                  array (
                    'description' => '实例所在的可用区。',
                    'type' => 'string',
                    'required' => true,
                    'example' => 'cn-hangzhou-i',
                  ),
                ),
                'required' => true,
              ),
              'paymentInfo' => 
              array (
                'description' => '包年包月实例的付费详情，创建包年包月实例时必填。',
                'type' => 'object',
                'properties' => 
                array (
                  'duration' => 
                  array (
                    'title' => '包月周期',
                    'description' => '购买时长，支持按月和按年购买。单位：1~9月，1~3年。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => false,
                    'example' => '1',
                  ),
                  'pricingCycle' => 
                  array (
                    'title' => '日期单位',
                    'description' => '包年包月单位，可选值：

- Year：年
- Month：月',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'Month',
                  ),
                  'isAutoRenew' => 
                  array (
                    'title' => '是否自动续费',
                    'description' => '是否开启自动续费：

- true：是
- false：否',
                    'type' => 'boolean',
                    'required' => false,
                    'example' => 'false',
                  ),
                  'autoRenewDuration' => 
                  array (
                    'title' => '自动续费包月周期',
                    'description' => '自动续费周期，单位：月。**isAutoRenew**为**true**时必填，参数值可选范围与购买页一致。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => false,
                    'example' => '3',
                  ),
                ),
                'required' => false,
              ),
              'description' => 
              array (
                'title' => 'Logstash实例别名。',
                'description' => '实例名称。',
                'type' => 'string',
                'required' => false,
                'example' => 'ls-cn-abc',
              ),
              'resourceGroupId' => 
              array (
                'title' => 'Logstash实例所属资源组。',
                'description' => '实例所在的资源组ID。',
                'type' => 'string',
                'required' => false,
                'example' => 'rg-acfmxxkk2p7****',
              ),
            ),
            'required' => true,
            'docRequired' => true,
            'example' => '7.4.0_with_X-Pack',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '返回结果对象。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE*****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                '$ref' => '#/components/schemas/Logstash',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE*****\\",\\n  \\"Result\\": {\\n    \\"endpointList\\": {\\n      \\"undefined\\": [\\n        {\\n          \\"host\\": \\"\\",\\n          \\"port\\": 0,\\n          \\"zoneId\\": \\"\\"\\n        }\\n      ]\\n    },\\n    \\"status\\": \\"\\",\\n    \\"description\\": \\"\\",\\n    \\"resourceGroupId\\": \\"\\",\\n    \\"endTime\\": 0,\\n    \\"instanceId\\": \\"\\",\\n    \\"config\\": {\\n      \\"key\\": \\"\\"\\n    },\\n    \\"createdAt\\": \\"\\",\\n    \\"networkConfig\\": {\\n      \\"type\\": \\"\\",\\n      \\"vpcId\\": \\"\\",\\n      \\"vsArea\\": \\"\\",\\n      \\"vswitchId\\": \\"\\"\\n    },\\n    \\"zoneInfos\\": {\\n      \\"undefined\\": [\\n        {\\n          \\"status\\": \\"\\",\\n          \\"zoneId\\": \\"\\"\\n        }\\n      ]\\n    },\\n    \\"nodeAmount\\": 0,\\n    \\"updatedAt\\": \\"\\",\\n    \\"version\\": \\"\\",\\n    \\"dataNode\\": true,\\n    \\"nodeSpec\\": {\\n      \\"disk\\": 0,\\n      \\"diskType\\": \\"\\",\\n      \\"spec\\": \\"\\"\\n    },\\n    \\"paymentType\\": \\"\\",\\n    \\"protocol\\": \\"\\",\\n    \\"tags\\": {\\n      \\"undefined\\": [\\n        {\\n          \\"tagKey\\": \\"\\",\\n          \\"tagValue\\": \\"\\"\\n        }\\n      ]\\n    },\\n    \\"zoneCount\\": 0\\n  }\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '创建Logstash实例',
      'description' => '在调用接口前，请注意：
- 请确保在调用该接口前，已充分了解Logstash产品的付费方式和价格。<props="china"><ph>详细信息，请参见[产品计费](~~260882~~)。</ph></props>

- 创建实例需要通过实名认证。<props="china"><ph>详细信息，请参见[实名认证](~~37175~~)。</ph></props>
 
  ',
      'responseParamsDescription' => ' ',
      'extraInfo' => '
',
    ),
    'UpdateExtendfiles' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/extendfiles',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-oew1qbgl****',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****',
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'fileSize' => 
                    array (
                      'description' => '扩展文件大小，单位：Byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1853083',
                    ),
                    'name' => 
                    array (
                      'description' => '扩展文件名称。',
                      'type' => 'string',
                      'example' => 'mysql-connector-java-6.0.2.jar',
                    ),
                    'sourceType' => 
                    array (
                      'description' => '扩展文件来源，仅支持ORIGIN（保留的原有扩展文件）。',
                      'type' => 'string',
                      'example' => 'ORIGIN',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1****\\",\\n  \\"Result\\": [\\n    {\\n      \\"fileSize\\": 1853083,\\n      \\"name\\": \\"mysql-connector-java-6.0.2.jar\\",\\n      \\"sourceType\\": \\"ORIGIN\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<Result>\\n    <name>mysql-connector-java-5.1.35.jar</name>\\n    <fileSize>968668</fileSize>\\n    <sourceType>ORIGIN</sourceType>\\n</Result>\\n<RequestId>27F32ECF-0527-43BF-A116-D6260D1240BE</RequestId>","errorExample":""}]',
      'title' => '更新扩展文件配置',
      'summary' => '更新Logstash实例的扩展文件配置。',
      'description' => '调用此接口时，请注意：
目前此接口仅支持删除控制台已上传的Logstash扩展文件。如需添加或修改，可在控制台上操作。
',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来指定更新后的扩展文件配置。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
| name | String | 是 |mysql-connector-java-6.0.2.jar|扩展文件名称。文件后缀必须是.jar，文件名不支持中文，且长度不超过100个字符。|
| sourceType | String | 是|ORIGIN|扩展文件来源，目前只支持ORIGIN。即保留对应扩展文件，未配置该参数的扩展文件会被删除。添加和修改扩展文件功能正在开发中，您可以在控制实现全部管控操作。|
',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListPipelineIds' => 
    array (
      'path' => '/openapi/instances/{InstanceId}/pipeline-ids',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => 'Logstash实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-7g1umu96oit2e****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'description' => '请求体参数，详情请参见下文的RequestBody章节。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '{     "userName":"elastic",     "password":"xxxxxx" }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Result' => 
              array (
                'description' => '返回结果列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'pipelineId' => 
                    array (
                      'description' => 'Kibana上创建的管道ID。',
                      'type' => 'string',
                      'example' => 'testKibanaManagement',
                    ),
                    'available' => 
                    array (
                      'description' => '管道是否可用，取值含义如下：

- true：可用。

- false：不可用。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'code' => 
                    array (
                      'description' => '管道不可用错误码。',
                      'type' => 'string',
                      'example' => 'OK',
                    ),
                    'message' => 
                    array (
                      'description' => '管道不可用错误信息。',
                      'type' => 'string',
                      'example' => 'OK',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        '5XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        '4XX' => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ComponentCodeValueError',
            'errorMessage' => 'component value is disable',
          ),
        ),
        401 => 
        array (
          0 => 
          array (
            'errorCode' => 'UserNotOpen',
            'errorMessage' => 'Aliyun account is not open elasticsearch',
          ),
          1 => 
          array (
            'errorCode' => 'StsRoleAccountNoPermission',
            'errorMessage' => 'Role account has no permission or expired',
          ),
          2 => 
          array (
            'errorCode' => 'SubAccountNoPermission',
            'errorMessage' => 'Aliyun sub account has no permission, please authorize your sub account in Aliyun RAM',
          ),
          3 => 
          array (
            'errorCode' => 'UserUnauthorized',
            'errorMessage' => 'Authentication required',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Result\\": [\\n    {\\n      \\"pipelineId\\": \\"testKibanaManagement\\",\\n      \\"available\\": true,\\n      \\"code\\": \\"OK\\",\\n      \\"message\\": \\"OK\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => 'Logstash管道ID列表',
      'summary' => '获取Logstash实例管道ID列表。',
      'description' => '> 管道管理方式分为配置文件管理和Kibana管道管理，部分区域控制台不开放Kibana管道管理。',
      'requestParamsDescription' => '## RequestBody
RequestBody中还需填入以下参数，用来验证管理管道的Kibana信息。
| 名称 | 类型 | 是否必选 | 示例值 | 描述 |
| ---- | ---- | ---- | ---- |
|userName| String | 是 | elastic |登录Kibana控制台的用户名，默认为elastic。|
|password | String | 是 |xxxxxx |登录Kibana控制台的密码。|',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CancelLogstashDeletion' => 
    array (
      'path' => '/openapi/logstashes/{InstanceId}/actions/cancel-deletion',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ls-cn-m7r1vsi2****',
          ),
        ),
        1 => 
        array (
          'name' => 'clientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大不值过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '5A2CFF0E-5718-45B5-9D4D-70B3FF****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '是否成功恢复实例：

- true：是
- false：否',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '23EBF56B-2DC0-4507-8BE5-B87395DB0FEB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceActivating',
            'errorMessage' => 'Instance is activating.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The instanceId provided does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"23EBF56B-2DC0-4507-8BE5-B87395DB0FEB\\"\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '恢复释放后被冻结的实例',
      'summary' => '恢复释放后被冻结的Logstash实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListInstanceHistoryEvents' => 
    array (
      'summary' => '调用ListInstanceHistoryEvents，查看Elasticsearch集群触发的硬件运维事件列表。',
      'path' => '/openapi/events',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'instanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'es-cn-2r42l7a740005****',
          ),
        ),
        1 => 
        array (
          'name' => 'nodeIP',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发事件的节点的IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '10.1.xx.xx',
          ),
        ),
        2 => 
        array (
          'name' => 'eventType',
          'in' => 'query',
          'style' => 'simple',
          'schema' => 
          array (
            'description' => '事件类型。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '事件类型，可选值如下，多个类型使用英文逗号（,）隔开：

- ECS:AUTO_RESTART：ECS节点自动重启。
- Instance:InstanceFailure.Reboot:Executed：ECS实例重启结束（ECS实例错误）。
- Instance:InstanceFailure.Reboot:Executing：ECS实例重启开始（实例错误）。
- Instance:SystemFailure.Reboot:Executed：ECS实例重启结束（系统错误）。
- Instance:SystemFailure.Reboot:Executing：ECS实例重启开始（系统错误）。
- Instance:SystemFailure.Reboot:Failed：ECS实例重启失败（系统错误）。',
              'type' => 'string',
              'required' => false,
              'example' => 'Instance:InstanceFailure.Reboot:Executed',
            ),
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'eventLevel',
          'in' => 'query',
          'style' => 'simple',
          'schema' => 
          array (
            'description' => '事件等级。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '事件等级，可选值如下，多个等级用英文逗号（,）隔开：

- INFO：信息
- WARN：警告
- CRITICAL：紧急',
              'type' => 'string',
              'required' => false,
              'example' => 'INFO,WARN',
            ),
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'eventCreateStartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按照事件创建时间查询，起始时间。采用时间戳形式，单位为毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1645596516000',
          ),
        ),
        5 => 
        array (
          'name' => 'eventCreateEndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按照事件创建时间查询，结束时间。采用时间戳形式，单位为毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1645596516000',
          ),
        ),
        6 => 
        array (
          'name' => 'eventExecuteStartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按照事件执行时间查询，起始时间。采用时间戳形式，单位为毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1645596516000',
          ),
        ),
        7 => 
        array (
          'name' => 'eventExecuteEndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按照事件执行时间查询，结束时间。采用时间戳形式，单位为毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1645596516000',
          ),
        ),
        8 => 
        array (
          'name' => 'eventFinashStartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按照事件完成时间查询，起始时间。采用时间戳形式，单位为毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1645596516000',
          ),
        ),
        9 => 
        array (
          'name' => 'eventFinashEndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按照事件完成时间查询，结束时间。采用时间戳形式，单位为毫秒。',
            'type' => 'string',
            'required' => false,
            'example' => '1645596516000',
          ),
        ),
        10 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '起始文档偏移量。需要为非负数，默认为0。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
          ),
        ),
        11 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要返回的事件数量。需要为非负数，默认为10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        12 => 
        array (
          'name' => 'eventCycleStatus',
          'in' => 'query',
          'style' => 'simple',
          'schema' => 
          array (
            'description' => '事件的生命周期状态对象。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '事件的生命周期状态，可选值如下，多个状态使用英文逗号（,）隔开：

- FAILED：失败
- EXECUTED：已执行
- EXECUTING：执行中',
              'type' => 'string',
              'required' => false,
              'example' => 'EXECUTED,FAILED',
            ),
            'required' => false,
          ),
        ),
        13 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体参数。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '请求对象。',
              'type' => 'object',
              'properties' => 
              array (
                'sortField' => 
                array (
                  'title' => '排序字段',
                  'description' => '返回结果按照哪个字段排序，可选值如下：

- event_time：事件创建时间
- event_execute_start_time：事件执行时间
- event_execute_finish_time：事件完成时间',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'event_time',
                  'enum' => 
                  array (
                    0 => 'eventCreateTime',
                    1 => 'eventExecuteTime',
                    2 => 'eventFinishTime',
                  ),
                ),
                'desc' => 
                array (
                  'title' => '是否倒序。true，倒序；false，顺序。',
                  'description' => '是否倒序：

- true（默认）：是
- false：否',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D1A6830A-F59B-4E05-BFAC-9496C21DBBA7',
              ),
              'Headers' => 
              array (
                'description' => '返回头信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'X-Total-Count' => 
                  array (
                    'description' => '总记录数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '15',
                  ),
                  'X-Total-Failed' => 
                  array (
                    'description' => '总失败数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2',
                  ),
                  'X-Total-Success' => 
                  array (
                    'description' => '总成功数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '13',
                  ),
                ),
              ),
              'Result' => 
              array (
                'description' => '返回结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '返回结果对象。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'eventCreateTime' => 
                    array (
                      'description' => '事件创建时间。',
                      'type' => 'string',
                      'example' => '2017-12-07T00:00:00Z',
                    ),
                    'eventCycleStatus' => 
                    array (
                      'description' => '事件状态，支持：
- FAILED：失败
- EXECUTED：已执行
- EXECUTING：执行中',
                      'type' => 'string',
                      'example' => 'EXECUTED',
                    ),
                    'eventExecuteTime' => 
                    array (
                      'description' => '事件执行时间。',
                      'type' => 'string',
                      'example' => '2017-12-07T00:00:00Z',
                    ),
                    'eventFinashTime' => 
                    array (
                      'description' => '事件完成时间。',
                      'type' => 'string',
                      'example' => '2017-12-07T00:00:00Z',
                    ),
                    'eventLevel' => 
                    array (
                      'description' => '事件等级，支持：
- INFO：信息
- WARN：警告
- CRITICAL：紧急',
                      'type' => 'string',
                      'example' => 'INFO',
                    ),
                    'instanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'es-cn-2r42l7a740005****',
                    ),
                    'nodeIP' => 
                    array (
                      'description' => '产生事件的节点的IP地址。',
                      'type' => 'string',
                      'example' => '10.1.xx.xx',
                    ),
                    'eventType' => 
                    array (
                      'description' => '事件类型，支持：
- ECS:AUTO_RESTART：ECS节点自动重启。
- Instance:InstanceFailure.Reboot:Executed：ECS实例重启结束（ECS实例错误）。
- Instance:InstanceFailure.Reboot:Executing：ECS实例重启开始（实例错误）。
- Instance:SystemFailure.Reboot:Executed：ECS实例重启结束（系统错误）。
- Instance:SystemFailure.Reboot:Executing：ECS实例重启开始（系统错误）。
- Instance:SystemFailure.Reboot:Failed：ECS实例重启失败（系统错误）。',
                      'type' => 'string',
                      'example' => 'ECS:AUTO_RESTART',
                    ),
                    'regionId' => 
                    array (
                      'description' => '事件所在的地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'ecsId' => 
                    array (
                      'description' => 'ECS实例ID。',
                      'type' => 'string',
                      'example' => 'i-2ze8s9cjdf2cv969****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D1A6830A-F59B-4E05-BFAC-9496C21DBBA7\\",\\n  \\"Headers\\": {\\n    \\"X-Total-Count\\": 15,\\n    \\"X-Total-Failed\\": 2,\\n    \\"X-Total-Success\\": 13\\n  },\\n  \\"Result\\": [\\n    {\\n      \\"eventCreateTime\\": \\"2017-12-07T00:00:00Z\\",\\n      \\"eventCycleStatus\\": \\"EXECUTED\\",\\n      \\"eventExecuteTime\\": \\"2017-12-07T00:00:00Z\\",\\n      \\"eventFinashTime\\": \\"2017-12-07T00:00:00Z\\",\\n      \\"eventLevel\\": \\"INFO\\",\\n      \\"instanceId\\": \\"es-cn-2r42l7a740005****\\",\\n      \\"nodeIP\\": \\"10.1.xx.xx\\",\\n      \\"eventType\\": \\"ECS:AUTO_RESTART\\",\\n      \\"regionId\\": \\"cn-hangzhou\\",\\n      \\"ecsId\\": \\"i-2ze8s9cjdf2cv969****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListInstanceHistoryEventsResponse>\\n    <RequestId>D1A6830A-F59B-4E05-BFAC-9496C21DBBA7</RequestId>\\n    <Headers>\\n        <X-Total-Count>15</X-Total-Count>\\n        <X-Total-Failed>2</X-Total-Failed>\\n        <X-Total-Success>13</X-Total-Success>\\n    </Headers>\\n    <Result>\\n        <eventCreateTime>2017-12-07T00:00:00Z</eventCreateTime>\\n        <eventCycleStatus>EXECUTED</eventCycleStatus>\\n        <eventExecuteTime>2017-12-07T00:00:00Z</eventExecuteTime>\\n        <eventFinashTime>2017-12-07T00:00:00Z</eventFinashTime>\\n        <eventLevel>INFO</eventLevel>\\n        <instanceId>es-cn-2r42l7a740005****</instanceId>\\n        <nodeIP>10.1.xx.xx</nodeIP>\\n        <eventType>ECS:AUTO_RESTART</eventType>\\n        <regionId>cn-hangzhou</regionId>\\n        <ecsId>i-2ze8s9cjdf2cv969****</ecsId>\\n    </Result>\\n</ListInstanceHistoryEventsResponse>","errorExample":""}]',
      'title' => 'ListInstanceHistoryEvents',
    ),
    'UpdateDynamicSettings' => 
    array (
      'summary' => '修改集群动态配置',
      'path' => '/openapi/instances/{InstanceId}/dynamic-settings',
      'methods' => 
      array (
        0 => 'put',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '幂等参数',
            'type' => 'string',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        3 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        4 => 
        array (
          'name' => 'mode',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'type' => 'boolean',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        401 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        404 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
        500 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '',
    ),
    'DescribeDynamicSettings' => 
    array (
      'summary' => '获取集群动态指标',
      'path' => '/openapi/instances/{InstanceId}/dynamic-settings',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'title' => 'Id of the request',
                'type' => 'string',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '',
    ),
    'ListActionRecords' => 
    array (
      'summary' => '变更记录 变更详情',
      'path' => '/openapi/instances/{InstanceId}/action-records',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'type' => 'string',
          ),
        ),
        1 => 
        array (
          'name' => 'requestId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        2 => 
        array (
          'name' => 'userId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        3 => 
        array (
          'name' => 'actionNames',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        4 => 
        array (
          'name' => 'filter',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        5 => 
        array (
          'name' => 'page',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
          ),
        ),
        6 => 
        array (
          'name' => 'size',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
          ),
        ),
        7 => 
        array (
          'name' => 'startTime',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
          ),
        ),
        8 => 
        array (
          'name' => 'endTime',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Result' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ActionName' => 
                    array (
                      'type' => 'string',
                    ),
                    'ActionParams' => 
                    array (
                      'type' => 'object',
                    ),
                    'ActionResultAccessList' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'string',
                      ),
                    ),
                    'EndTime' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'InstanceId' => 
                    array (
                      'type' => 'string',
                    ),
                    'Process' => 
                    array (
                      'type' => 'string',
                    ),
                    'RecordDiff' => 
                    array (
                      'type' => 'object',
                    ),
                    'RecordIds' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'string',
                      ),
                    ),
                    'RequestId' => 
                    array (
                      'type' => 'string',
                    ),
                    'StartTime' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'StateType' => 
                    array (
                      'type' => 'string',
                    ),
                    'StatusInfo' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'subState' => 
                          array (
                            'type' => 'string',
                          ),
                          'nodeCount' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int32',
                          ),
                          'completeNodeCount' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int32',
                          ),
                          'exception' => 
                          array (
                            'type' => 'string',
                          ),
                          'latencyMills' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int64',
                          ),
                          'process' => 
                          array (
                            'type' => 'string',
                          ),
                          'startTime' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int64',
                          ),
                          'endTime' => 
                          array (
                            'type' => 'integer',
                            'format' => 'int64',
                          ),
                          'stateType' => 
                          array (
                            'type' => 'string',
                          ),
                          'subStatusInfo' => 
                          array (
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'subState' => 
                                array (
                                  'type' => 'string',
                                ),
                                'nodeCount' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int32',
                                ),
                                'completeNodeCount' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int32',
                                ),
                                'exception' => 
                                array (
                                  'type' => 'string',
                                ),
                                'latencyMills' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int64',
                                ),
                                'process' => 
                                array (
                                  'type' => 'string',
                                ),
                                'startTime' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int64',
                                ),
                                'endTime' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int64',
                                ),
                                'stateType' => 
                                array (
                                  'type' => 'string',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    'UserId' => 
                    array (
                      'type' => 'string',
                    ),
                    'UserType' => 
                    array (
                      'type' => 'string',
                    ),
                    'OwnerId' => 
                    array (
                      'type' => 'string',
                    ),
                    'UserInfo' => 
                    array (
                      'type' => 'string',
                    ),
                    'MetaNow' => 
                    array (
                      'type' => 'string',
                    ),
                    'MetaOld' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '',
    ),
    'DisableKibanaPvlNetwork' => 
    array (
      'summary' => '关闭kibana私网',
      'path' => '/openapi/instances/{InstanceId}/actions/disable-kibana-private',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
        1 => 'application/x-www-form-urlencoded',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
        'abilityTreeCode' => '203888',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREelasticsearch2PSU4E',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-vo93ngti8000a****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'response body',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1DERFG',
              ),
              'Result' => 
              array (
                'description' => '返回结果：

- true：执行成功
- false：执行失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1DERFG\\",\\n  \\"Result\\": true\\n}","errorExample":""},{"type":"xml","example":"<DisableKibanaPvlNetworkResponse>\\n    <RequestId>5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1DERFG</RequestId>\\n    <Result>true</Result>\\n</DisableKibanaPvlNetworkResponse>","errorExample":""}]',
      'title' => '关闭kibana私网',
      'description' => '此API仅支持云原生实例，老架构实例请使用TriggerNetwork方法',
    ),
    'UpdateKibanaPvlNetwork' => 
    array (
      'summary' => '更新kibana私网访问',
      'path' => '/openapi/instances/{InstanceId}/actions/update-kibana-private',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '203898',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREelasticsearch2PSU4E',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-vo93ngti8000a****',
          ),
        ),
        1 => 
        array (
          'name' => 'pvlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Kibana私网连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-vo93ngti8000a****-kibana-internal-internal',
          ),
        ),
        2 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体。',
            'type' => 'object',
            'properties' => 
            array (
              'endpointName' => 
              array (
                'description' => '终端节点名称。',
                'type' => 'string',
                'required' => false,
                'example' => 'es-cn-text-kibana',
              ),
              'securityGroups' => 
              array (
                'description' => '安全组列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '安全组。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'sg-xdjiow****',
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果',
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '返回结果：

- true：执行成功
- false：执行失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F99407AB-2FA9-489E-A259-40CF6DCC****',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"F99407AB-2FA9-489E-A259-40CF6DCC****\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateKibanaPvlNetworkResponse>\\n    <Result>true</Result>\\n    <RequestId>F99407AB-2FA9-489E-A259-40CF6DCC****</RequestId>\\n</UpdateKibanaPvlNetworkResponse>","errorExample":""}]',
      'title' => '更新kibana私网',
      'description' => '1. 此API仅支持云原生实例，老架构实例请使用TriggerNetwork方法
2. kibana 规格需大于1核2G',
    ),
    'ListKibanaPvlNetwork' => 
    array (
      'summary' => '查询kibana私网详细信息',
      'path' => '/openapi/instances/{InstanceId}/actions/get-kibana-private',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
        1 => 'application/x-www-form-urlencoded',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
        'abilityTreeCode' => '203895',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREelasticsearch2PSU4E',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-vo93ngti8000a****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***',
              ),
              'Result' => 
              array (
                'description' => '返回结果对象数组。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '单条私网信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'endpointName' => 
                    array (
                      'description' => '终端节点名称。',
                      'type' => 'string',
                      'example' => 'es-cn-xxdjfia****-kibana',
                    ),
                    'vpcId' => 
                    array (
                      'description' => 'VPC网络ID。',
                      'type' => 'string',
                      'example' => 'vpc-bp16k1dvzxtma*****',
                    ),
                    'vSwitchIdsZone' => 
                    array (
                      'description' => '交换机和可用区信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'zoneId' => 
                          array (
                            'description' => '可用区ID。',
                            'type' => 'string',
                            'example' => 'cn-hangzhou-e',
                          ),
                          'vswitchId' => 
                          array (
                            'description' => '虚拟交换机ID。',
                            'type' => 'string',
                            'example' => 'vsw-xdefafns***',
                          ),
                        ),
                      ),
                    ),
                    'securityGroups' => 
                    array (
                      'description' => '安全组列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '安全组。',
                        'type' => 'string',
                        'example' => 'sg-2zegcwar0pq4a****',
                      ),
                    ),
                    'endpointId' => 
                    array (
                      'description' => '终端节点ID。',
                      'type' => 'string',
                      'example' => 'ep-bp1tah7zbrwmkjef****',
                    ),
                    'endpointStatus' => 
                    array (
                      'description' => '终端节点状态：

- Disconnected：未连接

- Connected：已连接',
                      'type' => 'string',
                      'example' => 'Connected',
                    ),
                    'createTime' => 
                    array (
                      'description' => 'Kibana私网连接创建时间。',
                      'type' => 'string',
                      'example' => '2024-03-07T06:26:28Z',
                    ),
                    'pvlId' => 
                    array (
                      'description' => 'Kibana私网连接ID。',
                      'type' => 'string',
                      'example' => 'es-cn-27a3mul6l***-kibana-internal',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5FFD9ED4-C2EC-4E89-B22B-1ACB6FE1D***\\",\\n  \\"Result\\": [\\n    {\\n      \\"endpointName\\": \\"es-cn-xxdjfia****-kibana\\",\\n      \\"vpcId\\": \\"vpc-bp16k1dvzxtma*****\\",\\n      \\"vSwitchIdsZone\\": [\\n        {\\n          \\"zoneId\\": \\"cn-hangzhou-e\\",\\n          \\"vswitchId\\": \\"vsw-xdefafns***\\"\\n        }\\n      ],\\n      \\"securityGroups\\": [\\n        \\"sg-2zegcwar0pq4a****\\"\\n      ],\\n      \\"endpointId\\": \\"ep-bp1tah7zbrwmkjef****\\",\\n      \\"endpointStatus\\": \\"Connected\\",\\n      \\"createTime\\": \\"2024-03-07T06:26:28Z\\",\\n      \\"pvlId\\": \\"es-cn-27a3mul6l***-kibana-internal\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListKibanaPvlNetworkResponse>\\n    <Result>\\n        <pvlId>es-cn-vo93ngti8000a****-kibana-internal-internal</pvlId>\\n        <endpointId>ep-bp1ie6c7aea23549****</endpointId>\\n        <endpointName>es-cn-vo93ngti8000a****-kibana</endpointName>\\n        <description>用于在专有网络VPC中通过私网地址访问实例ID为es-cn-vo93ngti8000a****的kibana，您可以前往Elasticsearch控制台Kibana配置中管理</description>\\n        <vpcId>vpc-bp19ip2ocyv24w0e2****</vpcId>\\n        <vSwitchIdsZone>\\n            <vswitchId>vsw-bp194pz9iezj6h1n5****</vswitchId>\\n            <zoneId>cn-hangzhou-i</zoneId>\\n        </vSwitchIdsZone>\\n        <securityGroups>sg-bp1c6fo9l29ergq****z</securityGroups>\\n        <endpointStatus>Connected</endpointStatus>\\n        <createTime>2024-03-14T08:16:48Z</createTime>\\n    </Result>\\n    <RequestId>951E58B6-26B8-5583-AAD6-7797D51723DB</RequestId>\\n</ListKibanaPvlNetworkResponse>","errorExample":""}]',
      'title' => '查看kibana私网链接信息',
      'description' => '此API仅支持云原生实例',
    ),
    'EnableKibanaPvlNetwork' => 
    array (
      'summary' => '调用EnableKibanaPvlNetwork，开启Kibana私网访问。',
      'path' => '/openapi/instances/{InstanceId}/actions/enable-kibana-private',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'consumes' => 
      array (
        0 => 'application/json',
      ),
      'produces' => 
      array (
        0 => 'application/json',
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
        'abilityTreeCode' => '203874',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREelasticsearch2PSU4E',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'path',
          'schema' => 
          array (
            'description' => '当前实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'es-cn-n6w1oxxx****',
          ),
        ),
        1 => 
        array (
          'name' => 'body',
          'in' => 'body',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '请求体。',
            'type' => 'object',
            'properties' => 
            array (
              'endpointName' => 
              array (
                'description' => '终端节点名称。',
                'type' => 'string',
                'required' => true,
                'example' => 'es-cn-27a3mul6l000xxx-kibana-endpoint',
              ),
              'securityGroups' => 
              array (
                'description' => '安全组。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '安全组名。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'sg-2sjfaoafee****',
                ),
                'required' => true,
              ),
              'vSwitchIdsZone' => 
              array (
                'description' => '交换机及可用区信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'vswitchId' => 
                    array (
                      'description' => '虚拟交换机ID。',
                      'type' => 'string',
                      'required' => true,
                      'example' => 'vsw-bp194pz9iezj6h1n5****',
                    ),
                    'zoneId' => 
                    array (
                      'description' => '可用区ID。',
                      'type' => 'string',
                      'required' => true,
                      'example' => 'cn-hangzhou-h',
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
                'enumValueTitles' => 
                array (
                ),
              ),
              'vpcId' => 
              array (
                'description' => 'VPC实例ID。',
                'type' => 'string',
                'required' => true,
                'example' => 'vpc-bp19ip2ocyv24w0e2****',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果',
            'type' => 'object',
            'properties' => 
            array (
              'Result' => 
              array (
                'description' => '是否成功创建Kibana私网访问。
- true：成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0DC92CFE-62AF-51AF-9D5B-F1078D7C451E',
              ),
            ),
          ),
        ),
        400 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Code' => 
              array (
                'type' => 'string',
              ),
              'Message' => 
              array (
                'type' => 'string',
              ),
              'Success' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Result\\": true,\\n  \\"RequestId\\": \\"0DC92CFE-62AF-51AF-9D5B-F1078D7C451E\\"\\n}","errorExample":""},{"type":"xml","example":"<EnableKibanaPvlNetworkResponse>\\n    <Result>true</Result>\\n    <RequestId>0DC92CFE-62AF-51AF-9D5B-F1078D7C451E</RequestId>\\n</EnableKibanaPvlNetworkResponse>","errorExample":""}]',
      'title' => 'EnableKibanaPvlNetwork',
      'description' => '1. 此API仅支持云原生实例，老架构实例请使用TriggerNetwork方法
2. kibana 规格需大于1核2G',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-qingdao',
      'endpoint' => 'elasticsearch.cn-qingdao.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'cn-beijing',
      'endpoint' => 'elasticsearch.cn-beijing.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'cn-zhangjiakou',
      'endpoint' => 'elasticsearch.cn-zhangjiakou.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'elasticsearch.cn-hangzhou.aliyuncs.com',
    ),
    4 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'elasticsearch.cn-shanghai.aliyuncs.com',
    ),
    5 => 
    array (
      'regionId' => 'cn-shenzhen',
      'endpoint' => 'elasticsearch.cn-shenzhen.aliyuncs.com',
    ),
    6 => 
    array (
      'regionId' => 'cn-hongkong',
      'endpoint' => 'elasticsearch.cn-hongkong.aliyuncs.com',
    ),
    7 => 
    array (
      'regionId' => 'ap-southeast-1',
      'endpoint' => 'elasticsearch.ap-southeast-1.aliyuncs.com',
    ),
    8 => 
    array (
      'regionId' => 'ap-southeast-2',
      'endpoint' => 'elasticsearch.ap-southeast-2.aliyuncs.com',
    ),
    9 => 
    array (
      'regionId' => 'ap-southeast-3',
      'endpoint' => 'elasticsearch.ap-southeast-3.aliyuncs.com',
    ),
    10 => 
    array (
      'regionId' => 'ap-southeast-5',
      'endpoint' => 'elasticsearch.ap-southeast-5.aliyuncs.com',
    ),
    11 => 
    array (
      'regionId' => 'ap-northeast-1',
      'endpoint' => 'elasticsearch.ap-northeast-1.aliyuncs.com',
    ),
    12 => 
    array (
      'regionId' => 'eu-west-1',
      'endpoint' => 'elasticsearch.eu-west-1.aliyuncs.com',
    ),
    13 => 
    array (
      'regionId' => 'us-west-1',
      'endpoint' => 'elasticsearch.us-west-1.aliyuncs.com',
    ),
    14 => 
    array (
      'regionId' => 'us-east-1',
      'endpoint' => 'elasticsearch.us-east-1.aliyuncs.com',
    ),
    15 => 
    array (
      'regionId' => 'eu-central-1',
      'endpoint' => 'elasticsearch.eu-central-1.aliyuncs.com',
    ),
    16 => 
    array (
      'regionId' => 'ap-south-1',
      'endpoint' => 'elasticsearch.ap-south-1.aliyuncs.com',
    ),
    17 => 
    array (
      'regionId' => 'cn-hangzhou-finance',
      'endpoint' => 'elasticsearch.cn-hangzhou-finance.aliyuncs.com',
    ),
    18 => 
    array (
      'regionId' => 'cn-shanghai-finance-1',
      'endpoint' => 'elasticsearch.cn-shanghai-finance-1.aliyuncs.com',
    ),
    19 => 
    array (
      'regionId' => 'cn-north-2-gov-1',
      'endpoint' => 'elasticsearch.cn-north-2-gov-1.aliyuncs.com',
    ),
    20 => 
    array (
      'regionId' => 'cn-guangzhou',
      'endpoint' => 'elasticsearch.cn-guangzhou.aliyuncs.com',
    ),
    21 => 
    array (
      'regionId' => 'cn-chengdu',
      'endpoint' => 'elasticsearch.cn-chengdu.aliyuncs.com',
    ),
    22 => 
    array (
      'regionId' => 'cn-wulanchabu',
      'endpoint' => 'elasticsearch.cn-wulanchabu.aliyuncs.com',
    ),
  ),
);