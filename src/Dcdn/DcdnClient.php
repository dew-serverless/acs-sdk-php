<?php

declare(strict_types=1);

namespace Dew\Acs\Dcdn;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result openDcdnService(array $arguments = [])
 * @method \Http\Promise\Promise openDcdnServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserDcdnStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeUserDcdnStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnService(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnServiceAsync($arguments = [])
 * @method \Dew\Acs\Result addDcdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise addDcdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result batchAddDcdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise batchAddDcdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDcdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise deleteDcdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDeletedDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDeletedDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result verifyDcdnDomainOwner(array $arguments = [])
 * @method \Http\Promise\Promise verifyDcdnDomainOwnerAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnVerifyContent(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnVerifyContentAsync($arguments = [])
 * @method \Dew\Acs\Result startDcdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise startDcdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result batchStartDcdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise batchStartDcdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result stopDcdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise stopDcdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result batchStopDcdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise batchStopDcdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnUserDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnUserDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnUserDomainsByFunc(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnUserDomainsByFuncAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainsBySource(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainsBySourceAsync($arguments = [])
 * @method \Dew\Acs\Result updateDcdnDomain(array $arguments = [])
 * @method \Http\Promise\Promise updateDcdnDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainCname(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainCnameAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDCdnDomainSchdmByProperty(array $arguments = [])
 * @method \Http\Promise\Promise modifyDCdnDomainSchdmByPropertyAsync($arguments = [])
 * @method \Dew\Acs\Result setDcdnUserConfig(array $arguments = [])
 * @method \Http\Promise\Promise setDcdnUserConfigAsync($arguments = [])
 * @method \Dew\Acs\Result batchSetDcdnDomainConfigs(array $arguments = [])
 * @method \Http\Promise\Promise batchSetDcdnDomainConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainConfigs(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDcdnSpecificConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteDcdnSpecificConfigAsync($arguments = [])
 * @method \Dew\Acs\Result batchDeleteDcdnDomainConfigs(array $arguments = [])
 * @method \Http\Promise\Promise batchDeleteDcdnDomainConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result describeRDDomainConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeRDDomainConfigAsync($arguments = [])
 * @method \Dew\Acs\Result refreshDcdnObjectCaches(array $arguments = [])
 * @method \Http\Promise\Promise refreshDcdnObjectCachesAsync($arguments = [])
 * @method \Dew\Acs\Result preloadDcdnObjectCaches(array $arguments = [])
 * @method \Http\Promise\Promise preloadDcdnObjectCachesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnRefreshQuota(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnRefreshQuotaAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnRefreshTasks(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnRefreshTasksAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnUserQuota(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnUserQuotaAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnRefreshTaskById(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnRefreshTaskByIdAsync($arguments = [])
 * @method \Dew\Acs\Result refreshDcdnObjectCacheByCacheTag(array $arguments = [])
 * @method \Http\Promise\Promise refreshDcdnObjectCacheByCacheTagAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainHttpCodeData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainHttpCodeDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainHttpCodeDataByLayer(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainHttpCodeDataByLayerAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainRegionData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainRegionDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnRegionAndIsp(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnRegionAndIspAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainIspData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainIspDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainQpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainQpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainQpsDataByLayer(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainQpsDataByLayerAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainBpsDataByLayer(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainBpsDataByLayerAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainOriginBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainOriginBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainOriginTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainOriginTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainWebsocketHttpCodeData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainWebsocketHttpCodeDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainWebsocketBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainWebsocketBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainWebsocketTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainWebsocketTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainRealTimeQpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainRealTimeQpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainRealTimeTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainRealTimeTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainRealTimeBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainRealTimeBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainRealTimeByteHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainRealTimeByteHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainRealTimeReqHitRateData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainRealTimeReqHitRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainRealTimeHttpCodeData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainRealTimeHttpCodeDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainRealTimeDetailData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainRealTimeDetailDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainRealTimeSrcBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainRealTimeSrcBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainRealTimeSrcTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainRealTimeSrcTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainRealTimeSrcHttpCodeData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainRealTimeSrcHttpCodeDataAsync($arguments = [])
 * @method \Dew\Acs\Result createDcdnSubTask(array $arguments = [])
 * @method \Http\Promise\Promise createDcdnSubTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnSubList(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnSubListAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnReport(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnReportAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnReportList(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnReportListAsync($arguments = [])
 * @method \Dew\Acs\Result updateDcdnSubTask(array $arguments = [])
 * @method \Http\Promise\Promise updateDcdnSubTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDcdnSubTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteDcdnSubTaskAsync($arguments = [])
 * @method \Dew\Acs\Result createDcdnDeliverTask(array $arguments = [])
 * @method \Http\Promise\Promise createDcdnDeliverTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDeliverList(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDeliverListAsync($arguments = [])
 * @method \Dew\Acs\Result updateDcdnDeliverTask(array $arguments = [])
 * @method \Http\Promise\Promise updateDcdnDeliverTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDcdnDeliverTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteDcdnDeliverTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainLog(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainLogAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafLogs(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafLogsAsync($arguments = [])
 * @method \Dew\Acs\Result createDcdnSLSRealTimeLogDelivery(array $arguments = [])
 * @method \Http\Promise\Promise createDcdnSLSRealTimeLogDeliveryAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnSLSRealtimeLogDelivery(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnSLSRealtimeLogDeliveryAsync($arguments = [])
 * @method \Dew\Acs\Result updateDcdnSLSRealtimeLogDelivery(array $arguments = [])
 * @method \Http\Promise\Promise updateDcdnSLSRealtimeLogDeliveryAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDcdnRealTimeLogProject(array $arguments = [])
 * @method \Http\Promise\Promise deleteDcdnRealTimeLogProjectAsync($arguments = [])
 * @method \Dew\Acs\Result updateDcdnUserRealTimeDeliveryField(array $arguments = [])
 * @method \Http\Promise\Promise updateDcdnUserRealTimeDeliveryFieldAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnRealTimeDeliveryField(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnRealTimeDeliveryFieldAsync($arguments = [])
 * @method \Dew\Acs\Result checkDcdnProjectExist(array $arguments = [])
 * @method \Http\Promise\Promise checkDcdnProjectExistAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnSLSRealTimeLogType(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnSLSRealTimeLogTypeAsync($arguments = [])
 * @method \Dew\Acs\Result listDcdnRealTimeDeliveryProject(array $arguments = [])
 * @method \Http\Promise\Promise listDcdnRealTimeDeliveryProjectAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserLogserviceStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeUserLogserviceStatusAsync($arguments = [])
 * @method \Dew\Acs\Result createSlrAndSlsProject(array $arguments = [])
 * @method \Http\Promise\Promise createSlrAndSlsProjectAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnUserRealTimeDeliveryField(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnUserRealTimeDeliveryFieldAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnUserBillHistory(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnUserBillHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnUserBillType(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnUserBillTypeAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnUserResourcePackage(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnUserResourcePackageAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainUsageData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainUsageDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnBgpBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnBgpBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnBgpTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnBgpTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainMultiUsageData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainMultiUsageDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainPvData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainPvDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainTopReferVisit(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainTopReferVisitAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainTopUrlVisit(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainTopUrlVisitAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainUvData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainUvDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnTopDomainsByFlow(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnTopDomainsByFlowAsync($arguments = [])
 * @method \Dew\Acs\Result describeKvUsageData(array $arguments = [])
 * @method \Http\Promise\Promise describeKvUsageDataAsync($arguments = [])
 * @method \Dew\Acs\Result setDcdnDomainSSLCertificate(array $arguments = [])
 * @method \Http\Promise\Promise setDcdnDomainSSLCertificateAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnHttpsDomainList(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnHttpsDomainListAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnCertificateList(array $arguments = []) {@deprecated 2018-01-15}
 * @method \Http\Promise\Promise describeDcdnCertificateListAsync($arguments = []) {@deprecated 2018-01-15}
 * @method \Dew\Acs\Result describeDcdnDomainByCertificate(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainByCertificateAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnCertificateDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnCertificateDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainCertificateInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainCertificateInfoAsync($arguments = [])
 * @method \Dew\Acs\Result setDcdnDomainSMCertificate(array $arguments = [])
 * @method \Http\Promise\Promise setDcdnDomainSMCertificateAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnSMCertificateDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnSMCertificateDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnSMCertificateList(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnSMCertificateListAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnUserCertificateExpireCount(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnUserCertificateExpireCountAsync($arguments = [])
 * @method \Dew\Acs\Result tagDcdnResources(array $arguments = [])
 * @method \Http\Promise\Promise tagDcdnResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnTagResources(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnUserTags(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnUserTagsAsync($arguments = [])
 * @method \Dew\Acs\Result untagDcdnResources(array $arguments = [])
 * @method \Http\Promise\Promise untagDcdnResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnIpaDomainConfigs(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnIpaDomainConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result stopDcdnIpaDomain(array $arguments = [])
 * @method \Http\Promise\Promise stopDcdnIpaDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserDcdnIpaStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeUserDcdnIpaStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnIpaService(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnIpaServiceAsync($arguments = [])
 * @method \Dew\Acs\Result updateDcdnIpaDomain(array $arguments = [])
 * @method \Http\Promise\Promise updateDcdnIpaDomainAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDcdnIpaDomain(array $arguments = [])
 * @method \Http\Promise\Promise deleteDcdnIpaDomainAsync($arguments = [])
 * @method \Dew\Acs\Result startDcdnIpaDomain(array $arguments = [])
 * @method \Http\Promise\Promise startDcdnIpaDomainAsync($arguments = [])
 * @method \Dew\Acs\Result addDcdnIpaDomain(array $arguments = [])
 * @method \Http\Promise\Promise addDcdnIpaDomainAsync($arguments = [])
 * @method \Dew\Acs\Result batchSetDcdnIpaDomainConfigs(array $arguments = [])
 * @method \Http\Promise\Promise batchSetDcdnIpaDomainConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnIpaUserDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnIpaUserDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnIpaDomainDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnIpaDomainDetailAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDcdnIpaSpecificConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteDcdnIpaSpecificConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainProperty(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainPropertyAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainIpaBpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainIpaBpsDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainIpaTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainIpaTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainIpaConnData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainIpaConnDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnIpaDomainCidr(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnIpaDomainCidrAsync($arguments = [])
 * @method \Dew\Acs\Result createRoutine(array $arguments = [])
 * @method \Http\Promise\Promise createRoutineAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRoutine(array $arguments = [])
 * @method \Http\Promise\Promise deleteRoutineAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRoutineCodeRevision(array $arguments = [])
 * @method \Http\Promise\Promise deleteRoutineCodeRevisionAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRoutineConfEnvs(array $arguments = [])
 * @method \Http\Promise\Promise deleteRoutineConfEnvsAsync($arguments = [])
 * @method \Dew\Acs\Result describeRoutine(array $arguments = [])
 * @method \Http\Promise\Promise describeRoutineAsync($arguments = [])
 * @method \Dew\Acs\Result describeRoutineCanaryEnvs(array $arguments = [])
 * @method \Http\Promise\Promise describeRoutineCanaryEnvsAsync($arguments = [])
 * @method \Dew\Acs\Result describeRoutineCodeRevision(array $arguments = [])
 * @method \Http\Promise\Promise describeRoutineCodeRevisionAsync($arguments = [])
 * @method \Dew\Acs\Result describeRoutineSpec(array $arguments = [])
 * @method \Http\Promise\Promise describeRoutineSpecAsync($arguments = [])
 * @method \Dew\Acs\Result describeRoutineUserInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeRoutineUserInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserErStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeUserErStatusAsync($arguments = [])
 * @method \Dew\Acs\Result editRoutineConf(array $arguments = [])
 * @method \Http\Promise\Promise editRoutineConfAsync($arguments = [])
 * @method \Dew\Acs\Result setRoutineSubdomain(array $arguments = [])
 * @method \Http\Promise\Promise setRoutineSubdomainAsync($arguments = [])
 * @method \Dew\Acs\Result uploadRoutineCode(array $arguments = [])
 * @method \Http\Promise\Promise uploadRoutineCodeAsync($arguments = [])
 * @method \Dew\Acs\Result uploadStagingRoutineCode(array $arguments = [])
 * @method \Http\Promise\Promise uploadStagingRoutineCodeAsync($arguments = [])
 * @method \Dew\Acs\Result publishRoutineCodeRevision(array $arguments = [])
 * @method \Http\Promise\Promise publishRoutineCodeRevisionAsync($arguments = [])
 * @method \Dew\Acs\Result commitStagingRoutineCode(array $arguments = [])
 * @method \Http\Promise\Promise commitStagingRoutineCodeAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnErUsageData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnErUsageDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeEncryptRoutineUid(array $arguments = [])
 * @method \Http\Promise\Promise describeEncryptRoutineUidAsync($arguments = [])
 * @method \Dew\Acs\Result describeRoutineRelatedDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeRoutineRelatedDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result refreshErObjectCaches(array $arguments = [])
 * @method \Http\Promise\Promise refreshErObjectCachesAsync($arguments = [])
 * @method \Dew\Acs\Result setDcdnDomainStagingConfig(array $arguments = [])
 * @method \Http\Promise\Promise setDcdnDomainStagingConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainStagingConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainStagingConfigAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDcdnSpecificStagingConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteDcdnSpecificStagingConfigAsync($arguments = [])
 * @method \Dew\Acs\Result publishDcdnStagingConfigToProduction(array $arguments = [])
 * @method \Http\Promise\Promise publishDcdnStagingConfigToProductionAsync($arguments = [])
 * @method \Dew\Acs\Result rollbackDcdnStagingConfig(array $arguments = [])
 * @method \Http\Promise\Promise rollbackDcdnStagingConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnStagingIp(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnStagingIpAsync($arguments = [])
 * @method \Dew\Acs\Result getDcdnKvDetail(array $arguments = [])
 * @method \Http\Promise\Promise getDcdnKvDetailAsync($arguments = [])
 * @method \Dew\Acs\Result batchPutDcdnKv(array $arguments = [])
 * @method \Http\Promise\Promise batchPutDcdnKvAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnKvNamespace(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnKvNamespaceAsync($arguments = [])
 * @method \Dew\Acs\Result putDcdnKvNamespace(array $arguments = [])
 * @method \Http\Promise\Promise putDcdnKvNamespaceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDcdnKvNamespace(array $arguments = [])
 * @method \Http\Promise\Promise deleteDcdnKvNamespaceAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnKvAccount(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnKvAccountAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnKvAccountStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnKvAccountStatusAsync($arguments = [])
 * @method \Dew\Acs\Result getDcdnKv(array $arguments = [])
 * @method \Http\Promise\Promise getDcdnKvAsync($arguments = [])
 * @method \Dew\Acs\Result listDcdnKv(array $arguments = [])
 * @method \Http\Promise\Promise listDcdnKvAsync($arguments = [])
 * @method \Dew\Acs\Result putDcdnKv(array $arguments = [])
 * @method \Http\Promise\Promise putDcdnKvAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDcdnKv(array $arguments = [])
 * @method \Http\Promise\Promise deleteDcdnKvAsync($arguments = [])
 * @method \Dew\Acs\Result getDcdnKvStatus(array $arguments = [])
 * @method \Http\Promise\Promise getDcdnKvStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnUserSecDrop(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnUserSecDropAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnSecFuncInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnSecFuncInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnUserSecDropByMinute(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnUserSecDropByMinuteAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnBlockedRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnBlockedRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnsecService(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnsecServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnUserConfigs(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnUserConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnFullDomainsBlockIPConfig(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnFullDomainsBlockIPConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnFullDomainsBlockIPHistory(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnFullDomainsBlockIPHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result setDcdnFullDomainsBlockIP(array $arguments = [])
 * @method \Http\Promise\Promise setDcdnFullDomainsBlockIPAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnAclFields(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnAclFieldsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDomainCcActivityLog(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDomainCcActivityLogAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnSecSpecInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnSecSpecInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeHighlightInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeHighlightInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafBotAppKey(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafBotAppKeyAsync($arguments = [])
 * @method \Dew\Acs\Result describeDdosAllEventList(array $arguments = [])
 * @method \Http\Promise\Promise describeDdosAllEventListAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDdosService(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDdosServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnDdosSpecInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnDdosSpecInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafDomain(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafDomainAsync($arguments = [])
 * @method \Dew\Acs\Result createDcdnWafPolicy(array $arguments = [])
 * @method \Http\Promise\Promise createDcdnWafPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result batchCreateDcdnWafRules(array $arguments = [])
 * @method \Http\Promise\Promise batchCreateDcdnWafRulesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDcdnWafRule(array $arguments = [])
 * @method \Http\Promise\Promise modifyDcdnWafRuleAsync($arguments = [])
 * @method \Dew\Acs\Result batchModifyDcdnWafRules(array $arguments = [])
 * @method \Http\Promise\Promise batchModifyDcdnWafRulesAsync($arguments = [])
 * @method \Dew\Acs\Result batchSetDcdnWafDomainConfigs(array $arguments = [])
 * @method \Http\Promise\Promise batchSetDcdnWafDomainConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDcdnWafPolicy(array $arguments = [])
 * @method \Http\Promise\Promise modifyDcdnWafPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDcdnWafPolicyDomains(array $arguments = [])
 * @method \Http\Promise\Promise modifyDcdnWafPolicyDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDcdnUserConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteDcdnUserConfigAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDcdnWafPolicy(array $arguments = [])
 * @method \Http\Promise\Promise deleteDcdnWafPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result batchDeleteDcdnWafRules(array $arguments = [])
 * @method \Http\Promise\Promise batchDeleteDcdnWafRulesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafScenes(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafScenesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafPolicyDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafPolicyDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafPolicies(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafPoliciesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafPolicy(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafDomainDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafDomainDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafRules(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafRulesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDcdnWafGroup(array $arguments = [])
 * @method \Http\Promise\Promise modifyDcdnWafGroupAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafRule(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafRuleAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafPolicyValidDomains(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafPolicyValidDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafFilterInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafFilterInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafSpecInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafSpecInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafService(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafServiceAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafGeoInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafGeoInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafUsageData(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafUsageDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafGroups(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafGroup(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafGroupAsync($arguments = [])
 * @method \Dew\Acs\Result createDcdnWafGroup(array $arguments = [])
 * @method \Http\Promise\Promise createDcdnWafGroupAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDcdnWafGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteDcdnWafGroupAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnWafDefaultRules(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnWafDefaultRulesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnIpInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnIpInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnL2Vips(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnL2VipsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnL2Ips(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnL2IpsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnUserVipsByDomain(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnUserVipsByDomainAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnOriginSiteHealthStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnOriginSiteHealthStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeDcdnSSLCertificateList(array $arguments = [])
 * @method \Http\Promise\Promise describeDcdnSSLCertificateListAsync($arguments = [])
 * @method \Dew\Acs\Result createDcdnCertificateSigningRequest(array $arguments = [])
 * @method \Http\Promise\Promise createDcdnCertificateSigningRequestAsync($arguments = [])
 * @method \Dew\Acs\Result setDcdnDomainCSRCertificate(array $arguments = [])
 * @method \Http\Promise\Promise setDcdnDomainCSRCertificateAsync($arguments = [])
 * @method \Dew\Acs\Result batchPutDcdnKvWithHighCapacity(array $arguments = [])
 * @method \Http\Promise\Promise batchPutDcdnKvWithHighCapacityAsync($arguments = [])
 * @method \Dew\Acs\Result batchDeleteDcdnKv(array $arguments = [])
 * @method \Http\Promise\Promise batchDeleteDcdnKvAsync($arguments = [])
 * @method \Dew\Acs\Result batchDeleteDcdnKvWithHighCapacity(array $arguments = [])
 * @method \Http\Promise\Promise batchDeleteDcdnKvWithHighCapacityAsync($arguments = [])
 * @method \Dew\Acs\Result putDcdnKvWithHighCapacity(array $arguments = [])
 * @method \Http\Promise\Promise putDcdnKvWithHighCapacityAsync($arguments = [])
 * @method \Dew\Acs\Result describeKvRealTimeQpsData(array $arguments = [])
 * @method \Http\Promise\Promise describeKvRealTimeQpsDataAsync($arguments = [])
 */
final class DcdnClient extends AcsClient
{
    //
}
