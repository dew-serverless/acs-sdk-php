<?php

declare(strict_types=1);

namespace Dew\Acs\Sddp;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createSlrRole(array $arguments = [])
 * @method \Http\Promise\Promise createSlrRoleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDataLimit(array $arguments = [])
 * @method \Http\Promise\Promise deleteDataLimitAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataLimits(array $arguments = [])
 * @method \Http\Promise\Promise describeDataLimitsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDataLimit(array $arguments = [])
 * @method \Http\Promise\Promise modifyDataLimitAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataLimitDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeDataLimitDetailAsync($arguments = [])
 * @method \Dew\Acs\Result createDataLimit(array $arguments = [])
 * @method \Http\Promise\Promise createDataLimitAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataLimitSet(array $arguments = [])
 * @method \Http\Promise\Promise describeDataLimitSetAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceSources(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceSourcesAsync($arguments = [])
 * @method \Dew\Acs\Result describeParentInstance(array $arguments = [])
 * @method \Http\Promise\Promise describeParentInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result createScanTask(array $arguments = [])
 * @method \Http\Promise\Promise createScanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDefaultLevel(array $arguments = [])
 * @method \Http\Promise\Promise modifyDefaultLevelAsync($arguments = [])
 * @method \Dew\Acs\Result modifyRuleStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyRuleStatusAsync($arguments = [])
 * @method \Dew\Acs\Result modifyRule(array $arguments = [])
 * @method \Http\Promise\Promise modifyRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createRule(array $arguments = [])
 * @method \Http\Promise\Promise createRuleAsync($arguments = [])
 * @method \Dew\Acs\Result describeRules(array $arguments = [])
 * @method \Http\Promise\Promise describeRulesAsync($arguments = [])
 * @method \Dew\Acs\Result describeRiskLevels(array $arguments = [])
 * @method \Http\Promise\Promise describeRiskLevelsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataAssets(array $arguments = [])
 * @method \Http\Promise\Promise describeDataAssetsAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeTables(array $arguments = [])
 * @method \Http\Promise\Promise describeTablesAsync($arguments = [])
 * @method \Dew\Acs\Result describeColumns(array $arguments = [])
 * @method \Http\Promise\Promise describeColumnsAsync($arguments = [])
 * @method \Dew\Acs\Result describeColumnsV2(array $arguments = [])
 * @method \Http\Promise\Promise describeColumnsV2Async($arguments = [])
 * @method \Dew\Acs\Result describeOssObjects(array $arguments = [])
 * @method \Http\Promise\Promise describeOssObjectsAsync($arguments = [])
 * @method \Dew\Acs\Result describeOssObjectDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeOssObjectDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeOssObjectDetailV2(array $arguments = [])
 * @method \Http\Promise\Promise describeOssObjectDetailV2Async($arguments = [])
 * @method \Dew\Acs\Result describePackages(array $arguments = [])
 * @method \Http\Promise\Promise describePackagesAsync($arguments = [])
 * @method \Dew\Acs\Result describeCategoryTemplateList(array $arguments = [])
 * @method \Http\Promise\Promise describeCategoryTemplateListAsync($arguments = [])
 * @method \Dew\Acs\Result describeCategoryTemplateRuleList(array $arguments = [])
 * @method \Http\Promise\Promise describeCategoryTemplateRuleListAsync($arguments = [])
 * @method \Dew\Acs\Result describeTemplateAllRules(array $arguments = [])
 * @method \Http\Promise\Promise describeTemplateAllRulesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDocTypes(array $arguments = [])
 * @method \Http\Promise\Promise describeDocTypesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataObjects(array $arguments = [])
 * @method \Http\Promise\Promise describeDataObjectsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataObjectColumnDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeDataObjectColumnDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataObjectColumnDetailV2(array $arguments = [])
 * @method \Http\Promise\Promise describeDataObjectColumnDetailV2Async($arguments = [])
 * @method \Dew\Acs\Result createConfig(array $arguments = [])
 * @method \Http\Promise\Promise createConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeConfigs(array $arguments = [])
 * @method \Http\Promise\Promise describeConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyReportTaskStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyReportTaskStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeUserStatusAsync($arguments = [])
 * @method \Dew\Acs\Result disableUserConfig(array $arguments = [])
 * @method \Http\Promise\Promise disableUserConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifyEventTypeStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyEventTypeStatusAsync($arguments = [])
 * @method \Dew\Acs\Result modifyEventStatus(array $arguments = [])
 * @method \Http\Promise\Promise modifyEventStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeEvents(array $arguments = [])
 * @method \Http\Promise\Promise describeEventsAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeEventDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventTypes(array $arguments = [])
 * @method \Http\Promise\Promise describeEventTypesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataMaskingTasks(array $arguments = [])
 * @method \Http\Promise\Promise describeDataMaskingTasksAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataMaskingRunHistory(array $arguments = [])
 * @method \Http\Promise\Promise describeDataMaskingRunHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result execDatamask(array $arguments = [])
 * @method \Http\Promise\Promise execDatamaskAsync($arguments = [])
 * @method \Dew\Acs\Result stopMaskingProcess(array $arguments = [])
 * @method \Http\Promise\Promise stopMaskingProcessAsync($arguments = [])
 * @method \Dew\Acs\Result manualTriggerMaskingProcess(array $arguments = [])
 * @method \Http\Promise\Promise manualTriggerMaskingProcessAsync($arguments = [])
 */
final class SddpClient extends AcsClient
{
    //
}
