<?php

declare(strict_types=1);

namespace Dew\Acs\Drds;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createDrdsInstance(array $arguments = [])
 * @method \Http\Promise\Promise createDrdsInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result createOrderForRds(array $arguments = [])
 * @method \Http\Promise\Promise createOrderForRdsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDrdsInstanceDescription(array $arguments = [])
 * @method \Http\Promise\Promise modifyDrdsInstanceDescriptionAsync($arguments = [])
 * @method \Dew\Acs\Result updateResourceGroupAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateResourceGroupAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsDbInstance(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsDbInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsInstance(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsParams(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsParamsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsTasks(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsTasksAsync($arguments = [])
 * @method \Dew\Acs\Result describeHotDbList(array $arguments = [])
 * @method \Http\Promise\Promise describeHotDbListAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceSwitchAzone(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceSwitchAzoneAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceSwitchNetwork(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceSwitchNetworkAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstDbLogInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeInstDbLogInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describePreCheckResult(array $arguments = [])
 * @method \Http\Promise\Promise describePreCheckResultAsync($arguments = [])
 * @method \Dew\Acs\Result describeRdsCommodity(array $arguments = [])
 * @method \Http\Promise\Promise describeRdsCommodityAsync($arguments = [])
 * @method \Dew\Acs\Result removeDrdsInstance(array $arguments = [])
 * @method \Http\Promise\Promise removeDrdsInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result createDrdsDB(array $arguments = [])
 * @method \Http\Promise\Promise createDrdsDBAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsDBs(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsDBsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsDB(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsDBAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsDbInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsDbInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsDbRdsNameList(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsDbRdsNameListAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsShardingDbs(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsShardingDbsAsync($arguments = [])
 * @method \Dew\Acs\Result checkDrdsDbName(array $arguments = [])
 * @method \Http\Promise\Promise checkDrdsDbNameAsync($arguments = [])
 * @method \Dew\Acs\Result removeDrdsDbFailedRecord(array $arguments = [])
 * @method \Http\Promise\Promise removeDrdsDbFailedRecordAsync($arguments = [])
 * @method \Dew\Acs\Result removeDrdsDb(array $arguments = [])
 * @method \Http\Promise\Promise removeDrdsDbAsync($arguments = [])
 * @method \Dew\Acs\Result modifyRdsReadWeight(array $arguments = [])
 * @method \Http\Promise\Promise modifyRdsReadWeightAsync($arguments = [])
 * @method \Dew\Acs\Result describeRdsPerformanceSummary(array $arguments = [])
 * @method \Http\Promise\Promise describeRdsPerformanceSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result describeRdsSuperAccountInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeRdsSuperAccountInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsDBCluster(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsDBClusterAsync($arguments = [])
 * @method \Dew\Acs\Result describeRDSPerformance(array $arguments = [])
 * @method \Http\Promise\Promise describeRDSPerformanceAsync($arguments = [])
 * @method \Dew\Acs\Result describeDbInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeDbInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDbInstanceDbs(array $arguments = [])
 * @method \Http\Promise\Promise describeDbInstanceDbsAsync($arguments = [])
 * @method \Dew\Acs\Result createInstanceAccount(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceAccountAsync($arguments = [])
 * @method \Dew\Acs\Result removeInstanceAccount(array $arguments = [])
 * @method \Http\Promise\Promise removeInstanceAccountAsync($arguments = [])
 * @method \Dew\Acs\Result enableSqlAudit(array $arguments = [])
 * @method \Http\Promise\Promise enableSqlAuditAsync($arguments = [])
 * @method \Dew\Acs\Result disableSqlAudit(array $arguments = [])
 * @method \Http\Promise\Promise disableSqlAuditAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsSqlAuditStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsSqlAuditStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstDbSlsInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeInstDbSlsInfoAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsSlowSqls(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsSlowSqlsAsync($arguments = [])
 * @method \Dew\Acs\Result checkSqlAuditEnableStatus(array $arguments = [])
 * @method \Http\Promise\Promise checkSqlAuditEnableStatusAsync($arguments = [])
 * @method \Dew\Acs\Result startRestore(array $arguments = [])
 * @method \Http\Promise\Promise startRestoreAsync($arguments = [])
 * @method \Dew\Acs\Result setBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise setBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result enableSqlFlashbackMatchSwitch(array $arguments = [])
 * @method \Http\Promise\Promise enableSqlFlashbackMatchSwitchAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackMenu(array $arguments = [])
 * @method \Http\Promise\Promise describeBackMenuAsync($arguments = [])
 * @method \Dew\Acs\Result describeRestoreOrder(array $arguments = [])
 * @method \Http\Promise\Promise describeRestoreOrderAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupDbs(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupDbsAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupSets(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupSetsAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupTimes(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupTimesAsync($arguments = [])
 * @method \Dew\Acs\Result removeBackupsSet(array $arguments = [])
 * @method \Http\Promise\Promise removeBackupsSetAsync($arguments = [])
 * @method \Dew\Acs\Result putStartBackup(array $arguments = [])
 * @method \Http\Promise\Promise putStartBackupAsync($arguments = [])
 * @method \Dew\Acs\Result createInstanceInternetAddress(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceInternetAddressAsync($arguments = [])
 * @method \Dew\Acs\Result updateInstanceNetwork(array $arguments = [])
 * @method \Http\Promise\Promise updateInstanceNetworkAsync($arguments = [])
 * @method \Dew\Acs\Result releaseInstanceInternetAddress(array $arguments = [])
 * @method \Http\Promise\Promise releaseInstanceInternetAddressAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDrdsIpWhiteList(array $arguments = [])
 * @method \Http\Promise\Promise modifyDrdsIpWhiteListAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsDBIpWhiteList(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsDBIpWhiteListAsync($arguments = [])
 * @method \Dew\Acs\Result submitCleanTask(array $arguments = [])
 * @method \Http\Promise\Promise submitCleanTaskAsync($arguments = [])
 * @method \Dew\Acs\Result submitSmoothExpandPreCheck(array $arguments = [])
 * @method \Http\Promise\Promise submitSmoothExpandPreCheckAsync($arguments = [])
 * @method \Dew\Acs\Result checkExpandStatus(array $arguments = [])
 * @method \Http\Promise\Promise checkExpandStatusAsync($arguments = [])
 * @method \Dew\Acs\Result submitHotExpandTask(array $arguments = [])
 * @method \Http\Promise\Promise submitHotExpandTaskAsync($arguments = [])
 * @method \Dew\Acs\Result submitHotExpandPreCheckTask(array $arguments = [])
 * @method \Http\Promise\Promise submitHotExpandPreCheckTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeSqlFlashbakTask(array $arguments = [])
 * @method \Http\Promise\Promise describeSqlFlashbakTaskAsync($arguments = [])
 * @method \Dew\Acs\Result submitSqlFlashbackTask(array $arguments = [])
 * @method \Http\Promise\Promise submitSqlFlashbackTaskAsync($arguments = [])
 * @method \Dew\Acs\Result createShardTask(array $arguments = [])
 * @method \Http\Promise\Promise createShardTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceAccounts(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceAccountsAsync($arguments = [])
 * @method \Dew\Acs\Result describeExpandLogicTableInfoList(array $arguments = [])
 * @method \Http\Promise\Promise describeExpandLogicTableInfoListAsync($arguments = [])
 * @method \Dew\Acs\Result describeTable(array $arguments = [])
 * @method \Http\Promise\Promise describeTableAsync($arguments = [])
 * @method \Dew\Acs\Result describeTableListByType(array $arguments = [])
 * @method \Http\Promise\Promise describeTableListByTypeAsync($arguments = [])
 * @method \Dew\Acs\Result describeShardTaskInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeShardTaskInfoAsync($arguments = [])
 * @method \Dew\Acs\Result validateShardTask(array $arguments = [])
 * @method \Http\Promise\Promise validateShardTaskAsync($arguments = [])
 * @method \Dew\Acs\Result setupBroadcastTables(array $arguments = [])
 * @method \Http\Promise\Promise setupBroadcastTablesAsync($arguments = [])
 * @method \Dew\Acs\Result describeBroadcastTables(array $arguments = [])
 * @method \Http\Promise\Promise describeBroadcastTablesAsync($arguments = [])
 * @method \Dew\Acs\Result switchGlobalBroadcastType(array $arguments = [])
 * @method \Http\Promise\Promise switchGlobalBroadcastTypeAsync($arguments = [])
 * @method \Dew\Acs\Result setupTable(array $arguments = [])
 * @method \Http\Promise\Promise setupTableAsync($arguments = [])
 * @method \Dew\Acs\Result describeTables(array $arguments = [])
 * @method \Http\Promise\Promise describeTablesAsync($arguments = [])
 * @method \Dew\Acs\Result setupDrdsParams(array $arguments = [])
 * @method \Http\Promise\Promise setupDrdsParamsAsync($arguments = [])
 * @method \Dew\Acs\Result listTagResources(array $arguments = [])
 * @method \Http\Promise\Promise listTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result untagResources(array $arguments = [])
 * @method \Http\Promise\Promise untagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsInstanceVersion(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsInstanceVersionAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsInstanceLevelTasks(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsInstanceLevelTasksAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeInstanceVersion(array $arguments = [])
 * @method \Http\Promise\Promise upgradeInstanceVersionAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsInstanceMonitor(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsInstanceMonitorAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsInstanceDbMonitor(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsInstanceDbMonitorAsync($arguments = [])
 * @method \Dew\Acs\Result changeAccountPassword(array $arguments = [])
 * @method \Http\Promise\Promise changeAccountPasswordAsync($arguments = [])
 * @method \Dew\Acs\Result changeInstanceAzone(array $arguments = [])
 * @method \Http\Promise\Promise changeInstanceAzoneAsync($arguments = [])
 * @method \Dew\Acs\Result describeBackupLocal(array $arguments = [])
 * @method \Http\Promise\Promise describeBackupLocalAsync($arguments = [])
 * @method \Dew\Acs\Result describeDrdsRdsInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeDrdsRdsInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecycleBinStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeRecycleBinStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecycleBinTables(array $arguments = [])
 * @method \Http\Promise\Promise describeRecycleBinTablesAsync($arguments = [])
 * @method \Dew\Acs\Result enableInstanceIpv6Address(array $arguments = [])
 * @method \Http\Promise\Promise enableInstanceIpv6AddressAsync($arguments = [])
 * @method \Dew\Acs\Result flashbackRecycleBinTable(array $arguments = [])
 * @method \Http\Promise\Promise flashbackRecycleBinTableAsync($arguments = [])
 * @method \Dew\Acs\Result getDrdsDbRdsRelationInfo(array $arguments = [])
 * @method \Http\Promise\Promise getDrdsDbRdsRelationInfoAsync($arguments = [])
 * @method \Dew\Acs\Result managePrivateRds(array $arguments = [])
 * @method \Http\Promise\Promise managePrivateRdsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAccountDescription(array $arguments = [])
 * @method \Http\Promise\Promise modifyAccountDescriptionAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAccountPrivilege(array $arguments = [])
 * @method \Http\Promise\Promise modifyAccountPrivilegeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyPolarDbReadWeight(array $arguments = [])
 * @method \Http\Promise\Promise modifyPolarDbReadWeightAsync($arguments = [])
 * @method \Dew\Acs\Result refreshDrdsAtomUrl(array $arguments = [])
 * @method \Http\Promise\Promise refreshDrdsAtomUrlAsync($arguments = [])
 * @method \Dew\Acs\Result removeRecycleBinTable(array $arguments = [])
 * @method \Http\Promise\Promise removeRecycleBinTableAsync($arguments = [])
 * @method \Dew\Acs\Result restartDrdsInstance(array $arguments = [])
 * @method \Http\Promise\Promise restartDrdsInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result rollbackInstanceVersion(array $arguments = [])
 * @method \Http\Promise\Promise rollbackInstanceVersionAsync($arguments = [])
 * @method \Dew\Acs\Result setBackupLocal(array $arguments = [])
 * @method \Http\Promise\Promise setBackupLocalAsync($arguments = [])
 * @method \Dew\Acs\Result setupRecycleBinStatus(array $arguments = [])
 * @method \Http\Promise\Promise setupRecycleBinStatusAsync($arguments = [])
 * @method \Dew\Acs\Result submitSmoothExpandPreCheckTask(array $arguments = [])
 * @method \Http\Promise\Promise submitSmoothExpandPreCheckTaskAsync($arguments = [])
 * @method \Dew\Acs\Result updatePrivateRdsClass(array $arguments = [])
 * @method \Http\Promise\Promise updatePrivateRdsClassAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeHiStoreInstance(array $arguments = [])
 * @method \Http\Promise\Promise upgradeHiStoreInstanceAsync($arguments = [])
 */
final class DrdsClient extends AcsClient
{
    //
}
