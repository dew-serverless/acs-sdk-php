<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'RPC',
    'product' => 'Ens',
    'version' => '2017-11-10',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 161381,
      'title' => '实例',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'RunInstances',
        1 => 'CreateInstance',
        2 => 'ReleasePostPaidInstance',
        3 => 'ReleasePrePaidInstance',
        4 => 'RenewInstance',
        5 => 'ReinitInstance',
        6 => 'ModifyInstanceAttribute',
        7 => 'ModifyPrepayInstanceSpec',
        8 => 'ModifyInstanceAutoRenewAttribute',
        9 => 'AttachEnsInstances',
        10 => 'RebootInstance',
        11 => 'StartInstance',
        12 => 'StopInstance',
        13 => 'AddNetworkInterfaceToInstance',
        14 => 'DescribeAvailableResource',
        15 => 'DescribeInstances',
        16 => 'DescribeAvailableResourceInfo',
        17 => 'DescribeEnsNetSaleDistrict',
        18 => 'DescribeEnsNetLevel',
        19 => 'DescribeBandWithdChargeType',
        20 => 'DescribeInstanceSpec',
        21 => 'DescribeEnsRegionIdIpv6Info',
        22 => 'DescribeRegionIsps',
        23 => 'DescribeInstanceAutoRenewAttribute',
        24 => 'DescribeInstanceMonitorData',
        25 => 'DescribeInstanceTypes',
        26 => 'DescribeInstanceVncUrl',
        27 => 'DescribeCreatePrePaidInstanceResult',
      ),
    ),
    1 => 
    array (
      'id' => 161485,
      'title' => '云盘',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DeleteDisk',
        1 => 'ResetDisk',
        2 => 'ResizeDisk',
        3 => 'CreateDisk',
        4 => 'DescribeDisks',
        5 => 'AttachDisk',
        6 => 'DetachDisk',
        7 => 'DescribeCloudDiskAvailableResourceInfo',
        8 => 'DescribeCloudDiskTypes',
        9 => 'ReInitDisk',
      ),
    ),
    2 => 
    array (
      'id' => 184205,
      'title' => '快照',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ModifySnapshotAttribute',
        1 => 'DescribeSnapshots',
        2 => 'DeleteSnapshot',
        3 => 'CreateSnapshot',
        4 => 'CopySnapshot',
      ),
    ),
    3 => 
    array (
      'id' => 161476,
      'title' => '镜像',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateImage',
        1 => 'ExportImage',
        2 => 'DescribeSelfImages',
        3 => 'DeleteImage',
        4 => 'ModifyImageAttribute',
        5 => 'ModifyImageSharePermission',
        6 => 'DescribeImages',
        7 => 'DescribeImageInfos',
        8 => 'DescribeImageSharePermission',
        9 => 'DescribeExportImageStatus',
        10 => 'DescribeExportImageInfo',
      ),
    ),
    4 => 
    array (
      'id' => 161404,
      'title' => 'SSH密钥对',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateKeyPair',
        1 => 'DeleteKeyPairs',
        2 => 'ImportKeyPair',
        3 => 'DescribeKeyPairs',
      ),
    ),
    5 => 
    array (
      'id' => 161409,
      'title' => '安全组',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'RevokeSecurityGroupEgress',
        1 => 'RevokeSecurityGroup',
        2 => 'CreateSecurityGroup',
        3 => 'AuthorizeSecurityGroup',
        4 => 'JoinSecurityGroup',
        5 => 'AuthorizeSecurityGroupEgress',
        6 => 'LeaveSecurityGroup',
        7 => 'DescribeSecurityGroups',
        8 => 'DeleteSecurityGroup',
        9 => 'DescribeSecurityGroupAttribute',
        10 => 'ModifySecurityGroupAttribute',
      ),
    ),
    6 => 
    array (
      'id' => 161434,
      'title' => '交换机',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateVSwitch',
        1 => 'DeleteVSwitch',
        2 => 'ModifyVSwitchAttribute',
        3 => 'DescribeVSwitches',
      ),
    ),
    7 => 
    array (
      'id' => 161439,
      'title' => '网络',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateClassicNetwork',
        1 => 'DescribeNetworkInterfaces',
        2 => 'DescribeEnsRouteEntryList',
        3 => 'DeleteEnsRouteEntry',
        4 => 'CreateEnsRouteEntry',
        5 => 'DeleteNetwork',
        6 => 'DescribeNetworks',
        7 => 'ModifyNetworkAttribute',
        8 => 'DescribeNetworkAttribute',
        9 => 'CreateNetwork',
      ),
    ),
    8 => 
    array (
      'id' => 161445,
      'title' => '边缘负载均衡（ELB）',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeElbAvailableResourceInfo',
        1 => 'DescribeLoadBalancerSpec',
        2 => 'CreateLoadBalancer',
        3 => 'ModifyLoadBalancerAttribute',
        4 => 'SetLoadBalancerStatus',
        5 => 'DescribeLoadBalancerAttribute',
        6 => 'DescribeLoadBalancers',
        7 => 'CreateLoadBalancerUDPListener',
        8 => 'SetLoadBalancerUDPListenerAttribute',
        9 => 'DescribeLoadBalancerUDPListenerAttribute',
        10 => 'CreateLoadBalancerTCPListener',
        11 => 'SetLoadBalancerTCPListenerAttribute',
        12 => 'DescribeLoadBalancerTCPListenerAttribute',
        13 => 'CreateLoadBalancerHTTPListener',
        14 => 'SetLoadBalancerHTTPListenerAttribute',
        15 => 'DescribeLoadBalancerHTTPListenerAttribute',
        16 => 'CreateLoadBalancerHTTPSListener',
        17 => 'SetLoadBalancerHTTPSListenerAttribute',
        18 => 'DescribeLoadBalancerHTTPSListenerAttribute',
        19 => 'StartLoadBalancerListener',
        20 => 'StopLoadBalancerListener',
        21 => 'DeleteLoadBalancerListener',
        22 => 'AddBackendServers',
        23 => 'RemoveBackendServers',
        24 => 'SetBackendServers',
      ),
    ),
    9 => 
    array (
      'id' => 161470,
      'title' => '弹性公网IP（EIP）',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AssociateEnsEipAddress',
        1 => 'UnAssociateEnsEipAddress',
        2 => 'ModifyEnsEipAddressAttribute',
        3 => 'DescribeEnsEipAddresses',
        4 => 'DescribeEipAddresses',
        5 => 'CreateEipInstance',
      ),
    ),
    10 => 
    array (
      'id' => 165224,
      'title' => 'NAT网关',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateNatGateway',
        1 => 'DescribeNatGateways',
        2 => 'DeleteNatGateway',
        3 => 'CreateSnatEntry',
        4 => 'DescribeSnatAttribute',
        5 => 'DescribeSnatTableEntries',
        6 => 'DeleteSnatEntry',
        7 => 'StartSnatIpForSnatEntry',
        8 => 'DeleteSnatIpForSnatEntry',
        9 => 'AddSnatIpForSnatEntry',
        10 => 'StopSnatIpForSnatEntry',
        11 => 'CreateForwardEntry',
        12 => 'DescribeForwardTableEntries',
        13 => 'ModifyForwardEntry',
        14 => 'DeleteForwardEntry',
      ),
    ),
    11 => 
    array (
      'id' => 184597,
      'title' => '网络ACL',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'UnassociateNetworkAcl',
        1 => 'AccosicateNetworkAcl',
        2 => 'CreateNetworkAcl',
        3 => 'DeleteNetworkAclEntry',
        4 => 'DeleteNetworkAcl',
        5 => 'DescribeNetworkAcls',
        6 => 'CreateNetworkAclEntry',
      ),
    ),
    12 => 
    array (
      'id' => 184598,
      'title' => '辅助IP',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AssignPrivateIpAddresses',
        1 => 'UnassignPrivateIpAddresses',
      ),
    ),
    13 => 
    array (
      'id' => 184469,
      'title' => '协同存储EOS',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'GetOssUsageData',
        1 => 'GetOssStorageAndAccByBuckets',
        2 => 'ListBuckets',
        3 => 'PutBucket',
        4 => 'DeleteBucket',
        5 => 'GetBucketInfo',
        6 => 'GetBucketLifecycle',
        7 => 'PutBucketLifecycle',
        8 => 'DeleteBucketLifecycle',
        9 => 'PutBucketAcl',
        10 => 'GetBucketAcl',
        11 => 'ListObjects',
        12 => 'DeleteObject',
      ),
    ),
    14 => 
    array (
      'id' => 184212,
      'title' => '协同存储NAS',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateFileSystem',
        1 => 'DescribeFileSystems',
        2 => 'ModifyFileSystem',
        3 => 'DeleteFileSystem',
        4 => 'CreateMountTarget',
        5 => 'DescribeMountTargets',
        6 => 'DeleteMountTarget',
      ),
    ),
    15 => 
    array (
      'id' => 184473,
      'title' => '边缘云安卓（AIC）',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ResetAICInstance',
        1 => 'UpgradeAICInstanceImage',
        2 => 'RebootAICInstance',
        3 => 'DescribeARMServerInstances',
        4 => 'RebootARMServerInstance',
        5 => 'ReleaseARMServerInstance',
        6 => 'CreateARMServerInstances',
        7 => 'RenewARMServerInstance',
        8 => 'DescribeAICImages',
        9 => 'RecoverAICInstance',
        10 => 'ReleaseAICInstance',
      ),
    ),
    16 => 
    array (
      'id' => 161502,
      'title' => '边缘应用托管',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'RunServiceSchedule',
        1 => 'DescribeServcieSchedule',
        2 => 'RescaleDeviceService',
        3 => 'DescribeDeviceService',
        4 => 'DescribeDataPushResult',
        5 => 'DescribeDataDownloadURL',
        6 => 'DescribeDataDistResult',
        7 => 'GetDeviceInternetPort',
        8 => 'DeleteDeviceInternetPort',
        9 => 'AddDeviceInternetPort',
        10 => 'RestartDeviceInstance',
        11 => 'ResetDeviceInstance',
        12 => 'DescribeApplicationResourceSummary',
        13 => 'DistApplicationData',
        14 => 'CreateApplication',
        15 => 'DeleteApplication',
        16 => 'ListApplications',
        17 => 'DescribeApplication',
        18 => 'UpgradeApplication',
        19 => 'RollbackApplication',
        20 => 'RescaleApplication',
        21 => 'PushApplicationData',
      ),
    ),
    17 => 
    array (
      'id' => 192995,
      'title' => '标签',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'UntagResources',
        1 => 'TagResources',
        2 => 'ListTagResources',
      ),
    ),
    18 => 
    array (
      'id' => 161531,
      'title' => '带宽',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeBandwitdhByInternetChargeType',
        1 => 'DescribeUserBandWidthData',
      ),
    ),
    19 => 
    array (
      'id' => 161534,
      'title' => '计量计费',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeMeasurementData',
        1 => 'DescribePrice',
        2 => 'ExportBillDetailData',
        3 => 'ExportMeasurementData',
      ),
    ),
    20 => 
    array (
      'id' => 185027,
      'title' => '其他',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ReleaseInstance',
        1 => 'DescribePrePaidInstanceStock',
        2 => 'DescribeReservedResource',
        3 => 'CreateEnsService',
        4 => 'CreateEpnInstance',
        5 => 'DeleteEpnInstance',
        6 => 'DescribeEnsNetDistrict',
        7 => 'DescribeEnsRegionIdResource',
        8 => 'DescribeEnsRegions',
        9 => 'DescribeEpnBandWidthData',
        10 => 'DescribeEpnBandwitdhByInternetChargeType',
        11 => 'DescribeEpnInstanceAttribute',
        12 => 'DescribeEpnInstances',
        13 => 'DescribeEpnMeasurementData',
        14 => 'JoinPublicIpsToEpnInstance',
        15 => 'JoinVSwitchesToEpnInstance',
        16 => 'ModifyEpnInstance',
        17 => 'RemovePublicIpsFromEpnInstance',
        18 => 'RemoveVSwitchesFromEpnInstance',
        19 => 'StartEpnInstance',
        20 => 'StopEpnInstance',
        21 => 'DescribeEnsResourceUsage',
        22 => 'CreateSDG',
        23 => 'DeleteSDG',
        24 => 'RemoveSDG',
        25 => 'DeploySDG',
        26 => 'CopySDG',
        27 => 'SaveSDG',
        28 => 'DescribeSDGs',
        29 => 'DescribeSDGDeploymentStatus',
        30 => 'ModifyInstanceChargeType',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
      'BucketInfo' => 
      array (
        'title' => 'A short description of struct',
        'description' => '存储桶信息',
        'type' => 'object',
        'properties' => 
        array (
          'BucketName' => 
          array (
            'title' => 'Bucket名称。 3~50 个字符，只允许小写字母、数字、短横线（-），且不能以短横线开头或结尾。',
            'type' => 'string',
            'required' => true,
            'example' => 'bucket001',
          ),
          'Comment' => 
          array (
            'title' => '备注。 1-128个字符或汉字，UTF-8编码。',
            'type' => 'string',
            'example' => 'this is a bucket',
          ),
          'CreateTime' => 
          array (
            'title' => 'Bucket创建时间。 （格式：yyyy-mm-ddThh:mm:ss.timezone, 例如 2011-12-01T12:27:13.000Z）',
            'type' => 'string',
            'example' => '2011-12-01T12:27:13.000Z',
          ),
          'ModifyTime' => 
          array (
            'title' => 'Bucket修改时间。 （格式：yyyy-mm-ddThh:mm:ss.timezone, 例如 2011-12-01T12:27:13.000Z）',
            'type' => 'string',
            'example' => '2011-12-01T12:27:13.000Z',
          ),
          'BucketAcl' => 
          array (
            'title' => 'Bucket读写权限类型： public-read-write：公共读写 public-read：公共读 private：私有（默认值）',
            'type' => 'string',
            'example' => 'private',
          ),
          'DispatcherType' => 
          array (
            'title' => 'Bucket的调度类型： node：节点(同城) area：区域(多城市) global：全局(全国)',
            'type' => 'string',
            'example' => 'global',
          ),
          'Endpoint' => 
          array (
            'title' => '访问域名，边缘存储取值： eos.aliyuncs.com',
            'type' => 'string',
            'example' => 'eos.aliyuncs.com',
          ),
          'ResourceType' => 
          array (
            'title' => '指定Bucket的资源类型。 取值范围： general：通用 national-network：国网',
            'type' => 'string',
            'example' => 'general',
          ),
          'StorageClass' => 
          array (
            'title' => 'Bucket存储类型，支持Standard',
            'type' => 'string',
            'example' => 'Standard',
          ),
          'DataRedundancyType' => 
          array (
            'title' => '指定Bucket的数据容灾类型。 取值范围： LRS（默认值）。本地冗余LRS ZRS 同城冗余ZRS采用多可用区（AZ）机制。',
            'type' => 'string',
            'example' => 'LRS',
          ),
          'EnsRegionId' => 
          array (
            'title' => '节点区域id，如果为空表示全局',
            'type' => 'string',
          ),
        ),
      ),
      'DataDisk' => 
      array (
        'title' => 'A short description of struct',
        'description' => '数据盘',
        'type' => 'object',
        'properties' => 
        array (
          'Size' => 
          array (
            'title' => '数据盘',
            'type' => 'integer',
            'format' => 'int64',
            'example' => '60',
          ),
        ),
      ),
      'HealthCheck' => 
      array (
        'title' => 'A short description of struct',
        'description' => '健康检查参数映射',
        'type' => 'object',
        'properties' => 
        array (
          'HealthyThreshold' => 
          array (
            'title' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail判定为success。  取值：2~10。    说明 在HealthCheck值为on时才会有效。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '10',
            'minimum' => '2',
          ),
          'HealthCheck' => 
          array (
            'title' => '是否开启健康检查。  取值：on | off。',
            'type' => 'string',
            'enum' => 
            array (
              0 => 'on',
              1 => 'off',
            ),
          ),
          'UnhealthyThreshold' => 
          array (
            'title' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success判定为fail。  取值：2~10。   说明 在HealthCheck值为on时才会有效。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '10',
            'minimum' => '2',
          ),
          'HealthCheckConnectTimeout' => 
          array (
            'title' => '每次健康检查响应的最大超时时间。  取值：1~300（秒）。  默认值：5。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '300',
            'minimum' => '1',
          ),
          'HealthCheckTimeout' => 
          array (
            'title' => '接收来自运行状况检查的响应需要等待的时间。如果后端ECS在指定的时间内没有正确响应，则判定为健康检查失败。在HealthCheck值为on时才会有效。  取值：1~300（秒）。   说明 如果HealthCHeckTimeout的值小于HealthCheckInterval的值，则HealthCHeckTimeout无效，超时时间为HealthCheckInterval的值。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '300',
            'minimum' => '1',
          ),
          'HealthCheckInterval' => 
          array (
            'title' => '健康检查的时间间隔。  取值： 1~50（秒）。   说明 在HealthCheck值为on时才会有效。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '50',
            'minimum' => '1',
          ),
          'HealthCheckConnectPort' => 
          array (
            'title' => '健康检查的后端服务器的端口。  取值： 1~65535。    说明 在HealthCheck值为on时才会有效。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '65535',
            'minimum' => '1',
          ),
          'HealthCheckType' => 
          array (
            'title' => '健康检查类型。  取值：tcp（默认值） | http。',
            'type' => 'string',
            'enum' => 
            array (
              0 => 'tcp',
              1 => 'http',
            ),
          ),
          'HealthCheckDomain' => 
          array (
            'title' => '用于健康检查的域名，取值：  $_ip： 后端服务器的私网IP。当指定了IP或该参数未指定时，负载均衡会使用各后端服务器的私网IP当做健康检查使用的域名。是否要支持？ domain：域名长度为1-80字符，只能包含字母、数字、点号（.）和连字符（-）。   说明 在HealthCheck值为on时才会有效。',
            'type' => 'string',
            'pattern' => '^[a-zA-Z0-9/\\.\\-]{1,80}$',
          ),
          'HealthCheckURI' => 
          array (
            'title' => '用于健康检查的URI。  长度限制为1~80，只能使用字母、数字和”-/.%?#&amp;“这些字符。 URL不能只为”/“，但必须以”/“开头。    说明 在HealthCheck值为on时才会有效。',
            'type' => 'string',
            'pattern' => '^[/][a-zA-Z0-9/\\.\\-%?#&]{1,80}$',
          ),
          'HealthCheckHttpCode' => 
          array (
            'title' => '健康检查正常的HTTP状态码，多个状态码用逗号分隔。  默认值为http_2xx。  取值：http_2xx | http_3xx | http_4xx | http_5xx。   说明 在HealthCheck值为on时才会有效。',
            'type' => 'string',
            'enum' => 
            array (
              0 => 'http_2xx',
              1 => 'http_3xx',
              2 => 'http_4xx',
              3 => 'http_5xx',
            ),
          ),
          'HealthCheckMethod' => 
          array (
            'title' => '健康检查的method',
            'type' => 'string',
            'enum' => 
            array (
              0 => 'get',
              1 => 'head',
            ),
          ),
        ),
      ),
      'HttpConfig' => 
      array (
        'title' => 'A short description of struct',
        'description' => 'udp监听的配置',
        'type' => 'object',
        'properties' => 
        array (
          'Scheduler' => 
          array (
            'title' => '调度算法。取值：  wrr（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。 wlc：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。 rr：按照访问顺序依次将外部请求依序分发到后端服务器。',
            'type' => 'string',
            'enum' => 
            array (
              0 => 'wrr',
              1 => 'wlc',
              2 => 'rr',
            ),
          ),
          'StickySession' => 
          array (
            'title' => '是否开启会话保持。  取值：on | off。',
            'type' => 'string',
            'enum' => 
            array (
              0 => 'on',
              1 => 'off',
            ),
          ),
          'XForwardedFor' => 
          array (
            'title' => '是否开启通过X-Forwarded-For头字段获取来访者真实 IP。  取值为on。',
            'type' => 'string',
            'example' => 'on',
            'enum' => 
            array (
              0 => 'on',
              1 => 'off',
            ),
          ),
          'StickySessionType' => 
          array (
            'title' => 'cookie的处理方式。取值：  insert：植入Cookie。  客户端第一次访问时，负载均衡会在返回请求中植入Cookie（即在HTTP/HTTPS响应报文中插入SERVERID），下次客户端携带此Cookie访问，负载均衡服务会将请求定向转发给之前记录到的后端服务器上。  server：重写Cookie。  负载均衡发现用户自定义了Cookie，将会对原来的Cookie进行重写，下次客户端携带新的Cookie访问，负载均衡服务会将请求定向转发给之前记录到的后端服务器。   说明 当StickySession的值为on时，必须指定该参数。',
            'type' => 'string',
            'example' => 'insert',
            'enum' => 
            array (
              0 => 'insert',
              1 => 'server',
            ),
          ),
          'Cookie' => 
          array (
            'title' => '服务器上配置的Cookie。 长度为1-200，只能包含ASCII英文字母和数字字符，不能包含逗号、分号或空格，也不能以$开头。 说明 当StickySession为on且StickySessionType为server时，该参数必选。',
            'type' => 'string',
            'pattern' => '^[a-zA-z0-9]{1,200}$',
          ),
          'CookieTimeout' => 
          array (
            'title' => 'Cookie超时时间。  取值：1~86400（秒）。   说明 当StickySession为on且StickySessionType为insert时，该参数必选。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '86400',
            'minimum' => '1',
            'example' => '500',
          ),
          'IdleTimeout' => 
          array (
            'title' => '指定连接空闲超时时间，取值范围为1~60秒，默认值为15秒。  在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立新的连接。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '60',
            'minimum' => '1',
          ),
          'RequestTimeout' => 
          array (
            'title' => '指定请求超时时间，取值范围为1~180秒，默认值为60秒。  在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回 HTTP 504 错误码。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '180',
            'minimum' => '1',
          ),
          'ServerCertificateId' => 
          array (
            'title' => '服务器证书的ID。',
            'type' => 'string',
          ),
        ),
      ),
      'InstanceActiveOpsGroup' => 
      array (
        'title' => 'A short description of struct',
        'description' => '实例主动运维组',
        'type' => 'object',
        'properties' => 
        array (
          'InstanceIds' => 
          array (
            'title' => 'the instance list of instance active group',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
          ),
        ),
      ),
      'InstanceActiveOpsTask' => 
      array (
        'title' => 'A short description of struct',
        'description' => '实例主动运维任务',
        'type' => 'object',
        'properties' => 
        array (
          'InstanceActiveOpsTaskId' => 
          array (
            'title' => 'instance active ops task id',
            'type' => 'string',
          ),
          'InstanceActiveOpsTaskStatus' => 
          array (
            'title' => 'the status of instance active ops task',
            'type' => 'string',
          ),
        ),
      ),
      'InstanceOperateResponse' => 
      array (
        'title' => 'A short description of struct',
        'description' => '实例操作返回',
        'type' => 'object',
        'properties' => 
        array (
          'Code' => 
          array (
            'title' => 'code',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'Message' => 
          array (
            'title' => 'message',
            'type' => 'string',
          ),
          'InstanceId' => 
          array (
            'title' => 'instance id',
            'type' => 'string',
          ),
        ),
      ),
      'SecurityGroupRule' => 
      array (
        'title' => 'A short description of struct',
        'description' => 'ENS安全组规则',
        'type' => 'object',
        'properties' => 
        array (
          'Direction' => 
          array (
            'title' => '方向',
            'type' => 'string',
            'enum' => 
            array (
              0 => 'egress',
              1 => 'ingress',
            ),
          ),
          'IpProtocol' => 
          array (
            'title' => '协议',
            'type' => 'string',
            'enum' => 
            array (
              0 => 'all',
              1 => 'icmp',
              2 => 'udp',
              3 => 'tcp',
            ),
          ),
          'PortRange' => 
          array (
            'title' => '目的端口',
            'type' => 'string',
          ),
          'SourcePortRange' => 
          array (
            'title' => '源端口',
            'type' => 'string',
          ),
          'Policy' => 
          array (
            'title' => '授权策略',
            'type' => 'string',
            'enum' => 
            array (
              0 => 'accept',
              1 => 'drop',
            ),
          ),
          'DestCidrIp' => 
          array (
            'title' => '目标网段',
            'type' => 'string',
          ),
          'SourceCidrIp' => 
          array (
            'title' => '源网段',
            'type' => 'string',
          ),
          'Description' => 
          array (
            'title' => '描述',
            'type' => 'string',
          ),
          'priority' => 
          array (
            'title' => '优先级',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '100',
            'minimum' => '1',
          ),
        ),
      ),
      'TcpConfig' => 
      array (
        'title' => 'A short description of struct',
        'description' => 'udp监听的配置',
        'type' => 'object',
        'properties' => 
        array (
          'Scheduler' => 
          array (
            'title' => '调度算法。取值：wrr（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。wlc：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。rr：按照访问顺序依次将外部请求依序分发到后端服务器。sch：基于源IP地址的一致性hash，相同的源地址会调度到相同的后端服务器。',
            'type' => 'string',
            'enum' => 
            array (
              0 => 'wrr',
              1 => 'wlc',
              2 => 'rr',
              3 => 'sch',
            ),
          ),
          'PersistenceTimeout' => 
          array (
            'title' => '会话保持的超时时间。取值：0~3600（秒）。默认值：0，表示关闭会话保持。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '3600',
            'minimum' => '0',
          ),
          'EstablishedTimeout' => 
          array (
            'title' => '连接超时时间。取值：10~900（秒）。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '900',
            'minimum' => '10',
          ),
        ),
      ),
      'UdpCheck' => 
      array (
        'title' => 'A short description of struct',
        'description' => 'udp监听健康检查',
        'type' => 'object',
        'properties' => 
        array (
          'HealthyThreshold' => 
          array (
            'title' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail判定为success。  取值：2-10。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '10',
            'minimum' => '2',
          ),
          'UnhealthyThreshold' => 
          array (
            'title' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success判定为fail。  取值：2-10。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '10',
            'minimum' => '2',
          ),
          'HealthCheckConnectTimeout' => 
          array (
            'title' => '接收来自运行状况检查的响应需要等待的时间。  如果后端ENS在指定的时间内没有正确响应，则判定为健康检查失败。  取值：1-300（秒）。默认为5秒',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '300',
            'minimum' => '1',
            'default' => '5',
          ),
          'HealthCheckInterval' => 
          array (
            'title' => '健康检查的时间间隔。  取值：1-50（秒）。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '50',
            'minimum' => '1',
          ),
          'HealthCheckConnectPort' => 
          array (
            'title' => '健康检查使用的端口。取值：1-65535  不设置此参数时，表示使用后端服务端口（BackendServerPort）。',
            'type' => 'integer',
            'format' => 'int32',
            'maximum' => '65535',
            'minimum' => '1',
          ),
        ),
      ),
      'UdpConfig' => 
      array (
        'title' => 'A short description of struct',
        'description' => 'udp监听的配置',
        'type' => 'object',
        'properties' => 
        array (
          'Scheduler' => 
          array (
            'title' => '调度算法。取值：  wrr（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。 wlc：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。 rr：按照访问顺序依次将外部请求依序分发到后端服务器。 sch：基于源IP地址的一致性hash，相同的源地址会调度到相同的后端服务器。',
            'type' => 'string',
            'default' => 'wrr',
            'enum' => 
            array (
              0 => 'wrr',
              1 => 'wlc',
              2 => 'rr',
              3 => 'sch',
              4 => 'qch',
            ),
          ),
          'HashKey' => 
          array (
            'title' => 'hash key',
            'type' => 'string',
          ),
        ),
      ),
    ),
  ),
  'apis' => 
  array (
    'RunInstances' => 
    array (
      'summary' => '调用RunInstances创建一台或多台按量付费或者包年包月ENS实例。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例规格',
            'description' => '实例规格。',
            'type' => 'string',
            'required' => true,
            'example' => 'ens.sn1.small',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例付费方式，PrePaid:预付费，包年包月 PostPaid:按量付费',
            'description' => '实例付费方式。取值：
- **PrePaid**：预付费，包年包月。
- **PostPaid**：按量付费。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'PostPaid' => '按量付费',
              'PrePaid' => '预付费',
            ),
            'example' => 'PostPaid',
            'enum' => 
            array (
              0 => 'PrePaid',
              1 => 'PostPaid',
            ),
          ),
        ),
        2 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '镜像id',
            'description' => '镜像ID。arm版卡不能填，其他类型规格必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'm-5si16wo6simkt267p8b7h****',
          ),
        ),
        3 => 
        array (
          'name' => 'NetDistrictCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地区code',
            'description' => '地区Code。
>区域级调度时必填，节点级调度时无效。',
            'type' => 'string',
            'required' => false,
            'example' => '350000',
          ),
        ),
        4 => 
        array (
          'name' => 'Carrier',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '运营商',
            'description' => '运营商。
>区域级调度时必填，节点级调度时无效。',
            'type' => 'string',
            'required' => false,
            'example' => 'telecom',
          ),
        ),
        5 => 
        array (
          'name' => 'ScheduleAreaLevel',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度层级',
            'description' => '调度层级。通过该字段来执行节点级调度或者区域调度。取值：

- **Big**：大区
- **Middle**：省份
- **Small**：城市
- **Region**：节点',
            'type' => 'string',
            'required' => true,
            'example' => 'Region',
          ),
        ),
        6 => 
        array (
          'name' => 'SchedulingStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度策略',
            'description' => '调度策略。取值：

- **Concentrate**：集中
- **Disperse**：分散

> 节点级调度时，为**Concentrate**；区域级调度时，按客户需求选择。',
            'type' => 'string',
            'required' => false,
            'example' => 'Concentrate',
          ),
        ),
        7 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '节点id',
            'description' => '节点ID。

> 节点级调度时必填，区域级调度时无效。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-foshan-telecom',
          ),
        ),
        8 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例密码',
            'description' => '实例密码。

> **Password**、**KeyPairName**、**PasswordInherit**至少填入一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'testPassword',
          ),
        ),
        9 => 
        array (
          'name' => 'KeyPairName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '密钥对名称',
            'description' => '密钥对名称。
> **Password**、**KeyPairName**、**PasswordInherit**至少填入一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'wx2-jumpserver',
          ),
        ),
        10 => 
        array (
          'name' => 'InternetChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '带宽计费方式',
            'description' => '带宽计费方式。取值：
- **BandwidthByDay**：日峰值带宽
- **95BandwidthByMonth**：月95峰值带宽

> 如果是第一次新购时可以进行选择计费方式，后续此字段值会根据第一次所选择的计费方式进行默认处理。',
            'type' => 'string',
            'required' => false,
            'example' => 'BandwidthByDay',
          ),
        ),
        11 => 
        array (
          'name' => 'SystemDisk',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '系统盘规格',
            'description' => '系统盘规格。',
            'type' => 'object',
            'properties' => 
            array (
              'Size' => 
              array (
                'description' => '系统盘大小，单位：GiB。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '50',
              ),
              'Category' => 
              array (
                'description' => '系统盘类型。',
                'type' => 'string',
                'required' => false,
                'example' => 'local_ssd',
              ),
            ),
            'required' => false,
          ),
        ),
        12 => 
        array (
          'name' => 'DataDisk',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '数据盘规格',
            'description' => '数据盘规格。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '数据盘列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Size' => 
                array (
                  'description' => '数据盘大小，单位：GiB。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '20',
                ),
                'Category' => 
                array (
                  'description' => '磁盘种类。取值：
- **cloud_efficiency**：高效云盘
- **cloud_ssd**：全闪云盘
- **local_hdd**：本地HDD盘
- **local_ssd**：本地SSD盘',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cloud_efficiency',
                ),
                'Encrypted' => 
                array (
                  'description' => '是否加密云盘。取值范围：

- true：是

- false（默认值）：否',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'false',
                  'default' => 'false',
                ),
                'KMSKeyId' => 
                array (
                  'description' => '云盘使用的KMS密钥ID。取值范围：

- true：是

- false（默认值）：否

> 如果Encrypted置为true，KMSKeyId为空时则使用服务默认密钥。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'false',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        13 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '购买资源的时长，单位为：月',
            'description' => '购买资源的时长。

- 如果**PeriodUnit**取值为**Day**时，则**Period**仅可设置为**3**。

- 如果**PeriodUnit**取值为**Month**时，则**Period**可设置为**1-9**,**12**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1-9，12',
          ),
        ),
        14 => 
        array (
          'name' => 'InternetMaxBandwidthOut',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '公网最大带宽，如果参数InternetMaxBandwidthOut的值大于0，则自动为实例分配公网IP。',
            'description' => '公网最大带宽，如果本参数的值大于0，则自动为实例分配公网IP。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        15 => 
        array (
          'name' => 'Amount',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '数量',
            'description' => '创建的实例数量。取值范围：1~100。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        16 => 
        array (
          'name' => 'NetWorkId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网络id',
            'description' => '网络ID。

>只能在节点级调度使用，区域级调度时配置该参数会报错。',
            'type' => 'string',
            'required' => false,
            'example' => 'net-id',
          ),
        ),
        17 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '交换机id',
            'description' => '交换机ID。

>只能在节点级调度使用，区域级调度时配置该参数会报错。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-5sagnw7m613oulalkd10n****',
          ),
        ),
        18 => 
        array (
          'name' => 'SecurityId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '安全组id',
            'description' => '安全组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'sg-test',
          ),
        ),
        19 => 
        array (
          'name' => 'HostName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '主机名称',
            'description' => '主机名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-HostName',
          ),
        ),
        20 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例名称。长度为2~128个字符，必须以大小字母或中文开头，不能以http://和https://开头。可以包含中文、英文、数字、半角冒号（:）、下划线（_）、点号（.）或者连字符（-）。默认值为实例的InstanceId',
            'description' => '实例名称。长度为2~128个字符，必须以大小字母或中文开头，不能以`http://`和`https://`开头。可以包含中文、英文、数字、半角冒号（:）、下划线（_）、点号（.）或者连字符（-）。

默认值为实例的InstanceId。',
            'type' => 'string',
            'required' => false,
            'example' => 'TestName',
          ),
        ),
        21 => 
        array (
          'name' => 'UniqueSuffix',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否为HostName和InstanceName添加有序后缀，有序后缀从001开始递增，最大不能超过999',
            'description' => '是否为**HostName**和**InstanceName**添加有序后缀，有序后缀从001开始递增，最大不能超过999。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'True',
          ),
        ),
        22 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用户自定义数据，最大支持16KB 您可传入UserData信息。UserData以Base64的方式编码',
            'description' => '用户自定义数据，最大支持16 KB。您可传入**UserData**信息，**UserData**以Base64的方式编码。',
            'type' => 'string',
            'required' => false,
            'example' => 'ZWtest',
          ),
        ),
        23 => 
        array (
          'name' => 'AutoRenew',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否自动续费，默认为false',
            'description' => '是否自动续费。取值：

- **true**：自动续费
- **false**：不自动续费（默认）

>按量付费时，该参数无效。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'false',
          ),
        ),
        24 => 
        array (
          'name' => 'SchedulingPriceStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度价格策略',
            'description' => '调度价格策略。取值：

- **PriceHighPriority**：优先高价
- **PriceLowPriority**：优先低价',
            'type' => 'string',
            'required' => false,
            'example' => 'PriceHighPriority',
            'default' => 'PriceLowPriority',
            'enum' => 
            array (
              0 => 'PriceHighPriority',
              1 => 'PriceLowPriority',
            ),
          ),
        ),
        25 => 
        array (
          'name' => 'PrivateIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '私网ip',
            'description' => '私网IP地址。
>只能在节点级调度使用，区域级调度时配置该参数会报错。
如果指定了私网IP，实例数量只能为1台，且私网IP和交换机ID同时非空时，该私网IP才生效。',
            'type' => 'string',
            'required' => false,
            'example' => '10.0.XX.XX',
          ),
        ),
        26 => 
        array (
          'name' => 'PeriodUnit',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询云服务器ENS不同计费周期的价格。取值范围：
Month（默认）：按月计费的价格单位。
Day：按天计费的价格单位。',
            'description' => '购买资源的时长单位。取值：
- **Month**（默认）：按月购买。
- **Day**：按天购买。',
            'type' => 'string',
            'required' => false,
            'example' => 'Month',
            'enum' => 
            array (
              0 => 'Month',
              1 => 'Day',
            ),
          ),
        ),
        27 => 
        array (
          'name' => 'PublicIpIdentification',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用公网ipidentification。取值：-true：启用。-false（默认值）：不启用。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'true',
          ),
        ),
        28 => 
        array (
          'name' => 'PasswordInherit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否使用镜像预置密码。取值：

- **true**：使用
- **false**：不使用

> **Password**、**KeyPairName**、**PasswordInherit**至少填入一个。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        29 => 
        array (
          'name' => 'InstanceChargeStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例计费策略。取值：

- **instance**：实例粒度
- 不传默认按用户维度',
            'type' => 'string',
            'required' => false,
            'example' => 'instance',
          ),
        ),
        30 => 
        array (
          'name' => 'BillingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例计算资源计费周期，仅支持实例级后付费。
取值
* Hour
* Day
* Month',
            'description' => '实例计算资源计费周期，仅支持实例级后付费。
取值

- **Day**：按天计费。

- **Month**：按月计费。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Month' => 'Month',
              'Day' => 'Day',
            ),
            'example' => 'Day',
            'enum' => 
            array (
              0 => 'Month',
              1 => 'Day',
              2 => 'Hour',
            ),
          ),
        ),
        31 => 
        array (
          'name' => 'IpType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP类型。取值：

- **ipv4**（默认值）：IPv4。

- **ipv6**：IPv6。

- **ipv4Andipv6**：IPv4和IPv6。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv4',
            'enum' => 
            array (
              0 => 'ipv4',
              1 => 'ipv6',
              2 => 'ipv4Andipv6',
            ),
          ),
        ),
        32 => 
        array (
          'name' => 'AutoUseCoupon',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否使用代金券，默认为使用，即AutoUseCoupon=true。',
            'description' => '是否使用代金券，默认为使用，即AutoUseCoupon=true。',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
            'default' => 'true',
          ),
        ),
        33 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '实例所绑定的标签',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签键值对数组。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '自定义标签key',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'team',
                ),
                'Value' => 
                array (
                  'description' => '标签值。不可超过128个字符，不能以`aliyun`或`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        34 => 
        array (
          'name' => 'AutoReleaseTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按量付费实例的自动释放时间。按照[ISO 8601](~~25696~~)标准表示，使用UTC+0时间。格式为：`yyyy-MM-ddTHH:mm:ssZ`。

- 如果秒（`ss`）取值不是`00`，则自动取为当前分钟（`mm`）开始时。

- 最短释放时间为当前时间一小时之后。',
            'type' => 'string',
            'format' => 'iso8601',
            'required' => false,
            'example' => '2023-06-28T14:38:52Z',
          ),
        ),
        35 => 
        array (
          'name' => 'SpotStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按量付费实例的竞价策略。当参数`InstanceChargeType`取值为`PostPaid`时生效。取值范围：

- NoSpot：正常按量付费实例。
- SpotAsPriceGo：系统自动出价，跟随当前市场实际价格。

默认值：NoSpot。',
            'type' => 'string',
            'required' => false,
            'example' => 'SpotAsPriceGo',
            'enum' => 
            array (
              0 => 'SpotAsPriceGo',
              1 => 'NoSpot',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '91E4AFBE-4E35-5D2A-A886-BB477C9953D2',
              ),
              'InstanceIds' => 
              array (
                'description' => '实例ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '实例ID列表。',
                  'type' => 'string',
                  'example' => '[\'i-5xxxx26dix05koz15l5413j25o\', \'i-5sdmxxxx\']',
                ),
              ),
              'OrderId' => 
              array (
                'description' => '订单编号。',
                'type' => 'string',
                'example' => '213177957850399',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"91E4AFBE-4E35-5D2A-A886-BB477C9953D2\\",\\n  \\"InstanceIds\\": [\\n    \\"[\'i-5xxxx26dix05koz15l5413j25o\', \'i-5sdmxxxx\']\\"\\n  ],\\n  \\"OrderId\\": \\"213177957850399\\"\\n}","errorExample":""},{"type":"xml","example":"<RunInstancesResponse>\\n    <RequestId>91E4AFBE-4E35-5D2A-A886-BB477C9953D2</RequestId>\\n    <InstanceIds>[\'i-5xxxx26dix05koz15l5413j25o\', \'i-5sdmxxxx\']</InstanceIds>\\n    <OrderId>213177957850399</OrderId>\\n</RunInstancesResponse>","errorExample":""}]',
      'title' => '批量创建实例',
    ),
    'CreateInstance' => 
    array (
      'summary' => '调用CreateInstance创建实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例规格。

实例规格详情请参见[使用限制](~~66124~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'ens.se1.tiny',
          ),
        ),
        1 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的密码。

长度为8至30个字符，必须同时包含大小写英文字母、数字和特殊符号中的三类字符。可以设置以下特殊符号：```()`~!@#$%^&*-_+=|{}[]:;\'<>,.?/```',
            'type' => 'string',
            'required' => false,
            'example' => 'yourPassword:1',
          ),
        ),
        3 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '购买资源的时长，取值范围：**1**~**9**和**12**，单位：月。',
            'type' => 'string',
            'required' => true,
            'example' => '12',
          ),
        ),
        4 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像文件ID，启动实例时选择的镜像资源。',
            'type' => 'string',
            'required' => false,
            'example' => 'yourImage ID',
          ),
        ),
        5 => 
        array (
          'name' => 'SystemDisk.Size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '系统盘大小，单位为GiB。取值：**20**，**40**，不能比镜像小，需要为10的倍数。',
            'type' => 'string',
            'required' => false,
            'example' => '40',
          ),
        ),
        6 => 
        array (
          'name' => 'Quantity',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例数量。',
            'type' => 'string',
            'required' => true,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'DataDisk.1.Size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第一块数据盘的容量大小，单位为GiB，容量至少为20 GiB且为10的倍数。
',
            'type' => 'string',
            'required' => false,
            'example' => '50',
          ),
        ),
        8 => 
        array (
          'name' => 'InternetChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '如果您第一次创建该参数为必传。如果已有实例资源，则默认按照已存在的计费方式。取值：

- **BandwidthByDay**：日峰值带宽。

- **95BandwidthByMonth**：月95峰值带宽。',
            'type' => 'string',
            'required' => false,
            'example' => '95BandwidthByMonth',
          ),
        ),
        9 => 
        array (
          'name' => 'AutoRenewPeriod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每次自动续费的时长，当参数**AutoRenew**取值**True**时为必填。取值：**1**~**12**，单位：月。',
            'type' => 'string',
            'required' => false,
            'example' => '12',
          ),
        ),
        10 => 
        array (
          'name' => 'AutoRenew',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否要自动续费。取值：**True**|**False**（默认值）。
',
            'type' => 'string',
            'required' => false,
            'example' => 'True',
          ),
        ),
        11 => 
        array (
          'name' => 'IpType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP类型。取值：

- **ipv4**（默认值）：IPv4。

- **ipv6**：IPv6。

- **ipv4Andipv6**：IPv4和IPv6。',
            'type' => 'string',
            'required' => false,
            'example' => 'ipv4',
            'default' => 'ipv4',
            'enum' => 
            array (
              0 => 'ipv4Andipv6',
              1 => 'ipv4',
              2 => 'ipv6',
            ),
          ),
        ),
        12 => 
        array (
          'name' => 'KeyPairName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '密钥对名称。仅支持传单个名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'TestKeyPairName',
          ),
        ),
        13 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义数据，以`#!`开头。目前，最长支持256字符，最大支持16 KB。传参内容仅支持自定义数据Script，不支持InstanceMetaData渲染。


您可传入自定义数据。数据以Base64的方式编码。调用API发起请求时，不会加密您设置的自定义数据，建议您不要以明文方式传入机密的信息，例如：密码和私钥等。如果需要传入密码和私钥等内容，请您对内容进行加密后，然后以Base64的方式编码后再传入。在实例内部以同样的方式反解密。

详情请参见[数据格式](https://cloudinit.readthedocs.io/en/latest/topics/format.html)。



',
            'type' => 'string',
            'required' => false,
            'example' => '#!/bin/sh  echo "Hello World.  The time is now $(date -R)!" | tee /home/output.txt',
          ),
        ),
        14 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'YourVSwitchId',
          ),
        ),
        15 => 
        array (
          'name' => 'PrivateIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '内网地址。
如果传了内网地址，则vSwitch必传。vSwitch需要先创建好，否则会报错。',
            'type' => 'string',
            'required' => false,
            'example' => '10.10.10.10',
          ),
        ),
        16 => 
        array (
          'name' => 'PaymentType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '支付方式。目前为固定值Subscription：预付费实例，暂不支持修改。',
            'type' => 'string',
            'required' => false,
            'example' => 'Subscription',
            'default' => 'Subscription',
            'enum' => 
            array (
              0 => 'Subscription',
            ),
          ),
        ),
        17 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的名称。命名规则如下所示：

- 长度为**2**~**128**个英文或中文字符。
- 必须以大小字母或中文开头，不能以http://和https://开头。
- 可以包含数字、半角冒号（:）、下划线（_）、英文句号（.）或者连字符（-）。

如果没有指定该参数，默认值为实例的InstanceId。',
            'type' => 'string',
            'required' => false,
            'example' => 'test：Instance_Name.1-2',
          ),
        ),
        18 => 
        array (
          'name' => 'HostName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务器的主机名。
通用命名规则：英文句号（.）和短横线（-）不能作为首尾字符，更不能连续使用。

具体实例命名规则如下：
- Windows实例：字符长度为**2**~**15**，不支持英文句号（.），不能全是数字。允许大小写英文字母、数字和短横线（-）。
- 其他类型实例（Linux等）：字符长度为**2**~**64**，支持多个英文句号（.），英文句号之间为一段，每段允许大小写英文字母、数字和短横线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-HostName',
          ),
        ),
        19 => 
        array (
          'name' => 'UniqueSuffix',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为**HostName**和**InstanceName**添加有序后缀。有序后缀从**001**开始递增，最大不能超过**999**。

例如：**LocalHost001**，**LocalHost002**和**MyInstance001**，**MyInstance002**。

默认值：**false**。



',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        20 => 
        array (
          'name' => 'PublicIpIdentification',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '公网IP是否可以分配给指定实例。取值：

- **true**（默认值）：可以分配。
- **false**：不可以分配。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        21 => 
        array (
          'name' => 'PasswordInherit',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否使用镜像预设的密码。使用该参数时，Password参数必须为空，同时您需要确保使用的镜像已经设置了密码。',
            'description' => '是否使用镜像预设的密码。取值：

- **true**：使用镜像预设的密码，且**Password**参数必须为空，同时您需要确保使用的镜像已经设置了密码。
- **false**：不使用镜像预设的密码。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4A431388-2D4B-46F4-A96B-D4E6BD0688C1',
              ),
              'InstanceIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceId' => 
                  array (
                    'description' => '实例ID列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '实例ID列表。',
                      'type' => 'string',
                      'example' => '[i-7ecpqvkicnchxccozrp****,i-6ecpqvkicnchxccozrp****]',
                    ),
                  ),
                ),
              ),
              'Code' => 
              array (
                'description' => '返回码，成功返回0。

> 如果您通过SDK方式调用该API会返回Integer类型，通用方式或者HTTP方式调用会返回字符串类型。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'StockNotEnough',
            'errorMessage' => 'The specified instance type has insufficient resource.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidUserData.NotInWhiteList',
            'errorMessage' => 'The specified user is not authroized to perform this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          3 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The input parameter is Invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidDiskSize.ValueNotSupported',
            'errorMessage' => 'The specified disk capacity is invalid. Specify another capacity and try again.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.Bandwidth',
            'errorMessage' => 'The specified parameter InternetChargeType is not valid.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidParameter.Image',
            'errorMessage' => 'The specified image does not support.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter.InstanceType',
            'errorMessage' => 'The specified parameter InstanceType is not valid.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidAccountStatus.NotEnoughBalance',
            'errorMessage' => 'Your account does not have enough balance.',
          ),
          13 => 
          array (
            'errorCode' => 'unsupported_Ipv6Feature',
            'errorMessage' => 'This ensregion does not support creating instance of the IPv6 type. Select another type.',
          ),
          14 => 
          array (
            'errorCode' => 'Forbidden.CreateInstance',
            'errorMessage' => 'The user is not in the Goods whitelist of creating instance interface.',
          ),
          15 => 
          array (
            'errorCode' => 'ENS_OperationUnsupported_KeyPairName',
            'errorMessage' => 'The KeyPairNameis not available or image not support ssh key.',
          ),
          16 => 
          array (
            'errorCode' => 'ENS_DependencyViolation_WindowsInstance',
            'errorMessage' => 'The instance creating is window, only user password to login.',
          ),
          17 => 
          array (
            'errorCode' => 'ENS_PASSWORDORKEYPAIRNAME_MODULE_NOT_CHOOSEN',
            'errorMessage' => 'The required module pwd or keyPairName is not inputed',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidPrivateIpAddress',
            'errorMessage' => 'Specified private IP address is not in the CIDR block of virtual switch.',
          ),
          19 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'Specified virtual switch does not exist.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidPrivateIpAddress.Duplicated',
            'errorMessage' => 'Specified private IP address is duplicated.',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidPasswordParam.Mismatch',
            'errorMessage' => 'The input password should be null when passwordInherit is true.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4A431388-2D4B-46F4-A96B-D4E6BD0688C1\\",\\n  \\"InstanceIds\\": {\\n    \\"InstanceId\\": [\\n      \\"[i-7ecpqvkicnchxccozrp****,i-6ecpqvkicnchxccozrp****]\\"\\n    ]\\n  },\\n  \\"Code\\": 0\\n}","errorExample":""},{"type":"xml","example":"<CreateInstanceResponse>\\n    <RequestId>4A431388-2D4B-46F4-A96B-D4E6BD0688C1</RequestId>\\n    <InstanceIds>[i-7ecpqvkicnchxccozrp****,i-6ecpqvkicnchxccozrp****]</InstanceIds>\\n    <Code>0</Code>\\n</CreateInstanceResponse>","errorExample":""}]',
      'title' => '创建实例',
      'description' => '- 单用户调用频率：10次/秒。
- 由于创建实例是异步操作，建议您适当增加请求时间。当API返回Code=0时仅代表请求成功，并不代表成功创建实例，在请求成功时会返回实例ID，然后您可以根据实例ID查询实例是否创建成功。
- InvalidUserData.NotInWhiteList接口限制条件：只有配置了购买权限的相关白名单才可以进行创建，否则报错。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ReleasePostPaidInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定删除的实例ID，仅支持删除单个。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-instance****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0003E8B-B930-4F59-ADC0-0E209A9012A8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C0003E8B-B930-4F59-ADC0-0E209A9012A8\\"\\n}","errorExample":""},{"type":"xml","example":"<ReleasePostPaidInstanceResponse>    \\r\\n    <RequestId>C0003E8B-B930-4F59-ADC0-0E209A9012A8</RequestId>\\r\\n</ReleasePostPaidInstanceResponse>    \\r\\n    ","errorExample":""}]',
      'title' => '删除按量付费实例',
      'summary' => '调用ReleasePostPaidInstance删除按量付费实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ReleasePrePaidInstance' => 
    array (
      'summary' => '调用ReleasePrePaidInstance删除预付费实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定删除的实例ID，仅支持删除单个。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-instance****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0003E8B-B930-4F59-ADC0-0E209A9012A8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C0003E8B-B930-4F59-ADC0-0E209A9012A8\\"\\n}","errorExample":""},{"type":"xml","example":"<ReleasePrePaidInstanceReesponse>\\r\\n    <RequestId>C0003E8B-B930-4F59-ADC0-0E209A9012A8</RequestId>\\r\\n</ReleasePrePaidInstanceReesponse>\\r\\n","errorExample":""}]',
      'title' => '删除预付费实例',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RenewInstance' => 
    array (
      'summary' => '调用RenewInstance给预付费实例续费。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '需要续费的实例ID。',
            'description' => '需要续费的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-56789acfmxazb4p****',
          ),
        ),
        1 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '包年包月续费时长。',
            'description' => '包年包月续费时长。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
            'enum' => 
            array (
              0 => '1',
              1 => '2',
              2 => '3',
              3 => '4',
              4 => '5',
              5 => '6',
              6 => '7',
              7 => '8',
              8 => '9',
              9 => '12',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '公共参数，每个请求的ID都是唯一的，可用于排查和定位问题。',
                'type' => 'string',
                'example' => '86A6D421-A0C7-4C01-8648-47377CA6A2CE',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SystemError',
            'errorMessage' => 'Interface call error, please re-match, or contact the product.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"86A6D421-A0C7-4C01-8648-47377CA6A2CE\\"\\n}","type":"json"}]',
      'title' => '预付费实例续费',
    ),
    'ReinitInstance' => 
    array (
      'summary' => '按照指定的参数重置实例到初始状态。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-5vn4n3y4laeb*******ltlvzi',
          ),
        ),
        1 => 
        array (
          'name' => 'ImageId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '镜像文件ID，重置实例时选择的镜像资源。',
            'type' => 'string',
            'required' => true,
            'example' => 'm-5wn1dh*******b48f440ntvad',
          ),
        ),
        2 => 
        array (
          'name' => 'Password',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '实例的密码。

长度为8至30个字符，必须同时包含大小写英文字母、数字和特殊符号中的三类字符。可以设置以下特殊符号：```()`~!@#$%^&*-_+={}[]:;\'<>,.?/```',
            'type' => 'string',
            'required' => false,
            'example' => 'Example123@',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C46C79B7-0C31-5947-9D86-82207661EADA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C46C79B7-0C31-5947-9D86-82207661EADA\\"\\n}","type":"json"}]',
      'title' => '重置实例',
    ),
    'ModifyInstanceAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改实例的ID，仅支持修改单个。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-instanc****',
          ),
        ),
        1 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的密码。',
            'type' => 'string',
            'required' => false,
            'example' => 'yourPassword',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的名称。

长度为2~128个英文或中文字符。必须以大小字母或中文开头，不能以`http://`和`https://`开头。可以包含数字、冒号（:）、下划线（_）或者连接号（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-instanceidname',
          ),
        ),
        3 => 
        array (
          'name' => 'HostName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务器的主机名。 长度为2-64个字符，允许使用半角句号（.）分隔字符成多段，每段允许使用大小写字母、数字或连字符（-），但不能连续使用半角句号（.）或短划线（-）。不能以半角句号（.）或短划线（-）开头或结尾。',
            'type' => 'string',
            'required' => false,
            'example' => 'testHostName',
          ),
        ),
        4 => 
        array (
          'name' => 'UserData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例自定义数据，需要以Base64编码。

编码前，原始数据不能超过16 KB。建议不要明文传入敏感信息，例如密码和私钥等。如果必须传入敏感信息，建议您加密后再以Base64编码传入，在实例内部以同样的方式解密。',
            'type' => 'string',
            'required' => false,
            'example' => '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgK****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务返回码，成功返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter InstanceId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 200,\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyInstanceAttributeResponse>\\r\\n   <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\r\\n</ModifyInstanceAttributeResponse>","errorExample":""}]',
      'title' => '修改实例属性',
      'summary' => '调用ModifyInstanceAttribute修改实例属性，包括实例密码、名称。',
      'description' => '- 实例状态为启动中（Starting）时，无法重置实例密码。

- 实例状态为运行中（Running）时，无法修改实例密码。

- 重置密码后，您需要在控制台重启实例或者调用RebootInstance接口使更改生效，在实例内部重启将不会生效。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyPrepayInstanceSpec' => 
    array (
      'summary' => '调用ModifyPrepayInstanceSpec升级或者降低一台包年包月ENS实例的实例规格，新实例规格将会覆盖实例的整个生命周期。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '变配实例id',
            'description' => '变配的实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-bp67acfmxazb4p****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '更新的配置',
            'description' => '更新的配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'ens.sn1.tiny',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FD94C8E8-128E-525C-A0C3-60E063B70330',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"FD94C8E8-128E-525C-A0C3-60E063B70330\\"\\n}","type":"json"}]',
      'title' => '变配实例',
    ),
    'ModifyInstanceAutoRenewAttribute' => 
    array (
      'summary' => '调用ModifyInstanceAutoRenewAttribute设置实例续费。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，多个用分号（;）分隔。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-5ci7l7k1m9m2zmhp4iw3o****',
          ),
        ),
        1 => 
        array (
          'name' => 'AutoRenew',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否要自动续费。取值：**True****False**（默认值）。
',
            'type' => 'string',
            'required' => true,
            'example' => 'True',
          ),
        ),
        2 => 
        array (
          'name' => 'Duration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置实例自动续费时长。单位：月，取值：1~9、12。如果AutoRenew为true时，该参数必须有值。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'RenewalStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置是否不再续费，参数**RenewalStatus**的优先级高于参数**AutoRenew**。如果不传入参数**RenewalStatus**，则默认以参数**AutoRenew**为准。
- AutoRenewal：设置为自动续费。
- Normal：取消自动续费。 
- NotRenewal：不再续费。

传入该值后，系统不再发送到期提醒，只在到期前第三天发送不续费提醒。不再续费的ENS实例可以更改成待续费（Normal）后，再自行续费或设置为自动续费。',
            'type' => 'string',
            'required' => false,
            'example' => 'AutoRenewal',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回的业务码，正常成功为0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestId' => 
              array (
                'description' => '公共参数，每个请求的ID都是唯一的，可用于排查和定位问题。',
                'type' => 'string',
                'example' => 'EA3758E0-8899-17D3-9526-5F62CF33A586',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotExists',
            'errorMessage' => 'The user have no instances.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 0,\\n  \\"RequestId\\": \\"EA3758E0-8899-17D3-9526-5F62CF33A586\\"\\n}","type":"json"}]',
      'title' => '修改实例续费配置',
    ),
    'AttachEnsInstances' => 
    array (
      'summary' => '为容器服务Kubernetes版添加ENS实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，仅支持传单个ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'testInstacneId',
          ),
        ),
        1 => 
        array (
          'name' => 'Scripts',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '在实例上执行的命令，使用Base64、UTF-8编码。',
            'type' => 'string',
            'required' => true,
            'example' => 'wget d2dldCBodHRwOi8vYWxpYWNzLWs4cy1jbxxxx',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0003E8B-B930-4F59-ADC0-0E209A9012A8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter domainName that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'ServiceConfigInvalid',
            'errorMessage' => 'The specified InstanceType is not support.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          5 => 
          array (
            'errorCode' => 'StockNotEnough',
            'errorMessage' => 'The specified configuration is unavailable. Reconfigure and try again.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalInsatanceSpec',
            'errorMessage' => 'The specified Instance Spec is illegal.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C0003E8B-B930-4F59-ADC0-0E209A9012A8\\"\\n}","errorExample":""},{"type":"xml","example":"<AttachEnsInstancesResponse>\\r\\n    <RequestId>C0003E8B-B930-4F59-ADC0-0E209A9012A8</RequestId>\\r\\n</AttachEnsInstancesResponse>\\r\\n","errorExample":""}]',
      'title' => '加入容器集群',
      'description' => '# 使用说明

- 单用户调用频率：10次/秒。

- 成功执行命令脚本后，实例会自动重启加载。

- 实例限定条件：实例最小规格2C4G、镜像CentOS 7.4以上。

<props="china">调用该接口前，您需要[开通容器服务Kubernetes版](https://cs.console.aliyun.com/#/k8s/overview)。</props>



',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RebootInstance' => 
    array (
      'summary' => '调用RebootInstance重启一台实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要重启实例的ID，仅支持重启单个。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-instanceid****',
          ),
        ),
        1 => 
        array (
          'name' => 'ForceStop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '重启ENS实例前是否强制关机策略。

- **true**：重启ENS实例前强制关机。
- **false**（默认）：重启ENS实例前正常关机。',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
            'enum' => 
            array (
              0 => 'true',
              1 => 'false',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回的业务码，正常成功为0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'Failed to call API.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the instance does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<RebootInstanceResponse>\\n    <Code>0</Code>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</RebootInstanceResponse>","errorExample":""}]',
      'title' => '重启实例',
      'description' => '- 您只能重启状态为运行中（Running）的ENS实例。

- 接口调用成功后实例进入启动中 （Starting） 状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StartInstance' => 
    array (
      'summary' => '调用StartInstance启动一台实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，仅支持启动单个。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-instance****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回的业务码，正常成功为0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the instance does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<StartInstanceResponse>\\n    <Code>0</Code>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</StartInstanceResponse>","errorExample":""}]',
      'title' => '启动实例',
      'description' => '- 实例状态必须为已停止（Stopped），才可以调用该接口。
- 接口调用成功后实例进入启动中 （Starting） 状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StopInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要停止运行的实例的ID，仅支持停止单个。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-instanceid****',
          ),
        ),
        1 => 
        array (
          'name' => 'ForceStop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '停止实例时是否强制关机策略。

- **true**：强制关机。

- **false**（默认）：正常关机流程。
',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
            'enum' => 
            array (
              0 => 'true',
              1 => 'false',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回的业务码，正常成功为0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<StopInstanceResponse>\\n    <Code>0</Code>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</StopInstanceResponse>","errorExample":""}]',
      'title' => '停止实例',
      'summary' => '调用StopInstance停止运行一台实例。',
      'description' => '- 只有状态为运行中（Running）的实例才可以进行此操作。

- 成功调用接口后实例进入停止中（Stopping）状态。

- 实例成功停止关机后进入已停止（Stopped）状态。

- 支持强制停止，等同于断电处理，可能丢失实例操作系统中未写入磁盘的数据。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddNetworkInterfaceToInstance' => 
    array (
      'summary' => '调用AddNetworkInterfaceToInstance增加IPv6网卡且同时自动分配公网IP。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'yourInstance ID',
          ),
        ),
        1 => 
        array (
          'name' => 'Networks',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络参数，格式为JSON字符串，目前仅支持IPv6。增加IPv6网关如下所示：
\\[{
"ipType": "public",
"ipAddressType": "ipv6"
}]

',
            'type' => 'string',
            'required' => true,
            'example' => '[{"ipType": "public", "ipAddressType": "ipv6" }]',
          ),
        ),
        2 => 
        array (
          'name' => 'AutoStart',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动重启。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          5 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<AddNetworkInterfaceToInstanceResponse>\\r\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\r\\n</AddNetworkInterfaceToInstanceResponse>","errorExample":""}]',
      'title' => '增加IPv6网卡',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：5次/秒。
- 暂不支持内网及IPv4类型。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeAvailableResource' => 
    array (
      'summary' => '调用DescribeAvailableResource查询可以创建的实例资源。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务返回码，正常返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'Images' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Image' => 
                  array (
                    'description' => '镜像信息组成的集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '镜像信息Images组成的集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ImageId' => 
                        array (
                          'description' => '镜像ID。',
                          'type' => 'string',
                          'example' => 'centos_6_08_64_20G_alibase_20171208',
                        ),
                        'ImageName' => 
                        array (
                          'description' => '镜像的名称。',
                          'type' => 'string',
                          'example' => 'centos_6_08_64_20G_alibase_****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '公共参数，每个请求ID都是唯一的，可用于排查和定位问题。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'SupportResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SupportResource' => 
                  array (
                    'description' => '可购买的资源规格信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '可购买的资源规格信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DataDiskSize' => 
                        array (
                          'description' => '数据盘大小。单位：GB。',
                          'type' => 'string',
                          'example' => '500',
                        ),
                        'EnsRegionId' => 
                        array (
                          'description' => 'ENS节点ID。',
                          'type' => 'string',
                          'example' => 'cn-beijing-cmcc',
                        ),
                        'InstanceSpec' => 
                        array (
                          'description' => '实例对应的规格。',
                          'type' => 'string',
                          'example' => 'ens.sn1.stiny',
                        ),
                        'SupportResourcesCount' => 
                        array (
                          'description' => '可购买数量。',
                          'type' => 'string',
                          'example' => '9',
                        ),
                        'SystemDiskSize' => 
                        array (
                          'description' => '系统盘容量。单位为GiB。',
                          'type' => 'string',
                          'example' => '20',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotExists',
            'errorMessage' => 'The user have no instances.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 0,\\n  \\"Images\\": {\\n    \\"Image\\": [\\n      {\\n        \\"ImageId\\": \\"centos_6_08_64_20G_alibase_20171208\\",\\n        \\"ImageName\\": \\"centos_6_08_64_20G_alibase_****\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"SupportResources\\": {\\n    \\"SupportResource\\": [\\n      {\\n        \\"DataDiskSize\\": \\"500\\",\\n        \\"EnsRegionId\\": \\"cn-beijing-cmcc\\",\\n        \\"InstanceSpec\\": \\"ens.sn1.stiny\\",\\n        \\"SupportResourcesCount\\": \\"9\\",\\n        \\"SystemDiskSize\\": \\"20\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询可以创建的实例资源',
    ),
    'DescribeInstances' => 
    array (
      'summary' => '调用DescribeInstances查询一台或多台实例的详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing-cmcc',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-5iqczfxps7csjrxeca****',
          ),
        ),
        2 => 
        array (
          'name' => 'EnsRegionIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点的编号列表。参数为一个带有格式的JSON数组，最多100个ID，英文逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'example' => '["cn-suzhou-telecom","cn-chengdu-telecom"]',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的编号列表。参数为一个带有格式的JSON数组，最多100个ID，英文逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'example' => '["i-5iqczfxps7csjrxeca07****", "i-5iqczfxps7csjrxeca07****"]',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'TestName',
          ),
        ),
        5 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'centos_6_08_64_20G_alibase_****',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例状态列表的页码，起始值为**1**。

默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值为**100**行。

默认值：**10**。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
        8 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例状态。取值：

- Running：运行中。
- Stopped：已停止。
- Expired：已过期。',
            'type' => 'string',
            'required' => false,
            'example' => 'Running',
          ),
        ),
        9 => 
        array (
          'name' => 'OrderByParams',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序参数，JSON格式。

按照实例名称、到期时间、节点ID、创建时间排序，可以组合使用。',
            'type' => 'string',
            'required' => false,
            'example' => '{
    "InstanceNameSort": "asc",
    "ExpireTimeSort": "asc",
    "CreationTimeSort": "desc",
    "EnsRegionId": "desc"
}',
          ),
        ),
        10 => 
        array (
          'name' => 'EnsServiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘服务ID，可按此ID查询边缘服务下所创建的实例信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'ens-20190730202316s****',
          ),
        ),
        11 => 
        array (
          'name' => 'InstanceResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤的类型。取值：

- EnsInstance：单独购买实例。
- EnsService：边缘服务实例。
- BuildMachine：镜像构建机。
- EnsPostPaidInstance：单独购买后付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'EnsService',
          ),
        ),
        12 => 
        array (
          'name' => 'SearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的关键字。支持**ip**、**InstanceName**、**InstanceId**等参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'Joshua',
          ),
        ),
        13 => 
        array (
          'name' => 'NetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'n-2zeuphj08tt7q3brd****',
          ),
        ),
        14 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-2zeh0r1pabwtg6wcs****',
          ),
        ),
        15 => 
        array (
          'name' => 'SecurityGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'sg-5kyicq2kfcapxrdds6tar7jqb',
          ),
        ),
        16 => 
        array (
          'name' => 'IntranetIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '内网IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '47.100.XX.XX',
          ),
        ),
        17 => 
        array (
          'name' => 'Tags',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '资源标签。此接口暂不支持标签信息返回，可以结合标签目录下的API进行组合使用。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '实例的标签集合。此接口暂不支持标签信息返回，可以结合标签目录下的API进行组合使用。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'title' => '实例的标签键。N的取值范围为1~20。',
                  'description' => '实例的标签键。N的取值范围为1~20。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tag',
                ),
                'Value' => 
                array (
                  'title' => '实例的标签值。N的取值范围：1~20。',
                  'description' => '实例的标签值。N的取值范围：1~20。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '2',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        18 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例规格。',
            'type' => 'string',
            'required' => false,
            'example' => 'ens.se1.tiny',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回的业务码，正常成功为0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'PageSize' => 
              array (
                'description' => '输入时设置的每页行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '60',
              ),
              'PageNumber' => 
              array (
                'description' => '实例列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'TotalCount' => 
              array (
                'description' => '查询到的实例总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Instances' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Instance' => 
                  array (
                    'description' => '由InstanceAttributesType组成的数组格式，返回实例的信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'Schema of Response',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => '实例创建时间。按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。',
                          'type' => 'string',
                          'example' => '2019-07-26T06:40:43Z',
                        ),
                        'Status' => 
                        array (
                          'description' => '状态。取值：

- Running：运行中。
- Expired：已过期。
- Stopped：已停止。',
                          'type' => 'string',
                          'example' => 'Running',
                        ),
                        'SpecName' => 
                        array (
                          'description' => '实例规格代码。',
                          'type' => 'string',
                          'example' => 'ens.sn1.stiny',
                        ),
                        'InstanceTypeFamily' => 
                        array (
                          'description' => '实例规格簇。取值：

- x86_vm：X86计算
- x86_pm：X86裸机
- x86_bmi：X86裸金属
- x86_bm：智能网卡裸金属
- pc_bmi：异构裸金属
- pc_vm：异构虚机
- arm_bmi：ARM计算',
                          'type' => 'string',
                          'example' => 'x86_vm',
                        ),
                        'InstanceResourceType' => 
                        array (
                          'description' => '实例类型。取值：

- EnsInstance：单独购买实例。
- EnsService：边缘服务实例。
- BuildMachine：镜像构建机。
- EnsPostPaidInstance：单独购买后付费。',
                          'type' => 'string',
                          'example' => 'EnsService',
                        ),
                        'HostName' => 
                        array (
                          'description' => '实例主机名称。

- 点号（.）和短横线（-）不能作为首尾字符，更不能连续使用。
- Windows实例：字符长度为2~15，不支持点号（.），不能全是数字。允许大小写英文字母、数字和短横线（-）。
- 其他类型实例（Linux等）：字符长度为2~64，支持多个点号（.），点之间为一段，每段允许大小写英文字母、数字和短横线（-）。',
                          'type' => 'string',
                          'example' => 'testHostName',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'i-instanc****',
                        ),
                        'InternetMaxBandwidthIn' => 
                        array (
                          'description' => '最大下行带宽，单位：Mbps。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '40',
                        ),
                        'InternetMaxBandwidthOut' => 
                        array (
                          'description' => '最小上行带宽，单位：Mbps。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'EnsRegionId' => 
                        array (
                          'description' => '实例所属地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-telecom',
                        ),
                        'Cpu' => 
                        array (
                          'description' => 'Vcpu核数。',
                          'type' => 'string',
                          'example' => '2',
                        ),
                        'ExpiredTime' => 
                        array (
                          'description' => '过期时间。按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。',
                          'type' => 'string',
                          'example' => '2119-07-13T02:38:57Z',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => 'i-5itef0f28t17bcdw9deu6meub',
                        ),
                        'Disk' => 
                        array (
                          'description' => '磁盘总大小。单位：MiB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '71680',
                        ),
                        'OSName' => 
                        array (
                          'description' => '镜像名称。',
                          'type' => 'string',
                          'example' => 'centos 6.8 x86_64',
                        ),
                        'Memory' => 
                        array (
                          'description' => '内存大小，单位：MB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2048',
                        ),
                        'ImageId' => 
                        array (
                          'description' => '镜像ID。',
                          'type' => 'string',
                          'example' => 'm-****',
                        ),
                        'DataDisk' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DataDisk' => 
                            array (
                              'description' => '数据盘返回信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'Schema of Response',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'device_type' => 
                                  array (
                                    'description' => 'Category的扩展字段。取值：

- **file**：本地盘。
- **pangu**：高效云盘。
- **local_hdd**：本地HDD。',
                                    'type' => 'string',
                                    'example' => 'pangu',
                                  ),
                                  'disk_type' => 
                                  array (
                                    'description' => '云盘或本地盘类型。取值：

**system**：系统盘。
**data**：数据盘。',
                                    'type' => 'string',
                                    'example' => 'system',
                                  ),
                                  'Size' => 
                                  array (
                                    'description' => '磁盘大小，单位：MiB。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '51200',
                                  ),
                                  'DiskName' => 
                                  array (
                                    'description' => '磁盘名称。',
                                    'type' => 'string',
                                    'example' => 'DiskName',
                                  ),
                                  'uuid' => 
                                  array (
                                    'description' => 'UUID。',
                                    'type' => 'string',
                                    'example' => '5431f898-1323-4e64-8ce1-6cad50ed****',
                                  ),
                                  'storage' => 
                                  array (
                                    'description' => '磁盘容量，单位：MiB。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '20480',
                                  ),
                                  'DiskId' => 
                                  array (
                                    'description' => '磁盘ID。',
                                    'type' => 'string',
                                    'example' => 'd-5ip4c2dhmas0vjd5u1r****',
                                  ),
                                  'Category' => 
                                  array (
                                    'description' => '云盘或本地盘种类。取值：

- **file**：本地盘。
- **pangu**：高效云盘。
- **local_hdd**：本地HDD。',
                                    'type' => 'string',
                                    'example' => 'file',
                                  ),
                                  'name' => 
                                  array (
                                    'description' => '磁盘名称。',
                                    'type' => 'string',
                                    'example' => 'name',
                                  ),
                                  'DiskSize' => 
                                  array (
                                    'description' => '磁盘大小。单位：GiB。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '100',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'PublicIpAddresses' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PublicIpAddress' => 
                            array (
                              'description' => '公网返回信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Ip' => 
                                  array (
                                    'description' => 'ip信息。',
                                    'type' => 'string',
                                    'example' => '119.147.xx.xx',
                                  ),
                                  'GateWay' => 
                                  array (
                                    'description' => '网关。',
                                    'type' => 'string',
                                    'example' => '119.147.xx.xx',
                                  ),
                                  'Isp' => 
                                  array (
                                    'description' => '运营商信息。',
                                    'type' => 'string',
                                    'example' => 'unicom',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'PrivateIpAddresses' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PrivateIpAddress' => 
                            array (
                              'description' => '实例私网返回信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Ip' => 
                                  array (
                                    'description' => 'ip信息。',
                                    'type' => 'string',
                                    'example' => '119.147.xx.xx',
                                  ),
                                  'GateWay' => 
                                  array (
                                    'description' => '网关。',
                                    'type' => 'string',
                                    'example' => '119.147.xx.xx',
                                  ),
                                  'Isp' => 
                                  array (
                                    'description' => '运营商信息。',
                                    'type' => 'string',
                                    'example' => 'cmcc',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'SecurityGroupIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SecurityGroupId' => 
                            array (
                              'description' => '安全组ID。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '安全组ID。',
                                'type' => 'string',
                                'example' => 'sg-5kyicq2kfcapxrdds6ta****',
                              ),
                            ),
                          ),
                        ),
                        'InnerIpAddress' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'IpAddress' => 
                            array (
                              'description' => '实例的内网IP地址。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '实例的内网IP地址。',
                                'type' => 'string',
                                'example' => '10.170.xx.xx',
                              ),
                            ),
                          ),
                        ),
                        'PublicIpAddress' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'IpAddress' => 
                            array (
                              'description' => '公网地址。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '公网地址。',
                                'type' => 'string',
                                'example' => '119.147.xx.xx',
                              ),
                            ),
                          ),
                        ),
                        'SystemDisk' => 
                        array (
                          'description' => '磁盘返回信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'device_type' => 
                            array (
                              'description' => 'Category的扩展字段。取值：

- **file**：本地盘。
- **pangu**：高效云盘。
- **local_hdd**：本地HDD。',
                              'type' => 'string',
                              'example' => 'pangu',
                            ),
                            'disk_type' => 
                            array (
                              'description' => '云盘或本地盘类型。取值：

- **system**：系统盘。
- **data**：数据盘。',
                              'type' => 'string',
                              'example' => 'system',
                            ),
                            'Size' => 
                            array (
                              'description' => '磁盘大小，单位：MiB。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '51200',
                            ),
                            'DiskName' => 
                            array (
                              'description' => '磁盘名称。',
                              'type' => 'string',
                              'example' => 'DiskName',
                            ),
                            'uuid' => 
                            array (
                              'description' => 'UUID。',
                              'type' => 'string',
                              'example' => '5431f898-1323-4e64-8ce1-6cad50ed****',
                            ),
                            'storage' => 
                            array (
                              'description' => '磁盘容量，单位：MiB。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '20480',
                            ),
                            'DiskId' => 
                            array (
                              'description' => '磁盘ID。',
                              'type' => 'string',
                              'example' => 'd-5ip4c2dhmas0rn7rt0p9****',
                            ),
                            'Category' => 
                            array (
                              'description' => '云盘或本地盘种类。取值：

- **file**：本地盘。
- **pangu**：高效云盘。
- **local_hdd**：本地HDD。',
                              'type' => 'string',
                              'example' => 'file',
                            ),
                            'name' => 
                            array (
                              'description' => '磁盘名称。',
                              'type' => 'string',
                              'example' => 'DiskName',
                            ),
                          ),
                        ),
                        'NetworkAttributes' => 
                        array (
                          'description' => '网络返回信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'NetworkId' => 
                            array (
                              'description' => '网络ID。',
                              'type' => 'string',
                              'example' => 'n-2zeuphj08tt7q3brd****',
                            ),
                            'VSwitchId' => 
                            array (
                              'description' => '交换机ID。',
                              'type' => 'string',
                              'example' => 'vsw-2zeh0r1pabwtg6wcs****',
                            ),
                            'PrivateIpAddress' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'IpAddress' => 
                                array (
                                  'description' => '实例私网返回信息。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '实例私网IP地址，如果指定了内网地址，则数量只能是1。该IP地址必须为交换机（VSwitchId）网段的空闲地址。',
                                    'type' => 'string',
                                    'example' => '172.17.**.**',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tags' => 
                            array (
                              'description' => '实例的标签集合。
><notice>此接口暂时不支持标签信息返回，可结合“标签”目录下的API进行组合使用</notice>',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签信息。
><notice>此接口暂时不支持标签信息返回，可结合“标签”目录下的API进行组合使用</notice>',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'TagValue' => 
                                  array (
                                    'description' => '标签值',
                                    'type' => 'string',
                                    'example' => 'value1',
                                  ),
                                  'TagKey' => 
                                  array (
                                    'description' => '实例的标签键。',
                                    'type' => 'string',
                                    'example' => 'key1',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'AutoReleaseTime' => 
                        array (
                          'title' => '自动释放时间。',
                          'description' => '自动释放时间。',
                          'type' => 'string',
                          'example' => '2023-06-28T14:38:52Z',
                        ),
                        'SpotStrategy' => 
                        array (
                          'title' => '抢占式实例策略。',
                          'description' => '抢占式实例策略。',
                          'type' => 'string',
                          'example' => 'NoSpot',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter domainName that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"PageSize\\": 60,\\n  \\"PageNumber\\": 1,\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"TotalCount\\": 2,\\n  \\"Instances\\": {\\n    \\"Instance\\": [\\n      {\\n        \\"CreationTime\\": \\"2019-07-26T06:40:43Z\\",\\n        \\"Status\\": \\"Running\\",\\n        \\"SpecName\\": \\"ens.sn1.stiny\\",\\n        \\"InstanceTypeFamily\\": \\"x86_vm\\",\\n        \\"InstanceResourceType\\": \\"EnsService\\",\\n        \\"HostName\\": \\"testHostName\\",\\n        \\"InstanceId\\": \\"i-instanc****\\",\\n        \\"InternetMaxBandwidthIn\\": 40,\\n        \\"InternetMaxBandwidthOut\\": 100,\\n        \\"EnsRegionId\\": \\"cn-hangzhou-telecom\\",\\n        \\"Cpu\\": \\"2\\",\\n        \\"ExpiredTime\\": \\"2119-07-13T02:38:57Z\\",\\n        \\"InstanceName\\": \\"i-5itef0f28t17bcdw9deu6meub\\",\\n        \\"Disk\\": 71680,\\n        \\"OSName\\": \\"centos 6.8 x86_64\\",\\n        \\"Memory\\": 2048,\\n        \\"ImageId\\": \\"m-****\\",\\n        \\"DataDisk\\": {\\n          \\"DataDisk\\": [\\n            {\\n              \\"device_type\\": \\"pangu\\",\\n              \\"disk_type\\": \\"system\\",\\n              \\"Size\\": 51200,\\n              \\"DiskName\\": \\"DiskName\\",\\n              \\"uuid\\": \\"5431f898-1323-4e64-8ce1-6cad50ed****\\",\\n              \\"storage\\": 20480,\\n              \\"DiskId\\": \\"d-5ip4c2dhmas0vjd5u1r****\\",\\n              \\"Category\\": \\"file\\",\\n              \\"name\\": \\"name\\",\\n              \\"DiskSize\\": 100\\n            }\\n          ]\\n        },\\n        \\"PublicIpAddresses\\": {\\n          \\"PublicIpAddress\\": [\\n            {\\n              \\"Ip\\": \\"119.147.xx.xx\\",\\n              \\"GateWay\\": \\"119.147.xx.xx\\",\\n              \\"Isp\\": \\"unicom\\"\\n            }\\n          ]\\n        },\\n        \\"PrivateIpAddresses\\": {\\n          \\"PrivateIpAddress\\": [\\n            {\\n              \\"Ip\\": \\"119.147.xx.xx\\",\\n              \\"GateWay\\": \\"119.147.xx.xx\\",\\n              \\"Isp\\": \\"cmcc\\"\\n            }\\n          ]\\n        },\\n        \\"SecurityGroupIds\\": {\\n          \\"SecurityGroupId\\": [\\n            \\"sg-5kyicq2kfcapxrdds6ta****\\"\\n          ]\\n        },\\n        \\"InnerIpAddress\\": {\\n          \\"IpAddress\\": [\\n            \\"10.170.xx.xx\\"\\n          ]\\n        },\\n        \\"PublicIpAddress\\": {\\n          \\"IpAddress\\": [\\n            \\"119.147.xx.xx\\"\\n          ]\\n        },\\n        \\"SystemDisk\\": {\\n          \\"device_type\\": \\"pangu\\",\\n          \\"disk_type\\": \\"system\\",\\n          \\"Size\\": 51200,\\n          \\"DiskName\\": \\"DiskName\\",\\n          \\"uuid\\": \\"5431f898-1323-4e64-8ce1-6cad50ed****\\",\\n          \\"storage\\": 20480,\\n          \\"DiskId\\": \\"d-5ip4c2dhmas0rn7rt0p9****\\",\\n          \\"Category\\": \\"file\\",\\n          \\"name\\": \\"DiskName\\"\\n        },\\n        \\"NetworkAttributes\\": {\\n          \\"NetworkId\\": \\"n-2zeuphj08tt7q3brd****\\",\\n          \\"VSwitchId\\": \\"vsw-2zeh0r1pabwtg6wcs****\\",\\n          \\"PrivateIpAddress\\": {\\n            \\"IpAddress\\": [\\n              \\"172.17.**.**\\"\\n            ]\\n          }\\n        },\\n        \\"Tags\\": {\\n          \\"Tags\\": [\\n            {\\n              \\"TagValue\\": \\"value1\\",\\n              \\"TagKey\\": \\"key1\\"\\n            }\\n          ]\\n        },\\n        \\"AutoReleaseTime\\": \\"2023-06-28T14:38:52Z\\",\\n        \\"SpotStrategy\\": \\"NoSpot\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeInstancesResponse>\\n    <Code>0</Code>\\n    <PageSize>60</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <TotalCount>2</TotalCount>\\n    <Instances>\\n        <CreationTime>2019-07-26T06:40:43Z</CreationTime>\\n        <Status>Running</Status>\\n        <SpecName>ens.sn1.stiny</SpecName>\\n        <InstanceTypeFamily>x86_vm</InstanceTypeFamily>\\n        <InstanceResourceType>EnsService</InstanceResourceType>\\n        <HostName>testHostName</HostName>\\n        <InstanceId>i-instanc****</InstanceId>\\n        <InternetMaxBandwidthIn>40</InternetMaxBandwidthIn>\\n        <InternetMaxBandwidthOut>100</InternetMaxBandwidthOut>\\n        <EnsRegionId>cn-hangzhou-telecom</EnsRegionId>\\n        <Cpu>2</Cpu>\\n        <ExpiredTime>2119-07-13T02:38:57Z</ExpiredTime>\\n        <InstanceName>i-5itef0f28t17bcdw9deu6meub</InstanceName>\\n        <Disk>71680</Disk>\\n        <OSName>centos 6.8 x86_64</OSName>\\n        <Memory>2048</Memory>\\n        <ImageId>m-****</ImageId>\\n        <DataDisk>\\n            <device_type>pangu</device_type>\\n            <disk_type>system</disk_type>\\n            <Size>51200</Size>\\n            <DiskName>DiskName</DiskName>\\n            <uuid>d-5itef1wtxj961mbff8xe9****</uuid>\\n            <storage>20480</storage>\\n            <DiskId>d-5ip4c2dhmas0vjd5u1r****</DiskId>\\n            <Category>file</Category>\\n            <name>name</name>\\n        </DataDisk>\\n        <PublicIpAddresses>\\n            <Ip>119.147.xx.xx</Ip>\\n            <GateWay>119.147.xx.xx</GateWay>\\n            <Isp>unicom</Isp>\\n        </PublicIpAddresses>\\n        <PrivateIpAddresses>\\n            <Ip>119.147.xx.xx</Ip>\\n            <GateWay>119.147.xx.xx</GateWay>\\n            <Isp>cmcc</Isp>\\n        </PrivateIpAddresses>\\n        <SecurityGroupIds>sg-5kyicq2kfcapxrdds6ta****</SecurityGroupIds>\\n        <InnerIpAddress>10.170.xx.xx</InnerIpAddress>\\n        <PublicIpAddress>119.147.xx.xx</PublicIpAddress>\\n        <SystemDisk>\\n            <device_type>pangu</device_type>\\n            <disk_type>system</disk_type>\\n            <Size>51200</Size>\\n            <DiskName>DiskName</DiskName>\\n            <uuid>d-5ip4c2dhmas0rn7rt0p96****</uuid>\\n            <storage>20480</storage>\\n            <DiskId>d-5ip4c2dhmas0rn7rt0p9****</DiskId>\\n            <Category>file</Category>\\n            <name>DiskName</name>\\n        </SystemDisk>\\n        <NetworkAttributes>\\n            <NetworkId>n-2zeuphj08tt7q3brd****</NetworkId>\\n            <VSwitchId>vsw-2zeh0r1pabwtg6wcs****</VSwitchId>\\n            <PrivateIpAddress>172.17.**.**</PrivateIpAddress>\\n        </NetworkAttributes>\\n    </Instances>\\n</DescribeInstancesResponse>","errorExample":""}]',
      'title' => '查询实例信息',
      'description' => '- API调用频率：800次/秒。
- 单用户调用频率：100次/秒。
- 请求参数的作用类似于一个过滤器，过滤器为逻辑与（AND）关系。如果某一参数为空，则过滤器不起作用。但是参数InstanceIds如果是一个空JSON数组，则视为该过滤器有效，且返回空。',
    ),
    'DescribeAvailableResourceInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8629F679-B51D-4194-A1CC-5D8F504C362B',
              ),
              'Images' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Image' => 
                  array (
                    'description' => '镜像信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ImageSize' => 
                        array (
                          'description' => '镜像大小，单位：GB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'ImageName' => 
                        array (
                          'description' => '镜像名称。',
                          'type' => 'string',
                          'example' => 'centos_6_08_64_20G_a****',
                        ),
                        'ImageId' => 
                        array (
                          'description' => '镜像ID。',
                          'type' => 'string',
                          'example' => 'centos_6_08_64_20G_a****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'SupportResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SupportResource' => 
                  array (
                    'description' => '可购买的资源规格信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DataDiskMaxSize' => 
                        array (
                          'description' => '数据盘最大值，单位：GB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '200',
                        ),
                        'BandwidthTypes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'BandwidthType' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '计费方式。

- **BandwidthByDay**：日峰值带宽。

- **95BandwidthByMonth**：月95峰值带宽。',
                                'type' => 'string',
                                'example' => '95BandwidthByMonth',
                              ),
                            ),
                          ),
                        ),
                        'SystemDiskMinSize' => 
                        array (
                          'description' => '系统盘最小值，单位：GB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'EnsRegionIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EnsRegionId' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '节点列表。',
                                'type' => 'string',
                                'example' => 'cn-chengdu-telecom-4',
                              ),
                            ),
                          ),
                        ),
                        'EnsRegionIdsExtends' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EnsRegionId' => 
                            array (
                              'description' => '节点补充信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'EnsRegionId' => 
                                  array (
                                    'description' => '节点ID。',
                                    'type' => 'string',
                                    'example' => 'cn-chengdu-telecom-4',
                                  ),
                                  'EnName' => 
                                  array (
                                    'description' => '英文名称，默认为空。',
                                    'type' => 'string',
                                    'example' => 'EnName',
                                  ),
                                  'Area' => 
                                  array (
                                    'description' => '地域。',
                                    'type' => 'string',
                                    'example' => 'EastChina',
                                  ),
                                  'Name' => 
                                  array (
                                    'description' => '节点名称。',
                                    'type' => 'string',
                                    'example' => '台州电信联通移动',
                                  ),
                                  'Province' => 
                                  array (
                                    'description' => '省份。',
                                    'type' => 'string',
                                    'example' => '浙江省',
                                  ),
                                  'Isp' => 
                                  array (
                                    'description' => '运营商信息。',
                                    'type' => 'string',
                                    'example' => 'unicom',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'InstanceSpeces' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'InstanceSpec' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '实例规格。',
                                'type' => 'string',
                                'example' => 'ens.se1.tiny',
                              ),
                            ),
                          ),
                        ),
                        'SystemDiskMaxSize' => 
                        array (
                          'description' => '系统盘最大值，单位：GiB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'DataDiskMinSize' => 
                        array (
                          'description' => '数据盘最小值，单位：GiB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'Isp' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Isp' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '运营商信息。',
                                'type' => 'string',
                                'example' => 'unicom',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotExists',
            'errorMessage' => 'The user have no instances.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8629F679-B51D-4194-A1CC-5D8F504C362B\\",\\n  \\"Images\\": {\\n    \\"Image\\": [\\n      {\\n        \\"ImageSize\\": 20,\\n        \\"ImageName\\": \\"centos_6_08_64_20G_a****\\",\\n        \\"ImageId\\": \\"centos_6_08_64_20G_a****\\"\\n      }\\n    ]\\n  },\\n  \\"SupportResources\\": {\\n    \\"SupportResource\\": [\\n      {\\n        \\"DataDiskMaxSize\\": 200,\\n        \\"BandwidthTypes\\": {\\n          \\"BandwidthType\\": [\\n            \\"95BandwidthByMonth\\"\\n          ]\\n        },\\n        \\"SystemDiskMinSize\\": 20,\\n        \\"EnsRegionIds\\": {\\n          \\"EnsRegionId\\": [\\n            \\"cn-chengdu-telecom-4\\"\\n          ]\\n        },\\n        \\"EnsRegionIdsExtends\\": {\\n          \\"EnsRegionId\\": [\\n            {\\n              \\"EnsRegionId\\": \\"cn-chengdu-telecom-4\\",\\n              \\"EnName\\": \\"EnName\\",\\n              \\"Area\\": \\"EastChina\\",\\n              \\"Name\\": \\"台州电信联通移动\\",\\n              \\"Province\\": \\"浙江省\\",\\n              \\"Isp\\": \\"unicom\\"\\n            }\\n          ]\\n        },\\n        \\"InstanceSpeces\\": {\\n          \\"InstanceSpec\\": [\\n            \\"ens.se1.tiny\\"\\n          ]\\n        },\\n        \\"SystemDiskMaxSize\\": 100,\\n        \\"DataDiskMinSize\\": 100,\\n        \\"Isp\\": {\\n          \\"Isp\\": [\\n            \\"unicom\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeAvailableResourceInfoResponse>\\n<RequestId>A331CA96-3948-4BD2-B067-F6174F5C17EA</RequestId>\\n<SupportResources>\\n    <SupportResource>\\n        <DataDiskMinSize>20</DataDiskMinSize>\\n        <SystemDiskMinSize>30</SystemDiskMinSize>\\n        <InstanceSpeces>\\n            <InstanceSpec>ens.sn1.large</InstanceSpec>\\n            <InstanceSpec>ens.sn1.small</InstanceSpec>\\n            <InstanceSpec>ens.se1.tiny</InstanceSpec>\\n        </InstanceSpeces>\\n        <BandwidthTypes>\\n            <BandwidthType>95BandwidthByMonth</BandwidthType>\\n        </BandwidthTypes>\\n        <SystemDiskMaxSize>200</SystemDiskMaxSize>\\n        <DataDiskMaxSize>300</DataDiskMaxSize>\\n        <EnsRegionIdsExtends>\\n            <EnsRegionId>\\n                <Area>SouthWestChina</Area>\\n                <EnName/>\\n                <EnsRegionId>cn-chengdu-telecom-4</EnsRegionId>\\n                <Province>四川省</Province>\\n                <Name>成都电信POC</Name>\\n            </EnsRegionId>\\n            <EnsRegionId>\\n                <Area>EastChina</Area>\\n                <EnName/>\\n                <EnsRegionId>cn-taizhou-telecom_unicom_cmcc</EnsRegionId>\\n                <Province>浙江省</Province>\\n                <Name>台州电信联通移动</Name>\\n            </EnsRegionId>\\n        </EnsRegionIdsExtends>\\n        <EnsRegionIds>\\n            <EnsRegionId>cn-chengdu-telecom-4</EnsRegionId>\\n            <EnsRegionId>cn-suzhou-cmcc</EnsRegionId>\\n            <EnsRegionId>cn-taizhou-telecom_unicom_cmcc</EnsRegionId>\\n        </EnsRegionIds>\\n    </SupportResource>\\n</SupportResources>\\n<Images>\\n    <Image>\\n        <ImageName>centos_6_08_64_20G_alibase****</ImageName>\\n        <ImageSize>20</ImageSize>\\n        <ImageId>centos_6_08_64_20G_alibase****</ImageId>\\n    </Image>\\n</Images>\\n</DescribeAvailableResourceInfoResponse>\\n","errorExample":""}]',
      'title' => '查询可购买的实例规格信息',
      'summary' => '调用DescribeAvailableResourceInfo在创建实例时查询可购买资源的规格。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEnsNetSaleDistrict' => 
    array (
      'summary' => '调用DescribeEnsNetSaleDistrict查询支持的地域运营商及数量。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetLevelCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络层级。取值：

- **Big**：大区。

- **Middle**：省份。

- **Small**：城市。',
            'type' => 'string',
            'required' => true,
            'example' => 'Big',
          ),
        ),
        1 => 
        array (
          'name' => 'NetDistrictCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域代码。

- 如果该参数为空，则只查询NetLevelCode（网络层级）下的节点。

- 如果该参数不为空，则只查询NetDistrictCode（地域代码）下的子节点。',
            'type' => 'string',
            'required' => false,
            'example' => '100105',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务码，成功返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'EnsNetDistricts' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EnsNetDistrict' => 
                  array (
                    'description' => '地域运营商信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EnsRegionIdCount' => 
                        array (
                          'description' => '运营商信息。',
                          'type' => 'string',
                          'example' => '{                         "count":2,                         "name":"电信",                         "code":"telecom",                         "country":"cn"                     }',
                        ),
                        'InstanceCount' => 
                        array (
                          'description' => '实例信息。',
                          'type' => 'string',
                          'example' => '{                         "count":2,                         "code":"multiCarrier"                     }',
                        ),
                        'NetDistrictCode' => 
                        array (
                          'description' => '地域代码。',
                          'type' => 'string',
                          'example' => '100101',
                        ),
                        'NetDistrictEnName' => 
                        array (
                          'description' => '地域英文名。',
                          'type' => 'string',
                          'example' => 'northEast',
                        ),
                        'NetDistrictFatherCode' => 
                        array (
                          'description' => '地域上级代码。',
                          'type' => 'string',
                          'example' => '100000',
                        ),
                        'NetDistrictLevel' => 
                        array (
                          'description' => '地域级别。取值：

- **Big**：大区。

- **Middle**：省份。

- **Small**：城市。',
                          'type' => 'string',
                          'example' => 'Big',
                        ),
                        'NetDistrictName' => 
                        array (
                          'description' => '地域中文名称。',
                          'type' => 'string',
                          'example' => '东北',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1707B55C-A12F-43EF-BC66-14FFDB9253C3',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter domainName that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"EnsNetDistricts\\": {\\n    \\"EnsNetDistrict\\": [\\n      {\\n        \\"EnsRegionIdCount\\": \\"{                         \\\\\\"count\\\\\\":2,                         \\\\\\"name\\\\\\":\\\\\\"电信\\\\\\",                         \\\\\\"code\\\\\\":\\\\\\"telecom\\\\\\",                         \\\\\\"country\\\\\\":\\\\\\"cn\\\\\\"                     }\\",\\n        \\"InstanceCount\\": \\"{                         \\\\\\"count\\\\\\":2,                         \\\\\\"code\\\\\\":\\\\\\"multiCarrier\\\\\\"                     }\\",\\n        \\"NetDistrictCode\\": \\"100101\\",\\n        \\"NetDistrictEnName\\": \\"northEast\\",\\n        \\"NetDistrictFatherCode\\": \\"100000\\",\\n        \\"NetDistrictLevel\\": \\"Big\\",\\n        \\"NetDistrictName\\": \\"东北\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"1707B55C-A12F-43EF-BC66-14FFDB9253C3\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeEnsNetDistrictResponse>\\n<EnsNetDistricts>\\n    <EnsNetDistrict>\\n        <InstanceCount>\\n            <count>1</count>\\n            <code>cmcc</code>\\n        </InstanceCount>\\n        <InstanceCount>\\n            <count>3</count>\\n            <code>telecom</code>\\n        </InstanceCount>\\n        <InstanceCount>\\n            <count>2</count>\\n            <code>unicom</code>\\n        </InstanceCount>\\n        <InstanceCount>\\n            <count>2</count>\\n            <code>multiCarrier</code>\\n        </InstanceCount>\\n        <NetDistrictCode>100101</NetDistrictCode>\\n        <NetDistrictFatherCode>100000</NetDistrictFatherCode>\\n        <NetDistrictLevel>Big</NetDistrictLevel>\\n        <NetDistrictEnName>northEast</NetDistrictEnName>\\n        <EnsRegionIdCount>\\n            <count>2</count>\\n            <name>电信</name>\\n            <code>telecom</code>\\n            <country>cn</country>\\n        </EnsRegionIdCount>\\n        <EnsRegionIdCount>\\n            <count>3</count>\\n            <name>联通</name>\\n            <code>unicom</code>\\n            <country>cn</country>\\n        </EnsRegionIdCount>\\n        <EnsRegionIdCount>\\n            <count>1</count>\\n            <name>移动</name>\\n            <code>cmcc</code>\\n            <country>cn</country>\\n        </EnsRegionIdCount>\\n        <NetDistrictName>东北</NetDistrictName>\\n    </EnsNetDistrict>\\n    <EnsNetDistrict>\\n        <InstanceCount>\\n            <count>1</count>\\n            <code>cmcc</code>\\n        </InstanceCount>\\n        <InstanceCount>\\n            <count>1</count>\\n            <code>telecom</code>\\n        </InstanceCount>\\n        <InstanceCount>\\n            <count>2</count>\\n            <code>unicom</code>\\n        </InstanceCount>\\n        <NetDistrictCode>100107</NetDistrictCode>\\n        <NetDistrictFatherCode>100000</NetDistrictFatherCode>\\n        <NetDistrictLevel>Big</NetDistrictLevel>\\n        <NetDistrictEnName>northWest</NetDistrictEnName>\\n        <EnsRegionIdCount>\\n            <count>2</count>\\n            <name>电信</name>\\n            <code>telecom</code>\\n            <country>cn</country>\\n        </EnsRegionIdCount>\\n        <EnsRegionIdCount>\\n            <count>2</count>\\n            <name>联通</name>\\n            <code>unicom</code>\\n            <country>cn</country>\\n        </EnsRegionIdCount>\\n        <EnsRegionIdCount>\\n            <count>1</count>\\n            <name>移动</name>\\n            <code>cmcc</code>\\n            <country>cn</country>\\n        </EnsRegionIdCount>\\n        <NetDistrictName>西北</NetDistrictName>\\n    </EnsNetDistrict>\\n</EnsNetDistricts>\\n<RequestId>1707B55C-A12F-43EF-BC66-14FFDB9253C3</RequestId>\\n<Code>0</Code>\\n</DescribeEnsNetDistrictResponse>\\n","errorExample":""}]',
      'title' => '查询支持的地域运营商及数量',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEnsNetLevel' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务码，成功返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'EnsNetLevels' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EnsNetLevel' => 
                  array (
                    'description' => '网络层级信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EnsNetLevelCode' => 
                        array (
                          'description' => '网络层级。取值：

- Big：大区。

- Middle：省份。

- Small：城市。',
                          'type' => 'string',
                          'example' => 'Big',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '86A6D421-A0C7-4C01-8648-47377CA6A2CE',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter domainName that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"EnsNetLevels\\": {\\n    \\"EnsNetLevel\\": [\\n      {\\n        \\"EnsNetLevelCode\\": \\"Big\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"86A6D421-A0C7-4C01-8648-47377CA6A2CE\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeEnsNetLevelResponse>\\n<RequestId>86A6D421-A0C7-4C01-8648-47377CA6A2CE</RequestId>\\n<EnsNetLevels>\\n    <EnsNetLevel>\\n        <EnsNetLevelCode>Big</EnsNetLevelCode>\\n    </EnsNetLevel>\\n    <EnsNetLevel>\\n        <EnsNetLevelCode>Small</EnsNetLevelCode>\\n    </EnsNetLevel>\\n    <EnsNetLevel>\\n        <EnsNetLevelCode>Middle</EnsNetLevelCode>\\n    </EnsNetLevel>\\n</EnsNetLevels>\\n<Code>0</Code>\\n</DescribeEnsNetLevelResponse>\\n","errorExample":""}]',
      'title' => '查询可支持的网络层级',
      'summary' => '调用DescribeEnsNetLevel查询可支持的网络层级。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeBandWithdChargeType' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'BandWithTypeInfo' => 
              array (
                'description' => '计费方式信息。',
                'type' => 'string',
                'example' => '{ "BandWidthName": "月95峰值带宽", 			"BandWidthType": "95BandwidthByMonth" 		}',
              ),
              'ChargeContractType' => 
              array (
                'description' => '计费方式。
- ChargeByUnified：统一计费。

- ChargeByGrade：分档计费。

',
                'type' => 'string',
                'example' => 'ChargeByGrade',
              ),
              'ChargeCycleInfo' => 
              array (
                'description' => '计费周期（目前暂不返回计费周期）。',
                'type' => 'string',
                'example' => '{null}',
              ),
              'Code' => 
              array (
                'description' => '业务码，成功返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '791049FD-49CE-4667-BD6C-F23094DEDA7A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter domainName that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"BandWithTypeInfo\\": \\"{ \\\\\\"BandWidthName\\\\\\": \\\\\\"月95峰值带宽\\\\\\", \\\\t\\\\t\\\\t\\\\\\"BandWidthType\\\\\\": \\\\\\"95BandwidthByMonth\\\\\\" \\\\t\\\\t}\\",\\n  \\"ChargeContractType\\": \\"ChargeByGrade\\",\\n  \\"ChargeCycleInfo\\": \\"{null}\\",\\n  \\"Code\\": 0,\\n  \\"RequestId\\": \\"791049FD-49CE-4667-BD6C-F23094DEDA7A\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeBandWithdChargeTypeResponse>\\n    <BandWithTypeInfo>{ \\"BandWidthName\\": \\"月95峰值带宽\\", \\t\\t\\t\\"BandWidthType\\": \\"95BandwidthByMonth\\" \\t\\t}</BandWithTypeInfo>\\n    <ChargeContractType>ChargeByGrade</ChargeContractType>\\n    <ChargeCycleInfo>{null}</ChargeCycleInfo>\\n    <Code>0</Code>\\n    <RequestId>791049FD-49CE-4667-BD6C-F23094DEDA7A</RequestId>\\n</DescribeBandWithdChargeTypeResponse>","errorExample":""}]',
      'title' => '查询可用的带宽计费方式',
      'summary' => '调用DescribeBandWithdChargeType查询可用的带宽计费方式。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeInstanceSpec' => 
    array (
      'summary' => '调用DescribeInstanceSpec查询支持购买的实例规格。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'BandwidthLimit' => 
              array (
                'description' => '单实例限制带宽，单位：Mbps。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'Code' => 
              array (
                'description' => '业务码，成功返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'DataDiskMaxSize' => 
              array (
                'description' => '数据盘最大值，单位：GB。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20015',
              ),
              'DataDiskMinSize' => 
              array (
                'description' => '数据盘最小值，单位：GB。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'InstanceSpecs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceSpec' => 
                  array (
                    'description' => '实例规格信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Core' => 
                        array (
                          'description' => 'CPU核数。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'DisplayName' => 
                        array (
                          'description' => '实例规格显示名称。',
                          'type' => 'string',
                          'example' => '计算型1C2G',
                        ),
                        'InstanceType' => 
                        array (
                          'description' => '实例规格。',
                          'type' => 'string',
                          'example' => 'ens.sn1.stiny',
                        ),
                        'Memory' => 
                        array (
                          'description' => '内存，单位：MB。',
                          'type' => 'string',
                          'example' => '2048',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1ECC937A-AE0E-4626-BE51-DED1D6D1C888',
              ),
              'SystemDiskMaxSize' => 
              array (
                'description' => '系统盘最大值，单位：GiB。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '80',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter domainName that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"BandwidthLimit\\": 0,\\n  \\"Code\\": 0,\\n  \\"DataDiskMaxSize\\": 20015,\\n  \\"DataDiskMinSize\\": 0,\\n  \\"InstanceSpecs\\": {\\n    \\"InstanceSpec\\": [\\n      {\\n        \\"Core\\": \\"1\\",\\n        \\"DisplayName\\": \\"计算型1C2G\\",\\n        \\"InstanceType\\": \\"ens.sn1.stiny\\",\\n        \\"Memory\\": \\"2048\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"1ECC937A-AE0E-4626-BE51-DED1D6D1C888\\",\\n  \\"SystemDiskMaxSize\\": 80\\n}","errorExample":""},{"type":"xml","example":"<DescribeInstanceSpecResponse>\\n<DataDiskMinSize>0</DataDiskMinSize>\\n<RequestId>1ECC937A-AE0E-4626-BE51-DED1D6D1C888</RequestId>\\n<SystemDiskMaxSize>80</SystemDiskMaxSize>\\n<DataDiskMaxSize>20015</DataDiskMaxSize>\\n<Code>0</Code>\\n<InstanceSpecs>\\n    <InstanceSpec>\\n        <Memory>2048</Memory>\\n        <DisplayName>计算型1C2G</DisplayName>\\n        <InstanceType>ens.sn1.stiny</InstanceType>\\n        <Core>1</Core>\\n    </InstanceSpec>\\n    <InstanceSpec>\\n        <Memory>4096</Memory>\\n        <DisplayName>计算型2C4G</DisplayName>\\n        <InstanceType>ens.sn1.tiny</InstanceType>\\n        <Core>2</Core>\\n    </InstanceSpec>\\n</InstanceSpecs>\\n<BandwidthLimit>100</BandwidthLimit>\\n</DescribeInstanceSpecResponse>\\n","errorExample":""}]',
      'title' => '查询支持购买的实例规格',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEnsRegionIdIpv6Info' => 
    array (
      'summary' => '调用DescribeEnsRegionIdIpv6Info查询节点是否支持IPv6。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点ID，仅支持单个查询。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-chengdu-****-4',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3703C4AC-9396-458C-8F25-1D701334D309',
              ),
              'SupportIpv6Info' => 
              array (
                'description' => '是否支持IPv6信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'EnsRegionId' => 
                  array (
                    'description' => '节点ID。',
                    'type' => 'string',
                    'example' => 'cn-chengdu-****-4',
                  ),
                  'SupportIpv6' => 
                  array (
                    'description' => '是否支持IPv6，取值：

- true：支持
- false：不支持',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The input parameter is Invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'StockNotEnough',
            'errorMessage' => 'The specified configuration is unavailable. Reconfigure and try again.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          6 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3703C4AC-9396-458C-8F25-1D701334D309\\",\\n  \\"SupportIpv6Info\\": {\\n    \\"EnsRegionId\\": \\"cn-chengdu-****-4\\",\\n    \\"SupportIpv6\\": true\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeEnsRegionIdIpv6InfoResponse>\\n    <RequestId>3703C4AC-9396-458C-8F25-1D701334D309</RequestId>\\n    <SupportIpv6Info>\\n        <EnsRegionId>cn-chengdu-****-4</EnsRegionId>\\n        <SupportIpv6>true</SupportIpv6>\\n    </SupportIpv6Info>\\n</DescribeEnsRegionIdIpv6InfoResponse>","errorExample":""}]',
      'title' => '查询节点是否支持IPv6',
    ),
    'DescribeRegionIsps' => 
    array (
      'summary' => '调用DescribeRegionIsps查看ENS节点运营商信息。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点ID，仅支持单个查询。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-dalian-unicom',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC90CC7E-23B6-5A90-9097-A17CE4A161C4',
              ),
              'Isps' => 
              array (
                'description' => '运营商列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '运营商列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Code' => 
                    array (
                      'description' => '运营商编码。',
                      'type' => 'string',
                      'example' => 'cmcc',
                    ),
                    'Name' => 
                    array (
                      'description' => '运营商名称。',
                      'type' => 'string',
                      'example' => '移动',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"DC90CC7E-23B6-5A90-9097-A17CE4A161C4\\",\\n  \\"Isps\\": [\\n    {\\n      \\"Code\\": \\"cmcc\\",\\n      \\"Name\\": \\"移动\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查看ENS节点运营商信息',
    ),
    'DescribeInstanceAutoRenewAttribute' => 
    array (
      'summary' => '调用DescribeInstanceAutoRenewAttribute查询实例续费信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，多个用分号（;）分隔。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-5ci7l7k1m9m2zmhp4iw3o****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务码，成功返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'InstanceRenewAttributes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceRenewAttribute' => 
                  array (
                    'description' => '实例的续费状态。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AutoRenewal' => 
                        array (
                          'description' => '续费状态。

- **true**：自动续费类型。

- **false**：非自动续费类型。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Duration' => 
                        array (
                          'description' => '自动续费时长，单位：月。',
                          'type' => 'string',
                          'example' => '0',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'i-5ci7l7k1m9m2zmhp4iw3o****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4DD66F05-3116-4BAA-B588-52EB2E7F431D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotExists',
            'errorMessage' => 'The user have no instances.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"InstanceRenewAttributes\\": {\\n    \\"InstanceRenewAttribute\\": [\\n      {\\n        \\"AutoRenewal\\": false,\\n        \\"Duration\\": \\"0\\",\\n        \\"InstanceId\\": \\"i-5ci7l7k1m9m2zmhp4iw3o****\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"4DD66F05-3116-4BAA-B588-52EB2E7F431D\\"\\n}","errorExample":""},{"type":"xml","example":"<InstanceRenewAttributes>\\n    <InstanceRenewAttribute>\\n        <AutoRenewal>false</AutoRenewal>\\n        <InstanceId>i-5ci7l7k1m9m2zmhp4iw3o****</InstanceId>\\n        <Duration>0</Duration>\\n    </InstanceRenewAttribute>\\n</InstanceRenewAttributes>\\n<RequestId>4DD66F05-3116-4BAA-B588-52EB2E7F431D</RequestId>\\n<Code>0</Code>","errorExample":""}]',
      'title' => '查询实例续费信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeInstanceMonitorData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，仅支持单个查询。',
            'type' => 'string',
            'required' => false,
            'example' => 'yourInstance ID',
          ),
        ),
        1 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取数据的起始时间点。

按照ISO8601标准表示，并需要使用UTC时间。格式为yyyy-MM-ddTHH:mm:ssZ。如果秒不是00，则自动取为下一分钟开始时。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-10-29T23:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取数据的结束时间点。

按照ISO8601标准表示，并需要使用UTC时间。格式为yyyy-MM-ddTHH:mm:ssZ。如果秒不是00，则自动取为下一分钟开始时。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-10-30T08:00:00Z',
          ),
        ),
        3 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取监控数据的精度，取值：60（默认值）、300、1200、3600及14400，单位：秒。',
            'type' => 'string',
            'required' => false,
            'example' => '60',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务码，成功返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'MonitorData' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceMonitorData' => 
                  array (
                    'description' => '实例的监控数据InstanceMonitorDataType组成的集合。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CPU' => 
                        array (
                          'description' => '实例vCPU的使用情况，为原始数据，如0.02，则使用率为2%。',
                          'type' => 'string',
                          'example' => '0.02',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'yourInstance ID',
                        ),
                        'Memory' => 
                        array (
                          'description' => '该字段暂不支持返回参数。',
                          'type' => 'string',
                          'example' => '暂不支持',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C8B26B44-0189-443E-9816-D951F59623A9',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"MonitorData\\": {\\n    \\"InstanceMonitorData\\": [\\n      {\\n        \\"CPU\\": \\"0.02\\",\\n        \\"InstanceId\\": \\"yourInstance ID\\",\\n        \\"Memory\\": \\"暂不支持\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"C8B26B44-0189-443E-9816-D951F59623A9\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>C8B26B44-0189-443E-9816-D951F59623A9</RequestId>\\n<MonitorData>\\n    <InstanceMonitorData>\\n        <InstanceId>yourInstance ID</InstanceId>\\n        <Memory>暂不支持</Memory>\\n        <CPU>0.02</CPU>\\n    </InstanceMonitorData>\\n</MonitorData>\\n<Code>0</Code>","errorExample":""}]',
      'title' => '查询实例CPU内存使用量',
      'summary' => '调用DescribeInstanceMonitorData查询实例CPU和内存的使用情况。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeInstanceTypes' => 
    array (
      'summary' => '调用DescribeInstanceTypes查询实例规格列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务码。调用成功返回0，失败返回错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'InstanceTypes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceType' => 
                  array (
                    'description' => '实例规格集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '规格列表信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CpuCoreCount' => 
                        array (
                          'description' => 'vCPU内核数目。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'InstanceTypeId' => 
                        array (
                          'description' => '此参数暂时不用。',
                          'type' => 'string',
                          'example' => '此参数暂时不用。',
                        ),
                        'InstanceTypeName' => 
                        array (
                          'description' => '实例规格名称。',
                          'type' => 'string',
                          'example' => 'ens.xxx.small',
                        ),
                        'MemorySize' => 
                        array (
                          'description' => '内存大小，单位：MB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '8192',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D452D190-BADF-5D09-910D-599B96D42AAA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter domainName that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 0,\\n  \\"InstanceTypes\\": {\\n    \\"InstanceType\\": [\\n      {\\n        \\"CpuCoreCount\\": 2,\\n        \\"InstanceTypeId\\": \\"此参数暂时不用。\\",\\n        \\"InstanceTypeName\\": \\"ens.xxx.small\\",\\n        \\"MemorySize\\": 8192\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"D452D190-BADF-5D09-910D-599B96D42AAA\\"\\n}","type":"json"}]',
      'title' => '查询实例规格族',
    ),
    'DescribeInstanceVncUrl' => 
    array (
      'summary' => '调用DescribeInstanceVncUrl查询一台ENS实例的Web管理终端地址。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例ID。',
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-5bp1hzoinajzkh91h****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求ID。',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'VncUrl' => 
              array (
                'title' => '管理终端Url。',
                'description' => '管理终端Url。',
                'type' => 'string',
                'example' => 'wss%3A%2F%2Fhz01-vncproxy.aliyun.com%2Fwebsockify%2F%3Fs%3DDvh%252FIA%252BYc73gWO48cBx2gBxUDVzaAnSKr74pq30mzqUYgeUMcB%252FbkNixDxdEA996',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specified InstanceId does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'Failed to call API.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidInstanceType.NotSupported',
            'errorMessage' => 'The specified InstanceType is not Supported.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the instance does not support this operation.',
          ),
          4 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"VncUrl\\": \\"wss%3A%2F%2Fhz01-vncproxy.aliyun.com%2Fwebsockify%2F%3Fs%3DDvh%252FIA%252BYc73gWO48cBx2gBxUDVzaAnSKr74pq30mzqUYgeUMcB%252FbkNixDxdEA996\\"\\n}","type":"json"}]',
      'title' => '查询实例VNC地址',
    ),
    'DescribeCreatePrePaidInstanceResult' => 
    array (
      'summary' => '调用DescribeCreatePrePaidInstanceResult查询创建实例结果。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，通过CreateIntance接口创建。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-6ecpqvkicnchxccozrp****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'InstanceCreateResult' => 
              array (
                'description' => '实例创建返回结果列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceCreateStatus' => 
                  array (
                    'description' => '实例创建状态。
- Accepted：已受理。
- Creating：创建中。
- Failed：创建失败。
- Successed：创建成功。',
                    'type' => 'string',
                    'example' => 'Successed',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => 'i-6ecpqvkicnchxccozrpxxxx',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AAE90880-4970-4D81-A534-A6C0F3631F74',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The input parameter is Invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'StockNotEnough',
            'errorMessage' => 'The specified configuration is unavailable. Reconfigure and try again.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          6 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"InstanceCreateResult\\": {\\n    \\"InstanceCreateStatus\\": \\"Successed\\",\\n    \\"InstanceId\\": \\"i-6ecpqvkicnchxccozrpxxxx\\"\\n  },\\n  \\"RequestId\\": \\"AAE90880-4970-4D81-A534-A6C0F3631F74\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeCreatePrePaidInstanceResultResponse>\\n<InstanceCreateResult>\\n    <InstanceId>i-6ecpqvkicnchxccozrpxxxx</InstanceId>\\n    <InstanceCreateStatus>Successed</InstanceCreateStatus>\\n</InstanceCreateResult>\\n<RequestId>AAE90880-4970-4D81-A534-A6C0F3631F74</RequestId>\\n</DescribeCreatePrePaidInstanceResultResponse>\\n","errorExample":""}]',
      'title' => '查询创建实例结果',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDisk' => 
    array (
      'summary' => '调用DeleteDisk删除磁盘。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DiskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '磁盘ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'd-5va95bg6i5f44kgkeuazyfcxm',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回的业务码，正常成功为0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3ABEEB76-1976-55AB-B884-3D65CA6A4743',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'Failed to call API.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 0,\\n  \\"RequestId\\": \\"3ABEEB76-1976-55AB-B884-3D65CA6A4743\\"\\n}","type":"json"}]',
      'title' => '删除磁盘',
      'description' => '释放磁盘时，云盘的状态必须为待挂载。',
    ),
    'ResetDisk' => 
    array (
      'summary' => '调用ResetDisk回滚快照。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DiskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待回滚数据的云盘ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'd-bp199lyny9b3****',
          ),
        ),
        1 => 
        array (
          'name' => 'SnapshotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要恢复到某一云盘阶段的历史快照ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sp-bp199lyny9b3****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0003E8B-B930-4F59-ADC0-0E209A9012A8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C0003E8B-B930-4F59-ADC0-0E209A9012A8\\"\\n}","errorExample":""},{"type":"xml","example":"<ResetDiskResponse>\\n    <RequestId>C0003E8B-B930-4F59-ADC0-0E209A9012A8</RequestId>\\n</ResetDiskResponse>","errorExample":""}]',
      'title' => '回滚快照',
      'description' => '调用该接口时，您需要注意：
- 云盘的状态必须为使用中（In_Use）或空闲（Available）的状态。
- 云盘挂载的实例的状态必须为已停止（Stopped）。您可以调用[StopInstance](~~StopInstance~~)停止实例。
- 指定的参数SnapshotId必须是由DiskId创建的历史快照。
- 通过[DescribeInstances](~~DescribeInstances~~)查询ENS实例信息时，如果返回数据中包含`{"OperationLocks": {"LockReason" : "security"}}`，则禁止一切操作。',
    ),
    'ResizeDisk' => 
    array (
      'summary' => '调用ResizeDisk针对单独购买的后付费云盘实例进行扩容。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DiskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待扩容的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'd-5tzm9wnhzlhjzcbtxo465****',
          ),
        ),
        1 => 
        array (
          'name' => 'NewSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标扩容值，单位：GiB。',
            'type' => 'string',
            'required' => true,
            'example' => '100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '689412F2-8402-181E-8C87-1EF62331DCC4',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'string',
                'example' => '21522202681****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'PARAM_NOT_ENOUGH',
            'errorMessage' => 'Insufficient parameters entered',
          ),
          1 => 
          array (
            'errorCode' => 'INSTANCE_ID_NOT_FOUND',
            'errorMessage' => 'Instance information not found',
          ),
          2 => 
          array (
            'errorCode' => 'ENS_BUY_USER_ILLEGAL',
            'errorMessage' => 'User is illegal',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Insufficient parameters entered',
          ),
          4 => 
          array (
            'errorCode' => 'ENS_BUY_COUNT_LESS',
            'errorMessage' => 'Too many resources purchased',
          ),
          5 => 
          array (
            'errorCode' => 'SIZE_ILLEGAL',
            'errorMessage' => 'The purchased capacity is illegal',
          ),
          6 => 
          array (
            'errorCode' => 'ENS_BUY_STORE_ENOUGH',
            'errorMessage' => 'Insufficient inventory of purchased resources',
          ),
          7 => 
          array (
            'errorCode' => 'OrderFailed',
            'errorMessage' => 'Order failed',
          ),
          8 => 
          array (
            'errorCode' => 'ENS_BUY_DISK_STATUS_ILLEGAL',
            'errorMessage' => 'The disk status is invalid',
          ),
          9 => 
          array (
            'errorCode' => 'SaleControl.VerificationFailed',
            'errorMessage' => 'You did not pass the salecontrol verification.Please contact the product.',
          ),
          10 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"689412F2-8402-181E-8C87-1EF62331DCC4\\",\\n  \\"OrderId\\": \\"21522202681****\\"\\n}","errorExample":""},{"type":"xml","example":"<ResizeDiskResponse>\\n    <RequestId>689412F2-8402-181E-8C87-1EF62331DCC4</RequestId>\\n    <OrderId>21522202681****</OrderId>\\n</ResizeDiskResponse>","errorExample":""}]',
      'title' => '扩容磁盘',
    ),
    'CreateDisk' => 
    array (
      'summary' => '调用CreateDisk创建一块按量付费或包年包月数据盘。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例付费方式，取值 PrePaid:预付费，包年包月 PostPaid:按量付费。目前只支持：PostPaid',
            'description' => '实例付费方式，当前仅支持**PostPaid**（按量付费）。

',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'PostPaid' => '按量付费',
            ),
            'example' => 'PostPaid',
            'enum' => 
            array (
              0 => 'PostPaid',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '节点ID',
            'description' => '节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-chengdu-telecom',
          ),
        ),
        2 => 
        array (
          'name' => 'Category',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '磁盘种类 高效云盘:cloud_efficiency 全闪云盘:cloud_ssd',
            'description' => '磁盘种类。取值：

- 高效云盘：cloud_efficiency
- 全闪云盘：cloud_ssd
',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'cloud_efficiency' => '高效云盘',
              'cloud_ssd' => '全闪云盘',
              'local_hdd' => '本地hdd盘',
              'ssd:local_ssd' => '本地ssd盘',
            ),
            'example' => 'cloud_efficiency',
          ),
        ),
        3 => 
        array (
          'name' => 'Size',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '磁盘大小,单位GB',
            'description' => '磁盘大小，单位：GiB。',
            'type' => 'string',
            'required' => false,
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'SnapshotId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '快照ID。',
            'description' => '创建云盘使用的快照。

**SnapshotId**参数和**Size**参数存在以下限制：

- 如果**SnapshotId**参数对应的快照容量大于设置的**Size**参数值，实际创建的云盘大小为指定快照的大小。

- 如果**SnapshotId**参数对应的快照容量小于设置的**Size**参数值，实际创建的云盘大小为指定的**Size**参数值。',
            'type' => 'string',
            'required' => false,
            'example' => 's-897654321****',
          ),
        ),
        5 => 
        array (
          'name' => 'Encrypted',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云盘是否加密，如果Encrypted=true，KMSKeyId不输入时则采用服务默认密钥。',
            'description' => '是否加密云盘。取值范围：

- **true**：是

- **false**（默认值）：否',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'KMSKeyId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用户云盘加密的KMS ID。',
            'description' => '云盘使用的KMS密钥ID。

>如果**Encrypted**置为**true**，**KMSKeyId**为空时则使用服务默认密钥。',
            'type' => 'string',
            'required' => false,
            'example' => '0e478b7a-4262-4802-b8cb-00d3fxxxxx',
          ),
        ),
        7 => 
        array (
          'name' => 'DiskName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '磁盘名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'yourDiskName',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => '返回结构体',
            'description' => '返回结构体',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => '请求唯一ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7030AB96-57CF-1C68-9FEE-D60E547FD79C',
              ),
              'OrderId' => 
              array (
                'title' => '订单id,多个以逗号分割，可以直接跳转到收银行台 只有预付费返回订单号，后付费不返回',
                'description' => '订单ID，多个ID之间用半角逗号（,）分隔。

> 只有预付费返回订单号，按量付费不返回。',
                'type' => 'string',
                'example' => '21127020370****',
              ),
              'InstanceIds' => 
              array (
                'title' => '实列ID集合',
                'description' => '实例ID集合。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '实例ID列表。',
                  'type' => 'string',
                  'example' => 'd-5rpvziragkacvop665m3h****',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7030AB96-57CF-1C68-9FEE-D60E547FD79C\\",\\n  \\"OrderId\\": \\"21127020370****\\",\\n  \\"InstanceIds\\": [\\n    \\"d-5rpvziragkacvop665m3h****\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CreateDiskResponse>\\n    <RequestId>7030AB96-57CF-1C68-9FEE-D60E547FD79C</RequestId>\\n    <OrderId>21127020370****</OrderId>\\n    <InstanceIds>d-5rpvziragkacvop665m3h****</InstanceIds>\\n</CreateDiskResponse>","errorExample":""}]',
      'title' => '创建数据盘',
    ),
    'DescribeDisks' => 
    array (
      'summary' => '调用DescribeDisks查询一个或多个已创建的磁盘信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS的节点ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-kunming-telecom',
          ),
        ),
        1 => 
        array (
          'name' => 'DiskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云盘ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'd-5soak1gqa507lyfzvz0xo****',
          ),
        ),
        2 => 
        array (
          'name' => 'DiskName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '磁盘名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'DiskName',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询列表的页码。起始值为**1**。

默认值：**1**。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值为**50**行。

默认值：**10**。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '磁盘状态。

- In-use：使用中
- Available：待挂载
- Attaching：挂载中
- Detaching：卸载中
- Creating：创建中
- ReIniting：重置中
- Deleting：释放中
- Deleted：已释放
- Expiring：即将过期

',
            'type' => 'string',
            'required' => false,
            'example' => 'Available',
          ),
        ),
        6 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '磁盘属性

- system：系统盘
- data：数据盘',
            'type' => 'string',
            'required' => false,
            'example' => 'system',
          ),
        ),
        7 => 
        array (
          'name' => 'Category',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '磁盘种类。

- 高效云盘：cloud_efficiency
- 全闪云盘：cloud_ssd
- 本地HDD盘：local_hdd
- 本地盘SSD：local_ssd',
            'type' => 'string',
            'required' => false,
            'example' => 'local_ssd',
          ),
        ),
        8 => 
        array (
          'name' => 'DiskChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '计费类型。

- prepay：预付费
- postpay：按量付费',
            'type' => 'string',
            'required' => false,
            'example' => 'prepay',
          ),
        ),
        9 => 
        array (
          'name' => 'EnsRegionIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点列表。',
            'type' => 'string',
            'required' => false,
            'example' => '["cn-suzhou-telecom","cn-chengdu-telecom"]',
          ),
        ),
        10 => 
        array (
          'name' => 'DiskIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '磁盘ID。',
            'type' => 'string',
            'required' => false,
            'example' => '[\\"d-wz99njena32z90ki****\\"]',
          ),
        ),
        11 => 
        array (
          'name' => 'OrderByParams',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序使用：格式例子{"EnsRegionId":"desc"}。默认按节点ID降序排列。',
            'type' => 'string',
            'required' => false,
            'example' => '{ "DiskNameSort":"desc","EnsRegionIdSort":"asc" }',
          ),
        ),
        12 => 
        array (
          'name' => 'DiskType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '磁盘购买方式。

- ServiceDisk：边缘服务创建磁盘
- ResoureDisk：随实例购买
- PostPayDisk：单独购买',
            'type' => 'string',
            'required' => false,
            'example' => 'PostPayDisk',
          ),
        ),
        13 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '云盘所挂载的实列。',
            'description' => '云盘所挂载的实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-5t77rb0yoz79m28ku60sx****',
          ),
        ),
        14 => 
        array (
          'name' => 'SnapshotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '快照ID。',
            'type' => 'string',
            'required' => false,
            'example' => 's-897654321****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回的业务码，正常成功为0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'Disks' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Disks' => 
                  array (
                    'description' => '磁盘信息例表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '磁盘信息例表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Category' => 
                        array (
                          'description' => '磁盘种类。

- 高效云盘：cloud_efficiency
- 全闪云盘：cloud_ssd
- 本地HDD盘：local_hdd
- 本地盘SSD：local_ssd',
                          'type' => 'string',
                          'example' => 'local_ssd',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '创建时间。时间格式以ISO8601为标准，并使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。',
                          'type' => 'string',
                          'example' => '2021-11-11T14:34:55+08:00',
                        ),
                        'DiskChargeType' => 
                        array (
                          'description' => '云盘或本地盘的计费方式。取值：

- **prepaid**：包年包月。
- **postpaid**：按量付费。',
                          'type' => 'string',
                          'example' => 'prepaid',
                        ),
                        'DiskId' => 
                        array (
                          'description' => '磁盘ID。',
                          'type' => 'string',
                          'example' => 'd-5svum1dx1w4a4spr54lgr****',
                        ),
                        'DiskName' => 
                        array (
                          'description' => '磁盘名称。',
                          'type' => 'string',
                          'example' => 'fvt-ecs-5cf0****',
                        ),
                        'EnsRegionId' => 
                        array (
                          'description' => 'ENS节点ID。',
                          'type' => 'string',
                          'example' => 'cn-guangzhou-10',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'i-5t77rb0yoz79m28ku60sx****',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => '边缘prod环境串流机器-1063',
                        ),
                        'Size' => 
                        array (
                          'description' => '磁盘大小，单位：MiB。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'Status' => 
                        array (
                          'description' => '磁盘状态。
- In-use：使用中
- Available：待挂载
- Attaching：挂载中
- Detaching：卸载中
- Creating：创建中
- ReIniting：重置中',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'Type' => 
                        array (
                          'description' => '云盘或本地盘类型。取值：

- 1：系统盘
- 2：数据盘',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'Portable' => 
                        array (
                          'description' => '云盘或本地盘是否支持卸载。取值：

- true：支持。可以独立存在，且可以在可用区内自由挂载和卸载。
- false：不支持。不可以独立存在，且不可以在可用区内自由挂载和卸载。

以下类型块存储的**Portable**属性都为**false**，生命周期与实例等同：

- 本地HDD盘
- 本地SSD盘
- 包年包月数据盘',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'SnapshotId' => 
                        array (
                          'description' => '快照ID。',
                          'type' => 'string',
                          'example' => 's-bp67acfmxazb4p****',
                        ),
                        'SerialId' => 
                        array (
                          'description' => '序列号。',
                          'type' => 'string',
                          'example' => '123',
                        ),
                        'Encrypted' => 
                        array (
                          'title' => '云盘是否加密',
                          'description' => '是否加密云盘。取值范围：

- **true**：是

- **false**：否',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'EncryptedKeyId' => 
                        array (
                          'description' => '云盘使用的 KMS 密钥 ID。',
                          'type' => 'string',
                          'example' => '05467897a-4262-4802-b8cb-00d3fb40****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '当前查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '50',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
              'TotalCount' => 
              array (
                'description' => '分页查询时分页总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '13',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter domainName that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"Disks\\": {\\n    \\"Disks\\": [\\n      {\\n        \\"Category\\": \\"local_ssd\\",\\n        \\"CreationTime\\": \\"2021-11-11T14:34:55+08:00\\",\\n        \\"DiskChargeType\\": \\"prepaid\\",\\n        \\"DiskId\\": \\"d-5svum1dx1w4a4spr54lgr****\\",\\n        \\"DiskName\\": \\"fvt-ecs-5cf0****\\",\\n        \\"EnsRegionId\\": \\"cn-guangzhou-10\\",\\n        \\"InstanceId\\": \\"i-5t77rb0yoz79m28ku60sx****\\",\\n        \\"InstanceName\\": \\"边缘prod环境串流机器-1063\\",\\n        \\"Size\\": 20,\\n        \\"Status\\": \\"Available\\",\\n        \\"Type\\": \\"1\\",\\n        \\"Portable\\": true,\\n        \\"SnapshotId\\": \\"s-bp67acfmxazb4p****\\",\\n        \\"SerialId\\": \\"123\\",\\n        \\"Encrypted\\": false,\\n        \\"EncryptedKeyId\\": \\"05467897a-4262-4802-b8cb-00d3fb40****\\"\\n      }\\n    ]\\n  },\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 50,\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\",\\n  \\"TotalCount\\": 13\\n}","errorExample":""},{"type":"xml","example":"<DescribeDisksResponse>\\n    <Code>0</Code>\\n    <Disks>\\n        <Category>local_ssd</Category>\\n        <CreationTime>2021-11-11T14:34:55+08:00</CreationTime>\\n        <DiskChargeType>prepaid</DiskChargeType>\\n        <DiskId>d-5svum1dx1w4a4spr54lgr****</DiskId>\\n        <DiskName>fvt-ecs-5cf0****</DiskName>\\n        <EnsRegionId>cn-guangzhou-10</EnsRegionId>\\n        <InstanceId>i-5t77rb0yoz79m28ku60sx****</InstanceId>\\n        <InstanceName>边缘prod环境串流机器-1063</InstanceName>\\n        <Size>20</Size>\\n        <Status>Available</Status>\\n        <Type>1</Type>\\n        <Portable>true</Portable>\\n        <SnapshotId>s-bp67acfmxazb4p****</SnapshotId>\\n        <SerialId>123</SerialId>\\n    </Disks>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>50</PageSize>\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n    <TotalCount>13</TotalCount>\\n</DescribeDisksResponse>","errorExample":""}]',
      'title' => '查询磁盘信息',
    ),
    'AttachDisk' => 
    array (
      'summary' => '调用AttachDisk为ENS实例挂载数据盘。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DiskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待挂载的云盘ID。云盘（DiskId）和实例（InstanceId）必须在同一个节点。',
            'type' => 'string',
            'required' => true,
            'example' => 'd-5saf13yy6sopmmg88mzsg****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-5rr19av7tkpgi9os52ag1****',
          ),
        ),
        2 => 
        array (
          'name' => 'DeleteWithInstance',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待挂载的云盘是否随实例释放。取值：

- true：释放实例时，该云盘随实例一起释放。
- false ：释放实例时，保留该云盘，不随实例一起释放。
- 为空则表示默认为false。',
            'type' => 'string',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务返回码，成功返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '916777D9-42D3-5928-92CE-373B1874B674',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'NotAllowMixed',
            'errorMessage' => 'NOT ALLOW MIX ATTACH.',
          ),
          4 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"RequestId\\": \\"916777D9-42D3-5928-92CE-373B1874B674\\"\\n}","errorExample":""},{"type":"xml","example":"<AttachDiskResponse>\\n    <Code>0</Code>\\n    <RequestId>916777D9-42D3-5928-92CE-373B1874B674</RequestId>\\n</AttachDiskResponse>","errorExample":""}]',
      'title' => '挂载磁盘',
    ),
    'DetachDisk' => 
    array (
      'summary' => '调用DetachDisk从一台ENS实例上卸载一块按量付费数据盘，仅支持卸载按量付费（单独购买）的磁盘，不支持随实例创建的磁盘。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DiskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '磁盘ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'd-5r7v69e0bejrnzger09w7****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-5inkeimcipxk26yqtzm4q****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回的业务码，正常成功为0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<DetachDiskResponse>\\n    <Code>0</Code>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</DetachDiskResponse>","errorExample":""}]',
      'title' => '卸载磁盘',
    ),
    'DescribeCloudDiskAvailableResourceInfo' => 
    array (
      'summary' => '调用DescribeCloudDiskAvailableResourceInfo查询某地域可售卖资源信息。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0AE4F26E-7527-569F-A987-E3CF269A3C11',
              ),
              'SupportResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SupportResource' => 
                  array (
                    'description' => '可购买的资源规格信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '可购买的资源规格信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EnsRegionId' => 
                        array (
                          'description' => 'ENS节点ID。',
                          'type' => 'string',
                          'example' => 'cn-beijing-cmcc',
                        ),
                        'EnsRegionName' => 
                        array (
                          'description' => '节点名称。',
                          'type' => 'string',
                          'example' => '北京移动',
                        ),
                        'DiskMinSize' => 
                        array (
                          'description' => '磁盘最小值，单位：GiB。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '20',
                        ),
                        'DiskMaxSize' => 
                        array (
                          'description' => '磁盘最大值，单位：GiB。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '80',
                        ),
                        'CanBuyCount' => 
                        array (
                          'description' => '可购买数量。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'Category' => 
                        array (
                          'description' => '磁盘种类

- cloud_efficiency：高效云盘。

- cloud_ssd：全闪云盘。

- local_hdd：本地HDD盘。

- local_ssd：本地盘SSD。',
                          'type' => 'string',
                          'example' => 'cloud_ssd',
                        ),
                        'DefaultDiskSize' => 
                        array (
                          'description' => '磁盘默认大小，单位：GiB。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '20',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0AE4F26E-7527-569F-A987-E3CF269A3C11\\",\\n  \\"SupportResources\\": {\\n    \\"SupportResource\\": [\\n      {\\n        \\"EnsRegionId\\": \\"cn-beijing-cmcc\\",\\n        \\"EnsRegionName\\": \\"北京移动\\",\\n        \\"DiskMinSize\\": 20,\\n        \\"DiskMaxSize\\": 80,\\n        \\"CanBuyCount\\": 2,\\n        \\"Category\\": \\"cloud_ssd\\",\\n        \\"DefaultDiskSize\\": 20\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询磁盘可购资源',
    ),
    'DescribeCloudDiskTypes' => 
    array (
      'summary' => '调用DescribeCloudDiskTypes在创建磁盘时查询可购买资源的规格。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => '节点ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-chongqing-cmcc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '77990CEE-B714-5702-BDE6-943F702277DD',
              ),
              'SupportResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SupportResource' => 
                  array (
                    'description' => '可购买的资源规格信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Category' => 
                        array (
                          'description' => '磁盘种类。

- cloud_efficiency：高效云盘。

- cloud_ssd：全闪云盘。

- local_hdd：本地HDD盘。

- local_ssd：本地SSD盘。',
                          'type' => 'string',
                          'example' => 'cloud_efficiency',
                        ),
                        'EnsRegionId' => 
                        array (
                          'description' => 'ENS节点ID。',
                          'type' => 'string',
                          'example' => 'cn-guangzhou-10',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"77990CEE-B714-5702-BDE6-943F702277DD\\",\\n  \\"SupportResources\\": {\\n    \\"SupportResource\\": [\\n      {\\n        \\"Category\\": \\"cloud_efficiency\\",\\n        \\"EnsRegionId\\": \\"cn-guangzhou-10\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询节点磁盘类型',
    ),
    'ReInitDisk' => 
    array (
      'summary' => '调用ReInitDisk初始化磁盘。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DiskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待重置的磁盘ID。仅支持重置单个。',
            'type' => 'string',
            'required' => true,
            'example' => 'd-5r7v69e0bejrnzger09w71yjv',
          ),
        ),
        1 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像文件ID，启动实例时选择的镜像资源。',
            'type' => 'string',
            'required' => true,
            'example' => 'm-5rz3i231o531s4p4ozanxmgx7',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务码，成功返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4DD66F05-3116-4BAA-B588-52EB2E7F431D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 0,\\n  \\"RequestId\\": \\"4DD66F05-3116-4BAA-B588-52EB2E7F431D\\"\\n}","type":"json"}]',
      'title' => '初始化磁盘',
    ),
    'ModifySnapshotAttribute' => 
    array (
      'summary' => '调用ModifySnapshotAttribute修改快照信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SnapshotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '快照ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sp-bp199lyny9bb47pa****',
          ),
        ),
        1 => 
        array (
          'name' => 'SnapshotName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '快照的显示名称。长度为2~128个英文或中文字符。必须以大小字母或中文开头，不能以`http://`和`https://`开头。可以包含数字、半角冒号（:）、下划线（_）或者连字符（-）。

为防止和自动快照的名称冲突，不能以**auto**开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testSnapshotName',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '快照的描述。长度为2~256个英文或中文字符，不能以`http://`和`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testDescription',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter SnapshotId that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'SnapshotIdNotFound',
            'errorMessage' => 'The input parameter SnapshotId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySnapshotAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</ModifySnapshotAttributeResponse>","errorExample":""}]',
      'title' => '修改快照属性',
    ),
    'DescribeSnapshots' => 
    array (
      'summary' => '调用DescribeSnapshots查询快照信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云盘所属于的地域ID。您可以调用[DescribeRegions](~~25609~~)查看最新的阿里云地域列表。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'DiskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的云盘设备ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'd-bp67acfmxazb4p****',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定的实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-bp67acfmxazb4p****',
          ),
        ),
        3 => 
        array (
          'name' => 'SnapshotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '快照标识编码。取值可以由多个快照ID组成一个JSON数组，最多支持100个ID，ID之间用半角逗号（,）隔开。',
            'type' => 'string',
            'required' => false,
            'example' => 'sp-bp67acfmxazb4p****',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前查询页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'Snapshots' => 
              array (
                'description' => '快照详情集合。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SnapshotId' => 
                    array (
                      'description' => '快照ID。',
                      'type' => 'string',
                      'example' => 's-bp67acfmxazb4p****',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '创建时间。按照[ISO8601](~~25696~~)标准表示，并使用UTC +0时间，格式为yyyy-MM-ddTHH:mm:ssZ。',
                      'type' => 'string',
                      'example' => '2020-08-20T14:52:28Z',
                    ),
                    'Status' => 
                    array (
                      'description' => '快照状态。取值：

- creating：创建中。
- available：可用。
- deleting：删除中。
- error：错误。',
                      'type' => 'string',
                      'example' => 'available',
                    ),
                    'Size' => 
                    array (
                      'description' => '磁盘容量。单位：MiB。',
                      'type' => 'string',
                      'example' => '40',
                    ),
                    'SourceDiskId' => 
                    array (
                      'description' => '源云盘ID。如果快照的源云盘已经被释放，该字段仍旧保留。',
                      'type' => 'string',
                      'example' => 'd-bp67acfmxazb4ph****',
                    ),
                    'SourceDiskType' => 
                    array (
                      'description' => '磁盘属性。取值：

- 1：系统盘。
- 2：数据盘。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                    'SourceDiskCategory' => 
                    array (
                      'description' => '磁盘类型。取值：

- cloud_efficiency：高效云盘。
- cloud_ssd：全闪云盘。
- local_hdd：本地HDD盘。
- local_ssd：本地盘SSD。',
                      'type' => 'string',
                      'example' => 'cloud_efficiency',
                    ),
                    'SnapshotName' => 
                    array (
                      'description' => '快照显示名称。如果创建时指定了快照显示名称，则返回。',
                      'type' => 'string',
                      'example' => 'testSnapshotName',
                    ),
                    'Description' => 
                    array (
                      'description' => '描述信息。',
                      'type' => 'string',
                      'example' => 'testDescription',
                    ),
                    'EnsRegionId' => 
                    array (
                      'description' => 'ENS的节点ID。',
                      'type' => 'string',
                      'example' => 'cn-beijing-15',
                    ),
                    'SourceSnapshotId' => 
                    array (
                      'description' => '源快照ID',
                      'type' => 'string',
                      'example' => 's-bpdfer893jfkdqe****',
                    ),
                    'SourceEnsRegionId' => 
                    array (
                      'description' => '源ENS节点ID',
                      'type' => 'string',
                      'example' => 'cn-hangzhou-27',
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '当前查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '快照总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9635ED2E-3103-1606-84D4-9F8E816B19F9',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Snapshots\\": [\\n    {\\n      \\"SnapshotId\\": \\"s-bp67acfmxazb4p****\\",\\n      \\"CreationTime\\": \\"2020-08-20T14:52:28Z\\",\\n      \\"Status\\": \\"available\\",\\n      \\"Size\\": \\"40\\",\\n      \\"SourceDiskId\\": \\"d-bp67acfmxazb4ph****\\",\\n      \\"SourceDiskType\\": \\"1\\",\\n      \\"SourceDiskCategory\\": \\"cloud_efficiency\\",\\n      \\"SnapshotName\\": \\"testSnapshotName\\",\\n      \\"Description\\": \\"testDescription\\",\\n      \\"EnsRegionId\\": \\"cn-beijing-15\\",\\n      \\"SourceSnapshotId\\": \\"s-bpdfer893jfkdqe****\\",\\n      \\"SourceEnsRegionId\\": \\"cn-hangzhou-27\\"\\n    }\\n  ],\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"9635ED2E-3103-1606-84D4-9F8E816B19F9\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeSnapshotsResponse>\\n    <Code>0</Code>\\n    <Snapshots>\\n        <SnapshotId>s-bp67acfmxazb4p****</SnapshotId>\\n        <CreationTime>2020-08-20T14:52:28Z</CreationTime>\\n        <Status>available</Status>\\n        <Size>40</Size>\\n        <SourceDiskId>d-bp67acfmxazb4ph****</SourceDiskId>\\n        <SourceDiskType>1</SourceDiskType>\\n        <SourceDiskCategory>cloud_efficiency</SourceDiskCategory>\\n        <SnapshotName>testSnapshotName</SnapshotName>\\n        <Description>testDescription</Description>\\n    </Snapshots>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>9635ED2E-3103-1606-84D4-9F8E816B19F9</RequestId>\\n</DescribeSnapshotsResponse>","errorExample":""}]',
      'title' => '查询快照信息',
    ),
    'DeleteSnapshot' => 
    array (
      'summary' => '调用DeleteSnapshot删除快照。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SnapshotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '快照ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sp-bp1c0doj0taqyzzl****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'INSTANCE_ID_NOT_FOUND',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteSnapshotResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</DeleteSnapshotResponse>","errorExample":""}]',
      'title' => '删除快照',
    ),
    'CreateSnapshot' => 
    array (
      'summary' => '调用CreateSnapshot创建快照。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DiskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云盘ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'd-bp1s5fnvk4gn2tws0****',
          ),
        ),
        1 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS节点ID，可通过[DescribeEnsRegions](~~DescribeEnsRegions)查询节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shenzhen-3',
          ),
        ),
        2 => 
        array (
          'name' => 'SnapshotName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '快照的显示名称。长度为2~128个英文或中文字符。必须以大小字母或中文开头，不能以`http://`或`https://`开头。可以包含数字、半角冒号（:）、下划线（_）或者短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'testSnapshotName',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '快照的描述。长度为2~256个英文或中文字符，不能以`http://`或`https://`开头。

默认值：空。',
            'type' => 'string',
            'required' => false,
            'example' => 'testDescription',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'SnapShotId' => 
              array (
                'description' => '快照ID。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '快照ID列表。',
                  'type' => 'string',
                  'example' => 'sp-5w1x1nxsmkhdgval1h5l****',
                ),
                'example' => 's-bp17441ohwka0yuh****',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'string',
                'example' => '21969183547****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OrderFailed',
            'errorMessage' => '订单失败',
          ),
          1 => 
          array (
            'errorCode' => 'SaleControl.VerificationFailed',
            'errorMessage' => 'You did not pass the salecontrol verification.Please contact the product.',
          ),
          2 => 
          array (
            'errorCode' => 'SaleControlVerificationFailedStock',
            'errorMessage' => 'Inventory sales constraint verification failed, please re-match, or contact the product.',
          ),
          3 => 
          array (
            'errorCode' => 'SaleControlVerificationFailedRegion',
            'errorMessage' => 'The node sales constraint verification failed, please re-select or contact the product.',
          ),
          4 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"SnapShotId\\": [\\n    \\"sp-5w1x1nxsmkhdgval1h5l****\\"\\n  ],\\n  \\"OrderId\\": \\"21969183547****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateSnapshotResponse>\\n    <RequestId>853D6E71-E087-1557-B65C-32BFBEE5CD97</RequestId>\\n    <SnapShotId>sp-5w1x1nxsmkhdgval1h5l****</SnapShotId>\\n    <OrderId>21969183547****</OrderId>\\n</CreateSnapshotResponse>","errorExample":""}]',
      'title' => '创建快照',
    ),
    'CopySnapshot' => 
    array (
      'summary' => '调用CopySnapshot跨节点复制快照。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SnapshotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源快照ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sp-bp1c0doj0taqyzzl****',
          ),
        ),
        1 => 
        array (
          'name' => 'DestinationRegionIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '目的节点ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '目的节点ID。',
              'type' => 'string',
              'required' => true,
              'example' => 'cn-hangzhou-26,cn-hangzhou-27',
            ),
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'DestinationSnapshotName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '快照的显示名称。长度为2~128个英文或中文字符。必须以大小字母或中文开头，不能以`http://`或`https://`开头。可以包含数字、半角冒号（:）、下划线（_）或者短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'testSnapshotName',
          ),
        ),
        3 => 
        array (
          'name' => 'DestinationSnapshotDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '快照的描述。长度为2~256个英文或中文字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testDescription',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EA3758E0-8899-17D3-9526-5F62CF33A586',
              ),
              'AllocationId' => 
              array (
                'description' => '创建成功的快照列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'EnsRegionId' => 
                    array (
                      'description' => '所在的节点ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou-27',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例ID数组。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '实例ID数组。',
                        'type' => 'string',
                        'example' => 'e426409223',
                      ),
                    ),
                  ),
                ),
              ),
              'BizStatusCode' => 
              array (
                'description' => '成功的状态码。

- **PartSuccess**：部分成功。
- **AllSuccess**：全部成功。',
                'type' => 'string',
                'example' => 'PartSuccess',
              ),
              'UnAllocationId' => 
              array (
                'description' => '未创建成功的节点列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'EnsRegionId' => 
                    array (
                      'description' => '所在的节点ID。',
                      'type' => 'string',
                      'example' => 'cn-chengdu-26',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OrderFailed',
            'errorMessage' => '订单失败',
          ),
          1 => 
          array (
            'errorCode' => 'SaleControl.VerificationFailed',
            'errorMessage' => 'You did not pass the salecontrol verification.Please contact the product.',
          ),
          2 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'ENS_SERVICE_ARREARAGE',
            'errorMessage' => '用户欠费',
          ),
          4 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"EA3758E0-8899-17D3-9526-5F62CF33A586\\",\\n  \\"AllocationId\\": [\\n    {\\n      \\"EnsRegionId\\": \\"cn-hangzhou-27\\",\\n      \\"InstanceId\\": [\\n        \\"e426409223\\"\\n      ]\\n    }\\n  ],\\n  \\"BizStatusCode\\": \\"PartSuccess\\",\\n  \\"UnAllocationId\\": [\\n    {\\n      \\"EnsRegionId\\": \\"cn-chengdu-26\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CopySnapshotResponse>\\n    <RequestId>EA3758E0-8899-17D3-9526-5F62CF33A586</RequestId>\\n    <BizStatusCode>AllSuccess</BizStatusCode>\\n    <AllocationId>\\n        <InstanceId>e426409223</InstanceId>\\n        <InstanceId>e42640922s</InstanceId>\\n        <EnsRegionId>cn-chengdu-telecom-4</EnsRegionId>\\n    </AllocationId>\\n    <UnAllocationId>\\n        <EnsRegionId>cn-chengdu-26</EnsRegionId>\\n    </UnAllocationId>\\n</CopySnapshotResponse>","errorExample":""}]',
      'title' => '快照跨节点复制',
    ),
    'CreateImage' => 
    array (
      'summary' => '调用CreateImage从所在实例创建一份镜像。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-5rr1bnyrc4tswr8cq3w6y****',
          ),
        ),
        1 => 
        array (
          'name' => 'ImageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像名称。长度为2~128个英文或中文字符。必须以大小写字母或中文开头，但不能以`http://`或`https://`开头。可以包含数字、半角冒号（:）、下划线（_）或者连字符（-）。',
            'type' => 'string',
            'required' => true,
            'example' => 'ImageName',
          ),
        ),
        2 => 
        array (
          'name' => 'DeleteAfterImageUpload',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像打包上传成功后是否自动释放实例，仅支持构建机。

- true：释放实例时，该镜像随实例一起释放。
- false ：释放实例时，保留该镜像，不随实例一起释放。
- 为空则表示默认为false。',
            'type' => 'string',
            'required' => false,
            'example' => 'false',
            'default' => 'true',
            'enum' => 
            array (
              0 => 'true',
              1 => 'false',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'SnapshotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '快照ID。',
            'type' => 'string',
            'required' => false,
            'example' => 's-bp67acfmxazb4p****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8BEF0D72-9901-5D43-B7D3-8B42AC26C516',
              ),
              'Code' => 
              array (
                'description' => '业务返回码，成功返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'ImageId' => 
              array (
                'title' => '镜像ID',
                'description' => '镜像ID。',
                'type' => 'string',
                'example' => 'm-5xxgg',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'QuotaExceed',
            'errorMessage' => 'The custom image quota has been used up.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8BEF0D72-9901-5D43-B7D3-8B42AC26C516\\",\\n  \\"Code\\": 0,\\n  \\"ImageId\\": \\"m-5xxgg\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateImageResponse>\\n    <RequestId>8BEF0D72-9901-5D43-B7D3-8B42AC26C516</RequestId>\\n    <Code>0</Code>\\n    <ImageId>m-5xxgg</ImageId>\\n</CreateImageResponse>","errorExample":""}]',
      'title' => '创建镜像',
    ),
    'ExportImage' => 
    array (
      'summary' => '调用ExportImage导出一份自定义镜像到与该自定义镜像同一地域的OSS Bucket里。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'm-5ragaz3s74b7go8ks7jp9****',
          ),
        ),
        1 => 
        array (
          'name' => 'OSSBucket',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保存导出镜像的OSS Bucket。',
            'type' => 'string',
            'required' => true,
            'example' => 'whxyl****',
          ),
        ),
        2 => 
        array (
          'name' => 'OSSRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-beijing',
            'enum' => 
            array (
              0 => 'cn-beijing',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'OSSPrefix',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '您的OSS Object的前缀。可以由数字或者字母组成，字符长度为1~30。',
            'type' => 'string',
            'required' => false,
            'example' => 'dataCenter/972****/',
          ),
        ),
        4 => 
        array (
          'name' => 'RoleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权角色名。',
            'type' => 'string',
            'required' => false,
            'example' => 'AliyunMNSLoggingRole',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ExportedImageURL' => 
              array (
                'description' => '导出的镜像地址。',
                'type' => 'string',
                'example' => 'http://oss.url',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '43A426AD-3F2E-5DD9-9C08-D4DBDCA48D85',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          8 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ExportedImageURL\\": \\"http://oss.url\\",\\n  \\"RequestId\\": \\"43A426AD-3F2E-5DD9-9C08-D4DBDCA48D85\\"\\n}","errorExample":""},{"type":"xml","example":"<ExportImageResponse>\\n    <ExportedImageURL>http://oss.url</ExportedImageURL>\\n    <RequestId>43A426AD-3F2E-5DD9-9C08-D4DBDCA48D85</RequestId>\\n</ExportImageResponse>","errorExample":""}]',
      'title' => '导出镜像至OSS',
    ),
    'DescribeSelfImages' => 
    array (
      'summary' => '调用DescribeSelfImages查询自定义镜像列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像资源列表的页码。起始值：**1**。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数。

默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '镜像ID,支持模糊查询。',
            'description' => '镜像ID，支持模糊查询。',
            'type' => 'string',
            'required' => false,
            'example' => 'centos_6_08_64_20G_a****',
          ),
        ),
        3 => 
        array (
          'name' => 'ImageName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '镜像名称，支持模糊查询。',
            'description' => '镜像名称，支持模糊查询。',
            'type' => 'string',
            'required' => false,
            'example' => 'centos_6_08_64_20G_a****',
          ),
        ),
        4 => 
        array (
          'name' => 'SnapshotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '快照ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'sp-5xg63dmojc1oaa3pk****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'Images' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Image' => 
                  array (
                    'description' => '镜像信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Architecture' => 
                        array (
                          'description' => '镜像的体系架构。取值：
- i386
- x86_64',
                          'type' => 'string',
                          'example' => 'x86_64',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '镜像的创建时间。按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。',
                          'type' => 'string',
                          'example' => '2017-12-08T12:10:03Z',
                        ),
                        'ImageId' => 
                        array (
                          'description' => '镜像ID。',
                          'type' => 'string',
                          'example' => 'centos_6_08_64_20G_a****',
                        ),
                        'ImageName' => 
                        array (
                          'description' => '镜像名称。',
                          'type' => 'string',
                          'example' => 'centos_6_08_64_20G_a****',
                        ),
                        'ImageOwnerAlias' => 
                        array (
                          'description' => '镜像所有者别名。取值：

- **others**：共享给您的自定义镜像。
- **self**：您的自定义镜像。',
                          'type' => 'string',
                          'example' => 'self',
                        ),
                        'ImageSize' => 
                        array (
                          'description' => '镜像大小，单位：GiB。',
                          'type' => 'string',
                          'example' => '20',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'i-5iqczfxps7csjrxeca****',
                        ),
                        'OsVersion' => 
                        array (
                          'description' => '系统版本。',
                          'type' => 'string',
                          'example' => '7.2',
                        ),
                        'Platform' => 
                        array (
                          'description' => '平台。

- centos
- ubuntu
- alios
- debian
- rhel
- windows',
                          'type' => 'string',
                          'example' => 'centos',
                        ),
                        'Status' => 
                        array (
                          'description' => '镜像状态。

- Creating： 创建中。
- Packing,：打包中。
- Uploading：上传中。
- Pack_failed：打包失败。
- Upload_failed：上传失败。
- Available：可用  只有可用中状态的镜像，才可以被使用及做操作。
- Unavailable：不可用。
- Copying： 拷贝中。',
                          'type' => 'string',
                          'example' => 'Creating',
                        ),
                        'ComputeType' => 
                        array (
                          'description' => '计算属性
ens_vm/ens: X86计算
bare_metal: X86裸机/X86裸金属
arm_vm: ARM计算
arm_bare_metal: ARM裸机/ARM裸金属
pcfarm: 异构计算',
                          'type' => 'string',
                          'example' => 'ens_vm',
                        ),
                        'SnapshotId' => 
                        array (
                          'description' => '快照ID。',
                          'type' => 'string',
                          'example' => 'sp-5yt3bdedxzdz6t6uuw****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A8B8EB73-B4FD-4262-8EF6-680DF39C9BA0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"Images\\": {\\n    \\"Image\\": [\\n      {\\n        \\"Architecture\\": \\"x86_64\\",\\n        \\"CreationTime\\": \\"2017-12-08T12:10:03Z\\",\\n        \\"ImageId\\": \\"centos_6_08_64_20G_a****\\",\\n        \\"ImageName\\": \\"centos_6_08_64_20G_a****\\",\\n        \\"ImageOwnerAlias\\": \\"self\\",\\n        \\"ImageSize\\": \\"20\\",\\n        \\"InstanceId\\": \\"i-5iqczfxps7csjrxeca****\\",\\n        \\"OsVersion\\": \\"7.2\\",\\n        \\"Platform\\": \\"centos\\",\\n        \\"Status\\": \\"Creating\\",\\n        \\"ComputeType\\": \\"ens_vm\\",\\n        \\"SnapshotId\\": \\"sp-5yt3bdedxzdz6t6uuw****\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"A8B8EB73-B4FD-4262-8EF6-680DF39C9BA0\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeSelfImagesResponse>\\n    <Code>0</Code>\\n    <Images>\\n        <Architecture>x86_64</Architecture>\\n        <CreationTime>2017-12-08T12:10:03Z</CreationTime>\\n        <ImageId>centos_6_08_64_20G_a****</ImageId>\\n        <ImageName>centos_6_08_64_20G_a****</ImageName>\\n        <ImageOwnerAlias>system</ImageOwnerAlias>\\n        <ImageSize>20</ImageSize>\\n        <InstanceId>i-5iqczfxps7csjrxeca****</InstanceId>\\n        <OsVersion>7.2</OsVersion>\\n        <Platform>centos</Platform>\\n        <Status>Creating</Status>\\n    </Images>\\n    <RequestId>A8B8EB73-B4FD-4262-8EF6-680DF39C9BA0</RequestId>\\n</DescribeSelfImagesResponse>","errorExample":""}]',
      'title' => '查询自定义镜像列表',
    ),
    'DeleteImage' => 
    array (
      'summary' => '调用DeleteImage删除一个自定义镜像。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像ID，仅支持传单个ID。

仅支持自定义镜像。',
            'type' => 'string',
            'required' => true,
            'example' => 'm-5taesrgwpo9zqj9cjqu792****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务码，成功返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0D94920B-0349-5097-A57F-31876405F2E5',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.DelerrorteImage',
            'errorMessage' => 'The image cannot be deleted when used by instance.',
          ),
          3 => 
          array (
            'errorCode' => 'Error.DeleteImage',
            'errorMessage' => 'The image cannot be deleted when used by instance.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"RequestId\\": \\"0D94920B-0349-5097-A57F-31876405F2E5\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteImageResponse>\\n    <Code>0</Code>\\n    <RequestId>0D94920B-0349-5097-A57F-31876405F2E5</RequestId>\\n</DeleteImageResponse>","errorExample":""}]',
      'title' => '删除镜像',
    ),
    'ModifyImageAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'm-5t4xwkfkbs0uxv0kymdb6uip7',
          ),
        ),
        1 => 
        array (
          'name' => 'ImageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像的名称。',
            'type' => 'string',
            'required' => true,
            'example' => '镜像名称',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务码。调用成功返回0，失败返回错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AC66B8F3-0B0A-5FB1-9EA2-DC03B2CD5B04',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Code\\": 0,\\n  \\"RequestId\\": \\"AC66B8F3-0B0A-5FB1-9EA2-DC03B2CD5B04\\"\\n}","type":"json"}]',
      'title' => '修改镜像属性',
      'summary' => '调用ModifyImageAttribute修改镜像属性信息。',
    ),
    'ModifyImageSharePermission' => 
    array (
      'summary' => '调用ModifyImageSharePermission共享镜像或取消共享镜像。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像ID，仅支持传单个ID。支持自定义镜像和公共镜像。',
            'type' => 'string',
            'required' => true,
            'example' => 'm-5s7qotzavwbrnzaqh4unm****',
          ),
        ),
        1 => 
        array (
          'name' => 'AddAccounts',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权共享镜像的阿里云账号ID，多个账号以半角逗号（,）隔开。',
            'type' => 'string',
            'required' => false,
            'example' => '1122334455**',
          ),
        ),
        2 => 
        array (
          'name' => 'RemoveAccounts',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '删除镜像共享的阿里云账号ID。仅支持删除单个。',
            'type' => 'string',
            'required' => false,
            'example' => '113355**',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '701B3BB9-9190-544D-90D1-328B0527380C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"701B3BB9-9190-544D-90D1-328B0527380C\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyImageSharePermissionResponse>\\n    <RequestId>701B3BB9-9190-544D-90D1-328B0527380C</RequestId>\\n</ModifyImageSharePermissionResponse>","errorExample":""}]',
      'title' => '管理镜像共享范围',
    ),
    'DescribeImages' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS节点ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-dalian-unicom',
          ),
        ),
        1 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像ID，仅支持传单个ID。

支持自定义镜像和公共镜像。',
            'type' => 'string',
            'required' => false,
            'example' => 'm-5qm2r6xo7njrpdkx04q1o****',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '此参数暂不使用。',
            'type' => 'string',
            'required' => false,
            'example' => '此参数暂不使用。',
          ),
        ),
        3 => 
        array (
          'name' => 'ImageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义镜像的名称。长度为2~128个字符。必须以大小字母或中文开头，不能以`aliyun`或`acs:`开头，不能包含`http://`或者`https://`。可以包含数字、半角句号（.）、半角冒号（:）、下划线（_）或者短划线（-）。

默认值：空，表示保持原有名称不变。',
            'type' => 'string',
            'required' => false,
            'example' => 'centos_6_08_64_20G_a****',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询列表的页码。起始值为**1**。

默认值：**1**。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值为**50**行。

默认值：**10**。',
            'type' => 'string',
            'required' => false,
            'example' => '50',
          ),
        ),
        6 => 
        array (
          'name' => 'SnapshotId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '快照ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'mock-clone_snapshot_id',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务返回码，正常返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'Images' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Image' => 
                  array (
                    'description' => '镜像信息集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '镜像信息集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Architecture' => 
                        array (
                          'description' => '镜像系统架构类型。可能值：**x86_64**。',
                          'type' => 'string',
                          'example' => 'x86_64',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '镜像创建时间，采用ISO 8601格式。',
                          'type' => 'string',
                          'example' => '2017-12-08T12:10:03Z',
                        ),
                        'ImageId' => 
                        array (
                          'description' => '镜像ID。',
                          'type' => 'string',
                          'example' => 'centos_6_08_64_20G_alibase_2017****',
                        ),
                        'ImageName' => 
                        array (
                          'description' => '镜像名称。',
                          'type' => 'string',
                          'example' => 'Ubuntu_16.04',
                        ),
                        'ImageOwnerAlias' => 
                        array (
                          'description' => '镜像来源。可能值：

- system：阿里云提供的公共镜像。
- self：您创建的自定义镜像。
- others：其他阿里云用户提供的共享镜像或社区镜像。',
                          'type' => 'string',
                          'example' => 'system',
                        ),
                        'ImageSize' => 
                        array (
                          'description' => '镜像大小，单位：GiB。',
                          'type' => 'string',
                          'example' => '40',
                        ),
                        'Platform' => 
                        array (
                          'description' => '镜像所使用的操作系统类型。可能值：

- Linux：Linux系统。

- Windows：Windows系统。',
                          'type' => 'string',
                          'example' => 'centos',
                        ),
                        'SnapshotId' => 
                        array (
                          'description' => '快照ID。',
                          'type' => 'string',
                          'example' => 'mock-clone_snapshot_id',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '当前查询每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8331AA01-C16D-5481-BB47-D19CEBAA811E',
              ),
              'TotalCount' => 
              array (
                'description' => '镜像总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"Images\\": {\\n    \\"Image\\": [\\n      {\\n        \\"Architecture\\": \\"x86_64\\",\\n        \\"CreationTime\\": \\"2017-12-08T12:10:03Z\\",\\n        \\"ImageId\\": \\"centos_6_08_64_20G_alibase_2017****\\",\\n        \\"ImageName\\": \\"Ubuntu_16.04\\",\\n        \\"ImageOwnerAlias\\": \\"system\\",\\n        \\"ImageSize\\": \\"40\\",\\n        \\"Platform\\": \\"centos\\",\\n        \\"SnapshotId\\": \\"mock-clone_snapshot_id\\"\\n      }\\n    ]\\n  },\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"8331AA01-C16D-5481-BB47-D19CEBAA811E\\",\\n  \\"TotalCount\\": 4\\n}","errorExample":""},{"type":"xml","example":"<DescribeImagesResponse>\\n    <Code>0</Code>\\n    <Images>\\n        <Architecture>x86_64</Architecture>\\n        <CreationTime>2017-12-08T12:10:03Z</CreationTime>\\n        <ImageId>centos_6_08_64_20G_alibase_2017****</ImageId>\\n        <ImageName>Ubuntu_16.04</ImageName>\\n        <ImageOwnerAlias>system</ImageOwnerAlias>\\n        <ImageSize>40</ImageSize>\\n        <Platform>centos</Platform>\\n        <SnapshotId>mock-clone_snapshot_id</SnapshotId>\\n    </Images>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <RequestId>8331AA01-C16D-5481-BB47-D19CEBAA811E</RequestId>\\n    <TotalCount>4</TotalCount>\\n</DescribeImagesResponse>","errorExample":""}]',
      'title' => '查询自定义镜像',
      'summary' => '调用DescribeImages查询您可以使用的镜像资源。',
    ),
    'DescribeImageInfos' => 
    array (
      'summary' => '调用DescribeImageInfos查询可以使用的镜像资源。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OsType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '系统类型，仅支持传单个类型。不传值，默认查询全部。
取值：

- linux

- windows',
            'type' => 'string',
            'required' => false,
            'example' => 'linux',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'Images' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Image' => 
                  array (
                    'description' => '镜像信息集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Description' => 
                        array (
                          'description' => '镜像描述信息。',
                          'type' => 'string',
                          'example' => 'centos_6_08_64_20G_alibase_2017****',
                        ),
                        'ImageId' => 
                        array (
                          'description' => '镜像ID。',
                          'type' => 'string',
                          'example' => 'centos_6_08_64_20G_alibase_2017****',
                        ),
                        'ImageSize' => 
                        array (
                          'description' => '镜像大小，单位：GiB。',
                          'type' => 'string',
                          'example' => '20',
                        ),
                        'ImageVersion' => 
                        array (
                          'description' => '镜像版本。',
                          'type' => 'string',
                          'example' => '6.8',
                        ),
                        'OSName' => 
                        array (
                          'description' => '镜像类型。
取值：**centos**、**debian**、**ubuntu**、**windows**。',
                          'type' => 'string',
                          'example' => 'centos',
                        ),
                        'OSType' => 
                        array (
                          'description' => '系统类型。',
                          'type' => 'string',
                          'example' => 'linux',
                        ),
                        'ComputeType' => 
                        array (
                          'description' => '镜像计算类型。取值：	
- ens_vm：X86计算
- arm_vm：ARM计算
- bare_metal：X86裸机
- pcfarm：异构计算',
                          'type' => 'string',
                          'enumValueTitles' => 
                          array (
                            'ens_vm' => 'X86计算',
                            'arm_vm' => 'ARM计算',
                            'bare_metal' => 'X86裸机',
                            'pcfarm' => '异构计算',
                          ),
                          'example' => 'ens_vm',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5568A08C-10A9-47F3-902F-647298B463FB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter domainName that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"Images\\": {\\n    \\"Image\\": [\\n      {\\n        \\"Description\\": \\"centos_6_08_64_20G_alibase_2017****\\",\\n        \\"ImageId\\": \\"centos_6_08_64_20G_alibase_2017****\\",\\n        \\"ImageSize\\": \\"20\\",\\n        \\"ImageVersion\\": \\"6.8\\",\\n        \\"OSName\\": \\"centos\\",\\n        \\"OSType\\": \\"linux\\",\\n        \\"ComputeType\\": \\"ens_vm\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"5568A08C-10A9-47F3-902F-647298B463FB\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeImageInfosResponse>\\n    <Code>0</Code>\\n    <Images>\\n        <Description>centos_6_08_64_20G_alibase_2017****</Description>\\n        <ImageId>centos_6_08_64_20G_alibase_2017****</ImageId>\\n        <ImageSize>20</ImageSize>\\n        <ImageVersion>6.8</ImageVersion>\\n        <OSName>centos</OSName>\\n        <OSType>linux</OSType>\\n        <ComputeType>StreamCompute</ComputeType>\\n    </Images>\\n    <RequestId>5568A08C-10A9-47F3-902F-647298B463FB</RequestId>\\n</DescribeImageInfosResponse>","errorExample":""}]',
      'title' => '查询可以使用的镜像资源',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeImageSharePermission' => 
    array (
      'summary' => '调用DescribeImageSharePermission根据ImageId查询正在共享的列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'm-5s7qotzavwbrnzaqh4unm****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询列表的页码。起始值为**1**。

默认值：**1**。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值为**100**行。

默认值：**10**。',
            'type' => 'string',
            'required' => false,
            'maximum' => '100',
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'AliyunId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阿里云账号ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '171710408091****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '镜像共享的总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PageSize' => 
              array (
                'description' => '当前查询每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A44EE357-6174-5E37-A801-48F5790F9ACE',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'ImageId' => 
              array (
                'description' => '镜像ID。',
                'type' => 'string',
                'example' => 'm-5qkf6jv9a0tzd5ipwx5fi****',
              ),
              'Accounts' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Account' => 
                  array (
                    'description' => '账号信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '阿里云注册用户，当前阿里云用户共享账户。',
                      'type' => 'string',
                      'example' => '[{"AliyunId": 197265348438****},]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 2,\\n  \\"PageSize\\": 100,\\n  \\"RequestId\\": \\"A44EE357-6174-5E37-A801-48F5790F9ACE\\",\\n  \\"PageNumber\\": 1,\\n  \\"ImageId\\": \\"m-5qkf6jv9a0tzd5ipwx5fi****\\",\\n  \\"Accounts\\": {\\n    \\"Account\\": [\\n      \\"[{\\\\\\"AliyunId\\\\\\": 197265348438****},]\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeImageSharePermissionResponse>\\n    <TotalCount>2</TotalCount>\\n    <PageSize>100</PageSize>\\n    <RequestId>A44EE357-6174-5E37-A801-48F5790F9ACE</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <ImageId>m-5qkf6jv9a0tzd5ipwx5fi****</ImageId>\\n    <Accounts>[{\\"AliyunId\\": 197265348438****},]</Accounts>\\n</DescribeImageSharePermissionResponse>","errorExample":""}]',
      'title' => '查询镜像共享范围',
    ),
    'DescribeExportImageStatus' => 
    array (
      'summary' => '调用DescribeExportImageStatus查看镜像导出状态。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'centos_6_08_64_20G_alibase_****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ImageExportStatus' => 
              array (
                'description' => '镜像导出状态，如下所示：
-  Exporting：导出中。
-  Exported：已导出。
-  ExportError：镜像导出发生异常。
-  Unexported：未导出。

',
                'type' => 'string',
                'example' => 'Exporting',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '14BBB3A0-3DBE-54F5-AEC8-01D3F6B1EBE2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          8 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"ImageExportStatus\\": \\"Exporting\\",\\n  \\"RequestId\\": \\"14BBB3A0-3DBE-54F5-AEC8-01D3F6B1EBE2\\"\\n}","type":"json"}]',
      'title' => '查询镜像导出状态',
    ),
    'DescribeExportImageInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'm-xxxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'ImageName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'testImageName',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例状态列表的页码，起始值为**1**，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**50**行，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Images' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Image' => 
                  array (
                    'description' => '返回数据列表，详见返回示例（JSON格式）Images对象数组。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Architecture' => 
                        array (
                          'description' => '镜像系统架构类型。可能值：**x86_64**。',
                          'type' => 'string',
                          'example' => 'x86_64',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '镜像的创建时间。',
                          'type' => 'string',
                          'example' => '2017-12-08T12:10:03Z',
                        ),
                        'ExportedImageURL' => 
                        array (
                          'description' => '镜像导出URL。',
                          'type' => 'string',
                          'example' => 'https://user_defined_bucket.oss-cn-beijing.aliyuncs.com/m-xxxxxxxxx1.qcow2',
                        ),
                        'ImageExportStatus' => 
                        array (
                          'description' => '镜像导出状态，如下所示：
-  Exporting：导出中。
-  Exported：已导出。
-  ExportError：镜像导出发生异常。
-  Unexported：未导出。

',
                          'type' => 'string',
                          'example' => 'Exported',
                        ),
                        'ImageId' => 
                        array (
                          'description' => '镜像ID。',
                          'type' => 'string',
                          'example' => 'm-xxxxxxxxx1',
                        ),
                        'ImageName' => 
                        array (
                          'description' => '镜像名称。',
                          'type' => 'string',
                          'example' => 'm-xxxxxxxxx1',
                        ),
                        'ImageOwnerAlias' => 
                        array (
                          'description' => '镜像所有者别名。可能值：
- system：公共镜像
- self：您的自定义镜像
',
                          'type' => 'string',
                          'example' => 'system',
                        ),
                        'Platform' => 
                        array (
                          'description' => '操作系统平台。',
                          'type' => 'string',
                          'example' => 'centos',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '当前分页包含多少条目。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '13',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Images\\": {\\n    \\"Image\\": [\\n      {\\n        \\"Architecture\\": \\"x86_64\\",\\n        \\"CreationTime\\": \\"2017-12-08T12:10:03Z\\",\\n        \\"ExportedImageURL\\": \\"https://user_defined_bucket.oss-cn-beijing.aliyuncs.com/m-xxxxxxxxx1.qcow2\\",\\n        \\"ImageExportStatus\\": \\"Exported\\",\\n        \\"ImageId\\": \\"m-xxxxxxxxx1\\",\\n        \\"ImageName\\": \\"m-xxxxxxxxx1\\",\\n        \\"ImageOwnerAlias\\": \\"system\\",\\n        \\"Platform\\": \\"centos\\"\\n      }\\n    ]\\n  },\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"TotalCount\\": 13\\n}","errorExample":""},{"type":"xml","example":"<DescribeExportImageInfoResponse>\\n<PageNumber>1</PageNumber>\\n<TotalCount>13</TotalCount>\\n<PageSize>10</PageSize>\\n<RequestId>A46DCC5B-FABC-46A2-B551-7D9CDA0637AD</RequestId>\\n<Images>\\n    <Image>\\n        <CreationTime>2017-12-08T12:10:03Z</CreationTime>\\n        <ImageId>m-xxxxxxxxx1</ImageId>\\n        <ImageName>m-xxxxxxxxx1</ImageName>\\n        <Architecture>x86_64</Architecture>\\n        <ImageOwnerAlias>system</ImageOwnerAlias>\\n        <Platform>centos</Platform>\\n        <ImageExportStatus>Exported</ImageExportStatus>\\n        <ExportedImageURL>https://user_defined_bucket.oss-cn-beijing.aliyuncs.com/m-xxxxxxxxx1.qcow2</ExportedImageURL>\\n    </Image>\\n    <Image>\\n        <CreationTime>2017-12-08T12:10:03Z</CreationTime>\\n        <ImageId>m-xxxxxxxxx2</ImageId>\\n        <ImageName>m-xxxxxxxxx2</ImageName>\\n        <Architecture>x86_64</Architecture>\\n        <ImageOwnerAlias>system</ImageOwnerAlias>\\n        <Platform>centos</Platform>\\n        <ImageExportStatus>Exported</ImageExportStatus>\\n        <ExportedImageURL>https://user_defined_bucket.oss-cn-beijing.aliyuncs.com/m-xxxxxxxxx2.qcow2</ExportedImageURL>\\n    </Image>\\n</Images>\\n</DescribeExportImageInfoResponse>","errorExample":""}]',
      'title' => '查询导出镜像信息',
      'summary' => '调用DescribeExportImageInfo查询镜像的导出结果。',
      'description' => '- 调用DescribeExportImageInfo会返回用户账号下所有的自定义镜像列表，除镜像本身属性外，增加导出状态以及OSS下载链接的属性。
-  未导出过的镜像下载链接为空。
-  如果客户自行删除过OSS中的内容，可能会导致下载链接无效。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateKeyPair' => 
    array (
      'summary' => '调用CreateKeyPair创建一对SSH密钥对。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'KeyPairName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '密钥对名称。命名规则如下所示：

- 长度为2~128个英文或中文字符。

- 必须以大小字母或中文开头，不能以`http://`和`https://`开头。

- 可以包含数字、半角冒号（:）、下划线（_）、或者连字符（-）。',
            'type' => 'string',
            'required' => true,
            'example' => 'TestKeyPairName',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'KeyPairFingerPrint' => 
              array (
                'description' => '密钥对的指纹。根据RFC4716定义的公钥指纹格式，采用MD5信息摘要算法。详情请参见[RFC4716](https://tools.ietf.org/html/rfc4716)。',
                'type' => 'string',
                'example' => '7880c1ad4687fdbf7a6da2131****',
              ),
              'KeyPairId' => 
              array (
                'description' => 'SSH密钥对的ID。',
                'type' => 'string',
                'example' => 'ssh-5lywanlkih1zo9yl8eg****',
              ),
              'KeyPairName' => 
              array (
                'description' => '密钥对名称。',
                'type' => 'string',
                'example' => 'TestKeyPairName',
              ),
              'PrivateKeyBody' => 
              array (
                'description' => '密钥对的私钥。PEM编码的PKCS#8格式的私钥部分。',
                'type' => 'string',
                'example' => '-----BEGIN RSA PRIVATE KEY-----\\nMIIEogIBAAKCAQE****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                ),
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          8 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"KeyPairFingerPrint\\": \\"7880c1ad4687fdbf7a6da2131****\\",\\n  \\"KeyPairId\\": \\"ssh-5lywanlkih1zo9yl8eg****\\",\\n  \\"KeyPairName\\": \\"TestKeyPairName\\",\\n  \\"PrivateKeyBody\\": \\"-----BEGIN RSA PRIVATE KEY-----\\\\\\\\nMIIEogIBAAKCAQE****\\",\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateKeyPairResesponse>\\n<KeyPairFingerPrint>7880c1ad4687fdbf7a6da2131****</KeyPairFingerPrint>\\n<KeyPairName>TestKeyPairName</KeyPairName>\\n<RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n<KeyPairId>ssh-5lywanlkih1zo9yl8eg****</KeyPairId>\\n<PrivateKeyBody>-----BEGIN RSA PRIVATE KEY-----\\nMIIEogIBAAKCAQE****</PrivateKeyBody>\\n</CreateKeyPairResesponse>\\n","errorExample":""}]',
      'title' => '创建一对SSH密钥对',
      'description' => '边缘节点服务ENS会为您保管密钥的公钥部分，并返回未加密的PEM编码的PKCS#8格式私钥。您需要自行妥善保管私钥部分。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteKeyPairs' => 
    array (
      'summary' => '调用DeleteKeyPairs删除一对SSH密钥对。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'KeyPairName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '密钥对名称。命名规则如下所示：

- 长度为2~128个英文或中文字符。
- 必须以大小字母或中文开头，不能以`http://`和`https://`开头。
- 可以包含数字、半角冒号（:）、下划线（_）、或者连字符（-）。

在进行删除密钥对前，您可以调用DescribeKeyPairs查询已有密钥对。',
            'type' => 'string',
            'required' => false,
            'example' => 'TestKeyPairName',
          ),
        ),
        1 => 
        array (
          'name' => 'KeyPairId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SSH密钥对的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ssh-5lywanlkih1zo9yl8eg****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E	',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'PubKeyNameExisted',
            'errorMessage' => 'Public Key Pair Name Existed.',
          ),
          6 => 
          array (
            'errorCode' => 'PubKeyAttachedWithInstance',
            'errorMessage' => 'Public Key Attached With Instance.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidPubKeyBody',
            'errorMessage' => 'Invalid Public Key Body.',
          ),
          8 => 
          array (
            'errorCode' => 'PubKeyNameNotExist',
            'errorMessage' => 'Public Key Pair Name Not Exist.',
          ),
          9 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\\\t\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteKeyPairsResponse>\\r\\n<RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\r\\n</DeleteKeyPairsResponse>\\r\\n","errorExample":""}]',
      'title' => '删除一对SSH密钥对',
      'description' => '- 如果您成功删除密钥对，将无法通过DescribeKeyPairs查询该密钥对。
- 如果您的ENS实例已经绑定了密钥对，在删除了该密钥对后，阿里云ENS不再为您保存该SSH密钥对，但是实例可以正常使用该SSH密钥对。调用DescribeInstances查询实例信息时，会显示密钥对名称（**KeyPairName**），但不再显示其他相关信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ImportKeyPair' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'KeyPairName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '密钥对名称。命名规则如下所示：

- 长度为2~128个英文或中文字符。
- 必须以大小字母或中文开头，不能以`http://`和`https://`开头。
- 可以包含数字、半角冒号（:）、下划线（_）、或者连字符（-）。

仅支持传单个密钥对。',
            'type' => 'string',
            'required' => true,
            'example' => 'TestKeyPairName',
          ),
        ),
        1 => 
        array (
          'name' => 'PublicKeyBody',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '密钥对的公钥内容。仅支持传单个内容。',
            'type' => 'string',
            'required' => true,
            'example' => 'ssh-rsa AAAAB****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'KeyPairFingerPrint' => 
              array (
                'description' => '密钥对的指纹。根据RFC4716定义的公钥指纹格式，采用MD5信息摘要算法。',
                'type' => 'string',
                'example' => 'fdaf8ff7a756ef843814fc****',
              ),
              'KeyPairName' => 
              array (
                'description' => '密钥对名称。',
                'type' => 'string',
                'example' => 'TestKeyPairName',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          8 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"KeyPairFingerPrint\\": \\"fdaf8ff7a756ef843814fc****\\",\\n  \\"KeyPairName\\": \\"TestKeyPairName\\",\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<ImportKeyPairResponse>\\n<RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n<KeyPairName>TestKeyPairName</KeyPairName>\\n<KeyPairFingerPrint>b2389cc0763ac8c342b08334****</KeyPairFingerPrint>\\n</ImportKeyPairResponse>\\n","errorExample":""}]',
      'title' => '导入RSA密钥对公钥',
      'summary' => '调用ImportKeyPair导入由其他工具产生的RSA密钥对的公钥部分。',
      'description' => '- 导入密钥对后，阿里云ENS为您保管公钥部分，您需要自行妥善保存密钥对的私钥部分。
- 目前仅支持ssh-rsa格式。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeKeyPairs' => 
    array (
      'summary' => '调用DescribeKeyPairs查询一个或多个密钥对。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'KeyPairName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '密钥对名称。长度为2~128个英文或中文字符。必须以大小字母或中文开头，不能以`http://`和`https://`开头。可以包含以下字符：
- 数字
- :
- _
- .

仅支持传单个名称。默认查询所有密钥对信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'TestKeyPairName',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询列表的页码。取值：>0，默认查询第1页。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数。取值：>0，默认为10。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'KeyPairId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '密钥对的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ssh-50cynkq42sgj4ej1tn78t4***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'KeyPairs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'KeyPair' => 
                  array (
                    'description' => '密钥对信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => '密钥对的创建时间。日期格式按照ISO8601表示法，并使用UTC时间。格式为yyyy-MM-ddTHH:mm:ssZ。',
                          'type' => 'string',
                          'example' => '2020-04-26T15:38:27Z',
                        ),
                        'KeyPairFingerPrint' => 
                        array (
                          'description' => '密钥对的指纹。',
                          'type' => 'string',
                          'example' => 'fdaf8ff7a756ef843814fc****',
                        ),
                        'KeyPairName' => 
                        array (
                          'description' => '密钥对的名称。',
                          'type' => 'string',
                          'example' => 'TestKeyPairName',
                        ),
                        'KeyPairId' => 
                        array (
                          'description' => '密钥对的ID',
                          'type' => 'string',
                          'example' => 'ssh-50cynkq42sgj4ej1tn78t4***',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '每页行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '37B52F33-6879-49D0-A39B-22966B01449E',
              ),
              'TotalCount' => 
              array (
                'description' => '密钥对的总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"KeyPairs\\": {\\n    \\"KeyPair\\": [\\n      {\\n        \\"CreationTime\\": \\"2020-04-26T15:38:27Z\\",\\n        \\"KeyPairFingerPrint\\": \\"fdaf8ff7a756ef843814fc****\\",\\n        \\"KeyPairName\\": \\"TestKeyPairName\\",\\n        \\"KeyPairId\\": \\"ssh-50cynkq42sgj4ej1tn78t4***\\"\\n      }\\n    ]\\n  },\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"37B52F33-6879-49D0-A39B-22966B01449E\\",\\n  \\"TotalCount\\": 7\\n}","errorExample":""},{"type":"xml","example":"<DescribeKeyPairsResponse>\\n<TotalCount>7</TotalCount>\\n<RequestId>37B52F33-6879-49D0-A39B-22966B01449E</RequestId>\\n<PageSize>10</PageSize>\\n<PageNumber>1</PageNumber>\\n<KeyPairs>\\n    <KeyPair>\\n        <KeyPairFingerPrint>fdaf8ff7a756ef843814fc****</KeyPairFingerPrint>\\n        <KeyPairName>TestKeyPairName</KeyPairName>\\n        <CreationTime>2020-04-26T15:38:27Z</CreationTime>\\n    </KeyPair>\\n</KeyPairs>\\n</DescribeKeyPairsResponse>\\n","errorExample":""}]',
      'title' => '查询一个或多个密钥对',
    ),
    'RevokeSecurityGroupEgress' => 
    array (
      'summary' => '调用RevokeSecurityGroupEgress删除一条出方向安全组规则，撤销安全组出方向的访问权限。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '传输层协议。取值大小写敏感。取值范围：
- tcp
- udp
- icmp
- gre
- all：支持所有协议',
            'type' => 'string',
            'required' => true,
            'example' => 'all',
            'enum' => 
            array (
              0 => 'tcp',
              1 => 'udp',
              2 => 'icmp',
              3 => 'gre',
              4 => 'all',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'PortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的端安全组开放的传输层协议相关的端口范围。取值范围：
- TCP/UDP协议：取值范围为**1**~**65535**。使用斜线（/）隔开起始端口和终止端口。正确示范：**1/200**；错误示范：**200/1**。
- ICMP协议：**-1/-1**。
- GRE协议：**-1/-1**。
- IpProtocol取值为all：**-1/-1**。',
            'type' => 'string',
            'required' => true,
            'example' => '22/22',
          ),
        ),
        2 => 
        array (
          'name' => 'SecurityGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sg-bp67acfmxazb4ph***',
          ),
        ),
        3 => 
        array (
          'name' => 'Policy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置访问权限。取值：
- **accept**：接受访问。
- **drop**：拒绝访问，不返回拒绝信息。

默认值：**accept**。',
            'type' => 'string',
            'required' => false,
            'example' => 'accept',
            'default' => 'accept',
            'enum' => 
            array (
              0 => 'accept',
              1 => 'drop',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组规则优先级。取值范围：**1**~**100**，数值越小，代表优先级越高。

默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'DestCidrIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的端IP地址范围。支持CIDR格式和IPv4格式的IP地址范围。

默认值：无。',
            'type' => 'string',
            'required' => true,
            'example' => '10.0.0.0/8',
          ),
        ),
        6 => 
        array (
          'name' => 'SourcePortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源端安全组开放的传输层协议相关的端口范围。取值范围：
- TCP/UDP协议：取值范围为**1**~**65535**。使用斜线（/）隔开起始端口和终止端口。正确示范：**1/200**；错误示范：**200/1**。
- ICMP协议：**-1/-1**。
- GRE协议：**-1/-1**。
- IpProtocol取值为all：**-1/-1**。',
            'type' => 'string',
            'required' => false,
            'example' => '22/22',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'SecurityGroupRule.NotFound',
            'errorMessage' => 'The input security group rule does not exist.',
          ),
          8 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          9 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","errorExample":""},{"type":"xml","example":"<RevokeSecurityGroupEgressResponse>\\r\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\r\\n</RevokeSecurityGroupEgressResponse>","errorExample":""}]',
      'title' => '删除安全组出方向规则',
      'description' => '> 安全组的API文档中，流量的发起端为源端（Source），数据传输的接收端为目的端（Dest）。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RevokeSecurityGroup' => 
    array (
      'summary' => '调用RevokeSecurityGroup删除一条安全组入方向规则，撤销安全组入方向的权限设置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '传输层协议。取值大小写敏感。取值范围：
- tcp：TCP协议。
- udp：UDP协议。
- icmp：ICMP协议。
- gre：GRE协议。
- all：支持所有协议。',
            'type' => 'string',
            'required' => true,
            'example' => 'all',
            'enum' => 
            array (
              0 => 'tcp',
              1 => 'udp',
              2 => 'icmp',
              3 => 'gre',
              4 => 'all',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'PortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的端安全组开放的传输层协议相关的端口范围。取值范围：
- TCP/UDP协议：取值范围为**1**~**65535**。使用斜线（/）隔开起始端口和终止端口。正确示范：**1/200**；错误示范：**200/1**。
- ICMP协议：**-1/-1**。
- GRE协议：**-1/-1**。
- IpProtocol取值为all：**-1/-1**。',
            'type' => 'string',
            'required' => true,
            'example' => '22/22',
          ),
        ),
        2 => 
        array (
          'name' => 'SecurityGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sg-bp67acfmxazb4p****	',
          ),
        ),
        3 => 
        array (
          'name' => 'Policy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置访问权限。取值范围：
- accept（默认值）：接受访问。
- drop：拒绝访问，不返回拒绝信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'accept',
            'default' => 'accept',
            'enum' => 
            array (
              0 => 'accept',
              1 => 'drop',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组规则优先级。取值范围：**1**~**100**，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'SourceCidrIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源端IP地址范围。支持CIDR格式和IPv4格式的IP地址范围。默认值：0.0.XX.XX/0。',
            'type' => 'string',
            'required' => true,
            'example' => '10.0.XX.XX/8',
          ),
        ),
        6 => 
        array (
          'name' => 'SourcePortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源端安全组开放的传输层协议相关的端口范围。取值范围：
- TCP/UDP协议：取值范围为**1**~**65535**。使用斜线（/）隔开起始端口和终止端口。正确示范：**1/200**；错误示范：**200/1**。
- ICMP协议：**-1/-1**。
- GRE协议：**-1/-1**。
- IpProtocol取值为all：**-1/-1**。',
            'type' => 'string',
            'required' => false,
            'example' => '22/22',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'SecurityGroupRule.NotFound',
            'errorMessage' => 'The input security group rule does not exist.',
          ),
          8 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          9 => 
          array (
            'errorCode' => 'DependencyViolation',
            'errorMessage' => 'There is still instance(s) in the specified security group.',
          ),
          10 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<RevokeSecurityGroupResponse>\\r\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\r\\n</RevokeSecurityGroupResponse>","errorExample":""}]',
      'title' => '删除安全组入方向规则',
      'description' => '- 安全组的API文档中，流量的发起端为源端（Source），数据传输的接收端为目的端（Dest）。
- 以下任意一组参数可以确定一条安全组入方向规则，只指定一个参数无法确定一条安全组规则。
- 撤销指定IP地址段的权限设置：IpProtocol、PortRange、Policy、SourceCidrIp。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSecurityGroup' => 
    array (
      'summary' => '调用CreateSecurityGroup新建一个安全组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SecurityGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组名称。长度为2~128个英文或中文字符。必须以大小字母或中文开头，不能以 http://和https://开头。可以包含数字、半角冒号（:）、下划线（_）或者连字符（-）。
默认值：空。',
            'type' => 'string',
            'required' => false,
            'example' => 'Dcdn1:2_3-4',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述信息。
长度为2~256个字符，必须以字母或中文开头，但不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testDescription',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SecurityGroupId' => 
              array (
                'description' => '安全组ID。',
                'type' => 'string',
                'example' => 'sg-bp1fg655nh68xyz9i***',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '760bad53276431c499e30dc36f6b26be',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          5 => 
          array (
            'errorCode' => 'LimitExceeded.SecurityGroup',
            'errorMessage' => 'The number of securityGroup exceeds the limit.',
          ),
          6 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"SecurityGroupId\\": \\"sg-bp1fg655nh68xyz9i***\\",\\n  \\"RequestId\\": \\"760bad53276431c499e30dc36f6b26be\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateSecurityGroupResponse>\\n    <SecurityGroupId>sg-bp1fg655nh68xyz9i***</SecurityGroupId>\\n    <RequestId>760bad53276431c499e30dc36f6b26be</RequestId>\\n</CreateSecurityGroupResponse>","errorExample":""}]',
      'title' => '创建安全组',
    ),
    'AuthorizeSecurityGroup' => 
    array (
      'summary' => '调用AuthorizeSecurityGroup指定安全组入方向的访问权限，允许或者拒绝其他设备发送入方向流量到安全组里的实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '传输层协议。取值大小写敏感。取值范围：
- tcp
- udp
- icmp
- gre
- all：支持所有协议',
            'type' => 'string',
            'required' => true,
            'example' => 'all',
            'enum' => 
            array (
              0 => 'tcp',
              1 => 'udp',
              2 => 'icmp',
              3 => 'gre',
              4 => 'all',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'PortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组开放的传输层协议相关的端口范围。取值范围：
- TCP/UDP协议：取值范围为**1**~**65535**。使用斜线（/）隔开起始端口和终止端口。正确示范：**1/200**；错误示范：**200/1**。
- ICMP协议：**-1/-1**。
- GRE协议：**-1/-1**。
- IpProtocol取值为all：**-1/-1**。',
            'type' => 'string',
            'required' => true,
            'example' => '22/22',
          ),
        ),
        2 => 
        array (
          'name' => 'SecurityGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sg-bp67acfmxazb4ph***',
          ),
        ),
        3 => 
        array (
          'name' => 'Policy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置访问权限。取值范围：
- accept：接受访问。
- drop：拒绝访问，不返回拒绝信息。

默认值：accept。',
            'type' => 'string',
            'required' => false,
            'example' => 'accept',
            'default' => 'accept',
            'enum' => 
            array (
              0 => 'accept',
              1 => 'drop',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组规则优先级。取值范围：**1**~**100**。

默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'SourceCidrIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源端IP地址范围。支持CIDR格式和IPv4格式的IP地址范围。

默认值：无。
',
            'type' => 'string',
            'required' => true,
            'example' => '10.0.XX.XX/8',
          ),
        ),
        6 => 
        array (
          'name' => 'SourcePortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源端安全组开放的传输层协议相关的端口范围。取值范围：
- TCP/UDP协议：取值范围为**1~65535**。使用斜线（/）隔开起始端口和终止端口。正确示范：**1/200**；错误示范：**200/1**。
- ICMP协议：**-1/-1**。
- GRE协议：**-1/-1**。
- IpProtocol取值为all：**-1/-1**。',
            'type' => 'string',
            'required' => false,
            'example' => '22/22',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          8 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<AuthorizeSecurityGroupResponse>\\r\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\r\\n</AuthorizeSecurityGroupResponse>","errorExample":""}]',
      'title' => '添加入方向安全组规则',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'JoinSecurityGroup' => 
    array (
      'summary' => '调用JoinSecurityGroup将一台ENS实例加入到指定的安全组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SecurityGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sg-bp67acfmxazb4ph***',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-bp67acfmxazb4ph***',
          ),
        ),
        2 => 
        array (
          'name' => 'NetworkInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡ID。

',
            'type' => 'string',
            'required' => false,
            'example' => 'eni-58z57orgmt6d1****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          6 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          7 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          8 => 
          array (
            'errorCode' => 'SecurityGroupRule.NotFound',
            'errorMessage' => 'The input security group rule does not exist.',
          ),
          9 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specified InstanceId does not exist.',
          ),
          11 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          12 => 
          array (
            'errorCode' => 'RegionNotSupport',
            'errorMessage' => 'The specified InstanceId of regionId does not support SecurityGroup',
          ),
          13 => 
          array (
            'errorCode' => 'InstanceAlreadyBound',
            'errorMessage' => 'The instance is already bound to a SecurityGroup.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<JoinSecurityGroupResponse>\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</JoinSecurityGroupResponse>","errorExample":""}]',
      'title' => '加入安全组',
      'description' => '调用该接口时，您需要注意：加入安全组之前，实例必须处于已停止（Stopped）或者运行中（Running）状态。',
    ),
    'AuthorizeSecurityGroupEgress' => 
    array (
      'summary' => '调用AuthorizeSecurityGroupEgress指定安全组出方向的访问权限，允许或者拒绝安全组里的实例发送出方向流量到其他设备。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '传输层协议。取值大小写敏感。取值范围：

- tcp：TCP协议。
- udp：UDP协议。
- icmp：ICMP协议。
- gre：GRE协议。
- all：支持所有协议。',
            'type' => 'string',
            'required' => true,
            'example' => 'all',
            'enum' => 
            array (
              0 => 'tcp',
              1 => 'udp',
              2 => 'icmp',
              3 => 'gre',
              4 => 'all',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'PortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组开放的传输层协议相关的端口范围。取值范围：
- TCP/UDP协议：取值范围为**1**~**65535**。使用斜线（/）隔开起始端口和终止端口。正确示范：**1/200**；错误示范：**200/1**。
- ICMP协议：**-1/-1**。
- GRE协议：**-1/-1**。
- IpProtocol取值为all：**-1/-1**。',
            'type' => 'string',
            'required' => true,
            'example' => '22/22',
          ),
        ),
        2 => 
        array (
          'name' => 'SecurityGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sg-bp67acfmxazb4p****	',
          ),
        ),
        3 => 
        array (
          'name' => 'Policy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置访问权限。取值范围：

- accept（默认值）：接受访问。
- drop：拒绝访问，不返回拒绝信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'accept',
            'default' => 'accept',
            'enum' => 
            array (
              0 => 'accept',
              1 => 'drop',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组规则优先级。取值范围：**1~100**，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'DestCidrIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的端IP地址范围。支持CIDR格式和IPv4格式的IP地址范围。

默认值：无。

',
            'type' => 'string',
            'required' => true,
            'example' => '10.0.XX.XX/8',
          ),
        ),
        6 => 
        array (
          'name' => 'SourcePortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源端安全组开放的传输层协议相关的端口范围。取值范围：

- TCP/UDP协议：取值范围为**1**~**65535**。使用斜线（/）隔开起始端口和终止端口。正确示范：**1/200**；错误示范：**200/1**。
- ICMP协议：**-1/-1**。
- GRE协议：**-1/-1**。
- IpProtocol取值为all：**-1/-1**。',
            'type' => 'string',
            'required' => false,
            'example' => '22/22',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          8 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<AuthorizeSecurityGroupEgressResponse>\\r\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\r\\n</AuthorizeSecurityGroupEgressResponse>","errorExample":""}]',
      'title' => '添加出方向安全组规则',
      'description' => '安全组的API文档中，流量的发起端为源端（Source），数据传输的接收端为目的端（Dest）。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'LeaveSecurityGroup' => 
    array (
      'summary' => '调用LeaveSecurityGroup将一台ENS实例移出指定的安全组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SecurityGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sg-bp67acfmxazb4p****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-bp67acfmxazb4p****',
          ),
        ),
        2 => 
        array (
          'name' => 'NetworkInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'eni-58z57orgmt6d1****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'SecurityGroupRule.NotFound',
            'errorMessage' => 'The input security group rule does not exist.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specified InstanceId does not exist.',
          ),
          10 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          11 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<LeaveSecurityGroupResponse>\\r\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\r\\n</LeaveSecurityGroupResponse>","errorExample":""}]',
      'title' => '移出安全组',
      'description' => '移出安全组之前，实例必须处于已停止（Stopped）或者运行中（Running）状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSecurityGroups' => 
    array (
      'summary' => '调用DescribeSecurityGroups查询已创建的安全组的基本信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SecurityGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'sg-bp67acfmxazb4ph***',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组列表的页码。

- 起始值：1。
- 默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数。

- 最大值：50。
- 默认值：10。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'SecurityGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'DocTest',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'PageNumber' => 
              array (
                'description' => '安全组列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '分页查询时分页总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '49',
              ),
              'SecurityGroups' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SecurityGroup' => 
                  array (
                    'description' => '安全组。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => '创建时间。按照ISO8601标准表示，并需要使用UTC时间。格式为yyyy-MM-ddTHH:mm:ssZ。',
                          'type' => 'string',
                          'example' => '2019-11-01T06:08:46Z',
                        ),
                        'InstanceCount' => 
                        array (
                          'description' => '关联实例数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5',
                        ),
                        'Description' => 
                        array (
                          'description' => '安全组描述信息。',
                          'type' => 'string',
                          'example' => 'TestDescription',
                        ),
                        'SecurityGroupId' => 
                        array (
                          'description' => '安全组ID。',
                          'type' => 'string',
                          'example' => 'sg-bp67acfmxazb4ph***',
                        ),
                        'SecurityGroupName' => 
                        array (
                          'description' => '安全组名称。',
                          'type' => 'string',
                          'example' => 'DocTest',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'SecurityGroupRule.NotFound',
            'errorMessage' => 'The input security group rule does not exist.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specified InstanceId does not exist.',
          ),
          10 => 
          array (
            'errorCode' => 'DependencyViolation',
            'errorMessage' => 'There is still instance(s) in the specified security group.',
          ),
          11 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          12 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 49,\\n  \\"SecurityGroups\\": {\\n    \\"SecurityGroup\\": [\\n      {\\n        \\"CreationTime\\": \\"2019-11-01T06:08:46Z\\",\\n        \\"InstanceCount\\": 5,\\n        \\"Description\\": \\"TestDescription\\",\\n        \\"SecurityGroupId\\": \\"sg-bp67acfmxazb4ph***\\",\\n        \\"SecurityGroupName\\": \\"DocTest\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSecurityGroupsResponse>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>49</TotalCount>\\n    <PageSize>1</PageSize>\\n    <RequestId>A1707FC0-430C-423A-B624-284046B20399</RequestId>\\n    <SecurityGroups>\\n        <SecurityGroup>\\n            <CreationTime>2019-11-01T06:08:46Z</CreationTime>\\n            <SecurityGroupId>sg-bp67acfmxazb4ph***</SecurityGroupId>\\n            <SecurityGroupName>DocTest</SecurityGroupName>\\n            <Description/>\\n            <InstanceCount>5</InstanceCount>\\n        </SecurityGroup>\\n    </SecurityGroups>\\n</DescribeSecurityGroupsResponse>","errorExample":""}]',
      'title' => '查询安全组信息',
    ),
    'DeleteSecurityGroup' => 
    array (
      'summary' => '调用DeleteSecurityGroup删除一个安全组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SecurityGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sg-bp67acfmxazb4ph***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'SecurityGroupRule.NotFound',
            'errorMessage' => 'The input security group rule does not exist.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specified InstanceId does not exist.',
          ),
          10 => 
          array (
            'errorCode' => 'DependencyViolation',
            'errorMessage' => 'There is still instance(s) in the specified security group.',
          ),
          11 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          12 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteSecurityGroupResponse>\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</DeleteSecurityGroupResponse>","errorExample":""}]',
      'title' => '删除安全组',
      'description' => '删除安全组之前，请确保安全组内不存在实例。',
    ),
    'DescribeSecurityGroupAttribute' => 
    array (
      'summary' => '调用DescribeSecurityGroupAttribute查询一个安全组的安全组规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SecurityGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sg-bp67acfmxazb4ph***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'Description' => 
              array (
                'description' => '安全组描述信息。',
                'type' => 'string',
                'example' => 'testDescription1',
              ),
              'SecurityGroupId' => 
              array (
                'description' => '目标安全组ID。',
                'type' => 'string',
                'example' => 'sg-bp1gxw6bznjjvhu3****',
              ),
              'SecurityGroupName' => 
              array (
                'description' => '目标安全组名称。',
                'type' => 'string',
                'example' => 'testSecurityGroupName2',
              ),
              'Permissions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Permission' => 
                  array (
                    'description' => '规则。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => '创建时间，UTC时间。',
                          'type' => 'string',
                          'example' => '2018-12-12T07:28:38Z',
                        ),
                        'Direction' => 
                        array (
                          'description' => '授权方向。',
                          'type' => 'string',
                          'example' => 'ingress',
                        ),
                        'Policy' => 
                        array (
                          'description' => '授权策略。',
                          'type' => 'string',
                          'example' => 'Accept',
                        ),
                        'PortRange' => 
                        array (
                          'description' => '源端端口范围。',
                          'type' => 'string',
                          'example' => '80/80',
                        ),
                        'SourceCidrIp' => 
                        array (
                          'description' => '源IP地址段，用于入方向授权。',
                          'type' => 'string',
                          'example' => '0.0.0.0/0',
                        ),
                        'IpProtocol' => 
                        array (
                          'description' => 'IP协议。',
                          'type' => 'string',
                          'example' => 'TCP',
                        ),
                        'DestCidrIp' => 
                        array (
                          'description' => '目标IP地址段，用于出方向授权。',
                          'type' => 'string',
                          'example' => '0.0.0.0/0',
                        ),
                        'Priority' => 
                        array (
                          'description' => '规则优先级。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'SourcePortRange' => 
                        array (
                          'description' => '源端安全组端口范围。',
                          'type' => 'string',
                          'example' => '22/22',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息。',
                          'type' => 'string',
                          'example' => 'testDescription1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'SecurityGroupRule.NotFound',
            'errorMessage' => 'The input security group rule does not exist.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound',
            'errorMessage' => 'The specified InstanceId does not exist.',
          ),
          10 => 
          array (
            'errorCode' => 'DependencyViolation',
            'errorMessage' => 'There is still instance(s) in the specified security group.',
          ),
          11 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          12 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"Description\\": \\"testDescription1\\",\\n  \\"SecurityGroupId\\": \\"sg-bp1gxw6bznjjvhu3****\\",\\n  \\"SecurityGroupName\\": \\"testSecurityGroupName2\\",\\n  \\"Permissions\\": {\\n    \\"Permission\\": [\\n      {\\n        \\"CreationTime\\": \\"2018-12-12T07:28:38Z\\",\\n        \\"Direction\\": \\"ingress\\",\\n        \\"Policy\\": \\"Accept\\",\\n        \\"PortRange\\": \\"80/80\\",\\n        \\"SourceCidrIp\\": \\"0.0.0.0/0\\",\\n        \\"IpProtocol\\": \\"TCP\\",\\n        \\"DestCidrIp\\": \\"0.0.0.0/0\\",\\n        \\"Priority\\": 1,\\n        \\"SourcePortRange\\": \\"22/22\\",\\n        \\"Description\\": \\"testDescription1\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSecurityGroupAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <Description>testDescription1</Description>\\n    <SecurityGroupId>sg-bp1gxw6bznjjvhu3****</SecurityGroupId>\\n    <SecurityGroupName>testSecurityGroupName2</SecurityGroupName>\\n    <Permissions>\\n        <CreationTime>2018-12-12T07:28:38Z</CreationTime>\\n        <Direction>ingress</Direction>\\n        <Policy>Accept</Policy>\\n        <PortRange>80/80</PortRange>\\n        <SourceCidrIp>0.0.0.0/0</SourceCidrIp>\\n        <IpProtocol>TCP</IpProtocol>\\n        <DestCidrIp>0.0.0.0/0</DestCidrIp>\\n        <Priority>1</Priority>\\n        <SourcePortRange>22/22</SourcePortRange>\\n        <Description>testDescription1</Description>\\n    </Permissions>\\n</DescribeSecurityGroupAttributeResponse>","errorExample":""}]',
      'title' => '查询安全组规则',
    ),
    'ModifySecurityGroupAttribute' => 
    array (
      'summary' => '调用ModifySecurityGroupAttribute修改一个安全组的安全组信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SecurityGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sg-bp67acfmxazb4p****',
          ),
        ),
        1 => 
        array (
          'name' => 'SecurityGroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组名称。命名规则如下：

- 长度为2~128个英文或中文字符。
- 必须以大小字母或中文开头，不能以 http://和https://开头。
- 可以包含数字、英文冒号（:）、下划线（_）或者短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'example',
            'maxLength' => 128,
            'minLength' => 2,
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组信息描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'testDescription',
            'maxLength' => 256,
            'minLength' => 2,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'InvalidParameter',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>","errorExample":""}]',
      'title' => '修改安全组属性',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：5次/秒。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateVSwitch' => 
    array (
      'summary' => '调用CreateVSwitch接口创建交换机。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-xian-unicom',
          ),
        ),
        1 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机的网段。交换机网段要求如下：
- 交换机的网段的掩码长度范围为16~29位。
- 交换机的网段必须从属于所在VPC的网段。
- 交换机的网段不能与所在VPC中路由条目的目标网段相同，但可以是目标网段的子集。',
            'type' => 'string',
            'required' => true,
            'example' => '172.16.0.0/24',
          ),
        ),
        2 => 
        array (
          'name' => 'VSwitchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机名称。命名规则如下：

- 长度为2~128个英文或中文字符。
- 必须以大小字母或中文开头，不能以 http://和https://开头。可以包含数字、半角冒号（:）、下划线（_）或者连字符（-）。

默认值：空。',
            'type' => 'string',
            'required' => false,
            'example' => 'Test交换机',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机的描述信息。

描述长度为2~256个字符，必须以字母或中文开头，但不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my vswitch.',
          ),
        ),
        4 => 
        array (
          'name' => 'NetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要创建的交换机所属的网络ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'n-257gqcdfvx6n****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'VSwitchId' => 
              array (
                'description' => '交换机ID。',
                'type' => 'string',
                'example' => 'vsw-5****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          6 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          7 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          8 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"VSwitchId\\": \\"vsw-5****\\",\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateVSwitchResponse>\\n    <VSwitchId>vsw-5****</VSwitchId>\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</CreateVSwitchResponse>","errorExample":""}]',
      'title' => '创建交换机',
    ),
    'DeleteVSwitch' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vsw-5m9xhl****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          8 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteVSwitchResponse>\\r\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\r\\n</DeleteVSwitchResponse>","errorExample":""}]',
      'title' => '删除交换机',
      'summary' => '调用DeleteVSwitch删除一个交换机。',
      'description' => '删除交换机之前，请确保交换机不存在实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyVSwitchAttribute' => 
    array (
      'summary' => '调用ModifyVSwitchAttribute修改网络信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'n-****',
          ),
        ),
        1 => 
        array (
          'name' => 'VSwitchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机名称。

- 长度为2~128个英文或中文字符。
- 必须以大小写字母或中文开头，不能以 http:// 或 https:// 开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'Test-switch',
            'maxLength' => 128,
            'minLength' => 2,
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述信息。

- 长度为2~256个英文或中文字符。
- 不能以 http:// 或 https:// 开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'this is my first vswitch',
            'maxLength' => 256,
            'minLength' => 2,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'InvalidParameter',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'The specified VSwitchId does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyVSwitchAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</ModifyVSwitchAttributeResponse>","errorExample":""}]',
      'title' => '修改交换机属性',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：5次/秒。',
    ),
    'DescribeVSwitches' => 
    array (
      'summary' => '调用DescribeVSwitches查询可组网的信息，内网按vswitch进行组网。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS节点ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-xian-unicom',
          ),
        ),
        1 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-5m9xhlq8oh***',
          ),
        ),
        2 => 
        array (
          'name' => 'VSwitchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'testVSwitchName',
          ),
        ),
        3 => 
        array (
          'name' => 'NetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的交换机所属VPC的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-25cdvfeq58pl****',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'example' => '10',
            'default' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'OrderByParams',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序使用：格式例子{"EnsRegionId":"desc"}。

默认按节点ID降序排列。

',
            'type' => 'string',
            'required' => false,
            'example' => '{"EnsRegionId":"desc"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '当前查询每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'PageNumber' => 
              array (
                'description' => '当前查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表数据总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'VSwitches' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VSwitch' => 
                  array (
                    'description' => '返回数据列表，详见返回示例（JSON格式）VSwitch对象数组。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EnsRegionId' => 
                        array (
                          'description' => 'ENS节点ID。',
                          'type' => 'string',
                          'example' => 'cn-xian-unicom',
                        ),
                        'Status' => 
                        array (
                          'description' => '交换机的状态，如下所示：

- Pending：配置中。
- Available：可用。',
                          'type' => 'string',
                          'example' => 'Pending',
                        ),
                        'FreeIpCount' => 
                        array (
                          'description' => '可用IP数量。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1024',
                        ),
                        'VSwitchId' => 
                        array (
                          'description' => '交换机ID。',
                          'type' => 'string',
                          'example' => 'vsw-5m9xhlq8oh***',
                        ),
                        'CidrBlock' => 
                        array (
                          'description' => '交换机的IPv4网段。',
                          'type' => 'string',
                          'example' => '10.21.224.0/22',
                        ),
                        'Description' => 
                        array (
                          'description' => '交换机的描述信息。',
                          'type' => 'string',
                          'example' => 'VSwitchDescription',
                        ),
                        'NetworkId' => 
                        array (
                          'description' => '网络ID。',
                          'type' => 'string',
                          'example' => 'vpc-25cdvfeq58pl****',
                        ),
                        'CreatedTime' => 
                        array (
                          'description' => '创建时间，使用UTC时间格式，格式为yyyy-MM-ddTHH:mm:ssZ。',
                          'type' => 'string',
                          'example' => '2020-06-16T06:33:15Z',
                        ),
                        'VSwitchName' => 
                        array (
                          'description' => '交换机名称。',
                          'type' => 'string',
                          'example' => 'testVSwitchName',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidSecurityGroupId.NotFound',
            'errorMessage' => 'The specified SecurityGroupId does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'SecurityGroupRuleConflict.Duplicated',
            'errorMessage' => 'The SecurityGroup rule already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'AuthorizationLimitExceed',
            'errorMessage' => 'The limit of authorization records in the security group reaches.',
          ),
          7 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          8 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 2,\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 3,\\n  \\"VSwitches\\": {\\n    \\"VSwitch\\": [\\n      {\\n        \\"EnsRegionId\\": \\"cn-xian-unicom\\",\\n        \\"Status\\": \\"Pending\\",\\n        \\"FreeIpCount\\": 1024,\\n        \\"VSwitchId\\": \\"vsw-5m9xhlq8oh***\\",\\n        \\"CidrBlock\\": \\"10.21.224.0/22\\",\\n        \\"Description\\": \\"VSwitchDescription\\",\\n        \\"NetworkId\\": \\"vpc-25cdvfeq58pl****\\",\\n        \\"CreatedTime\\": \\"2020-06-16T06:33:15Z\\",\\n        \\"VSwitchName\\": \\"testVSwitchName\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeVSwitchesResponse>\\n    <PageSize>2</PageSize>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>3</TotalCount>\\n    <VSwitches>\\n        <EnsRegionId>cn-xian-unicom</EnsRegionId>\\n        <Status>Pending</Status>\\n        <FreeIpCount>1024</FreeIpCount>\\n        <VSwitchId>vsw-5m9xhlq8oh***</VSwitchId>\\n        <CidrBlock>10.21.224.0/22</CidrBlock>\\n        <Description>VSwitchDescription</Description>\\n        <NetworkId>vpc-25cdvfeq58pl****</NetworkId>\\n        <CreatedTime>2020-06-16T06:33:15Z</CreatedTime>\\n        <VSwitchName>testVSwitchName</VSwitchName>\\n    </VSwitches>\\n</DescribeVSwitchesResponse>","errorExample":""}]',
      'title' => '查询交换机信息',
    ),
    'CreateClassicNetwork' => 
    array (
      'summary' => '调用CreateClassicNetwork创建一个经典专有网络。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => 'ENS的节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-chengdu-xxxx-4',
          ),
        ),
        1 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络的网段。您可以使用以下网段或其子集作为network的网段：

- 10.0.0.0/8（默认值）。
- 172.16.0.0/12。
- 192.168.0.0/16。',
            'type' => 'string',
            'required' => true,
            'example' => '10.0.0.0/16',
          ),
        ),
        2 => 
        array (
          'name' => 'NetworkName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络名称。命名规则如下：

- 长度为2~128个英文或中文字符。
- 必须以大小字母或中文开头，不能以 http://和https://开头。
- 可以包含数字、英文冒号（:）、下划线（_）或者短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'example',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述信息。命名规则如下：

* 长度为 2~256 个字符，必须以字母或中文开头，但不能以 http://或 https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my vswitch.',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1A004E06-AC1B-5806-BA5E-41AB6B02DE83',
              ),
              'NetworkId' => 
              array (
                'description' => '网络ID。',
                'type' => 'string',
                'example' => 'n-5s9ayrxsd9hszrlt5fgv2****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'InvalidParameter',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.CidrBlock',
            'errorMessage' => 'The specified parameter CidrBlock is invalid.	',
          ),
          2 => 
          array (
            'errorCode' => 'Network.QuotaExceeded',
            'errorMessage' => 'Network quota exceeded',
          ),
          3 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.	',
          ),
          4 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'MissingParameter',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidEnsRegionId.NotFound',
            'errorMessage' => 'The input parameter ensRegionId that is not found.	',
          ),
          6 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"1A004E06-AC1B-5806-BA5E-41AB6B02DE83\\",\\n  \\"NetworkId\\": \\"n-5s9ayrxsd9hszrlt5fgv2****\\"\\n}","type":"json"}]',
      'title' => '创建经典专有网络',
    ),
    'DescribeNetworkInterfaces' => 
    array (
      'summary' => '调用DescribeNetworkInterfaces查看网卡列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'eni-58z57orgmt6d1****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-5t7z99n32gplriv',
          ),
        ),
        2 => 
        array (
          'name' => 'NetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'n-2zeuphj08tt7q3brd****',
          ),
        ),
        3 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-12345',
          ),
        ),
        4 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所属地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-tianjin-cmcc',
          ),
        ),
        5 => 
        array (
          'name' => 'SecurityGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '辅助网卡对应的安全组ID。 如果您需要通过安全组ID查询辅助网卡的信息，请指定该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'sg-5p1fg655nh68xyz9i***',
          ),
        ),
        6 => 
        array (
          'name' => 'PrimaryIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡主IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '10.XXX.XXX.5',
          ),
        ),
        7 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡类型。取值范围：
- Primary：主网卡。
- Secondary：辅助网卡。

默认值：空，表示查询所有类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'Secondary',
            'enum' => 
            array (
              0 => 'Primary',
              1 => 'Secondary',
            ),
          ),
        ),
        8 => 
        array (
          'name' => 'NetworkInterfaceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-01',
            'maxLength' => 128,
          ),
        ),
        9 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡的状态。取值范围：

- Available：可用。
- Attaching：附加中。
- InUse：已附加。
- Detaching：分离中。
- Deleting：删除中。

默认值：空，表示查询所有状态。',
            'type' => 'string',
            'required' => false,
            'example' => 'Available',
          ),
        ),
        10 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例状态列表的页码，起始值为1。                              默认值：1。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        11 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为100，默认值为50。',
            'type' => 'string',
            'required' => false,
            'maximum' => '100',
            'example' => '50',
            'default' => '50',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '弹性网卡信息组成的集合。',
            'type' => 'object',
            'properties' => 
            array (
              'NetworkInterfaceSets' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'NetworkInterfaceSet' => 
                  array (
                    'description' => '弹性网卡信息组成的集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '弹性网卡信息组成的集合。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => '创建时间。按照ISO8601标准表示，并需要使用UTC时间。格式为：yyyy-MM-ddThh:mmZ。',
                          'type' => 'string',
                          'example' => '2022-02-22T03:53:25Z',
                        ),
                        'EnsRegionId' => 
                        array (
                          'description' => 'ENS的节点ID。',
                          'type' => 'string',
                          'example' => 'id-jakarta-1',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '弹性网卡绑定的实例ID。',
                          'type' => 'string',
                          'example' => 'i-5siavnr3',
                        ),
                        'MacAddress' => 
                        array (
                          'description' => '弹性网卡的MAC地址。',
                          'type' => 'string',
                          'example' => '00:16:XXX:XXX:60:0a',
                        ),
                        'NetworkInterfaceId' => 
                        array (
                          'description' => '弹性网卡ID。',
                          'type' => 'string',
                          'example' => 'eni-uf686a5',
                        ),
                        'PrimaryIp' => 
                        array (
                          'description' => '主私网IP。',
                          'type' => 'string',
                          'example' => '10.XXX.XXX.25',
                        ),
                        'PrimaryIpType' => 
                        array (
                          'description' => '主IP地址类型。取值：
- **Public**：公网地址
- **Private**：私网地址',
                          'type' => 'string',
                          'example' => 'Private',
                        ),
                        'Status' => 
                        array (
                          'description' => '网卡的状态，取值：
- Available：可用。
- Attaching：附加中。
- InUse：已附加。
- Detaching：分离中。
- Deleting：删除中。',
                          'type' => 'string',
                          'example' => 'InUse',
                        ),
                        'NetworkId' => 
                        array (
                          'description' => '网络ID。',
                          'type' => 'string',
                          'example' => 'n-5w0qd03adw****',
                        ),
                        'VSwitchId' => 
                        array (
                          'description' => '交换机ID。',
                          'type' => 'string',
                          'example' => 'vsw-5rqswx1trlsj9',
                        ),
                        'PrivateIpSets' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PrivateIpSet' => 
                            array (
                              'description' => 'PrivateIpSet组成的集合。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'PrivateIpSet组成的集合。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'PrivateIpAddress' => 
                                  array (
                                    'description' => '私网IP。',
                                    'type' => 'string',
                                    'example' => '192.XXX.XXX.130',
                                  ),
                                  'Primary' => 
                                  array (
                                    'description' => '是否是主私网IP地址。可能值：
- true：主私网IP。
- false：辅助私网IP。',
                                    'type' => 'boolean',
                                    'example' => 'true',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'NetworkInterfaceName' => 
                        array (
                          'description' => '弹性网卡的名称。',
                          'type' => 'string',
                          'example' => 'primaryTest',
                        ),
                        'Description' => 
                        array (
                          'description' => '弹性网卡的描述。',
                          'type' => 'string',
                          'example' => 'test-description',
                        ),
                        'SecurityGroupIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SecurityGroup' => 
                            array (
                              'description' => '安全组ID。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '安全组ID。',
                                'type' => 'string',
                                'example' => 'sg-5p1bozeiw711a1***',
                              ),
                            ),
                          ),
                        ),
                        'Type' => 
                        array (
                          'description' => '弹性网卡类型。取值范围：
- Primary：主网卡。
- Secondary：辅助网卡。',
                          'type' => 'string',
                          'example' => 'Primary',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '实例状态列表的页码，起始值为：**1**，默认值：**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '50',
              ),
              'TotalCount' => 
              array (
                'description' => '列表数据总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '49',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '708AF9CE-FF92-5DF9-93F8-B7754AB1061A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"NetworkInterfaceSets\\": {\\n    \\"NetworkInterfaceSet\\": [\\n      {\\n        \\"CreationTime\\": \\"2022-02-22T03:53:25Z\\",\\n        \\"EnsRegionId\\": \\"id-jakarta-1\\",\\n        \\"InstanceId\\": \\"i-5siavnr3\\",\\n        \\"MacAddress\\": \\"00:16:XXX:XXX:60:0a\\",\\n        \\"NetworkInterfaceId\\": \\"eni-uf686a5\\",\\n        \\"PrimaryIp\\": \\"10.XXX.XXX.25\\",\\n        \\"PrimaryIpType\\": \\"Private\\",\\n        \\"Status\\": \\"InUse\\",\\n        \\"NetworkId\\": \\"n-5w0qd03adw****\\",\\n        \\"VSwitchId\\": \\"vsw-5rqswx1trlsj9\\",\\n        \\"PrivateIpSets\\": {\\n          \\"PrivateIpSet\\": [\\n            {\\n              \\"PrivateIpAddress\\": \\"192.XXX.XXX.130\\",\\n              \\"Primary\\": true\\n            }\\n          ]\\n        },\\n        \\"NetworkInterfaceName\\": \\"primaryTest\\",\\n        \\"Description\\": \\"test-description\\",\\n        \\"SecurityGroupIds\\": {\\n          \\"SecurityGroup\\": [\\n            \\"sg-5p1bozeiw711a1***\\"\\n          ]\\n        },\\n        \\"Type\\": \\"Primary\\"\\n      }\\n    ]\\n  },\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 50,\\n  \\"TotalCount\\": 49,\\n  \\"RequestId\\": \\"708AF9CE-FF92-5DF9-93F8-B7754AB1061A\\"\\n}","type":"json"}]',
      'title' => '查看网卡列表',
    ),
    'DescribeEnsRouteEntryList' => 
    array (
      'summary' => '调用DescribeEnsRouteEntryList查询路由条目列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要查询的路由表的ID。',
            'description' => '要查询的路由表的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vtb-hp3wdhynneo7fsclox8hs',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要查询的路由条目的ID。',
            'description' => '要查询的路由条目的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rte-8vbdw66evgv44u2u7v3hx',
          ),
        ),
        2 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '路由条目的目标网段',
            'description' => '路由条目的目标网段',
            'type' => 'string',
            'required' => false,
            'example' => '11.0.0.0/16',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteEntryType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '路由条目的类型',
            'description' => '路由条目的类型。取值：
- Custom：自定义路由。
- System：系统路由。',
            'type' => 'string',
            'required' => false,
            'example' => 'Custom',
            'enum' => 
            array (
              0 => 'System',
              1 => 'Custom',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'NextHopType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '下一跳类型',
            'description' => '自定义路由条目的下一跳的类型，取值：
- Instance（默认值）：ENS实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'Instance',
            'enum' => 
            array (
              0 => 'Instance',
            ),
          ),
        ),
        5 => 
        array (
          'name' => 'NextHopId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '下一跳实例ID。',
            'description' => '下一跳实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-2zecshuv3axtr2gc4noa',
          ),
        ),
        6 => 
        array (
          'name' => 'RouteEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '路由条目的名称。',
            'description' => '路由条目的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test0',
          ),
        ),
        7 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '列表的页码，默认值为1。',
            'description' => '查询列表的页码。取值：>0，默认查询第1页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页查询时每页的行数，最大值为100，默认值为10。',
            'description' => '分页查询时设置的每页行数。默认值：10，取值：10~100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'RouteEntrys' => 
              array (
                'title' => '路由条目信息。',
                'description' => '路由条目信息。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '路由条目信息。',
                  'description' => '路由条目信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'title' => '路由条目的状态',
                      'description' => '路由条目的状态',
                      'type' => 'string',
                      'example' => 'Available',
                    ),
                    'Type' => 
                    array (
                      'title' => '路由条目的类型',
                      'description' => '路由条目的类型',
                      'type' => 'string',
                      'example' => 'Custom',
                    ),
                    'Description' => 
                    array (
                      'title' => '路由条目的描述信息。',
                      'description' => '路由条目的描述信息。',
                      'type' => 'string',
                      'example' => '测试',
                    ),
                    'RouteEntryName' => 
                    array (
                      'title' => '路由条目的名称。',
                      'description' => '路由条目的名称。',
                      'type' => 'string',
                      'example' => 'test0',
                    ),
                    'DestinationCidrBlock' => 
                    array (
                      'title' => '路由条目的目标网段。',
                      'description' => '路由条目的目标网段。',
                      'type' => 'string',
                      'example' => '101.0.45.0/24',
                    ),
                    'RouteEntryId' => 
                    array (
                      'title' => '路由条目的ID。',
                      'description' => '路由条目的ID。',
                      'type' => 'string',
                      'example' => 'rte-2zeksx7h436f5unk349m1',
                    ),
                    'RouteTableId' => 
                    array (
                      'title' => '路由表ID。',
                      'description' => '路由表ID。',
                      'type' => 'string',
                      'example' => 'vtb-uf62p9o5cn35fi8xgurnm',
                    ),
                    'NextHops' => 
                    array (
                      'title' => '下一跳',
                      'description' => '下一跳信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'title' => '下一跳',
                        'description' => '下一跳',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'NextHopId' => 
                          array (
                            'title' => '下一跳实例ID。',
                            'description' => '下一跳实例ID。',
                            'type' => 'string',
                            'example' => 'i-bp1111yup9991890woxq',
                          ),
                          'NextHopType' => 
                          array (
                            'title' => '下一跳类型',
                            'description' => '下一跳类型。',
                            'type' => 'string',
                            'example' => 'Instance',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'title' => '',
                'description' => '当前查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"RouteEntrys\\": [\\n    {\\n      \\"Status\\": \\"Available\\",\\n      \\"Type\\": \\"Custom\\",\\n      \\"Description\\": \\"测试\\",\\n      \\"RouteEntryName\\": \\"test0\\",\\n      \\"DestinationCidrBlock\\": \\"101.0.45.0/24\\",\\n      \\"RouteEntryId\\": \\"rte-2zeksx7h436f5unk349m1\\",\\n      \\"RouteTableId\\": \\"vtb-uf62p9o5cn35fi8xgurnm\\",\\n      \\"NextHops\\": [\\n        {\\n          \\"NextHopId\\": \\"i-bp1111yup9991890woxq\\",\\n          \\"NextHopType\\": \\"Instance\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 7\\n}","type":"json"}]',
      'title' => '查询路由条目列表',
    ),
    'DeleteEnsRouteEntry' => 
    array (
      'summary' => '调用DeleteEnsRouteEntry删除自定义路由条目。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RouteEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要删除的路由条目ID。',
            'description' => '要删除的路由条目ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'rte-8vbmb2890wiret5maqq25',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidRouteEntry.NotFound',
            'errorMessage' => 'Route entry not exists.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidRouteEntry.SystemRoute',
            'errorMessage' => 'Specified operation is denied as route entry type is system.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectRouteEntryStatus',
            'errorMessage' => 'Some route entry status blocked this operation.	',
          ),
          5 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          6 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","type":"json"}]',
      'title' => '删除自定义路由条目',
    ),
    'CreateEnsRouteEntry' => 
    array (
      'summary' => '调用CreateEnsRouteEntry创建自定义路由条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要创建自定义路由条目的路由表ID。',
            'description' => '要创建自定义路由条目的路由表ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vtb-bp1cifr72dioje82lse2j',
          ),
        ),
        1 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '自定义路由条目的目标网段。',
            'description' => '自定义路由条目的目标网段。需满足以下要求：
- 目标网段不能指向100.64.0.0/10或被100.64.0.0/10包含。
- 同一张路由表内的不同路由条目的目标网段不能相同。
- 0.0.0.0/0表示默认',
            'type' => 'string',
            'required' => true,
            'example' => '0.0.0.0/0',
          ),
        ),
        2 => 
        array (
          'name' => 'NextHopType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '自定义路由条目的下一跳的类型',
            'description' => '自定义路由条目的下一跳的类型，取值：
- Instance（默认值）：ENS实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'Instance',
            'default' => 'Instance',
            'enum' => 
            array (
              0 => 'Instance',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'NextHopId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '自定义路由条目的下一跳实例的ID。',
            'description' => '自定义路由条目的下一跳实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-5vb7leks9z4mxy1ay258',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要创建的自定义路由条目的名称。',
            'description' => '要创建的自定义路由条目的名称。长度为1~128个字符，但不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
            'maxLength' => 128,
            'minLength' => 2,
          ),
        ),
        5 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '自定义路由条目的描述信息。',
            'description' => '自定义路由条目的描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'example',
            'maxLength' => 256,
            'minLength' => 2,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'RouteEntryId' => 
              array (
                'title' => '路由条目id。',
                'description' => '路由条目ID。',
                'type' => 'string',
                'example' => 'rte-5vb5q8sk0lyoscx8539ds',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'Specified route table does not exist.	',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectNetworkStatus',
            'errorMessage' => 'Current Network status does not support this operation.	',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectNetworkType',
            'errorMessage' => 'Current Network type does not support this operation.	',
          ),
          5 => 
          array (
            'errorCode' => 'QuotaExceeded',
            'errorMessage' => 'Route entry quota exceeded in this route table.	',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidRouteEntry.Duplicate',
            'errorMessage' => 'The route entry already exist.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidInstanId.NotFound',
            'errorMessage' => 'Specified instance does not exist.',
          ),
          8 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Malformed',
            'errorMessage' => 'Specified CIDR block is not valid.	',
          ),
          10 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"RouteEntryId\\": \\"rte-5vb5q8sk0lyoscx8539ds\\"\\n}","type":"json"}]',
      'title' => '创建自定义路由条目',
    ),
    'DeleteNetwork' => 
    array (
      'summary' => '调用DeleteNetwork删除一个专有网络。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'n-5***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidNetworkId.NotFound',
            'errorMessage' => 'Network not found',
          ),
          1 => 
          array (
            'errorCode' => 'DependencyViolation.VSwitch',
            'errorMessage' => 'Specified network has vswitch.',
          ),
          2 => 
          array (
            'errorCode' => 'DependencyViolation.RouteEntry',
            'errorMessage' => 'Specified network has route entry.',
          ),
          3 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'InvalidParameter',
          ),
          5 => 
          array (
            'errorCode' => 'DependencyViolation.NetworkAcl',
            'errorMessage' => 'Specified network has network acl.',
          ),
          6 => 
          array (
            'errorCode' => 'DependencyViolation.NAT',
            'errorMessage' => 'Specified network has nat instance.',
          ),
          7 => 
          array (
            'errorCode' => 'DependencyViolation.CloudInstance',
            'errorMessage' => 'Specified network has nat cloud instance.',
          ),
          8 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteNetworkResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</DeleteNetworkResponse>","errorExample":""}]',
      'title' => '删除网络',
    ),
    'DescribeNetworks' => 
    array (
      'summary' => '调用DescribeNetworks查询网络列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'n-5***',
          ),
        ),
        1 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS节点ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing-telecom',
          ),
        ),
        2 => 
        array (
          'name' => 'NetworkName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'example',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'TotalCount' => 
              array (
                'description' => '列表数据总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'PageSize' => 
              array (
                'description' => '当前查询每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PageNumber' => 
              array (
                'description' => '当前查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Networks' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Network' => 
                  array (
                    'description' => '网络列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '网络列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EnsRegionId' => 
                        array (
                          'description' => 'ENS节点ID。',
                          'type' => 'string',
                          'example' => 'cn-beijing',
                        ),
                        'NetworkId' => 
                        array (
                          'description' => '网路ID。',
                          'type' => 'string',
                          'example' => 'n-5***',
                        ),
                        'NetworkName' => 
                        array (
                          'description' => '网络名称。',
                          'type' => 'string',
                          'example' => 'example',
                        ),
                        'CidrBlock' => 
                        array (
                          'description' => '网络的IPv4网段。',
                          'type' => 'string',
                          'example' => '10.0.xx.xx/24',
                        ),
                        'Status' => 
                        array (
                          'description' => '网络的状态，取值：

- Pending：配置中。
- Available：可用。',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'Description' => 
                        array (
                          'description' => '网络的描述信息。',
                          'type' => 'string',
                          'example' => 'exampleDescription',
                        ),
                        'CreatedTime' => 
                        array (
                          'description' => '创建时间，时间戳（毫秒）。',
                          'type' => 'string',
                          'example' => '1653620630000',
                        ),
                        'VSwitchIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'VSwitchId' => 
                            array (
                              'description' => '网络中交换机的列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '网络中交换机的列表。',
                                'type' => 'string',
                                'example' => 'vsw-bp1nhbnpv2blyz8dl****',
                              ),
                            ),
                          ),
                        ),
                        'RouterTableId' => 
                        array (
                          'description' => '路由表ID。',
                          'type' => 'string',
                          'example' => 'rtb-5**',
                        ),
                        'NetworkAclId' => 
                        array (
                          'description' => '网络ACL的ID。',
                          'type' => 'string',
                          'example' => 'nacl-a2do9e413e0spxscd****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"TotalCount\\": 3,\\n  \\"PageSize\\": 2,\\n  \\"PageNumber\\": 1,\\n  \\"Networks\\": {\\n    \\"Network\\": [\\n      {\\n        \\"EnsRegionId\\": \\"cn-beijing\\",\\n        \\"NetworkId\\": \\"n-5***\\",\\n        \\"NetworkName\\": \\"example\\",\\n        \\"CidrBlock\\": \\"10.0.xx.xx/24\\",\\n        \\"Status\\": \\"Available\\",\\n        \\"Description\\": \\"exampleDescription\\",\\n        \\"CreatedTime\\": \\"1653620630000\\",\\n        \\"VSwitchIds\\": {\\n          \\"VSwitchId\\": [\\n            \\"vsw-bp1nhbnpv2blyz8dl****\\"\\n          ]\\n        },\\n        \\"RouterTableId\\": \\"rtb-5**\\",\\n        \\"NetworkAclId\\": \\"nacl-a2do9e413e0spxscd****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeNetworksResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <TotalCount>3</TotalCount>\\n    <PageSize>2</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <Networks>\\n        <EnsRegionId>cn-beijing</EnsRegionId>\\n        <NetworkId>n-5***</NetworkId>\\n        <NetworkName>example</NetworkName>\\n        <CidrBlock>10.0.xx.xx/24</CidrBlock>\\n        <Status>Available</Status>\\n        <Description>exampleDescription</Description>\\n        <CreatedTime>1653620630000</CreatedTime>\\n        <VSwitchIds>vsw-bp1nhbnpv2blyz8dl****</VSwitchIds>\\n        <RouterTableId>rtb-5**</RouterTableId>\\n        <NetworkAclId>nacl-a2do9e413e0spxscd****</NetworkAclId>\\n    </Networks>\\n</DescribeNetworksResponse>","errorExample":""}]',
      'title' => '查询网络列表',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'ModifyNetworkAttribute' => 
    array (
      'summary' => '修改网络信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'n-****',
          ),
        ),
        1 => 
        array (
          'name' => 'NetworkName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络名称。命名规则如下：

- 长度为2~128个英文或中文字符。
- 必须以大小写字母或中文开头，不能以 http://和https://开头。
- 可以包含数字、英文冒号（:）、下划线（_）或者短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
            'maxLength' => 128,
            'minLength' => 2,
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述信息。

长度为2~256个字符，必须以字母或中文开头，但不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'this is my first network',
            'maxLength' => 256,
            'minLength' => 2,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'InvalidParameter',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidNetworkId.NotFound',
            'errorMessage' => 'Network not found',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyNetworkAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</ModifyNetworkAttributeResponse>","errorExample":""}]',
      'title' => '修改网络属性',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：5次/秒。',
    ),
    'DescribeNetworkAttribute' => 
    array (
      'summary' => '调用DescribeNetworkAttribute查询指定网络的配置信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'n-****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'EnsRegionId' => 
              array (
                'description' => 'ENS节点ID。',
                'type' => 'string',
                'example' => 'cn-beijing',
              ),
              'NetworkId' => 
              array (
                'description' => '网络ID。',
                'type' => 'string',
                'example' => 'n-5***',
              ),
              'NetworkName' => 
              array (
                'description' => '网路名称。',
                'type' => 'string',
                'example' => 'abc',
              ),
              'CidrBlock' => 
              array (
                'description' => '网络的IPv4网段。',
                'type' => 'string',
                'example' => '10.0.0.0/24',
              ),
              'Status' => 
              array (
                'description' => '网络的状态，取值：

- Pending：配置中。
- Available：可用。',
                'type' => 'string',
                'example' => 'Available',
              ),
              'Description' => 
              array (
                'description' => '网络的描述信息。',
                'type' => 'string',
                'example' => 'abc',
              ),
              'CreatedTime' => 
              array (
                'description' => '创建时间，使用UTC时间格式，格式为yyyy-MM-ddTHH:mm:ssZ。',
                'type' => 'string',
                'example' => '2019-06-01T00:00:00Z',
              ),
              'VSwitchIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VSwitchId' => 
                  array (
                    'description' => '网络下的交换机列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '网络下的交换机列表。',
                      'type' => 'string',
                      'example' => '{"VSwitchId": [ "vsw-bp14cagpfysr29feg****" ]}',
                    ),
                  ),
                ),
              ),
              'CloudResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CloudResourceSetType' => 
                  array (
                    'description' => '网络下的资源列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'Schema of Response',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ResourceCount' => 
                        array (
                          'description' => '网络下的资源数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'ResourceType' => 
                        array (
                          'description' => '资源类型。
VSwitch。',
                          'type' => 'string',
                          'example' => 'VSwitch',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RouterTableId' => 
              array (
                'description' => '路由表id',
                'type' => 'string',
                'example' => 'rtb-5***',
              ),
              'NetworkAclId' => 
              array (
                'description' => '网络ACL的ID。',
                'type' => 'string',
                'example' => 'nacl-a2do9e413e0sp****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidNetworkId.NotFound',
            'errorMessage' => 'Network not found',
          ),
          1 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"EnsRegionId\\": \\"cn-beijing\\",\\n  \\"NetworkId\\": \\"n-5***\\",\\n  \\"NetworkName\\": \\"abc\\",\\n  \\"CidrBlock\\": \\"10.0.0.0/24\\",\\n  \\"Status\\": \\"Available\\",\\n  \\"Description\\": \\"abc\\",\\n  \\"CreatedTime\\": \\"2019-06-01T00:00:00Z\\",\\n  \\"VSwitchIds\\": {\\n    \\"VSwitchId\\": [\\n      \\"{\\\\\\"VSwitchId\\\\\\": [ \\\\\\"vsw-bp14cagpfysr29feg****\\\\\\" ]}\\"\\n    ]\\n  },\\n  \\"CloudResources\\": {\\n    \\"CloudResourceSetType\\": [\\n      {\\n        \\"ResourceCount\\": 3,\\n        \\"ResourceType\\": \\"VSwitch\\"\\n      }\\n    ]\\n  },\\n  \\"RouterTableId\\": \\"rtb-5***\\",\\n  \\"NetworkAclId\\": \\"nacl-a2do9e413e0sp****\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeNetworkAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <EnsRegionId>cn-beijing</EnsRegionId>\\n    <NetworkId>n-5***</NetworkId>\\n    <NetworkName>abc</NetworkName>\\n    <CidrBlock>10.0.0.0/24</CidrBlock>\\n    <Status>Available</Status>\\n    <Description>abc</Description>\\n    <CreatedTime>2019-06-01T00:00:00Z</CreatedTime>\\n    <VSwitchIds>{\\"VSwitchId\\": [ \\"vsw-bp14cagpfysr29feg****\\" ]}</VSwitchIds>\\n    <CloudResources>\\n        <ResourceCount>3</ResourceCount>\\n        <ResourceType>VSwitch</ResourceType>\\n    </CloudResources>\\n</DescribeNetworkAttributeResponse>","errorExample":""}]',
      'title' => '查询网络信息',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'CreateNetwork' => 
    array (
      'summary' => '调用CreateNetwork创建一个专有网络。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS的节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-beijing-telecom',
          ),
        ),
        1 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络的网段。您可以使用以下网段或其子集作为network的网段：

- 10.0.0.0/8（默认值）。
- 172.16.0.0/12。
- 192.168.0.0/16。',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.0.0/24',
          ),
        ),
        2 => 
        array (
          'name' => 'NetworkName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络名称。命名规则如下：

- 长度为2~128个英文或中文字符。
- 必须以大小字母或中文开头，不能以 http://和https://开头。
- 可以包含数字、英文冒号（:）、下划线（_）或者短划线（-）。
',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
            'maxLength' => 128,
            'minLength' => 2,
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述信息。

长度为2~256个字符，必须以字母或中文开头，但不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'this is my first network',
            'maxLength' => 256,
            'minLength' => 2,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'NetworkId' => 
              array (
                'description' => '网络ID。',
                'type' => 'string',
                'example' => 'n-5***',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'InvalidParameter',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.CidrBlock',
            'errorMessage' => 'The specified parameter CidrBlock is invalid.	',
          ),
          2 => 
          array (
            'errorCode' => 'Network.QuotaExceeded',
            'errorMessage' => 'Network quota exceeded',
          ),
          3 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.	',
          ),
          4 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'MissingParameter',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidEnsRegionId.NotFound',
            'errorMessage' => 'The input parameter ensRegionId that is not found.	',
          ),
          6 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"NetworkId\\": \\"n-5***\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateNetworkResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <NetworkId>n-5***</NetworkId>\\n</CreateNetworkResponse>","errorExample":""}]',
      'title' => '创建网络',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：5次/秒。',
    ),
    'DescribeElbAvailableResourceInfo' => 
    array (
      'summary' => '调用DescribeElbAvailableResourceInfo在创建实例时查询可购买资源的规格。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '资源信息集合。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '公共参数，每个请求的ID都是唯一的，可用于排查和定位问题。',
                'type' => 'string',
                'example' => '25AAD194-4A37-51CF-B1CA-1E86FDAC23A6',
              ),
              'ElbAvailableResourceInfo' => 
              array (
                'description' => '资源信息集合。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '资源信息集合。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'EnsRegionId' => 
                    array (
                      'description' => 'ENS的节点ID。',
                      'type' => 'string',
                      'example' => 'cn-guangdong-10',
                    ),
                    'EnName' => 
                    array (
                      'description' => '节点英文名称。',
                      'type' => 'string',
                      'example' => 'cn-guangdong-10',
                    ),
                    'Area' => 
                    array (
                      'description' => '区域。',
                      'type' => 'string',
                      'example' => 'SouthEast',
                    ),
                    'Province' => 
                    array (
                      'description' => '所在省份。',
                      'type' => 'string',
                      'example' => 'Shanghai',
                    ),
                    'Name' => 
                    array (
                      'description' => '节点名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'CanBuyCount' => 
                    array (
                      'description' => '可购买数量。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                    'LoadBalancerSpec' => 
                    array (
                      'description' => '负载均衡实例的规格。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '负载均衡实例的规格。',
                        'type' => 'string',
                        'example' => 'elb.s2.small',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"25AAD194-4A37-51CF-B1CA-1E86FDAC23A6\\",\\n  \\"ElbAvailableResourceInfo\\": [\\n    {\\n      \\"EnsRegionId\\": \\"cn-guangdong-10\\",\\n      \\"EnName\\": \\"cn-guangdong-10\\",\\n      \\"Area\\": \\"SouthEast\\",\\n      \\"Province\\": \\"Shanghai\\",\\n      \\"Name\\": \\"test\\",\\n      \\"CanBuyCount\\": \\"1\\",\\n      \\"LoadBalancerSpec\\": [\\n        \\"elb.s2.small\\"\\n      ]\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询可购买资源的规格',
    ),
    'DescribeLoadBalancerSpec' => 
    array (
      'summary' => '调用DescribeLoadBalancerSpec查询负载均衡规格。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerSpec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的规格。',
            'type' => 'string',
            'required' => false,
            'example' => 'elb.s2.small',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'PageNumber' => 
              array (
                'description' => '实例列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值为100行。                              默认值：10。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'LoadBalancerSpecs' => 
              array (
                'description' => '规格',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '规格',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DisplayName' => 
                    array (
                      'description' => '实例规格显示名称。',
                      'type' => 'string',
                      'example' => 'elb.s1.small',
                    ),
                    'LoadBalancerSpec' => 
                    array (
                      'description' => '负载均衡实例的规格。',
                      'type' => 'string',
                      'example' => 'elb.s1.small',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"PageNumber\\": 10,\\n  \\"PageSize\\": 100,\\n  \\"TotalCount\\": 7,\\n  \\"LoadBalancerSpecs\\": [\\n    {\\n      \\"DisplayName\\": \\"elb.s1.small\\",\\n      \\"LoadBalancerSpec\\": \\"elb.s1.small\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询负载均衡规格',
    ),
    'CreateLoadBalancer' => 
    array (
      'summary' => '调用CreateLoadBalancer接口创建负载均衡实例。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'ENS节点ID。',
            'description' => 'ENS节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-chengdu-telecom',
          ),
        ),
        1 => 
        array (
          'name' => 'LoadBalancerSpec',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例的名称。',
            'description' => '负载均衡实例的规格。',
            'type' => 'string',
            'required' => true,
            'example' => 'elb.s2.medium',
          ),
        ),
        2 => 
        array (
          'name' => 'LoadBalancerName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例的名称。',
            'description' => '负载均衡实例的名称，长度为1~80个英文或中文字符。不指定该参数时，由系统随机分配一个实例名称。

> 不能以`http://`和`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'gcs-pre-websocket-eslb-telecom',
          ),
        ),
        3 => 
        array (
          'name' => 'PayType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '付费类型。PostPaid（目前只支持此种）：按量付费',
            'description' => '付费类型。PostPaid（目前只支持此种）：按量付费。',
            'type' => 'string',
            'required' => true,
            'example' => 'PostPaid',
            'enum' => 
            array (
              0 => 'PostPaid',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'NetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要创建的ELB实例的网络ID',
            'description' => '创建的边缘负载均衡（ELB）实例的网络ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'n-5sax03dh2eyagujgsn7z9****',
          ),
        ),
        5 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '专有网络实例的所属的交换机ID。',
            'description' => '专有网络实例的所属的交换机ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vsw-5s78haoys9oylle6ln71m****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1ECC937A-AE0E-4626-BE51-DED1D6D1C888',
              ),
              'LoadBalancerId' => 
              array (
                'description' => '负载均衡实例的ID。',
                'type' => 'string',
                'example' => 'lb-5s7crik3yo3bp03gqrbp5****',
              ),
              'VSwitchId' => 
              array (
                'description' => '负载均衡实例的所属交换机的ID。',
                'type' => 'string',
                'example' => 'vsw-5savh5ngxh8sbj14bu7n****',
              ),
              'LoadBalancerName' => 
              array (
                'description' => '负载均衡实例名称。',
                'type' => 'string',
                'example' => 'gcs-pre-websocket-****',
              ),
              'NetworkId' => 
              array (
                'description' => '网络ID。',
                'type' => 'string',
                'example' => 'n-5sax03dh2eyagujgsn7z9****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'SaleControl.VerificationFailed',
            'errorMessage' => 'You did not pass the salecontrol verification.Please contact the product.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1ECC937A-AE0E-4626-BE51-DED1D6D1C888\\",\\n  \\"LoadBalancerId\\": \\"lb-5s7crik3yo3bp03gqrbp5****\\",\\n  \\"VSwitchId\\": \\"vsw-5savh5ngxh8sbj14bu7n****\\",\\n  \\"LoadBalancerName\\": \\"gcs-pre-websocket-****\\",\\n  \\"NetworkId\\": \\"n-5sax03dh2eyagujgsn7z9****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateLoadBalancerResponse>\\n    <RequestId>1ECC937A-AE0E-4626-BE51-DED1D6D1C888</RequestId>\\n    <LoadBalancerId>lb-5s7crik3yo3bp03gqrbp5****</LoadBalancerId>\\n    <VSwitchId>vsw-5savh5ngxh8sbj14bu7n****</VSwitchId>\\n    <LoadBalancerName>gcs-pre-websocket-****</LoadBalancerName>\\n    <NetworkId>n-5sax03dh2eyagujgsn7z9****</NetworkId>\\n</CreateLoadBalancerResponse>","errorExample":""}]',
      'title' => '创建负载均衡实例',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：5次/秒。',
    ),
    'ModifyLoadBalancerAttribute' => 
    array (
      'summary' => '调用ModifyLoadBalancerAttribute修改一个负载均衡实例的信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5q73cv04zeyh43lh74lp4gtm8',
          ),
        ),
        1 => 
        array (
          'name' => 'LoadBalancerName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的名称，长度为**2**~**128**个英文或中文字符。
> 不能以`http://`和`https://`开头。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
            'maxLength' => 128,
            'minLength' => 2,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter LoadBalancerId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          4 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyLoadBalancerAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</ModifyLoadBalancerAttributeResponse>","errorExample":""}]',
      'title' => '修改负载均衡属性',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'SetLoadBalancerStatus' => 
    array (
      'summary' => '调用SetLoadBalancerStatus修改负载均衡实例状态。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5t18quoohsrc3xkf86sp*****',
          ),
        ),
        1 => 
        array (
          'name' => 'LoadBalancerStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改后的实例状态。取值：
- **Active**：运行负载均衡实例，实例中的监听可以根据规则转发接收的流量。
- **InActive**：停止负载均衡实例，实例中的监听不会再转发接收的流量。',
            'type' => 'string',
            'required' => true,
            'example' => 'Active',
            'enum' => 
            array (
              0 => 'InActive',
              1 => 'Active',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<SetLoadBalancerStatusResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</SetLoadBalancerStatusResponse>","errorExample":""}]',
      'title' => '设置负载均衡实例状态',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'DescribeLoadBalancerAttribute' => 
    array (
      'summary' => '调用DescribeLoadBalancerAttribute查询指定负载均衡实例的详细信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5rcvo1n1t3hykfhhjwjgq****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'LoadBalancerId' => 
              array (
                'description' => '负载均衡实例的ID。',
                'type' => 'string',
                'example' => 'lb-5rcvo1n1t3hykfhhjwjgqp****',
              ),
              'LoadBalancerName' => 
              array (
                'description' => '负载均衡实例的名称。',
                'type' => 'string',
                'example' => 'example',
              ),
              'LoadBalancerStatus' => 
              array (
                'description' => '负载均衡实例监听状态。取值：
- **Active**：实例中的监听可以根据规则转发接收的流量。
- **InActive**：实例中的监听不会再转发接收的流量。',
                'type' => 'string',
                'example' => 'Active',
              ),
              'EnsRegionId' => 
              array (
                'description' => 'ENS节点ID。',
                'type' => 'string',
                'example' => 'cn-chengdu-telecom',
              ),
              'Address' => 
              array (
                'description' => '负载均衡实例服务地址。',
                'type' => 'string',
                'example' => '192.168.XX.XX',
              ),
              'NetworkId' => 
              array (
                'description' => '网络ID。',
                'type' => 'string',
                'example' => 'n-5rwbi3g9zvgxcsiufwhw8****',
              ),
              'VSwitchId' => 
              array (
                'description' => '交换机ID。',
                'type' => 'string',
                'example' => 'vsw-5s78m2pdr9osa0j64bn78****',
              ),
              'Bandwidth' => 
              array (
                'description' => '负载均衡带宽峰值，默认值为-1（表示不限速）。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '-1
',
              ),
              'LoadBalancerSpec' => 
              array (
                'description' => '负载均衡实例的规格。',
                'type' => 'string',
                'example' => 'elb.s2.medium',
              ),
              'CreateTime' => 
              array (
                'description' => '负载均衡实例的创建时间（UTC）。',
                'type' => 'string',
                'example' => '2019-05-21T12:22:00Z',
              ),
              'EndTime' => 
              array (
                'description' => '负载均衡实例结束时间。',
                'type' => 'string',
                'example' => '2020-05-21T12:22:00Z',
              ),
              'ListenerPorts' => 
              array (
                'description' => '负载均衡实例前端使用的端口。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '负载均衡实例前端使用的端口。',
                  'type' => 'string',
                  'example' => '80',
                ),
              ),
              'BackendServers' => 
              array (
                'description' => '后端服务器列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => ' 后端服务器列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ServerId' => 
                    array (
                      'description' => '后端服务器实例ID。',
                      'type' => 'string',
                      'example' => 'i-5vb5h5njxiuhn48a****',
                    ),
                    'Ip' => 
                    array (
                      'description' => '后端服务器的IP。',
                      'type' => 'string',
                      'example' => '192.168.XX.XX
',
                    ),
                    'Port' => 
                    array (
                      'description' => '后端服务器使用的端口。',
                      'type' => 'string',
                      'example' => '0',
                    ),
                    'Type' => 
                    array (
                      'description' => '后端服务器类型。',
                      'type' => 'string',
                      'example' => 'ens',
                    ),
                    'Weight' => 
                    array (
                      'description' => '后端服务器的权重。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '100',
                    ),
                  ),
                ),
              ),
              'ListenerPortsAndProtocols' => 
              array (
                'description' => '负载均衡实例前端使用的端口和协议。

',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '负载均衡实例前端使用的端口和协议。

',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ListenerPort' => 
                    array (
                      'description' => '监听端口。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '8080',
                    ),
                    'ListenerProtocol' => 
                    array (
                      'description' => '监听协议。',
                      'type' => 'string',
                      'example' => 'tcp',
                    ),
                    'Description' => 
                    array (
                      'description' => '描述信息。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'ListenerForward' => 
                    array (
                      'description' => '是否启用监听转发。',
                      'type' => 'string',
                      'example' => 'off',
                    ),
                    'ForwardPort' => 
                    array (
                      'description' => '转发到的目的监听端口',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                  ),
                ),
              ),
              'AddressIPVersion' => 
              array (
                'description' => '负载均衡实例的IP版本。取值：ipv4或者ipv6。',
                'type' => 'string',
                'example' => 'ipv4',
              ),
              'PayType' => 
              array (
                'description' => '付费类型。取值：
- **PrePaid**：预付费。
- **PostPaid**（目前仅支持该付费类型）：后付费。',
                'type' => 'string',
                'example' => 'PostPaid',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"LoadBalancerId\\": \\"lb-5rcvo1n1t3hykfhhjwjgqp****\\",\\n  \\"LoadBalancerName\\": \\"example\\",\\n  \\"LoadBalancerStatus\\": \\"Active\\",\\n  \\"EnsRegionId\\": \\"cn-chengdu-telecom\\",\\n  \\"Address\\": \\"192.168.XX.XX\\",\\n  \\"NetworkId\\": \\"n-5rwbi3g9zvgxcsiufwhw8****\\",\\n  \\"VSwitchId\\": \\"vsw-5s78m2pdr9osa0j64bn78****\\",\\n  \\"Bandwidth\\": -1,\\n  \\"LoadBalancerSpec\\": \\"elb.s2.medium\\",\\n  \\"CreateTime\\": \\"2019-05-21T12:22:00Z\\",\\n  \\"EndTime\\": \\"2020-05-21T12:22:00Z\\",\\n  \\"ListenerPorts\\": [\\n    \\"80\\"\\n  ],\\n  \\"BackendServers\\": [\\n    {\\n      \\"ServerId\\": \\"i-5vb5h5njxiuhn48a****\\",\\n      \\"Ip\\": \\"192.168.XX.XX\\\\n\\",\\n      \\"Port\\": \\"0\\",\\n      \\"Type\\": \\"ens\\",\\n      \\"Weight\\": 100\\n    }\\n  ],\\n  \\"ListenerPortsAndProtocols\\": [\\n    {\\n      \\"ListenerPort\\": 8080,\\n      \\"ListenerProtocol\\": \\"tcp\\",\\n      \\"Description\\": \\"test\\",\\n      \\"ListenerForward\\": \\"off\\",\\n      \\"ForwardPort\\": 0\\n    }\\n  ],\\n  \\"AddressIPVersion\\": \\"ipv4\\",\\n  \\"PayType\\": \\"PostPaid\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeLoadBalancerAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <LoadBalancerId>lb-5rcvo1n1t3hykfhhjwjgqp****</LoadBalancerId>\\n    <LoadBalancerName>example</LoadBalancerName>\\n    <LoadBalancerStatus>Active</LoadBalancerStatus>\\n    <EnsRegionId>cn-chengdu-telecom</EnsRegionId>\\n    <Address>192.168.0.1</Address>\\n    <NetworkId>n-5rwbi3g9zvgxcsiufwhw8****</NetworkId>\\n    <VSwitchId>vsw-5s78m2pdr9osa0j64bn78****</VSwitchId>\\n    <Bandwidth>2000</Bandwidth>\\n    <LoadBalancerSpec>elb.s2.medium</LoadBalancerSpec>\\n    <CreateTime>2019-05-21T12:22:00Z</CreateTime>\\n    <EndTime>2020-05-21T12:22:00Z</EndTime>\\n    <ListenerPorts>80</ListenerPorts>\\n    <BackendServers>\\n        <ServerId>i-5vb5h5njxiuhn48a****</ServerId>\\n        <Ip>192.168.0.5\\n</Ip>\\n        <Port>0</Port>\\n        <Type>ens</Type>\\n        <Weight>100</Weight>\\n    </BackendServers>\\n    <ListenerPortsAndProtocols>\\n        <ListenerPort>8080</ListenerPort>\\n        <ListenerProtocol>tcp</ListenerProtocol>\\n        <Description>test</Description>\\n        <ListenerForward>off</ListenerForward>\\n        <ForwardPort>0</ForwardPort>\\n    </ListenerPortsAndProtocols>\\n    <AddressIPVersion>ipv4</AddressIPVersion>\\n    <PayType>PostPaid</PayType>\\n</DescribeLoadBalancerAttributeResponse>","errorExample":""}]',
      'title' => '查询指定负载均衡实例信息',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'DescribeLoadBalancers' => 
    array (
      'summary' => '调用DescribeLoadBalancers查询已创建的负载均衡实例列表信息。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS节点ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-guangzhou-10',
          ),
        ),
        1 => 
        array (
          'name' => 'ServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '后端服务器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-5f67ffjc004wwz0t****',
          ),
        ),
        2 => 
        array (
          'name' => 'LoadBalancerStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例监听状态。取值：
- **Active**：实例中的监听可以根据规则转发接收的流量。
- **InActive**：实例中的监听不会再转发接收的流量。',
            'type' => 'string',
            'required' => false,
            'example' => 'InActive',
            'enum' => 
            array (
              0 => 'InActive',
              1 => 'Active',
              2 => 'Locked',
              3 => 'Releasing',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'lb-5q73cv04zeyh43lh74lp4****',
          ),
        ),
        4 => 
        array (
          'name' => 'LoadBalancerName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'example',
            'maxLength' => 128,
            'minLength' => 2,
          ),
        ),
        5 => 
        array (
          'name' => 'NetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'n-5s9ayrxsd9hszrlt5fgv2****',
          ),
        ),
        6 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-5sy773iy25rulsmgskmba****',
          ),
        ),
        7 => 
        array (
          'name' => 'Address',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的服务地址。',
            'type' => 'string',
            'required' => false,
            'example' => '10.0.XX.XX',
          ),
        ),
        8 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数。默认值：10，取值：**10**~**100**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '100',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数。默认值：10，取值：**10**~**100**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'LoadBalancers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'LoadBalancer' => 
                  array (
                    'description' => '数组格式，返回负载均衡实例列表。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数组格式，返回负载均衡实例列表。

',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'LoadBalancerId' => 
                        array (
                          'description' => '负载均衡实例的ID。',
                          'type' => 'string',
                          'example' => 'lb-5snthcyu1x10g7tywj7iu****',
                        ),
                        'LoadBalancerName' => 
                        array (
                          'description' => '负载均衡实例的名称。',
                          'type' => 'string',
                          'example' => 'example',
                        ),
                        'LoadBalancerStatus' => 
                        array (
                          'description' => '负载均衡实例监听状态。取值：
- **Active**：实例中的监听可以根据规则转发接收的流量。
- **InActive**：实例中的监听不会再转发接收的流量。',
                          'type' => 'string',
                          'example' => 'InActive',
                        ),
                        'Address' => 
                        array (
                          'description' => '负载均衡实例服务地址。',
                          'type' => 'string',
                          'example' => '10.10.XX.XX',
                        ),
                        'EnsRegionId' => 
                        array (
                          'description' => 'ENS节点ID。',
                          'type' => 'string',
                          'example' => 'cn-wuhan-telecom',
                        ),
                        'NetworkId' => 
                        array (
                          'description' => '网络ID。',
                          'type' => 'string',
                          'example' => 'n-5rz0rj1caexauilpsjx0w****',
                        ),
                        'VSwitchId' => 
                        array (
                          'description' => '交换机ID。',
                          'type' => 'string',
                          'example' => 'vsw-5rllcjb3ol6duzjdnbm1om****',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '负载均衡实例创建时间（UTC）。',
                          'type' => 'string',
                          'example' => '2021-05-06T11:13:41Z',
                        ),
                        'AddressIPVersion' => 
                        array (
                          'description' => 'IP版本。取值：ipv4或者ipv6。',
                          'type' => 'string',
                          'example' => 'ipv4',
                        ),
                        'PayType' => 
                        array (
                          'description' => '付费类型。取值：
- **PrePaid**：预付费。
- **PostPaid**（目前仅支持该付费类型）：后付费。
',
                          'type' => 'string',
                          'example' => 'PostPaid',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 100,\\n  \\"TotalCount\\": 1,\\n  \\"LoadBalancers\\": {\\n    \\"LoadBalancer\\": [\\n      {\\n        \\"LoadBalancerId\\": \\"lb-5snthcyu1x10g7tywj7iu****\\",\\n        \\"LoadBalancerName\\": \\"example\\",\\n        \\"LoadBalancerStatus\\": \\"InActive\\",\\n        \\"Address\\": \\"10.10.XX.XX\\",\\n        \\"EnsRegionId\\": \\"cn-wuhan-telecom\\",\\n        \\"NetworkId\\": \\"n-5rz0rj1caexauilpsjx0w****\\",\\n        \\"VSwitchId\\": \\"vsw-5rllcjb3ol6duzjdnbm1om****\\",\\n        \\"CreateTime\\": \\"2021-05-06T11:13:41Z\\",\\n        \\"AddressIPVersion\\": \\"ipv4\\",\\n        \\"PayType\\": \\"PostPaid\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeLoadBalancersResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>100</PageSize>\\n    <TotalCount>6</TotalCount>\\n    <LoadBalancers>\\n        <LoadBalancerId>lb-5snthcyu1x10g7tywj7iu****</LoadBalancerId>\\n        <LoadBalancerName>example</LoadBalancerName>\\n        <LoadBalancerStatus>InActive</LoadBalancerStatus>\\n        <Address>10.10.10.10</Address>\\n        <EnsRegionId>cn-wuhan-telecom</EnsRegionId>\\n        <NetworkId>n-5rz0rj1caexauilpsjx0w****</NetworkId>\\n        <VSwitchId>vsw-5rllcjb3ol6duzjdnbm1om****</VSwitchId>\\n        <CreateTime>2021-05-06T11:13:41Z</CreateTime>\\n        <AddressIPVersion>ipv4</AddressIPVersion>\\n        <PayType>PostPaid</PayType>\\n    </LoadBalancers>\\n</DescribeLoadBalancersResponse>","errorExample":""}]',
      'title' => '查询已创建的负载均衡实例列表',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'CreateLoadBalancerUDPListener' => 
    array (
      'summary' => '调用CreateLoadBalancerUDPListener创建UDP监听。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例的ID。',
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5q73cv04zeyh43lh74lp4****',
          ),
        ),
        1 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例前端使用的端口。  取值：1-65535。',
            'description' => '接收请求并向后端服务器进行请求转发的监听端口。取值：**1**~**65535**。
>UDP监听的250、4789和4790三个端口为系统保留端口，暂时不对外开放。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '80',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '设置监听的描述信息。  长度限制为1-80个字符，允许包含字母、数字、“-”、“/”、“.”和“_”等字符。支持中文描述。',
            'description' => '设置监听名称。长度限制为**1**~**80**个字符。
> 不能以`http://`和`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'example',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        3 => 
        array (
          'name' => 'Scheduler',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度算法。取值：  wrr（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。 wlc：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。 rr：按照访问顺序依次将外部请求依序分发到后端服务器。 sch：基于源IP地址的一致性hash，相同的源地址会调度到相同的后端服务器。',
            'description' => '调度算法。取值：
- **wrr**（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。
- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。
- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。
- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。
- **iqch**：针对iQUIC CID的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。',
            'type' => 'string',
            'required' => false,
            'example' => 'wrr',
            'enum' => 
            array (
              0 => 'wrr',
              1 => 'wlc',
              2 => 'rr',
              3 => 'sch',
              4 => 'qch',
              5 => 'iqch',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'HealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail判定为success。  取值：2-10。',
            'description' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。取值：**2**~**10**，默认值为**3**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '4',
          ),
        ),
        5 => 
        array (
          'name' => 'UnhealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success判定为fail。  取值：2-10。',
            'description' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。取值：**2**~**10**，默认值为**3**。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '4',
          ),
        ),
        6 => 
        array (
          'name' => 'HealthCheckConnectTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '接收来自运行状况检查的响应需要等待的时间。  如果后端ENS在指定的时间内没有正确响应，则判定为健康检查失败。  取值：1-300（秒）。默认为5秒',
            'description' => '接收来自运行状况检查的响应需要等待的时间。如果后端ENS在指定的时间内没有响应，则判定为健康检查失败。
- 默认值：5秒。
- 取值：**1**~**300**。
- 单位：秒。

>如果HealthCheckConnectTimeout的值小于HealthCheckInterval的值，则HealthCheckConnectTimeout无效，超时时间为HealthCheckInterval的值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '300',
            'minimum' => '1',
            'example' => '100',
          ),
        ),
        7 => 
        array (
          'name' => 'HealthCheckInterval',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查的时间间隔。  取值：1-50（秒）。',
            'description' => '健康检查的时间间隔。取值：**1**~**50**，默认值为**2**，单位：秒。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '3',
          ),
        ),
        8 => 
        array (
          'name' => 'BackendServerPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例后端使用的端口，取值：1~65535',
            'description' => '负载均衡实例后端服务器使用的端口，取值：**1**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '8080',
          ),
        ),
        9 => 
        array (
          'name' => 'HealthCheckConnectPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查使用的端口。取值：1-65535  不设置此参数时，表示使用后端服务端口（BackendServerPort）',
            'description' => '健康检查使用的端口，取值：**1**~**65535**。不设置此参数时，表示使用后端服务端口（BackendServerPort）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '8080',
          ),
        ),
        10 => 
        array (
          'name' => 'HealthCheckReq',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'UDP监听健康检查的请求串，只允许包含字母、数字，最大长度限制为64个字符。',
            'description' => 'UDP监听健康检查的请求串，只允许包含字母、数字，最大长度限制为64个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'hello',
            'maxLength' => 64,
          ),
        ),
        11 => 
        array (
          'name' => 'HealthCheckExp',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'UDP监听健康检查的响应串，只允许包含字母、数字，最大长度限制为64个字符。',
            'description' => 'UDP监听健康检查的响应串，只允许包含字母、数字，最大长度限制为64个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'ok',
            'maxLength' => 64,
          ),
        ),
        12 => 
        array (
          'name' => 'EipTransmit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启EIP透传，取值：
- **on**：开启。
- **off**（默认值）：关闭。',
            'type' => 'string',
            'required' => false,
            'example' => 'on',
            'enum' => 
            array (
              0 => 'on',
              1 => 'off',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '06F00FBB-3D9E-4CCE-9D43-1A6946A75456',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'ListenerAlreadyExists	',
            'errorMessage' => 'The listenerPort already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"06F00FBB-3D9E-4CCE-9D43-1A6946A75456\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateLoadBalancerUDPListenerResponse>\\n    <RequestId>06F00FBB-3D9E-4CCE-9D43-1A6946A75456</RequestId>\\n</CreateLoadBalancerUDPListenerResponse>","errorExample":""}]',
      'title' => '创建UDP监听',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'SetLoadBalancerUDPListenerAttribute' => 
    array (
      'summary' => '调用SetLoadBalancerUDPListenerAttribute修改UDP协议监听的配置。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例的ID。',
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5pzipr2fszqtl2xf64uy5****',
          ),
        ),
        1 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例前端使用的端口。  取值：1-65535。',
            'description' => '需要修改属性的监听端口。取值：**1**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '80',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '设置监听的描述信息。  长度限制为1-80个字符，允许包含字母、数字、“-”、“/”、“.”和“_”等字符。支持中文描述。',
            'description' => '设置监听名称。长度限制为**1**~**80**个字符。
> 不能以`http://`和`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'example',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        3 => 
        array (
          'name' => 'Scheduler',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度算法。取值：  wrr（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。 wlc：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。 rr：按照访问顺序依次将外部请求依序分发到后端服务器。 sch：基于源IP地址的一致性hash，相同的源地址会调度到相同的后端服务器。',
            'description' => '调度算法。取值：
- **wrr**：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。
- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。
- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。
- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。
- **iqch**：针对iQUIC CID的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。
',
            'type' => 'string',
            'required' => false,
            'example' => 'wrr',
            'enum' => 
            array (
              0 => 'wrr',
              1 => 'wlc',
              2 => 'rr',
              3 => 'sch',
              4 => 'qch',
              5 => 'iqch',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'HealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail判定为success。  取值：2-10。',
            'description' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。取值：**2**~**10**。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '4',
          ),
        ),
        5 => 
        array (
          'name' => 'UnhealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success判定为fail。  取值：2-10。',
            'description' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。取值：**2**~**10**。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '4',
          ),
        ),
        6 => 
        array (
          'name' => 'HealthCheckConnectTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '接收来自运行状况检查的响应需要等待的时间。  如果后端ENS在指定的时间内没有正确响应，则判定为健康检查失败。  取值：1-300（秒）。默认为5秒',
            'description' => '接收来自运行状况检查的响应需要等待的时间。如果后端ENS在指定的时间内没有响应，则判定为健康检查失败。
- 默认值：5秒。
- 取值：**1**~**300**。
- 单位：秒。

> 如果HealthCheckConnectTimeout的值小于HealthCheckInterval的值，则HealthCheckConnectTimeout无效，超时时间为HealthCheckInterval的值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '300',
            'minimum' => '1',
            'example' => '100',
          ),
        ),
        7 => 
        array (
          'name' => 'HealthCheckInterval',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查的时间间隔。  取值：1-50（秒）。',
            'description' => '健康检查的时间间隔。取值：**1**~**50**，单位：秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '5',
          ),
        ),
        8 => 
        array (
          'name' => 'HealthCheckConnectPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查使用的端口。取值：1-65535  不设置此参数时，表示使用后端服务端口（BackendServerPort）',
            'description' => '健康检查使用的端口，取值：**1**~**65535**。不设置此参数时，表示使用后端服务端口（BackendServerPort）。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '8080',
          ),
        ),
        9 => 
        array (
          'name' => 'HealthCheckReq',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'UDP监听健康检查的请求串，只允许包含字母、数字，最大长度限制为64个字符。',
            'description' => 'UDP监听健康检查的请求串，只允许包含字母、数字，最大长度限制为64个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'hello',
            'maxLength' => 64,
          ),
        ),
        10 => 
        array (
          'name' => 'HealthCheckExp',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'UDP监听健康检查的响应串，只允许包含字母、数字，最大长度限制为64个字符。',
            'description' => 'UDP监听健康检查的响应串，只允许包含字母、数字，最大长度限制为64个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'ok',
            'maxLength' => 64,
          ),
        ),
        11 => 
        array (
          'name' => 'EipTransmit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启EIP透传，取值：

- **on**：开启。
- **off**（默认值）：关闭。',
            'type' => 'string',
            'required' => false,
            'example' => 'on',
            'enum' => 
            array (
              0 => 'on',
              1 => 'off',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '06F00FBB-3D9E-4CCE-9D43-1A6946A75456',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'ListenerNotFound',
            'errorMessage' => 'The input parameter listener that is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectListenerStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          7 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"06F00FBB-3D9E-4CCE-9D43-1A6946A75456\\"\\n}","errorExample":""},{"type":"xml","example":"<SetLoadBalancerUDPListenerAttributeResponse>\\n    <RequestId>06F00FBB-3D9E-4CCE-9D43-1A6946A75456</RequestId>\\n</SetLoadBalancerUDPListenerAttributeResponse>","errorExample":""}]',
      'title' => '修改UDP监听属性',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'DescribeLoadBalancerUDPListenerAttribute' => 
    array (
      'summary' => '调用DescribeLoadBalancerUDPListenerAttribute查询UDP监听的配置。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要查询的监听端口。取值：**1**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '0',
            'example' => '80',
          ),
        ),
        1 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5pzipr2fszqtl2xf64uy5****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5D7597CF-1630-54EC-A945-624A33F2E7E8',
              ),
              'ListenerPort' => 
              array (
                'description' => '监听端口。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '80',
              ),
              'Status' => 
              array (
                'description' => '当前监听的状态。取值：

- **Running**：正常运行。
- **Stopped**：运行停止。
- **Starting**：启动中。
- **Configuring**：配置中。
- **Stopping**：运行停止中。
',
                'type' => 'string',
                'example' => 'Stopped',
              ),
              'Bandwidth' => 
              array (
                'description' => '负载均衡带宽峰值，默认值为-1（表示不限速）。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'Scheduler' => 
              array (
                'description' => '调度算法。取值：
- **wrr**：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。
- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。
- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。
- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。
- **iqch**：针对iQUIC CID 的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。
',
                'type' => 'string',
                'example' => 'wrr',
              ),
              'HealthCheck' => 
              array (
                'description' => '是否开启健康检查。取值：

- **on**：开启。
- **off**：关闭。',
                'type' => 'string',
                'example' => 'on',
              ),
              'HealthyThreshold' => 
              array (
                'description' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。  取值：**2**~**10**。
> HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'UnhealthyThreshold' => 
              array (
                'description' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。  取值：**2**~**10**。
> HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'HealthCheckConnectTimeout' => 
              array (
                'description' => '接收来自运行状况检查的响应需要等待的时间。如果后端ENS在指定的时间内没有响应，则判定为健康检查失败。
- 默认值：5秒。
- 取值：**1**~**300**。
- 单位：秒。
>- HealthCheck值为on时才会有效。
>- 如果HealthCheckConnectTimeout的值小于HealthCheckInterval的值，则HealthCheckConnectTimeout无效，超时时间为HealthCheckInterval的值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'HealthCheckInterval' => 
              array (
                'description' => '健康检查的时间间隔。  取值： **1**~**50**，单位：秒。
> HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'Description' => 
              array (
                'description' => '监听名称。',
                'type' => 'string',
                'example' => 'example',
              ),
              'BackendServerPort' => 
              array (
                'description' => '负载均衡实例后端服务器使用的端口，取值：**1**~**65535**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '8080',
              ),
              'HealthCheckConnectPort' => 
              array (
                'description' => '健康检查使用的端口，取值： **1**~**65535**。不设置此参数时，表示使用后端服务端口（BackendServerPort）。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '8000',
              ),
              'HealthCheckReq' => 
              array (
                'description' => 'UDP监听健康检查的请求串，只允许包含字母、数字，最大长度限制为64个字符。',
                'type' => 'string',
                'example' => 'hello',
              ),
              'HealthCheckExp' => 
              array (
                'description' => 'UDP监听健康检查的响应串，只允许包含字母、数字，最大长度限制为64个字符。',
                'type' => 'string',
                'example' => 'ok',
              ),
              'EipTransmit' => 
              array (
                'description' => '是否开启EIP透传，取值：

- **on**：开启。
- **off**（默认）：关闭。',
                'type' => 'string',
                'example' => 'on',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.	',
          ),
          1 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          2 => 
          array (
            'errorCode' => 'ListenerNotFound',
            'errorMessage' => 'Listener is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5D7597CF-1630-54EC-A945-624A33F2E7E8\\",\\n  \\"ListenerPort\\": 80,\\n  \\"Status\\": \\"Stopped\\",\\n  \\"Bandwidth\\": 5,\\n  \\"Scheduler\\": \\"wrr\\",\\n  \\"HealthCheck\\": \\"on\\",\\n  \\"HealthyThreshold\\": 4,\\n  \\"UnhealthyThreshold\\": 4,\\n  \\"HealthCheckConnectTimeout\\": 100,\\n  \\"HealthCheckInterval\\": 5,\\n  \\"Description\\": \\"example\\",\\n  \\"BackendServerPort\\": 8080,\\n  \\"HealthCheckConnectPort\\": 8000,\\n  \\"HealthCheckReq\\": \\"hello\\",\\n  \\"HealthCheckExp\\": \\"ok\\",\\n  \\"EipTransmit\\": \\"on\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeLoadBalancerUDPListenerAttributeResponse>\\n    <RequestId>5D7597CF-1630-54EC-A945-624A33F2E7E8</RequestId>\\n    <ListenerPort>80</ListenerPort>\\n    <Status>Stopped</Status>\\n    <Bandwidth>5</Bandwidth>\\n    <Scheduler>wrr</Scheduler>\\n    <HealthCheck>on</HealthCheck>\\n    <HealthyThreshold>4</HealthyThreshold>\\n    <UnhealthyThreshold>4</UnhealthyThreshold>\\n    <HealthCheckConnectTimeout>100</HealthCheckConnectTimeout>\\n    <HealthCheckInterval>5</HealthCheckInterval>\\n    <Description>example</Description>\\n    <BackendServerPort>8080</BackendServerPort>\\n    <HealthCheckConnectPort>8000</HealthCheckConnectPort>\\n    <HealthCheckReq>hello</HealthCheckReq>\\n    <HealthCheckExp>ok</HealthCheckExp>\\n    <EipTransmit>on</EipTransmit>\\n</DescribeLoadBalancerUDPListenerAttributeResponse>","errorExample":""}]',
      'title' => '查询UDP监听属性',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'CreateLoadBalancerTCPListener' => 
    array (
      'summary' => '调用CreateLoadBalancerTCPListener创建TCP监听。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例的ID。',
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5ovkn1piwqmoqrfjdyhq4****',
          ),
        ),
        1 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例前端使用的端口。  取值：1-65535。',
            'description' => '负载均衡对外提供服务，接收请求并向后端服务器进行请求转发的监听端口。取值：**1**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '80',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '设置监听的描述信息。  长度限制为1-80个字符，允许包含字母、数字、“-”、“/”、“.”和“_”等字符。支持中文描述。',
            'description' => '设置监听名称。长度限制为**1**~**80**个字符。
> 不能以`http://`和`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'example',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        3 => 
        array (
          'name' => 'Scheduler',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '度算法。取值：  wrr（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。 wlc：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。 rr：按照访问顺序依次将外部请求依序分发到后端服务器。 sch：基于源IP地址的一致性hash，相同的源地址会调度到相同的后端服务器。',
            'description' => '调度算法。取值：
- **wrr**（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。
- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。
- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。
- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。
- **iqch**：针对iQUIC CID的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。
',
            'type' => 'string',
            'required' => false,
            'example' => 'wrr',
            'enum' => 
            array (
              0 => 'wrr',
              1 => 'wlc',
              2 => 'rr',
              3 => 'sch',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'PersistenceTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '会话保持的超时时间。  取值：0~3600（秒）。  默认值：0，表示关闭会话保持。',
            'description' => '会话保持的超时时间。

- 默认值：0，表示关闭会话保持。
- 取值：**0**~**3600**。
- 单位：秒。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '3600',
            'minimum' => '0',
            'example' => '0',
          ),
        ),
        5 => 
        array (
          'name' => 'EstablishedTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '连接超时时间。  取值：10~900（秒）。',
            'description' => '连接超时时间，取值：**10**~**900**，默认值为**900**，单位：秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '900',
            'minimum' => '10',
            'example' => '500',
          ),
        ),
        6 => 
        array (
          'name' => 'HealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail判定为success。  取值： 2~10。',
            'description' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。取值：**2**~**10**，默认值为**3**。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '4',
          ),
        ),
        7 => 
        array (
          'name' => 'UnhealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success判定为fail。  取值：2~10。',
            'description' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。取值：**2**~**10**，默认值为**3**。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '4',
          ),
        ),
        8 => 
        array (
          'name' => 'HealthCheckConnectTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每次健康检查响应的最大超时时间。  取值：1~300（秒）。  默认值：5。',
            'description' => '接收来自运行状况检查的响应需要等待的时间。如果后端ENS在指定的时间内没有响应，则判定为健康检查失败。
- 默认值：5秒。
- 取值：**1**~**300**。
- 单位：秒。

> 如果HealthCheckConnectTimeout的值小于HealthCheckInterval的值，则HealthCheckConnectTimeout无效，超时时间为HealthCheckInterval的值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '300',
            'minimum' => '1',
            'example' => '100',
          ),
        ),
        9 => 
        array (
          'name' => 'HealthCheckInterval',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查的时间间隔。  取值：1~50（秒）。',
            'description' => '健康检查的时间间隔。取值：**1**~**50**，默认值为**2**，单位：秒。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '3',
          ),
        ),
        10 => 
        array (
          'name' => 'HealthCheckDomain',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于健康检查的域名',
            'description' => '用于健康检查的域名。
',
            'type' => 'string',
            'required' => false,
            'example' => 'www.aliyundoc.com',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        11 => 
        array (
          'name' => 'HealthCheckURI',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于健康检查的URI。长度限制为1~80，只能使用字母、数字、短横线（-）、正斜杠（/）、点号（.）、百分号（%）、#和&amp;这些字符。 URL不能只为/，但必须以/开头。  当TCP监听需要使用HTTP健康检查时可配置此参数，如不配置则按TCP健康检查。',
            'description' => '用于健康检查的URI。长度限制为**1**~**80**。
> URL不能只有`/`，但必须以`/`开头。
',
            'type' => 'string',
            'required' => false,
            'example' => '/checkpreload.htm',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        12 => 
        array (
          'name' => 'HealthCheckHttpCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查正常的HTTP状态码，多个状态码用逗号（,）分割。  取值：http_2xx（默认值） | http_3xx | http_4xx | http_5xx。',
            'description' => '健康检查正常时的HTTP状态码。取值：

- **http_2xx**（默认值）。
- **http_3xx**。
- **http_4xx**。
- **http_5xx**。

',
            'type' => 'string',
            'required' => false,
            'example' => 'http_2xx',
          ),
        ),
        13 => 
        array (
          'name' => 'HealthCheckType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查类型。  取值：tcp（默认值） | http。',
            'description' => '健康检查类型。取值：
- **tcp**（默认值）。
- **http**。',
            'type' => 'string',
            'required' => false,
            'example' => 'tcp',
            'enum' => 
            array (
              0 => 'tcp',
              1 => 'http',
            ),
          ),
        ),
        14 => 
        array (
          'name' => 'BackendServerPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例后端使用的端口，取值：1~65535',
            'description' => '负载均衡实例后端服务器使用的端口，取值：**1**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '8080',
          ),
        ),
        15 => 
        array (
          'name' => 'HealthCheckConnectPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查使用的端口。  取值：1~65535。  不设置此参数时，表示使用后端服务端口（BackendServerPort）。',
            'description' => '健康检查使用的端口，取值：**1**~**65535**。不设置此参数时，表示使用后端服务端口（BackendServerPort）。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '8080',
          ),
        ),
        16 => 
        array (
          'name' => 'EipTransmit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启EIP透传，取值：
- **on**：开启。
- **off**（默认值）：关闭。
',
            'type' => 'string',
            'required' => false,
            'example' => 'on',
            'enum' => 
            array (
              0 => 'on',
              1 => 'off',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '06F00FBB-3D9E-4CCE-9D43-1A6946A75456',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'ListenerAlreadyExists',
            'errorMessage' => 'The listenerPort already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"06F00FBB-3D9E-4CCE-9D43-1A6946A75456\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateLoadBalancerTCPListenerResponse>\\n    <RequestId>06F00FBB-3D9E-4CCE-9D43-1A6946A75456</RequestId>\\n</CreateLoadBalancerTCPListenerResponse>","errorExample":""}]',
      'title' => '创建TCP监听',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'SetLoadBalancerTCPListenerAttribute' => 
    array (
      'summary' => '调用SetLoadBalancerTCPListenerAttribute修改TCP监听的配置。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例的ID。',
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5snthcyu1x10g7tywj7iu****',
          ),
        ),
        1 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例前端使用的端口。  取值：1-65535。',
            'description' => '需要修改属性的监听端口。取值：**1**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '80',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '设置监听的描述信息。  长度限制为1-80个字符，允许包含字母、数字、“-”、“/”、“.”和“_”等字符。支持中文描述。',
            'description' => '设置监听的描述信息。长度限制为**1**~**80**个字符。
> 不能以`http://`和`https://`开头。
',
            'type' => 'string',
            'required' => false,
            'example' => 'example',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        3 => 
        array (
          'name' => 'Scheduler',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '度算法。取值：  wrr（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。 wlc：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。 rr：按照访问顺序依次将外部请求依序分发到后端服务器。 sch：基于源IP地址的一致性hash，相同的源地址会调度到相同的后端服务器。',
            'description' => '调度算法。取值：
- **wrr**：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。
- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。
- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。
- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。
- **iqch**：针对iQUIC CID的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。
',
            'type' => 'string',
            'required' => false,
            'example' => 'wrr',
            'enum' => 
            array (
              0 => 'wrr',
              1 => 'wlc',
              2 => 'rr',
              3 => 'sch',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'PersistenceTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '会话保持的超时时间。  取值：0~3600（秒）。  默认值：0，表示关闭会话保持。',
            'description' => '会话保持的超时时间。

- 默认值：0，表示关闭会话保持。
- 取值：**0**~**3600**。
- 单位：秒。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '3600',
            'minimum' => '0',
            'example' => '0',
          ),
        ),
        5 => 
        array (
          'name' => 'EstablishedTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '连接超时时间。  取值：10~900（秒）。',
            'description' => '连接超时时间，取值：**10**~**900**，单位：秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '900',
            'minimum' => '10',
            'example' => '500',
          ),
        ),
        6 => 
        array (
          'name' => 'HealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail判定为success。  取值： 2~10。',
            'description' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。取值：**2**~**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '4',
          ),
        ),
        7 => 
        array (
          'name' => 'UnhealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success判定为fail。  取值：2~10。',
            'description' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。取值：**2**~**10**。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '4',
          ),
        ),
        8 => 
        array (
          'name' => 'HealthCheckConnectTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每次健康检查响应的最大超时时间。  取值：1~300（秒）。  默认值：5。',
            'description' => '接收来自运行状况检查的响应需要等待的时间。如果后端ENS在指定的时间内没有响应，则判定为健康检查失败。
- 默认值：5秒。
- 取值：**1**~**300**。
- 单位：秒。

> 如果HealthCheckConnectTimeout的值小于HealthCheckInterval的值，则HealthCheckConnectTimeout无效，超时时间为HealthCheckInterval的值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '300',
            'minimum' => '1',
            'example' => '100',
          ),
        ),
        9 => 
        array (
          'name' => 'HealthCheckConnectPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查使用的端口。  取值：1~65535。  不设置此参数时，表示使用后端服务端口（BackendServerPort）。',
            'description' => '健康检查使用的端口，取值：**1**~**65535**。不设置此参数时，表示使用后端服务端口（BackendServerPort）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '8000',
          ),
        ),
        10 => 
        array (
          'name' => 'HealthCheckInterval',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查的时间间隔。  取值：1~50（秒）。',
            'description' => '健康检查的时间间隔。取值：**1**~**50**，单位：秒。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '5',
          ),
        ),
        11 => 
        array (
          'name' => 'HealthCheckDomain',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于健康检查的域名',
            'description' => '用于健康检查的域名。
',
            'type' => 'string',
            'required' => false,
            'example' => 'www.aliyundoc.com',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        12 => 
        array (
          'name' => 'HealthCheckURI',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于健康检查的URI。长度限制为1~80，只能使用字母、数字、短横线（-）、正斜杠（/）、点号（.）、百分号（%）、#和&amp;这些字符。 URL不能只为/，但必须以/开头。  当TCP监听需要使用HTTP健康检查时可配置此参数，如不配置则按TCP健康检查。',
            'description' => '用于健康检查的URI。长度限制为**1**~**80**。
> URL不能只有`/`，但必须以`/`开头。
',
            'type' => 'string',
            'required' => false,
            'example' => '/aliyundoc/index.html',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        13 => 
        array (
          'name' => 'HealthCheckHttpCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查正常的HTTP状态码，多个状态码用逗号（,）分割。  取值：http_2xx（默认值） | http_3xx | http_4xx | http_5xx。',
            'description' => '健康检查正常时的HTTP状态码。取值：

- **http_2xx**（默认值）。
- **http_3xx**。
- **http_4xx**。
- **http_5xx**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'http_2xx',
          ),
        ),
        14 => 
        array (
          'name' => 'HealthCheckType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查类型。  取值：tcp（默认值） | http。',
            'description' => '健康检查类型。取值：
- **tcp**（默认值）。
- **http**。
',
            'type' => 'string',
            'required' => false,
            'example' => 'tcp',
            'enum' => 
            array (
              0 => 'tcp',
              1 => 'http',
            ),
          ),
        ),
        15 => 
        array (
          'name' => 'EipTransmit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启EIP透传，取值：

- **on**：开启。
- **off**（默认值）：关闭。',
            'type' => 'string',
            'required' => false,
            'example' => 'on',
            'enum' => 
            array (
              0 => 'on',
              1 => 'off',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '06F00FBB-3D9E-4CCE-9D43-1A6946A75456',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'ListenerNotFound',
            'errorMessage' => 'The input parameter listener that is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectListenerStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          7 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"06F00FBB-3D9E-4CCE-9D43-1A6946A75456\\"\\n}","errorExample":""},{"type":"xml","example":"<SetLoadBalancerTCPListenerAttributeResponse>\\n    <RequestId>06F00FBB-3D9E-4CCE-9D43-1A6946A75456</RequestId>\\n</SetLoadBalancerTCPListenerAttributeResponse>","errorExample":""}]',
      'title' => '修改TCP监听属性',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'DescribeLoadBalancerTCPListenerAttribute' => 
    array (
      'summary' => '调用DescribeLoadBalancerTCPListenerAttribute查询TCP监听配置。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要查询的监听端口。取值：**1**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '0',
            'example' => '80',
          ),
        ),
        1 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5snthcyu1x10g7tywj7iu****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'ListenerPort' => 
              array (
                'description' => '负载均衡实例前端使用的端口。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '80',
              ),
              'Status' => 
              array (
                'description' => '当前监听的状态。取值：

- **Running**：正常运行。
- **Stopped**：运行停止。
- **Starting**：启动中。
- **Configuring**：配置中。
- **Stopping**：运行停止中。',
                'type' => 'string',
                'example' => 'Stopped',
              ),
              'Bandwidth' => 
              array (
                'description' => '负载均衡带宽峰值，默认值为-1（表示不限速）。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '-1',
              ),
              'Scheduler' => 
              array (
                'description' => '调度算法。取值：
- **wrr**：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。
- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。
- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。
- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。
- **iqch**：针对iQUIC CID的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。
',
                'type' => 'string',
                'example' => 'wrr',
              ),
              'PersistenceTimeout' => 
              array (
                'description' => '会话保持的超时时间。

- 默认值：0，表示关闭会话保持。
- 取值：**0**~**3600**。
- 单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'EstablishedTimeout' => 
              array (
                'description' => '连接超时时间，取值：**10**~**900**，单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '500',
              ),
              'HealthCheck' => 
              array (
                'description' => '是否开启健康检查。取值：

- **on**：开启。
- **off**：关闭。',
                'type' => 'string',
                'example' => 'on',
              ),
              'HealthyThreshold' => 
              array (
                'description' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。取值：**2**~**10**。
> HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'UnhealthyThreshold' => 
              array (
                'description' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。取值：**2**~**10**。

> HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'HealthCheckConnectTimeout' => 
              array (
                'description' => '接收来自运行状况检查的响应需要等待的时间。如果后端ENS在指定的时间内没有响应，则判定为健康检查失败。
- 默认值：5秒。
- 取值：**1**~**300**。
- 单位：秒。
> - HealthCheck值为on时才会有效。
>- 如果HealthCheckConnectTimeout的值小于HealthCheckInterval的值，则HealthCheckConnectTimeout无效，超时时间为HealthCheckInterval的值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'HealthCheckInterval' => 
              array (
                'description' => '健康检查的时间间隔。取值：**1**~**50**，单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'Description' => 
              array (
                'description' => '监听名称。',
                'type' => 'string',
                'example' => 'example',
              ),
              'HealthCheckHttpCode' => 
              array (
                'description' => '健康检查正常时的HTTP状态码。取值：

- **http_2xx**（默认值）。
- **http_3xx**。
- **http_4xx**。
- **http_5xx**。

> HealthCheck值为on时才会有效。',
                'type' => 'string',
                'example' => 'http_2xx',
              ),
              'HealthCheckDomain' => 
              array (
                'description' => '用于健康检查的域名。
> HealthCheck值为on时才会有效。
',
                'type' => 'string',
                'example' => 'example.com',
              ),
              'HealthCheckURI' => 
              array (
                'description' => '用于健康检查的URI。长度限制为**1**~**80**。
> - URL不能只有`/`，但必须以`/`开头。
>- HealthCheck值为on时才会有效。',
                'type' => 'string',
                'example' => '/example/index.html',
              ),
              'HealthCheckType' => 
              array (
                'description' => '健康检查类型。取值：
- **tcp**（默认值）。
- **http**。
',
                'type' => 'string',
                'example' => 'tcp',
              ),
              'BackendServerPort' => 
              array (
                'description' => '负载均衡实例后端服务器使用的端口，取值：**1**~**65535**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '8080',
              ),
              'HealthCheckConnectPort' => 
              array (
                'description' => '健康检查使用的端口，取值：**1**~**65535**。不设置此参数时，表示使用后端服务端口（BackendServerPort）。
> HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '8000',
              ),
              'EipTransmit' => 
              array (
                'description' => '是否开启EIP透传，取值：

- **on**：开启。
- **off**（默认值）：关闭。',
                'type' => 'string',
                'example' => 'on',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.	',
          ),
          2 => 
          array (
            'errorCode' => 'ListenerNotFound',
            'errorMessage' => 'Listener is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"ListenerPort\\": 80,\\n  \\"Status\\": \\"Stopped\\",\\n  \\"Bandwidth\\": -1,\\n  \\"Scheduler\\": \\"wrr\\",\\n  \\"PersistenceTimeout\\": 0,\\n  \\"EstablishedTimeout\\": 500,\\n  \\"HealthCheck\\": \\"on\\",\\n  \\"HealthyThreshold\\": 4,\\n  \\"UnhealthyThreshold\\": 4,\\n  \\"HealthCheckConnectTimeout\\": 100,\\n  \\"HealthCheckInterval\\": 5,\\n  \\"Description\\": \\"example\\",\\n  \\"HealthCheckHttpCode\\": \\"http_2xx\\",\\n  \\"HealthCheckDomain\\": \\"example.com\\",\\n  \\"HealthCheckURI\\": \\"/example/index.html\\",\\n  \\"HealthCheckType\\": \\"tcp\\",\\n  \\"BackendServerPort\\": 8080,\\n  \\"HealthCheckConnectPort\\": 8000,\\n  \\"EipTransmit\\": \\"on\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeLoadBalancerTCPListenerAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <ListenerPort>80</ListenerPort>\\n    <Status>Stopped</Status>\\n    <Bandwidth>5</Bandwidth>\\n    <Scheduler>wrr</Scheduler>\\n    <PersistenceTimeout>0</PersistenceTimeout>\\n    <EstablishedTimeout>500</EstablishedTimeout>\\n    <HealthCheck>on</HealthCheck>\\n    <HealthyThreshold>4</HealthyThreshold>\\n    <UnhealthyThreshold>4</UnhealthyThreshold>\\n    <HealthCheckConnectTimeout>100</HealthCheckConnectTimeout>\\n    <HealthCheckInterval>5</HealthCheckInterval>\\n    <Description>example</Description>\\n    <HealthCheckHttpCode>http_2xx</HealthCheckHttpCode>\\n    <HealthCheckDomain>example.com</HealthCheckDomain>\\n    <HealthCheckURI>/example/index.html</HealthCheckURI>\\n    <HealthCheckType>tcp</HealthCheckType>\\n    <BackendServerPort>8080</BackendServerPort>\\n    <HealthCheckConnectPort>8000</HealthCheckConnectPort>\\n    <EipTransmit>on</EipTransmit>\\n</DescribeLoadBalancerTCPListenerAttributeResponse>","errorExample":""}]',
      'title' => '查询TCP监听属性',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'CreateLoadBalancerHTTPListener' => 
    array (
      'summary' => '调用CreateLoadBalancerHTTPListener创建HTTP监听。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例的ID。',
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5s7crik3yo3bp03gqrbp5****',
          ),
        ),
        1 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例前端使用的端口。  取值：1-65535。',
            'description' => '接收请求并向后端服务器进行请求转发的监听端口。取值：**1**~**65535**。
>HTTP协议建议使用80端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '8080',
          ),
        ),
        2 => 
        array (
          'name' => 'ListenerForward',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启HTTP至HTTPS的转发。取值：on | off。',
            'description' => '是否开启HTTP至HTTPS的转发。取值：

- **on**：开启。
- **off**（默认值）：关闭。',
            'type' => 'string',
            'required' => false,
            'example' => 'off',
            'enum' => 
            array (
              0 => 'on',
              1 => 'off',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'ForwardPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'HTTP至HTTPS的监听转发端口。',
            'description' => 'HTTP至HTTPS的监听转发端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '0',
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '设置监听的描述信息。  长度限制为1-80个字符，允许包含字母、数字、“-”、“/”、“.”和“_”等字符。支持中文描述。',
            'description' => '设置监听名称。长度限制为**1**~**80**个字符。
> 不能以`http://`和`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => '监听说明',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        5 => 
        array (
          'name' => 'XForwardedFor',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启通过X-Forwarded-For头字段获取来访者真实 IP。  取值为on。',
            'description' => '是否开启通过X-Forwarded-For字段获取来访者真实IP。取值：
- **on**：开启。
- **off**（默认值）：关闭。',
            'type' => 'string',
            'required' => false,
            'example' => 'off',
            'enum' => 
            array (
              0 => 'on',
              1 => 'off',
            ),
          ),
        ),
        6 => 
        array (
          'name' => 'Scheduler',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度算法。取值：  wrr（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。 wlc：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。 rr：按照访问顺序依次将外部请求依序分发到后端服务器。',
            'description' => '调度算法。取值：
- **wrr**（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。
- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。
- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。
- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。
- **iqch**：针对iQUIC CID的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。
',
            'type' => 'string',
            'required' => false,
            'example' => 'wrr',
            'enum' => 
            array (
              0 => 'wrr',
              1 => 'wlc',
              2 => 'rr',
            ),
          ),
        ),
        7 => 
        array (
          'name' => 'HealthCheck',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启健康检查。  取值：on | off。',
            'description' => '是否开启健康检查。取值：
- **on**：开启。
- **off**：关闭。',
            'type' => 'string',
            'required' => true,
            'example' => 'on',
          ),
        ),
        8 => 
        array (
          'name' => 'HealthCheckDomain',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于健康检查的域名，取值：  $_ip： 后端服务器的私网IP。当指定了IP或该参数未指定时，负载均衡会使用各后端服务器的私网IP当做健康检查使用的域名。是否要支持？ domain：域名长度为1-80字符，只能包含字母、数字、点号（.）和连字符（-）。   说明 在HealthCheck值为on时才会有效。',
            'description' => '用于健康检查的域名。

> HealthCheck值为on时才会有效。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.aliyundoc.com',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        9 => 
        array (
          'name' => 'HealthCheckURI',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于健康检查的URI。  长度限制为1~80，只能使用字母、数字和”-/.%?#&amp;“这些字符。 URL不能只为”/“，但必须以”/“开头。    说明 在HealthCheck值为on时才会有效。',
            'description' => '用于健康检查的URI。长度限制为**1**~**80**。
> - URL不能只有`/`，但必须以`/`开头。
>- HealthCheck值为on时才会有效。',
            'type' => 'string',
            'required' => false,
            'example' => '/checkpreload.htm',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        10 => 
        array (
          'name' => 'HealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail判定为success。  取值：2~10。    说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。取值：**2**~**10**，默认值为**3**。
> HealthCheck值为on时才会有效。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '3',
          ),
        ),
        11 => 
        array (
          'name' => 'UnhealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success判定为fail。  取值：2~10。   说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。取值：**2**~**10**，默认值为**3**。
> HealthCheck值为on时才会有效。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '3',
          ),
        ),
        12 => 
        array (
          'name' => 'HealthCheckTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '接收来自运行状况检查的响应需要等待的时间。如果后端ECS在指定的时间内没有正确响应，则判定为健康检查失败。在HealthCheck值为on时才会有效。  取值：1~300（秒）。   说明 如果HealthCHeckTimeout的值小于HealthCheckInterval的值，则HealthCHeckTimeout无效，超时时间为HealthCheckInterval的值。',
            'description' => '接收来自运行状况检查的响应需要等待的时间。如果后端ENS在指定的时间内没有响应，则判定为健康检查失败。
- 默认值：5秒。
- 取值：**1**~**300**。
- 单位：秒。
> - HealthCheck值为on时才会有效。
>- 如果HealthCHeckTimeout的值小于HealthCheckInterval的值，则HealthCHeckTimeout无效，超时时间为HealthCheckInterval的值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '300',
            'minimum' => '1',
            'example' => '5',
          ),
        ),
        13 => 
        array (
          'name' => 'HealthCheckConnectPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查的后端服务器的端口。  取值： 1~65535。    说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查的后端服务器的端口。取值：**1**~**65535**。

> HealthCheck值为on时才会有效。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '30040',
          ),
        ),
        14 => 
        array (
          'name' => 'HealthCheckInterval',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查的时间间隔。  取值： 1~50（秒）。   说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查的时间间隔。取值：**1**~**50**，默认值为**2**，单位：秒。

> HealthCheck值为on时才会有效。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '2',
          ),
        ),
        15 => 
        array (
          'name' => 'HealthCheckHttpCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查正常的HTTP状态码，多个状态码用逗号分隔。  默认值为http_2xx。  取值：http_2xx | http_3xx | http_4xx | http_5xx。   说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查正常时的HTTP状态码。取值：

- **http_2xx**（默认值）。
- **http_3xx**。
- **http_4xx**。
- **http_5xx**。

> HealthCheck值为on时才会有效。
',
            'type' => 'string',
            'required' => false,
            'example' => 'http_2xx',
          ),
        ),
        16 => 
        array (
          'name' => 'IdleTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '指定连接空闲超时时间，取值范围为1~60秒，默认值为15秒。  在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立新的连接。',
            'description' => '指定连接空闲超时时间，默认值15秒，取值：**1**~**60**，单位：秒。

> 超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立新的连接。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '60',
            'minimum' => '1',
            'example' => '15',
          ),
        ),
        17 => 
        array (
          'name' => 'RequestTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '指定请求超时时间，取值范围为1~180秒，默认值为60秒。  在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回 HTTP 504 错误码。',
            'description' => '指定请求超时时间，默认值60秒。取值：**1**~**180**，单位：秒。

> 超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回HTTP的504错误码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '180',
            'minimum' => '1',
            'example' => '60',
          ),
        ),
        18 => 
        array (
          'name' => 'HealthCheckMethod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监听HTTP类型健康检查的健康检查方法。取值：

- **head**（默认值）。
- **get**。

> HealthCheck值为on时才会有效。',
            'type' => 'string',
            'required' => false,
            'example' => 'head',
            'enum' => 
            array (
              0 => 'head',
              1 => 'get',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'ListenerAlreadyExists',
            'errorMessage' => 'The listenerPort already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateLoadBalancerHTTPListenerResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</CreateLoadBalancerHTTPListenerResponse>","errorExample":""}]',
      'title' => '创建HTTP监听',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'SetLoadBalancerHTTPListenerAttribute' => 
    array (
      'summary' => '调用SetLoadBalancerHTTPListenerAttribute修改HTTP监听的配置。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例的ID。',
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5snthcyu1x10g7tywj7iu****',
          ),
        ),
        1 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例前端使用的端口。  取值：1-65535。',
            'description' => '需要修改属性的监听端口。取值：**1**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '8080',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '设置监听的描述信息。  长度限制为1-80个字符，允许包含字母、数字、“-”、“/”、“.”和“_”等字符。支持中文描述。',
            'description' => '设置监听名称。长度限制为**1**~**80**个字符。

> 不能以`http://`和`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => '监听说明',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        3 => 
        array (
          'name' => 'Scheduler',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度算法。取值：  wrr（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。 wlc：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。 rr：按照访问顺序依次将外部请求依序分发到后端服务器。',
            'description' => '调度算法。取值：
- **wrr**：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。
- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。
- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。
- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。
- **iqch**：针对iQUIC CID的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。
',
            'type' => 'string',
            'required' => false,
            'example' => 'wrr',
            'enum' => 
            array (
              0 => 'wrr',
              1 => 'wlc',
              2 => 'rr',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'HealthCheck',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启健康检查。  取值：on | off。',
            'description' => '是否开启健康检查。取值：
- **on**：开启。
- **off**：关闭。',
            'type' => 'string',
            'required' => false,
            'example' => 'on',
          ),
        ),
        5 => 
        array (
          'name' => 'HealthCheckDomain',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于健康检查的域名，取值：  $_ip： 后端服务器的私网IP。当指定了IP或该参数未指定时，负载均衡会使用各后端服务器的私网IP当做健康检查使用的域名。是否要支持？ domain：域名长度为1-80字符，只能包含字母、数字、点号（.）和连字符（-）。   说明 在HealthCheck值为on时才会有效。',
            'description' => '用于健康检查的域名。

> HealthCheck值为on时才会有效。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.aliyundoc.com',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        6 => 
        array (
          'name' => 'HealthCheckURI',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于健康检查的URI。  长度限制为1~80，只能使用字母、数字和”-/.%?#&amp;“这些字符。 URL不能只为”/“，但必须以”/“开头。    说明 在HealthCheck值为on时才会有效。',
            'description' => '用于健康检查的URI。长度限制为**1**~**80**。

> - URL不能只有`/`，但必须以`/`开头。
>- HealthCheck值为on时才会有效。',
            'type' => 'string',
            'required' => false,
            'example' => '/checkpreload.htm',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        7 => 
        array (
          'name' => 'HealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail判定为success。  取值：2~10。    说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。取值：**2**~**10**。
> HealthCheck值为on时才会有效。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '3',
          ),
        ),
        8 => 
        array (
          'name' => 'UnhealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success判定为fail。  取值：2~10。   说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。取值：**2**~**10**。
> HealthCheck值为on时才会有效。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '3',
          ),
        ),
        9 => 
        array (
          'name' => 'HealthCheckTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '接收来自运行状况检查的响应需要等待的时间。如果后端ECS在指定的时间内没有正确响应，则判定为健康检查失败。在HealthCheck值为on时才会有效。  取值：1~300（秒）。   说明 如果HealthCHeckTimeout的值小于HealthCheckInterval的值，则HealthCHeckTimeout无效，超时时间为HealthCheckInterval的值。',
            'description' => '接收来自运行状况检查的响应需要等待的时间。如果后端ECS在指定的时间内没有响应，则判定为健康检查失败。
- 默认值：5秒。
- 取值：**1**~**300**。
- 单位：秒。
> - HealthCheck值为on时才会有效。
>- 如果HealthCHeckTimeout的值小于HealthCheckInterval的值，则HealthCHeckTimeout无效，超时时间为HealthCheckInterval的值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '300',
            'minimum' => '1',
            'example' => '5',
          ),
        ),
        10 => 
        array (
          'name' => 'HealthCheckConnectPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查的后端服务器的端口。  取值： 1~65535。    说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查使用的端口，取值：**1**~**65535**。不设置此参数时，表示使用后端服务端口（BackendServerPort）。

> HealthCheck值为on时才会有效。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '65500',
          ),
        ),
        11 => 
        array (
          'name' => 'HealthCheckInterval',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查的时间间隔。  取值： 1~50（秒）。   说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查的时间间隔。取值：**1**~**50**，单位：秒。

> HealthCheck值为on时才会有效。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '2',
          ),
        ),
        12 => 
        array (
          'name' => 'HealthCheckHttpCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查正常的HTTP状态码，多个状态码用逗号分隔。  默认值为http_2xx。  取值：http_2xx | http_3xx | http_4xx | http_5xx。   说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查正常时的HTTP状态码。取值：

- **http_2xx**（默认值）。
- **http_3xx**。
- **http_4xx**。
- **http_5xx**。

> HealthCheck值为on时才会有效。',
            'type' => 'string',
            'required' => false,
            'example' => 'http_2xx',
          ),
        ),
        13 => 
        array (
          'name' => 'IdleTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '指定连接空闲超时时间，取值范围为1~60秒，默认值为15秒。  在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立新的连接。',
            'description' => '指定连接空闲超时时间，默认值：15秒，取值：**1**~**60**，单位：秒。

> 在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立新的连接。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '60',
            'minimum' => '1',
            'example' => '15',
          ),
        ),
        14 => 
        array (
          'name' => 'RequestTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '指定请求超时时间，取值范围为1~180秒，默认值为60秒。  在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回 HTTP 504 错误码。',
            'description' => '指定请求超时时间，默认值：60秒，取值：**1**~**180**，单位：秒。

> 在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回HTTP的504错误码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '180',
            'minimum' => '1',
            'example' => '60',
          ),
        ),
        15 => 
        array (
          'name' => 'HealthCheckMethod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监听HTTP类型健康检查的健康检查方法。取值：

- **head**。
- **get**。

> HealthCheck值为on时才会有效。',
            'type' => 'string',
            'required' => false,
            'example' => 'head',
            'enum' => 
            array (
              0 => 'head',
              1 => 'get',
            ),
          ),
        ),
        16 => 
        array (
          'name' => 'XForwardedFor',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启通过X-Forwarded-For字段获取来访者真实IP。取值：
- **on**（默认值）：开启。
- **off**：关闭。',
            'type' => 'string',
            'required' => false,
            'example' => 'on',
            'enum' => 
            array (
              0 => 'on',
              1 => 'off',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'ListenerNotFound',
            'errorMessage' => 'The input parameter listener that is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectListenerStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          7 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<SetLoadBalancerHTTPListenerAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</SetLoadBalancerHTTPListenerAttributeResponse>","errorExample":""}]',
      'title' => '修改HTTP监听属性',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'DescribeLoadBalancerHTTPListenerAttribute' => 
    array (
      'summary' => '调用DescribeLoadBalancerHTTPListenerAttribute查询HTTP监听配置。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要查询的监听端口。取值：**1~65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '0',
            'example' => '80',
          ),
        ),
        1 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5snthcyu1x10g7tywj7iu****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'ListenerPort' => 
              array (
                'description' => '监听端口。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '80',
              ),
              'Status' => 
              array (
                'description' => '当前监听的状态。取值：

- **Running**：正常运行。
- **Stopped**：运行停止。
- **Starting**：启动中。
- **Configuring**：配置中。
- **Stopping**：运行停止中。
',
                'type' => 'string',
                'example' => 'Running',
              ),
              'Bandwidth' => 
              array (
                'description' => '负载均衡带宽峰值，默认值为-1（表示不限速）。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '-1',
              ),
              'Scheduler' => 
              array (
                'description' => '调度算法。取值：
- **wrr**：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。
- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。
- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。
- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。
- **iqch**：针对iQUIC CID的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。
',
                'type' => 'string',
                'example' => 'wrr',
              ),
              'HealthCheck' => 
              array (
                'description' => '是否开启健康检查。取值：
- **on**：开启。
- **off**：关闭。
',
                'type' => 'string',
                'example' => 'on',
              ),
              'HealthyThreshold' => 
              array (
                'description' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。取值：**2**~**10**。
> HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'UnhealthyThreshold' => 
              array (
                'description' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。取值：**2**~**10**。
> HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'HealthCheckTimeout' => 
              array (
                'description' => '接收来自运行状况检查的响应需要等待的时间。如果后端ENS在指定的时间内没有响应，则判定为健康检查失败。
- 默认值：5秒。
- 取值：**1**~**300**。
- 单位：秒。
> - HealthCheck值为on时才会有效。
>- 如果HealthCHeckTimeout的值小于HealthCheckInterval的值，则HealthCHeckTimeout无效，超时时间为HealthCheckInterval的值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'HealthCheckConnectPort' => 
              array (
                'description' => '健康检查使用的端口，取值：**1**~**65535**。不设置此参数时，表示使用后端服务端口（BackendServerPort）。
> HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5000',
              ),
              'HealthCheckInterval' => 
              array (
                'description' => '健康检查的时间间隔。取值：**1**~**50**，单位：秒。
> HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'Description' => 
              array (
                'description' => '设置监听的描述信息。长度限制为**1**~**80**个字符。
> 不能以`http://`和`https://`开头。
',
                'type' => 'string',
                'example' => 'abc',
              ),
              'ListenerForward' => 
              array (
                'description' => '是否开启HTTP至HTTPS的转发。取值：
- **on**：是。
- **off**（默认值）：否。',
                'type' => 'string',
                'example' => 'off',
              ),
              'ForwardPort' => 
              array (
                'description' => 'HTTP至HTTPS的监听转发端口。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10002',
              ),
              'RequestTimeout' => 
              array (
                'description' => '指定请求超时时间，默认值：60秒，取值：**1**~**180**，单位：秒。
> 在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回HTTP的504错误码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '60',
              ),
              'IdleTimeout' => 
              array (
                'description' => '指定连接空闲超时时间，默认值：15秒，取值：**1**~**60**，单位：秒。
> 在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立新的连接。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '15',
              ),
              'HealthCheckHttpCode' => 
              array (
                'description' => '健康检查正常时的HTTP状态码。取值：

- **http_2xx**（默认值）。
- **http_3xx**。
- **http_4xx**。
- **http_5xx**。

> HealthCheck值为on时才会有效。
',
                'type' => 'string',
                'example' => 'http_2xx',
              ),
              'HealthCheckDomain' => 
              array (
                'description' => '用于健康检查的域名。
> HealthCheck值为on时才会有效。
',
                'type' => 'string',
                'example' => 'www.example.com',
              ),
              'HealthCheckURI' => 
              array (
                'description' => '用于健康检查的URI。长度限制为**1**~**80**。
> - URL不能只有`/`，但必须以`/`开头。
>- HealthCheck值为on时才会有效。',
                'type' => 'string',
                'example' => '/checkpreload.htm',
              ),
              'ServerCertificateId' => 
              array (
                'description' => '服务器证书的ID。',
                'type' => 'string',
                'example' => '6027667',
              ),
              'HealthCheckMethod' => 
              array (
                'description' => '监听HTTP类型健康检查的健康检查方法。取值：

- **head**：只请求页面的首部。
- **get**：请求指定的页面信息，并返回实体主体。

> HealthCheck值为on时才会有效。
',
                'type' => 'string',
                'example' => 'head',
              ),
              'XForwardedFor' => 
              array (
                'description' => '是否开启通过X-Forwarded-For字段获取来访者真实IP。取值：
- **on**（默认值）：开启。
- **off**：关闭。',
                'type' => 'string',
                'example' => 'on
',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          2 => 
          array (
            'errorCode' => 'ListenerNotFound',
            'errorMessage' => 'Listener is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"ListenerPort\\": 80,\\n  \\"Status\\": \\"Running\\",\\n  \\"Bandwidth\\": -1,\\n  \\"Scheduler\\": \\"wrr\\",\\n  \\"HealthCheck\\": \\"on\\",\\n  \\"HealthyThreshold\\": 3,\\n  \\"UnhealthyThreshold\\": 3,\\n  \\"HealthCheckTimeout\\": 10,\\n  \\"HealthCheckConnectPort\\": 5000,\\n  \\"HealthCheckInterval\\": 5,\\n  \\"Description\\": \\"abc\\",\\n  \\"ListenerForward\\": \\"off\\",\\n  \\"ForwardPort\\": 10002,\\n  \\"RequestTimeout\\": 60,\\n  \\"IdleTimeout\\": 15,\\n  \\"HealthCheckHttpCode\\": \\"http_2xx\\",\\n  \\"HealthCheckDomain\\": \\"www.example.com\\",\\n  \\"HealthCheckURI\\": \\"/checkpreload.htm\\",\\n  \\"ServerCertificateId\\": \\"6027667\\",\\n  \\"HealthCheckMethod\\": \\"head\\",\\n  \\"XForwardedFor\\": \\"on\\\\n\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeLoadBalancerHTTPListenerAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <ListenerPort>8080</ListenerPort>\\n    <Status>Running</Status>\\n    <Bandwidth>50</Bandwidth>\\n    <Scheduler>wrr</Scheduler>\\n    <HealthCheck>on</HealthCheck>\\n    <HealthyThreshold>3</HealthyThreshold>\\n    <UnhealthyThreshold>3</UnhealthyThreshold>\\n    <HealthCheckTimeout>10</HealthCheckTimeout>\\n    <HealthCheckConnectPort>5000</HealthCheckConnectPort>\\n    <HealthCheckInterval>5</HealthCheckInterval>\\n    <Description>abc</Description>\\n    <ListenerForward>off</ListenerForward>\\n    <ForwardPort>10002</ForwardPort>\\n    <RequestTimeout>60</RequestTimeout>\\n    <IdleTimeout>15</IdleTimeout>\\n    <HealthCheckHttpCode>http_2xx</HealthCheckHttpCode>\\n    <HealthCheckDomain>www.example.com</HealthCheckDomain>\\n    <HealthCheckURI>/checkpreload.htm</HealthCheckURI>\\n    <ServerCertificateId>6027667</ServerCertificateId>\\n    <HealthCheckMethod>head</HealthCheckMethod>\\n</DescribeLoadBalancerHTTPListenerAttributeResponse>","errorExample":""}]',
      'title' => '查询HTTP监听属性',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'CreateLoadBalancerHTTPSListener' => 
    array (
      'summary' => '调用CreateLoadBalancerHTTPSListener创建HTTPS监听。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例的ID。',
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5s8w63yydi59w7klaikam****',
          ),
        ),
        1 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例前端使用的端口。  取值：1-65535。',
            'description' => '接收请求并向后端服务器进行请求转发的监听端口。取值：**1**~**65535**。
>HTTPS协议建议使用443端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '8080',
          ),
        ),
        2 => 
        array (
          'name' => 'ListenerForward',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启HTTP至HTTPS的转发。取值：on | off。',
            'description' => '是否开启HTTP至HTTPS的转发。取值：

- **on**：开启。
- **off**（默认值）：关闭。',
            'type' => 'string',
            'required' => false,
            'example' => 'off',
            'enum' => 
            array (
              0 => 'on',
              1 => 'off',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'ForwardPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'HTTP至HTTPS的监听转发端口。',
            'description' => 'HTTP至HTTPS的监听转发端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '设置监听的描述信息。  长度限制为1-80个字符，允许包含字母、数字、“-”、“/”、“.”和“_”等字符。支持中文描述。',
            'description' => '设置监听的描述信息。长度限制为**1**~**80**个字符。
> 不能以`http://`和`https://`开头。
',
            'type' => 'string',
            'required' => false,
            'example' => '监听说明',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        5 => 
        array (
          'name' => 'Scheduler',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度算法。取值：  wrr（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。 wlc：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。 rr：按照访问顺序依次将外部请求依序分发到后端服务器。',
            'description' => '调度算法。取值：
- **wrr**（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。
- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。
- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。
- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。
- **iqch**：针对iQUIC CID的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。
',
            'type' => 'string',
            'required' => false,
            'example' => 'wrr',
            'enum' => 
            array (
              0 => 'wrr',
              1 => 'wlc',
              2 => 'rr',
            ),
          ),
        ),
        6 => 
        array (
          'name' => 'StickySessionType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'cookie的处理方式。取值：  insert：植入Cookie。  客户端第一次访问时，负载均衡会在返回请求中植入Cookie（即在HTTP/HTTPS响应报文中插入SERVERID），下次客户端携带此Cookie访问，负载均衡服务会将请求定向转发给之前记录到的后端服务器上。  server：重写Cookie。  负载均衡发现用户自定义了Cookie，将会对原来的Cookie进行重写，下次客户端携带新的Cookie访问，负载均衡服务会将请求定向转发给之前记录到的后端服务器。   说明 当StickySession的值为on时，必须指定该参数。',
            'description' => 'Cookie的处理方式。取值：

- **insert**：植入Cookie。客户端第一次访问时，负载均衡会在返回请求中植入Cookie（即在HTTP或者HTTPS响应报文中插入SERVERID），下次客户端携带此Cookie访问，负载均衡服务会将请求定向转发给之前记录到的后端服务器上。
- **server**：重写Cookie。负载均衡发现用户自定义了Cookie，将会对原来的Cookie进行重写，下次客户端携带新的Cookie访问，负载均衡服务会将请求定向转发给之前记录到的后端服务器。


>当StickySession的值为on时，必须指定该参数',
            'type' => 'string',
            'required' => false,
            'example' => 'insert',
            'enum' => 
            array (
              0 => 'insert',
              1 => 'server',
            ),
          ),
        ),
        7 => 
        array (
          'name' => 'CookieTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Cookie超时时间。  取值：1~86400（秒）。   说明 当StickySession为on且StickySessionType为insert时，该参数必选。',
            'description' => 'Cookie超时时间。取值：**1**~**86400**，单位：秒。
>当StickySession为on且StickySessionType为insert时，该参数必选。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '86400',
            'minimum' => '1',
            'example' => '100',
          ),
        ),
        8 => 
        array (
          'name' => 'Cookie',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务器上配置的Cookie。 长度为1-200，只能包含ASCII英文字母和数字字符，不能包含逗号、分号或空格，也不能以$开头。 说明 当StickySession为on且StickySessionType为server时，该参数必选。',
            'description' => '服务器上配置的Cookie。长度为**1**~**200**，只能包含ASCII英文字母和数字字符。
>当StickySession为on且StickySessionType为server时，该参数必选。',
            'type' => 'string',
            'required' => false,
            'example' => 'example',
          ),
        ),
        9 => 
        array (
          'name' => 'HealthCheck',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启健康检查。  取值：on | off。',
            'description' => '是否开启健康检查。取值：
- **on**：开启。
- **off**：关闭。
',
            'type' => 'string',
            'required' => true,
            'example' => 'on',
            'enum' => 
            array (
              0 => 'on',
              1 => 'off',
            ),
          ),
        ),
        10 => 
        array (
          'name' => 'HealthCheckDomain',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于健康检查的域名，取值：  $_ip： 后端服务器的私网IP。当指定了IP或该参数未指定时，负载均衡会使用各后端服务器的私网IP当做健康检查使用的域名。是否要支持？ domain：域名长度为1-80字符，只能包含字母、数字、点号（.）和连字符（-）。   说明 在HealthCheck值为on时才会有效。',
            'description' => '用于健康检查的域名。
>HealthCheck值为on时才会有效。

',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        11 => 
        array (
          'name' => 'HealthCheckURI',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于健康检查的URI。  长度限制为1~80，只能使用字母、数字和”-/.%?#&amp;“这些字符。 URL不能只为”/“，但必须以”/“开头。    说明 在HealthCheck值为on时才会有效。',
            'description' => '用于健康检查的URI。长度限制为**1**~**80**。
>  URL不能只有`/`，但必须以`/`开头。',
            'type' => 'string',
            'required' => false,
            'example' => '/checkpreload.htm',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        12 => 
        array (
          'name' => 'HealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail判定为success。  取值：2~10。    说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。取值：**2**~**10**，默认值为**3**。
> HealthCheck值为on时才会有效。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '3',
          ),
        ),
        13 => 
        array (
          'name' => 'UnhealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success判定为fail。  取值：2~10。   说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。取值：**2**~**10**，默认值为**3**。
> HealthCheck值为on时才会有效。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '3',
          ),
        ),
        14 => 
        array (
          'name' => 'HealthCheckTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '接收来自运行状况检查的响应需要等待的时间。如果后端ECS在指定的时间内没有正确响应，则判定为健康检查失败。在HealthCheck值为on时才会有效。  取值：1~300（秒）。   说明 如果HealthCHeckTimeout的值小于HealthCheckInterval的值，则HealthCHeckTimeout无效，超时时间为HealthCheckInterval的值。',
            'description' => '接收来自运行状况检查的响应需要等待的时间。如果后端ENS在指定的时间内没有响应，则判定为健康检查失败。
- 默认值：5秒。
- 取值：**1**~**300**。
- 单位：秒。
> - HealthCheck值为on时才会有效。
>- 如果HealthCHeckTimeout的值小于HealthCheckInterval的值，则HealthCHeckTimeout无效，超时时间为HealthCheckInterval的值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '300',
            'minimum' => '1',
            'example' => '5',
          ),
        ),
        15 => 
        array (
          'name' => 'HealthCheckConnectPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查的后端服务器的端口。  取值： 1~65535。    说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查使用的端口，取值：**1**~**65535**。不设置此参数时，表示使用后端服务端口（BackendServerPort）。
> HealthCheck值为on时才会有效。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '11',
          ),
        ),
        16 => 
        array (
          'name' => 'HealthCheckInterval',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查的时间间隔。  取值： 1~50（秒）。   说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查的时间间隔。取值：**1**~**50**，默认值为**2**，单位：秒。
>HealthCheck值为on时才会有效。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '2',
          ),
        ),
        17 => 
        array (
          'name' => 'HealthCheckHttpCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查正常的HTTP状态码，多个状态码用逗号分隔。  默认值为http_2xx。  取值：http_2xx | http_3xx | http_4xx | http_5xx。   说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查正常时的HTTP状态码。取值：

- **http_2xx**（默认值）。
- **http_3xx**。
- **http_4xx**。
- **http_5xx**。

> HealthCheck值为on时才会有效。
',
            'type' => 'string',
            'required' => false,
            'example' => 'http_2xx',
          ),
        ),
        18 => 
        array (
          'name' => 'IdleTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '指定连接空闲超时时间，取值范围为1~60秒，默认值为15秒。  在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立新的连接。',
            'description' => '指定连接空闲超时时间，默认值：15秒，取值：**1**~**60**，单位：秒。
> 在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立新的连接。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '60',
            'minimum' => '1',
            'example' => '15',
          ),
        ),
        19 => 
        array (
          'name' => 'RequestTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '指定请求超时时间，取值范围为1~180秒，默认值为60秒。  在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回 HTTP 504 错误码。',
            'description' => '指定请求超时时间，默认值：60秒，取值：**1**~**180**，单位：秒。
> 在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回HTTP的504错误码。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '180',
            'minimum' => '1',
            'example' => '60',
          ),
        ),
        20 => 
        array (
          'name' => 'ServerCertificateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务器证书的ID。',
            'description' => '服务器证书的ID。',
            'type' => 'string',
            'required' => true,
            'example' => '60276**',
          ),
        ),
        21 => 
        array (
          'name' => 'HealthCheckMethod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监听HTTP类型健康检查的健康检查方法。取值：

- **head**（默认值）：只请求页面的首部。
- **get**：请求指定的页面信息，并返回实体主体。

> HealthCheck值为on时才会有效。
',
            'type' => 'string',
            'required' => false,
            'example' => 'head',
            'enum' => 
            array (
              0 => 'get',
              1 => 'head',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.	',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'ServerCertificateNotFound',
            'errorMessage' => 'The input parameter serverCertificateId that is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'ListenerAlreadyExists',
            'errorMessage' => 'The listenerPort already exists.',
          ),
          7 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateLoadBalancerHTTPSListenerResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</CreateLoadBalancerHTTPSListenerResponse>","errorExample":""}]',
      'title' => '创建HTTPS监听',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'SetLoadBalancerHTTPSListenerAttribute' => 
    array (
      'summary' => '调用SetLoadBalancerHTTPSListenerAttribute修改HTTPS监听的配置。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例的ID。',
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5snthcyu1x10g7tywj7iu****',
          ),
        ),
        1 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '负载均衡实例前端使用的端口。  取值：1-65535。',
            'description' => '需要修改属性的监听端口。取值：**1**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '10002',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '设置监听的描述信息。  长度限制为1-80个字符，允许包含字母、数字、“-”、“/”、“.”和“_”等字符。支持中文描述。',
            'description' => '设置监听名称。长度限制为**1**~**80**个字符。

> 不能以`http://`和`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => '监听说明',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        3 => 
        array (
          'name' => 'Scheduler',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度算法。取值：  wrr（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。 wlc：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。 rr：按照访问顺序依次将外部请求依序分发到后端服务器。',
            'description' => '调度算法。取值：
- **wrr**：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。
- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。
- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。
- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。
- **iqch**：针对iQUIC CID的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。
',
            'type' => 'string',
            'required' => false,
            'example' => 'wrr',
            'enum' => 
            array (
              0 => 'wrr',
              1 => 'wlc',
              2 => 'rr',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'HealthCheck',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否开启健康检查。  取值：on | off。',
            'description' => '是否开启健康检查。取值：
- **on**：开启。
- **off**：关闭。
',
            'type' => 'string',
            'required' => false,
            'example' => 'on',
          ),
        ),
        5 => 
        array (
          'name' => 'HealthCheckDomain',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于健康检查的域名，取值：  $_ip： 后端服务器的私网IP。当指定了IP或该参数未指定时，负载均衡会使用各后端服务器的私网IP当做健康检查使用的域名。是否要支持？ domain：域名长度为1-80字符，只能包含字母、数字、点号（.）和连字符（-）。   说明 在HealthCheck值为on时才会有效。',
            'description' => '用于健康检查的域名。

> 在HealthCheck值为on时才会有效。
',
            'type' => 'string',
            'required' => false,
            'example' => 'www.example.com',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        6 => 
        array (
          'name' => 'HealthCheckURI',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于健康检查的URI。  长度限制为1~80，只能使用字母、数字和”-/.%?#&amp;“这些字符。 URL不能只为”/“，但必须以”/“开头。    说明 在HealthCheck值为on时才会有效。',
            'description' => '用于健康检查的URI。长度限制为**1**~**80**。
> - URL不能只有`/`，但必须以`/`开头。
>- HealthCheck值为on时才会有效。',
            'type' => 'string',
            'required' => false,
            'example' => '/checkpreload.htm',
            'maxLength' => 80,
            'minLength' => 1,
          ),
        ),
        7 => 
        array (
          'name' => 'HealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail判定为success。  取值：2~10。    说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。取值：**2**~**10**。
> HealthCheck值为on时才会有效。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '3',
          ),
        ),
        8 => 
        array (
          'name' => 'UnhealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success判定为fail。  取值：2~10。   说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。取值：**2**~**10**。
> HealthCheck值为on时才会有效。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '2',
            'example' => '3',
          ),
        ),
        9 => 
        array (
          'name' => 'HealthCheckTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '接收来自运行状况检查的响应需要等待的时间。如果后端ECS在指定的时间内没有正确响应，则判定为健康检查失败。在HealthCheck值为on时才会有效。  取值：1~300（秒）。   说明 如果HealthCHeckTimeout的值小于HealthCheckInterval的值，则HealthCHeckTimeout无效，超时时间为HealthCheckInterval的值。',
            'description' => '接收来自运行状况检查的响应需要等待的时间。如果后端ENS在指定的时间内没有响应，则判定为健康检查失败。
- 默认值：5秒。
- 取值：**1**~**300**。
- 单位：秒。
> - HealthCheck值为on时才会有效。
>- 如果HealthCHeckTimeout的值小于HealthCheckInterval的值，则HealthCHeckTimeout无效，超时时间为HealthCheckInterval的值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '300',
            'minimum' => '1',
            'example' => '9',
          ),
        ),
        10 => 
        array (
          'name' => 'HealthCheckConnectPort',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查的后端服务器的端口。  取值： 1~65535。    说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查使用的端口，取值：**1**~**65535**。不设置此参数时，表示使用后端服务端口（BackendServerPort）。
> HealthCheck值为on时才会有效。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '7001',
          ),
        ),
        11 => 
        array (
          'name' => 'HealthCheckInterval',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查的时间间隔。  取值： 1~50（秒）。   说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查的时间间隔。取值：**1**~**50**，单位：秒。

> 在HealthCheck值为on时才会有效。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '2',
          ),
        ),
        12 => 
        array (
          'name' => 'HealthCheckHttpCode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '健康检查正常的HTTP状态码，多个状态码用逗号分隔。  默认值为http_2xx。  取值：http_2xx | http_3xx | http_4xx | http_5xx。   说明 在HealthCheck值为on时才会有效。',
            'description' => '健康检查正常时的HTTP状态码。取值：

- **http_2xx**（默认值）。
- **http_3xx**。
- **http_4xx**。
- **http_5xx**。

> HealthCheck值为on时才会有效。
',
            'type' => 'string',
            'required' => false,
            'example' => 'http_2xx',
          ),
        ),
        13 => 
        array (
          'name' => 'IdleTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '指定连接空闲超时时间，取值范围为1~60秒，默认值为15秒。  在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立新的连接。',
            'description' => '指定连接空闲超时时间，默认值：15秒，取值：**1**~**60**，单位：秒。
> 在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立新的连接。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '60',
            'minimum' => '1',
            'example' => '15',
          ),
        ),
        14 => 
        array (
          'name' => 'RequestTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '指定请求超时时间，取值范围为1~180秒，默认值为60秒。  在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回 HTTP 504 错误码。',
            'description' => '指定请求超时时间，默认值：60秒，取值：**1**~**180**，单位：秒。
> 在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回HTTP的504错误码。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '180',
            'minimum' => '1',
            'example' => '60',
          ),
        ),
        15 => 
        array (
          'name' => 'ServerCertificateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务器证书的ID。',
            'description' => '服务器证书的ID。',
            'type' => 'string',
            'required' => false,
            'example' => '6027667',
          ),
        ),
        16 => 
        array (
          'name' => 'HealthCheckMethod',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '监听HTTP类型健康检查的健康检查方法。取值：

- **head**（默认值）：只请求页面的首部。
- **get**：请求指定的页面信息，并返回实体主体。

> HealthCheck值为on时才会有效。
',
            'type' => 'string',
            'required' => false,
            'example' => 'get',
            'enum' => 
            array (
              0 => 'head',
              1 => 'get',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'ListenerNotFound',
            'errorMessage' => 'The input parameter listener that is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectListenerStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          6 => 
          array (
            'errorCode' => 'ServerCertificateNotFound',
            'errorMessage' => 'The input parameter serverCertificateId that is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          8 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<SetLoadBalancerHTTPSListenerAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</SetLoadBalancerHTTPSListenerAttributeResponse>","errorExample":""}]',
      'title' => '修改HTTPS监听属性',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'DescribeLoadBalancerHTTPSListenerAttribute' => 
    array (
      'summary' => '调用DescribeLoadBalancerHTTPSListenerAttribute查询HTTPS监听配置。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要查询的监听端口。取值：**1**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '0',
            'example' => '443',
          ),
        ),
        1 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的ID。

',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5qoxu2rsr0ytanpn4r3i****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'ListenerPort' => 
              array (
                'description' => '负载均衡实例前端使用的端口。取值：**1**~**65535**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '8080',
              ),
              'Status' => 
              array (
                'description' => '当前监听的状态。取值：

- **Running**：正常运行。
- **Stopped**：运行停止。
- **Starting**：启动中。
- **Configuring**：配置中。
- **Stopping**：运行停止中。
',
                'type' => 'string',
                'example' => 'Running',
              ),
              'Bandwidth' => 
              array (
                'description' => '负载均衡带宽峰值，默认值为-1（表示不限速）。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '50',
              ),
              'Scheduler' => 
              array (
                'description' => '调度算法。取值：
- **wrr**：权重值越高的后端服务器，被轮询到的次数（概率）也越高。
- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。
- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。
- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。
- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。
- **iqch**：针对iQUIC CID的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。
',
                'type' => 'string',
                'example' => 'wrr',
              ),
              'HealthCheck' => 
              array (
                'description' => '是否开启健康检查。取值：
- **on**：开启。
- **off**：关闭。
',
                'type' => 'string',
                'example' => 'on',
              ),
              'HealthyThreshold' => 
              array (
                'description' => '健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。取值：**2**~**10**。
> HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'UnhealthyThreshold' => 
              array (
                'description' => '健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。取值：**2**~**10**。
> HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'HealthCheckTimeout' => 
              array (
                'description' => '接收来自运行状况检查的响应需要等待的时间。如果后端ENS在指定的时间内没有响应，则判定为健康检查失败。
- 默认值：5秒。
- 取值：**1**~**300**。
- 单位：秒。
>- HealthCheck值为on时才会有效。
>- 如果HealthCHeckTimeout的值小于HealthCheckInterval的值，则HealthCHeckTimeout无效，超时时间为HealthCheckInterval的值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'HealthCheckConnectPort' => 
              array (
                'description' => '健康检查使用的端口，取值：**1**~**65535**。不设置此参数时，表示使用后端服务端口（BackendServerPort）。
> HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '9902',
              ),
              'HealthCheckInterval' => 
              array (
                'description' => '健康检查的时间间隔。取值：**1**~**50**，单位：秒。

> 在HealthCheck值为on时才会有效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'Description' => 
              array (
                'description' => '设置监听的描述信息。长度限制为**1**~**80**个字符。',
                'type' => 'string',
                'example' => 'abc',
              ),
              'ListenerForward' => 
              array (
                'description' => '是否开启HTTP至HTTPS的转发。取值：

- on：开启。
- off：关闭。
',
                'type' => 'string',
                'example' => 'off',
              ),
              'ForwardPort' => 
              array (
                'description' => 'HTTP至HTTPS的监听转发端口。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestTimeout' => 
              array (
                'description' => '指定请求超时时间，默认值：60秒，取值：**1**~**180**，单位：秒。
> 在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回HTTP的504错误码。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '60',
              ),
              'IdleTimeout' => 
              array (
                'description' => '指定连接空闲超时时间，默认值：15秒，取值：**1**~**60**，单位：秒。
> 在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立新的连接。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '15',
              ),
              'HealthCheckHttpCode' => 
              array (
                'description' => '健康检查正常时的HTTP状态码。取值：

- **http_2xx**（默认值）。
- **http_3xx**。
- **http_4xx**。
- **http_5xx**。

> HealthCheck值为on时才会有效。
',
                'type' => 'string',
                'example' => 'http_2xx',
              ),
              'HealthCheckDomain' => 
              array (
                'description' => '用于健康检查的域名。

> 在HealthCheck值为on时才会有效。
',
                'type' => 'string',
                'example' => 'www.test.com',
              ),
              'HealthCheckURI' => 
              array (
                'description' => '用于健康检查的URI。长度限制为**1**~**80**。
- URL不能只有`/`，但必须以`/`开头。
- HealthCheck值为on时才会有效。',
                'type' => 'string',
                'example' => '/checkpreload.htm',
              ),
              'ServerCertificateId' => 
              array (
                'description' => '服务器证书的ID。

',
                'type' => 'string',
                'example' => '60276**',
              ),
              'HealthCheckMethod' => 
              array (
                'description' => '监听HTTP类型健康检查的健康检查方法。取值：

- **head**：只请求页面的首部。
- **get**：请求指定的页面信息，并返回实体主体。

> HealthCheck值为on时才会有效。
',
                'type' => 'string',
                'example' => 'head',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"ListenerPort\\": 8080,\\n  \\"Status\\": \\"Running\\",\\n  \\"Bandwidth\\": 50,\\n  \\"Scheduler\\": \\"wrr\\",\\n  \\"HealthCheck\\": \\"on\\",\\n  \\"HealthyThreshold\\": 3,\\n  \\"UnhealthyThreshold\\": 3,\\n  \\"HealthCheckTimeout\\": 5,\\n  \\"HealthCheckConnectPort\\": 9902,\\n  \\"HealthCheckInterval\\": 5,\\n  \\"Description\\": \\"abc\\",\\n  \\"ListenerForward\\": \\"off\\",\\n  \\"ForwardPort\\": 0,\\n  \\"RequestTimeout\\": 60,\\n  \\"IdleTimeout\\": 15,\\n  \\"HealthCheckHttpCode\\": \\"http_2xx\\",\\n  \\"HealthCheckDomain\\": \\"www.test.com\\",\\n  \\"HealthCheckURI\\": \\"/checkpreload.htm\\",\\n  \\"ServerCertificateId\\": \\"60276**\\",\\n  \\"HealthCheckMethod\\": \\"head\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeLoadBalancerHTTPSListenerAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <ListenerPort>8080</ListenerPort>\\n    <Status>Running</Status>\\n    <Bandwidth>50</Bandwidth>\\n    <Scheduler>wrr</Scheduler>\\n    <HealthCheck>on</HealthCheck>\\n    <HealthyThreshold>3</HealthyThreshold>\\n    <UnhealthyThreshold>3</UnhealthyThreshold>\\n    <HealthCheckTimeout>5</HealthCheckTimeout>\\n    <HealthCheckConnectPort>9902</HealthCheckConnectPort>\\n    <HealthCheckInterval>5</HealthCheckInterval>\\n    <Description>abc</Description>\\n    <ListenerForward>off</ListenerForward>\\n    <ForwardPort>0</ForwardPort>\\n    <RequestTimeout>60</RequestTimeout>\\n    <IdleTimeout>15</IdleTimeout>\\n    <HealthCheckHttpCode>http_2xx</HealthCheckHttpCode>\\n    <HealthCheckDomain>www.test.com</HealthCheckDomain>\\n    <HealthCheckURI>/checkpreload.htm</HealthCheckURI>\\n    <ServerCertificateId>6027667</ServerCertificateId>\\n    <HealthCheckMethod>head</HealthCheckMethod>\\n</DescribeLoadBalancerHTTPSListenerAttributeResponse>","errorExample":""}]',
      'title' => '查询HTTPS监听属性',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'StartLoadBalancerListener' => 
    array (
      'summary' => '调用StartLoadBalancerListener启动监听。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要启动的监听端口。取值：**1**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '0',
            'example' => '8080',
          ),
        ),
        1 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5saivuir6b1mupxjfbhmk****',
          ),
        ),
        2 => 
        array (
          'name' => 'ListenerProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例前端使用的协议。取值：

- tcp

- udp

- http

- https


> 相同端口存在不同协议监听时，此字段必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'tcp',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'ListenerNotFound',
            'errorMessage' => 'The input parameter listener that is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectListenerStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          7 => 
          array (
            'errorCode' => 'TooManyListeners',
            'errorMessage' => 'More than 1 listener is found, please be more specified.',
          ),
          8 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<StartLoadBalancerListenerResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</StartLoadBalancerListenerResponse>","errorExample":""}]',
      'title' => '启动监听',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'StopLoadBalancerListener' => 
    array (
      'summary' => '调用StopLoadBalancerListener停止监听。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要停止的监听端口。取值：**1**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '0',
            'example' => '8080',
          ),
        ),
        1 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5sc1s9zrui8lpb8u7cl4f****',
          ),
        ),
        2 => 
        array (
          'name' => 'ListenerProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例前端使用的协议。

> 相同端口存在不同协议监听时，此字段必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'tcp',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'ListenerNotFound',
            'errorMessage' => 'The input parameter listener that is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectListenerStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          7 => 
          array (
            'errorCode' => 'TooManyListeners',
            'errorMessage' => 'More than 1 listener is found, please be more specified.',
          ),
          8 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<StopLoadBalancerListenerResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</StopLoadBalancerListenerResponse>","errorExample":""}]',
      'title' => '停止监听',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'DeleteLoadBalancerListener' => 
    array (
      'summary' => '调用DeleteLoadBalancerListener删除监听。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ListenerPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例前端使用的端口。取值：**1**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '8080',
          ),
        ),
        1 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5snthcyu1x10g7tywj7iu****',
          ),
        ),
        2 => 
        array (
          'name' => 'ListenerProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例前端使用的协议。

> 相同端口存在不同协议监听时，此字段必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'tcp',
            'enum' => 
            array (
              0 => 'tcp',
              1 => 'udp',
              2 => 'http',
              3 => 'https',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'ListenerNotFound',
            'errorMessage' => 'The input parameter listener that is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectListenerStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          7 => 
          array (
            'errorCode' => 'TooManyListeners',
            'errorMessage' => 'More than 1 listener is found, please be more specified.',
          ),
          8 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteLoadBalancerListenerResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</DeleteLoadBalancerListenerResponse>","errorExample":""}]',
      'title' => '删除监听',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'AddBackendServers' => 
    array (
      'summary' => '调用AddBackendServers添加后端服务器。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例前端使用的端口。取值：**1**~**65535**。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5qzdmxefgrpxd7oz2mefonvtx',
          ),
        ),
        1 => 
        array (
          'name' => 'BackendServers',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '添加的后端服务器列表，每次调用最多可添加20个后端服务器。

> 后端服务器（ENS实例）必须是运行中才可以加入负载均衡实例。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '添加的后端服务器列表，每次调用最多可添加20个后端服务器。

> 后端服务器（ENS实例）必须是运行中才可以加入负载均衡实例，',
              'type' => 'object',
              'properties' => 
              array (
                'ServerId' => 
                array (
                  'description' => 'ENS实例ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'i-5uf6dwyzch3wly790****',
                ),
                'Weight' => 
                array (
                  'title' => '后端服务器的权重。  取值：0~100  默认值为100，如果值为0，则不会将请求转发给该后端服务器。',
                  'description' => '后端服务器的权重。默认值：100，取值：**0**~**100**。

> 取值为0，表示不会将请求转发给该后端服务器。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'maximum' => '100',
                  'minimum' => '0',
                  'example' => '100',
                ),
                'Type' => 
                array (
                  'title' => '后端服务器类型。  ens：ENS实例（默认）',
                  'description' => '后端服务器类型。取值：
- **ens**：ENS实例。
- **eni**：弹性网卡实例。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'ens',
                  'enum' => 
                  array (
                    0 => 'ens',
                    1 => 'eni',
                  ),
                ),
                'Ip' => 
                array (
                  'description' => '后端服务器IP地址。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.0.1',
                  'pattern' => '((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))',
                ),
                'Port' => 
                array (
                  'title' => '端口',
                  'description' => '负载均衡实例后端使用的端口。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'maximum' => '65535',
                  'minimum' => '0',
                  'example' => '3309',
                ),
              ),
              'required' => true,
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'BackendServers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'BackendServer' => 
                  array (
                    'description' => '添加的后端服务器列表，每次调用最多可添加20个后端服务器。

> 后端服务器（ENS实例）必须是运行中才可以加入负载均衡实例。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '后端服务器列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ServerId' => 
                        array (
                          'description' => '后端服务器的实例ID。',
                          'type' => 'string',
                          'example' => 'i-5uf6hj58zvml4ali8****',
                        ),
                        'Weight' => 
                        array (
                          'description' => '后端服务器的权重。默认值：100，取值：**0**~**100**  。

> 取值为0，表示不会将请求转发给该后端服务器。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'Type' => 
                        array (
                          'description' => '后端服务器类型。取值：
- **ens**：ENS实例。
- **eni**：弹性网卡实例。',
                          'type' => 'string',
                          'example' => 'ens',
                        ),
                        'Ip' => 
                        array (
                          'description' => '后端服务器IP地址。',
                          'type' => 'string',
                          'example' => '192.168.0.1',
                        ),
                        'Port' => 
                        array (
                          'description' => '负载均衡实例后端使用的端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          3 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The input parameter instanceId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.Mismatch',
            'errorMessage' => 'Specified loadbalancer and backendServer are not in the same network.',
          ),
          5 => 
          array (
            'errorCode' => 'QuotaExceed.BackendServer',
            'errorMessage' => 'Backend servers quota exceeded in this loadbalancer.',
          ),
          6 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          7 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.EniType',
            'errorMessage' => 'The type of eni is invalid',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.EniStatus',
            'errorMessage' => 'The status of eni is invalid',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidParameter.EniServiceManaged',
            'errorMessage' => 'The eni is managed by service',
          ),
          11 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"BackendServers\\": {\\n    \\"BackendServer\\": [\\n      {\\n        \\"ServerId\\": \\"i-5uf6hj58zvml4ali8****\\",\\n        \\"Weight\\": 100,\\n        \\"Type\\": \\"ens\\",\\n        \\"Ip\\": \\"192.168.0.1\\",\\n        \\"Port\\": 0\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<AddBackendServersResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <BackendServers>\\n        <ServerId>i-5uf6hj58zvml4ali8****</ServerId>\\n        <Weight>100</Weight>\\n        <Type>ens</Type>\\n        <Ip>192.168.0.1</Ip>\\n        <Port>0</Port>\\n    </BackendServers>\\n</AddBackendServersResponse>","errorExample":""}]',
      'title' => '添加后端服务器',
      'description' => '- API调用频率：100次/秒。
- 单用户调用频率：10次/秒。',
    ),
    'RemoveBackendServers' => 
    array (
      'summary' => '调用RemoveBackendServers移除后端服务器。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5ovkn1piwqmoqrfjdyhq4****',
          ),
        ),
        1 => 
        array (
          'name' => 'BackendServers',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '添加的后端服务器列表，每次调用最多可删除20个后端服务器。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '添加的后端服务器列表，每次调用最多可删除20个后端服务器。',
              'type' => 'object',
              'properties' => 
              array (
                'ServerId' => 
                array (
                  'description' => '后端服务器的实例ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'i-5uf68ts0fqexe1a4n****',
                ),
                'Weight' => 
                array (
                  'title' => '后端服务器的权重。  取值：0~100  默认值为100，如果值为0，则不会将请求转发给该后端服务器。',
                  'description' => '后端服务器的权重。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'maximum' => '100',
                  'minimum' => '0',
                  'example' => '100',
                ),
                'Type' => 
                array (
                  'title' => '后端服务器类型。  ens：ENS实例（默认）',
                  'description' => '后端服务器类型。取值：
- **ens**：ENS实例。
- **eni**：弹性网卡实例。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'ens',
                  'enum' => 
                  array (
                    0 => 'ens',
                    1 => 'eni',
                  ),
                ),
                'Ip' => 
                array (
                  'description' => '后端服务器IP地址。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.0.1',
                  'pattern' => '((25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))\\.){3}(25[0-5]|2[0-4]\\d|((1\\d{2})|([1-9]?\\d)))',
                ),
                'Port' => 
                array (
                  'title' => '端口',
                  'description' => '负载均衡实例后端使用的端口。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'maximum' => '65535',
                  'minimum' => '0',
                  'example' => '0',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'BackendServers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'BackendServer' => 
                  array (
                    'description' => '添加的后端服务器列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '添加的后端服务器列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ServerId' => 
                        array (
                          'description' => '后端服务器的实例ID。',
                          'type' => 'string',
                          'example' => 'i-5vb5h5njxiuhn48a****',
                        ),
                        'Weight' => 
                        array (
                          'description' => '后端服务器的权重。

> 取值为0，表示不会将请求转发给该后端服务器。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '50',
                        ),
                        'Type' => 
                        array (
                          'description' => '后端服务器类型。取值：
- **ens**：ENS实例。
- **eni**：弹性网卡实例。',
                          'type' => 'string',
                          'example' => 'ens',
                        ),
                        'Ip' => 
                        array (
                          'description' => '后端服务器IP地址。',
                          'type' => 'string',
                          'example' => '192.168.0.1',
                        ),
                        'Port' => 
                        array (
                          'description' => '负载均衡实例后端使用的端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter LoadBalancerId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          3 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          4 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"BackendServers\\": {\\n    \\"BackendServer\\": [\\n      {\\n        \\"ServerId\\": \\"i-5vb5h5njxiuhn48a****\\",\\n        \\"Weight\\": 50,\\n        \\"Type\\": \\"ens\\",\\n        \\"Ip\\": \\"192.168.0.1\\",\\n        \\"Port\\": 0\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RemoveBackendServersResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <BackendServers>\\n        <ServerId>i-5vb5h5njxiuhn48a****</ServerId>\\n        <Weight>50</Weight>\\n        <Type>ens</Type>\\n        <Ip>192.168.0.1</Ip>\\n        <Port>0</Port>\\n    </BackendServers>\\n</RemoveBackendServersResponse>","errorExample":""}]',
      'title' => '移除后端服务器',
    ),
    'SetBackendServers' => 
    array (
      'summary' => '调用SetBackendServers设置后端服务器权重。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LoadBalancerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5s7crik3yo3bp03gqrbp5****',
          ),
        ),
        1 => 
        array (
          'name' => 'BackendServers',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '添加的后端服务器列表，每次调用最多可修改20个后端服务器。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '后端服务器列表。',
              'type' => 'object',
              'properties' => 
              array (
                'ServerId' => 
                array (
                  'description' => '后端服务器的实例ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'i-5ze0o05xccvbljtn****',
                ),
                'Weight' => 
                array (
                  'title' => '后端服务器的权重。  取值：0~100  默认值为100，如果值为0，则不会将请求转发给该后端服务器。',
                  'description' => '后端服务器的权重。默认值：100，取值：**0**~**100**。

> 取值为0，表示不会将请求转发给该后端服务器。
',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => true,
                  'maximum' => '100',
                  'minimum' => '0',
                  'example' => '20',
                ),
                'Type' => 
                array (
                  'title' => '后端服务器类型。  ens：ENS实例（默认）',
                  'description' => '后端服务器类型。取值：
- **ens**：ENS实例。
- **eni**：弹性网卡实例。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'ens',
                  'enum' => 
                  array (
                    0 => 'ens',
                    1 => 'eni',
                  ),
                ),
              ),
              'required' => false,
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'BackendServers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'BackendServer' => 
                  array (
                    'description' => '后端服务器列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '后端服务器列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ServerId' => 
                        array (
                          'description' => '后端服务器的实例ID。',
                          'type' => 'string',
                          'example' => 'i-5uf6hj58zvml4ali8****',
                        ),
                        'Weight' => 
                        array (
                          'description' => '后端服务器的权重。默认值：100，取值：**0**~**100**。

> 取值为0，表示不会将请求转发给该后端服务器。
',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'Type' => 
                        array (
                          'description' => '后端服务器类型。取值：
- **ens**：ENS实例。
- **eni**：弹性网卡实例。',
                          'type' => 'string',
                          'example' => 'ens',
                        ),
                        'Ip' => 
                        array (
                          'description' => '后端服务器IP地址。',
                          'type' => 'string',
                          'example' => '192.168.0.1',
                        ),
                        'Port' => 
                        array (
                          'description' => '负载均衡实例后端使用的端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter loadBalancerId that is not found.	',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          3 => 
          array (
            'errorCode' => 'BackendServerNotFound',
            'errorMessage' => 'The input parameter serverId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          6 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The input parameter instanceId that is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"BackendServers\\": {\\n    \\"BackendServer\\": [\\n      {\\n        \\"ServerId\\": \\"i-5uf6hj58zvml4ali8****\\",\\n        \\"Weight\\": 100,\\n        \\"Type\\": \\"ens\\",\\n        \\"Ip\\": \\"192.168.0.1\\",\\n        \\"Port\\": 0\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<SetBackendServersResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <BackendServers>\\n        <ServerId>i-5uf6hj58zvml4ali8****</ServerId>\\n        <Weight>100</Weight>\\n        <Type>ens</Type>\\n        <Ip>192.168.0.1</Ip>\\n        <Port>0</Port>\\n    </BackendServers>\\n</SetBackendServersResponse>","errorExample":""}]',
      'title' => '设置后端服务器权重',
    ),
    'AssociateEnsEipAddress' => 
    array (
      'summary' => '调用AssociateEnsEipAddress将弹性公网IP（EIP）绑定到同节点的云产品实例上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AllocationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待绑定EIP的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eip-5sc1sgcrsrwgwdvx44hru3p63',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定EIP的云产品ID。
>支持负载均衡（ELB）实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'lb-5saivuir6b1mupxjfbhmk1xkb',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP实例的类型，取值：

- **Nat**：NAT网关。
- **SlbInstance**：负载均衡（ELB）。
- **NetworkInterface**：辅助弹性网卡。
- **NatSlbInstance**：ELB绑定多EIP时，需要选此值。
- **EnsInstance**（默认值）：ENS实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'SlbInstance',
            'default' => 'EnsInstance',
            'enum' => 
            array (
              0 => 'SlbInstance',
              1 => 'EnsInstance',
              2 => 'NatSlbInstance',
              3 => 'Nat',
              4 => 'NetworkInterface',
              5 => 'HaVip',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'Standby',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否备用EIP。取值：

- true：备用。

- false：非备用。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'RegionAccessDenied',
            'errorMessage' => 'Could not operate this region\'s resource',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          3 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectEipStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidAssociation.Duplicated',
            'errorMessage' => 'Specified instance already is associated.',
          ),
          7 => 
          array (
            'errorCode' => 'LoadBalancerNotFound',
            'errorMessage' => 'The input parameter allocationId that is not found.',
          ),
          8 => 
          array (
            'errorCode' => 'EipNotFound',
            'errorMessage' => 'The input parameter allocationId that is not found.',
          ),
          9 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'Current instance status does not support this operation.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidAssociation.AssociateEipFist',
            'errorMessage' => 'Associate EIP first.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidAssociation.RegionNotSupportStandby',
            'errorMessage' => 'The region of EIP does not support standby.',
          ),
          12 => 
          array (
            'errorCode' => 'NatNotFound',
            'errorMessage' => 'The input parameter allocationId that is not found.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidAssociation.NetworkTypeNotSupport',
            'errorMessage' => 'The instance network type does not support binding to EIP.',
          ),
          14 => 
          array (
            'errorCode' => 'EniNotFound',
            'errorMessage' => 'The input parameter allocationId that is not found.',
          ),
          15 => 
          array (
            'errorCode' => 'IncorrectEniStatus',
            'errorMessage' => 'Current instance status does not support this operation.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParameter.EniServiceManaged	',
            'errorMessage' => 'The eni is managed by service.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidAssociation.EniNotSupportStandby',
            'errorMessage' => 'Eni does not support standby eip.',
          ),
          18 => 
          array (
            'errorCode' => 'IncorrectEniType',
            'errorMessage' => 'The type of eni is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociateEnsEipAddressResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</AssociateEnsEipAddressResponse>","errorExample":""}]',
      'title' => '将EIP绑定到云产品实例上',
    ),
    'UnAssociateEnsEipAddress' => 
    array (
      'summary' => '调用UnAssociateEnsEipAddress将弹性公网IP（EIP）从绑定的云产品上解绑。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AllocationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘弹性公网IP的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eip-5sqa431nx3vee8heqxfxp****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4A431388-2D4B-46F4-A96B-D4E6BD0688C1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'RegionAccessDenied',
            'errorMessage' => 'Could not operate this region\'s resource',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          3 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectEipStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          6 => 
          array (
            'errorCode' => 'EipNotFound',
            'errorMessage' => 'The input parameter allocationId that is not found.	',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectEipIpStatus',
            'errorMessage' => 'The ip status of EIP  is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidUnAssociation.UnAssociateStandbyEipFist',
            'errorMessage' => 'Unassociate standby eip first.',
          ),
          9 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4A431388-2D4B-46F4-A96B-D4E6BD0688C1\\"\\n}","type":"json"}]',
      'title' => '解绑EIP',
    ),
    'ModifyEnsEipAddressAttribute' => 
    array (
      'summary' => '调用ModifyEnsEipAddressAttribute修改指定EIP的名称、描述信息和带宽峰值。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AllocationId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eip-5sw5dxzgi6umq4uexxkt8wpma',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的EIP的名称。长度为2~128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-api-modify',
            'maxLength' => 128,
            'minLength' => 2,
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的EIP描述信息。长度为2~256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
            'maxLength' => 256,
            'minLength' => 2,
          ),
        ),
        3 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP的带宽峰值，默认值为5。取值范围：**5**~**10000**，单位：Mbps。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1',
            'example' => '50',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'EipNotFound',
            'errorMessage' => 'The input parameter allocationId that is not found.	',
          ),
          2 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectEipStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => '需要修改的带宽未发生变化。',
          ),
          6 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","type":"json"}]',
      'title' => '修改EIP属性',
    ),
    'DescribeEnsEipAddresses' => 
    array (
      'summary' => '调用DescribeEnsEipAddresses查询弹性公网IP（EIP）。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AllocationId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要查询的EIP实例的ID。  最多支持输入50个EIP实例ID，实例ID之间用逗号（,）分隔。',
            'description' => '要查询的EIP实例的ID。  最多支持输入50个EIP实例ID，实例ID之间用半角逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'example' => 'eip-5q9uwkd9bznjpxz8hr6cirnjk',
          ),
        ),
        1 => 
        array (
          'name' => 'EipAddress',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '要查询的EIP的IP地址。  最多支持输入50个EIP的IP地址，IP地址之间用逗号（,）分隔。',
            'description' => '要查询的EIP的IP地址。  最多支持输入50个EIP的IP地址，IP地址之间用半角逗号（,）分隔。',
            'type' => 'string',
            'required' => false,
            'example' => '120.XXX.XXX.4',
          ),
        ),
        2 => 
        array (
          'name' => 'AssociatedInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云产品的实例ID',
            'type' => 'string',
            'required' => false,
            'example' => 'lb-5t18quoohsrc3xkf86spmnu77',
          ),
        ),
        3 => 
        array (
          'name' => 'AssociatedInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定的云产品实例的类型，取值： 

- **EnsInstance**：VPC类型的ENS实例。

- **SlbInstance**：负载均衡实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'SlbInstance',
            'enum' => 
            array (
              0 => 'SlbInstance',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'ENS节点ID',
            'description' => 'ENS的节点ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-chengdu-telecom',
          ),
        ),
        5 => 
        array (
          'name' => 'EipName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'EIP的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        6 => 
        array (
          'name' => 'Standby',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否备用弹性IP。取值：

- **true**：备用。

- **false**：非备用。',
            'type' => 'string',
            'required' => false,
            'example' => 'true',
          ),
        ),
        7 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '列表的页码，默认值为1。',
            'description' => '列表的页码，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页查询时每页的行数，最大值为100，默认值为10。',
            'description' => '分页查询时每页的行数，最大值为100，默认值为10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'example' => '50',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8629F679-B51D-4194-A1CC-5D8F504C362B',
              ),
              'EipAddresses' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EipAddress' => 
                  array (
                    'description' => 'EIP的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'EIP的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AllocationId' => 
                        array (
                          'description' => 'EIP的实例ID。',
                          'type' => 'string',
                          'example' => 'eip-5sainglpw7qfem3icir4s****',
                        ),
                        'AllocationTime' => 
                        array (
                          'description' => 'EIP的创建时间',
                          'type' => 'string',
                          'example' => '1624885274000',
                        ),
                        'Bandwidth' => 
                        array (
                          'description' => 'EIP的带宽峰值，默认值为5。取值范围：**5**~**10000**，单位：Mbps。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '50',
                        ),
                        'ChargeType' => 
                        array (
                          'description' => 'EIP的计费模式。

- **PrePaid**：包年包月。

- **PostPaid**：按量计费。',
                          'type' => 'string',
                          'example' => 'PostPaid',
                        ),
                        'Description' => 
                        array (
                          'description' => 'EIP的描述信息。',
                          'type' => 'string',
                          'example' => 'example',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '当前绑定的实例的ID。',
                          'type' => 'string',
                          'example' => 'lb-5sc3kum2e0sz34wbqrws9****',
                        ),
                        'InstanceType' => 
                        array (
                          'description' => '要绑定的云产品实例的类型，取值： 

- **EnsInstance**：VPC类型的ENS实例。

- **SlbInstance**：负载均衡实例。',
                          'type' => 'string',
                          'example' => 'SlbInstance',
                        ),
                        'InternetChargeType' => 
                        array (
                          'description' => 'EIP的计费方式。

- **95BandwidthByMonth**：月95峰值带宽。

- **PayByBandwidth**：固定带宽计费。',
                          'type' => 'string',
                          'example' => '95BandwidthByMonth',
                        ),
                        'IpAddress' => 
                        array (
                          'description' => 'EIP的IP地址。',
                          'type' => 'string',
                          'example' => '120.XXX.XXX.4',
                        ),
                        'Name' => 
                        array (
                          'description' => 'EIP实例名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'EnsRegionId' => 
                        array (
                          'description' => 'ENS节点ID。',
                          'type' => 'string',
                          'example' => 'cn-xian-telecom',
                        ),
                        'Status' => 
                        array (
                          'description' => 'EIP的状态。

- **Associating**：绑定中。

- **Unassociating**：解绑中。   

- **InUse**：已分配。   

- **Available**：可用。   
',
                          'type' => 'string',
                          'example' => 'Available',
                        ),
                        'Isp' => 
                        array (
                          'description' => '运营商，取值：

- **cmcc**：中国移动。
- **unicom**：中国联通。
- **telecom**：中国电信。',
                          'type' => 'string',
                          'example' => 'cmcc',
                        ),
                        'Standby' => 
                        array (
                          'description' => '该EIP是否是备用。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'IpStatus' => 
                        array (
                          'description' => '如果该弹性IP是备用EIP时，表示当前EIP的运行状态。
- **Stopped**：已停止。
- **Running**：运行中。
- **Starting**：启动中。
- **Stopping**：停止中。',
                          'type' => 'string',
                          'example' => 'Stopped',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '查询列表的页码。取值：>0，默认查询第1页。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数。默认值：10，取值：**10**~**100**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '50',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8629F679-B51D-4194-A1CC-5D8F504C362B\\",\\n  \\"EipAddresses\\": {\\n    \\"EipAddress\\": [\\n      {\\n        \\"AllocationId\\": \\"eip-5sainglpw7qfem3icir4s****\\",\\n        \\"AllocationTime\\": \\"1624885274000\\",\\n        \\"Bandwidth\\": 50,\\n        \\"ChargeType\\": \\"PostPaid\\",\\n        \\"Description\\": \\"example\\",\\n        \\"InstanceId\\": \\"lb-5sc3kum2e0sz34wbqrws9****\\",\\n        \\"InstanceType\\": \\"SlbInstance\\",\\n        \\"InternetChargeType\\": \\"95BandwidthByMonth\\",\\n        \\"IpAddress\\": \\"120.XXX.XXX.4\\",\\n        \\"Name\\": \\"test\\",\\n        \\"EnsRegionId\\": \\"cn-xian-telecom\\",\\n        \\"Status\\": \\"Available\\",\\n        \\"Isp\\": \\"cmcc\\",\\n        \\"Standby\\": true,\\n        \\"IpStatus\\": \\"Stopped\\"\\n      }\\n    ]\\n  },\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 50,\\n  \\"TotalCount\\": 7\\n}","errorExample":""},{"type":"xml","example":"<DescribeEnsEipAddressesResponse>\\n    <RequestId>8629F679-B51D-4194-A1CC-5D8F504C362B</RequestId>\\n    <EipAddresses>\\n        <AllocationId>eip-5sainglpw7qfem3icir4s****</AllocationId>\\n        <AllocationTime>1624885274000</AllocationTime>\\n        <Bandwidth>50</Bandwidth>\\n        <ChargeType>PostPaid</ChargeType>\\n        <Description>example</Description>\\n        <InstanceId>lb-5sc3kum2e0sz34wbqrws9****</InstanceId>\\n        <InstanceType>SlbInstance</InstanceType>\\n        <InternetChargeType>95BandwidthByMonth</InternetChargeType>\\n        <IpAddress>10.10.10</IpAddress>\\n        <Name>test</Name>\\n        <EnsRegionId>cn-xian-telecom</EnsRegionId>\\n        <Status>Available</Status>\\n        <Isp>cmcc</Isp>\\n        <Standby>true</Standby>\\n        <IpStatus>Stopped</IpStatus>\\n    </EipAddresses>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>50</PageSize>\\n    <TotalCount>7</TotalCount>\\n</DescribeEnsEipAddressesResponse>","errorExample":""}]',
      'title' => '查询EIP列表',
    ),
    'DescribeEipAddresses' => 
    array (
      'summary' => '调用DescribeEipAddresses查询EIP属性。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS的节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-nanjing-cmcc',
          ),
        ),
        1 => 
        array (
          'name' => 'Eips',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性公网IP绑定的EIP信息。',
            'type' => 'string',
            'required' => false,
            'example' => '[\\"eip-5rd9i3pftfgbavl4y1b7hm4a3\\"]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'EipAddresses' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EipAddress' => 
                  array (
                    'description' => 'EIP的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'EIP的详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Eip' => 
                        array (
                          'description' => '弹性EIP的信息。',
                          'type' => 'string',
                          'example' => '203.107.XX.XX',
                        ),
                        'InstanceIdInternetIp' => 
                        array (
                          'description' => 'ENS实例公网IP地址。',
                          'type' => 'string',
                          'example' => '203.107.XX.XX',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CCFD3F24-44AF-5508-B18D-5100BFC68602',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          2 => 
          array (
            'errorCode' => 'InsufficientEipCapacity',
            'errorMessage' => 'Insufficient EIP inventory under the specified territory.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"EipAddresses\\": {\\n    \\"EipAddress\\": [\\n      {\\n        \\"Eip\\": \\"203.107.XX.XX\\",\\n        \\"InstanceIdInternetIp\\": \\"203.107.XX.XX\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"CCFD3F24-44AF-5508-B18D-5100BFC68602\\"\\n}","type":"json"}]',
      'title' => '查询EIP属性',
    ),
    'CreateEipInstance' => 
    array (
      'summary' => '用CreateEipInstance接口申请弹性公网IP。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'ENS节点ID',
            'description' => 'ENS节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-suzhou-telecom',
          ),
        ),
        1 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'EIP的带宽峰值',
            'description' => 'EIP的带宽峰值，默认值为5。取值范围：5~10000，单位：Mbps。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '5',
            'example' => '5',
            'default' => '5',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'EIP的计费方式，取值：  PrePaid：包年包月。 PostPaid（默认值）：按量计费。 当InstanceChargeType取值为PostPaid时，InternetChargeType不能为PayByBandwidth',
            'description' => 'EIP的计费方式，当前取值仅支持**PostPaid**（月按量计费）。

',
            'type' => 'string',
            'required' => true,
            'example' => 'PostPaid',
            'enum' => 
            array (
              0 => 'PostPaid',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'InternetChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'EIP的计量方式，取值：  PayByBandwidth（默认值）：按带宽计费。 取值：95BandwidthByMonth：月95。',
            'description' => 'EIP的计费方式，当前取值仅支持**95BandwidthByMonth**（月95带宽计费）。
',
            'type' => 'string',
            'required' => true,
            'example' => '95BandwidthByMonth',
            'enum' => 
            array (
              0 => '95BandwidthByMonth',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'EIP实例名称。',
            'description' => 'EIP实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'EIP1',
          ),
        ),
        5 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '运营商信息',
            'description' => '运营商信息，取值：

- **cmcc**：中国移动。
- **unicom**：中国联通。
- **telecom**：中国电信。',
            'type' => 'string',
            'required' => false,
            'example' => 'cmcc',
            'enum' => 
            array (
              0 => 'cmcc',
              1 => 'unicom',
              2 => 'telecom',
            ),
          ),
        ),
        6 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'yourDescription',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9DB6123F-470D-510A-A9EB-EBA799340452',
              ),
              'AllocationId' => 
              array (
                'title' => 'EIP的ID。',
                'description' => 'EIP实例的ID。',
                'type' => 'string',
                'example' => 'eip-25877c70gddh****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9DB6123F-470D-510A-A9EB-EBA799340452\\",\\n  \\"AllocationId\\": \\"eip-25877c70gddh****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateEipInstanceResponse>\\n    <RequestId>9DB6123F-470D-510A-A9EB-EBA799340452</RequestId>\\n    <AllocationId>eip-25877c70gddh****</AllocationId>\\n</CreateEipInstanceResponse>","errorExample":""}]',
      'title' => '创建EIP',
      'description' => '- API调用频率：5000次/秒。
- 单用户调用频率：50次/秒。',
    ),
    'CreateNatGateway' => 
    array (
      'summary' => '调用CreateNatGateway创建NAT网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关名称。长度为1~128个字符，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'name',
            'maxLength' => 128,
            'minLength' => 1,
          ),
        ),
        1 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-suzhou-telecom',
          ),
        ),
        2 => 
        array (
          'name' => 'NetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'n-5qj7ykuxmjn7k96l090sp****',
          ),
        ),
        3 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vsw-5savh5ngxh8sbj14bu7n****',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT规格。取值：**enat.default**。',
            'type' => 'string',
            'required' => false,
            'example' => 'enat.default',
            'default' => 'enat.default',
            'enum' => 
            array (
              0 => 'enat.default',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'NatGatewayId' => 
              array (
                'description' => '创建的NAT网关的实例ID。
',
                'type' => 'string',
                'example' => 'nat-5t7nh1cfm6kxiszlttr38****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.	',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.RegionNotSupported',
            'errorMessage' => 'The specified EnsRegion does not support this operation.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.VSwitchNotFound',
            'errorMessage' => 'The specified VSwitch is not found.	',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.VSwitchNotBelongToNetwork	',
            'errorMessage' => 'The specified VSwitch is not bound to the Network',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.NetworkNotFound',
            'errorMessage' => 'The specified Network is not found.	',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.NetworkNotSupported',
            'errorMessage' => 'The specified Network does not support this operation.	',
          ),
          8 => 
          array (
            'errorCode' => 'QuotaExceed.NatGateway',
            'errorMessage' => 'The maximum number of natGateway is reached.	',
          ),
          9 => 
          array (
            'errorCode' => 'SaleControl.VerificationFailed',
            'errorMessage' => 'You did not pass the salecontrol verification.Please contact the product.',
          ),
          10 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"NatGatewayId\\": \\"nat-5t7nh1cfm6kxiszlttr38****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateNatGatewayResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <NatGatewayId>nat-5t7nh1cfm6kxiszlttr38****</NatGatewayId>\\n</CreateNatGatewayResponse>","errorExample":""}]',
      'title' => '创建NAT网关',
    ),
    'DescribeNatGateways' => 
    array (
      'summary' => '调用DescribeNatGateways查询已创建的NAT网关。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS节点ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-wuxi-9',
          ),
        ),
        1 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'nat-5t7nh1cfm6kxiszlttr38****',
          ),
        ),
        2 => 
        array (
          'name' => 'NetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'n-2zeuphj08tt7q3brd****',
          ),
        ),
        3 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-5rllcjb3ol6duzjdnbm1o****',
          ),
        ),
        4 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test0',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询列表的页码。起始值为**1**。

默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值为**100**行。

默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2818A8F4-5E2B-5611-8732-5ACF7B677059',
              ),
              'PageNumber' => 
              array (
                'description' => '当前查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '查询的NAT网关列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '49',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'NatGateways' => 
              array (
                'description' => 'NAT网关的详细信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'NAT网关的详细信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'EnsRegionId' => 
                    array (
                      'description' => 'ENS节点ID。',
                      'type' => 'string',
                      'example' => 'cn-xiangyang-5',
                    ),
                    'NatGatewayId' => 
                    array (
                      'description' => 'NAT网关的ID。',
                      'type' => 'string',
                      'example' => 'nat-5t7nh1cfm6kxiszlttr38****',
                    ),
                    'NetworkId' => 
                    array (
                      'description' => '网路ID。',
                      'type' => 'string',
                      'example' => 'n-5s2ml1olj0kzaws9n1yrj****',
                    ),
                    'VSwitchId' => 
                    array (
                      'description' => '交换机ID。',
                      'type' => 'string',
                      'example' => 'vsw-5szpp1os9m55myirbflfw****',
                    ),
                    'Name' => 
                    array (
                      'description' => 'NAT网关实例名称。',
                      'type' => 'string',
                      'example' => 'test0',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '创建时间。UTC时间，格式为：YYYY-MM-DDThh:mm:ssZ。',
                      'type' => 'string',
                      'example' => '2021-11-22T07:03:32Z',
                    ),
                    'Spec' => 
                    array (
                      'description' => 'NAT实例规格。',
                      'type' => 'string',
                      'example' => 'enat.default',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2818A8F4-5E2B-5611-8732-5ACF7B677059\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 49,\\n  \\"PageSize\\": 10,\\n  \\"NatGateways\\": [\\n    {\\n      \\"EnsRegionId\\": \\"cn-xiangyang-5\\",\\n      \\"NatGatewayId\\": \\"nat-5t7nh1cfm6kxiszlttr38****\\",\\n      \\"NetworkId\\": \\"n-5s2ml1olj0kzaws9n1yrj****\\",\\n      \\"VSwitchId\\": \\"vsw-5szpp1os9m55myirbflfw****\\",\\n      \\"Name\\": \\"test0\\",\\n      \\"CreationTime\\": \\"2021-11-22T07:03:32Z\\",\\n      \\"Spec\\": \\"enat.default\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeNatGatewaysResponse>\\n    <RequestId>2818A8F4-5E2B-5611-8732-5ACF7B677059</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>49</TotalCount>\\n    <PageSize>10</PageSize>\\n    <NatGateways>\\n        <EnsRegionId>cn-xiangyang-5</EnsRegionId>\\n        <NatGatewayId>nat-5t7nh1cfm6kxiszlttr38****</NatGatewayId>\\n        <NetworkId>n-5s2ml1olj0kzaws9n1yrj****</NetworkId>\\n        <VSwitchId>vsw-5szpp1os9m55myirbflfw****</VSwitchId>\\n        <Name>test0</Name>\\n        <CreationTime>2021-11-22T07:03:32Z</CreationTime>\\n        <Spec>enat.default</Spec>\\n    </NatGateways>\\n</DescribeNatGatewaysResponse>","errorExample":""}]',
      'title' => '查询NAT网关属性',
    ),
    'DeleteNatGateway' => 
    array (
      'summary' => '调用DeleteNatGateway删除指定的公网NAT网关。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的NAT网关的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nat-5t7nh1cfm6kxiszlttr38****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.NatNotFound',
            'errorMessage' => 'The specified Nat is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'DependencyViolation.NatRule',
            'errorMessage' => 'DependencyViolation.SNAT/DNAT',
          ),
          5 => 
          array (
            'errorCode' => 'DependencyViolation.Eip',
            'errorMessage' => 'DependencyViolation.Eip',
          ),
          6 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteNatGatewayResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</DeleteNatGatewayResponse>","errorExample":""}]',
      'title' => '删除NAT网关',
    ),
    'CreateSnatEntry' => 
    array (
      'summary' => '调用CreateSnatEntry添加SNAT条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' NAT网关的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'nat-5tawjw5j7sgd2deujxuk0****',
          ),
        ),
        1 => 
        array (
          'name' => 'SnatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目中的EIP，多个EIP之间用半角逗号（,）隔开。',
            'type' => 'string',
            'required' => true,
            'example' => '120.XXX.XXX.71',
          ),
        ),
        2 => 
        array (
          'name' => 'SourceVSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要公网访问的交换机的ID。该参数表示该交换机内的ENS实例均可以通过SNAT规则访问公网。

> **SourceVSwitchId**和**SourceCIDR**同时配置时，**SourceVSwitchId**参数会被忽略，**SourceCIDR**优先级更高。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-bp1hwx7gi495q260p****',
          ),
        ),
        3 => 
        array (
          'name' => 'SourceCIDR',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络、交换机或实例的网段，还可以输入任意网段。该网段下的所有实例均可以通过SNAT服务访问互联网或者外部网络。

> **SourceVSwitchId**和**SourceCIDR**同时配置时，**SourceVSwitchId**参数会被忽略，**SourceCIDR**优先级更高。',
            'type' => 'string',
            'required' => false,
            'example' => '10.0.0.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'SnatEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目的名称。长度为1~128个字符，但不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test0',
          ),
        ),
        5 => 
        array (
          'name' => 'SourceNetworkId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ID。该参数表示该网络内的ENS实例均可以通过SNAT规则访问公网。

> **SourceNetworkId**和**SourceVSwitchId**或**SourceCIDR**同时配置时，**SourceNetworkId**参数会被忽略，**SourceCIDR**优先级更高。优先级：**SourceCIDR**＞**SourceVSwitchId**＞ **SourceNetworkId**。',
            'type' => 'string',
            'required' => false,
            'example' => 'n-2zeuphj08tt7q3brd****',
          ),
        ),
        6 => 
        array (
          'name' => 'StandbySnatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目中的备用EIP，多个备用EIP之间用半角逗号（,）隔开。',
            'type' => 'string',
            'required' => false,
            'example' => '101.XXX.XXX.7',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '018EED6A-69CA-58C8-A345-498927D5D34E',
              ),
              'SnatEntryId' => 
              array (
                'description' => 'SNAT条目ID。',
                'type' => 'string',
                'example' => 'snat-5tc08qfj5ecblfdn2rqr9****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.	',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden.SnatIpUsedInDnat',
            'errorMessage' => 'Forbidden.SnatIpUsedInDnat',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.VSwitchNotFound',
            'errorMessage' => 'The specified VSwitch is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.SourceCIDR',
            'errorMessage' => 'The specified parameter SourceCIDR is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'Forbidden.SourceCIDR.NotSupport',
            'errorMessage' => 'SourceCIDR support intranet cidr only.',
          ),
          7 => 
          array (
            'errorCode' => 'Forbidden.SourceCIDR.Duplicated',
            'errorMessage' => 'The specified sourceCIDR is duplicated.	',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.NatNotFound',
            'errorMessage' => 'The specified Nat is not found.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.SnatIp',
            'errorMessage' => 'The specified SnatIp is not found.',
          ),
          10 => 
          array (
            'errorCode' => 'SnatEntryLimitExceed',
            'errorMessage' => 'The limit of snat entry in the network reaches.	',
          ),
          11 => 
          array (
            'errorCode' => 'SnatIpLimitExceed',
            'errorMessage' => 'The Snat pool ip too many.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidParameter.SourceNetworkId',
            'errorMessage' => 'The specified parameter SourceNetworkId is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"018EED6A-69CA-58C8-A345-498927D5D34E\\",\\n  \\"SnatEntryId\\": \\"snat-5tc08qfj5ecblfdn2rqr9****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateSnatEntryResponse>\\n    <RequestId>018EED6A-69CA-58C8-A345-498927D5D34E</RequestId>\\n    <SnatEntryId>snat-5tc08qfj5ecblfdn2rqr9****</SnatEntryId>\\n</CreateSnatEntryResponse>","errorExample":""}]',
      'title' => '添加SNAT条目',
    ),
    'DescribeSnatAttribute' => 
    array (
      'summary' => '调用DescribeSnatAttribute查询指定SNAT规则的明细信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SnatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'snat-5tc08qfj5ecblfdn2rqr9****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'NatGatewayId' => 
              array (
                'description' => 'NAT网关的ID。',
                'type' => 'string',
                'example' => 'nat-5t7nh1cfm6kxiszlttr38****',
              ),
              'SnatEntryId' => 
              array (
                'description' => 'SNAT条目的ID。',
                'type' => 'string',
                'example' => 'snat-5tfi6f8gds82mjmlofeym****',
              ),
              'SnatIp' => 
              array (
                'description' => 'SNAT条目中的EIP，多个EIP之间用半角逗号（,）隔开。',
                'type' => 'string',
                'example' => '120. XXX. XXX.71',
              ),
              'SourceCIDR' => 
              array (
                'description' => 'SNAT条目的源网段。 ',
                'type' => 'string',
                'example' => '10. XXX. XXX.0/24',
              ),
              'SnatEntryName' => 
              array (
                'description' => 'SNAT条目的名称。',
                'type' => 'string',
                'example' => 'test0',
              ),
              'Status' => 
              array (
                'description' => 'SNAT条目状态。
- Pending：配置中，可能是创建中或修改中。
- Available：可用。
- Deleting：删除中。',
                'type' => 'string',
                'example' => 'Available',
              ),
              'CreationTime' => 
              array (
                'description' => '创建时间，UTC时间。',
                'type' => 'string',
                'example' => '2020-04-26T15:38:27Z',
              ),
              'SnatIps' => 
              array (
                'description' => 'SNAT中公网IP信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Ip' => 
                    array (
                      'description' => 'IP地址。',
                      'type' => 'string',
                      'example' => '203. XXX. XXX.139',
                    ),
                    'Status' => 
                    array (
                      'description' => 'SNAT IP的状态。
- Running：已启用。
- Stopping：停用中。
- Stopped：已停用。
- Starting：启动中。
- Releasing：释放中。',
                      'type' => 'string',
                      'example' => 'Running',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '创建时间，UTC时间。',
                      'type' => 'string',
                      'example' => '2020-04-26T15:38:27Z',
                    ),
                  ),
                ),
              ),
              'StandbySnatIp' => 
              array (
                'description' => 'SNAT条目中的备用EIP，多个备用EIP之间用半角逗号（,）隔开。',
                'type' => 'string',
                'example' => '101. XXX. XXX.4',
              ),
              'StandbyStatus' => 
              array (
                'description' => '备用EIP状态。
- Running：开启。
- Stopping：关闭中。
- Stopped：关闭。
- Starting：启动中。',
                'type' => 'string',
                'example' => 'Stopped',
              ),
              'Type' => 
              array (
                'description' => 'NAT类型。

- 返回为空值，表示对称型NAT。

- FullCone：全锥形NAT',
                'type' => 'string',
                'example' => 'FullCone',
              ),
              'IdleTimeout' => 
              array (
                'description' => '超时时间，单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'DestCIDR' => 
              array (
                'description' => '目标网段，表示只有访问目标网段的请求走该规则。',
                'type' => 'string',
                'example' => '101. XXX. XXX.0/24',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.	',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.SnatNotFound',
            'errorMessage' => 'The specified snat is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"NatGatewayId\\": \\"nat-5t7nh1cfm6kxiszlttr38****\\",\\n  \\"SnatEntryId\\": \\"snat-5tfi6f8gds82mjmlofeym****\\",\\n  \\"SnatIp\\": \\"120. XXX. XXX.71\\",\\n  \\"SourceCIDR\\": \\"10. XXX. XXX.0/24\\",\\n  \\"SnatEntryName\\": \\"test0\\",\\n  \\"Status\\": \\"Available\\",\\n  \\"CreationTime\\": \\"2020-04-26T15:38:27Z\\",\\n  \\"SnatIps\\": [\\n    {\\n      \\"Ip\\": \\"203. XXX. XXX.139\\",\\n      \\"Status\\": \\"Running\\",\\n      \\"CreationTime\\": \\"2020-04-26T15:38:27Z\\"\\n    }\\n  ],\\n  \\"StandbySnatIp\\": \\"101. XXX. XXX.4\\",\\n  \\"StandbyStatus\\": \\"Stopped\\",\\n  \\"Type\\": \\"FullCone\\",\\n  \\"IdleTimeout\\": 10,\\n  \\"DestCIDR\\": \\"101. XXX. XXX.0/24\\"\\n}","type":"json"}]',
      'title' => '查询SNAT规则明细',
    ),
    'DescribeSnatTableEntries' => 
    array (
      'summary' => '调用DescribeSnatTableEntries查询已创建的SNAT条目。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nat-5tawjw5j7sgd2deujxuk0****',
          ),
        ),
        1 => 
        array (
          'name' => 'SnatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'snat-5tfjp36fsrb36zs36faj0****',
          ),
        ),
        2 => 
        array (
          'name' => 'SnatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目中的EIP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '58.XXXX.XXX.29',
          ),
        ),
        3 => 
        array (
          'name' => 'SourceCIDR',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目的源网段。 ',
            'type' => 'string',
            'required' => false,
            'example' => '10.1.0.50/32',
          ),
        ),
        4 => 
        array (
          'name' => 'SnatEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test0',
            'maxLength' => 128,
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询列表的页码。起始值为**1**。

默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值为**100**行。

默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'PageNumber' => 
              array (
                'description' => '当前查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '查询的SNAT列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '7',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'SnatTableEntries' => 
              array (
                'description' => '查询的SNAT列表详细信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '查询的SNAT列表详细信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'NatGatewayId' => 
                    array (
                      'description' => 'NAT网关实例的ID。',
                      'type' => 'string',
                      'example' => 'nat-5t7nh1cfm6kxiszlttr38****',
                    ),
                    'SnatEntryId' => 
                    array (
                      'description' => 'SNAT条目的ID。 ',
                      'type' => 'string',
                      'example' => 'snat-5tfjp3537mi6iokl59g5c****',
                    ),
                    'SnatIp' => 
                    array (
                      'description' => 'SNAT条目中的EIP地址。',
                      'type' => 'string',
                      'example' => '120.XXX.XXX.71',
                    ),
                    'SourceCIDR' => 
                    array (
                      'description' => 'SNAT条目的源网段。',
                      'type' => 'string',
                      'example' => '10.0.0.13/32',
                    ),
                    'SnatEntryName' => 
                    array (
                      'description' => 'SNAT条目的名称。',
                      'type' => 'string',
                      'example' => 'test0',
                    ),
                    'Status' => 
                    array (
                      'description' => 'SNAT条目状态，取值：
- Pending：配置中，可能是创建中或修改中。
- Available：可用。
- Deleting：删除中。',
                      'type' => 'string',
                      'example' => 'Available',
                    ),
                    'StandbySnatIp' => 
                    array (
                      'description' => '备用EIP，多个EIP之间用半角逗号（,）隔开。',
                      'type' => 'string',
                      'example' => '101.XXX.XXX.7',
                    ),
                    'StandbyStatus' => 
                    array (
                      'description' => '备用弹性公网IP的状态
- Running：开启
- Stopping：关闭中
- Stopped：关闭
- Starting：启动中',
                      'type' => 'string',
                      'example' => 'Stopped',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.	',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.NatNotFound',
            'errorMessage' => 'The specified Nat is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 7,\\n  \\"PageSize\\": 10,\\n  \\"SnatTableEntries\\": [\\n    {\\n      \\"NatGatewayId\\": \\"nat-5t7nh1cfm6kxiszlttr38****\\",\\n      \\"SnatEntryId\\": \\"snat-5tfjp3537mi6iokl59g5c****\\",\\n      \\"SnatIp\\": \\"120.XXX.XXX.71\\",\\n      \\"SourceCIDR\\": \\"10.0.0.13/32\\",\\n      \\"SnatEntryName\\": \\"test0\\",\\n      \\"Status\\": \\"Available\\",\\n      \\"StandbySnatIp\\": \\"101.XXX.XXX.7\\",\\n      \\"StandbyStatus\\": \\"Stopped\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSnatTableEntriesResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>7</TotalCount>\\n    <PageSize>10</PageSize>\\n    <SnatTableEntries>\\n        <NatGatewayId>nat-5t7nh1cfm6kxiszlttr38****</NatGatewayId>\\n        <SnatEntryId>snat-5tfjp3537mi6iokl59g5c****</SnatEntryId>\\n        <SnatIp>120.XXX.XXX.71</SnatIp>\\n        <SourceCIDR>10.0.0.13/32</SourceCIDR>\\n        <SnatEntryName>test0</SnatEntryName>\\n        <Status>Available</Status>\\n    </SnatTableEntries>\\n</DescribeSnatTableEntriesResponse>","errorExample":""}]',
      'title' => '查询SNAT条目',
    ),
    'DeleteSnatEntry' => 
    array (
      'summary' => '调用DeleteSnatEntry删除指定的SNAT条目。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SnatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除的SNAT条目的ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'snat-5tfi6f8gds82mjmlofeym****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.	',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.SnatNotFound',
            'errorMessage' => 'The specified snat is not found.	',
          ),
          4 => 
          array (
            'errorCode' => 'IncorretSnatEntryStatus',
            'errorMessage' => 'Snat entry status blocked this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteSnatEntryResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</DeleteSnatEntryResponse>","errorExample":""}]',
      'title' => '删除SNAT条目',
    ),
    'StartSnatIpForSnatEntry' => 
    array (
      'summary' => '调用StartSnatIpForSnatEntry启动SNAT规则中已关闭的SnatIp。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SnatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'snat-5tfi6f8gds82mjmlofeym****',
          ),
        ),
        1 => 
        array (
          'name' => 'SnatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目中的EIP。',
            'type' => 'string',
            'required' => true,
            'example' => '219.152.XX.XX',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '85BBD491-CE05-5BDA-979E-843FE52B74CF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.	',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.SnatNotFound',
            'errorMessage' => 'The specified snat is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorretSnatEntryStatus',
            'errorMessage' => 'Snat entry status blocked this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.SnatIpNotFound',
            'errorMessage' => 'The specified snat ip not found.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorretSnatIpStatus',
            'errorMessage' => 'Snat ip status blocked this operation.',
          ),
          7 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"85BBD491-CE05-5BDA-979E-843FE52B74CF\\"\\n}","type":"json"}]',
      'title' => '启动SNAT规则中的公网EIP',
    ),
    'DeleteSnatIpForSnatEntry' => 
    array (
      'summary' => '调用DeleteSnatIpForSnatEntry删除SNAT规则中的一个公网EIP。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SnatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'snat-5tfi6f8gds82mjmlofeym****',
          ),
        ),
        1 => 
        array (
          'name' => 'SnatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目中的EIP',
            'type' => 'string',
            'required' => true,
            'example' => '120.72.56.71',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.	',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.SnatNotFound',
            'errorMessage' => 'The specified snat is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorretSnatEntryStatus',
            'errorMessage' => 'Snat entry status blocked this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.SnatIpNotFound',
            'errorMessage' => 'The specified snat ip not found.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorretSnatIpStatus',
            'errorMessage' => 'Snat ip status blocked this operation.',
          ),
          7 => 
          array (
            'errorCode' => 'Forbidden.SnatIp',
            'errorMessage' => 'Snat requires at least one running snat ip',
          ),
          8 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","type":"json"}]',
      'title' => 'SNAT规则删除公网EIP',
    ),
    'AddSnatIpForSnatEntry' => 
    array (
      'summary' => '调用AddSnatIpForSnatEntry为SNAT规则增加一个公网EIP。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SnatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'snat-5xkzf89dndkzh8yg9stzqz9m4',
          ),
        ),
        1 => 
        array (
          'name' => 'SnatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目中的EIP',
            'type' => 'string',
            'required' => true,
            'example' => '219.152.XX.XX',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CD1FFCC6-5E9E-5C31-A014-13D02737B0EA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.	',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden.SnatIpUsedInDnat',
            'errorMessage' => 'Forbidden.SnatIpUsedInDnat',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.SnatIp',
            'errorMessage' => 'The specified SnatIp is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'SnatIpLimitExceed',
            'errorMessage' => 'The Snat pool ip too many.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.SnatNotFound',
            'errorMessage' => 'The specified snat is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorretSnatEntryStatus',
            'errorMessage' => 'Snat entry status blocked this operation.',
          ),
          8 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CD1FFCC6-5E9E-5C31-A014-13D02737B0EA\\"\\n}","type":"json"}]',
      'title' => 'SNAT规则添加公网EIP',
    ),
    'StopSnatIpForSnatEntry' => 
    array (
      'summary' => '调用StopSnatIpForSnatEntry停用SNAT规则中运行的SnatIp。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SnatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'snat-5tfi6f8gds82mjmlofeym****',
          ),
        ),
        1 => 
        array (
          'name' => 'SnatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT条目中的EIP',
            'type' => 'string',
            'required' => true,
            'example' => '221.178.103.143',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9A415CB9-7591-566F-924B-32709578756B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.	',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.SnatNotFound',
            'errorMessage' => 'The specified snat is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorretSnatEntryStatus',
            'errorMessage' => 'Snat entry status blocked this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.SnatIpNotFound',
            'errorMessage' => 'The specified snat ip not found.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorretSnatIpStatus',
            'errorMessage' => 'Snat ip status blocked this operation.',
          ),
          7 => 
          array (
            'errorCode' => 'Forbidden.SnatIp',
            'errorMessage' => 'Snat requires at least one running snat ip',
          ),
          8 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"9A415CB9-7591-566F-924B-32709578756B\\"\\n}","type":"json"}]',
      'title' => '停用SNAT规则中的公网EIP',
    ),
    'CreateForwardEntry' => 
    array (
      'summary' => '调用CreateForwardEntry添加DNAT条目。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' NAT网关的ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'nat-5t7nh1cfm6kxiszlttr38****',
          ),
        ),
        1 => 
        array (
          'name' => 'ExternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '提供公网访问的弹性公网IP地址。',
            'type' => 'string',
            'required' => true,
            'example' => '121.XXX.XXX.28',
          ),
        ),
        2 => 
        array (
          'name' => 'ExternalPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要进行端口转发的外部端口或端口段。
- 输入的端口范围需要在1~65535之间。
- 如果需要在端口段内转发，请在输入时以正斜线（/）隔开起始端口，例如10/20。
- 如果ExternalPort设置为端口段，则InternalPort也需要设置为端口段，且端口段的端口个数相同，例如ExternalPort设置为10/20，InternalPort设置为80/90。',
            'type' => 'string',
            'required' => true,
            'example' => '22',
          ),
        ),
        3 => 
        array (
          'name' => 'InternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通过DNAT条目进行公网通信的实例的私网IP地址。

',
            'type' => 'string',
            'required' => true,
            'example' => '10.0.XXX.XXX',
          ),
        ),
        4 => 
        array (
          'name' => 'InternalPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '进行端口转发的内部端口或端口段。

- 输入的端口范围需要在1~65535之间。
- 如果需要在端口段内转发，请在输入时以正斜线（/）隔开起始端口，例如10/20。',
            'type' => 'string',
            'required' => true,
            'example' => '22',
          ),
        ),
        5 => 
        array (
          'name' => 'ForwardEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT规则的名称。长度为2~128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test0',
            'maxLength' => 128,
          ),
        ),
        6 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型，取值： 

- **TCP**：转发TCP协议的报文。   

- **UDP**：转发UDP协议的报文。   

- **Any**（默认）：转发所有协议的报文。',
            'type' => 'string',
            'required' => false,
            'example' => 'Any',
            'enum' => 
            array (
              0 => 'TCP',
              1 => 'UDP',
              2 => 'Any',
            ),
          ),
        ),
        7 => 
        array (
          'name' => 'HealthCheckPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT的探测端口，需要在内网端口范围内。默认值为空。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '1',
            'example' => '80',
          ),
        ),
        8 => 
        array (
          'name' => 'StandbyExternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '提供公网访问的备用弹性公网IP地址，需要选择绑定在NAT上的备用弹性IP。DNAT创建成功后，备用公网IP会生效。',
            'type' => 'string',
            'required' => false,
            'example' => '101.XXX.XXX.4',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EF6D6FA4-DACA-5822-A981-81006271D263',
              ),
              'ForwardEntryId' => 
              array (
                'description' => 'DNAT条目的ID。',
                'type' => 'string',
                'example' => 'fwd-5tc07cw14metghn3siv4a****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.	',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.NatNotFound',
            'errorMessage' => 'The specified Nat is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.ExternalIp',
            'errorMessage' => 'The specified externalIp is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.ExternalIpUsedInSnat',
            'errorMessage' => 'Forbidden.ExternalIpUsedInSnat',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.InternalIp',
            'errorMessage' => 'The specified parameter internalIp is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.InternalIpNotFound',
            'errorMessage' => 'The input parameter internalIp that is not found.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidPort.Malformed',
            'errorMessage' => 'The specified port is not a valid port.	',
          ),
          9 => 
          array (
            'errorCode' => 'Forbidden.ExternalPort.Duplicated',
            'errorMessage' => 'The specified ExternalPort is duplicated.',
          ),
          10 => 
          array (
            'errorCode' => 'ForwardEntryLimitExceed',
            'errorMessage' => 'The limit of forward entry in the nat reaches.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter.HealthCheckPort',
            'errorMessage' => 'HealthCheckPort is not in the range of InternalPort',
          ),
          12 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the instance does not support this operation.',
          ),
          13 => 
          array (
            'errorCode' => 'SystemBusy',
            'errorMessage' => 'System is busy, please try again later.',
          ),
          14 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"EF6D6FA4-DACA-5822-A981-81006271D263\\",\\n  \\"ForwardEntryId\\": \\"fwd-5tc07cw14metghn3siv4a****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateForwardEntryResponse>\\n    <RequestId>EF6D6FA4-DACA-5822-A981-81006271D263</RequestId>\\n    <ForwardEntryId>fwd-5tc07cw14metghn3siv4a****</ForwardEntryId>\\n</CreateForwardEntryResponse>","errorExample":""}]',
      'title' => '添加DNAT条目',
    ),
    'DescribeForwardTableEntries' => 
    array (
      'summary' => '调用DescribeForwardTableEntries查询已创建的DNAT条目。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NatGatewayId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT网关的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nat-5t7nh1cfm6kxiszlttr38****',
          ),
        ),
        1 => 
        array (
          'name' => 'ForwardEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT条目ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'fwd-5tfi6f0rutmd00xrhkag7****',
          ),
        ),
        2 => 
        array (
          'name' => 'ExternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT条目中提供公网访问的弹性公网IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '36.XXX.XXX.72',
          ),
        ),
        3 => 
        array (
          'name' => 'InternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '通过DNAT条目进行公网通信的实例的私网IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '10.XXX.XXX.50',
          ),
        ),
        4 => 
        array (
          'name' => 'ForwardEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT条目的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test0',
          ),
        ),
        5 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型，取值：

- **TCP**：转发TCP协议的报文。

- **UDP**：转发UDP协议的报文。

- **Any**：转发所有协议的报文。',
            'type' => 'string',
            'required' => false,
            'example' => 'TCP',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询列表的页码。起始值为**1**。

默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值为**100**行。

默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'PageNumber' => 
              array (
                'description' => '当前查询页码。',
                'type' => 'string',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。

',
                'type' => 'string',
                'example' => '100',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'string',
                'example' => '10',
              ),
              'ForwardTableEntries' => 
              array (
                'description' => '查询的DNAT列表详细信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '查询的DNAT列表详细信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'NatGatewayId' => 
                    array (
                      'description' => ' NAT网关的ID。 ',
                      'type' => 'string',
                      'example' => 'nat-5tawjw5j7sgd2deujxuk0****',
                    ),
                    'ForwardEntryId' => 
                    array (
                      'description' => 'DNAT条目的ID。 ',
                      'type' => 'string',
                      'example' => 'fwd-5tf66679oi2uoxcvlg0g2****',
                    ),
                    'ExternalIp' => 
                    array (
                      'description' => 'DNAT条目中提供公网访问的弹性公网IP地址。

',
                      'type' => 'string',
                      'example' => '120.XXX.XXX.70',
                    ),
                    'ExternalPort' => 
                    array (
                      'description' => '进行端口转发的外部端口或端口段。
',
                      'type' => 'string',
                      'example' => '22',
                    ),
                    'InternalIp' => 
                    array (
                      'description' => '通过DNAT条目进行公网通信的实例的私网IP地址。',
                      'type' => 'string',
                      'example' => '10.XXX.XXX.3',
                    ),
                    'InternalPort' => 
                    array (
                      'description' => '进行端口转发的内部端口或端口段。

',
                      'type' => 'string',
                      'example' => '22',
                    ),
                    'ForwardEntryName' => 
                    array (
                      'description' => 'DNAT条目的名称。',
                      'type' => 'string',
                      'example' => 'test0',
                    ),
                    'Status' => 
                    array (
                      'description' => 'DNAT条目状态，取值：
- Pending：配置中，可能是创建中或修改中。
- Available：可用。
- Deleting：删除中。',
                      'type' => 'string',
                      'example' => 'Available',
                    ),
                    'IpProtocol' => 
                    array (
                      'description' => '协议类型，取值：

- **TCP**：转发TCP协议的报文。

- **UDP**：转发UDP协议的报文。

- **Any**：转发所有协议的报文。',
                      'type' => 'string',
                      'example' => 'Any',
                    ),
                    'HealthCheckPort' => 
                    array (
                      'description' => 'DNAT探测端口。',
                      'type' => 'string',
                      'example' => '80',
                    ),
                    'StandbyExternalIp' => 
                    array (
                      'description' => '提供公网访问的备用弹性公网IP地址。',
                      'type' => 'string',
                      'example' => '101.XXX.XXX.7',
                    ),
                    'StandbyStatus' => 
                    array (
                      'description' => '备用弹性公网IP的状态
- Running：开启
- Stopping：关闭中
- Stopped：关闭
- Starting：启动中',
                      'type' => 'string',
                      'example' => 'Stopped',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.	',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.NatNotFound',
            'errorMessage' => 'The specified Nat is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"PageNumber\\": \\"1\\",\\n  \\"TotalCount\\": \\"100\\",\\n  \\"PageSize\\": \\"10\\",\\n  \\"ForwardTableEntries\\": [\\n    {\\n      \\"NatGatewayId\\": \\"nat-5tawjw5j7sgd2deujxuk0****\\",\\n      \\"ForwardEntryId\\": \\"fwd-5tf66679oi2uoxcvlg0g2****\\",\\n      \\"ExternalIp\\": \\"120.XXX.XXX.70\\",\\n      \\"ExternalPort\\": \\"22\\",\\n      \\"InternalIp\\": \\"10.XXX.XXX.3\\",\\n      \\"InternalPort\\": \\"22\\",\\n      \\"ForwardEntryName\\": \\"test0\\",\\n      \\"Status\\": \\"Available\\",\\n      \\"IpProtocol\\": \\"Any\\",\\n      \\"HealthCheckPort\\": \\"80\\",\\n      \\"StandbyExternalIp\\": \\"101.XXX.XXX.7\\",\\n      \\"StandbyStatus\\": \\"Stopped\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeForwardTableEntriesResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>100</TotalCount>\\n    <PageSize>10</PageSize>\\n    <ForwardTableEntries>\\n        <NatGatewayId>nat-5tawjw5j7sgd2deujxuk0****</NatGatewayId>\\n        <ForwardEntryId>fwd-5tf66679oi2uoxcvlg0g2****</ForwardEntryId>\\n        <ExternalIp>120.XXX.XXX.70</ExternalIp>\\n        <ExternalPort>22</ExternalPort>\\n        <InternalIp>10.XXX.XXX.3</InternalIp>\\n        <InternalPort>22</InternalPort>\\n        <ForwardEntryName>test0</ForwardEntryName>\\n        <Status>Available</Status>\\n        <IpProtocol>Any</IpProtocol>\\n        <HealthCheckPort>80</HealthCheckPort>\\n    </ForwardTableEntries>\\n</DescribeForwardTableEntriesResponse>","errorExample":""}]',
      'title' => '查询DNAT条目',
    ),
    'ModifyForwardEntry' => 
    array (
      'summary' => '调用ModifyForwardEntry修改DNAT规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ForwardEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待修改的DNAT条目的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'dnat-5tfjp3537mi6iokl59g5c****',
          ),
        ),
        1 => 
        array (
          'name' => 'ForwardEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT规则的名称。长度为2~128个字符，不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test0',
            'maxLength' => 128,
          ),
        ),
        2 => 
        array (
          'name' => 'HealthCheckPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT的探测端口，需要在内网端口范围内。默认值为空。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '65535',
            'minimum' => '0',
            'example' => '80',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error	',
            'errorMessage' => 'An error occurred while call the API.	',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.HealthCheckPort',
            'errorMessage' => 'HealthCheckPort is not in the range of InternalPort',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.DnatNotFound	',
            'errorMessage' => 'The specified dnat is not found.	',
          ),
          3 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          4 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyForwardEntryResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</ModifyForwardEntryResponse>","errorExample":""}]',
      'title' => '修改DNAT规则',
    ),
    'DeleteForwardEntry' => 
    array (
      'summary' => '调用DeleteForwardEntry删除指定的DNAT条目。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ForwardEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除的DNAT条目ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'fwd-5tfk8qgepr9ijjkqxt8do****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.DnatNotFound',
            'errorMessage' => 'The specified dnat is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorretDnatEntryStatus',
            'errorMessage' => 'Dnat entry status blocked this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteForwardEntryResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</DeleteForwardEntryResponse>","errorExample":""}]',
      'title' => '删除DNAT条目',
    ),
    'UnassociateNetworkAcl' => 
    array (
      'summary' => '调用UnassociateNetworkAcl接口，解绑定网络ACL与网络。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要解绑关联资源的网络ACL的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nacl-a2do9e413e0sp****',
          ),
        ),
        1 => 
        array (
          'name' => 'Resource',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '要解绑的资源列表，**N**的取值为0~29，即最多可以解绑30个资源。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要解绑的资源列表，',
              'type' => 'object',
              'properties' => 
              array (
                'ResourceType' => 
                array (
                  'description' => '要解绑的关联资源类型。
取值：
* Network 网络。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Network',
                  'enum' => 
                  array (
                    0 => 'Network',
                  ),
                ),
                'ResourceId' => 
                array (
                  'description' => '要解绑的关联资源的ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'n-5***',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 30,
            'minItems' => 1,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidNetworkAcl.NotFound',
            'errorMessage' => 'The special Network Acl is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'RegionAccessDenied',
            'errorMessage' => 'Could not operate this region\'s resource',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidResource.NotBond',
            'errorMessage' => 'The special Network Acl and the Resource are not bound.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectResourceBondStatus',
            'errorMessage' => 'The resource\'s bond status  is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","errorExample":""},{"type":"xml","example":"<UnassociateNetworkAclResponse>\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</UnassociateNetworkAclResponse>","errorExample":""}]',
      'title' => '解绑网络ACL',
    ),
    'AccosicateNetworkAcl' => 
    array (
      'summary' => '调用AccosicateNetworkAcl接口，绑定网络ACL至网络。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nacl-a2do9e413e0sp****',
          ),
        ),
        1 => 
        array (
          'name' => 'Resource',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '关联的资源信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'ResourceType' => 
                array (
                  'description' => '关联资源的类型。取值：**Network**，网络。

**N**的取值为0~29，即最多可以关联30个资源。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Network',
                  'enum' => 
                  array (
                    0 => 'Network',
                  ),
                ),
                'ResourceId' => 
                array (
                  'description' => '关联资源的ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'n-5****',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 30,
            'minItems' => 1,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidNetworkAcl.NotFound',
            'errorMessage' => 'The special Network Acl is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidResource.NotFound',
            'errorMessage' => 'The binding instance is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidResource.Associated',
            'errorMessage' => 'This instance has already associated  network acl.',
          ),
          6 => 
          array (
            'errorCode' => 'RegionAccessDenied',
            'errorMessage' => 'Could not operate this region\'s resource.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidResource.NotSupport',
            'errorMessage' => 'Network type not support.',
          ),
          8 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","errorExample":""},{"type":"xml","example":"<AccosicateNetworkAclResponse>\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</AccosicateNetworkAclResponse>","errorExample":""}]',
      'title' => '绑定网络ACL',
    ),
    'CreateNetworkAcl' => 
    array (
      'summary' => '调用CreateNetworkAcl接口创建网络ACL。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkAclName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的名称。

长度为1~128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'acl-1',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的描述信息。 

长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my NetworkAcl.',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
              'NetworkAclId' => 
              array (
                'description' => '网络ACL的ID。',
                'type' => 'string',
                'example' => 'nacl-5p1fg655nh68xyz9i****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          1 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\",\\n  \\"NetworkAclId\\": \\"nacl-5p1fg655nh68xyz9i****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateNetworkAclResponse>\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n    <NetworkAclId>String\\tnacl-5p1fg655nh68xyz9i****</NetworkAclId>\\n</CreateNetworkAclResponse>","errorExample":""}]',
      'title' => '创建网络ACL',
    ),
    'DeleteNetworkAclEntry' => 
    array (
      'summary' => '调用DeleteNetworkAclEntry接口，删除一条网络ACL规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkAclEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除关联资源的网络ACL的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'nae-5****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidNetworkAclEntryId.NotFound',
            'errorMessage' => 'The special Network Acl Entry is not found.	',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteNetworkAclEntryResponse>\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</DeleteNetworkAclEntryResponse>","errorExample":""}]',
      'title' => '删除网络ACL规则',
    ),
    'DeleteNetworkAcl' => 
    array (
      'summary' => '调用DeleteNetworkAcl接口删除网络ACL。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nacl-bp1lhl0taikrbgnh****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          1 => 
          array (
            'errorCode' => 'NetworkAclIdNotFound',
            'errorMessage' => 'The specified instance does not exist. Please check whether the instance ID is correct.',
          ),
          2 => 
          array (
            'errorCode' => 'DependencyNetworkViolation',
            'errorMessage' => 'A bound network can be deleted only after it is unbound',
          ),
          3 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          4 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.	',
          ),
          5 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteNetworkAclResponse>\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</DeleteNetworkAclResponse>","errorExample":""}]',
      'title' => '删除网络ACL',
    ),
    'DescribeNetworkAcls' => 
    array (
      'summary' => '调用DescribeNetworkAcls接口查询已创建的网络ACL。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'nacl-bp1lhl0taikrbgnh****',
          ),
        ),
        1 => 
        array (
          'name' => 'NetworkAclName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'acl-1',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联实例的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'n-5****',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全组列表的页码。起始值：**1**。默认值：**1**。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。最大值：**50**。默认值：**10**。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A1707FC0-430C-423A-B624-284046B20399',
              ),
              'TotalCount' => 
              array (
                'description' => '列表数据总数。',
                'type' => 'string',
                'example' => '3',
              ),
              'PageSize' => 
              array (
                'description' => '当前查询每页的行数。',
                'type' => 'string',
                'example' => '2',
              ),
              'PageNumber' => 
              array (
                'description' => '当前查询页码。',
                'type' => 'string',
                'example' => '1',
              ),
              'NetworkAcls' => 
              array (
                'description' => '网络ACL的详细信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => '网络ACL的状态。取值：

- **Available**：可用。
- **Modifying**：配置中。',
                      'type' => 'string',
                      'example' => 'Available',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '网络ACL的创建时间，使用UTC时间格式，格式为`yyyy-MM-ddTHH:mm:ssZ`。',
                      'type' => 'string',
                      'example' => '2019-11-01T06:08:46Z',
                    ),
                    'Description' => 
                    array (
                      'description' => '网络ACL的描述信息。',
                      'type' => 'string',
                      'example' => 'This is my NetworkAcl.',
                    ),
                    'NetworkAclId' => 
                    array (
                      'description' => '网络ACL的ID。',
                      'type' => 'string',
                      'example' => 'nacl-a2do9e413e0spxscd****',
                    ),
                    'NetworkAclName' => 
                    array (
                      'description' => '网络ACL的名称。',
                      'type' => 'string',
                      'example' => 'acl-8',
                    ),
                    'IngressAclEntries' => 
                    array (
                      'description' => '入方向规则信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Policy' => 
                          array (
                            'description' => '授权策略，取值：

- **accept**：允许。
- **drop**：拒绝。',
                            'type' => 'string',
                            'example' => 'accept',
                          ),
                          'NetworkAclEntryId' => 
                          array (
                            'description' => '入方向规则条目的ID。',
                            'type' => 'string',
                            'example' => 'nae-5dk86arlydmezasw****',
                          ),
                          'NetworkAclEntryName' => 
                          array (
                            'description' => '入方向规则条目的名称。',
                            'type' => 'string',
                            'example' => 'acl-3',
                          ),
                          'CidrBlock' => 
                          array (
                            'description' => '源地址段。',
                            'type' => 'string',
                            'example' => '10.0.0.0/24',
                          ),
                          'Protocol' => 
                          array (
                            'description' => '协议类型，取值：

- **icmp**：网络控制报文协议。
- **tcp**：传输控制协议。
- **udp**：用户数据报协议。
- **all**：支持所有协议。',
                            'type' => 'string',
                            'example' => 'all',
                          ),
                          'PortRange' => 
                          array (
                            'description' => '入方向规则的目的端口范围。

- 当入方向规则的**Protocol**（协议类型）为**all**或**icmp**时，端口范围为 **-1/-1**，表示不限制端口。
- 当入方向规则的**Protocol**（协议类型）为**tcp**或**udp**时，端口范围为**1~65535**，格式为**1/200**或**80/80**，表示端口1到端口200或端口80。',
                            'type' => 'string',
                            'example' => '-1/-1',
                          ),
                          'Priority' => 
                          array (
                            'description' => '规则优先级。取值范围：**1~100**。默认值：**1**。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '1',
                          ),
                          'Type' => 
                          array (
                            'description' => '规则类型。取值：
- **system**：系统创建
- **custom**：用户创建',
                            'type' => 'string',
                            'example' => 'system',
                          ),
                          'Description' => 
                          array (
                            'description' => '入方向规则的描述信息。',
                            'type' => 'string',
                            'example' => 'This is IngressAclEntries.',
                          ),
                        ),
                      ),
                    ),
                    'EgressAclEntries' => 
                    array (
                      'description' => '出方向规则信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Policy' => 
                          array (
                            'description' => '授权策略，取值：

- **accept**：允许。
- **drop**：拒绝。',
                            'type' => 'string',
                            'example' => 'accept',
                          ),
                          'NetworkAclEntryId' => 
                          array (
                            'description' => '出方向规则条目的ID。',
                            'type' => 'string',
                            'example' => 'nae-a2d447uw4tillfvgb****',
                          ),
                          'NetworkAclEntryName' => 
                          array (
                            'description' => '出方向规则条目的名称。',
                            'type' => 'string',
                            'example' => 'acl-2',
                          ),
                          'CidrBlock' => 
                          array (
                            'description' => '目标地址段。',
                            'type' => 'string',
                            'example' => '10.0.0.0/24',
                          ),
                          'Protocol' => 
                          array (
                            'description' => '协议类型，取值：

- **icmp**：网络控制报文协议。
- **tcp**：传输控制协议。
- **udp**：用户数据报协议。
- **all**：支持所有协议。',
                            'type' => 'string',
                            'example' => 'all',
                          ),
                          'PortRange' => 
                          array (
                            'description' => '出方向规则的目的端口范围。

- 当出方向规则的**Protocol**（协议类型）为**all**或**icmp**时，端口范围为 **-1/-1**，表示不限制端口。
- 当出方向规则的**Protocol**（协议类型）为**tcp**或**udp**时，端口范围为**1~65535**，格式为**1/200**或**80/80**，表示端口1到端口200或端口80。',
                            'type' => 'string',
                            'example' => '-1/-1',
                          ),
                          'Priority' => 
                          array (
                            'description' => '规则优先级。取值范围：**1~100**。默认值：**1**。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '1',
                          ),
                          'Type' => 
                          array (
                            'description' => '规则类型。取值：
- **system**：系统创建
- **custom**：用户创建',
                            'type' => 'string',
                            'example' => 'system',
                          ),
                          'Description' => 
                          array (
                            'description' => '出方向规则的描述信息。',
                            'type' => 'string',
                            'example' => 'This is EgressAclEntries.',
                          ),
                        ),
                      ),
                    ),
                    'Resources' => 
                    array (
                      'description' => '关联的资源集合。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Status' => 
                          array (
                            'description' => '关联资源的状态。取值：

- **BINDED**：已绑定。
- **BINDING**：绑定中。
- **UNBINDING**：解绑中。',
                            'type' => 'string',
                            'example' => 'BINDING',
                          ),
                          'ResourceType' => 
                          array (
                            'description' => '关联资源的类型。',
                            'type' => 'string',
                            'example' => 'Network',
                          ),
                          'ResourceId' => 
                          array (
                            'description' => '关联资源的ID。',
                            'type' => 'string',
                            'example' => 'n-****',
                          ),
                          'EnsRegionId' => 
                          array (
                            'description' => 'ENS节点ID。',
                            'type' => 'string',
                            'example' => 'cn-fuzhou-telecom',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A1707FC0-430C-423A-B624-284046B20399\\",\\n  \\"TotalCount\\": \\"3\\",\\n  \\"PageSize\\": \\"2\\",\\n  \\"PageNumber\\": \\"1\\",\\n  \\"NetworkAcls\\": [\\n    {\\n      \\"Status\\": \\"Available\\",\\n      \\"CreationTime\\": \\"2019-11-01T06:08:46Z\\",\\n      \\"Description\\": \\"This is my NetworkAcl.\\",\\n      \\"NetworkAclId\\": \\"nacl-a2do9e413e0spxscd****\\",\\n      \\"NetworkAclName\\": \\"acl-8\\",\\n      \\"IngressAclEntries\\": [\\n        {\\n          \\"Policy\\": \\"accept\\",\\n          \\"NetworkAclEntryId\\": \\"nae-5dk86arlydmezasw****\\",\\n          \\"NetworkAclEntryName\\": \\"acl-3\\",\\n          \\"CidrBlock\\": \\"10.0.0.0/24\\",\\n          \\"Protocol\\": \\"all\\",\\n          \\"PortRange\\": \\"-1/-1\\",\\n          \\"Priority\\": 1,\\n          \\"Type\\": \\"system\\",\\n          \\"Description\\": \\"This is IngressAclEntries.\\"\\n        }\\n      ],\\n      \\"EgressAclEntries\\": [\\n        {\\n          \\"Policy\\": \\"accept\\",\\n          \\"NetworkAclEntryId\\": \\"nae-a2d447uw4tillfvgb****\\",\\n          \\"NetworkAclEntryName\\": \\"acl-2\\",\\n          \\"CidrBlock\\": \\"10.0.0.0/24\\",\\n          \\"Protocol\\": \\"all\\",\\n          \\"PortRange\\": \\"-1/-1\\",\\n          \\"Priority\\": 1,\\n          \\"Type\\": \\"system\\",\\n          \\"Description\\": \\"This is EgressAclEntries.\\"\\n        }\\n      ],\\n      \\"Resources\\": [\\n        {\\n          \\"Status\\": \\"BINDING\\",\\n          \\"ResourceType\\": \\"Network\\",\\n          \\"ResourceId\\": \\"n-****\\",\\n          \\"EnsRegionId\\": \\"cn-fuzhou-telecom\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeNetworkAclsResponse>\\n    <RequestId>A1707FC0-430C-423A-B624-284046B20399</RequestId>\\n    <TotalCount>3</TotalCount>\\n    <PageSize>2</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <NetworkAcls>\\n        <Status>Available</Status>\\n        <CreationTime>2019-11-01T06:08:46Z</CreationTime>\\n        <Description>This is my NetworkAcl.</Description>\\n        <NetworkAclId>nacl-a2do9e413e0spxscd****</NetworkAclId>\\n        <NetworkAclName>acl-8</NetworkAclName>\\n        <IngressAclEntries>\\n            <Policy>accept</Policy>\\n            <NetworkAclEntryId>nae-5dk86arlydmezasw****</NetworkAclEntryId>\\n            <NetworkAclEntryName>acl-3</NetworkAclEntryName>\\n            <CidrBlock>10.0.0.0/24</CidrBlock>\\n            <Protocol>all</Protocol>\\n            <PortRange>-1/-1</PortRange>\\n            <Priority>1</Priority>\\n            <Type>system</Type>\\n            <Description>This is IngressAclEntries.</Description>\\n        </IngressAclEntries>\\n        <EgressAclEntries>\\n            <Policy>accept</Policy>\\n            <NetworkAclEntryId>nae-a2d447uw4tillfvgb****</NetworkAclEntryId>\\n            <NetworkAclEntryName>acl-2</NetworkAclEntryName>\\n            <CidrBlock>10.0.0.0/24</CidrBlock>\\n            <Protocol>all</Protocol>\\n            <PortRange>-1/-1</PortRange>\\n            <Priority>1</Priority>\\n            <Type>system</Type>\\n            <Description>This is EgressAclEntries.</Description>\\n        </EgressAclEntries>\\n        <Resources>\\n            <Status>BINDING</Status>\\n            <ResourceType>Network</ResourceType>\\n            <ResourceId>n-****</ResourceId>\\n            <EnsRegionId>cn-fuzhou-telecom</EnsRegionId>\\n        </Resources>\\n    </NetworkAcls>\\n</DescribeNetworkAclsResponse>","errorExample":""}]',
      'title' => '查看网络ACL的列表信息',
    ),
    'CreateNetworkAclEntry' => 
    array (
      'summary' => '调用CreateNetworkAclEntry接口，创建一条网络ACL规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkAclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'nacl-bp1lhl0taikrbgnh****',
          ),
        ),
        1 => 
        array (
          'name' => 'NetworkAclEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则条目的名称。

长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'acl-1',
            'maxLength' => 128,
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络ACL的描述信息。 

长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'This is my NetworkAcl.',
            'maxLength' => 256,
          ),
        ),
        3 => 
        array (
          'name' => 'Direction',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则方向。取值：

- **ingress**：入方向
- **egress**：出方向',
            'type' => 'string',
            'required' => true,
            'example' => 'ingress',
            'enum' => 
            array (
              0 => 'egress',
              1 => 'ingress',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'Policy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '授权策略，取值：

- **accept**：允许
- **drop**：拒绝',
            'type' => 'string',
            'required' => true,
            'example' => 'accept',
            'enum' => 
            array (
              0 => 'accept',
              1 => 'drop',
            ),
          ),
        ),
        5 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源地址网段。',
            'type' => 'string',
            'required' => true,
            'example' => '10.0.0.0/24',
          ),
        ),
        6 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型。取值：

- **icmp**：网络控制报文协议。
- **tcp**：传输控制协议。
- **udp**：用户数据报协议。
- **all**：支持所有协议。',
            'type' => 'string',
            'required' => true,
            'example' => 'all',
            'enum' => 
            array (
              0 => 'icmp',
              1 => 'tcp',
              2 => 'udp',
              3 => 'all',
              4 => 'gre',
            ),
          ),
        ),
        7 => 
        array (
          'name' => 'PortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '端口范围。

- 当规则的**Protocol**（协议类型）为**all**或**icmp**时，端口范围为-1/-1，表示不限制端口。
- 当规则的**Protocol**（协议类型）为**tcp**或**udp**时，端口范围为**1~65535**，格式为**1/200**或**80/80**，表示端口1到端口200或端口80。',
            'type' => 'string',
            'required' => true,
            'example' => '-1/-1',
          ),
        ),
        8 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则优先级。取值范围：**1~100**。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
              'NetworkAclEntryId' => 
              array (
                'description' => '关联资源的网络ACL的ID。',
                'type' => 'string',
                'example' => 'nae-5****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParam.DuplicateRule',
            'errorMessage' => 'This rule already exists',
          ),
          3 => 
          array (
            'errorCode' => 'RuleLimitExceed',
            'errorMessage' => 'The maximum number of network acl rule is reached.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          5 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\",\\n  \\"NetworkAclEntryId\\": \\"nae-5****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateNetworkAclEntryResponse>\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n    <NetworkAclEntryId>nae-5****</NetworkAclEntryId>\\n</CreateNetworkAclEntryResponse>","errorExample":""}]',
      'title' => '创建网络ACL规则',
    ),
    'AssignPrivateIpAddresses' => 
    array (
      'summary' => '调用AssignPrivateIpAddresses为弹性网卡分配辅助私有IP地址。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eni-uf6533jbifugr5fo2j1w',
          ),
        ),
        1 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '交换机ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vsw-5rllcjb3ol6duzjdnbm1ombn7',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'AssignedPrivateIpAddressesSet' => 
              array (
                'description' => '已分配辅助私网IP地址的弹性网卡信息组成的集合。',
                'type' => 'object',
                'properties' => 
                array (
                  'NetworkInterfaceId' => 
                  array (
                    'description' => '弹性网卡ID。',
                    'type' => 'string',
                    'example' => 'eni-uf620pb4d19ljnu4a64m',
                  ),
                  'PrivateIpSet' => 
                  array (
                    'description' => '已分配的私网IP地址。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '已分配的私网IP地址。',
                      'type' => 'string',
                      'example' => '10.0.0.5',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidEniId.NotFound',
            'errorMessage' => 'The specified NetworkInterfaceId does not exist.	',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectInstanceStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidOperation.InstanceNotSupport',
            'errorMessage' => 'The specified instance does not support this operation.	',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'The specified VSwitchId does not exist.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotBelongNetwork',
            'errorMessage' => 'The specified VSwitch is not bound to instance\'s network.',
          ),
          8 => 
          array (
            'errorCode' => 'MaxEniPrivateIpsCountExceeded',
            'errorMessage' => 'The maximum number of privateIp in a eni is exceeded.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidVSwitchId.IpNotEnough',
            'errorMessage' => 'Don\'t have enough private IPs in this switch.',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectEniStatus',
            'errorMessage' => 'Current eni status does not support this operation.	',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter.EniServiceManaged',
            'errorMessage' => 'The eni is managed by service.',
          ),
          12 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"AssignedPrivateIpAddressesSet\\": {\\n    \\"NetworkInterfaceId\\": \\"eni-uf620pb4d19ljnu4a64m\\",\\n    \\"PrivateIpSet\\": [\\n      \\"10.0.0.5\\"\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '分配辅助私有IP',
    ),
    'UnassignPrivateIpAddresses' => 
    array (
      'summary' => '调用UnassignPrivateIpAddresses从一块网卡删除一个或多个辅助私有IP地址。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetworkInterfaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eni-f8z57orgmt6d144t****',
          ),
        ),
        1 => 
        array (
          'name' => 'PrivateIpAddress',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '一个或多个需要删除的辅助私有IP地址。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '一个或多个需要删除的辅助私有IP地址。',
              'type' => 'string',
              'required' => false,
              'example' => '192.168.XX.XX',
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1ECC937A-AE0E-4626-BE51-DED1D6D1C888',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          2 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidEniId.NotFound',
            'errorMessage' => 'The specified NetworkInterfaceId does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidPrivateIpAddress.NotFound',
            'errorMessage' => 'The specified privateIpAddress does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectPrivateIpAddressStatus',
            'errorMessage' => 'The current status of the resource does not support this operation.',
          ),
          6 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"1ECC937A-AE0E-4626-BE51-DED1D6D1C888\\"\\n}","type":"json"}]',
      'title' => '删除辅助私有IP',
    ),
    'GetOssUsageData' => 
    array (
      'summary' => '调用GetOssUsageData查询时间段内的存储、带宽用量的计算值。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '起始时间点，UTC时间，格式：2010-01-21T09:50:23Z。',
            'type' => 'string',
            'required' => true,
            'example' => '2022-01-11T00:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间点，UTC时间，格式：2010-01-21T09:50:23Z。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
            ),
            'example' => '2022-01-12T00:00:00Z',
          ),
        ),
        2 => 
        array (
          'name' => 'Bucket',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OSS逻辑bucket名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'ens-sink-bucketzyp1656903494',
          ),
        ),
        3 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '时间聚合粒度，单位：分钟。

默认为5分钟，取值范围：5~1440。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2A8CCD48-14F9-0309-B957-7B1D74A8119D',
              ),
              'UsageList' => 
              array (
                'description' => '用量数组。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '用量对象。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'LanRxBw' => 
                    array (
                      'description' => '内网入向带宽，单位：Bps。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '37865147',
                    ),
                    'LanTxBw' => 
                    array (
                      'description' => '内网出向带宽，单位：Bps。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '22012187890',
                    ),
                    'Point' => 
                    array (
                      'description' => '一天内的时间点编号。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '144',
                    ),
                    'PointTs' => 
                    array (
                      'description' => '时间点，UTC时间，格式：2010-01-21T09:50:23Z。',
                      'type' => 'string',
                      'example' => '2022-01-12T00:00:00Z',
                    ),
                    'StorageUsageByte' => 
                    array (
                      'description' => '存储用量，单位：byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '85462146217',
                    ),
                    'WanRxBw' => 
                    array (
                      'description' => '外网入向带宽，单位：Bps。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '542155715',
                    ),
                    'WanTxBw' => 
                    array (
                      'description' => '外网出向带宽，单位：Bps。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '547126175217',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParamNotEnough',
            'errorMessage' => '参数不足',
          ),
          1 => 
          array (
            'errorCode' => 'ParamScopeError',
            'errorMessage' => '参数值错误',
          ),
          2 => 
          array (
            'errorCode' => 'ParamTypeError',
            'errorMessage' => '参数类型错误',
          ),
          3 => 
          array (
            'errorCode' => 'SqlError',
            'errorMessage' => '数据库操作异常',
          ),
          4 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2A8CCD48-14F9-0309-B957-7B1D74A8119D\\",\\n  \\"UsageList\\": [\\n    {\\n      \\"LanRxBw\\": 37865147,\\n      \\"LanTxBw\\": 22012187890,\\n      \\"Point\\": 144,\\n      \\"PointTs\\": \\"2022-01-12T00:00:00Z\\",\\n      \\"StorageUsageByte\\": 85462146217,\\n      \\"WanRxBw\\": 542155715,\\n      \\"WanTxBw\\": 547126175217\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<GetOssUsageDataResponse>\\n    <RequestId>2A8CCD48-14F9-0309-B957-7B1D74A8119D</RequestId>\\n    <UsageList>\\n        <LanRxBw>37865147</LanRxBw>\\n        <LanTxBw>22012187890</LanTxBw>\\n        <Point>144</Point>\\n        <PointTs>2022-01-12T00:00:00Z</PointTs>\\n        <StorageUsageByte>85462146217</StorageUsageByte>\\n        <WanRxBw>542155715</WanRxBw>\\n        <WanTxBw>547126175217</WanTxBw>\\n    </UsageList>\\n</GetOssUsageDataResponse>","errorExample":""}]',
      'title' => '查询存储和带宽用量',
      'description' => '带宽和存储用量查询聚合粒度不可超过一天，聚合数据处理是将一段时间内点位数据分别取最大值。',
    ),
    'GetOssStorageAndAccByBuckets' => 
    array (
      'summary' => '调用GetOssStorageAndAccByBuckets查询上一计费周期存储用量和本月累计调用次数。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BucketList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'bucket信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'my-bucket',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '112F4860-F1B2-58DD-8FC0-75F19DA1C4BF',
              ),
              'BucketList' => 
              array (
                'description' => 'bucket信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '统计详情。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Acc' => 
                    array (
                      'description' => '访问次数。
',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1000',
                    ),
                    'Bucket' => 
                    array (
                      'description' => '存储空间名称。',
                      'type' => 'string',
                      'example' => 'my-bucket',
                    ),
                    'StorageUsageByte' => 
                    array (
                      'description' => '存储用量，单位byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1024',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParamNotEnough',
            'errorMessage' => '参数不足',
          ),
          1 => 
          array (
            'errorCode' => 'ParamScopeError',
            'errorMessage' => '参数值错误',
          ),
          2 => 
          array (
            'errorCode' => 'ParamTypeError',
            'errorMessage' => '参数类型错误',
          ),
          3 => 
          array (
            'errorCode' => 'SqlError',
            'errorMessage' => '数据库操作异常',
          ),
          4 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"112F4860-F1B2-58DD-8FC0-75F19DA1C4BF\\",\\n  \\"BucketList\\": [\\n    {\\n      \\"Acc\\": 1000,\\n      \\"Bucket\\": \\"my-bucket\\",\\n      \\"StorageUsageByte\\": 1024\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询上一周期存储用量和本月调用次数',
    ),
    'ListBuckets' => 
    array (
      'summary' => '调用ListBuckets查询指定用户拥有的所有存储空间（Bucket）。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Prefix',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '限定返回的bucket name必须以prefix作为前缀，可以不设定。不设定时则不过滤前缀信息。
默认值：无',
            'description' => '限定返回的bucket name必须以prefix作为前缀。可以不设定该参数，不设定时则不过滤前缀信息。
',
            'type' => 'string',
            'required' => false,
            'example' => 'image',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '翻页页码，从1开始。',
            'description' => '翻页页码，从1开始。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '否	限定此次返回bucket的最大数，可以不设定。如果不设定，默认为10，取值不能大于100。
默认值：10',
            'description' => '限定此次返回bucket的最⼤数。可以不设定该参数，不设定时默认值为10，取值不能⼤于100。
',
            'type' => 'string',
            'required' => false,
            'example' => '5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '435769C7-AA6F-4DC5-B3DB-A3DC0DE7E853',
              ),
              'BucketInfos' => 
              array (
                'title' => 'Bucket信息列表',
                'description' => 'Bucket信息列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'BucketAcl' => 
                    array (
                      'description' => 'Bucket读写权限类型：

- **public-read-write**：公共读写

- **public-read**：公共读

- **private**：私有（默认值）',
                      'type' => 'string',
                      'example' => 'private',
                    ),
                    'BucketName' => 
                    array (
                      'description' => 'Bucket名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'Comment' => 
                    array (
                      'description' => '备注。
',
                      'type' => 'string',
                      'example' => 'numb',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => 'Bucket创建时间。按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。
',
                      'type' => 'string',
                      'example' => '2022-10-12T05:45:00Z',
                    ),
                    'LogicalBucketType' => 
                    array (
                      'description' => '单节点存储，取值：sink',
                      'type' => 'string',
                      'example' => 'sink',
                    ),
                    'ModifyTime' => 
                    array (
                      'description' => 'Bucket修改时间。按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。
',
                      'type' => 'string',
                      'example' => '2022-10-12T06:45:00Z',
                    ),
                    'EnsRegionId' => 
                    array (
                      'description' => '节点区域ID。',
                      'type' => 'string',
                      'example' => 'cn-dalian-unicom',
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'title' => '命中条件Bucket总数',
                'description' => '命中条件Bucket总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'MissingParameter',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDenied',
            'errorMessage' => 'auth is not valid',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoSuchBucket',
            'errorMessage' => 'The specified bucket does not exist',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"435769C7-AA6F-4DC5-B3DB-A3DC0DE7E853\\",\\n  \\"BucketInfos\\": [\\n    {\\n      \\"BucketAcl\\": \\"private\\",\\n      \\"BucketName\\": \\"test\\",\\n      \\"Comment\\": \\"numb\\",\\n      \\"CreateTime\\": \\"2022-10-12T05:45:00Z\\",\\n      \\"LogicalBucketType\\": \\"sink\\",\\n      \\"ModifyTime\\": \\"2022-10-12T06:45:00Z\\",\\n      \\"EnsRegionId\\": \\"cn-dalian-unicom\\"\\n    }\\n  ],\\n  \\"TotalCount\\": 1\\n}","errorExample":""},{"type":"xml","example":"<ListBucketsResponse>\\n    <RequestId>435769C7-AA6F-4DC5-B3DB-A3DC0DE7E853</RequestId>\\n    <BucketInfos>\\n        <BucketAcl>private</BucketAcl>\\n        <BucketName>test</BucketName>\\n        <Comment>numb</Comment>\\n        <CreateTime>2022-10-12T05:45:00Z</CreateTime>\\n        <LogicalBucketType>sink</LogicalBucketType>\\n        <ModifyTime>2022-10-12T06:45:00Z</ModifyTime>\\n        <EnsRegionId>cn-dalian-unicom</EnsRegionId>\\n    </BucketInfos>\\n    <TotalCount>1</TotalCount>\\n</ListBucketsResponse>","errorExample":""}]',
      'title' => '查询存储空间列表',
    ),
    'PutBucket' => 
    array (
      'summary' => '创建协同存储的Bucket存储空间。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogicalBucketType',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '否	逻辑bucket类型，取值范围：
sink: 下沉（指定节点）
standard：标准(全局)（默认值）',
            'description' => '单节点存储，取值：sink
',
            'type' => 'string',
            'required' => false,
            'example' => 'sink',
          ),
        ),
        1 => 
        array (
          'name' => 'Comment',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '备注。长度为0-128个字符、汉字或表情符等。',
            'description' => '备注。⻓度为0-128个字符或汉字。',
            'type' => 'string',
            'required' => false,
            'example' => 'numb',
          ),
        ),
        2 => 
        array (
          'name' => 'BucketAcl',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => 'Bucket权限类型：
private：私有（默认值）
public-read-write：公共读写
public-read：公共读',
            'description' => 'Bucket权限类型：

- **private**：私有（默认值）

- **public-read-write**：公共读写

- **public-read**：公共读',
            'type' => 'string',
            'required' => false,
            'example' => 'private',
          ),
        ),
        3 => 
        array (
          'name' => 'BucketName',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => 'Bucket名称。
3~50 个字符，只允许小写字母、数字、短横线（-），且不能以短横线开头或结尾。',
            'description' => 'Bucket名称。
3~50 个字符，只允许小写字母、数字、短横线（-），且不能以短横线开头或结尾。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'formData',
          'schema' => 
          array (
            'title' => '节点区域id，不指定时为全局默认节点',
            'description' => '节点区域id，不指定时为全局默认节点',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing-15',
          ),
        ),
        5 => 
        array (
          'name' => 'DispatchScope',
          'in' => 'formData',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '85123E71-7710-4620-8AAB-133CCE49EC83',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'TooManyBuckets',
            'errorMessage' => 'The number of buckets created exceeds the limit.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'Specified parameter %s is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'UnSupportedCity',
            'errorMessage' => 'The city is not supported.',
          ),
          3 => 
          array (
            'errorCode' => 'BucketAlreadyExists',
            'errorMessage' => 'The bucket already exists or is occupied by other users.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidEngineId',
            'errorMessage' => 'The engineId does not belong to the city.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidBucketName',
            'errorMessage' => 'Specified parameter BucketName is not valid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidComment',
            'errorMessage' => 'Specified parameter Comment is not valid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidDataRedundancyType',
            'errorMessage' => 'Specified parameter DataRedundancyType is not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDenied',
            'errorMessage' => 'auth is not valid',
          ),
          1 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'The current ens region has not been purchased',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoSuchEnsRegion',
            'errorMessage' => 'The ens region does not exist',
          ),
          1 => 
          array (
            'errorCode' => 'NoSuchStorageDomain',
            'errorMessage' => 'The specified storageDomain does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"85123E71-7710-4620-8AAB-133CCE49EC83\\"\\n}","errorExample":""},{"type":"xml","example":"<PutBucketResponse>\\n    <RequestId>85123E71-7710-4620-8AAB-133CCE49EC83</RequestId>\\n</PutBucketResponse>","errorExample":""}]',
      'title' => '创建Bucket',
    ),
    'DeleteBucket' => 
    array (
      'summary' => '调用DeleteBucket删除Bucket存储空间。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BucketName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'bucket名称',
            'description' => '需要删除的Bucket名称，仅支持单个删除。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2180AB96-57CF-1C68-9FEE-D60E547FD79C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidBucketName',
            'errorMessage' => 'Specified parameter BucketName is not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDenied',
            'errorMessage' => 'auth is not valid',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoSuchBucket',
            'errorMessage' => 'The specified bucket does not exist.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'BucketNotEmpty',
            'errorMessage' => 'The bucket you tried to delete is not empty.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2180AB96-57CF-1C68-9FEE-D60E547FD79C\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteBucketResponse>\\n    <RequestId>2180AB96-57CF-1C68-9FEE-D60E547FD79C</RequestId>\\n</DeleteBucketResponse>","errorExample":""}]',
      'title' => '删除Bucket',
      'description' => '- 只有Bucket的阿里云UID账户拥有者才能删除其账号下的Bucket。

- Bucket中存储文件时不能删除，只能删除空的Bucket空间。',
    ),
    'GetBucketInfo' => 
    array (
      'summary' => '调用GetBucketInfo获取Bucket详细信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BucketName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Bucket名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C5831388-2D4B-46F4-A96B-D4E6BD06E7521',
              ),
              'BucketInfo' => 
              array (
                'description' => 'Bucket信息列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'BucketAcl' => 
                  array (
                    'description' => 'Bucket读写权限类型：

- **public-read-write**：公共读写

- **public-read**：公共读

- **private**：私有（默认值）',
                    'type' => 'string',
                    'example' => 'private',
                  ),
                  'BucketName' => 
                  array (
                    'description' => 'Bucket名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Comment' => 
                  array (
                    'description' => '备注。',
                    'type' => 'string',
                    'example' => 'das',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => 'Bucket创建时间。按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。',
                    'type' => 'string',
                    'example' => '2022-10-12T05:45:00Z',
                  ),
                  'LogicalBucketType' => 
                  array (
                    'description' => '单节点存储，取值：sink',
                    'type' => 'string',
                    'example' => 'sink',
                  ),
                  'ModifyTime' => 
                  array (
                    'description' => 'Bucket修改时间。按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。',
                    'type' => 'string',
                    'example' => '2022-10-12T06:45:00Z',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'Specified parameter %s is not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBucketName',
            'errorMessage' => 'Specified parameter BucketName is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDenied',
            'errorMessage' => 'auth is not valid',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoSuchBucket',
            'errorMessage' => 'The specified bucket does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C5831388-2D4B-46F4-A96B-D4E6BD06E7521\\",\\n  \\"BucketInfo\\": {\\n    \\"BucketAcl\\": \\"private\\",\\n    \\"BucketName\\": \\"test\\",\\n    \\"Comment\\": \\"das\\",\\n    \\"CreateTime\\": \\"2022-10-12T05:45:00Z\\",\\n    \\"LogicalBucketType\\": \\"sink\\",\\n    \\"ModifyTime\\": \\"2022-10-12T06:45:00Z\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetBucketInfoResponse>\\n    <RequestId>C5831388-2D4B-46F4-A96B-D4E6BD06E7521</RequestId>\\n    <BucketInfo>\\n        <BucketAcl>private</BucketAcl>\\n        <BucketName>test</BucketName>\\n        <Comment>das</Comment>\\n        <CreateTime>2022-10-12T05:45:00Z</CreateTime>\\n        <LogicalBucketType>sink</LogicalBucketType>\\n        <ModifyTime>2022-10-12T06:45:00Z</ModifyTime>\\n    </BucketInfo>\\n</GetBucketInfoResponse>","errorExample":""}]',
      'title' => '查询Bucket信息',
    ),
    'GetBucketLifecycle' => 
    array (
      'summary' => '调用GetBucketLifecycle获取生命周期规则信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BucketName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Bucket名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'tese',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要获取的规则ID。不设置时，获取所有规则信息。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A2583E8B-B930-4F59-ADC0-0E209A90C46E',
              ),
              'Rule' => 
              array (
                'description' => '规则详细信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ID' => 
                    array (
                      'description' => '标识规则的唯⼀ID。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                    'Expiration' => 
                    array (
                      'description' => '过期时间。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Days' => 
                        array (
                          'description' => '过期天数。',
                          'type' => 'string',
                          'example' => '5',
                        ),
                        'CreatedBeforeDate' => 
                        array (
                          'description' => '过期日期。',
                          'type' => 'string',
                          'example' => 'yyy-MM-DDThh:mm:ssZ',
                        ),
                      ),
                    ),
                    'Prefix' => 
                    array (
                      'description' => '规则所适⽤的前缀。',
                      'type' => 'string',
                      'example' => 'image',
                    ),
                    'Status' => 
                    array (
                      'description' => '规则状态，取值：

- **Enabled**：定期执⾏该规则。

- **Disabled**：忽略该规则。',
                      'type' => 'string',
                      'example' => 'Enabled',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidBucketName',
            'errorMessage' => 'Specified parameter BucketName is not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'AccessDenied',
            'errorMessage' => 'auth is not valid',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoSuchBucket',
            'errorMessage' => 'The specified bucket does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A2583E8B-B930-4F59-ADC0-0E209A90C46E\\",\\n  \\"Rule\\": [\\n    {\\n      \\"ID\\": \\"1\\",\\n      \\"Expiration\\": {\\n        \\"Days\\": \\"5\\",\\n        \\"CreatedBeforeDate\\": \\"yyy-MM-DDThh:mm:ssZ\\"\\n      },\\n      \\"Prefix\\": \\"image\\",\\n      \\"Status\\": \\"Enabled\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<GetBucketLifecycleResponse>\\n    <RequestId>A2583E8B-B930-4F59-ADC0-0E209A90C46E</RequestId>\\n    <Rule>\\n        <ID>1</ID>\\n        <Expiration>\\n            <CreatedBeforeDate>yyy-MM-DDThh:mm:ssZ</CreatedBeforeDate>\\n        </Expiration>\\n        <Prefix>image</Prefix>\\n        <Status>Enabled</Status>\\n    </Rule>\\n</GetBucketLifecycleResponse>","errorExample":""}]',
      'title' => '查看Object生命周期规则',
    ),
    'PutBucketLifecycle' => 
    array (
      'summary' => '调用PutBucketLifecycle设置文件生命周期规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BucketName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Bucket名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '标识规则的唯⼀ID。最多由255个字节组成。

- 创建新规则时无需配置该参数，系统会⾃动⽣成⼀个唯⼀ID。

- 更新已有规则需指定RuleId，且该RuleId对应的规则必须存在，否则会报错。

',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则状态。取值范围：

- **Enabled**：定期执⾏该规则。

- **Disabled**：忽略该规则。',
            'type' => 'string',
            'required' => true,
            'example' => 'Enabled',
          ),
        ),
        3 => 
        array (
          'name' => 'Prefix',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定规则所适⽤的前缀（Prefix），不⽀持设置相同的Prefix。

- 如果指定了Prefix，则表示此规则仅适⽤于Bucket中与Prefix匹配的Object。

- 如果Prefix置空，则表示此规则适⽤于Bucket中所有Object。',
            'type' => 'string',
            'required' => false,
            'example' => 'image',
          ),
        ),
        4 => 
        array (
          'name' => 'CreatedBeforeDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定过期⽇期，存储会对最后更新时间早于该⽇期的数据执⾏⽣命周期规则。

⽇期设置需按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。

>ExpirationDays和CreateBeforeDate互斥，必须设置⼀个。',
            'type' => 'string',
            'required' => false,
            'example' => '2023-10-12T05:45:00Z',
          ),
        ),
        5 => 
        array (
          'name' => 'ExpirationDays',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定⽣命周期规则在距离Object最后更新多少天后⽣效。取值需大于0，为正整数。
>ExpirationDays和CreateBeforeDate互斥，必须设置⼀个。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '5',
          ),
        ),
        6 => 
        array (
          'name' => 'AllowSameActionOverlap',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否允许前缀重叠。取值：

- **true**：允许重复。

- **false**（默认值）：不允许重复。

',
            'type' => 'string',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '62373E71-5521-4620-8AAB-133CCE49357A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidArgument',
            'errorMessage' => 'Days and createBeforeDate can only choose one',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidBucketName',
            'errorMessage' => 'Specified parameter BucketName is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidLifecycleScheme',
            'errorMessage' => 'Specified parameter LifecycleScheme is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidType',
            'errorMessage' => 'Specified parameter Type is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationDenied',
            'errorMessage' => 'Engine lifecycle scheme does\'t support replication lifecycle rule configuration.',
          ),
          6 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDenied',
            'errorMessage' => 'auth is not valid',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoSuchBucket',
            'errorMessage' => 'The specified bucket does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NoSuchLifecycle',
            'errorMessage' => 'The bucket lifecycle does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"62373E71-5521-4620-8AAB-133CCE49357A\\"\\n}","errorExample":""},{"type":"xml","example":"<PutBucketLifecycleResponse>\\n    <RequestId>62373E71-5521-4620-8AAB-133CCE49357A</RequestId>\\n</PutBucketLifecycleResponse>","errorExample":""}]',
      'title' => '设置Object生命周期规则',
      'description' => '- 最多⽀持1000条规则。

- 如果同一文件同时满足多条规则，则以最先过期时间规则为准。',
    ),
    'DeleteBucketLifecycle' => 
    array (
      'summary' => '调用DeleteBucketLifecycle删除Bucket中文件的⽣命周期规则。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BucketName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Bucket名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则ID。不指定时，表示清空所有规则。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C6583E8B-B930-4F59-ADC0-0E209A45E860',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidBucketName',
            'errorMessage' => 'Specified parameter BucketName is not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'AccessDenied',
            'errorMessage' => 'auth is not valid',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoSuchBucket',
            'errorMessage' => 'The specified bucket does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'NoSuchLifecycle',
            'errorMessage' => 'The bucket lifecycle does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C6583E8B-B930-4F59-ADC0-0E209A45E860\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteBucketLifecycleResponse>\\n    <RequestId>C6583E8B-B930-4F59-ADC0-0E209A45E860</RequestId>\\n</DeleteBucketLifecycleResponse>","errorExample":""}]',
      'title' => '删除Object生命周期规则 ',
    ),
    'PutBucketAcl' => 
    array (
      'summary' => '调用PutBucketAcl修改Bucket读写权限。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BucketName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Bucket名称',
            'description' => 'Bucket名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'BucketAcl',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Bucket读写权限类型：
public-read-write：公共读写
public-read：公共读
private：私有（默认值）',
            'description' => 'Bucket读写权限类型：

- **public-read-write**：公共读写

- **public-read**：公共读

- **private**：私有（默认值）',
            'type' => 'string',
            'required' => true,
            'example' => 'private',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0066F05-3116-4BAA-B588-52EB2E7F5D23',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'Specified parameter %s is not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBucketName',
            'errorMessage' => 'Specified parameter BucketName is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDenied',
            'errorMessage' => 'auth is not valid',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoSuchBucket',
            'errorMessage' => 'The specified bucket does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C0066F05-3116-4BAA-B588-52EB2E7F5D23\\"\\n}","errorExample":""},{"type":"xml","example":"<PutBucketAclResponse>\\n    <RequestId>C0066F05-3116-4BAA-B588-52EB2E7F5D23</RequestId>\\n</PutBucketAclResponse>","errorExample":""}]',
      'title' => '设置Bucket访问权限',
    ),
    'GetBucketAcl' => 
    array (
      'summary' => '调用GetBucketAcl获取Bucket访问权限。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BucketName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Bucket名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5C881388-2D4B-46F4-A96B-D4E6BD0886A2',
              ),
              'BucketAcl' => 
              array (
                'description' => 'Bucket读写权限。',
                'type' => 'string',
                'example' => 'private',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'Specified parameter %s is not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBucketName',
            'errorMessage' => 'Specified parameter BucketName is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDenied',
            'errorMessage' => 'auth is not valid',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoSuchBucket',
            'errorMessage' => 'The specified bucket does not exist.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5C881388-2D4B-46F4-A96B-D4E6BD0886A2\\",\\n  \\"BucketAcl\\": \\"private\\"\\n}","errorExample":""},{"type":"xml","example":"<GetBucketAclResponse>\\n    <RequestId>5C881388-2D4B-46F4-A96B-D4E6BD0886A2</RequestId>\\n    <BucketAcl>private</BucketAcl>\\n</GetBucketAclResponse>","errorExample":""}]',
      'title' => '获取Bucket访问权限',
    ),
    'ListObjects' => 
    array (
      'summary' => '调用ListObjects列出Bucket中的所有文件（Object）的信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'BucketName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Bucket名称',
            'description' => 'Bucket名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'EncodingType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '请求响应体中文件名称采用的编码方式，目前仅支持URL',
            'description' => '请求响应体中文件名称采用的编码方式，目前仅支持url。',
            'type' => 'string',
            'required' => false,
            'example' => 'url',
          ),
        ),
        2 => 
        array (
          'name' => 'Marker',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '否	此次列举文件的起点。设定从Marker之后按字母排序开始返回Object。Marker用来实现分页显示效果，参数的长度必须小于1024字节。
做条件查询时，即使Marker在列表中不存在，也会从符合Marker字母排序的下一个开始打印。',
            'description' => '此次列举文件的起点。设定从Marker之后按字母排序开始返回Object。Marker用来实现分页显示效果，参数的长度必须小于1024字节。

做条件查询时，即使Marker在列表中不存在，也会从符合Marker字母排序的下一个开始打印。',
            'type' => 'string',
            'required' => false,
            'example' => 'a',
          ),
        ),
        3 => 
        array (
          'name' => 'MaxKeys',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '限定此次列举文件的最大个数。
取值范围 (0, 1000]，默认值为100。',
            'description' => '限定此次列举文件的最大个数。
取值范围：0~1000（包含1000），默认值为100。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '100',
          ),
        ),
        4 => 
        array (
          'name' => 'Prefix',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '限定返回的文件必须以prefix作为前缀。
参数的长度必须小于1024字节。
使用Prefix查询时，返回的Key中仍会包含Prefix。',
            'description' => '限定返回的文件必须以prefix作为前缀。使用Prefix查询时，返回的Key中仍会包含Prefix。

参数的长度必须小于1000字节。',
            'type' => 'string',
            'required' => false,
            'example' => 'b',
          ),
        ),
        5 => 
        array (
          'name' => 'ContinuationToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '否	此次列举文件使用的continuationToken。如果Max-keys的设定无法一次完成列举，返回结果会附加NextContinuationToken作为下一次列举的ContinuationToken。',
            'description' => '此次列举文件使用的continuationToken。如果MaxKeys的设定无法一次完成列举，返回结果会附加NextContinuationToken作为下一次列举的ContinuationToken。',
            'type' => 'string',
            'required' => false,
            'example' => 'test1.txt',
          ),
        ),
        6 => 
        array (
          'name' => 'StartAfter',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '此次列举文件的起点。设定从Start-after之后按字母排序开始返回Object。Start-after用来实现分页显示效果，参数的长度必须小于1024字节。
做条件查询时，即使Start-after在列表中不存在，也会从符合Start-after字母排序的下一个开始打印。',
            'description' => '此次列举文件的起点。设定从StartAfter之后按字母排序开始返回Object。StartAfter用来实现分页显示效果，参数的长度必须小于1000字节。
做条件查询时，即使StartAfter在列表中不存在，也会从符合StartAfter字母排序的下一个开始打印。',
            'type' => 'string',
            'required' => false,
            'example' => 'b',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CommonPrefixes' => 
              array (
                'title' => '如果请求中指定了Delimiter参数，则会在返回的响应中包含CommonPrefixes元素。该元素表明以Delimiter结尾，并有共同前缀的Object名称的集合。',
                'description' => '如果请求中指定了Delimiter参数，则会在返回的响应中包含CommonPrefixes元素。该元素表明以Delimiter结尾，并有共同前缀的Object名称的集合。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '如果请求中指定了Delimiter参数，则会在返回的响应中包含CommonPrefixes元素。该元素表明以Delimiter结尾，并有共同前缀的Object名称的集合。',
                  'type' => 'string',
                  'example' => '不涉及',
                ),
              ),
              'NextContinuationToken' => 
              array (
                'title' => '下次列举文件的ContinuationToken。',
                'description' => '下次列举文件的ContinuationToken。',
                'type' => 'string',
                'example' => 'CgJiYw--',
              ),
              'ContinuationToken' => 
              array (
                'title' => '此次列举文件操作使用ContinuationToken',
                'description' => '此次列举文件操作使用ContinuationToken。',
                'type' => 'string',
                'example' => 'test1.txt',
              ),
              'Delimiter' => 
              array (
                'title' => '对文件名称进行分组的字符',
                'description' => '对文件名称进行分组的字符。',
                'type' => 'string',
                'example' => '/',
              ),
              'EncodingType' => 
              array (
                'title' => '指明返回结果中编码使用的类型。',
                'description' => '指明返回结果中编码使用的类型。',
                'type' => 'string',
                'example' => '不涉及',
              ),
              'Prefix' => 
              array (
                'title' => '本次查询结果的前缀',
                'description' => '本次查询结果的前缀。',
                'type' => 'string',
                'example' => 'b',
              ),
              'Marker' => 
              array (
                'title' => '标明本次列举文件的起点',
                'description' => '标明本次列举文件的起点。',
                'type' => 'string',
                'example' => 'ceshi.txt1617853707991',
              ),
              'BucketName' => 
              array (
                'title' => 'Bucket名称',
                'description' => 'Bucket名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'Contents' => 
              array (
                'title' => 'Object元信息列表',
                'description' => 'Object元信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'title' => 'Object名称',
                      'description' => 'Object名称。',
                      'type' => 'string',
                      'example' => 'ceshi.txt1617853706546',
                    ),
                    'LastModified' => 
                    array (
                      'title' => 'Object最后被修改的时间。
（格式：yyyy-mm-ddThh:mm:ss.timezone, 例如 2011-12-01T12:27:13.000Z）',
                      'description' => 'Object最后被修改的时间。',
                      'type' => 'string',
                      'example' => '2021-04-08T03:48:47.488Z',
                    ),
                    'ETag' => 
                    array (
                      'title' => '否	ETag在每个Object生成时创建，用于标识一个Object的内容。
对于PutObject请求创建的Object，ETag值是其内容的MD5值。
对于其他方式创建的Object，ETag值是其内容的UUID。
ETag值可以用于检查Object内容是否发生变化。不建议使用ETag值作为Object内容的MD5校验数据完整性的依据。',
                      'description' => 'ETag在每个Object生成时创建，用于标识一个Object的内容。

- 对于PutObject请求创建的Object，ETag值是其内容的MD5值。

- 对于其他方式创建的Object，ETag值是其内容的UUID。

- ETag值可以用于检查Object内容是否发生变化。不建议使用ETag值作为Object内容的MD5校验数据完整性的依据。',
                      'type' => 'string',
                      'example' => '5B3C1A2E053D763E1B002CC607C5****',
                    ),
                    'Size' => 
                    array (
                      'title' => 'Object的字节数',
                      'description' => 'Object的字节数。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '15',
                    ),
                  ),
                ),
              ),
              'IsTruncated' => 
              array (
                'title' => '指明列举文件是否被截断。
列举完没有截断，返回值为false。
没列举完就有截断，返回值为true。',
                'description' => '指明列举文件是否被截断。

- **false**：列举完没有截断。

- **true**：没列举完就有截断。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'KeyCount' => 
              array (
                'description' => '此次请求返回的Key的个数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'NextMarker' => 
              array (
                'title' => '下一次列举文件的起点。',
                'description' => '下一次列举文件的起点。',
                'type' => 'string',
                'example' => 'ceshi.txt1617853707991',
              ),
              'MaxKeys' => 
              array (
                'title' => '列举文件的最大个数，默认值为100',
                'description' => '列举文件的最大个数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4833C4AC-9396-458C-8F25-1D701334E560',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'Specified parameter %s is not valid',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidBucketName',
            'errorMessage' => 'Specified parameter BucketName is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidPrefix',
            'errorMessage' => 'Specified parameter Prefix is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidStartAfter',
            'errorMessage' => 'Specified parameter StartAfter is not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidMarker',
            'errorMessage' => 'Specified parameter Marker is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidDelimiter',
            'errorMessage' => 'Specified parameter Delimiter is not valid.',
          ),
          6 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDenied',
            'errorMessage' => 'auth is not valid',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoSuchBucket',
            'errorMessage' => 'The specified bucket does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CommonPrefixes\\": [\\n    \\"不涉及\\"\\n  ],\\n  \\"NextContinuationToken\\": \\"CgJiYw--\\",\\n  \\"ContinuationToken\\": \\"test1.txt\\",\\n  \\"Delimiter\\": \\"/\\",\\n  \\"EncodingType\\": \\"不涉及\\",\\n  \\"Prefix\\": \\"b\\",\\n  \\"Marker\\": \\"ceshi.txt1617853707991\\",\\n  \\"BucketName\\": \\"test\\",\\n  \\"Contents\\": [\\n    {\\n      \\"Key\\": \\"ceshi.txt1617853706546\\",\\n      \\"LastModified\\": \\"2021-04-08T03:48:47.488Z\\",\\n      \\"ETag\\": \\"5B3C1A2E053D763E1B002CC607C5****\\",\\n      \\"Size\\": 15\\n    }\\n  ],\\n  \\"IsTruncated\\": true,\\n  \\"KeyCount\\": 10,\\n  \\"NextMarker\\": \\"ceshi.txt1617853707991\\",\\n  \\"MaxKeys\\": 10,\\n  \\"RequestId\\": \\"4833C4AC-9396-458C-8F25-1D701334E560\\"\\n}","errorExample":""},{"type":"xml","example":"<ListObjectsResponse>\\n    <RequestId>4833C4AC-9396-458C-8F25-1D701334E560</RequestId>\\n    <BucketName>test</BucketName>\\n    <Prefix>b</Prefix>\\n    <MaxKeys>10</MaxKeys>\\n    <KeyCount>10</KeyCount>\\n    <Marker>ceshi.txt1617853707991</Marker>\\n    <NextMarker>ceshi.txt1617853707991</NextMarker>\\n    <Contents>\\n        <Key>ceshi.txt1617853706546</Key>\\n        <LastModified>2021-04-08T03:48:47.488Z</LastModified>\\n        <Size>15</Size>\\n    </Contents>\\n    <IsTruncated>true</IsTruncated>\\n</ListObjectsResponse>","errorExample":""}]',
      'title' => '查询Object信息',
    ),
    'DeleteObject' => 
    array (
      'summary' => '调用DeleteObject删除单个⽂件。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ObjectKey',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '文件名称',
            'description' => '文件名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'image5',
          ),
        ),
        1 => 
        array (
          'name' => 'BucketName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Bucket名称',
            'description' => 'Bucket名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'tets',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A5626B44-0189-443E-9816-D951F596CC89',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'AccessDenied',
            'errorMessage' => 'auth is not valid',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoSuchBucket',
            'errorMessage' => 'The specified bucket does not exist',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'The request processing has failed due to some unknown error',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A5626B44-0189-443E-9816-D951F596CC89\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteObjectResponse>\\n    <RequestId>A5626B44-0189-443E-9816-D951F596CC89</RequestId>\\n</DeleteObjectResponse>","errorExample":""}]',
      'title' => '删除Object',
    ),
    'CreateFileSystem' => 
    array (
      'summary' => '调用CreateFileSystem接口创建NAS文件系统。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderDetails',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '订单数组列表，列表里面元素为每个订单的详情。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'OrderType' => 
                array (
                  'description' => '订单类型，取值：BUY（购买）。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'BUY',
                ),
                'ChargeType' => 
                array (
                  'description' => 'NAS的计费方式。取值：  
- PrePaid：包年包月（暂不支持此方式）。  
- PostPaid：按量计费。
',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'PostPaid',
                ),
                'FileSystemName' => 
                array (
                  'description' => '文件系统名称。
长度限制为1-80个字符，可包含字母、数字、“-”“_”字符',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'nasFile',
                ),
                'EnsRegionId' => 
                array (
                  'description' => '节点ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'cn-suzhou-telecom',
                ),
                'StorgeType' => 
                array (
                  'description' => '存储类型，取值：

- capacity：容量型。

- Performance：极速型。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'capacity',
                  'enum' => 
                  array (
                    0 => 'capacity',
                    1 => 'performance',
                  ),
                ),
                'ProtocolType' => 
                array (
                  'description' => '存储协议。取值：nfs/smb。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'nfs',
                  'enum' => 
                  array (
                    0 => 'nfs',
                    1 => 'smb',
                  ),
                ),
                'NetworkId' => 
                array (
                  'description' => 'VPC网络的ID号。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'vpc-xxx',
                ),
                'MountTargetDomain' => 
                array (
                  'description' => '挂载点名称。长度限制为1-80个字符，可包含字母、数字、“-”“_”字符。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'nasMount',
                ),
              ),
              'required' => true,
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'AllocationId' => 
              array (
                'description' => '成功创建出来的文件系统。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '- InstanceId：实例ID。
- EnsRegionId：所在的节点。',
                  'type' => 'string',
                  'example' => '{"InstanceId":"e426409223"， "EnsRegionId":"cn-chengdu-telecom-4"}',
                ),
              ),
              'BizStatusCode' => 
              array (
                'description' => '成功的状态码，共两种类型。取值：  
- PartSuccess：部分成功。
- AllSuccess：全部成功。
',
                'type' => 'string',
                'example' => 'PartSuccess',
              ),
              'UnAllocationId' => 
              array (
                'description' => '未成功的文件系统。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '- InstanceId：系统ID。
- EnsRegionId：所在的节点。',
                  'type' => 'string',
                  'example' => '{"InstanceId"："e4264066666"，"EnsRegionId"："cn-hangzhou-26"}',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Parameter.Invalid.%s',
            'errorMessage' => 'The parameter %s is invalid.Please check your parameters and try it again.',
          ),
          1 => 
          array (
            'errorCode' => 'Stock.NotEnough',
            'errorMessage' => 'The inventory of the specified zone is insufficient.Please contact the product.',
          ),
          2 => 
          array (
            'errorCode' => 'UserStatus.Abnormal',
            'errorMessage' => 'The user status is abnormal.Please contact the product.',
          ),
          3 => 
          array (
            'errorCode' => 'Service.NotOpen',
            'errorMessage' => 'You have not activated the service.Please activate the service first.',
          ),
          4 => 
          array (
            'errorCode' => 'Order.CreateFailed',
            'errorMessage' => 'Failed to create order. Please check your parameters and try it again.',
          ),
          5 => 
          array (
            'errorCode' => 'SaleControl.VerificationFailed',
            'errorMessage' => 'You did not pass the salecontrol verification.Please contact the product.',
          ),
          6 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"AllocationId\\": [\\n    \\"{\\\\\\"InstanceId\\\\\\":\\\\\\"e426409223\\\\\\"， \\\\\\"EnsRegionId\\\\\\":\\\\\\"cn-chengdu-telecom-4\\\\\\"}\\"\\n  ],\\n  \\"BizStatusCode\\": \\"PartSuccess\\",\\n  \\"UnAllocationId\\": [\\n    \\"{\\\\\\"InstanceId\\\\\\"：\\\\\\"e4264066666\\\\\\"，\\\\\\"EnsRegionId\\\\\\"：\\\\\\"cn-hangzhou-26\\\\\\"}\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CreateFileSystemResponse>\\n    <RequestId>EA3758E0-8899-17D3-9526-5F62CF33A586</RequestId>\\n    <BizStatusCode>AllSuccess</BizStatusCode>\\n    <AllocationId>\\n        <InstanceId>e426409223</InstanceId>\\n        <EnsRegionId>cn-chengdu-telecom-4</EnsRegionId>\\n    </AllocationId>\\n    <UnAllocationId>\\n        <InstanceId>fff426409223</InstanceId>\\n        <EnsRegionId>cn-chengdu-telecom-5</EnsRegionId>\\n    </UnAllocationId>\\n</CreateFileSystemResponse>","errorExample":""}]',
      'title' => ' 创建文件系统',
    ),
    'DescribeFileSystems' => 
    array (
      'summary' => '调用DescribeFileSystems查询NAS文件系统信息。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域ID。',
            'description' => '节点ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing-cmcc',
          ),
        ),
        1 => 
        array (
          'name' => 'FileSystemId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '文件系统ID。',
            'description' => 'NAS文件系统ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'c50f8*****',
          ),
        ),
        2 => 
        array (
          'name' => 'FileSystemName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '文件系统名称。
参与挂载点路径，创建后不允许修改。
LB:/fileSystemName/mountTargetName',
            'description' => 'NAS文件系统名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'FileSystem1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '页码，起始值为1。
默认值：1。',
            'description' => '页码，起始值为**1**。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页行数，最大值为100行。
默认值：10。',
            'description' => '每页行数，最大值为**100**行。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'title' => '页码。',
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'title' => '单页行数。',
                'description' => '单页行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'TotalCount' => 
              array (
                'title' => '总数。',
                'description' => '总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'FileSystems' => 
              array (
                'title' => '文件系统信息集合。',
                'description' => '文件系统信息集合。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '',
                  'description' => '',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'FileSystemId' => 
                    array (
                      'title' => '文件系统ID。',
                      'description' => '文件系统ID。',
                      'type' => 'string',
                      'example' => 'c50f8*****',
                    ),
                    'FileSystemName' => 
                    array (
                      'title' => '文件系统名称。',
                      'description' => '文件系统名称。',
                      'type' => 'string',
                      'example' => 'FileSystem1',
                    ),
                    'EnsRegionId' => 
                    array (
                      'title' => '地域ID。',
                      'description' => '地域ID。',
                      'type' => 'string',
                      'example' => 'cn-beijing-cmcc',
                    ),
                    'StorageType' => 
                    array (
                      'title' => '存储类型
capacity：容量型',
                      'description' => '存储类型。取值：

- capacity：容量型
- performance：极速型',
                      'type' => 'string',
                      'example' => 'capacity',
                    ),
                    'ProtocolType' => 
                    array (
                      'title' => '文件系统协议类型。
包括：
nfs：nfs文件协议
smb：smb文件协议',
                      'description' => '文件系统协议类型。取值：

- NFS：NFS文件协议
- SMB：SMB文件协议',
                      'type' => 'string',
                      'example' => 'NFS',
                    ),
                    'Capacity' => 
                    array (
                      'title' => '容量。
单位：GIB。',
                      'description' => '容量。单位：MiB。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '100000',
                    ),
                    'MeteredSize' => 
                    array (
                      'title' => '文件系统的使用量。
非实时使用量，为上一小时最大使用量，单位：Byte。',
                      'description' => '文件系统的使用量。
非实时使用量，为上一小时最大使用量，单位：Byte。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '102400',
                    ),
                    'Status' => 
                    array (
                      'title' => '文件系统状态
pending：当前文件系统正在处理任务中。
running：当前文件系统可用，当状态为running时才可以进行后续操作（例如：创建挂载点等）。
stopped：当前文件系统不可用。
extending：当前文件系统扩容中。
stopping：当前文件系统停机中。
deleting：当前文件系统删除中。',
                      'description' => '文件系统状态

- pending：当前文件系统正在处理任务中。
- running：当前文件系统可用，当状态为running时才可以进行后续操作（例如：创建挂载点等）。
- stopped：当前文件系统不可用。
- extending：当前文件系统扩容中。
- stopping：当前文件系统停机中。
- deleting：当前文件系统删除中。',
                      'type' => 'string',
                      'example' => 'running',
                    ),
                    'PayType' => 
                    array (
                      'title' => '付费类型
PostPaid：后付费',
                      'description' => '付费类型。取值：PostPaid（后付费）。',
                      'type' => 'string',
                      'example' => 'PostPaid',
                    ),
                    'CreationTime' => 
                    array (
                      'title' => '文件系统创建时间。',
                      'description' => '文件系统创建时间。',
                      'type' => 'string',
                      'example' => '2022-08-31 12:00:00',
                    ),
                    'MountTargets' => 
                    array (
                      'title' => '挂载点信息集合',
                      'description' => '挂载点信息集合',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'MountTargetDomain' => 
                          array (
                            'title' => '挂载点路径。',
                            'description' => '挂载点路径。',
                            'type' => 'string',
                            'example' => '*.*.*.*:/${FileSystemName}/{MountTargetName}',
                          ),
                          'MountTargetName' => 
                          array (
                            'title' => '挂载点名称。',
                            'description' => '挂载点名称。',
                            'type' => 'string',
                            'example' => 'target1',
                          ),
                          'NetWorkId' => 
                          array (
                            'title' => '网络ID。',
                            'description' => '网络ID。',
                            'type' => 'string',
                            'example' => 'n-****',
                          ),
                          'Status' => 
                          array (
                            'title' => '挂载点状态。
包括：
active：可用
inactive：不可用
pending：任务处理中
deleting：删除中',
                            'description' => '挂载点状态。取值：

- active：可用
- inactive：不可用
- pending：任务处理中
- deleting：删除中',
                            'type' => 'string',
                            'example' => 'active',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '762DD527-358B-1E48-8005-CCE3ED4EB9E0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'Failed to call API.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 2,\\n  \\"TotalCount\\": 1,\\n  \\"FileSystems\\": [\\n    {\\n      \\"FileSystemId\\": \\"c50f8*****\\",\\n      \\"FileSystemName\\": \\"FileSystem1\\",\\n      \\"EnsRegionId\\": \\"cn-beijing-cmcc\\",\\n      \\"StorageType\\": \\"capacity\\",\\n      \\"ProtocolType\\": \\"NFS\\",\\n      \\"Capacity\\": 100000,\\n      \\"MeteredSize\\": 102400,\\n      \\"Status\\": \\"running\\",\\n      \\"PayType\\": \\"PostPaid\\",\\n      \\"CreationTime\\": \\"2022-08-31 12:00:00\\",\\n      \\"MountTargets\\": [\\n        {\\n          \\"MountTargetDomain\\": \\"*.*.*.*:/${FileSystemName}/{MountTargetName}\\",\\n          \\"MountTargetName\\": \\"target1\\",\\n          \\"NetWorkId\\": \\"n-****\\",\\n          \\"Status\\": \\"active\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\"RequestId\\": \\"762DD527-358B-1E48-8005-CCE3ED4EB9E0\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeFileSystemsResponse>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>2</PageSize>\\n    <TotalCount>1</TotalCount>\\n    <FileSystems>\\n        <FileSystemId>c50f8*****</FileSystemId>\\n        <FileSystemName>FileSystem1</FileSystemName>\\n        <EnsRegionId>cn-beijing-cmcc</EnsRegionId>\\n        <StorageType>capacity</StorageType>\\n        <ProtocolType>NFS</ProtocolType>\\n        <Capacity>100000</Capacity>\\n        <MeteredSize>102400</MeteredSize>\\n        <Status>running</Status>\\n        <PayType>PostPaid</PayType>\\n        <CreationTime>2022-08-31 12:00:00</CreationTime>\\n        <MountTargets>\\n            <MountTargetDomain>*.*.*.*:/${FileSystemName}/{MountTargetName}</MountTargetDomain>\\n            <MountTargetName>target1</MountTargetName>\\n            <NetWorkId>n-****</NetWorkId>\\n            <Status>active</Status>\\n        </MountTargets>\\n    </FileSystems>\\n    <RequestId>762DD527-358B-1E48-8005-CCE3ED4EB9E0</RequestId>\\n</DescribeFileSystemsResponse>","errorExample":""}]',
      'title' => '查询文件系统信息',
    ),
    'ModifyFileSystem' => 
    array (
      'summary' => '调用ModifyFileSystem修改NAS文件系统的描述信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'FileSystemId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '文件系统ID。',
            'description' => '文件系统ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'c50f8*****',
          ),
        ),
        1 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-beijing-cmcc',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '文件系统描述符。',
            'description' => '文件系统描述信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'fileSystemTest',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyFileSystemResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</ModifyFileSystemResponse>","errorExample":""}]',
      'title' => '修改文件系统描述信息',
    ),
    'DeleteFileSystem' => 
    array (
      'summary' => '调用DeleteFileSystem删除NAS服务。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-chengdu-telecom-4',
          ),
        ),
        1 => 
        array (
          'name' => 'FileSystemId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的文件系统ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'e42640****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Instance.NotFound',
            'errorMessage' => 'The instance was not found.Please confirm whether the instance exists.',
          ),
          1 => 
          array (
            'errorCode' => 'Parameter.Invalid',
            'errorMessage' => 'The parameter is invalid.Please check your parameters and try it again.',
          ),
          2 => 
          array (
            'errorCode' => 'Nas.Mount.Tatget.Entity.Not.Null',
            'errorMessage' => 'There are still mount points under the file system.Please delete the mount point first',
          ),
          3 => 
          array (
            'errorCode' => 'Interface.Call.Error',
            'errorMessage' => 'The interface call error',
          ),
          4 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteFileSystemResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</DeleteFileSystemResponse>","errorExample":""}]',
      'title' => '删除NAS文件系统',
    ),
    'CreateMountTarget' => 
    array (
      'summary' => '调用CreateMountTarget接口创建挂载点。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'FileSystemId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '文件系统ID。',
            'description' => '文件系统ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'c50f8*****',
          ),
        ),
        1 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域ID。',
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-beijing-cmcc',
          ),
        ),
        2 => 
        array (
          'name' => 'NetWorkId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '网络ID。',
            'description' => '网络ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'n-*****',
          ),
        ),
        3 => 
        array (
          'name' => 'MountTargetName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '挂载点名称。',
            'description' => '挂载点名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'TestMountPath',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '70EACC9C-D07A-4A34-ADA4-A3DC0DE3C83E',
              ),
              'Status' => 
              array (
                'description' => '挂载点状态。包括：
- active：可用
- inactive：不可用
- pending：任务处理中
- deleting：删除中',
                'type' => 'string',
                'example' => 'pending',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.FileSystem.NotExisted',
            'errorMessage' => 'The specified file system does not exist.	',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"70EACC9C-D07A-4A34-ADA4-A3DC0DE3C83E\\",\\n  \\"Status\\": \\"pending\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateMountTargetResponse>\\n    <RequestId>70EACC9C-D07A-4A34-ADA4-A3DC0DE3C83E</RequestId>\\n    <Status>pending</Status>\\n</CreateMountTargetResponse>","errorExample":""}]',
      'title' => '创建挂载点',
      'description' => '## 注意事项
在使用CreateMountTarget接口创建挂载点时，部分资源的生成是异步完成的。因此在执行CreateMountTarget接口成功后，请先调用DescribeMountTargets接口查询挂载点状态，当挂载点状态为Active后再执行挂载文件系统操作，否则可能会挂载失败。',
    ),
    'DescribeMountTargets' => 
    array (
      'summary' => '调用DescribeMountTargets查询挂载点信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域ID。',
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-beijing-cmcc',
          ),
        ),
        1 => 
        array (
          'name' => 'FileSystemId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '文件系统ID。',
            'description' => '文件系统ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'c50f8*****',
          ),
        ),
        2 => 
        array (
          'name' => 'MountTargetName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '挂载点名称。',
            'description' => '挂载点名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'TestMountPath',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '页码，起始值为1。
默认值：1。',
            'description' => '页码，起始值为1。默认值：1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '每页行数，最大值为100行。
默认值：10。',
            'description' => '每页行数，最大值为100行。默认值：10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'title' => '单页行数。',
                'description' => '单页行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'TotalCount' => 
              array (
                'title' => '总数。',
                'description' => '总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MountTargets' => 
              array (
                'title' => '挂载点信息集合。',
                'description' => '挂载点信息集合。',
                'type' => 'array',
                'items' => 
                array (
                  'title' => '',
                  'description' => '',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MountTargetDomain' => 
                    array (
                      'title' => '挂载点路径。
LB:/fileSystemName/mountTargetName',
                      'description' => '挂载点路径。',
                      'type' => 'string',
                      'example' => 'LB:/fileSystemName/mountTargetName',
                    ),
                    'MountTargetName' => 
                    array (
                      'title' => '挂载点名称',
                      'description' => '挂载点名称',
                      'type' => 'string',
                      'example' => 'TestMountPath',
                    ),
                    'NetWorkId' => 
                    array (
                      'title' => '网络ID。
n-***',
                      'description' => '网络ID。',
                      'type' => 'string',
                      'example' => 'n-***',
                    ),
                    'Status' => 
                    array (
                      'title' => '状态。
包括：
active：可用
inactive：不可用
pending：任务排队中
deleting：删除中',
                      'description' => '挂载点状态。包括：

- active：可用
- inactive：不可用
- pending：任务排队中
- deleting：删除中',
                      'type' => 'string',
                      'example' => 'active',
                    ),
                    'EnsRegionId' => 
                    array (
                      'title' => '地域ID。',
                      'description' => '地域ID。',
                      'type' => 'string',
                      'example' => 'cn-beijing-cmcc',
                    ),
                    'FileSystemId' => 
                    array (
                      'title' => '文件系统ID。',
                      'description' => '文件系统ID。',
                      'type' => 'string',
                      'example' => 'c50f8*****',
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'title' => '请求ID',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '762DD527-358B-1E48-8005-CCE3ED4EB9E0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 2,\\n  \\"TotalCount\\": 1,\\n  \\"MountTargets\\": [\\n    {\\n      \\"MountTargetDomain\\": \\"LB:/fileSystemName/mountTargetName\\",\\n      \\"MountTargetName\\": \\"TestMountPath\\",\\n      \\"NetWorkId\\": \\"n-***\\",\\n      \\"Status\\": \\"active\\",\\n      \\"EnsRegionId\\": \\"cn-beijing-cmcc\\",\\n      \\"FileSystemId\\": \\"c50f8*****\\"\\n    }\\n  ],\\n  \\"RequestId\\": \\"762DD527-358B-1E48-8005-CCE3ED4EB9E0\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeMountTargetsResponse>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>2</PageSize>\\n    <TotalCount>1</TotalCount>\\n    <MountTargets>\\n        <MountTargetDomain>LB:/fileSystemName/mountTargetName</MountTargetDomain>\\n        <MountTargetName>TestMountPath</MountTargetName>\\n        <NetWorkId>n-***</NetWorkId>\\n        <Status>active</Status>\\n        <EnsRegionId>cn-beijing-cmcc</EnsRegionId>\\n        <FileSystemId>c50f8*****</FileSystemId>\\n    </MountTargets>\\n    <RequestId>762DD527-358B-1E48-8005-CCE3ED4EB9E0</RequestId>\\n</DescribeMountTargetsResponse>","errorExample":""}]',
      'title' => '查询挂载点信息',
    ),
    'DeleteMountTarget' => 
    array (
      'summary' => '调用DeleteMountTarget接口删除已存在挂载点。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'FileSystemId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '文件系统ID。',
            'description' => '文件系统ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'c50f8*****',
          ),
        ),
        1 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地域ID。',
            'description' => '节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-beijing-cmcc',
          ),
        ),
        2 => 
        array (
          'name' => 'MountTargetName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '挂载点名称。',
            'description' => '挂载点名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'TestMountPath',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidMountTarget.NotExisted',
            'errorMessage' => 'The specified mount target does not exist.	',
          ),
          3 => 
          array (
            'errorCode' => 'EdgeNasError',
            'errorMessage' => 'EdgeNasError',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteMountTargetResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</DeleteMountTargetResponse>","errorExample":""}]',
      'title' => '删除挂载点',
      'description' => '删除挂载点后，无法恢复，请谨慎操作。',
    ),
    'ResetAICInstance' => 
    array (
      'summary' => '调用ResetAICInstance重置AIC实例。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cas-instance****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'AIC实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'aic-instance****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Parameter.Invalid',
            'errorMessage' => 'The parameter is invalid.Please check your parameters and try it again.',
          ),
          1 => 
          array (
            'errorCode' => 'Interface.Call.Error',
            'errorMessage' => 'The interface call error',
          ),
          2 => 
          array (
            'errorCode' => 'Interface.Call.Failed',
            'errorMessage' => '%s.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<ResetAICInstanceResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</ResetAICInstanceResponse>","errorExample":""}]',
      'title' => '重置AIC实例',
    ),
    'UpgradeAICInstanceImage' => 
    array (
      'summary' => '调用UpgradeAICInstanceImage升级AIC实例镜像。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServerIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '服务器实例ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '服务器实例ID列表。',
              'type' => 'string',
              'required' => true,
              'example' => 'cas-instance****',
            ),
            'required' => true,
            'maxItems' => 20,
          ),
        ),
        1 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'AIC镜像ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'm-****',
          ),
        ),
        2 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级超时时间，单位：秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1800',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Interface.Call.Error',
            'errorMessage' => 'The interface call error',
          ),
          1 => 
          array (
            'errorCode' => 'Parameter.Invalid',
            'errorMessage' => 'The parameter is invalid.Please check your parameters and try it again.',
          ),
          2 => 
          array (
            'errorCode' => 'Interface.Call.Failed',
            'errorMessage' => '%s.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<UpgradeAICInstanceImageResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</UpgradeAICInstanceImageResponse>","errorExample":""}]',
      'title' => '升级AIC实例镜像',
    ),
    'RebootAICInstance' => 
    array (
      'summary' => '调用RebootAICInstance重启AIC实例。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cas-instance****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'AIC实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'aic-instance****',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'AIC实例ID组。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'AIC实例ID组。',
              'type' => 'string',
              'required' => false,
              'example' => 'aic-instance****',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Interface.Call.Error',
            'errorMessage' => 'The interface call error',
          ),
          1 => 
          array (
            'errorCode' => 'Parameter.Invalid',
            'errorMessage' => 'The parameter is invalid.Please check your parameters and try it again.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<RebootAICInstanceResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</RebootAICInstanceResponse>","errorExample":""}]',
      'title' => '重启AIC实例',
    ),
    'DescribeARMServerInstances' => 
    array (
      'summary' => '调用DescribeARMServerInstances获取ARM服务器和AIC实例信息。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServerIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '服务器实例ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '服务器实例ID列表。',
              'type' => 'string',
              'required' => false,
              'example' => 'cas-instance****',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        1 => 
        array (
          'name' => 'EnsRegionIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'ENS节点ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'ENS节点ID列表。',
              'type' => 'string',
              'required' => false,
              'example' => 'cn-chengdu-telecom-4',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询列表的页码。起始值为**1**。

默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值为**100**行。

默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'example' => '10',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'MinDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询起始时间，格式"2006-01-02"；默认无时间限制。',
            'type' => 'string',
            'required' => false,
            'example' => '2006-01-02',
          ),
        ),
        5 => 
        array (
          'name' => 'MaxDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询终止时间，格式"2006-01-02"；默认无时间限制。',
            'type' => 'string',
            'required' => false,
            'example' => '2006-01-03',
          ),
        ),
        6 => 
        array (
          'name' => 'States',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '操作状态列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '服务器操作状态。

- **success**：成功。

- **failed**：失败。

- **creating**：创建中。

- **releasing**：释放中。

- **rebooting**：重启中。

- **upgrading**：升级中。',
              'type' => 'string',
              'required' => false,
              'example' => 'success',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        7 => 
        array (
          'name' => 'AICSpecs',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '容器规格列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '容器规格。',
              'type' => 'string',
              'required' => false,
              'example' => 'aic.cf53r.c2.np',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        8 => 
        array (
          'name' => 'ServerSpecs',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '服务器规格列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '服务器规格。',
              'type' => 'string',
              'required' => false,
              'example' => 'cas.cf53r',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        9 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务器名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'Server-Name',
          ),
        ),
        10 => 
        array (
          'name' => 'Namespace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
        11 => 
        array (
          'name' => 'OrderByParams',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询结果排序方式，可设置按照ServerIdSort（服务器ID）、ServerNameSort（服务器名称）、ExpireTimeSort（到期时间）、CreationTimeSort（创建时间）、EnsRegionIdSort（节点ID）中的一个或者多个结果排序。

取值含义：asc：升序， desc：降序。',
            'type' => 'string',
            'required' => false,
            'example' => '{"ServerIdSort":"desc","ServerNameSort":"desc","ExpireTimeSort":"asc"}',
          ),
        ),
        12 => 
        array (
          'name' => 'DescribeAICInstances',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询结果是否包含容器信息，取值：

- **true**：包含。

- **false**：不包含。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
              'Servers' => 
              array (
                'description' => '由服务器和AIC实例信息组成的数组。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreationTime' => 
                    array (
                      'description' => '实例创建时间。',
                      'type' => 'string',
                      'example' => '2022-05-07 11:59:09',
                    ),
                    'ExpiredTime' => 
                    array (
                      'description' => '实例过期时间。',
                      'type' => 'string',
                      'example' => '2027-05-07 11:59:09',
                    ),
                    'AICInstances' => 
                    array (
                      'description' => 'AIC实例信息组成的数组。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Frequency' => 
                          array (
                            'description' => 'AIC实例刷新率，单位Hz。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '120',
                          ),
                          'ImageId' => 
                          array (
                            'description' => 'AIC镜像ID。',
                            'type' => 'string',
                            'example' => 'm-****',
                          ),
                          'InstanceId' => 
                          array (
                            'description' => 'AIC实例ID。',
                            'type' => 'string',
                            'example' => 'aic-instance****',
                          ),
                          'NetworkAttributes' => 
                          array (
                            'description' => '网络属性。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'IpAddress' => 
                              array (
                                'description' => 'AIC实例IP地址。',
                                'type' => 'string',
                                'example' => '192.168.1.1',
                              ),
                              'NetworkId' => 
                              array (
                                'description' => 'AIC实例网络ID。',
                                'type' => 'string',
                                'example' => 'n-*****',
                              ),
                              'VSwitchId' => 
                              array (
                                'description' => 'AIC实例交换机ID。',
                                'type' => 'string',
                                'example' => 'vsw-****',
                              ),
                            ),
                          ),
                          'SdgDeployInfo' => 
                          array (
                            'description' => '实例上部署的共享数据集（SDG）信息。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'SDGId' => 
                              array (
                                'description' => 'SDG的ID。',
                                'type' => 'string',
                                'example' => 'sdg-xxxxx',
                              ),
                              'Status' => 
                              array (
                                'description' => 'SDG的部署状态，取值：

- **sdg_deploying**：部署中。

- **failed**：部署失败。

- **success**：部署成功。',
                                'type' => 'string',
                                'example' => 'success',
                              ),
                            ),
                          ),
                          'Resolution' => 
                          array (
                            'description' => 'AIC实例分辨率。',
                            'type' => 'string',
                            'example' => '1920*1080',
                          ),
                          'Spec' => 
                          array (
                            'description' => 'AIC实例规格。',
                            'type' => 'string',
                            'example' => 'aic.cf53r.c2.np',
                          ),
                          'State' => 
                          array (
                            'description' => 'AIC实例操作状态。
- **success**：成功。
- **failed**：失败。
- **creating**：创建中。
- **releasing**：释放中。
- **rebooting**：重启中。
- **reseting**：重置中。',
                            'type' => 'string',
                            'example' => 'success',
                          ),
                          'Status' => 
                          array (
                            'description' => 'AIC实例运行状态。
- **running**：运行中。
- **pending**：等待中。
- **terminating**：终止中。',
                            'type' => 'string',
                            'example' => 'running',
                          ),
                          'Name' => 
                          array (
                            'description' => '容器名称。',
                            'type' => 'string',
                            'example' => 'AIC-Name',
                          ),
                          'LatestAction' => 
                          array (
                            'description' => '最近一次操作。',
                            'type' => 'string',
                            'example' => 'ServerCreate',
                          ),
                        ),
                      ),
                    ),
                    'EnsRegionId' => 
                    array (
                      'description' => 'ENS节点ID。',
                      'type' => 'string',
                      'example' => 'cn-hanghzou-27',
                    ),
                    'ServerId' => 
                    array (
                      'description' => '服务器ID。',
                      'type' => 'string',
                      'example' => 'cas-******',
                    ),
                    'SpecName' => 
                    array (
                      'description' => '服务器规格。',
                      'type' => 'string',
                      'example' => 'cas.cf53r',
                    ),
                    'State' => 
                    array (
                      'description' => '服务器操作状态。
- **success**：成功。
- **failed**：失败。
- **creating**：创建中。
- **releasing**：释放中。
- **rebooting**：重启中。
- **upgrading**：升级中。',
                      'type' => 'string',
                      'example' => 'success',
                    ),
                    'Status' => 
                    array (
                      'description' => '服务器运行状态。
- **running**：运行中。
- **stopping**：停止中。
- **down**：关机。
- **starting**：启动中。',
                      'type' => 'string',
                      'example' => 'running',
                    ),
                    'Namespace' => 
                    array (
                      'description' => '板卡所属集群Namespace名称。',
                      'type' => 'string',
                      'example' => 'default',
                    ),
                    'Name' => 
                    array (
                      'description' => '服务器名称。',
                      'type' => 'string',
                      'example' => 'Server-Name',
                    ),
                    'PayType' => 
                    array (
                      'description' => '付费方式。',
                      'type' => 'string',
                      'example' => 'prepay',
                    ),
                    'LatestAction' => 
                    array (
                      'description' => '最近一次操作。',
                      'type' => 'string',
                      'example' => 'ServerCreate',
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '实例列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '输入时设置的每页行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '查询到的实例总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Parameter.Invalid',
            'errorMessage' => 'The parameter is invalid.Please check your parameters and try it again.',
          ),
          1 => 
          array (
            'errorCode' => 'Interface.Call.Error',
            'errorMessage' => 'The interface call error',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\",\\n  \\"Servers\\": [\\n    {\\n      \\"CreationTime\\": \\"2022-05-07 11:59:09\\",\\n      \\"ExpiredTime\\": \\"2027-05-07 11:59:09\\",\\n      \\"AICInstances\\": [\\n        {\\n          \\"Frequency\\": 120,\\n          \\"ImageId\\": \\"m-****\\",\\n          \\"InstanceId\\": \\"aic-instance****\\",\\n          \\"NetworkAttributes\\": {\\n            \\"IpAddress\\": \\"192.168.1.1\\",\\n            \\"NetworkId\\": \\"n-*****\\",\\n            \\"VSwitchId\\": \\"vsw-****\\"\\n          },\\n          \\"SdgDeployInfo\\": {\\n            \\"SDGId\\": \\"sdg-xxxxx\\",\\n            \\"Status\\": \\"success\\"\\n          },\\n          \\"Resolution\\": \\"1920*1080\\",\\n          \\"Spec\\": \\"aic.cf53r.c2.np\\",\\n          \\"State\\": \\"success\\",\\n          \\"Status\\": \\"running\\",\\n          \\"Name\\": \\"AIC-Name\\",\\n          \\"LatestAction\\": \\"ServerCreate\\"\\n        }\\n      ],\\n      \\"EnsRegionId\\": \\"cn-hanghzou-27\\",\\n      \\"ServerId\\": \\"cas-******\\",\\n      \\"SpecName\\": \\"cas.cf53r\\",\\n      \\"State\\": \\"success\\",\\n      \\"Status\\": \\"running\\",\\n      \\"Namespace\\": \\"default\\",\\n      \\"Name\\": \\"Server-Name\\",\\n      \\"PayType\\": \\"prepay\\",\\n      \\"LatestAction\\": \\"ServerCreate\\"\\n    }\\n  ],\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 2\\n}","errorExample":""},{"type":"xml","example":"<DescribeARMServerInstancesResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n    <Servers>\\n        <CreationTime>2022-05-07 11:59:09</CreationTime>\\n        <ExpiredTime>2027-05-07 11:59:09</ExpiredTime>\\n        <AICInstances>\\n            <Frequency>120</Frequency>\\n            <ImageId>m-****</ImageId>\\n            <InstanceId>aic-instance****</InstanceId>\\n            <NetworkAttributes>\\n                <IpAddress>192.168.1.1</IpAddress>\\n                <NetworkId>n-*****</NetworkId>\\n                <VSwitchId>vsw-****</VSwitchId>\\n            </NetworkAttributes>\\n            <SdgDeployInfo>\\n                <SDGId>sdg-xxxxx</SDGId>\\n                <Status>success</Status>\\n            </SdgDeployInfo>\\n            <Resolution>1920*1080</Resolution>\\n            <Spec>aic.cf53r.c2.np</Spec>\\n            <State>success</State>\\n            <Status>running</Status>\\n            <Name>AIC-Name</Name>\\n            <LatestAction>ServerCreate</LatestAction>\\n        </AICInstances>\\n        <EnsRegionId>cn-hanghzou-27</EnsRegionId>\\n        <ServerId>cas-******</ServerId>\\n        <SpecName>cas.cf53r</SpecName>\\n        <State>success</State>\\n        <Status>running</Status>\\n        <Namespace>default</Namespace>\\n        <Name>Server-Name</Name>\\n        <PayType>prepay</PayType>\\n        <LatestAction>ServerCreate</LatestAction>\\n    </Servers>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <TotalCount>2</TotalCount>\\n</DescribeARMServerInstancesResponse>","errorExample":""}]',
      'title' => '获取ARM服务器和AIC实例信息',
    ),
    'RebootARMServerInstance' => 
    array (
      'summary' => '调用RebootARMServerInstance重启AIC服务器。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'yourInstance ID',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Parameter.Invalid',
            'errorMessage' => 'The parameter is invalid.Please check your parameters and try it again.',
          ),
          1 => 
          array (
            'errorCode' => 'Interface.Call.Error',
            'errorMessage' => 'The interface call error',
          ),
          2 => 
          array (
            'errorCode' => 'Interface.Call.Failed',
            'errorMessage' => '%s.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        406 => 
        array (
          0 => 
          array (
            'errorCode' => 'Throttling.Api',
            'errorMessage' => 'Request was denied due to region flow control.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<RebootARMServerInstanceResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</RebootARMServerInstanceResponse>","errorExample":""}]',
      'title' => '重启AIC服务器',
    ),
    'ReleaseARMServerInstance' => 
    array (
      'summary' => '调用ReleaseARMServerInstance释放一台云应用服务器。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'AIC实例ID.',
            'description' => '服务器实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'yourInstance ID',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DCAE84DF-4187-5CC5-B819-37BCD2B83BD3',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'No instance ID found. Enter a valid instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DCAE84DF-4187-5CC5-B819-37BCD2B83BD3\\"\\n}","errorExample":""},{"type":"xml","example":"<ReleaseARMServerInstanceResponse>\\n    <RequestId>DCAE84DF-4187-5CC5-B819-37BCD2B83BD3</RequestId>\\n</ReleaseARMServerInstanceResponse>","errorExample":""}]',
      'title' => '释放云应用服务器',
    ),
    'CreateARMServerInstances' => 
    array (
      'summary' => '调用CreateARMServerInstances创建ARM板卡服务器。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PayType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '付费类型。PrePaid（目前只支持此种）：包年包月',
            'description' => '付费类型。取值：**PrePaid**（预付费）。

> 目前仅支持预付费。',
            'type' => 'string',
            'required' => true,
            'example' => 'PrePaid',
            'enum' => 
            array (
              0 => 'PrePaid',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'ENS节点ID。',
            'description' => 'ENS节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-guiyang-12',
          ),
        ),
        2 => 
        array (
          'name' => 'ServerType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '服务器规格。',
            'description' => 'ARM板卡规格。取值：

- cas.cf53r
- cas.cf52r
- cas.cf52m1r
- cas.tg52g2
- ens.afq-c2m3i.medium',
            'type' => 'string',
            'required' => true,
            'example' => ' cas.cf53r',
            'enum' => 
            array (
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'AIC容器实例规格。',
            'description' => 'AIC容器实例规格。取值：

- aic.cf52r.c1.np

- aic.cf52r.c2.np

- aic.cf53r.c2.np

- aic.cf52r.c4.np

- aic.cf53r.c3.np

- aic.cf52r.c3.np

- aic.cf53r.c1.np

- aic.cf53r.c5.np

- aic.cf53r.c6

- aic.cf53r.c4.np

- aic.cf53r.c6.np

- aic.cf53r.c7.np

- aic.cf52m1r.c5.np

- aic.cf53r.c8.np

- aic.cf53r.c7

- aic.cf52m1r.c2.np

- aic.cf52m1r.c1.np

- aic.cf52m1r.c3.np

- aic.cf52m1r.c4.np

- aic.cf52m1r.c6

- ens.a6c2',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'aic.cf53r.c6.np',
            'enum' => 
            array (
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '镜像ID。',
            'description' => '镜像ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'yourImage ID',
          ),
        ),
        5 => 
        array (
          'name' => 'Resolution',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分辨率。目前取值
1920*1080
1280*720
1080*1920
720*1280',
            'description' => '分辨率。取值：

- 1920*864

- 1080*1920

- 1920*1080

- 720*1280

- 2400*1080

- 1080*2400

- 1280*720

- 864*1920',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
            ),
            'example' => '720*1280',
            'enum' => 
            array (
              0 => '1920*1080',
              1 => '1080*1920',
              2 => '1280*720',
              3 => '720*1280',
              4 => '2400*1080',
              5 => '1920*864',
              6 => '1080*2400',
              7 => '864*1920',
            ),
          ),
        ),
        6 => 
        array (
          'name' => 'Frequency',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '刷新频率，单位：Hz。取值：30，60。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '30',
            'default' => '30',
            'enum' => 
            array (
              0 => '30',
              1 => '60',
              2 => '120',
            ),
          ),
        ),
        7 => 
        array (
          'name' => 'KeyPairName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'keypair名称',
            'description' => '密钥对名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'TestKeyPairName',
          ),
        ),
        8 => 
        array (
          'name' => 'Amount',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '数量，最大支持10',
            'description' => '创建的实例数量，最小为**1**，最大为**100**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '10',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '购买周期。',
            'description' => '购买资源的时长。

- 如果不指定PeriodUnit，则默认按月购买。目前只支持按Days和Month。
- 如果PeriodUnit为Day时，Period仅可以3。
- 如果PeriodUnit为Monthc时，则Period可以为1~9,12。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        10 => 
        array (
          'name' => 'PeriodUnit',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Month（默认）：按月计费的价格单位。',
            'description' => '购买资源的时长单位。
- 如果不指定PeriodUnit，则默认按月购买。目前只支持按Days和Month。
- 如果PeriodUnit为Day时，Period仅可以3。
- 如果PeriodUnit为Monthc时，则Period可以为1~9,12。',
            'type' => 'string',
            'required' => true,
            'example' => 'Month',
          ),
        ),
        11 => 
        array (
          'name' => 'AutoRenew',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否自动续费，默认为false。',
            'description' => '是否自动续费。

- true
- false（默认）',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        12 => 
        array (
          'name' => 'NameSpace',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '命名空间。',
            'type' => 'string',
            'required' => false,
            'example' => 'pre',
            'default' => 'default',
          ),
        ),
        13 => 
        array (
          'name' => 'ServerName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'AIC-Server',
            'maxLength' => 255,
            'minLength' => 0,
          ),
        ),
        14 => 
        array (
          'name' => 'AutoUseCoupon',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否使用代金券。
取值：true；false
默认值：true',
            'description' => '是否使用代金券。取值：

- true：使用

- false（默认值）：不使用',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
              'OrderId' => 
              array (
                'description' => '订单号。',
                'type' => 'string',
                'example' => '212630314490***',
              ),
              'InstanceIds' => 
              array (
                'description' => '实例ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '实例ID列表。',
                  'type' => 'string',
                  'example' => 'cas-instance****',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          1 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'Failed to call API.',
          ),
          2 => 
          array (
            'errorCode' => 'EnsNodeStockIsNotEnough',
            'errorMessage' => 'Insufficient inventory of purchased resources.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameterEnsRegionId',
            'errorMessage' => 'The entered node information is invalid. Please enter the correct node information.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidImageIdNotFound',
            'errorMessage' => 'The image information entered is invalid. Please re-enter valid image information.',
          ),
          5 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\",\\n  \\"OrderId\\": \\"212630314490***\\",\\n  \\"InstanceIds\\": [\\n    \\"cas-instance****\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CreateARMServerInstancesResponse>\\n    <RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n    <OrderId>212630314490***</OrderId>\\n    <InstanceIds>cas-instance****</InstanceIds>\\n</CreateARMServerInstancesResponse>","errorExample":""}]',
      'title' => '创建ARM板卡服务器',
    ),
    'RenewARMServerInstance' => 
    array (
      'summary' => '调用RenewARMServerInstance续费一台包年包月AIC实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待续费的服务器实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'yourInstance ID',
          ),
        ),
        1 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '续费周期，默认按月续费。取值：1，2，3，4，5，6，7，8，9，12。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PeriodUnit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '续费时长的时间单位。取值：
- Month（默认）
- Year',
            'type' => 'string',
            'required' => true,
            'example' => 'Month',
            'enum' => 
            array (
              0 => 'Year',
              1 => 'Month',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'AutoRenew',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动续费。取值：

- **true**：自动续费
- **false**：不自动续费（默认）',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '370E61E0-6E6E-50FE-9259-EE706C55ABF1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"370E61E0-6E6E-50FE-9259-EE706C55ABF1\\"\\n}","errorExample":""},{"type":"xml","example":"<RenewARMServerInstanceResponse>\\n    <RequestId>370E61E0-6E6E-50FE-9259-EE706C55ABF1</RequestId>\\n</RenewARMServerInstanceResponse>","errorExample":""}]',
      'title' => '续费包年包月AIC实例',
    ),
    'DescribeAICImages' => 
    array (
      'summary' => '调用DescribeAICImages获取镜像信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'AIC产品镜像ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'm-ad0ddaddc2d54adeaa09b7c0f1e****',
          ),
        ),
        1 => 
        array (
          'name' => 'ImageUrl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'AIC镜像仓库URL地址。',
            'type' => 'string',
            'required' => false,
            'example' => '****.alibaba-inc.com/aic/socimage:test',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页，起始值为**1**。
默认值：**1**。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值为**100**行。
默认值：**10**。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像状态，取值：

- **verifying**：待认证

- **disable**：不可用。

- **available**：可用',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'verifying' => 'verifying',
              'disable' => 'disable',
              'available' => 'available',
            ),
            'example' => 'available',
          ),
        ),
        5 => 
        array (
          'name' => 'MinDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询起始时间，格式"2006-01-02"；默认无时间限制。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-01-02',
          ),
        ),
        6 => 
        array (
          'name' => 'MaxDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询终止时间，格式"2006-01-02"；默认无时间限制。

',
            'type' => 'string',
            'required' => false,
            'example' => '2022-02-02',
          ),
        ),
        7 => 
        array (
          'name' => 'ImageType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像类型，取值：

- **public**：公共镜像。

- **private**：自定义镜像。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'private' => 'private',
              'public' => 'public',
            ),
            'example' => 'public',
          ),
        ),
        8 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => '控制台测试操作',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '72DC6C0A-D9A8-5345-A2BE-FE354CC728A0',
              ),
              'Images' => 
              array (
                'description' => '镜像信息数组。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '镜像信息结构体',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ImageUrl' => 
                    array (
                      'description' => 'AIC镜像仓库URL地址。',
                      'type' => 'string',
                      'example' => '****.alibaba-inc.com/aic/socimage:test',
                    ),
                    'ImageId' => 
                    array (
                      'description' => 'AIC产品镜像ID。',
                      'type' => 'string',
                      'example' => 'm-ad0ddaddc2d54adeaa09b7c0f1e****',
                    ),
                    'User' => 
                    array (
                      'description' => '镜像的仓库用户名称。',
                      'type' => 'string',
                      'example' => 'user',
                    ),
                    'Status' => 
                    array (
                      'description' => '镜像状态。取值：**available**（可用的）。',
                      'type' => 'string',
                      'example' => 'available',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => '镜像创建时间。',
                      'type' => 'string',
                      'example' => '2022-01-22 10:54:34',
                    ),
                    'Description' => 
                    array (
                      'description' => '镜像描述信息。',
                      'type' => 'string',
                      'example' => '控制台测试操作',
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码，默认值为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数。

默认值：10。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '列表数据总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"72DC6C0A-D9A8-5345-A2BE-FE354CC728A0\\",\\n  \\"Images\\": [\\n    {\\n      \\"ImageUrl\\": \\"****.alibaba-inc.com/aic/socimage:test\\",\\n      \\"ImageId\\": \\"m-ad0ddaddc2d54adeaa09b7c0f1e****\\",\\n      \\"User\\": \\"user\\",\\n      \\"Status\\": \\"available\\",\\n      \\"CreationTime\\": \\"2022-01-22 10:54:34\\",\\n      \\"Description\\": \\"控制台测试操作\\"\\n    }\\n  ],\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 1\\n}","errorExample":""},{"type":"xml","example":"<DescribeAICImagesResponse>\\n    <RequestId>72DC6C0A-D9A8-5345-A2BE-FE354CC728A0</RequestId>\\n    <Images>\\n        <ImageUrl>****.alibaba-inc.com/aic/socimage:test</ImageUrl>\\n        <ImageId>m-ad0ddaddc2d54adeaa09b7c0f1e****</ImageId>\\n        <User>user</User>\\n        <Status>available</Status>\\n        <CreationTime>2022-01-22 10:54:34</CreationTime>\\n        <Description>控制台测试操作</Description>\\n    </Images>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <TotalCount>1</TotalCount>\\n</DescribeAICImagesResponse>","errorExample":""}]',
      'title' => '获取镜像信息',
    ),
    'RecoverAICInstance' => 
    array (
      'summary' => '调用RecoverAICInstance恢复板卡上的AIC。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务器实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cas-instance****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<RecoverAICInstanceResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</RecoverAICInstanceResponse>","errorExample":""}]',
      'title' => '恢复板卡上的AIC',
    ),
    'ReleaseAICInstance' => 
    array (
      'summary' => '调用ReleaseAicInstance释放板卡上的AIC。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务器实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cas-instance****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<ReleaseAICInstanceResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</ReleaseAICInstanceResponse>","errorExample":""}]',
      'title' => '释放板卡上的AIC',
    ),
    'RunServiceSchedule' => 
    array (
      'summary' => '调用RunServiceSchedule根据客户ID&IP基本信息，为终端设备最优调度空闲资源（实例设备/容器POD），并完成虚拟设备环境的初始化。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID',
            'type' => 'string',
            'required' => true,
            'example' => '474bdef0-d149-4695-abfb-52912d9143f0',
          ),
        ),
        1 => 
        array (
          'name' => 'Uuid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备UUID',
            'type' => 'string',
            'required' => true,
            'example' => 'hdm_d4f1059a8e1afc0956bd71b497faa433',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端的IP地址。',
            'type' => 'string',
            'required' => true,
            'example' => '180.166.45.146',
          ),
        ),
        3 => 
        array (
          'name' => 'ServiceAction',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '调度服务操作。枚举类型，取值范围：

容器化场景：

- Start：选择并激活一个可调度云设备，启动服务
- Stop：结束并释放云设备
- Console：Uuid处于调度中状态时，进行命令交互

裸金属/虚机场景：
  
- PreSchedule：预调度并锁定虚机实例
- Confirm：确认调度
- Cancel：取消调度
- Console：Uuid处于调度中状态时，进行命令交互',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'Start' => '选择并激活一个可调度云设备，启动服务',
              'Stop' => '结束并释放云设备',
              'Cancel' => '取消调度',
              'PreSchedule' => '预调度并锁定虚机实例',
              'Console' => 'Uuid处于调度中状态时，进行命令交互',
              'Confirm' => '确认调度',
            ),
            'example' => 'Start',
          ),
        ),
        4 => 
        array (
          'name' => 'PodConfigName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '无效参数',
            'type' => 'string',
            'required' => false,
            'example' => 'android',
          ),
        ),
        5 => 
        array (
          'name' => 'PreLockedTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '锁定空闲设备的时间上限，单位秒，仅ServiceAction=PreSchedule有效。默认300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '300',
          ),
        ),
        6 => 
        array (
          'name' => 'Directorys',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要挂载的用户数据文件的目录列表。必须是全路径，不支持\'/../\'，取值示例： ["/data/app01", "/data/user"]。
注意：输入的目录路径是虚拟设备"/data"目录的相对目录，即实际对应的虚拟设备路径为"/data/{输入路径}"',
            'type' => 'string',
            'required' => false,
            'example' => '[\\"/data/app01\\", \\"/data/user\\"]',
          ),
        ),
        7 => 
        array (
          'name' => 'ServiceCommands',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容器服务命令列表。Json数组格式的字符串。',
            'type' => 'string',
            'required' => false,
            'example' => '[{\\"containerName\\": \\"android\\",       \\"commands\\":[\\"cat /tmp/token.json\\"]    },    {      \\"commands\\":[\\"ls -l /data/data\\"]    }]',
          ),
        ),
        8 => 
        array (
          'name' => 'ScheduleStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设备调度策略。Json格式的字符串。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"selectLevel\\": \\"RegionId\\", \\"values\\": [\\"cn-chengdu-telecom-2\\"]  }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CommandResults' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CommandResult' => 
                  array (
                    'description' => '容器服务命令的执行结果。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '容器命令的执行信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Command' => 
                        array (
                          'description' => '设备(容器)命令。',
                          'type' => 'string',
                          'example' => 'ls -l /data',
                        ),
                        'ContainerName' => 
                        array (
                          'description' => '容器名。',
                          'type' => 'string',
                          'example' => 'android',
                        ),
                        'ResultMsg' => 
                        array (
                          'description' => '命令执行结果。',
                          'type' => 'string',
                          'example' => 'success',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Index' => 
              array (
                'description' => '调度的目标虚拟设备（容器Pod）索引号。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'InstanceId' => 
              array (
                'description' => '调度的目标实例ID。',
                'type' => 'string',
                'example' => 'i-5qvji3mom4ec013dyygmtxlkj',
              ),
              'InstanceIp' => 
              array (
                'description' => '调度的目标实例IP。',
                'type' => 'string',
                'example' => '172.16.246.11',
              ),
              'InstancePort' => 
              array (
                'description' => '调度的目标实例Port起始端口。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1024',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'RequestRepeated' => 
              array (
                'description' => '除ServcieAction=Console外，其余ServcieAction是否是重复操作。',
                'type' => 'string',
                'example' => 'false',
              ),
              'TcpPorts' => 
              array (
                'description' => '调度的目标虚机实例/容器的tcp服务端口范围，取值格式：${from}-${to}，如80-88。',
                'type' => 'boolean',
                'example' => '"80-88"',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'LimitExceeded.SecurityGroup',
            'errorMessage' => 'The number of securityGroup exceeds the limit.',
          ),
          5 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          6 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"CommandResults\\": {\\n    \\"CommandResult\\": [\\n      {\\n        \\"Command\\": \\"ls -l /data\\",\\n        \\"ContainerName\\": \\"android\\",\\n        \\"ResultMsg\\": \\"success\\"\\n      }\\n    ]\\n  },\\n  \\"Index\\": 1,\\n  \\"InstanceId\\": \\"i-5qvji3mom4ec013dyygmtxlkj\\",\\n  \\"InstanceIp\\": \\"172.16.246.11\\",\\n  \\"InstancePort\\": 1024,\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"RequestRepeated\\": \\"false\\",\\n  \\"TcpPorts\\": true\\n}","type":"json"}]',
      'title' => '执行设备服务调度',
    ),
    'DescribeServcieSchedule' => 
    array (
      'summary' => '调用DescribeServcieSchedule查询Uuid正在占用的（调度中）实例设备或容器实时状态。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => '474bdef0-d149-4695-abfb-52912d9143f0',
          ),
        ),
        1 => 
        array (
          'name' => 'Uuid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '终端设备唯一ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'hdm_f022bf160dc69e2d8eb421e508eb****',
          ),
        ),
        2 => 
        array (
          'name' => 'PodConfigName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '无效参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'android',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Index' => 
              array (
                'description' => '调度的目标虚拟设备（容器Pod）索引号。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'InstanceId' => 
              array (
                'description' => '调度的目标实例ID。',
                'type' => 'string',
                'example' => 'i-5myukg7hnpbto7m024002w8qd',
              ),
              'InstanceIp' => 
              array (
                'description' => '调度的目标实例IP。',
                'type' => 'string',
                'example' => '120.26.XX.XX',
              ),
              'InstancePort' => 
              array (
                'description' => '调度的目标实例Port起始端口。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3306',
              ),
              'PodAbstractInfo' => 
              array (
                'description' => '调度的虚拟设备POD的摘要信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'ContainerService' => 
                  array (
                    'description' => '容器服务名。',
                    'type' => 'boolean',
                    'example' => 'android',
                  ),
                  'ContainerStatuses' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ContainerStatus' => 
                      array (
                        'description' => '容器信息列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '容器信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ContainerId' => 
                            array (
                              'description' => '容器ID。',
                              'type' => 'string',
                              'example' => 'container_e79_1638372147094_158091_02_000001',
                            ),
                            'Name' => 
                            array (
                              'description' => '容器名称。',
                              'type' => 'string',
                              'example' => 'nginx',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Name' => 
                  array (
                    'description' => 'POD名。',
                    'type' => 'boolean',
                    'example' => 'gcs-prod-websocket-eip-telecom',
                  ),
                  'Namespace' => 
                  array (
                    'description' => 'Namespace名称。',
                    'type' => 'boolean',
                    'example' => 'default-aliyun',
                  ),
                  'ResourceScope' => 
                  array (
                    'description' => 'POD所在Scope。',
                    'type' => 'boolean',
                    'example' => 'FDN',
                  ),
                  'Status' => 
                  array (
                    'description' => 'POD状态。',
                    'type' => 'boolean',
                    'example' => 'RUNNING',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
              'RequestRepeated' => 
              array (
                'description' => '是否已创建。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'TcpPorts' => 
              array (
                'description' => '调度的目标虚机实例/容器的tcp服务端口范围，取值格式：${from}-${to}，如80-88。',
                'type' => 'string',
                'example' => '80-88',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'LimitExceeded.SecurityGroup',
            'errorMessage' => 'The number of securityGroup exceeds the limit.',
          ),
          5 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          6 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Index\\": 2,\\n  \\"InstanceId\\": \\"i-5myukg7hnpbto7m024002w8qd\\",\\n  \\"InstanceIp\\": \\"120.26.XX.XX\\",\\n  \\"InstancePort\\": 3306,\\n  \\"PodAbstractInfo\\": {\\n    \\"ContainerService\\": true,\\n    \\"ContainerStatuses\\": {\\n      \\"ContainerStatus\\": [\\n        {\\n          \\"ContainerId\\": \\"container_e79_1638372147094_158091_02_000001\\",\\n          \\"Name\\": \\"nginx\\"\\n        }\\n      ]\\n    },\\n    \\"Name\\": true,\\n    \\"Namespace\\": true,\\n    \\"ResourceScope\\": true,\\n    \\"Status\\": true\\n  },\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\",\\n  \\"RequestRepeated\\": false,\\n  \\"TcpPorts\\": \\"80-88\\"\\n}","type":"json"}]',
      'title' => '查询终端客户调度信息',
    ),
    'RescaleDeviceService' => 
    array (
      'summary' => '调用RescaleDeviceService执行裸金属设备的扩容。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RescaleType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩容资源方式。枚举类型，取值：Add（生产新资源）。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'Add' => '生产新资源',
            ),
            'example' => 'Add',
          ),
        ),
        1 => 
        array (
          'name' => 'RescaleLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩容区域级别。枚举类型，取值：RegionId（指定边缘节点ID）。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'RegionId' => '指定边缘节点ID',
            ),
            'example' => 'RegionId',
          ),
        ),
        2 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '异步扩容资源的超时时间，单位秒，默认300。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1800',
          ),
        ),
        3 => 
        array (
          'name' => 'ServiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '服务ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'service-01c6dd6e93f040698566',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceSelector',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '扩容资源区域需求，Json数组格式的字符串。',
            'type' => 'string',
            'required' => true,
            'example' => '[{\\"regionCode\\": \\"cn-wuxi-telecom_unicom_cmcc-3\\",    \\"ispCode\\": \\"telecom\\",    \\"count\\": 2	},{    \\"regionCode\\": \\"cn-shanghai-cmcc\\",    \\"count\\": 4	}]',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceSpec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源规格名。',
            'type' => 'string',
            'required' => false,
            'example' => 'ens.a6e.large',
          ),
        ),
        6 => 
        array (
          'name' => 'IpType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络类型。枚举类型，取值：

- **1**（默认值）：公网

- **2**：内网',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'enumValueTitles' => 
            array (
              1 => '公网',
              2 => '内网',
            ),
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => '7aedc50b-b1cb-4a7c-9e3d-4cf3c9ee55a4',
          ),
        ),
        8 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'm-5rynw9g1ow1e928lb83bqmbnf',
          ),
        ),
        9 => 
        array (
          'name' => 'ResourceInfo',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '资源规格模版信息，Json格式的字符串。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"imageId\\":\\"m-5s4z4c10avgwvwtn33gl2vgob\\",\\"ipType\\":2,\\"specName\\":\\"ens.pfb-c3m7.medium\\"}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3F3F3570-E721-53F6-853F-37B7725AC6CB',
              ),
              'DeviceIds' => 
              array (
                'description' => '设备ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '设备ID',
                  'type' => 'string',
                  'example' => '[\'b-5qco9b10iei79z48phno4bmsr\']',
                ),
              ),
              'ResourceDetailInfos' => 
              array (
                'description' => '设备主要属性信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '设备主要属性信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'RegionID' => 
                    array (
                      'description' => '设备所在的边缘节点ID。',
                      'type' => 'string',
                      'example' => 'cn-chongqing-1',
                    ),
                    'ID' => 
                    array (
                      'description' => '设备ID。',
                      'type' => 'string',
                      'example' => 'h-uf6009zoa6hdbjyqxcn1',
                    ),
                    'IP' => 
                    array (
                      'description' => '设备IP。',
                      'type' => 'string',
                      'example' => '10.152.196.36',
                    ),
                    'Server' => 
                    array (
                      'description' => '设备所在服务器NC名称。',
                      'type' => 'string',
                      'example' => 'ens-nc2',
                    ),
                    'Type' => 
                    array (
                      'description' => '设备类型。',
                      'type' => 'string',
                      'example' => 'ens.ac6.large',
                    ),
                    'Status' => 
                    array (
                      'description' => '设备状态。',
                      'type' => 'string',
                      'example' => 'Running',
                    ),
                    'Mac' => 
                    array (
                      'description' => '设备的MAC地址。',
                      'type' => 'string',
                      'example' => '24:0B:88:04:71:E0',
                    ),
                    'ISP' => 
                    array (
                      'description' => '所属运营商。',
                      'type' => 'string',
                      'example' => 'telecom',
                    ),
                  ),
                ),
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'string',
                'example' => 'b3b5bb9a-4e0b-4cac-8ebf-e5e015726723',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"3F3F3570-E721-53F6-853F-37B7725AC6CB\\",\\n  \\"DeviceIds\\": [\\n    \\"[\'b-5qco9b10iei79z48phno4bmsr\']\\"\\n  ],\\n  \\"ResourceDetailInfos\\": [\\n    {\\n      \\"RegionID\\": \\"cn-chongqing-1\\",\\n      \\"ID\\": \\"h-uf6009zoa6hdbjyqxcn1\\",\\n      \\"IP\\": \\"10.152.196.36\\",\\n      \\"Server\\": \\"ens-nc2\\",\\n      \\"Type\\": \\"ens.ac6.large\\",\\n      \\"Status\\": \\"Running\\",\\n      \\"Mac\\": \\"24:0B:88:04:71:E0\\",\\n      \\"ISP\\": \\"telecom\\"\\n    }\\n  ],\\n  \\"OrderId\\": \\"b3b5bb9a-4e0b-4cac-8ebf-e5e015726723\\"\\n}","type":"json"}]',
      'title' => '服务扩容',
    ),
    'DescribeDeviceService' => 
    array (
      'summary' => '调用DescribeDeviceService查询边缘应用下的实例和虚拟设备网络状态等基本属性信息列表。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ServiceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Service ID',
            'description' => 'Service ID',
            'type' => 'string',
            'required' => false,
            'example' => 's-cxxxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-5sg1owx0g4ojy66ab2tez77r2',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS边缘节点ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-chongqing-11',
          ),
        ),
        3 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'a2bac6f4-75dc-455e-8389-2dc8e47526d3',
          ),
        ),
        4 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '无效参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-chongqing-10',
          ),
        ),
        5 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单ID。',
            'type' => 'string',
            'required' => false,
            'example' => '2661b1dd-3453-418d-8182-bb34f79e8d3c',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3A535110-3EE3-5EC5-B1ED-10B7067A1FC8',
              ),
              'ResourceDetailInfos' => 
              array (
                'description' => '设备列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '设备信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'RegionID' => 
                    array (
                      'description' => 'ENS边缘节点ID。',
                      'type' => 'string',
                      'example' => 'cn-jiaozuo-2',
                    ),
                    'ID' => 
                    array (
                      'description' => '云设备ID。',
                      'type' => 'string',
                      'example' => 'h-uf6009zoaexs5pefypbo',
                    ),
                    'IP' => 
                    array (
                      'description' => 'IP地址。',
                      'type' => 'string',
                      'example' => '120.27.219.219',
                    ),
                    'Server' => 
                    array (
                      'description' => 'ENS边缘节点的服务器NC名。',
                      'type' => 'string',
                      'example' => 'ens-nc2',
                    ),
                    'Status' => 
                    array (
                      'description' => '设备状态。',
                      'type' => 'string',
                      'example' => 'Running',
                    ),
                    'Type' => 
                    array (
                      'description' => '设备类型。',
                      'type' => 'string',
                      'example' => 'ens.ac6.large',
                    ),
                    'Mac' => 
                    array (
                      'description' => '设备MAC地址。',
                      'type' => 'string',
                      'example' => 'AA:BB:77:88:99:03',
                    ),
                    'ISP' => 
                    array (
                      'description' => '运营商信息。',
                      'type' => 'string',
                      'example' => 'cmcc',
                    ),
                    'DeviceName' => 
                    array (
                      'description' => '设备名称。',
                      'type' => 'string',
                      'example' => '5JhF100NEgdBcpNren32',
                    ),
                    'ImageID' => 
                    array (
                      'description' => '镜像ID。',
                      'type' => 'string',
                      'example' => 'm-2ze40oyhjorpyw61k7be',
                    ),
                  ),
                ),
              ),
              'AppStatus' => 
              array (
                'description' => '应用状态信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Phase' => 
                  array (
                    'description' => '应用状态。枚举类型，取值范围：

中间态3个
-   CREATING
-   UPDATING
-   DELETING

终态4个
  
- CREATE_FAILED
-   UPDATE_FAILED
-   DELETE_FAILED
-   RUNNING',
                    'type' => 'string',
                    'example' => 'CREATING',
                  ),
                  'StatusDescrip' => 
                  array (
                    'description' => '应用状态描述信息。',
                    'type' => 'string',
                    'example' => '创建中',
                  ),
                  'UpdateTime' => 
                  array (
                    'description' => '最新的状态更新时间。',
                    'type' => 'string',
                    'example' => '2021-01-26T05:04Z',
                  ),
                ),
              ),
              'AppMetaData' => 
              array (
                'description' => '应用基本属性。',
                'type' => 'object',
                'properties' => 
                array (
                  'AppId' => 
                  array (
                    'description' => '应用ID。',
                    'type' => 'string',
                    'example' => '97a32f2a-aa2c-436a-b19c-05b20d258618',
                  ),
                  'AppName' => 
                  array (
                    'description' => '应用名称。',
                    'type' => 'string',
                    'example' => 'iotx-api-admin',
                  ),
                  'AppStableVersion' => 
                  array (
                    'description' => '应用的稳定版版本号。',
                    'type' => 'string',
                    'example' => 'v1',
                  ),
                  'AppType' => 
                  array (
                    'description' => '应用类型。枚举类型，取值范围：

- Common：普通
- Scheduler：调度单元

',
                    'type' => 'string',
                    'example' => 'Common',
                  ),
                  'ClusterName' => 
                  array (
                    'description' => '应用集群名。

',
                    'type' => 'string',
                    'example' => 'poc',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '应用创建时间。',
                    'type' => 'string',
                    'example' => '2022-03-03T03:42:11',
                  ),
                  'Description' => 
                  array (
                    'description' => '应用描述信息。',
                    'type' => 'string',
                    'example' => '测试应用',
                  ),
                ),
              ),
              'ResourceInfos' => 
              array (
                'description' => '资源实例信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '资源信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'AppVersion' => 
                    array (
                      'description' => '应用版本号。',
                      'type' => 'string',
                      'example' => 'v1',
                    ),
                    'AreaCode' => 
                    array (
                      'description' => '地域代码。',
                      'type' => 'string',
                      'example' => '410800',
                    ),
                    'AreaName' => 
                    array (
                      'description' => '地域名称。',
                      'type' => 'string',
                      'example' => '华中,河南省,焦作市',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2019-10-02T08:26Z',
                    ),
                    'DeviceInfos' => 
                    array (
                      'description' => '设备信息列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '设备信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Name' => 
                          array (
                            'description' => '设备名称。',
                            'type' => 'string',
                            'example' => 'test-api',
                          ),
                          'Network' => 
                          array (
                            'description' => '网络信息列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '网络信息。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'ContainerPorts' => 
                                array (
                                  'description' => '容器端口。',
                                  'type' => 'string',
                                  'example' => '10000-10010',
                                ),
                                'ExternalIp' => 
                                array (
                                  'description' => '公网IP地址。',
                                  'type' => 'string',
                                  'example' => '39.105.62.120',
                                ),
                                'HostPorts' => 
                                array (
                                  'description' => '机器端口范围。',
                                  'type' => 'string',
                                  'example' => '80-8080',
                                ),
                                'Protocol' => 
                                array (
                                  'description' => '网关协议。枚举类型，取值：

- TCP
- UDP',
                                  'type' => 'string',
                                  'example' => 'TCP',
                                ),
                              ),
                            ),
                          ),
                          'Status' => 
                          array (
                            'description' => '状态。',
                            'type' => 'string',
                            'example' => 'Running',
                          ),
                        ),
                      ),
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'i-5s9boobrmh5000kv4jmi0oeai',
                    ),
                    'InstanceStatus' => 
                    array (
                      'description' => '实例状态。',
                      'type' => 'string',
                      'example' => 'Running',
                    ),
                    'InternalIps' => 
                    array (
                      'description' => '内网IP列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'IP信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Ip' => 
                          array (
                            'description' => 'IP地址。',
                            'type' => 'string',
                            'example' => '10.0.2.3',
                          ),
                        ),
                      ),
                    ),
                    'PublicIps' => 
                    array (
                      'description' => '公网ip。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '公网ip。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Ip' => 
                          array (
                            'description' => 'IP地址。',
                            'type' => 'string',
                            'example' => '122.13.173.137',
                          ),
                        ),
                      ),
                    ),
                    'RegionCode' => 
                    array (
                      'description' => '区域编码。',
                      'type' => 'string',
                      'example' => 'cn-jiaozuo-2',
                    ),
                    'RegionId' => 
                    array (
                      'description' => 'ENS边缘节点ID。',
                      'type' => 'string',
                      'example' => 'cn-jiaozuo-2
',
                    ),
                    'RegionName' => 
                    array (
                      'description' => '地域名称。',
                      'type' => 'string',
                      'example' => '中国焦作-2',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"3A535110-3EE3-5EC5-B1ED-10B7067A1FC8\\",\\n  \\"ResourceDetailInfos\\": [\\n    {\\n      \\"RegionID\\": \\"cn-jiaozuo-2\\",\\n      \\"ID\\": \\"h-uf6009zoaexs5pefypbo\\",\\n      \\"IP\\": \\"120.27.219.219\\",\\n      \\"Server\\": \\"ens-nc2\\",\\n      \\"Status\\": \\"Running\\",\\n      \\"Type\\": \\"ens.ac6.large\\",\\n      \\"Mac\\": \\"AA:BB:77:88:99:03\\",\\n      \\"ISP\\": \\"cmcc\\",\\n      \\"DeviceName\\": \\"5JhF100NEgdBcpNren32\\",\\n      \\"ImageID\\": \\"m-2ze40oyhjorpyw61k7be\\"\\n    }\\n  ],\\n  \\"AppStatus\\": {\\n    \\"Phase\\": \\"CREATING\\",\\n    \\"StatusDescrip\\": \\"创建中\\",\\n    \\"UpdateTime\\": \\"2021-01-26T05:04Z\\"\\n  },\\n  \\"AppMetaData\\": {\\n    \\"AppId\\": \\"97a32f2a-aa2c-436a-b19c-05b20d258618\\",\\n    \\"AppName\\": \\"iotx-api-admin\\",\\n    \\"AppStableVersion\\": \\"v1\\",\\n    \\"AppType\\": \\"Common\\",\\n    \\"ClusterName\\": \\"poc\\",\\n    \\"CreateTime\\": \\"2022-03-03T03:42:11\\",\\n    \\"Description\\": \\"测试应用\\"\\n  },\\n  \\"ResourceInfos\\": [\\n    {\\n      \\"AppVersion\\": \\"v1\\",\\n      \\"AreaCode\\": \\"410800\\",\\n      \\"AreaName\\": \\"华中,河南省,焦作市\\",\\n      \\"CreateTime\\": \\"2019-10-02T08:26Z\\",\\n      \\"DeviceInfos\\": [\\n        {\\n          \\"Name\\": \\"test-api\\",\\n          \\"Network\\": [\\n            {\\n              \\"ContainerPorts\\": \\"10000-10010\\",\\n              \\"ExternalIp\\": \\"39.105.62.120\\",\\n              \\"HostPorts\\": \\"80-8080\\",\\n              \\"Protocol\\": \\"TCP\\"\\n            }\\n          ],\\n          \\"Status\\": \\"Running\\"\\n        }\\n      ],\\n      \\"InstanceId\\": \\"i-5s9boobrmh5000kv4jmi0oeai\\",\\n      \\"InstanceStatus\\": \\"Running\\",\\n      \\"InternalIps\\": [\\n        {\\n          \\"Ip\\": \\"10.0.2.3\\"\\n        }\\n      ],\\n      \\"PublicIps\\": [\\n        {\\n          \\"Ip\\": \\"122.13.173.137\\"\\n        }\\n      ],\\n      \\"RegionCode\\": \\"cn-jiaozuo-2\\",\\n      \\"RegionId\\": \\"cn-jiaozuo-2\\\\n\\",\\n      \\"RegionName\\": \\"中国焦作-2\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询设备服务信息',
    ),
    'DescribeDataPushResult' => 
    array (
      'summary' => '调用DescribeDataPushResult获取应用的数据文件在边缘节点的预推状态结果。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'e76f8985-7965-41fc-925b-9648bb6bf650',
          ),
        ),
        1 => 
        array (
          'name' => 'DataNames',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据文件名；属于查询的过滤条件，支持多选，以","号分割；默认查询所有。

',
            'type' => 'string',
            'required' => false,
            'example' => '159828628258496/mirror_file/game-2553efe7-7bf8-40fb-a6e7-09c9c00a992a.tar',
          ),
        ),
        2 => 
        array (
          'name' => 'DataVersions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据文件版本号；属于查询的过滤条件，支持多选，以","号分割；默认查询所有。

',
            'type' => 'string',
            'required' => false,
            'example' => '90396',
          ),
        ),
        3 => 
        array (
          'name' => 'MinDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询起始时间，格式"2006-01-02"；默认无时间限制。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-02-15',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询终止时间，格式"2006-01-02"；默认无时间限制。

',
            'type' => 'string',
            'required' => false,
            'example' => '2022-02-20',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，起始值为1，导出全部信息时可不传入。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，导出全部时可不传入。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'RegionIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘节点ID列表；属于查询的过滤条件，支持多选，以","号分割；默认查询所有。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-wuhan-telecom_unicom_cmcc-2,cn-jiaozuo-2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageNumber' => 
              array (
                'description' => '分页查询的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PushResults' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PushResult' => 
                  array (
                    'description' => '边缘节点的数据预推状态列表。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '边缘节点的数据预推状态。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Name' => 
                        array (
                          'description' => '数据文件名。

',
                          'type' => 'string',
                          'example' => 'gcs-pre-websocket-eip-telecom',
                        ),
                        'StatusStatS' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'StatusStat' => 
                            array (
                              'description' => '预推状态统计列表',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '预推状态统计。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'RegionIdCount' => 
                                  array (
                                    'description' => '边缘节点总数',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '2',
                                  ),
                                  'RegionIds' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'RegionId' => 
                                      array (
                                        'description' => '边缘节点的数据预推状态列表',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '边缘节点的数据预推状态。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'RegionId' => 
                                            array (
                                              'description' => '边缘节点ID',
                                              'type' => 'string',
                                              'example' => 'cn-wuxi-5',
                                            ),
                                            'StartTime' => 
                                            array (
                                              'description' => '预推开始时间，UTC时间格式。

',
                                              'type' => 'string',
                                              'example' => '2021-12-28T16:00:00Z',
                                            ),
                                            'StatusDescrip' => 
                                            array (
                                              'description' => '状态描述。

',
                                              'type' => 'string',
                                              'example' => 'Success',
                                            ),
                                            'UpdateTime' => 
                                            array (
                                              'description' => '状态的最新更新时间，utc时间。

',
                                              'type' => 'string',
                                              'example' => '2021-12-07T02:37:10Z',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                  'Status' => 
                                  array (
                                    'description' => '预推状态。枚举类型，取值：
SUCCESS：已预推成功
FAILED：预推失败
PUSHING：数据预推中',
                                    'type' => 'string',
                                    'example' => 'FAILED',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Version' => 
                        array (
                          'description' => '数据文件版本号。

',
                          'type' => 'string',
                          'example' => 'standard',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
              'TotalCount' => 
              array (
                'description' => '总条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'LimitExceeded.SecurityGroup',
            'errorMessage' => 'The number of securityGroup exceeds the limit.',
          ),
          5 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          6 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"PushResults\\": {\\n    \\"PushResult\\": [\\n      {\\n        \\"Name\\": \\"gcs-pre-websocket-eip-telecom\\",\\n        \\"StatusStatS\\": {\\n          \\"StatusStat\\": [\\n            {\\n              \\"RegionIdCount\\": 2,\\n              \\"RegionIds\\": {\\n                \\"RegionId\\": [\\n                  {\\n                    \\"RegionId\\": \\"cn-wuxi-5\\",\\n                    \\"StartTime\\": \\"2021-12-28T16:00:00Z\\",\\n                    \\"StatusDescrip\\": \\"Success\\",\\n                    \\"UpdateTime\\": \\"2021-12-07T02:37:10Z\\"\\n                  }\\n                ]\\n              },\\n              \\"Status\\": \\"FAILED\\"\\n            }\\n          ]\\n        },\\n        \\"Version\\": \\"standard\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\",\\n  \\"TotalCount\\": 6\\n}","type":"json"}]',
      'title' => '查询应用数据预推结果',
    ),
    'DescribeDataDownloadURL' => 
    array (
      'summary' => '调用DescribeDataDownloadURL获取应用数据在文件服务器的下载地址，并返回预推成功的文件服务器列表。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => '474bdef0-d149-4695-abfb-52912d9143f0',
          ),
        ),
        1 => 
        array (
          'name' => 'DataName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据文件名。',
            'type' => 'string',
            'required' => true,
            'example' => 'mirror_file/pk-1642597182026-878199448832413.tar',
          ),
        ),
        2 => 
        array (
          'name' => 'DataVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据版本号。',
            'type' => 'string',
            'required' => true,
            'example' => '7895',
          ),
        ),
        3 => 
        array (
          'name' => 'ServerFilterStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件服务器筛选条件。支持多种灰度策略，默认全量查询。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"name\\": \\"ScheduleToRegionId\\",\\"parameters\\":{\\"operator\\": \\"In\\",\\"values\\": [\\"cn-shijiazhuang-telecom_unicom_cmcc\\"]}}',
          ),
        ),
        4 => 
        array (
          'name' => 'ExpireTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预留参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '600',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Data' => 
              array (
                'description' => '数据文件下载地址列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'ServerList' => 
                  array (
                    'description' => '文件服务器列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '文件服务器列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Host' => 
                        array (
                          'description' => '文件服务器Host地址。',
                          'type' => 'string',
                          'example' => '1.1.1.1:8080',
                        ),
                        'RegionId' => 
                        array (
                          'description' => 'ENS边缘节点ID。',
                          'type' => 'string',
                          'example' => 'cn-chenzhou-5',
                        ),
                      ),
                    ),
                  ),
                  'Url' => 
                  array (
                    'description' => '文件下载URL路径。',
                    'type' => 'string',
                    'example' => '/file/1450088842124331/97a32f2a-aa2c-436a-b19c-05b20d258618/f0313053530fc727f81b7d03fad93cd2/e4c2e8edac362acab7123654b9e73432?ak=edgepaas-innerapi-daily&ts=1611229454&sign=Yycbax%2F4OsTgm6BLoxR6lPs5gKE%3D',
                  ),
                  'ExpireTime' => 
                  array (
                    'description' => '下载地址过期时间，UTC时间。',
                    'type' => 'string',
                    'example' => '2021-12-10T03:36:27Z',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'Code' => 
              array (
                'description' => '返回码。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '0',
              ),
              'Message' => 
              array (
                'description' => '响应消息，若成功请求为success。',
                'type' => 'string',
                'example' => 'Success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Data\\": {\\n    \\"ServerList\\": [\\n      {\\n        \\"Host\\": \\"1.1.1.1:8080\\",\\n        \\"RegionId\\": \\"cn-chenzhou-5\\"\\n      }\\n    ],\\n    \\"Url\\": \\"/file/1450088842124331/97a32f2a-aa2c-436a-b19c-05b20d258618/f0313053530fc727f81b7d03fad93cd2/e4c2e8edac362acab7123654b9e73432?ak=edgepaas-innerapi-daily&ts=1611229454&sign=Yycbax%2F4OsTgm6BLoxR6lPs5gKE%3D\\",\\n    \\"ExpireTime\\": \\"2021-12-10T03:36:27Z\\"\\n  },\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"Code\\": 0,\\n  \\"Message\\": \\"Success\\"\\n}","type":"json"}]',
      'title' => '查询应用数据下载地址',
    ),
    'DescribeDataDistResult' => 
    array (
      'summary' => '调用DescribeDataDistResult获取数据文件在应用边缘资源实例的分发状态结果。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'e76f8985-7965-41fc-925b-9648bb6bf650',
          ),
        ),
        1 => 
        array (
          'name' => 'DataNames',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据文件名；属于查询的过滤条件，支持多选，以","号分割；默认查询所有。',
            'type' => 'string',
            'required' => false,
            'example' => 'cloudgame-shanghai/deploy_app/20220215/1644895216305ACG_M21B-ota-1.1.2-D-0215.0628_V1_0002-pre-weiduan.zip',
          ),
        ),
        2 => 
        array (
          'name' => 'DataVersions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据文件版本号；属于查询的过滤条件，支持多选，以","号分割；默认查询所有。',
            'type' => 'string',
            'required' => false,
            'example' => '4885',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘实例ID列表；属于查询的过滤条件，支持多选，以","号分割；默认查询所有。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-7ecpqvkicnchxccozrp,i-6ecpqvkicnchxccozrp',
          ),
        ),
        4 => 
        array (
          'name' => 'MinDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询起始时间，格式"2006-01-02"；默认无时间限制。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-01-02',
          ),
        ),
        5 => 
        array (
          'name' => 'MaxDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询终止时间，格式"2006-01-02"；默认无时间限制。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-02-01',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，起始值为1，导出全部信息时可不传入。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，导出全部时可不传入。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        8 => 
        array (
          'name' => 'EnsRegionIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'ENS节点ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'ENS节点ID列表。',
              'type' => 'string',
              'required' => false,
              'example' => '[\\"cn-xiangyang-19\\"]',
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'DistResults' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DistResult' => 
                  array (
                    'description' => '边缘资源实例的数据分发状态列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '边缘资源实例的数据分发状态。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Name' => 
                        array (
                          'description' => '数据文件名。',
                          'type' => 'string',
                          'example' => 'gcs-prod-websocket-eip-unicom',
                        ),
                        'StatusStats' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'StatusStat' => 
                            array (
                              'description' => '分发状态统计列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '分发状态统计信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'InstanceCount' => 
                                  array (
                                    'description' => '关联的边缘资源实例数量。',
                                    'type' => 'string',
                                    'example' => '10',
                                  ),
                                  'Instances' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'Instance' => 
                                      array (
                                        'description' => '边缘资源实例的分发状态列表。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '边缘资源实例的分发状态。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'InstanceId' => 
                                            array (
                                              'description' => '实例ID。',
                                              'type' => 'string',
                                              'example' => 'i-5qzje8f5un1wmi341m2yetaxv',
                                            ),
                                            'StartTime' => 
                                            array (
                                              'description' => '分发开始时间，UTC时间格式。',
                                              'type' => 'string',
                                              'example' => '2021-11-19T07:24:52Z',
                                            ),
                                            'StatusDescrip' => 
                                            array (
                                              'description' => '状态描述。',
                                              'type' => 'string',
                                              'example' => '成功',
                                            ),
                                            'UpdateTime' => 
                                            array (
                                              'description' => '状态的最新更新时间，utc时间。',
                                              'type' => 'string',
                                              'example' => '2021-10-11T02:38:19Z',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                  'Status' => 
                                  array (
                                    'description' => '分发状态。枚举类型，取值：

- SUCCESS：已分发成功
- FAILED：分发失败
- DISTING：数据分发中
- POD_RESTARTING: 重启空闲POD中
- DELETED: 数据已清理/下架',
                                    'type' => 'string',
                                    'example' => 'SUCCESS',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Version' => 
                        array (
                          'description' => '数据文件版本号。',
                          'type' => 'string',
                          'example' => 'standard',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '分页查询时的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '50373E71-7710-4620-8AAB-133CCE49451C',
              ),
              'TotalCount' => 
              array (
                'description' => '数据集总条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '49',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'LimitExceeded.SecurityGroup',
            'errorMessage' => 'The number of securityGroup exceeds the limit.',
          ),
          5 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          6 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"DistResults\\": {\\n    \\"DistResult\\": [\\n      {\\n        \\"Name\\": \\"gcs-prod-websocket-eip-unicom\\",\\n        \\"StatusStats\\": {\\n          \\"StatusStat\\": [\\n            {\\n              \\"InstanceCount\\": \\"10\\",\\n              \\"Instances\\": {\\n                \\"Instance\\": [\\n                  {\\n                    \\"InstanceId\\": \\"i-5qzje8f5un1wmi341m2yetaxv\\",\\n                    \\"StartTime\\": \\"2021-11-19T07:24:52Z\\",\\n                    \\"StatusDescrip\\": \\"成功\\",\\n                    \\"UpdateTime\\": \\"2021-10-11T02:38:19Z\\"\\n                  }\\n                ]\\n              },\\n              \\"Status\\": \\"SUCCESS\\"\\n            }\\n          ]\\n        },\\n        \\"Version\\": \\"standard\\"\\n      }\\n    ]\\n  },\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"50373E71-7710-4620-8AAB-133CCE49451C\\",\\n  \\"TotalCount\\": 49\\n}","type":"json"}]',
      'title' => '查询应用数据分发结果',
    ),
    'GetDeviceInternetPort' => 
    array (
      'summary' => '调用GetDeviceInternetPort查询设备（板卡ID/容器ID）的NAT规则详情。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => '实例ID，为板卡ID/容器ID，仅支持单个查询。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-5s6xbnx9srb3vm6tp9hg9o64e',
          ),
        ),
        1 => 
        array (
          'name' => 'NatType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT类型。枚举类型，取值范围：

- SNAT
- DNAT',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'SNAT' => 'SNAT',
              'DNAT' => 'DNAT',
            ),
            'example' => 'DNAT',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则ID，不传的话为查询全部。',
            'type' => 'string',
            'required' => false,
            'example' => 'snat-5ref5fc1l1xgqnpjzrtw1hw5a',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '36311833-83FC-57C3-A7DD-768F61F65555',
              ),
              'InstanceId' => 
              array (
                'title' => 'InstanceId',
                'description' => '实例ID，为板卡ID/容器ID。',
                'type' => 'string',
                'example' => 'i-5sadvk2xnylvra9kyejcnevi6',
              ),
              'NetworkInfo' => 
              array (
                'description' => '实例网络映射信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '实例网络映射信息。

',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'InternalIp' => 
                    array (
                      'description' => '内网IP。',
                      'type' => 'string',
                      'example' => '10.0.XX.XX',
                    ),
                    'InternalPort' => 
                    array (
                      'description' => '内网端口。',
                      'type' => 'string',
                      'example' => '2020/2025',
                    ),
                    'ExternalIp' => 
                    array (
                      'description' => '公网IP。',
                      'type' => 'string',
                      'example' => '39.105.XX.XX',
                    ),
                    'ExternalPort' => 
                    array (
                      'description' => '外部端口。',
                      'type' => 'string',
                      'example' => '20',
                    ),
                    'ISP' => 
                    array (
                      'description' => '公网所属运营商。',
                      'type' => 'string',
                      'example' => 'cmcc',
                    ),
                    'Status' => 
                    array (
                      'description' => '外网端口状态。',
                      'type' => 'string',
                      'example' => 'Running',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"36311833-83FC-57C3-A7DD-768F61F65555\\",\\n  \\"InstanceId\\": \\"i-5sadvk2xnylvra9kyejcnevi6\\",\\n  \\"NetworkInfo\\": [\\n    {\\n      \\"InternalIp\\": \\"10.0.XX.XX\\",\\n      \\"InternalPort\\": \\"2020/2025\\",\\n      \\"ExternalIp\\": \\"39.105.XX.XX\\",\\n      \\"ExternalPort\\": \\"20\\",\\n      \\"ISP\\": \\"cmcc\\",\\n      \\"Status\\": \\"Running\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取设备的外网端口信息',
    ),
    'DeleteDeviceInternetPort' => 
    array (
      'summary' => '调用DeleteDeviceInternetPort删除设备（板卡ID/容器ID）的NAT规则。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'InstanceId',
            'description' => '实例ID，为板卡ID/容器ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-5scdmgpdegymqyugf85q66l1a',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'RuleId',
            'description' => '规则ID。

',
            'type' => 'string',
            'required' => true,
            'example' => 'snat-5rfzxah5gzfo869fl6epvon3y',
          ),
        ),
        2 => 
        array (
          'name' => 'NatType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'NatType',
            'description' => 'NAT类型。枚举类型，取值范围：
- SNAT
- DNAT',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'SNAT' => 'SNAT',
              'DNAT' => 'DNAT',
            ),
            'example' => 'DNAT',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '51F57D60-7946-5EE1-A973-A3CCCCF2EF5B',
              ),
              'RuleIds' => 
              array (
                'title' => 'RuleIds',
                'description' => '规则列表。
',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '规则ID。',
                  'type' => 'string',
                  'example' => '[\'snat-5savq9ffy1z0ved6prd7fkzy6\']',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"51F57D60-7946-5EE1-A973-A3CCCCF2EF5B\\",\\n  \\"RuleIds\\": [\\n    \\"[\'snat-5savq9ffy1z0ved6prd7fkzy6\']\\"\\n  ]\\n}","type":"json"}]',
      'title' => '删除设备的外网端口配置',
    ),
    'AddDeviceInternetPort' => 
    array (
      'summary' => '调用AddDeviceInternetPort为实例设备配置NAT规则，属于异步API，规则配置详情参考GetDeviceInternetPort。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例ID',
            'description' => '实例ID，为板卡ID/容器ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-5saiou41t6ude2ia56ri902ke',
          ),
        ),
        1 => 
        array (
          'name' => 'InternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '内网IP地址。',
            'type' => 'string',
            'required' => true,
            'example' => '10.0.0.50',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS边缘节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-wuxi-5',
          ),
        ),
        3 => 
        array (
          'name' => 'InternalPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '内网端口。端口规范：起始端口/结束端口；多组用逗号分割。例：1026/2001,2005/2005。NatType=DNAT时为必填，NatType=SNAT时输入无效。',
            'type' => 'string',
            'required' => false,
            'example' => '12022/12022',
          ),
        ),
        4 => 
        array (
          'name' => 'NatType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'NAT类型。枚举类型，取值范围：
- SNAT
- DNAT',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'SNAT' => 'SNAT',
              'DNAT' => 'DNAT',
            ),
            'example' => 'DNAT',
          ),
        ),
        5 => 
        array (
          'name' => 'ISP',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '公网运营商。默认随机分配，取值范围包括：
- telecom：中国电信
- cmcc：中国移动
- unicom：中国联通
- cbn：广电',
            'type' => 'string',
            'required' => false,
            'example' => 'telecom',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0F9185F6-B6FA-514C-9E05-FFD5F0D7D156',
              ),
              'RuleIds' => 
              array (
                'title' => 'RuleIds',
                'description' => '规则列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '规则ID。',
                  'type' => 'string',
                  'example' => '[\'snat-5sbkmpicuke62r396o5csw1z2\']',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0F9185F6-B6FA-514C-9E05-FFD5F0D7D156\\",\\n  \\"RuleIds\\": [\\n    \\"[\'snat-5sbkmpicuke62r396o5csw1z2\']\\"\\n  ]\\n}","type":"json"}]',
      'title' => '为实例设备配置外网端口',
    ),
    'RestartDeviceInstance' => 
    array (
      'summary' => '调用RestartDeviceInstance重启实例设备或实例上的所有虚拟设备，同步返回是否重启成功。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'App ID',
            'description' => '应用ID。可以通过调用ListApplications接口获取，具体操作，请参见ListApplications。',
            'type' => 'string',
            'required' => true,
            'example' => 'f829265e-2f6f-4088-a4be-c1fb95ab45f9',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'Instance ID',
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-5slvdwcxf6ch81nl4r7p04j5q',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '388AA3AE-CE49-5FF4-8CF5-A03D2BBA1C9A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"388AA3AE-CE49-5FF4-8CF5-A03D2BBA1C9A\\"\\n}","type":"json"}]',
      'title' => '重启实例设备',
    ),
    'ResetDeviceInstance' => 
    array (
      'summary' => '调用ResetDeviceInstance重置实例设备镜像等属性。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'A short description of struct',
            'description' => '应用ID。可以通过调用ListApplications接口获取，具体操作，请参见ListApplications。',
            'type' => 'string',
            'required' => true,
            'example' => 'd0639abf-789a-4527-b420-031d2cd9ad9b',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'i-5sfdblzjqf3zvjnr7oh0bhhj2',
          ),
        ),
        2 => 
        array (
          'name' => 'ImageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '镜像ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'm-5si16wo6simkt267p8b7hcmy3',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '60C0D889-9C80-5D68-8645-6A55C58E72CF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"60C0D889-9C80-5D68-8645-6A55C58E72CF\\"\\n}","type":"json"}]',
      'title' => '重置设备',
    ),
    'DescribeApplicationResourceSummary' => 
    array (
      'summary' => '调用DescribeApplicationResourceSummary获取用户在不同区域Level的资源总配额与使用情况统计信息。该信息是用户进行应用资源扩容的重要参考信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Level',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '区域统计级别，枚举类型，取值范围：

- **National**（默认值）：全国。
- **Big**：大区。
- **Middle**：省级。
- **Small**：城市。
- **RegionId**：边缘节点。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Big' => '大区',
              'Small' => '城市',
              'National' => '全国',
              'RegionId' => '边缘节点',
              'Middle' => '省级',
            ),
            'example' => 'National',
            'enum' => 
            array (
              0 => 'National',
              1 => 'Big',
              2 => 'Middle',
              3 => 'Small',
              4 => 'RegionId',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'BareMetal-Arm',
            'enum' => 
            array (
              0 => 'Ens',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ApplicationResource' => 
              array (
                'description' => '资源配额与使用情况分区统计信息。',
                'type' => 'string',
                'example' => '{
    "Level":"RegionId",
    "Summary":[
        {
            "InstanceType":"ens.a6e.large",
            "SystemDiskMaxSize":20480,
            "DataDiskMaxSize":0,
            "BandwidthOutLimit":100,
            "InstanceTotalMaxCount":0,
            "InstanceTotalCount":4,
            "InstanceCountStat":[
                {
                    "AreaCode":"330100",
                    "AreaName":"",
                    "IspCode":"cmcc",
                    "RegionIds":[
                        "cn-hangzhou-cmcc-7"
                    ],
                    "InstanceMaxCount":0,
                    "InstanceCount":4
                }
            ]
        }
    ]
}',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '50373E71-7710-4620-8AAB-133CCE49451C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"ApplicationResource\\": \\"{\\\\n    \\\\\\"Level\\\\\\":\\\\\\"RegionId\\\\\\",\\\\n    \\\\\\"Summary\\\\\\":[\\\\n        {\\\\n            \\\\\\"InstanceType\\\\\\":\\\\\\"ens.a6e.large\\\\\\",\\\\n            \\\\\\"SystemDiskMaxSize\\\\\\":20480,\\\\n            \\\\\\"DataDiskMaxSize\\\\\\":0,\\\\n            \\\\\\"BandwidthOutLimit\\\\\\":100,\\\\n            \\\\\\"InstanceTotalMaxCount\\\\\\":0,\\\\n            \\\\\\"InstanceTotalCount\\\\\\":4,\\\\n            \\\\\\"InstanceCountStat\\\\\\":[\\\\n                {\\\\n                    \\\\\\"AreaCode\\\\\\":\\\\\\"330100\\\\\\",\\\\n                    \\\\\\"AreaName\\\\\\":\\\\\\"\\\\\\",\\\\n                    \\\\\\"IspCode\\\\\\":\\\\\\"cmcc\\\\\\",\\\\n                    \\\\\\"RegionIds\\\\\\":[\\\\n                        \\\\\\"cn-hangzhou-cmcc-7\\\\\\"\\\\n                    ],\\\\n                    \\\\\\"InstanceMaxCount\\\\\\":0,\\\\n                    \\\\\\"InstanceCount\\\\\\":4\\\\n                }\\\\n            ]\\\\n        }\\\\n    ]\\\\n}\\",\\n  \\"RequestId\\": \\"50373E71-7710-4620-8AAB-133CCE49451C\\"\\n}","type":"json"}]',
      'title' => '获取用户配额',
    ),
    'DistApplicationData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。获取AppId，请参见ListApplications。',
            'type' => 'string',
            'required' => true,
            'example' => 'e76f8985-7965-41fc-925b-9648bb6bf650',
          ),
        ),
        1 => 
        array (
          'name' => 'Data',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分发的数据文件列表，Json数组的字符串格式。',
            'type' => 'string',
            'required' => true,
            'example' => '[{\\"name\\":\\"app01\\",        \\"version\\":\\"1.0\\",        \\"destPath\\":\\"/root/installed\\",        \\"decompress\\":true,        \\"targetDirName\\":\\"target01\\",        \\"fileMode\\":755,        \\"timeout\\":1000    },    {        \\"name\\":\\"app02\\",        \\"version\\":\\"1.1\\",        \\"destPath\\":\\"/tmp/test.txt\\",        \\"decompress\\":false    }]',
          ),
        ),
        2 => 
        array (
          'name' => 'DistStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '灰度分发策略，Json格式的字符串，支持多种分发策略，默认全量分发。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"name\\":\\"ScheduleToAllByMatchExpressions\\",\\"parameters\\":{\\"match_expressions\\":[{\\"key\\":\\"region_id\\",\\"operator\\":\\"In\\",\\"values\\":[\\"cn-wuhan-telecom_unicom_cmcc-2\\"]}]}}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'DistInstanceTotalCount' => 
              array (
                'description' => '目标边缘资源实例ID的总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'DistInstanceIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DistInstanceId' => 
                  array (
                    'description' => '目标边缘资源实例ID列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'i-xxx',
                    ),
                  ),
                ),
              ),
              'DistResults' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DistResult' => 
                  array (
                    'description' => '各个数据文件的分发操作执行结果。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据文件的分发操作执行结果。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ResultDescrip' => 
                        array (
                          'description' => '分发结果描述信息。',
                          'type' => 'string',
                          'example' => 'Success',
                        ),
                        'Version' => 
                        array (
                          'description' => '数据文件版本号。

',
                          'type' => 'string',
                          'example' => 'standard',
                        ),
                        'ResultCode' => 
                        array (
                          'description' => '分发执行结果错误码。枚举类型。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '400',
                        ),
                        'Name' => 
                        array (
                          'description' => '数据文件名。

',
                          'type' => 'string',
                          'example' => 'gcs-prod-websocket-eip-unicom',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"DistInstanceTotalCount\\": 2,\\n  \\"DistInstanceIds\\": {\\n    \\"DistInstanceId\\": [\\n      \\"i-xxx\\"\\n    ]\\n  },\\n  \\"DistResults\\": {\\n    \\"DistResult\\": [\\n      {\\n        \\"ResultDescrip\\": \\"Success\\",\\n        \\"Version\\": \\"standard\\",\\n        \\"ResultCode\\": 400,\\n        \\"Name\\": \\"gcs-prod-websocket-eip-unicom\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '分发数据到目标资源实例',
      'summary' => '调用DistApplicationData分发已预推成功的数据到应用的边缘资源实例，目标边缘资源的范围支持多种灰度策略，同时支持文件解压缩与容器重启。',
    ),
    'CreateApplication' => 
    array (
      'summary' => '调用CreateApplication创建一个边缘应用服务，实现容器（虚拟设备）、裸金属或虚机的边缘服务托管。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Template',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边缘应用模版，Json格式的字符串，包含：

- 应用名等基本信息；
- 资源规格、网络安全配置等信息；
- 业务配置
- 资源需求量',
            'type' => 'string',
            'required' => true,
            'example' => '{\\"appMetaData\\":{        \\"appName\\":\\"nginx\\",        \\"clusterName\\":\\"poc\\",        \\"appType\\":\\"Common\\",        \\"description\\":\\"测试服务\\"    },    \\"resourceAttribute\\":{        \\"resourceType\\":\\"\\",        \\"instanceSpec\\":\\"ens.sn1.tiny\\",        \\"systemDiskSize\\":20,        \\"dataDiskSize\\":0,        \\"bandwithOut\\":10,        \\"areaLevel\\":\\"National\\",        \\"netSecurityStrategy\\":null,        \\"initConfig\\":null    },    \\"resourceSelector\\":[        {            \\"count\\":1        }    ],    \\"workload\\":[        {            \\"podCount\\":1,            \\"serviceConfig\\":null,            \\"name\\":\\"nginx\\",            \\"podSpec\\":{                \\"containers\\":[                    {                        \\"name\\":\\"android\\",                        \\"image\\":\\"edge-registry.alicdn.com/test/nginx\\"                    }                ]            },            \\"count\\":1        }    ]}',
          ),
        ),
        1 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '异步处理的超时时间。单位秒，默认1800。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1800',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'AppId' => 
              array (
                'description' => '创建成功生成的应用ID，是用户边缘应用服务的唯一标识。',
                'type' => 'string',
                'example' => 'd0639abf-789a-4527-b420-031d2cd9ad9b',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"AppId\\": \\"d0639abf-789a-4527-b420-031d2cd9ad9b\\",\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","type":"json"}]',
      'title' => '创建边缘应用托管服务',
    ),
    'DeleteApplication' => 
    array (
      'summary' => '调用DeleteApplication异步释放应用所有相关的容器和资源实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。获取应用ID，请参见ListApplications。',
            'type' => 'string',
            'required' => true,
            'example' => 'd0639abf-789a-4527-b420-031d2cd9ad9b',
          ),
        ),
        1 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '异步释放的超时时间，单位秒。默认300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1800',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AAE90880-4970-4D81-A534-A6C0F3631F74',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"AAE90880-4970-4D81-A534-A6C0F3631F74\\"\\n}","type":"json"}]',
      'title' => '删除应用',
    ),
    'ListApplications' => 
    array (
      'summary' => '调用ListApplications列出创建的应用列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClusterNames',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用集群名。支持多选，以","分割；输入All，查询用户名下所有集群的应用列表；默认查询全量。',
            'type' => 'string',
            'required' => false,
            'example' => 'poc,pre',
          ),
        ),
        1 => 
        array (
          'name' => 'AppVersions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用的业务服务版本号。支持多选，以","分割；输入All，输出所有版本数据。默认只输出稳定版版本号的关联数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'v1,v2',
          ),
        ),
        2 => 
        array (
          'name' => 'Level',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用边缘资源的区域统计级别。枚举类型，取值范围：

- National：全国
- Big：大区
- Middle：省级
- Small：城市
- RegionId：边缘节点

默认National。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Big' => '大区',
              'Small' => '城市',
              'National' => '全国',
              'RegionId' => '边缘节点',
              'Middle' => '省级',
            ),
            'example' => 'National',
            'enum' => 
            array (
              0 => 'National',
              1 => 'Big',
              2 => 'Middle',
              3 => 'Small',
              4 => 'RegionId',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'OutAppInfoParams',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否输出统计资源实例/容器Pod等维度的信息。Json的字符串格式。默认输出所有信息。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"appInfo\\":true,\\"detailStat\\": true, \\"appVersionStat\\": true, \\"districtStat\\":true ,\\"instanceStat\\": true, \\"podCountStat\\": true}',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，起始值为1，导出全部信息时可不传入。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，导出全部时可不传入。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'MinDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询起始时间，格式"2006-01-02"；默认无时间限制。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-02-15',
          ),
        ),
        7 => 
        array (
          'name' => 'MaxDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询终止时间，格式"2006-01-02"；默认无时间限制。

',
            'type' => 'string',
            'required' => false,
            'example' => '2022-02-20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Applications' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Application' => 
                  array (
                    'description' => '应用列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '应用列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AppList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'App' => 
                            array (
                              'description' => '应用列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '应用列表。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'AppId' => 
                                  array (
                                    'description' => '应用ID。',
                                    'type' => 'string',
                                    'example' => 'e76f8985-7965-41fc-925b-9648bb6bf650',
                                  ),
                                  'AppInfo' => 
                                  array (
                                    'description' => '应用信息。包括资源规格、业务服务参数配置、当前资源列表等信息。',
                                    'type' => 'string',
                                    'example' => '{
    "AppStatus":{
        "Phase":"RUNNING",
        "StatusDescrip":"{\\"status\\":\\"UPDATE_SUCCESS\\",\\"step\\":\\"DONE\\",\\"descrip\\":\\"update to version:1022 success\\",\\"start_time\\":\\"2022-03-01 16:18:22\\"}",
        "UpdateTime":"2022-03-01 16:18:22",
        "OrderStatus":null
    },
    "ResourceAttribute":{
        "NetSecurityInfo":null,
        "InitConfig":null,
        "InventoryType":"Ens",
        "InstanceSpec":"ens.gi6s-c12g1.large",
        "SystemDiskSize":100,
        "DataDiskSize":0,
        "BandwithOut":5000,
        "SchedulingStrategy":"Disperse",
        "ImageId":"m-5or73kzkuxytv7hh6wxr6yc5q",
        "ResourceType":"Linux",
        "AreaLevel":"National",
        "IpType":"PublicIP"
    },
    "WorkloadAttribute":[
        {
            "Name":"andorid",
            "Count":15,
            "ServiceConfig":{
                "PortsBindConfig":{
                    "NetServiceContainer":"uravi-service",
                    "Ports":[
                        {
                            "Protocol":"TCP",
                            "BindType":"Mapping",
                            "StartNodePorts":"31000-31009",
                            "ContainerPorts":"4440-4449"
                        },
                        {
                            "Protocol":"TCP",
                            "BindType":"PassThrough",
                            "StartNodePorts":"59000-59000",
                            "ContainerPorts":"59000-59000"
                        },
                        {
                            "Protocol":"UDP",
                            "BindType":"PassThrough",
                            "StartNodePorts":"40001-40010",
                            "ContainerPorts":"40001-40010"
                        }
                    ]
                },
                "ServiceContainerName":"android"
            }
        },
        {
            "Name":"coturn",
            "Count":1,
            "ServiceConfig":{
                "PortsBindConfig":{
                    "NetServiceContainer":"coturn",
                    "Ports":[
                        {
                            "Protocol":"TCP",
                            "BindType":"PassThrough",
                            "StartNodePorts":"3478-3478",
                            "ContainerPorts":"3478-3478"
                        },
                        {
                            "Protocol":"UDP",
                            "BindType":"PassThrough",
                            "StartNodePorts":"3478-3478",
                            "ContainerPorts":"3478-3478"
                        }
                    ]
                },
                "ServiceContainerName":"coturn"
            }
        },
        {
            "Name":"aic-manager",
            "Count":1,
            "ServiceConfig":null
        }
    ]
}',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'ClusterName' => 
                        array (
                          'description' => '集群名称。',
                          'type' => 'string',
                          'example' => 'ay-ads-hz-h',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '分页查询的页码。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '50373E71-7710-4620-8AAB-133CCE49451C',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '49',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Applications\\": {\\n    \\"Application\\": [\\n      {\\n        \\"AppList\\": {\\n          \\"App\\": [\\n            {\\n              \\"AppId\\": \\"e76f8985-7965-41fc-925b-9648bb6bf650\\",\\n              \\"AppInfo\\": \\"{\\\\n    \\\\\\"AppStatus\\\\\\":{\\\\n        \\\\\\"Phase\\\\\\":\\\\\\"RUNNING\\\\\\",\\\\n        \\\\\\"StatusDescrip\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"UPDATE_SUCCESS\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"step\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"DONE\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"descrip\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"update to version:1022 success\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"start_time\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"2022-03-01 16:18:22\\\\\\\\\\\\\\"}\\\\\\",\\\\n        \\\\\\"UpdateTime\\\\\\":\\\\\\"2022-03-01 16:18:22\\\\\\",\\\\n        \\\\\\"OrderStatus\\\\\\":null\\\\n    },\\\\n    \\\\\\"ResourceAttribute\\\\\\":{\\\\n        \\\\\\"NetSecurityInfo\\\\\\":null,\\\\n        \\\\\\"InitConfig\\\\\\":null,\\\\n        \\\\\\"InventoryType\\\\\\":\\\\\\"Ens\\\\\\",\\\\n        \\\\\\"InstanceSpec\\\\\\":\\\\\\"ens.gi6s-c12g1.large\\\\\\",\\\\n        \\\\\\"SystemDiskSize\\\\\\":100,\\\\n        \\\\\\"DataDiskSize\\\\\\":0,\\\\n        \\\\\\"BandwithOut\\\\\\":5000,\\\\n        \\\\\\"SchedulingStrategy\\\\\\":\\\\\\"Disperse\\\\\\",\\\\n        \\\\\\"ImageId\\\\\\":\\\\\\"m-5or73kzkuxytv7hh6wxr6yc5q\\\\\\",\\\\n        \\\\\\"ResourceType\\\\\\":\\\\\\"Linux\\\\\\",\\\\n        \\\\\\"AreaLevel\\\\\\":\\\\\\"National\\\\\\",\\\\n        \\\\\\"IpType\\\\\\":\\\\\\"PublicIP\\\\\\"\\\\n    },\\\\n    \\\\\\"WorkloadAttribute\\\\\\":[\\\\n        {\\\\n            \\\\\\"Name\\\\\\":\\\\\\"andorid\\\\\\",\\\\n            \\\\\\"Count\\\\\\":15,\\\\n            \\\\\\"ServiceConfig\\\\\\":{\\\\n                \\\\\\"PortsBindConfig\\\\\\":{\\\\n                    \\\\\\"NetServiceContainer\\\\\\":\\\\\\"uravi-service\\\\\\",\\\\n                    \\\\\\"Ports\\\\\\":[\\\\n                        {\\\\n                            \\\\\\"Protocol\\\\\\":\\\\\\"TCP\\\\\\",\\\\n                            \\\\\\"BindType\\\\\\":\\\\\\"Mapping\\\\\\",\\\\n                            \\\\\\"StartNodePorts\\\\\\":\\\\\\"31000-31009\\\\\\",\\\\n                            \\\\\\"ContainerPorts\\\\\\":\\\\\\"4440-4449\\\\\\"\\\\n                        },\\\\n                        {\\\\n                            \\\\\\"Protocol\\\\\\":\\\\\\"TCP\\\\\\",\\\\n                            \\\\\\"BindType\\\\\\":\\\\\\"PassThrough\\\\\\",\\\\n                            \\\\\\"StartNodePorts\\\\\\":\\\\\\"59000-59000\\\\\\",\\\\n                            \\\\\\"ContainerPorts\\\\\\":\\\\\\"59000-59000\\\\\\"\\\\n                        },\\\\n                        {\\\\n                            \\\\\\"Protocol\\\\\\":\\\\\\"UDP\\\\\\",\\\\n                            \\\\\\"BindType\\\\\\":\\\\\\"PassThrough\\\\\\",\\\\n                            \\\\\\"StartNodePorts\\\\\\":\\\\\\"40001-40010\\\\\\",\\\\n                            \\\\\\"ContainerPorts\\\\\\":\\\\\\"40001-40010\\\\\\"\\\\n                        }\\\\n                    ]\\\\n                },\\\\n                \\\\\\"ServiceContainerName\\\\\\":\\\\\\"android\\\\\\"\\\\n            }\\\\n        },\\\\n        {\\\\n            \\\\\\"Name\\\\\\":\\\\\\"coturn\\\\\\",\\\\n            \\\\\\"Count\\\\\\":1,\\\\n            \\\\\\"ServiceConfig\\\\\\":{\\\\n                \\\\\\"PortsBindConfig\\\\\\":{\\\\n                    \\\\\\"NetServiceContainer\\\\\\":\\\\\\"coturn\\\\\\",\\\\n                    \\\\\\"Ports\\\\\\":[\\\\n                        {\\\\n                            \\\\\\"Protocol\\\\\\":\\\\\\"TCP\\\\\\",\\\\n                            \\\\\\"BindType\\\\\\":\\\\\\"PassThrough\\\\\\",\\\\n                            \\\\\\"StartNodePorts\\\\\\":\\\\\\"3478-3478\\\\\\",\\\\n                            \\\\\\"ContainerPorts\\\\\\":\\\\\\"3478-3478\\\\\\"\\\\n                        },\\\\n                        {\\\\n                            \\\\\\"Protocol\\\\\\":\\\\\\"UDP\\\\\\",\\\\n                            \\\\\\"BindType\\\\\\":\\\\\\"PassThrough\\\\\\",\\\\n                            \\\\\\"StartNodePorts\\\\\\":\\\\\\"3478-3478\\\\\\",\\\\n                            \\\\\\"ContainerPorts\\\\\\":\\\\\\"3478-3478\\\\\\"\\\\n                        }\\\\n                    ]\\\\n                },\\\\n                \\\\\\"ServiceContainerName\\\\\\":\\\\\\"coturn\\\\\\"\\\\n            }\\\\n        },\\\\n        {\\\\n            \\\\\\"Name\\\\\\":\\\\\\"aic-manager\\\\\\",\\\\n            \\\\\\"Count\\\\\\":1,\\\\n            \\\\\\"ServiceConfig\\\\\\":null\\\\n        }\\\\n    ]\\\\n}\\"\\n            }\\n          ]\\n        },\\n        \\"ClusterName\\": \\"ay-ads-hz-h\\"\\n      }\\n    ]\\n  },\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"50373E71-7710-4620-8AAB-133CCE49451C\\",\\n  \\"TotalCount\\": 49\\n}","type":"json"}]',
      'title' => '获取应用列表',
    ),
    'DescribeApplication' => 
    array (
      'summary' => '调用DescribeApplication查询应用的基本属性、资源和容器状态列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，可通过调用ListApplications接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => 'a2bac6f4-75dc-455e-8389-2dc8e47526d3',
          ),
        ),
        1 => 
        array (
          'name' => 'AppVersions',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用的业务服务版本号。支持多选，以","分割；输入All，输出所有版本数据。默认只输出稳定版版本号的关联数据。',
            'type' => 'string',
            'required' => false,
            'example' => 'v1,v2',
          ),
        ),
        2 => 
        array (
          'name' => 'Level',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用边缘资源的区域统计级别。枚举类型，取值范围：

- National：全国
- Big：大区
- Middle：省级
- Small：城市
- RegionId：边缘节点

默认National。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Big' => '大区',
              'Small' => '城市',
              'National' => '全国',
              'RegionId' => '边缘节点',
              'Middle' => '省级',
            ),
            'example' => 'National',
            'enum' => 
            array (
              0 => 'National',
              1 => 'Big',
              2 => 'Middle',
              3 => 'Small',
              4 => 'RegionId',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'OutDetailStatParams',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否输出统计资源实例/容器Pod等维度的信息。Json的字符串格式。默认输出所有信息。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"appInfo\\":true,\\"detailStat\\": true, \\"appVersionStat\\": true, \\"districtStat\\":true ,\\"instanceStat\\": true, \\"podCountStat\\": true}',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceSelector',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '资源筛选条件',
            'description' => '资源筛选条件。',
            'type' => 'string',
            'required' => false,
            'example' => '[{\\"regionCode\\": \\"cn-wuxi-telecom_unicom_cmcc-3\\",    \\"ispCode\\": \\"telecom\\",    \\"count\\": 2	},{    \\"regionCode\\": \\"cn-shanghai-cmcc\\",    \\"count\\": 4	}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Application' => 
              array (
                'description' => '返回的应用信息数据。',
                'type' => 'string',
                'example' => '{
    "AppMetaData":{
        "AppId":"b0b27670-87d5-4c40-9ea8-adeeec2986ce",
        "AppName":"asp-yz",
        "ClusterName":"poc",
        "AppStableVersion":"0825",
        "AppType":"Scheduler",
        "Description":"日常测试CPU环境",
        "CreateTime":"2020-08-25 16:36:16"
    },
    "AppStatus":{
        "Phase":"RUNNING",
        "StatusDescrip":"{\\"status\\":\\"UPDATE_SUCCESS\\",\\"step\\":\\"DONE\\",\\"descrip\\":\\"delVersion success\\",\\"start_time\\":\\"2021-08-18 14:46:45\\"}",
        "UpdateTime":"2021-08-18 14:46:45"
    },
    "ResourceAttribute":{
        "ResourceType":"Ens",
        "ResourceAgent":"Linux",
        "InstanceSpec":"ens.sn1.large",
        "SystemDiskSize":40,
        "DataDiskSize":0,
        "BandwithOut":10,
        "SchedulingStrategy":"Disperse",
        "AreaLevel":"RegionId",
        "IpType":"PublicIP"
    },
    "WorkloadAttribute":[
        {
            "Name":"andorid",
            "PodCount":7,
            "ServiceConfig":{
                "PortsBindConfig":{
                    "NetServiceContainer":"aspserver-android",
                    "Ports":[
                        {
                            "Protocol":"TCP",
                            "BindType":"PassThrough",
                            "StartNodePorts":"5000-5000",
                            "ContainerPorts":"5000-5000"
                        },
                        {
                            "Protocol":"UDP",
                            "BindType":"PassThrough",
                            "StartNodePorts":"4001-4010",
                            "ContainerPorts":"4001-4010"
                        }
                    ]
                },
                "ServiceContainerName":"android"
            }
        },
        {
            "Name":"aic-manager",
            "PodCount":1,
            "ServiceConfig":null
        }
    ],
    "DetailStat":{
        "Level":"Small",
        "InstanceTotalCount":1,
        "InstanceRunningCount":0,
        "PodCountStat":[
            {
                "Name":"andorid",
                "RunningCount":7,
                "ProducedCount":7,
                "Devices":null
            },
            {
                "Name":"aic-manager",
                "RunningCount":1,
                "ProducedCount":1,
                "Devices":null
            }
        ],
        "AppVersionStat":[
            {
                "AppVersion":"08102",
                "Descrip":"白屏化测试2",
                "CreateTime":"2021-08-10 11:20:04",
                "InstanceTotalCount":1,
                "InstanceRunningCount":0,
                "PodCountStat":[
                    {
                        "Name":"andorid",
                        "RunningCount":7,
                        "ProducedCount":7,
                        "Devices":null
                    },
                    {
                        "Name":"aic-manager",
                        "RunningCount":1,
                        "ProducedCount":1,
                        "Devices":null
                    }
                ],
                "DistrictStat":[
                    {
                        "AreaCode":"310100",
                        "AreaName":"华东,,",
                        "RegionCode":"310100",
                        "RegionName":"",
                        "IspCode":"telecom",
                        "RegionIds":[
                            "cn-shanghai-telecom-2"
                        ],
                        "InstanceTotalCount":1,
                        "InstanceRunningCount":0,
                        "PodCountStat":[
                            {
                                "Name":"andorid",
                                "RunningCount":7,
                                "ProducedCount":7,
                                "Devices":null
                            },
                            {
                                "Name":"aic-manager",
                                "RunningCount":1,
                                "ProducedCount":1,
                                "Devices":null
                            }
                        ],
                        "InstanceStat":[
                            {
                                "InstanceId":"i-xxxxxxx",
                                "PublicIps":[
                                    {
                                        "PublicIp":"101.227.7.12",
                                        "Isp":"telecom"
                                    }
                                ],
                                "InternalIps":[
                                    {
                                        "Ip":"10.0.1.4"
                                    }
                                ],
                                "RegionId":"cn-shanghai-telecom-2",
                                "NcName":"",
                                "InstanceStatus":"",
                                "CreateTime":"2020-09-12 22:33:08",
                                "PodCountStat":[
                                    {
                                        "Name":"andorid",
                                        "RunningCount":7,
                                        "ProducedCount":7,
                                        "Devices":[
                                            {
                                                "Name":"asp-yz-andorid-08102-zjzmcyaw-0",
                                                "Status":"Running",
                                                "Ports":null
                                            },
                                            {
                                                "Name":"asp-yz-andorid-08102-zjzmcyaw-1",
                                                "Status":"Running",
                                                "Ports":null
                                            },
                                            {
                                                "Name":"asp-yz-andorid-08102-zjzmcyaw-2",
                                                "Status":"Running",
                                                "Ports":null
                                            },
                                            {
                                                "Name":"asp-yz-andorid-08102-zjzmcyaw-3",
                                                "Status":"Running",
                                                "Ports":null
                                            },
                                            {
                                                "Name":"asp-yz-andorid-08102-zjzmcyaw-4",
                                                "Status":"Running",
                                                "Ports":null
                                            },
                                            {
                                                "Name":"asp-yz-andorid-08102-zjzmcyaw-5",
                                                "Status":"Running",
                                                "Ports":null
                                            },
                                            {
                                                "Name":"asp-yz-andorid-08102-zjzmcyaw-6",
                                                "Status":"Running",
                                                "Ports":null
                                            }
                                        ]
                                    },
                                    {
                                        "Name":"aic-manager",
                                        "RunningCount":1,
                                        "ProducedCount":1,
                                        "Devices":[
                                            {
                                                "Name":"asp-yz-aic-manager-08102-zjzmcyaw-0",
                                                "Status":"Running",
                                                "Ports":null
                                            }
                                        ]
                                    }
                                ],
                                "AppVersionDescrip":""
                            }
                        ]
                    }
                ]
            }
        ]
    }
}',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Application\\": \\"{\\\\n    \\\\\\"AppMetaData\\\\\\":{\\\\n        \\\\\\"AppId\\\\\\":\\\\\\"b0b27670-87d5-4c40-9ea8-adeeec2986ce\\\\\\",\\\\n        \\\\\\"AppName\\\\\\":\\\\\\"asp-yz\\\\\\",\\\\n        \\\\\\"ClusterName\\\\\\":\\\\\\"poc\\\\\\",\\\\n        \\\\\\"AppStableVersion\\\\\\":\\\\\\"0825\\\\\\",\\\\n        \\\\\\"AppType\\\\\\":\\\\\\"Scheduler\\\\\\",\\\\n        \\\\\\"Description\\\\\\":\\\\\\"日常测试CPU环境\\\\\\",\\\\n        \\\\\\"CreateTime\\\\\\":\\\\\\"2020-08-25 16:36:16\\\\\\"\\\\n    },\\\\n    \\\\\\"AppStatus\\\\\\":{\\\\n        \\\\\\"Phase\\\\\\":\\\\\\"RUNNING\\\\\\",\\\\n        \\\\\\"StatusDescrip\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"status\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"UPDATE_SUCCESS\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"step\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"DONE\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"descrip\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"delVersion success\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"start_time\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"2021-08-18 14:46:45\\\\\\\\\\\\\\"}\\\\\\",\\\\n        \\\\\\"UpdateTime\\\\\\":\\\\\\"2021-08-18 14:46:45\\\\\\"\\\\n    },\\\\n    \\\\\\"ResourceAttribute\\\\\\":{\\\\n        \\\\\\"ResourceType\\\\\\":\\\\\\"Ens\\\\\\",\\\\n        \\\\\\"ResourceAgent\\\\\\":\\\\\\"Linux\\\\\\",\\\\n        \\\\\\"InstanceSpec\\\\\\":\\\\\\"ens.sn1.large\\\\\\",\\\\n        \\\\\\"SystemDiskSize\\\\\\":40,\\\\n        \\\\\\"DataDiskSize\\\\\\":0,\\\\n        \\\\\\"BandwithOut\\\\\\":10,\\\\n        \\\\\\"SchedulingStrategy\\\\\\":\\\\\\"Disperse\\\\\\",\\\\n        \\\\\\"AreaLevel\\\\\\":\\\\\\"RegionId\\\\\\",\\\\n        \\\\\\"IpType\\\\\\":\\\\\\"PublicIP\\\\\\"\\\\n    },\\\\n    \\\\\\"WorkloadAttribute\\\\\\":[\\\\n        {\\\\n            \\\\\\"Name\\\\\\":\\\\\\"andorid\\\\\\",\\\\n            \\\\\\"PodCount\\\\\\":7,\\\\n            \\\\\\"ServiceConfig\\\\\\":{\\\\n                \\\\\\"PortsBindConfig\\\\\\":{\\\\n                    \\\\\\"NetServiceContainer\\\\\\":\\\\\\"aspserver-android\\\\\\",\\\\n                    \\\\\\"Ports\\\\\\":[\\\\n                        {\\\\n                            \\\\\\"Protocol\\\\\\":\\\\\\"TCP\\\\\\",\\\\n                            \\\\\\"BindType\\\\\\":\\\\\\"PassThrough\\\\\\",\\\\n                            \\\\\\"StartNodePorts\\\\\\":\\\\\\"5000-5000\\\\\\",\\\\n                            \\\\\\"ContainerPorts\\\\\\":\\\\\\"5000-5000\\\\\\"\\\\n                        },\\\\n                        {\\\\n                            \\\\\\"Protocol\\\\\\":\\\\\\"UDP\\\\\\",\\\\n                            \\\\\\"BindType\\\\\\":\\\\\\"PassThrough\\\\\\",\\\\n                            \\\\\\"StartNodePorts\\\\\\":\\\\\\"4001-4010\\\\\\",\\\\n                            \\\\\\"ContainerPorts\\\\\\":\\\\\\"4001-4010\\\\\\"\\\\n                        }\\\\n                    ]\\\\n                },\\\\n                \\\\\\"ServiceContainerName\\\\\\":\\\\\\"android\\\\\\"\\\\n            }\\\\n        },\\\\n        {\\\\n            \\\\\\"Name\\\\\\":\\\\\\"aic-manager\\\\\\",\\\\n            \\\\\\"PodCount\\\\\\":1,\\\\n            \\\\\\"ServiceConfig\\\\\\":null\\\\n        }\\\\n    ],\\\\n    \\\\\\"DetailStat\\\\\\":{\\\\n        \\\\\\"Level\\\\\\":\\\\\\"Small\\\\\\",\\\\n        \\\\\\"InstanceTotalCount\\\\\\":1,\\\\n        \\\\\\"InstanceRunningCount\\\\\\":0,\\\\n        \\\\\\"PodCountStat\\\\\\":[\\\\n            {\\\\n                \\\\\\"Name\\\\\\":\\\\\\"andorid\\\\\\",\\\\n                \\\\\\"RunningCount\\\\\\":7,\\\\n                \\\\\\"ProducedCount\\\\\\":7,\\\\n                \\\\\\"Devices\\\\\\":null\\\\n            },\\\\n            {\\\\n                \\\\\\"Name\\\\\\":\\\\\\"aic-manager\\\\\\",\\\\n                \\\\\\"RunningCount\\\\\\":1,\\\\n                \\\\\\"ProducedCount\\\\\\":1,\\\\n                \\\\\\"Devices\\\\\\":null\\\\n            }\\\\n        ],\\\\n        \\\\\\"AppVersionStat\\\\\\":[\\\\n            {\\\\n                \\\\\\"AppVersion\\\\\\":\\\\\\"08102\\\\\\",\\\\n                \\\\\\"Descrip\\\\\\":\\\\\\"白屏化测试2\\\\\\",\\\\n                \\\\\\"CreateTime\\\\\\":\\\\\\"2021-08-10 11:20:04\\\\\\",\\\\n                \\\\\\"InstanceTotalCount\\\\\\":1,\\\\n                \\\\\\"InstanceRunningCount\\\\\\":0,\\\\n                \\\\\\"PodCountStat\\\\\\":[\\\\n                    {\\\\n                        \\\\\\"Name\\\\\\":\\\\\\"andorid\\\\\\",\\\\n                        \\\\\\"RunningCount\\\\\\":7,\\\\n                        \\\\\\"ProducedCount\\\\\\":7,\\\\n                        \\\\\\"Devices\\\\\\":null\\\\n                    },\\\\n                    {\\\\n                        \\\\\\"Name\\\\\\":\\\\\\"aic-manager\\\\\\",\\\\n                        \\\\\\"RunningCount\\\\\\":1,\\\\n                        \\\\\\"ProducedCount\\\\\\":1,\\\\n                        \\\\\\"Devices\\\\\\":null\\\\n                    }\\\\n                ],\\\\n                \\\\\\"DistrictStat\\\\\\":[\\\\n                    {\\\\n                        \\\\\\"AreaCode\\\\\\":\\\\\\"310100\\\\\\",\\\\n                        \\\\\\"AreaName\\\\\\":\\\\\\"华东,,\\\\\\",\\\\n                        \\\\\\"RegionCode\\\\\\":\\\\\\"310100\\\\\\",\\\\n                        \\\\\\"RegionName\\\\\\":\\\\\\"\\\\\\",\\\\n                        \\\\\\"IspCode\\\\\\":\\\\\\"telecom\\\\\\",\\\\n                        \\\\\\"RegionIds\\\\\\":[\\\\n                            \\\\\\"cn-shanghai-telecom-2\\\\\\"\\\\n                        ],\\\\n                        \\\\\\"InstanceTotalCount\\\\\\":1,\\\\n                        \\\\\\"InstanceRunningCount\\\\\\":0,\\\\n                        \\\\\\"PodCountStat\\\\\\":[\\\\n                            {\\\\n                                \\\\\\"Name\\\\\\":\\\\\\"andorid\\\\\\",\\\\n                                \\\\\\"RunningCount\\\\\\":7,\\\\n                                \\\\\\"ProducedCount\\\\\\":7,\\\\n                                \\\\\\"Devices\\\\\\":null\\\\n                            },\\\\n                            {\\\\n                                \\\\\\"Name\\\\\\":\\\\\\"aic-manager\\\\\\",\\\\n                                \\\\\\"RunningCount\\\\\\":1,\\\\n                                \\\\\\"ProducedCount\\\\\\":1,\\\\n                                \\\\\\"Devices\\\\\\":null\\\\n                            }\\\\n                        ],\\\\n                        \\\\\\"InstanceStat\\\\\\":[\\\\n                            {\\\\n                                \\\\\\"InstanceId\\\\\\":\\\\\\"i-xxxxxxx\\\\\\",\\\\n                                \\\\\\"PublicIps\\\\\\":[\\\\n                                    {\\\\n                                        \\\\\\"PublicIp\\\\\\":\\\\\\"101.227.7.12\\\\\\",\\\\n                                        \\\\\\"Isp\\\\\\":\\\\\\"telecom\\\\\\"\\\\n                                    }\\\\n                                ],\\\\n                                \\\\\\"InternalIps\\\\\\":[\\\\n                                    {\\\\n                                        \\\\\\"Ip\\\\\\":\\\\\\"10.0.1.4\\\\\\"\\\\n                                    }\\\\n                                ],\\\\n                                \\\\\\"RegionId\\\\\\":\\\\\\"cn-shanghai-telecom-2\\\\\\",\\\\n                                \\\\\\"NcName\\\\\\":\\\\\\"\\\\\\",\\\\n                                \\\\\\"InstanceStatus\\\\\\":\\\\\\"\\\\\\",\\\\n                                \\\\\\"CreateTime\\\\\\":\\\\\\"2020-09-12 22:33:08\\\\\\",\\\\n                                \\\\\\"PodCountStat\\\\\\":[\\\\n                                    {\\\\n                                        \\\\\\"Name\\\\\\":\\\\\\"andorid\\\\\\",\\\\n                                        \\\\\\"RunningCount\\\\\\":7,\\\\n                                        \\\\\\"ProducedCount\\\\\\":7,\\\\n                                        \\\\\\"Devices\\\\\\":[\\\\n                                            {\\\\n                                                \\\\\\"Name\\\\\\":\\\\\\"asp-yz-andorid-08102-zjzmcyaw-0\\\\\\",\\\\n                                                \\\\\\"Status\\\\\\":\\\\\\"Running\\\\\\",\\\\n                                                \\\\\\"Ports\\\\\\":null\\\\n                                            },\\\\n                                            {\\\\n                                                \\\\\\"Name\\\\\\":\\\\\\"asp-yz-andorid-08102-zjzmcyaw-1\\\\\\",\\\\n                                                \\\\\\"Status\\\\\\":\\\\\\"Running\\\\\\",\\\\n                                                \\\\\\"Ports\\\\\\":null\\\\n                                            },\\\\n                                            {\\\\n                                                \\\\\\"Name\\\\\\":\\\\\\"asp-yz-andorid-08102-zjzmcyaw-2\\\\\\",\\\\n                                                \\\\\\"Status\\\\\\":\\\\\\"Running\\\\\\",\\\\n                                                \\\\\\"Ports\\\\\\":null\\\\n                                            },\\\\n                                            {\\\\n                                                \\\\\\"Name\\\\\\":\\\\\\"asp-yz-andorid-08102-zjzmcyaw-3\\\\\\",\\\\n                                                \\\\\\"Status\\\\\\":\\\\\\"Running\\\\\\",\\\\n                                                \\\\\\"Ports\\\\\\":null\\\\n                                            },\\\\n                                            {\\\\n                                                \\\\\\"Name\\\\\\":\\\\\\"asp-yz-andorid-08102-zjzmcyaw-4\\\\\\",\\\\n                                                \\\\\\"Status\\\\\\":\\\\\\"Running\\\\\\",\\\\n                                                \\\\\\"Ports\\\\\\":null\\\\n                                            },\\\\n                                            {\\\\n                                                \\\\\\"Name\\\\\\":\\\\\\"asp-yz-andorid-08102-zjzmcyaw-5\\\\\\",\\\\n                                                \\\\\\"Status\\\\\\":\\\\\\"Running\\\\\\",\\\\n                                                \\\\\\"Ports\\\\\\":null\\\\n                                            },\\\\n                                            {\\\\n                                                \\\\\\"Name\\\\\\":\\\\\\"asp-yz-andorid-08102-zjzmcyaw-6\\\\\\",\\\\n                                                \\\\\\"Status\\\\\\":\\\\\\"Running\\\\\\",\\\\n                                                \\\\\\"Ports\\\\\\":null\\\\n                                            }\\\\n                                        ]\\\\n                                    },\\\\n                                    {\\\\n                                        \\\\\\"Name\\\\\\":\\\\\\"aic-manager\\\\\\",\\\\n                                        \\\\\\"RunningCount\\\\\\":1,\\\\n                                        \\\\\\"ProducedCount\\\\\\":1,\\\\n                                        \\\\\\"Devices\\\\\\":[\\\\n                                            {\\\\n                                                \\\\\\"Name\\\\\\":\\\\\\"asp-yz-aic-manager-08102-zjzmcyaw-0\\\\\\",\\\\n                                                \\\\\\"Status\\\\\\":\\\\\\"Running\\\\\\",\\\\n                                                \\\\\\"Ports\\\\\\":null\\\\n                                            }\\\\n                                        ]\\\\n                                    }\\\\n                                ],\\\\n                                \\\\\\"AppVersionDescrip\\\\\\":\\\\\\"\\\\\\"\\\\n                            }\\\\n                        ]\\\\n                    }\\\\n                ]\\\\n            }\\\\n        ]\\\\n    }\\\\n}\\",\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","type":"json"}]',
      'title' => '查询应用信息',
    ),
    'UpgradeApplication' => 
    array (
      'summary' => '调用UpgradeApplication异步进行容器版本更新，支持多种灰度策略。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'a2bac6f4-75dc-455e-8389-2dc8e47526d3',
          ),
        ),
        1 => 
        array (
          'name' => 'Template',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '灰度升级信息模版，Json格式的字符串，内容包括：

- 待升级版本范围
- 目标版本配置信息
- 资源灰度选择策略
- 智能升级策略（时间窗口、水位等信息）',
            'type' => 'string',
            'required' => true,
            'example' => '{\\"fromAppVersions\\":{        \\"operator\\":\\"In\\",        \\"values\\":[            \\"v1\\",            \\"v2\\"        ]    },    \\"toAppVersion\\":\\"v3\\",    \\"descrip\\":\\"xxx\\",    \\"workload\\":[        {            \\"name\\":\\"nginx\\",            \\"podSpec\\":{            }        }    ],    \\"upgradeStrategy\\":{        \\"name\\":\\"ScheduleToISP\\",        \\"parameters\\":{            \\"operator\\":\\"In\\",            \\"values\\":[                \\"telecom\\"            ]        }    },    \\"autoUpgradeStrategy\\":{        \\"name\\":\\"AdjustToPodUsage\\",        \\"checkInterval\\":600,        \\"startTime\\":\\"2021-02-19 00:00:00\\",        \\"startHourPoint\\":\\"0\\",        \\"endHourPoint\\":\\"8\\",        \\"endTime\\":\\"2021-02-19 08:00:00\\",        \\"level\\":\\"RegionId\\",        \\"rules\\":[            {                \\"regionCodes\\":[                    \\"cn-wuxi-telecom_unicom_cmcc\\",                    \\"cn-shijiazhuang-telecom_unicom_cmcc\\"                ],                \\"usageRatioLimit\\":{                    \\"maxPodUsageRatio\\":50                },                \\"maxUpgradingRatio\\":50            },            {                \\"regionCodes\\":[                    \\"cn-wuhan-telecom_unicom_cmcc\\"                ],                \\"usageRatioLimit\\":{                    \\"maxPodUsageRatio\\":30                },                \\"maxUpgradingRatio\\":20            },            {                \\"regionCodes\\":[                    \\"All\\"                ],                \\"usageRatioLimit\\":{                    \\"maxPodUsageRatio\\":20                },                \\"maxUpgradingRatio\\":50,                \\"maxUpgradingCount\\":2            }        ]    }}',
          ),
        ),
        2 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用异步升级的超时时间，单位秒。默认300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1800',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'TaskId' => 
              array (
                'description' => '任务ID，可以通过任务ID查询升级进度或状态。',
                'type' => 'string',
                'example' => '6f24a774-6bd5-4026-bb7d-deffb1dad875',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"TaskId\\": \\"6f24a774-6bd5-4026-bb7d-deffb1dad875\\"\\n}","type":"json"}]',
      'title' => '应用容器版本升级',
    ),
    'RollbackApplication' => 
    array (
      'summary' => '调用RollbackApplication回滚应用下边缘资源的容器版本，回退到历史版本。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => '474bdef0-d149-4695-abfb-52912d9143f0',
          ),
        ),
        1 => 
        array (
          'name' => 'FromAppVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待回滚的版本号',
            'type' => 'string',
            'required' => true,
            'example' => 'v2-1',
          ),
        ),
        2 => 
        array (
          'name' => 'ToAppVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标版本号。默认自动回滚到上一版本。',
            'type' => 'string',
            'required' => false,
            'example' => 'v2',
          ),
        ),
        3 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '回滚的异步操作超时时间。单位：秒。默认值：300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1800',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0003E8B-B930-4F59-ADC0-0E209A9012A8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C0003E8B-B930-4F59-ADC0-0E209A9012A8\\"\\n}","type":"json"}]',
      'title' => '回退应用历史版本',
    ),
    'RescaleApplication' => 
    array (
      'summary' => '调用RescaleApplication异步执行资源扩/缩容，并完成容器部署/释放操作。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID，您可通过查询ListApplications接口获取。',
            'type' => 'string',
            'required' => true,
            'example' => '474bdef0-d149-4695-abfb-52912d9143f0',
          ),
        ),
        1 => 
        array (
          'name' => 'RescaleType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩缩容资源动作。枚举类型，取值：
- Add：生产新资源。
- Del：释放资源。',
            'type' => 'string',
            'required' => true,
            'example' => 'Add',
            'enum' => 
            array (
              0 => 'Add',
              1 => 'Del',
            ),
          ),
        ),
        2 => 
        array (
          'name' => 'RescaleLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩缩容区域级别。枚举类型，取值范围：

- AreaIspCode：区域运营商
- RegionId：边缘节点
- InstanceId：实例，扩容代表资源托管 / 缩容代表资源释放

默认值AreaIspCode。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'AreaIspCode' => '区域运营商',
              'InstanceId' => '实例，扩容代表资源托管 / 缩容代表资源释放',
              'RegionId' => '边缘节点',
            ),
            'example' => 'RegionId',
            'enum' => 
            array (
              0 => 'AreaIspCode',
              1 => 'RegionId',
              2 => 'InstanceId',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceSelector',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩缩容资源需求，Json数组格式的字符串。',
            'type' => 'string',
            'required' => true,
            'example' => '[{\\"regionCode\\": \\"cn-wuxi-telecom_unicom_cmcc-3\\",    \\"ispCode\\": \\"telecom\\",    \\"count\\": 2	},{    \\"regionCode\\": \\"cn-shanghai-cmcc\\",    \\"count\\": 4	}]',
          ),
        ),
        4 => 
        array (
          'name' => 'ToAppVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '仅新增资源时有效，新增资源的应用部署版本号，默认为应用的稳定版版本号。',
            'type' => 'string',
            'required' => false,
            'example' => 'v2',
          ),
        ),
        5 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '异步扩缩容的超时时间，单位秒。默认300。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1800',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AAE90880-4970-4D81-A534-A6C0F3631F74',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"AAE90880-4970-4D81-A534-A6C0F3631F74\\"\\n}","type":"json"}]',
      'title' => '应用扩缩容',
    ),
    'PushApplicationData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Data',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '预推的数据文件列表，Json数组的字符串格式。',
            'type' => 'string',
            'required' => true,
            'example' => '[{\\"name\\":\\"app01\\",       \\"version\\":\\"1.0\\",       \\"size\\":100,\\"archiveType\\":\\"tar.gz\\",       \\"md5\\":\\"\\",       \\"url\\":\\"http://xxxx\\",\\"timeout\\": 1000   },    {       \\"name\\":\\"app02\\",       \\"version\\":\\"1.1\\",       \\"size\\":10,\\"archiveType\\":\\"zip\\",       \\"md5\\":\\"xxxx\\",       \\"url\\":\\"http://xxxxxx\\",\\"timeout\\": 1000   }]',
          ),
        ),
        1 => 
        array (
          'name' => 'AppId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'e76f8985-7965-41fc-925b-9648bb6bf650',
          ),
        ),
        2 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '无效参数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1800',
          ),
        ),
        3 => 
        array (
          'name' => 'PushStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '灰度预推策略，Json格式的字符串，支持多种分发策略，默认全量预推。',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"name\\": \\"ScheduleToRegionId\\",  \\"parameters\\":{      \\"operator\\": \\"In\\",       \\"values\\": [\\"cn-chegndu-telecom-4\\", \\"cn-shanghai-cmcc-4\\"]  }}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PushResults' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PushResult' => 
                  array (
                    'description' => '各个数据文件的预推操作执行结果。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '数据文件的预推操作执行结果。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Name' => 
                        array (
                          'description' => '数据文件名。',
                          'type' => 'string',
                          'example' => 'gcs-pre-websocket-eip-telecom',
                        ),
                        'ResultCode' => 
                        array (
                          'description' => '预推错误码。枚举类型，取值范围：

- 0：预推操作成功
- 100：已执行过预推操作，且当前预推状态处于"已预推成功"
- 200：已执行过预推操作，且当前预推状态处于"预推中"（部分文件服务器处于预推中）
- 300：预推操作失败，需要重新触发预推操作；具体错误描述参考ResultDescrip',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'ResultDescrip' => 
                        array (
                          'description' => '状态结果描述信息。',
                          'type' => 'string',
                          'example' => '成功',
                        ),
                        'Version' => 
                        array (
                          'description' => '数据文件版本号。',
                          'type' => 'string',
                          'example' => 'standard',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"PushResults\\": {\\n    \\"PushResult\\": [\\n      {\\n        \\"Name\\": \\"gcs-pre-websocket-eip-telecom\\",\\n        \\"ResultCode\\": 100,\\n        \\"ResultDescrip\\": \\"成功\\",\\n        \\"Version\\": \\"standard\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","type":"json"}]',
      'title' => '应用数据预推',
      'summary' => '调用PushApplicationData预推应用的业务/服务类数据到文件服务器。',
    ),
    'UntagResources' => 
    array (
      'summary' => '调用UntagResources为指定的ENS资源列表统一解绑标签。解绑后，如果该标签没有绑定其他任何资源，会被自动删除。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '资源类型',
            'description' => '资源类型',
            'type' => 'string',
            'required' => true,
            'example' => 'instance',
            'enum' => 
            array (
              0 => 'instance',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID列表，最多50个子项',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'i-5zy93g7z1hnkdmav84joxyzgn',
            ),
            'required' => true,
            'maxItems' => 100,
          ),
        ),
        2 => 
        array (
          'name' => 'TagKey',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签键，n 的取值范围为 1, 20。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签的键。',
              'type' => 'string',
              'required' => false,
              'example' => 'test_tag_key-2',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        3 => 
        array (
          'name' => 'All',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否解绑资源上全部的标签。当请求中未设置 TagKey.N 时，该参数才有效。取值范围：

- **true**：解绑所有标签。

- **false**（默认值）：不解绑所有标签。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6AB7715D-8B97-5E81-854B-2429F8C7DEF2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SystemError',
            'errorMessage' => 'A system error occurred while processing your request',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'The operator is not permission for this operate	',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6AB7715D-8B97-5E81-854B-2429F8C7DEF2\\"\\n}","type":"json"}]',
      'title' => '为指定资源列表统一解绑标签',
    ),
    'TagResources' => 
    array (
      'summary' => '调用TagResources为指定的ENS资源列表统一创建并绑定标签。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '实例所绑定的标签',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源的标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。N 的取值范围：1~20。一旦传入该值，则不允许为空字符串。最多支持 128 个字符，不能以aliyun和acs:开头，不能包含http://或者https://。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'team',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。N 的取值范围：1~20。一旦传入该值，可以为空字符串。最多支持 128 个字符，不能以acs:开头，不能包含http://或者https://。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'Deep',
                ),
              ),
              'required' => true,
            ),
            'required' => true,
            'maxItems' => 20,
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID列表。一次调用最多支持添加50个资源ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。',
              'type' => 'string',
              'required' => true,
              'example' => 'i-5****',
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：instance（实例）。',
            'type' => 'string',
            'required' => true,
            'example' => 'instance',
            'enum' => 
            array (
              0 => 'instance',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C50C391C-533A-55D3-AC97-5D9333DE288F',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'The operator is not permission for this operate',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C50C391C-533A-55D3-AC97-5D9333DE288F\\"\\n}","type":"json"}]',
      'title' => '为指定的ENS资源列表统一创建并绑定标签',
      'description' => '绑定标签前，阿里云会校验资源已有标签数量。超过限制值后返回报错信息。当前只支持实例（虚机/祼机等）资源。',
    ),
    'ListTagResources' => 
    array (
      'summary' => '查询一个或多个ENS资源（目前只支持实例资源）已经绑定的标签列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '资源类型',
            'description' => '资源类型定义。取值：instance（实例）',
            'type' => 'string',
            'required' => true,
            'example' => 'instance',
            'enum' => 
            array (
              0 => 'instance',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID，n 的取值范围为 [1, 50]',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'i-t252vwg7cib00ky8g0q',
            ),
            'required' => false,
            'maxItems' => 50,
            'minItems' => 1,
          ),
        ),
        2 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一个查询开始的Token。',
            'type' => 'string',
            'required' => false,
            'example' => '153ba0bbb2be03f84eb48b699f0a4123',
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源的标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '实例的标签键。N的取值范围为**1**~**20**。

- 不能以`aliyun`、`acs:`、`http://`或`https://`开头。
- 最多支持64个字符。
- 不允许传入空字符串。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'team',
                ),
                'Value' => 
                array (
                  'description' => 'Topic的标签值。**Key**和**Value**值必须同时输入或同时不输入。若同时输入表示根据Tag过滤符合条件的Topic，若不输入表示查询所有Topic。

- N的取值范围为1~20。
- 如果输入该值，取值允许为空字符串。
- 最多支持128个字符，不能以aliyun和acs:开头，不能包含http://或者https://。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '唯一请求ID。',
                'type' => 'string',
                'example' => 'C78D9B61-69D8-5655-A312-A15DA5EA5D5E',
              ),
              'TagResources' => 
              array (
                'description' => '标签资源集合',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '资源的标签列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ResourceId' => 
                    array (
                      'description' => '关联资源的ID。',
                      'type' => 'string',
                      'example' => 'i-5zy93g7z1hnkdmav84joxyzgn',
                    ),
                    'ResourceType' => 
                    array (
                      'description' => '资源类型。',
                      'type' => 'string',
                      'example' => 'instance',
                    ),
                    'TagKey' => 
                    array (
                      'description' => '实例的标签键。',
                      'type' => 'string',
                      'example' => 'test_tag_key-2',
                    ),
                    'TagValue' => 
                    array (
                      'description' => '标签值。',
                      'type' => 'string',
                      'example' => 'CLUSTER',
                    ),
                  ),
                ),
              ),
              'NextToken' => 
              array (
                'description' => '下一个查询开始的Token。',
                'type' => 'string',
                'example' => 'abcfeg368547ccdef',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission	',
            'errorMessage' => 'The operator is not permission for this operate',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C78D9B61-69D8-5655-A312-A15DA5EA5D5E\\",\\n  \\"TagResources\\": [\\n    {\\n      \\"ResourceId\\": \\"i-5zy93g7z1hnkdmav84joxyzgn\\",\\n      \\"ResourceType\\": \\"instance\\",\\n      \\"TagKey\\": \\"test_tag_key-2\\",\\n      \\"TagValue\\": \\"CLUSTER\\"\\n    }\\n  ],\\n  \\"NextToken\\": \\"abcfeg368547ccdef\\"\\n}","type":"json"}]',
      'title' => '查询资源已经绑定的标签列表',
    ),
    'DescribeBandwitdhByInternetChargeType' => 
    array (
      'summary' => '查询带宽计费方式。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取数据的起始时间点。

- 按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。

- 如果秒不是00，则自动取为下一分钟开始时。',
            'type' => 'string',
            'required' => true,
            'example' => '2021-11-15T16:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取数据的结束时间点。

- 按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。

- 如果秒不是00，则自动取为下一分钟开始时。',
            'type' => 'string',
            'required' => true,
            'example' => '2022-01-18T09:39:54Z',
          ),
        ),
        2 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商，取值如下所示：
- cmcc：移动。
- telecom：电信。
- unicom：联通。
- multiCarrier：多线。',
            'type' => 'string',
            'required' => false,
            'example' => 'unicom',
          ),
        ),
        3 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所属地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou-cbn-2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'BandwidthValue' => 
              array (
                'description' => '带宽计费值，单bit/s',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '123',
              ),
              'InternetChargeType' => 
              array (
                'description' => '网络计费类型，取值：
- BandwidthByDay：日峰值带宽。
- 95BandwidthByMonth：月95峰值带宽。
- PayByBandwidth4thMonth：月第四峰值带宽。
- PayByBandwidth：固定规格带宽。

只能有一种计费方式，如果已存在计费方式，则新值默认无效，以已存在的为准。',
                'type' => 'string',
                'example' => '95BandwidthByMonth',
              ),
              'RequestId' => 
              array (
                'description' => '公共参数，每个请求的ID都是唯一的，可用于排查和定位问题。',
                'type' => 'string',
                'example' => '08027633-8501-5A36-B90D-F7C38B5EC75D',
              ),
              'TimeStamp' => 
              array (
                'description' => '数据时间戳，日期格式按照ISO8601表示法，并使用UTC时间。例如：2016-10-20T04:00:00Z。',
                'type' => 'string',
                'example' => '2019-10-12T05:45:00Z',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          2 => 
          array (
            'errorCode' => 'InsufficientEipCapacity',
            'errorMessage' => 'Insufficient EIP inventory under the specified territory.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"BandwidthValue\\": 123,\\n  \\"InternetChargeType\\": \\"95BandwidthByMonth\\",\\n  \\"RequestId\\": \\"08027633-8501-5A36-B90D-F7C38B5EC75D\\",\\n  \\"TimeStamp\\": \\"2019-10-12T05:45:00Z\\"\\n}","type":"json"}]',
      'title' => '查询带宽计费方式',
    ),
    'DescribeUserBandWidthData' => 
    array (
      'summary' => '调用DescribeUserBandWidthData查询用户在指定时间段内使用的带宽信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点ID，仅支持传单个ID，默认查询所有节点。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-taiyuan-telecom',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取指定数据的实例ID，仅支持传单个ID，默认查询所有实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-5inkeimcipxk26yqtzm4q****',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取数据的起始时间点。

- 按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。

- 如果秒不是00，则自动取为下一分钟开始时。',
            'type' => 'string',
            'required' => true,
            'example' => '2019-05-21T10:22:00Z',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取数据的结束时间点。

- 按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。

- 如果秒不是00，则自动取为下一分钟开始时。',
            'type' => 'string',
            'required' => true,
            'example' => '2019-05-21T12:22:00Z',
          ),
        ),
        4 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取监控数据的精度，取值：300（默认值）、1200、3600、14400，单位：秒。',
            'type' => 'string',
            'required' => true,
            'example' => '300',
          ),
        ),
        5 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商，取值如下所示：
- cmcc：移动。
- telecom：电信。
- unicom：联通。
- multiCarrier：多线。',
            'type' => 'string',
            'required' => false,
            'example' => 'cmcc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务返回码，成功返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'MonitorData' => 
              array (
                'description' => '监控数据信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'BandWidthMonitorData' => 
                  array (
                    'description' => '带宽监控数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '带宽监控数据。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DownBandWidth' => 
                        array (
                          'description' => '下行带宽，单位：bit/s。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        'InternetRX' => 
                        array (
                          'description' => '实例接收的公网数据流量，单位：bits。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        'InternetTX' => 
                        array (
                          'description' => '实例发送的公网数据流量，单位：bits。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        'TimeStamp' => 
                        array (
                          'description' => '查询监控信息的时间戳，UTC时间，格式为yyyy-MM-DDThh:mm:ssZ。',
                          'type' => 'string',
                          'example' => '2019-10-12T05:45:00Z',
                        ),
                        'UpBandWidth' => 
                        array (
                          'description' => '上行带宽，单位：bit/s。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                  'MaxDownBandWidth' => 
                  array (
                    'description' => '查询时间范围内最大下行带宽，单位：bit/s。',
                    'type' => 'string',
                    'example' => '16817468',
                  ),
                  'MaxUpBandWidth' => 
                  array (
                    'description' => '查询时间范围内最大上行带宽，单位：bit/s。',
                    'type' => 'string',
                    'example' => '231008',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '50373E71-7710-4620-8AAB-133CCE49451C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'USERNOTFOUND',
            'errorMessage' => 'The user is not in ens-controller.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"MonitorData\\": {\\n    \\"BandWidthMonitorData\\": [\\n      {\\n        \\"DownBandWidth\\": 0,\\n        \\"InternetRX\\": 0,\\n        \\"InternetTX\\": 0,\\n        \\"TimeStamp\\": \\"2019-10-12T05:45:00Z\\",\\n        \\"UpBandWidth\\": 0\\n      }\\n    ],\\n    \\"MaxDownBandWidth\\": \\"16817468\\",\\n    \\"MaxUpBandWidth\\": \\"231008\\"\\n  },\\n  \\"RequestId\\": \\"50373E71-7710-4620-8AAB-133CCE49451C\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeUserBandWidthDataResponse>\\n<code>200</code>\\n    <RequestId>50373E71-7710-4620-8AAB-133CCE49451C</RequestId>\\n    <MonitorData>\\n        <MaxDownBandWidth>16817468</MaxDownBandWidth>\\n        <MaxUpBandWidth>231008</MaxUpBandWidth>\\n        <BandWidthMonitorData>\\n            <UpBandWidth>0</UpBandWidth>\\n            <DownBandWidth>0</DownBandWidth>\\n            <InternetTX>0</InternetTX>\\n            <InternetRX>0</InternetRX>\\n            <TimeStamp>2019-10-12T05:45:00Z</TimeStamp>\\n        </BandWidthMonitorData>\\n    </MonitorData>\\n    <Code>0</Code>\\n<requestId>50373E71-7710-4620-8AAB-133CCE49451C</requestId>\\n<successResponse>true</successResponse>\\n</DescribeUserBandWidthDataResponse>\\n","errorExample":""}]',
      'title' => '查询带宽监控数据',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeMeasurementData' => 
    array (
      'summary' => '调用DescribeMeasurementData获取用户计量数据。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，使用UTC时间格式，格式为yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => true,
            'example' => '2019-06-01T00:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，使用UTC时间格式，格式为yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => true,
            'example' => '2019-08-30T00:00:00Z',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'MeasurementDatas' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MeasurementData' => 
                  array (
                    'description' => '计量数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BandWidthFeeDatas' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'BandWidthFeeData' => 
                            array (
                              'description' => '带宽数据。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'CostCode' => 
                                  array (
                                    'description' => '带宽代码。',
                                    'type' => 'string',
                                    'example' => 'cn-cmcc-1',
                                  ),
                                  'CostName' => 
                                  array (
                                    'description' => '带宽名称。',
                                    'type' => 'string',
                                    'example' => '北上广移动',
                                  ),
                                  'CostVal' => 
                                  array (
                                    'description' => '带宽消费值，单位：bit/second。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '16486',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'ChargeModel' => 
                        array (
                          'description' => '计费类型。
- ChargeByUnified：统一计费。

- ChargeByGrade：分档计费。',
                          'type' => 'string',
                          'example' => 'ChargeByGrade',
                        ),
                        'CostCycle' => 
                        array (
                          'description' => '消费周期。',
                          'type' => 'string',
                          'example' => '2019-07-30',
                        ),
                        'CostEndTime' => 
                        array (
                          'description' => '消费结束时间。',
                          'type' => 'string',
                          'example' => '2019-07-30T16:00:00Z',
                        ),
                        'CostStartTime' => 
                        array (
                          'description' => '消费开始时间。',
                          'type' => 'string',
                          'example' => '2019-07-29T16:00:00Z',
                        ),
                        'ResourceFeeData' => 
                        array (
                          'description' => '计算资源。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Memory' => 
                            array (
                              'description' => '内存，单位：GB。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '24',
                            ),
                            'Storage' => 
                            array (
                              'description' => '存储，单位：GB。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '60',
                            ),
                            'Vcpu' => 
                            array (
                              'description' => 'vcpu个数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '12',
                            ),
                          ),
                        ),
                        'ResourceFeeDataDetails' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ResourceFeeDataDetail' => 
                            array (
                              'description' => '算力资源。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'CostCode' => 
                                  array (
                                    'description' => '资源代码。',
                                    'type' => 'string',
                                    'example' => 'vCPU',
                                  ),
                                  'CostName' => 
                                  array (
                                    'description' => '资源名称。',
                                    'type' => 'string',
                                    'example' => 'vCPU',
                                  ),
                                  'CostVal' => 
                                  array (
                                    'description' => '资源消费值。
- 内存单位：GB。
- cpu单位：核
- 存储单位：GB。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '55',
                                  ),
                                  'ResourceType' => 
                                  array (
                                    'description' => '资源类型。',
                                    'type' => 'string',
                                    'example' => 'vCPU',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '125B04C7-3D0D-4245-AF96-14E3758E3F06',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotExists',
            'errorMessage' => 'The user have no instances.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"MeasurementDatas\\": {\\n    \\"MeasurementData\\": [\\n      {\\n        \\"BandWidthFeeDatas\\": {\\n          \\"BandWidthFeeData\\": [\\n            {\\n              \\"CostCode\\": \\"cn-cmcc-1\\",\\n              \\"CostName\\": \\"北上广移动\\",\\n              \\"CostVal\\": 16486\\n            }\\n          ]\\n        },\\n        \\"ChargeModel\\": \\"ChargeByGrade\\",\\n        \\"CostCycle\\": \\"2019-07-30\\",\\n        \\"CostEndTime\\": \\"2019-07-30T16:00:00Z\\",\\n        \\"CostStartTime\\": \\"2019-07-29T16:00:00Z\\",\\n        \\"ResourceFeeData\\": {\\n          \\"Memory\\": 24,\\n          \\"Storage\\": 60,\\n          \\"Vcpu\\": 12\\n        },\\n        \\"ResourceFeeDataDetails\\": {\\n          \\"ResourceFeeDataDetail\\": [\\n            {\\n              \\"CostCode\\": \\"vCPU\\",\\n              \\"CostName\\": \\"vCPU\\",\\n              \\"CostVal\\": 55,\\n              \\"ResourceType\\": \\"vCPU\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"125B04C7-3D0D-4245-AF96-14E3758E3F06\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeMeasurementDataResponse>\\n<RequestId>6E17CBE3-8701-4F0A-B796-BCCA6759C167</RequestId>\\n<MeasurementDatas>\\n    <MeasurementData>\\n        <BandWidthFeeDatas>\\n            <BandWidthFeeData>\\n                <CostCode>cn-telecom-2</CostCode>\\n                <CostVal>230283916</CostVal>\\n                <CostName>地区中心电信</CostName>\\n            </BandWidthFeeData>\\n            <BandWidthFeeData>\\n                <CostCode>cn-cmcc-1</CostCode>\\n                <CostVal>16486</CostVal>\\n                <CostName>北上广移动</CostName>\\n            </BandWidthFeeData>\\n        </BandWidthFeeDatas>\\n        <CostCycle>2019-07-30</CostCycle>\\n        <CostEndTime>2019-07-30T16:00:00Z</CostEndTime>\\n        <CostStartTime>2019-07-29T16:00:00Z</CostStartTime>\\n        <ResourceFeeData>\\n            <Storage>220</Storage>\\n            <Memory>22</Memory>\\n            <Vcpu>11</Vcpu>\\n        </ResourceFeeData>\\n        <ResourceFeeDataDetails>\\n            <ResourceFeeDataDetail>\\n                <CostVal>55</CostVal>\\n                <CostCode>vcpu</CostCode>\\n                <ResourceType>Vcpu</ResourceType>\\n                <CostName>vCPU</CostName>\\n            </ResourceFeeDataDetail>\\n            <ResourceFeeDataDetail>\\n                <CostVal>110</CostVal>\\n                <CostCode>memory</CostCode>\\n                <ResourceType>Memory</ResourceType>\\n                <CostName>内存</CostName>\\n            </ResourceFeeDataDetail>\\n            <ResourceFeeDataDetail>\\n                <CostVal>2885</CostVal>\\n                <CostCode>storage</CostCode>\\n                <ResourceType>Storage</ResourceType>\\n                <CostName/>\\n            </ResourceFeeDataDetail>\\n        </ResourceFeeDataDetails>\\n        <ChargeModel>ChargeByGrade</ChargeModel>\\n    </MeasurementData>\\n</MeasurementDatas>\\n</DescribeMeasurementDataResponse>\\n","errorExample":""}]',
      'title' => '获取用户计量数据',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => '带宽代码和名称如下所示。

cn-telecom-1：北上广电信

cn-telecom-2：地区中心电信

cn-telecom-3：一般城市电信

cn-unicom-1：北上广联通

cn-unicom-2：地区中心联通

cn-unicom-3：一般城市联通

cn-cmcc-1：北上广移动

cn-cmcc-2：地区中心移动

cn-cmcc-3：一般城市移动

cn-other：全国的中小ISP

cn-beijing-telecom-unit：北京电信

cn-beijing-unicom-unit：北京联通

cn-beijing-cmcc-unit：北京移动

cn-changchun-telecom-unit：长春电信

cn-changchun-unicom-unit：长春联通

cn-changchun-cmcc-unit：长春移动

cn-changsha-telecom-unit：长沙电信

cn-changsha-unicom-unit：长沙联通

cn-changsha-cmcc-unit：长沙移动

cn-changzhou-telecom-unit：常州电信

cn-chengdu-telecom-unit：成都电信

cn-chengdu-unicom-unit：成都联通

cn-chengdu-cmcc-unit：成都移动

cn-chongqing-telecom-unit：重庆电信

cn-chongqing-unicom-unit：重庆联通

cn-chongqing-cmcc-unit：重庆移动

cn-dalian-telecom-unit：大连电信

cn-dalian-unicom-unit：大连联通

cn-dalian-cmcc-unit：大连移动

cn-dongguan-telecom-unit：东莞电信

cn-foshan-telecom-unit：佛山电信

cn-fuzhou-telecom-unit：福州电信

cn-fuzhou-unicom-unit：福州联通

cn-fuzhou-cmcc-unit：福州移动

cn-guangzhou-telecom-unit：广州电信

cn-guangzhou-unicom-unit：广州联通

cn-guangzhou-cmcc-unit：广州移动

cn-guiyang-telecom-unit：贵阳电信

cn-guiyang-unicom-unit：贵阳联通

cn-guiyang-cmcc-unit：贵阳移动

cn-haerbin-telecom-unit：哈尔滨电信

cn-haerbin-unicom-unit：哈尔滨联通

cn-haerbin-cmcc-unit：哈尔滨移动

cn-haikou-telecom-unit：海口电信

cn-haikou-unicom-unit：海口联通

cn-haikou-cmcc-unit：海口移动

cn-hefei-telecom-unit：合肥电信

cn-hefei-unicom-unit：合肥联通

cn-hefei-cmcc-unit：合肥移动

cn-hohhot-telecom-unit：呼和浩特电信

cn-hohhot-unicom-unit：呼和浩特联通

cn-hohhot-cmcc-unit：呼和浩特移动

cn-jiamusi-unicom-unit：佳木斯联通

cn-jinan-telecom-unit：济南电信

cn-jinan-unicom-unit：济南联通

cn-jinan-cmcc-unit：济南移动

cn-jingzhou-telecom-unit：荆州电信

cn-kunming-telecom-unit：昆明电信

cn-kunming-unicom-unit：昆明联通

cn-kunming-cmcc-unit：昆明移动

cn-lanzhou-telecom-unit：兰州电信

cn-lanzhou-unicom-unit：兰州联通

cn-lanzhou-cmcc-unit：兰州移动

cn-lhasa-telecom-unit：拉萨电信

cn-lhasa-unicom-unit：拉萨联通

cn-lhasa-cmcc-unit：拉萨移动

cn-meishan-unicom-unit：眉山联通

cn-nanchang-telecom-unit：南昌电信

cn-nanchang-unicom-unit：南昌联通

cn-nanchang-cmcc-unit：南昌移动

cn-nanjing-telecom-unit：南京电信

cn-nanjing-unicom-unit：南京联通

cn-nanjing-cmcc-unit：南京移动

cn-nanning-telecom-unit：南宁电信

cn-nanning-unicom-unit：南宁联通

cn-nanning-cmcc-unit：南宁移动

cn-ningbo-unicom-unit：宁波联通

cn-qingdao-telecom-unit：青岛电信

cn-qingdao-unicom-unit：青岛联通

cn-qingdao-cmcc-unit：青岛移动

cn-shanghai-telecom-unit：上海电信

cn-shanghai-unicom-unit：上海联通

cn-shanghai-cmcc-unit：上海移动

cn-shantou-cmcc-unit：汕头移动

cn-shenzhen-telecom-unit：深圳电信

cn-shenzhen-unicom-unit：深圳联通

cn-shenzhen-cmcc-unit：深圳移动

cn-shenyang-telecom-unit：沈阳电信

cn-shenyang-unicom-unit：沈阳联通

cn-shenyang-cmcc-unit：沈阳移动

cn-shijiazhuang-telecom-unit：石家庄电信

cn-shijiazhuang-unicom-unit：石家庄联通

cn-shijiazhuang-cmcc-unit：石家庄移动

cn-suihua-unicom-unit：绥化联通

cn-suzhou-telecom-unit：苏州电信

cn-taiyuan-telecom-unit：太原电信

cn-taiyuan-unicom-unit：太原联通

cn-taiyuan-cmcc-unit：太原移动

cn-taizhou-telecom-unit：台州电信

cn-taizhou-unicom-unit：台州联通

cn-taizhou-cmcc-unit：台州移动

cn-tianjin-telecom-unit：天津电信

cn-tianjin-unicom-unit：天津联通

cn-tianjin-cmcc-unit：天津移动

cn-tonghua-telecom-unit：通化电信

cn-urumqi-telecom-unit：乌鲁木齐电信

cn-urumqi-unicom-unit：乌鲁木齐联通

cn-urumqi-cmcc-unit：乌鲁木齐移动

cn-wenzhou-telecom-unit：温州电信

cn-wuhan-telecom-unit：武汉电信

cn-wuhan-unicom-unit：武汉联通

cn-wuhan-cmcc-unit：武汉移动

cn-wuhu-telecom-unit：芜湖电信

cn-wuhu-unicom-unit：芜湖联通

cn-wuxi-telecom-unit：无锡电信

cn-wuxi-unicom-unit：无锡联通

cn-wuxi-cmcc-unit：无锡移动

cn-xiamen-telecom-unit：厦门电信

cn-xiamen-unicom-unit：厦门联通

cn-xiamen-cmcc-unit：厦门移动

cn-xian-telecom-unit：西安电信

cn-xian-unicom-unit：西安联通

cn-xian-cmcc-unit：西安移动

cn-xining-telecom-unit：西宁电信

cn-xining-unicom-unit：西宁联通

cn-xining-cmcc-unit：西宁移动

cn-yinchuan-telecom-unit：银川电信

cn-yinchuan-unicom-unit：银川联通

cn-yinchuan-cmcc-unit：银川移动

cn-zhengzhou-telecom-unit：郑州电信

cn-zhengzhou-unicom-unit：郑州联通

cn-zhengzhou-cmcc-unit：郑州移动

cn-zhongwei-telecom-unit：中卫电信

cn-zhongwei-unicom-unit：中卫联通',
    ),
    'DescribePrice' => 
    array (
      'summary' => '调用DescribePrice查询云服务器ENS资源的最新价格。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实列规格。',
            'description' => '实例规格。',
            'type' => 'string',
            'required' => true,
            'example' => 'ens.sn1.tiny',
          ),
        ),
        1 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '节点ID。',
            'description' => '节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai-unicom',
          ),
        ),
        2 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '购买资源的时长，如果不指定PeriodUnit，则默认按月购买。目前只支持按Days和Month。如果PeriodUnit=Day时，Period仅可以3。如果PeriodUnit=Monthc时，则Period可以为1-9,12。',
            'description' => '购买资源的时长。

- 如果不指定PeriodUnit，则默认按月购买。目前只支持按Days和Month。
- 如果PeriodUnit为Day时，Period仅可以3。
- 如果PeriodUnit为Month时，则Period可以为1-9,12。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'maximum' => '12',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'SystemDisk.Size',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '系统盘大小，单位：GB',
            'description' => '系统盘大小，单位：GB',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'Quantity',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '数量。',
            'description' => '数量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'DataDisk.1.Size',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '数据盘大小，单位GB。如果此字段不为空，则以此段为准。',
            'description' => '数据盘大小，单位GB。如果此字段不为空，则以此段为准。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '50',
          ),
        ),
        6 => 
        array (
          'name' => 'InternetChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '带宽计费方式',
            'description' => 'ENS带宽计费方式。取值：

- BandwidthByDay：日峰值带宽。
- 95BandwidthByMonth：月95峰值带宽。
- PayByBandwidth4thMonth：月第四峰值带宽。
- PayByBandwidth：固定规格带宽。',
            'type' => 'string',
            'required' => true,
            'example' => '95BandwidthByMonth',
          ),
        ),
        7 => 
        array (
          'name' => 'DataDisks',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '如果DataDisk.1.Size为空且此字段不为空时的则以此字段为准',
            'description' => '如果DataDisk.1.Size为空且本字段不为空时的则以本字段为准。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Category' => 
                array (
                  'title' => '磁盘类型',
                  'description' => '磁盘类型',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cloud_efficiency',
                  'default' => 'cloud_efficiency',
                  'enum' => 
                  array (
                    0 => 'cloud_efficiency',
                    1 => 'cloud_ssd',
                    2 => 'local_hdd',
                    3 => 'local_ssd',
                  ),
                ),
                'Size' => 
                array (
                  'description' => '数据盘大小，单位：GB。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'minimum' => '20',
                  'example' => '50',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        8 => 
        array (
          'name' => 'PeriodUnit',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询云服务器ENS不同计费周期的价格。取值范围：
Month（默认）：按月计费的价格单位。
Day：按天计费的价格单位。',
            'description' => '查询云服务器ENS不同计费周期的价格。取值范围：

- Month（默认）：按月计费的价格单位。
- Day：按天计费的价格单位。',
            'type' => 'string',
            'required' => false,
            'example' => 'Month',
            'enum' => 
            array (
              0 => 'Month',
              1 => 'Day',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PriceInfo' => 
              array (
                'description' => '价格信息列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'Price' => 
                  array (
                    'description' => '价格信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Currency' => 
                      array (
                        'description' => '币种。

<props="china">- CNY：人民币。</props>
- USD：美元。
- JPY：日元。
',
                        'type' => 'string',
                        'example' => 'USD',
                      ),
                      'DiscountPrice' => 
                      array (
                        'description' => '折扣。',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '1',
                      ),
                      'OriginalPrice' => 
                      array (
                        'description' => '原价。',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '16125.00',
                      ),
                      'TradePrice' => 
                      array (
                        'description' => '交易价格。',
                        'type' => 'number',
                        'format' => 'float',
                        'example' => '126.75',
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '694EB8FF-446C-5B1E-8146-9629E492551F',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The input parameter is Invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'StockNotEnough',
            'errorMessage' => 'The specified configuration is unavailable. Reconfigure and try again.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          6 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PriceInfo\\": {\\n    \\"Price\\": {\\n      \\"Currency\\": \\"USD\\",\\n      \\"DiscountPrice\\": 1,\\n      \\"OriginalPrice\\": 16125,\\n      \\"TradePrice\\": 126.75\\n    }\\n  },\\n  \\"RequestId\\": \\"694EB8FF-446C-5B1E-8146-9629E492551F\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribePriceResponse>\\n    <PriceInfo>\\n        <Price>\\n            <Currency>USD</Currency>\\n            <DiscountPrice>1</DiscountPrice>\\n            <OriginalPrice>16125</OriginalPrice>\\n            <TradePrice>126.75</TradePrice>\\n        </Price>\\n    </PriceInfo>\\n    <RequestId>694EB8FF-446C-5B1E-8146-9629E492551F</RequestId>\\n</DescribePriceResponse>","errorExample":""}]',
      'title' => '查询ENS实例价格',
    ),
    'ExportBillDetailData' => 
    array (
      'summary' => '调用ExportBillDetailData导出账单明细数据。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '开始时间，UTC格式',
            'description' => '开始时间，使用UTC时间格式，格式为yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => true,
            'example' => '2020-06-01T00:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '结束时间UTC格式',
            'description' => '结束时间，使用UTC时间格式，格式为yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => true,
            'example' => '2020-08-30T00:00:00Z',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'FilePath' => 
              array (
                'title' => '文件下载地址',
                'description' => '文件下载路径。',
                'type' => 'string',
                'example' => 'http://test-oss.com/image_01.jpeg',
              ),
              'RequestId' => 
              array (
                'title' => '请求ID，公共字段',
                'description' => '公共参数，每个请求的ID都是唯一的，可用于排查和定位问题。',
                'type' => 'string',
                'example' => 'BEA05990-B90D-594F-8C8E-650AEEB94C5D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotExists',
            'errorMessage' => 'The user have no instances.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"FilePath\\": \\"http://test-oss.com/image_01.jpeg\\",\\n  \\"RequestId\\": \\"BEA05990-B90D-594F-8C8E-650AEEB94C5D\\"\\n}","type":"json"}]',
      'title' => '导出账单明细数据',
    ),
    'ExportMeasurementData' => 
    array (
      'summary' => '调用ExportMeasurementData导出用户计量数据。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '开始时间，UTC格式',
            'description' => '开始时间。使用utc时间表示，格式为yyyy-mm-ddthh:mm:ssz。',
            'type' => 'string',
            'required' => true,
            'example' => '2019-06-01T00:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '结束时间，UTC格式',
            'description' => '结束时间，使用UTC时间格式，格式为yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => true,
            'example' => '2021-10-30T16:00:00Z',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'FilePath' => 
              array (
                'title' => '文件下载地址',
                'description' => '文件下载路径。',
                'type' => 'string',
                'example' => 'http://test-oss.com/image_01.jpeg',
              ),
              'RequestId' => 
              array (
                'title' => '请求ID，公共字段',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0003E8B-B930-4F59-ADC0-0E209A9012A8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotExists',
            'errorMessage' => 'The user have no instances.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"FilePath\\": \\"http://test-oss.com/image_01.jpeg\\",\\n  \\"RequestId\\": \\"C0003E8B-B930-4F59-ADC0-0E209A9012A8\\"\\n}","type":"json"}]',
      'title' => '导出用户计量数据',
    ),
    'ReleaseInstance' => 
    array (
      'summary' => '调用ReleaseInstance释放实例，此接口只支持弹性公网EIP、边缘负载均衡实例ELB、云盘实例释放。建议对实例的释放调用每个产品对应的释放或退订接口。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例id',
            'description' => 'EIP实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'eip-****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<ReleaseInstanceResponse>\\r\\n<RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\r\\n</ReleaseInstanceResponse>","errorExample":""}]',
      'title' => '释放实例',
      'description' => '- API调用频率：10000次/秒。
- 单用户调用频率：50次/秒。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribePrePaidInstanceStock' => 
    array (
      'summary' => '查询可购买资源规格。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-suzhou-telecom',
          ),
        ),
        1 => 
        array (
          'name' => 'SystemDiskSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '系统盘大小规格，单位：GB。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'minimum' => '20',
            'example' => '100',
          ),
        ),
        2 => 
        array (
          'name' => 'DataDiskSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据盘大小规格，单位：GB。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceSpec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例规格。',
            'type' => 'string',
            'required' => true,
            'example' => 'ens.sn1.stiny',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'AvaliableCount' => 
              array (
                'description' => '可购买数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '84',
              ),
              'Cores' => 
              array (
                'description' => 'CPU核数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'DataDiskSize' => 
              array (
                'description' => '数据盘大小规格。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'EnsRegionId' => 
              array (
                'description' => '节点。',
                'type' => 'string',
                'example' => 'cn-suzhou-telecom',
              ),
              'InstanceSpec' => 
              array (
                'description' => '实例规格。',
                'type' => 'string',
                'example' => 'ens.sn1.stiny',
              ),
              'Memory' => 
              array (
                'description' => '内存，单位：GB。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2048',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '007833C8-E819-4122-B636-0D48D7BF6DFB',
              ),
              'SystemDiskSize' => 
              array (
                'description' => '系统盘大小规格。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'ResourceGap' => 
              array (
                'description' => '资源不足原因。',
                'type' => 'string',
                'example' => 'StockNotEnough',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          2 => 
          array (
            'errorCode' => 'InventoryExceeded',
            'errorMessage' => 'The Instance in stock are insufficient,please submit a ticket.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"AvaliableCount\\": 84,\\n  \\"Cores\\": 1,\\n  \\"DataDiskSize\\": 20,\\n  \\"EnsRegionId\\": \\"cn-suzhou-telecom\\",\\n  \\"InstanceSpec\\": \\"ens.sn1.stiny\\",\\n  \\"Memory\\": 2048,\\n  \\"RequestId\\": \\"007833C8-E819-4122-B636-0D48D7BF6DFB\\",\\n  \\"SystemDiskSize\\": 20,\\n  \\"ResourceGap\\": \\"StockNotEnough\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribePrePaidInstanceStockResesponse>\\n    <AvaliableCount>84</AvaliableCount>\\n    <Memory>2048</Memory>\\n    <SystemDiskSize>20</SystemDiskSize>\\n    <Cores>1</Cores>\\n    <EnsRegionId>cn-suzhou-telecom</EnsRegionId>\\n    <InstanceSpec>ens.sn1.stiny</InstanceSpec>\\n    <RequestId>007833C8-E819-4122-B636-0D48D7BF6DFB</RequestId>\\n    <DataDiskSize>20</DataDiskSize>\\n</DescribePrePaidInstanceStockResesponse>\\n","errorExample":""}]',
      'title' => '查询可购买资源规格',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeReservedResource' => 
    array (
      'summary' => '调用DescribeReservedResource查询可购买资源的规格。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6666C5A5-75ED-422E-A022-7121FA18C968',
              ),
              'Images' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Image' => 
                  array (
                    'description' => '镜像信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '镜像信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ImageName' => 
                        array (
                          'description' => '镜像名称。',
                          'type' => 'string',
                          'example' => 'centos_6_08_64_20G_alibase_****',
                        ),
                        'ImageId' => 
                        array (
                          'description' => '镜像ID。',
                          'type' => 'string',
                          'example' => 'centos_6_08_64_20G_alibase_****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'SupportResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SupportResource' => 
                  array (
                    'description' => '资源。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '资源。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EnsRegionId' => 
                        array (
                          'description' => '节点ID。',
                          'type' => 'string',
                          'example' => 'cn-beijing-cmcc',
                        ),
                        'DataDiskSizes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DataDiskSize' => 
                            array (
                              'description' => '数据盘大小规格信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '数据盘大小规格，单位：GB。',
                                'type' => 'string',
                                'example' => '0',
                              ),
                            ),
                          ),
                        ),
                        'SupportResourcesCount' => 
                        array (
                          'description' => '可购买数量。',
                          'type' => 'string',
                          'example' => '9',
                        ),
                        'SystemDiskSizes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SystemDiskSize' => 
                            array (
                              'description' => '系统盘大小规格信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '系统盘大小规格，单位：GB。',
                                'type' => 'string',
                                'example' => '20',
                              ),
                            ),
                          ),
                        ),
                        'InstanceSpec' => 
                        array (
                          'description' => '实例规格。',
                          'type' => 'string',
                          'example' => 'ens.sn1.stiny',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Code' => 
              array (
                'description' => '业务返回码，正常返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotExists',
            'errorMessage' => 'The user have no instances.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6666C5A5-75ED-422E-A022-7121FA18C968\\",\\n  \\"Images\\": {\\n    \\"Image\\": [\\n      {\\n        \\"ImageName\\": \\"centos_6_08_64_20G_alibase_****\\",\\n        \\"ImageId\\": \\"centos_6_08_64_20G_alibase_****\\"\\n      }\\n    ]\\n  },\\n  \\"SupportResources\\": {\\n    \\"SupportResource\\": [\\n      {\\n        \\"EnsRegionId\\": \\"cn-beijing-cmcc\\",\\n        \\"DataDiskSizes\\": {\\n          \\"DataDiskSize\\": [\\n            \\"0\\"\\n          ]\\n        },\\n        \\"SupportResourcesCount\\": \\"9\\",\\n        \\"SystemDiskSizes\\": {\\n          \\"SystemDiskSize\\": [\\n            \\"20\\"\\n          ]\\n        },\\n        \\"InstanceSpec\\": \\"ens.sn1.stiny\\"\\n      }\\n    ]\\n  },\\n  \\"Code\\": 0\\n}","errorExample":""},{"type":"xml","example":"<DescribeAvailableResourceResponse>\\n<SupportResources>\\n    <SupportResource>\\n        <DataDiskSizes>\\n            <DataDiskSize>0</DataDiskSize>\\n        </DataDiskSizes>\\n        <EnsRegionId>cn-beijing-cmcc</EnsRegionId>\\n        <InstanceSpec>ens.sn1.stiny</InstanceSpec>\\n        <SupportResourcesCount>9</SupportResourcesCount>\\n        <SystemDiskSizes>\\n            <SystemDiskSize>20</SystemDiskSize>\\n        </SystemDiskSizes>\\n    </SupportResource>\\n</SupportResources>\\n<RequestId>6666C5A5-75ED-422E-A022-7121FA18C968</RequestId>\\n<Images>\\n    <Image>\\n        <ImageId>centos_6_08_64_20G_alibase_****</ImageId>\\n        <ImageName>centos_6_08_64_20G_alibase_****</ImageName>\\n    </Image>\\n</Images>\\n<Code>0</Code>\\n</DescribeAvailableResourceResponse>\\n","errorExample":""}]',
      'title' => '查询可购买资源的规格',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateEnsService' => 
    array (
      'summary' => '调用CreateEnsService创建边缘服务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsServiceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需求资源ID。仅支持传入单个ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ens-20190806****',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建边缘服务预览后的操作。取值：

- **Buy**：创建。

- **Upgrade**：修改。',
            'type' => 'string',
            'required' => true,
            'example' => 'Buy',
            'enum' => 
            array (
              0 => 'Buy',
              1 => 'Upgrade',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务码。调用成功返回0，失败返回错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9AF02B43-2D08-49D3-8AAF-65B9C792ED14',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter domainName that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"RequestId\\": \\"9AF02B43-2D08-49D3-8AAF-65B9C792ED14\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateEnsServiceResponse>\\n<RequestId>9AF02B43-2D08-49D3-8AAF-65B9C792ED14</RequestId>\\n<Code>0</Code>\\n</CreateEnsServiceResponse>","errorExample":""}]',
      'title' => '创建边缘服务',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateEpnInstance' => 
    array (
      'summary' => '调用CreateEpnInstance新建一个边边网络实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EPNInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边边通信实例。目前取值仅支持**EdgeToEdge**。',
            'type' => 'string',
            'required' => true,
            'example' => 'EdgeToEdge',
          ),
        ),
        1 => 
        array (
          'name' => 'EPNInstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边边网络实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test EPNInstanceName',
          ),
        ),
        2 => 
        array (
          'name' => 'InternetChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络计费类型。取值：

- **BandwidthByDay**：日峰值带宽。
- **95BandwidthByMonth**：月95峰值带宽。
- **PayByBandwidth4thMonth**：月第四峰值带宽。
- **PayByBandwidth**：固定规格带宽。

只能有一种计费方式，如果已存在计费方式，则新值默认无效，以已存在的为准。',
            'type' => 'string',
            'required' => true,
            'example' => 'BandwidthByDay',
            'enum' => 
            array (
              0 => 'BandwidthByDay',
              1 => '95BandwidthByMonth',
              2 => 'PayByBandwidth4thMonth',
              3 => 'PayByBandwidth',
              4 => 'FlowoutByDay',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'NetworkingModel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组网模式。取值：
- **SpeedUp**：智能加速（外网）。
- **Connection**：内网联通（内网模式）。
- **SpeedUpAndConnection**：智能加速及内网联通（内网模式）。',
            'type' => 'string',
            'required' => true,
            'example' => 'SpeedUp',
            'enum' => 
            array (
              0 => 'SpeedUp',
              1 => 'Connection',
              2 => 'SpeedUpAndConnection',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'InternetMaxBandwidthOut',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '公网出带宽最大值，单位为Mbit/s。取值范围：1 Mbit/s～100 Mbit/s。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'EPNInstanceId' => 
              array (
                'description' => '边边网络实例ID。',
                'type' => 'string',
                'example' => 'epn-xxxxx',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'StockNotEnough',
            'errorMessage' => 'The specified instance type has insufficient resource.',
          ),
          1 => 
          array (
            'errorCode' => 'UserNotExist',
            'errorMessage' => 'The specified user is not authroized to perform this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          3 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The input parameter is Invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidDiskSize.ValueNotSupported',
            'errorMessage' => 'The specified disk capacity is invalid. Specify another capacity and try again.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.Bandwidth',
            'errorMessage' => 'The specified parameter InternetChargeType is not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.Image',
            'errorMessage' => 'The specified image does not support.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidParameter.InstanceType',
            'errorMessage' => 'The specified parameter InstanceType is not valid.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidAccountStatus.NotEnoughBalance',
            'errorMessage' => 'Your account does not have enough balance.',
          ),
          12 => 
          array (
            'errorCode' => 'unsupported_Ipv6Feature',
            'errorMessage' => 'This ensregion does not support creating instance of the IPv6 type. Select another type.',
          ),
          13 => 
          array (
            'errorCode' => 'Forbidden.CreateInstance',
            'errorMessage' => 'The user is not in the Goods whitelist of creating instance interface.',
          ),
          14 => 
          array (
            'errorCode' => 'ENS_OperationUnsupported_KeyPairName',
            'errorMessage' => 'The KeyPairNameis not available or image not support ssh key.',
          ),
          15 => 
          array (
            'errorCode' => 'ENS_DependencyViolation_WindowsInstance',
            'errorMessage' => 'The instance creating is window, only user password to login.',
          ),
          16 => 
          array (
            'errorCode' => 'ENS_PASSWORDORKEYPAIRNAME_MODULE_NOT_CHOOSEN',
            'errorMessage' => 'The required module pwd or keyPairName is not inputed',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidPrivateIpAddress',
            'errorMessage' => 'Specified private IP address is not in the CIDR block of virtual switch.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'Specified virtual switch does not exist.',
          ),
          19 => 
          array (
            'errorCode' => 'InvalidPrivateIpAddress.Duplicated',
            'errorMessage' => 'Specified private IP address is duplicated.',
          ),
          20 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"EPNInstanceId\\": \\"epn-xxxxx\\",\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateEpnInstanceResponse>\\n<EPNInstanceId>epn-bp1fg655nh68xyz9i***</EPNInstanceId>\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</CreateEpnInstanceResponse>","errorExample":""}]',
      'title' => '新建边边网络实例',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteEpnInstance' => 
    array (
      'summary' => '调用DeleteEpnInstance删除边边通信实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EPNInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边边网络实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'epn-****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteEpnInstanceResponse>\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</DeleteEpnInstanceResponse>","errorExample":""}]',
      'title' => '删除边边通信实例',
      'description' => '实例组信息为空时才能删除。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEnsNetDistrict' => 
    array (
      'summary' => '调用DescribeEnsNetDistrict查询可创建边缘服务资源地域。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'NetLevelCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域层级。

- **Big**：大区。

- **Middle**：省份。

- **Small**：城市。',
            'type' => 'string',
            'required' => true,
            'example' => 'Big',
          ),
        ),
        1 => 
        array (
          'name' => 'NetDistrictCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域代码。

如果该参数为空，则只查询NetLevelCode下的节点。

如果该参数不为空，则只查询NetDistrictCode下的子节点。',
            'type' => 'string',
            'required' => false,
            'example' => '100106',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务码，成功返回0。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'EnsNetDistricts' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EnsNetDistrict' => 
                  array (
                    'description' => '地域信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '地域信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EnsRegionIdCount' => 
                        array (
                          'description' => '地域下的节点数量。',
                          'type' => 'string',
                          'example' => '2',
                        ),
                        'NetDistrictCode' => 
                        array (
                          'description' => '地域代码。',
                          'type' => 'string',
                          'example' => '100106',
                        ),
                        'NetDistrictEnName' => 
                        array (
                          'description' => '地域英文名称。',
                          'type' => 'string',
                          'example' => 'southWest',
                        ),
                        'NetDistrictFatherCode' => 
                        array (
                          'description' => '地域上级代码。',
                          'type' => 'string',
                          'example' => '100000',
                        ),
                        'NetDistrictLevel' => 
                        array (
                          'description' => '地域层级。

- **Big**：大区级。

- **Middle**：省份级。

- **Small**：城市级。',
                          'type' => 'string',
                          'example' => 'Big',
                        ),
                        'NetDistrictName' => 
                        array (
                          'description' => '地域中文名称。',
                          'type' => 'string',
                          'example' => '西南',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F3B261DD-3858-4D3C-877D-303ADF374600',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter domainName that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceIdNotFound',
            'errorMessage' => 'The input parameter instancdId that is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"EnsNetDistricts\\": {\\n    \\"EnsNetDistrict\\": [\\n      {\\n        \\"EnsRegionIdCount\\": \\"2\\",\\n        \\"NetDistrictCode\\": \\"100106\\",\\n        \\"NetDistrictEnName\\": \\"southWest\\",\\n        \\"NetDistrictFatherCode\\": \\"100000\\",\\n        \\"NetDistrictLevel\\": \\"Big\\",\\n        \\"NetDistrictName\\": \\"西南\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"F3B261DD-3858-4D3C-877D-303ADF374600\\"\\n}","errorExample":""},{"type":"xml","example":"<EnsNetDistricts>\\n    <EnsNetDistrict>\\n        <NetDistrictCode>100106</NetDistrictCode>\\n        <NetDistrictLevel>Big</NetDistrictLevel>\\n        <NetDistrictFatherCode>100000</NetDistrictFatherCode>\\n        <NetDistrictEnName>southWest</NetDistrictEnName>\\n        <EnsRegionIdCount>\\n            <count>1</count>\\n            <name>电信</name>\\n            <code>telecom</code>\\n            <country>cn</country>\\n        </EnsRegionIdCount>\\n        <EnsRegionIdCount>\\n            <count>1</count>\\n            <name>联通</name>\\n            <code>unicom</code>\\n            <country>cn</country>\\n        </EnsRegionIdCount>\\n        <EnsRegionIdCount>\\n            <count>1</count>\\n            <name>移动</name>\\n            <code>cmcc</code>\\n            <country>cn</country>\\n        </EnsRegionIdCount>\\n        <EnsRegionIdCount>\\n            <count>1</count>\\n            <name>多线</name>\\n            <code>multiCarrier</code>\\n            <country>cn</country>\\n        </EnsRegionIdCount>\\n        <NetDistrictName>西南</NetDistrictName>\\n    </EnsNetDistrict>\\n</EnsNetDistricts>\\n<RequestId>F3B261DD-3858-4D3C-877D-303ADF374600</RequestId>\\n<Code>0</Code>","errorExample":""}]',
      'title' => '查询可创建边缘服务资源地域',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEnsRegionIdResource' => 
    array (
      'summary' => '调用DescribeEnsRegionIdResource查询节点资源情况。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '起始时间点。按照ISO8601标准表示，并使用UTC +0时间，格式为yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => true,
            'example' => '2020-06-16T06:33:15Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间点。按照ISO8601标准表示，并使用UTC +0时间，格式为yyyy-MM-ddTHH:mm:ss。',
            'type' => 'string',
            'required' => true,
            'example' => '2020-06-16T06:33:15',
          ),
        ),
        2 => 
        array (
          'name' => 'OrderByParams',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升序：asc，降序：desc。目前只支持以下三个参数：
- InstanceCount：desc。
- Area：asc。
- InternetBandwidth：asc。',
            'type' => 'string',
            'required' => false,
            'example' => 'InstanceCount：desc',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例状态列表的页码，起始值为：**1**，默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值为**100** 行，默认值：**10**。',
            'type' => 'string',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商，取值如下所示：
- cmcc：移动。
- telecom：电信。
- unicom：联通。
- multiCarrier：多线。',
            'type' => 'string',
            'required' => false,
            'example' => 'cmcc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'EnsRegionIdResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EnsRegionIdResource' => 
                  array (
                    'description' => '返回数据列表，详见返回示例（JSON格式）EnsRegionIdResources对象数组。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Area' => 
                        array (
                          'description' => '区域，取值：West。',
                          'type' => 'string',
                          'example' => 'West',
                        ),
                        'AreaCode' => 
                        array (
                          'description' => '区域的Code',
                          'type' => 'string',
                          'example' => '300100',
                        ),
                        'BizDate' => 
                        array (
                          'description' => '业务处理日期。',
                          'type' => 'string',
                          'example' => '2019-10-30',
                        ),
                        'EnsRegionId' => 
                        array (
                          'description' => '节点。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou-telecom',
                        ),
                        'EnsRegionIdName' => 
                        array (
                          'description' => '节点名称',
                          'type' => 'string',
                          'example' => '南京移动',
                        ),
                        'InstanceCount' => 
                        array (
                          'description' => '实例数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'InternetBandwidth' => 
                        array (
                          'description' => '实例的公网带宽，单位：Bits/s。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '100',
                        ),
                        'Isp' => 
                        array (
                          'description' => '运营商，取值如下所示：
- cmcc：移动。
- unicom：联通。
- telecom：电信。
- multiCarrier：多线。',
                          'type' => 'string',
                          'example' => 'cmcc',
                        ),
                        'VCpu' => 
                        array (
                          'description' => 'VCpu数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '输入时设置的每页行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '476600B1-C9E2-4245-A26F-DC7EA8071425',
              ),
              'TotalCount' => 
              array (
                'description' => '查询到的数据总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '58',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          2 => 
          array (
            'errorCode' => 'InsufficientEipCapacity',
            'errorMessage' => 'Insufficient EIP inventory under the specified territory.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"EnsRegionIdResources\\": {\\n    \\"EnsRegionIdResource\\": [\\n      {\\n        \\"Area\\": \\"West\\",\\n        \\"AreaCode\\": \\"300100\\",\\n        \\"BizDate\\": \\"2019-10-30\\",\\n        \\"EnsRegionId\\": \\"cn-hangzhou-telecom\\",\\n        \\"EnsRegionIdName\\": \\"南京移动\\",\\n        \\"InstanceCount\\": 10,\\n        \\"InternetBandwidth\\": 100,\\n        \\"Isp\\": \\"cmcc\\",\\n        \\"VCpu\\": 10\\n      }\\n    ]\\n  },\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"476600B1-C9E2-4245-A26F-DC7EA8071425\\",\\n  \\"TotalCount\\": 58\\n}","errorExample":""},{"type":"xml","example":"<DescribeEnsRegionIdResourceResponse>\\n<EnsRegionIdResources>\\n    <EnsRegionIdResource>\\n        <Area>SouthWest</Area>\\n        <Isp>cmcc</Isp>\\n        <EnsRegionId>cn-hangzhou-telecom</EnsRegionId>\\n        <VCpu>100</VCpu>\\n        <InternetBandwidth>500</InternetBandwidth>\\n        <BizDate>2020-03-08</BizDate>\\n    </EnsRegionIdResource>\\n</EnsRegionIdResources>\\n<RequestId>476600B1-C9E2-4245-A26F-DC7EA8071425</RequestId>\\n</DescribeEnsRegionIdResourceResponse>","errorExample":""}]',
      'title' => '查询节点资源详情',
      'description' => '****',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEnsRegions' => 
    array (
      'summary' => '调用DescribeEnsRegions查询您可以使用的ENS节点列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点（地域）ID。

默认查询所有可用节点ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-dalian-unicom',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '业务码。调用成功返回0，失败返回错误码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'EnsRegions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EnsRegions' => 
                  array (
                    'description' => '地域信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Area' => 
                        array (
                          'description' => '地域代码。',
                          'type' => 'string',
                          'example' => 'NorthEastChina',
                        ),
                        'EnName' => 
                        array (
                          'description' => '节点英文名称。',
                          'type' => 'string',
                          'example' => 'NorthChina',
                        ),
                        'EnsRegionId' => 
                        array (
                          'description' => '节点ID。',
                          'type' => 'string',
                          'example' => 'cn-dalian-unicom',
                        ),
                        'Name' => 
                        array (
                          'description' => '节点中文名称。',
                          'type' => 'string',
                          'example' => '大连联通',
                        ),
                        'Province' => 
                        array (
                          'description' => '所在省份。',
                          'type' => 'string',
                          'example' => '辽宁省',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": 0,\\n  \\"EnsRegions\\": {\\n    \\"EnsRegions\\": [\\n      {\\n        \\"Area\\": \\"NorthEastChina\\",\\n        \\"EnName\\": \\"NorthChina\\",\\n        \\"EnsRegionId\\": \\"cn-dalian-unicom\\",\\n        \\"Name\\": \\"大连联通\\",\\n        \\"Province\\": \\"辽宁省\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeEnsRegionsResponse>\\n    <Code>0</Code>\\n    <EnsRegions>\\n        <Area>NorthEastChina</Area>\\n        <EnName>NorthChina</EnName>\\n        <EnsRegionId>cn-dalian-unicom</EnsRegionId>\\n        <Name>大连联通</Name>\\n        <Province>辽宁省</Province>\\n    </EnsRegions>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n</DescribeEnsRegionsResponse>","errorExample":""}]',
      'title' => '查询ENS节点列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEpnBandWidthData' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS节点ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-beijing-cmcc',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-5sg1owx0g4ojy66ab2tez77r2',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取数据的起始时间点。

- 按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。

- 如果秒不是00，则自动取为下一分钟开始时。',
            'type' => 'string',
            'required' => true,
            'example' => '2021-12-15T16:00:00Z',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取数据的结束时间点。

- 按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。

- 如果秒不是00，则自动取为下一分钟开始时。',
            'type' => 'string',
            'required' => true,
            'example' => '2021-12-16T16:00:00Z',
          ),
        ),
        4 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取监控数据的精度，取值：300（默认值）、1200、3600、14400，单位：秒。',
            'type' => 'string',
            'required' => true,
            'example' => '300',
          ),
        ),
        5 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商，取值如下所示：
- cmcc：移动。
- telecom：电信。
- unicom：联通。
- multiCarrier：多线。',
            'type' => 'string',
            'required' => false,
            'example' => 'cmcc',
          ),
        ),
        6 => 
        array (
          'name' => 'NetworkingModel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组网模式。取值：
- **SpeedUp**：智能加速（外网）。
- **Connection**：内网联通（内网模式）。
- **SpeedUpAndConnection**：智能加速及内网联通（内网模式）。',
            'type' => 'string',
            'required' => false,
            'example' => 'SpeedUp',
            'enum' => 
            array (
              0 => 'SpeedUp',
              1 => 'Connection',
              2 => 'SpeedUpAndConnection',
            ),
          ),
        ),
        7 => 
        array (
          'name' => 'EPNInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边边网络实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'epn-20200825134537VyK81T',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'MonitorData' => 
              array (
                'description' => '实例的监控数据集合。',
                'type' => 'object',
                'properties' => 
                array (
                  'BandWidthMonitorData' => 
                  array (
                    'description' => '带宽监控数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '带宽监控数据。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DownBandWidth' => 
                        array (
                          'description' => '下行带宽，单位：bit/s。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        'InternetRX' => 
                        array (
                          'description' => '实例接收的公网数据流量，单位：bits。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        'InternetTX' => 
                        array (
                          'description' => '实例发送的公网数据流量，单位：bits。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        'TimeStamp' => 
                        array (
                          'description' => '查询监控信息的时间戳，UTC时间，格式为yyyy-MM-DDThh:mm:ssZ。',
                          'type' => 'string',
                          'example' => '2019-10-12T05:45:00Z',
                        ),
                        'UpBandWidth' => 
                        array (
                          'description' => '上行带宽，单位：bit/s。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                  'MaxDownBandWidth' => 
                  array (
                    'description' => '查询时间段内最大下行带宽，单位：bit/s。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '16817468',
                  ),
                  'MaxUpBandWidth' => 
                  array (
                    'description' => '查询时间范围内最大上行带宽，单位：bit/s。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '231008',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1D289DAA-F6DA-5FC4-AE47-F5C8B6277BFC',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'USERNOTFOUND',
            'errorMessage' => 'The user is not in ens-controller.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"MonitorData\\": {\\n    \\"BandWidthMonitorData\\": [\\n      {\\n        \\"DownBandWidth\\": 0,\\n        \\"InternetRX\\": 0,\\n        \\"InternetTX\\": 0,\\n        \\"TimeStamp\\": \\"2019-10-12T05:45:00Z\\",\\n        \\"UpBandWidth\\": 0\\n      }\\n    ],\\n    \\"MaxDownBandWidth\\": 16817468,\\n    \\"MaxUpBandWidth\\": 231008\\n  },\\n  \\"RequestId\\": \\"1D289DAA-F6DA-5FC4-AE47-F5C8B6277BFC\\"\\n}","type":"json"}]',
      'title' => '查询边边网络带宽用量',
      'summary' => '调用DescribeEpnBandWidthData查询边边网络带宽用量。',
    ),
    'DescribeEpnBandwitdhByInternetChargeType' => 
    array (
      'summary' => '调用DescribeEpnBandwitdhByInternetChargeType查询边边网络带宽时间段内的计费方式的值。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取数据的起始时间点。

- 按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。

- 如果秒不是00，则自动取为下一分钟开始时。',
            'type' => 'string',
            'required' => true,
            'example' => '2021-12-02T16:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取数据的结束时间点。

- 按照ISO8601标准表示，并需要使用UTC时间，格式为yyyy-MM-ddTHH:mm:ssZ。

- 如果秒不是00，则自动取为下一分钟开始时。',
            'type' => 'string',
            'required' => true,
            'example' => '2021-12-06T15:59:59Z',
          ),
        ),
        2 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '运营商，取值如下所示：
- cmcc：移动。
- telecom：电信。
- unicom：联通。
- multiCarrier：多线。',
            'type' => 'string',
            'required' => false,
            'example' => 'telecom',
          ),
        ),
        3 => 
        array (
          'name' => 'EnsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ENS的节点ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-changsha-unicom',
          ),
        ),
        4 => 
        array (
          'name' => 'NetworkingModel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组网模式。取值：
- **SpeedUp**：智能加速（外网）。
- **Connection**：内网联通（内网模式）。
- **SpeedUpAndConnection**：智能加速及内网联通（内网模式）。',
            'type' => 'string',
            'required' => false,
            'example' => 'Connection',
            'enum' => 
            array (
              0 => 'SpeedUp',
              1 => 'Connection',
              2 => 'SpeedUpAndConnection',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'BandwidthValue' => 
              array (
                'description' => '带宽计费值，单bit/s',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '123',
              ),
              'InternetChargeType' => 
              array (
                'description' => '网络计费类型，取值：
- BandwidthByDay：日峰值带宽。
- 95BandwidthByMonth：月95峰值带宽。
- PayByBandwidth4thMonth：月第四峰值带宽。
- PayByBandwidth：固定规格带宽。

只能有一种计费方式，如果已存在计费方式，则新值默认无效，以已存在的为准。',
                'type' => 'string',
                'example' => 'BandwidthByDay',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '216BCED0-E055-5DDB-8E06-4084A62A4A44',
              ),
              'TimeStamp' => 
              array (
                'description' => '查询监控信息的时间戳。按照ISO8601标准表示，并使用UTC +0时间，格式为yyyy-MM-ddTHH:mm:ssZ。',
                'type' => 'string',
                'example' => '2019-10-12T05:45:00Z',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          2 => 
          array (
            'errorCode' => 'InsufficientEipCapacity',
            'errorMessage' => 'Insufficient EIP inventory under the specified territory.',
          ),
          3 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"BandwidthValue\\": 123,\\n  \\"InternetChargeType\\": \\"BandwidthByDay\\",\\n  \\"RequestId\\": \\"216BCED0-E055-5DDB-8E06-4084A62A4A44\\",\\n  \\"TimeStamp\\": \\"2019-10-12T05:45:00Z\\"\\n}","type":"json"}]',
      'title' => '查询边边网络计费值',
    ),
    'DescribeEpnInstanceAttribute' => 
    array (
      'summary' => '调用DescribeEpnInstanceAttribute查询边边通信组网信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EPNInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边边网络实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'epn-xxxx',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ConfVersions' => 
              array (
                'description' => '边边网络配置信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ConfVersion' => 
                    array (
                      'description' => '版本号。',
                      'type' => 'string',
                      'example' => '2017-10-11',
                    ),
                    'EnsRegionId' => 
                    array (
                      'description' => '节点ID。',
                      'type' => 'string',
                      'example' => 'cn-chengdu-telecom',
                    ),
                  ),
                ),
              ),
              'EPNInstanceId' => 
              array (
                'description' => '边边网络实例ID。',
                'type' => 'string',
                'example' => 'epn-xxxx',
              ),
              'EPNInstanceName' => 
              array (
                'description' => '边边网络实例名称。',
                'type' => 'string',
                'example' => 'epn-test',
              ),
              'Instances' => 
              array (
                'description' => '实例信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'EnsRegionId' => 
                    array (
                      'description' => '节点ID。',
                      'type' => 'string',
                      'example' => 'cn-chengdu-telecom-4',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'epn-xxx',
                    ),
                    'InstanceName' => 
                    array (
                      'description' => '实例名称。',
                      'type' => 'string',
                      'example' => 'epn-test',
                    ),
                    'Isp' => 
                    array (
                      'description' => '运营商取值：

- cmcc：移动。
- unicom：联通。
- telecom：电信。',
                      'type' => 'string',
                      'example' => 'cmcc',
                    ),
                    'PrivateIpAddress' => 
                    array (
                      'description' => '私网IP。',
                      'type' => 'string',
                      'example' => '192.168.1.12',
                    ),
                    'PublicIpAddress' => 
                    array (
                      'description' => '公网IP。',
                      'type' => 'string',
                      'example' => '20.3.XX.XX',
                    ),
                    'Status' => 
                    array (
                      'description' => '实例状态如下所示：

- Running：运行中。
- Stopped：已停止。
- Expired：已过期。',
                      'type' => 'string',
                      'example' => 'Running',
                    ),
                  ),
                ),
              ),
              'NetworkingModel' => 
              array (
                'description' => '组网模式，取值：

- 智能加速（外网）：SpeedUp。
- 内网联通（内网模式）：Connection。
- 智能加速及内网联通（内网模式）：SpeedUpAndConnection。',
                'type' => 'string',
                'example' => 'SpeedUp',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'VSwitches' => 
              array (
                'description' => '交换机信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CidrBlock' => 
                    array (
                      'description' => 'Cidr地址段。',
                      'type' => 'string',
                      'example' => '10.0.0.1/24',
                    ),
                    'EnsRegionId' => 
                    array (
                      'description' => '节点ID。',
                      'type' => 'string',
                      'example' => '	 cn-chengdu-telecom-4',
                    ),
                    'VSwitchId' => 
                    array (
                      'description' => '交换机ID。',
                      'type' => 'string',
                      'example' => 'vs-xxxx',
                    ),
                    'VSwitchName' => 
                    array (
                      'description' => '交换机名称。',
                      'type' => 'string',
                      'example' => 'vs-test',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ConfVersions\\": [\\n    {\\n      \\"ConfVersion\\": \\"2017-10-11\\",\\n      \\"EnsRegionId\\": \\"cn-chengdu-telecom\\"\\n    }\\n  ],\\n  \\"EPNInstanceId\\": \\"epn-xxxx\\",\\n  \\"EPNInstanceName\\": \\"epn-test\\",\\n  \\"Instances\\": [\\n    {\\n      \\"EnsRegionId\\": \\"cn-chengdu-telecom-4\\",\\n      \\"InstanceId\\": \\"epn-xxx\\",\\n      \\"InstanceName\\": \\"epn-test\\",\\n      \\"Isp\\": \\"cmcc\\",\\n      \\"PrivateIpAddress\\": \\"192.168.1.12\\",\\n      \\"PublicIpAddress\\": \\"20.3.XX.XX\\",\\n      \\"Status\\": \\"Running\\"\\n    }\\n  ],\\n  \\"NetworkingModel\\": \\"SpeedUp\\",\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"VSwitches\\": [\\n    {\\n      \\"CidrBlock\\": \\"10.0.0.1/24\\",\\n      \\"EnsRegionId\\": \\"\\\\t cn-chengdu-telecom-4\\",\\n      \\"VSwitchId\\": \\"vs-xxxx\\",\\n      \\"VSwitchName\\": \\"vs-test\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeEpnInstanceAttributeResponse>\\n    <ConfVersions>\\n        <ConfVersion>2017-10-11</ConfVersion>\\n        <EnsRegionId>cn-chengdu-telecom</EnsRegionId>\\n    </ConfVersions>\\n    <EPNInstanceId>epn-xxxx</EPNInstanceId>\\n    <EPNInstanceName>epn-test</EPNInstanceName>\\n    <Instances>\\n        <EnsRegionId>cn-chengdu-telecom-4</EnsRegionId>\\n        <InstanceId>epn-xxx</InstanceId>\\n        <InstanceName>epn-test</InstanceName>\\n        <Isp>cmcc</Isp>\\n        <PrivateIpAddress>192.168.1.12</PrivateIpAddress>\\n        <PublicIpAddress>20.3.XX.XX</PublicIpAddress>\\n        <Status>Running</Status>\\n    </Instances>\\n    <NetworkingModel>SpeedUp</NetworkingModel>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <VSwitches>\\n        <CidrBlock>10.0.0.1/24</CidrBlock>\\n        <EnsRegionId>\\t cn-chengdu-telecom-4</EnsRegionId>\\n        <VSwitchId>vs-xxxx</VSwitchId>\\n        <VSwitchName>vs-test</VSwitchName>\\n    </VSwitches>\\n</DescribeEpnInstanceAttributeResponse>","errorExample":""}]',
      'title' => '查询边边通组网信息',
      'description' => '内网模式下instaces为空，公网模式下vswitch为空。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEpnInstances' => 
    array (
      'summary' => '调用DescribeEpnInstances查询边边网络实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EPNInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '版本号。',
            'type' => 'string',
            'required' => false,
            'example' => '2017-11-10',
          ),
        ),
        1 => 
        array (
          'name' => 'EPNInstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边边网络实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'testEPNInstanceName',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'EPNInstances' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EPNInstance' => 
                  array (
                    'description' => '边边网络实例。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreationTime' => 
                        array (
                          'description' => '创建时间，UTC时间格式。',
                          'type' => 'string',
                          'example' => '2019-11-01T06:08:46Z',
                        ),
                        'EPNInstanceId' => 
                        array (
                          'description' => '边边网络实例ID。',
                          'type' => 'string',
                          'example' => 'epn****',
                        ),
                        'EPNInstanceName' => 
                        array (
                          'description' => '边边通信实例名称。',
                          'type' => 'string',
                          'example' => 'ens_test_epn',
                        ),
                        'EPNInstanceType' => 
                        array (
                          'description' => '边边通信：EdgeToEdge。',
                          'type' => 'string',
                          'example' => 'EdgeToEdge',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '结束时间，UTC时间格式。',
                          'type' => 'string',
                          'example' => '2019-11-01T06:08:46Z',
                        ),
                        'InternetMaxBandwidthOut' => 
                        array (
                          'description' => '上行限速带宽，单位Mbps。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '40',
                        ),
                        'ModifyTime' => 
                        array (
                          'description' => '修改时间，UTC时间格式。',
                          'type' => 'string',
                          'example' => '2019-11-01T06:08:46Z',
                        ),
                        'NetworkingModel' => 
                        array (
                          'description' => '组网模式，取值：

- 智能加速（外网）：SpeedUp。
- 内网联通（内网模式）：Connection。
- 智能加速及内网联通（内网模式）：SpeedUpAndConnection。',
                          'type' => 'string',
                          'example' => 'SpeedUp',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '开始时间，UTC时间格式。',
                          'type' => 'string',
                          'example' => '2019-11-01T06:08:46Z',
                        ),
                        'Status' => 
                        array (
                          'description' => '运行状态：
- Running：运行中。
- Excuting：执行中。
- Stopped：已停止。',
                          'type' => 'string',
                          'example' => 'Running',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '40',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A1707FC0-430C-423A-B624-284046B20399',
              ),
              'TotalCount' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"EPNInstances\\": {\\n    \\"EPNInstance\\": [\\n      {\\n        \\"CreationTime\\": \\"2019-11-01T06:08:46Z\\",\\n        \\"EPNInstanceId\\": \\"epn****\\",\\n        \\"EPNInstanceName\\": \\"ens_test_epn\\",\\n        \\"EPNInstanceType\\": \\"EdgeToEdge\\",\\n        \\"EndTime\\": \\"2019-11-01T06:08:46Z\\",\\n        \\"InternetMaxBandwidthOut\\": 40,\\n        \\"ModifyTime\\": \\"2019-11-01T06:08:46Z\\",\\n        \\"NetworkingModel\\": \\"SpeedUp\\",\\n        \\"StartTime\\": \\"2019-11-01T06:08:46Z\\",\\n        \\"Status\\": \\"Running\\"\\n      }\\n    ]\\n  },\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 40,\\n  \\"RequestId\\": \\"A1707FC0-430C-423A-B624-284046B20399\\",\\n  \\"TotalCount\\": 1\\n}","errorExample":""},{"type":"xml","example":"<TotalCount>1</TotalCount>\\n<EPNInstances>\\n    <EPNInstance>\\n        <Status>Running</Status>\\n        <EPNInstanceType>EdgeToEdge</EPNInstanceType>\\n        <ModifyTime>2019-11-01T06:08:46Z</ModifyTime>\\n        <InternetMaxBandwidthOut>40</InternetMaxBandwidthOut>\\n        <EndTime>2019-11-01T06:08:46Z</EndTime>\\n        <NetworkingModel>SpeedUp</NetworkingModel>\\n        <StartTime>2019-11-01T06:08:46Z</StartTime>\\n        <CreationTime>2019-11-01T06:08:46Z</CreationTime>\\n        <EPNInstanceId>epn****</EPNInstanceId>\\n        <EPNInstanceName>ens_test_epn</EPNInstanceName>\\n    </EPNInstance>\\n</EPNInstances>\\n<PageSize>40</PageSize>\\n<RequestId>A1707FC0-430C-423A-B624-284046B20399</RequestId>\\n<PageNumber>1</PageNumber>","errorExample":""}]',
      'title' => '查询边边网络实例',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeEpnMeasurementData' => 
    array (
      'summary' => '调用DescribeEpnMeasurementData获取用户边缘网络计量数据。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。使用utc时间表示，格式为yyyy-mm-ddthh:mm:ssz。',
            'type' => 'string',
            'required' => true,
            'example' => '2021-09-30T16:00:00Z',
          ),
        ),
        1 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，使用UTC时间格式，格式为yyyy-MM-ddTHH:mm:ssZ。',
            'type' => 'string',
            'required' => true,
            'example' => '2022-01-30T16:00:00Z',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'MeasurementDatas' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'MeasurementData' => 
                  array (
                    'description' => '计量数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '计量数据。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BandWidthFeeDatas' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'BandWidthFeeData' => 
                            array (
                              'description' => '带宽数据。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '带宽数据。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'CostCode' => 
                                  array (
                                    'description' => '计费项代码。',
                                    'type' => 'string',
                                    'example' => 'cn-cmcc-1',
                                  ),
                                  'CostName' => 
                                  array (
                                    'description' => '计费项名称。',
                                    'type' => 'string',
                                    'example' => '北上广移动',
                                  ),
                                  'CostType' => 
                                  array (
                                    'description' => '计费类型
* SpeedUp：智能加速带宽
* IntranetConnection：普通内网带宽',
                                    'type' => 'string',
                                    'example' => 'SpeedUp',
                                  ),
                                  'CostVal' => 
                                  array (
                                    'description' => '计费项数值。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '16486',
                                  ),
                                  'IspLine' => 
                                  array (
                                    'description' => '此参数暂不使用。',
                                    'type' => 'string',
                                    'example' => '此参数暂不使用。',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'ChargeModel' => 
                        array (
                          'description' => '计费类型。
- ChargeByUnified：统一计费。

- ChargeByGrade：分档计费。',
                          'type' => 'string',
                          'example' => 'ChargeByGrade',
                        ),
                        'CostCycle' => 
                        array (
                          'description' => '消费周期。',
                          'type' => 'string',
                          'example' => '2019-07-30',
                        ),
                        'CostEndTime' => 
                        array (
                          'description' => '消费结束时间。',
                          'type' => 'string',
                          'example' => '2019-07-30T16:00:00Z',
                        ),
                        'CostStartTime' => 
                        array (
                          'description' => '消费开始时间。',
                          'type' => 'string',
                          'example' => '2019-07-29T16:00:00Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A6328C33-6304-5291-8641-0A00A99D0DD0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameters that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotExists',
            'errorMessage' => 'The user have no instances.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"MeasurementDatas\\": {\\n    \\"MeasurementData\\": [\\n      {\\n        \\"BandWidthFeeDatas\\": {\\n          \\"BandWidthFeeData\\": [\\n            {\\n              \\"CostCode\\": \\"cn-cmcc-1\\",\\n              \\"CostName\\": \\"北上广移动\\",\\n              \\"CostType\\": \\"SpeedUp\\",\\n              \\"CostVal\\": 16486,\\n              \\"IspLine\\": \\"此参数暂不使用。\\"\\n            }\\n          ]\\n        },\\n        \\"ChargeModel\\": \\"ChargeByGrade\\",\\n        \\"CostCycle\\": \\"2019-07-30\\",\\n        \\"CostEndTime\\": \\"2019-07-30T16:00:00Z\\",\\n        \\"CostStartTime\\": \\"2019-07-29T16:00:00Z\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"A6328C33-6304-5291-8641-0A00A99D0DD0\\"\\n}","type":"json"}]',
      'title' => '获取用户边缘网络计量数据',
    ),
    'JoinPublicIpsToEpnInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EPNInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边边网络实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'epn-xxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceInfos',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要添加的公网实例信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'InstanceInfos=[{"PublicIpAddress":"2.230.XX.XX"},{"PublicIpAddress":"2.230.XX.XX"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","errorExample":""},{"type":"xml","example":"<JoinPublicIpsToEpnInstanceResponse>\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</JoinPublicIpsToEpnInstanceResponse>","errorExample":""}]',
      'title' => '公网实例组网',
      'summary' => '调用JoinPublicIpsToEpnInstance添加公网实例组网，仅公网模式可调用。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'JoinVSwitchesToEpnInstance' => 
    array (
      'summary' => '调用JoinVSwitchesToEpnInstance进行组网。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EPNInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边边通信实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'epn-xxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'VSwitchesInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要添加的内网组网信息。',
            'type' => 'string',
            'required' => true,
            'example' => '[{"VSwitchId":"vs-ixxxx"},{"VSwitchId":"vs-ixxxx"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          5 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","errorExample":""},{"type":"xml","example":"<JoinVSwitchesToEpnInstanceResponse>\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</JoinVSwitchesToEpnInstanceResponse>","errorExample":""}]',
      'title' => '进行组网',
      'description' => '对内网联通，内网联通及智能加速这两种内网模式来说，vSwitch下的实例自生效，不需要再手动添加实例。对智能加速这种公网模式来说，只需要再调用接口将实例添加到公网模式实例信息下即可。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyEpnInstance' => 
    array (
      'summary' => '调用ModifyEpnInstance修改边边通信实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EPNInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边边网络实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'epn-****',
          ),
        ),
        1 => 
        array (
          'name' => 'EPNInstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边边网络实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'ens_test_epn',
          ),
        ),
        2 => 
        array (
          'name' => 'NetworkingModel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组网模式，取值：
- **SpeedUp**：智能加速（外网）。
- **Connection**：内网联通（内网模式）。
- **SpeedUpAndConnection**：智能加速及内网联通（内网模式）。

> 内网模式只能在**Connection**和**SpeedUpAndConnection**之间进行切换。',
            'type' => 'string',
            'required' => false,
            'example' => 'SpeedUp',
            'enum' => 
            array (
              0 => 'SpeedUp',
              1 => 'Connection',
              2 => 'SpeedUpAndConnection',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'InternetMaxBandwidthOut',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '公网出带宽最大值，单位为Mbit/s。取值范围：1Mbit/s～100Mbit/s。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          5 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyEpnInstanceResponse>\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</ModifyEpnInstanceResponse>","errorExample":""}]',
      'title' => '修改边边通信实例',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RemovePublicIpsFromEpnInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EPNInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边边通信实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'epn-xxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceInfos',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的公网IP信息。',
            'type' => 'string',
            'required' => true,
            'example' => '[{"PublicIpAddress":"2.230.XX.XX"},{"PublicIpAddress":"2.230.XX.XX"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E	 请求ID。',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\\\t 请求ID。\\"\\n}","errorExample":""},{"type":"xml","example":"<RemovePublicIpsFromEpnInstanceResponse>\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</RemovePublicIpsFromEpnInstanceResponse>","errorExample":""}]',
      'title' => '删除公网组网下的实例',
      'summary' => '调用RemovePublicIpsFromEpnInstance删除公网组网下的实例。',
    ),
    'RemoveVSwitchesFromEpnInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EPNInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边边通信实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'epn-****',
          ),
        ),
        1 => 
        array (
          'name' => 'VSwitchesInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的内网组网信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'VSwitchesInfo=[{"VSwitchId":"vs-ixxxx"},{"VSwitchId":"vs-ixxxx"}]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CEF72CEB-54B6-4AE8-B225-F876FF7BA984',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CEF72CEB-54B6-4AE8-B225-F876FF7BA984\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveVSwitchesFromEpnInstanceResponse>\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</RemoveVSwitchesFromEpnInstanceResponse>","errorExample":""}]',
      'title' => '删除组网信息',
      'summary' => '调用RemoveVSwitchesFromEpnInstance进行组网信息删除，针对内网有效。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StartEpnInstance' => 
    array (
      'summary' => '调用StartEpnInstance启动边边通信实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EPNInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边边网络实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'epn-****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","errorExample":""},{"type":"xml","example":"<StartEpnInstanceResponse>\\n<RequestId>CEF72CEB-54B6-4AE8-B225-F876FF7BA984</RequestId>\\n</StartEpnInstanceResponse>","errorExample":""}]',
      'title' => '启动边边通信实例',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'StopEpnInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'EPNInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 边边网络实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'epn-20201014152822q2S9tQ',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter that is mandatory for processing this request is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The errorMessage is %s. Please check it again.',
          ),
          4 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while calling the API.',
          ),
          5 => 
          array (
            'errorCode' => 'CallInterface',
            'errorMessage' => 'Call Interface Happen Error.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\"\\n}","type":"json"}]',
      'title' => '停止边边通信实例',
      'summary' => '调用StopEpnInstance停止边边通信实例。',
    ),
    'DescribeEnsResourceUsage' => 
    array (
      'summary' => '调用DescribeEnsResourceUsage进行ENS查询虚机、磁盘、网络用量汇总。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ExpiredStartTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'vm实例使用结束时间查询开始范围，格式： yyyy-MM-dd或yyyy-MM-dd HH:mm:ss',
            'description' => 'vm实例使用结束时间查询开始范围，格式： yyyy-MM-dd或yyyy-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => false,
            'example' => '2018-06-15T09:07:23Z',
          ),
        ),
        1 => 
        array (
          'name' => 'ExpiredEndTime',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'vm实例使用结束时间查询结束范围，，格式： yyyy-MM-dd或yyyy-MM-dd HH:mm:ss',
            'description' => 'vm实例使用结束时间查询结束范围，格式： yyyy-MM-dd或yyyy-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => false,
            'example' => '2018-06-15T09:07:23Z',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E	 请求ID。',
              ),
              'EnsResourceUsage' => 
              array (
                'description' => '资源使用量数据。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '资源使用量数据。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ServiceType' => 
                    array (
                      'description' => '服务类型：
- 1：预付费实例。
- 2：边缘服务实例。
- 3：后付费实例。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                    'InstanceCount' => 
                    array (
                      'description' => '实例数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '2',
                    ),
                    'CpuSum' => 
                    array (
                      'description' => 'cpu使用量，单位：核。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '2',
                    ),
                    'GpuSum' => 
                    array (
                      'description' => 'gpu卡个数。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '6',
                    ),
                    'DownCount' => 
                    array (
                      'description' => '关机的虚机实例数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '7',
                    ),
                    'ExpiredCount' => 
                    array (
                      'description' => '过期的虚机实例数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'ExpiringCount' => 
                    array (
                      'description' => '即将过期的虚机实例数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'RunningCount' => 
                    array (
                      'description' => '运行中实例的数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '19',
                    ),
                    'DiskCount' => 
                    array (
                      'description' => '数据盘数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '4',
                    ),
                    'StorageSum' => 
                    array (
                      'description' => '磁盘存储总量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '5000',
                    ),
                    'ComputeResourceCount' => 
                    array (
                      'description' => '边缘服务数量，只有ServiceType=2的时候有数据。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '2',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'An error occurred while call the API.',
          ),
          1 => 
          array (
            'errorCode' => 'Invalid%s',
            'errorMessage' => 'The specified parameter %s is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Missing%s',
            'errorMessage' => 'You must specify the parameter %s.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\\\t 请求ID。\\",\\n  \\"EnsResourceUsage\\": [\\n    {\\n      \\"ServiceType\\": \\"1\\",\\n      \\"InstanceCount\\": 2,\\n      \\"CpuSum\\": 2,\\n      \\"GpuSum\\": 6,\\n      \\"DownCount\\": 7,\\n      \\"ExpiredCount\\": 1,\\n      \\"ExpiringCount\\": 0,\\n      \\"RunningCount\\": 19,\\n      \\"DiskCount\\": 4,\\n      \\"StorageSum\\": 5000,\\n      \\"ComputeResourceCount\\": 2\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询资源用量',
    ),
    'CreateSDG' => 
    array (
      'summary' => '调用CreateSDG在AIC实例上创建SDG。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'AIC实例ID。可以通过调用[DescribeARMServerInstances](~~DescribeARMServerInstances~~)获取InstanceId值。',
            'type' => 'string',
            'required' => true,
            'example' => 'aic-xxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'Size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SDG最大容量，单位GB。
>- 为了节约成本，建议按需评估。
>- 如果是首次创建SDG，**Size**为必填参数。
>- 后续数据量增大时可传递新的**Size**进行扩容。如果**Size**不为空，且大于原有SDG的**Size**值，则表示将该SDG对应的原始云盘扩容到当前**Size**大小。如果**Size**为空，或填入的**Size**小于原有SDG的**Szie**值，系统将不做处理。',
            'type' => 'string',
            'required' => false,
            'example' => '20',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SDG的描述信息。
> 建议详细填写，以便后续查询。',
            'type' => 'string',
            'required' => false,
            'example' => '测试SDG',
          ),
        ),
        3 => 
        array (
          'name' => 'FromSDGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '已有SDG的ID。
> - 如果为首次创建SDG，**FromSDGId**则为空。
>- 如果**FromSDGId**非法或查询不到对应的原始云盘，则报错。
>- 如果**FromSDGId**不为空，则表示非首次创建SDG，对已有SDG进行操作。',
            'type' => 'string',
            'required' => false,
            'example' => 'sdg-xxxxx',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E',
              ),
              'SDGId' => 
              array (
                'description' => '生成SDG的ID。',
                'type' => 'string',
                'example' => 'sdg-xxxx',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Interface.Call.Error',
            'errorMessage' => 'The interface call error',
          ),
          1 => 
          array (
            'errorCode' => 'Interface.Call.Failed',
            'errorMessage' => '%s.',
          ),
          2 => 
          array (
            'errorCode' => 'Parameter.Invalid',
            'errorMessage' => 'The parameter is invalid. Please check your parameters and try it again.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\",\\n  \\"SDGId\\": \\"sdg-xxxx\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateSDGResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <SDGId>sdg-xxxx</SDGId>\\n</CreateSDGResponse>","errorExample":""}]',
      'title' => '创建SDG',
      'description' => '数据共享集（SDG）可以看作成虚拟设备的数据分区镜像，用户通过操作将某个虚拟设备数据分区保存为SDG。制作好的SDG可以部署在其他虚拟设备的数据分区，实现数据快速分发和应用。SDG相关接口使用流程如下：

- 用户调用[CreateSDG](~~CreateSDG~~)接口创建一个SDG ，该SDG会绑定到AIC实例A（InstanceId ）上。创建成功后，会有一个空白云盘（也称原始云盘）挂载到设备A（InstanceId）上，用于SDG的制作。

- 用户在AIC实例A（InstanceId）上进行安装应用，下发文件等所需操作。

- 调用[SaveSDG](~~SaveSDG~~)将AIC实例A中的数据盘保存为SDG A。

- 调用[DeploySDG](~~DeploySDG~~)将SDG A部署到其他AIC实例B中。该过程为异步执行，通过[DescribeARMServerInstances](~~DescribeARMServerInstances~~)可查询到AIC实例B的状态。当状态恢复为success后可以认为AIC实例B可用，此时AIC实例B内的应用与AIC实例A完全一致。',
    ),
    'DeleteSDG' => 
    array (
      'summary' => '调用DeleteSDG删除SDG。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SDGId',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '删除SDG列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '删除指定的SDG。支持批量删除，最多一次删除10个SDG。',
              'type' => 'string',
              'required' => false,
              'example' => 'sdg-xxx',
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '86A6D421-A0C7-4C01-8648-47377CA6A2CE',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Interface.Call.Error',
            'errorMessage' => 'The interface call error',
          ),
          1 => 
          array (
            'errorCode' => 'Interface.Call.Failed',
            'errorMessage' => '%s.',
          ),
          2 => 
          array (
            'errorCode' => 'Parameter.Invalid',
            'errorMessage' => 'The parameter is invalid. Please check your parameters and try it again.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"86A6D421-A0C7-4C01-8648-47377CA6A2CE\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteSDGResponse>\\n    <RequestId>86A6D421-A0C7-4C01-8648-47377CA6A2CE</RequestId>\\n</DeleteSDGResponse>","errorExample":""}]',
      'title' => '删除SDG',
      'description' => '若原始云盘对应的SDG全部被删除，则原始云盘会被自动清理。',
    ),
    'RemoveSDG' => 
    array (
      'summary' => '调用 RemoveSDG移除部署的SDG，恢复本地存储。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'AIC实例ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'AIC实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => '["aic-1", "aic-2", "aic-3"]',
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6666C5A5-75ED-422E-A022-7121FA18C968',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Parameter.Invalid',
            'errorMessage' => 'The parameter is invalid.Please check your parameters and try it again.',
          ),
          1 => 
          array (
            'errorCode' => 'Interface.Call.Error',
            'errorMessage' => 'The interface call error',
          ),
          2 => 
          array (
            'errorCode' => 'Interface.Call.Failed',
            'errorMessage' => '%s.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6666C5A5-75ED-422E-A022-7121FA18C968\\"\\n}","type":"json"}]',
      'title' => '移除SDG',
    ),
    'DeploySDG' => 
    array (
      'summary' => '调用DeploySDG部署SDG。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '要部署SDG的设备资源ID列表。支持批量部署，最多一次部署100个Instance。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要部署SDG的设备资源ID列表。支持批量部署，最多一次部署100个Instance。',
              'type' => 'string',
              'required' => false,
              'example' => '["aic-1",  "aic-2",  "aic-3"]',
            ),
            'required' => true,
          ),
        ),
        1 => 
        array (
          'name' => 'SDGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '使用SDGId创建云盘，并挂载到InstanceId。',
            'type' => 'string',
            'required' => true,
            'example' => 'sdg-xxxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'DeploymentType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SDG部署类型，包括：

- common：（默认）可读写部署，数据更新内容会写入云盘。
- overlay：读写分离部署，SDG内容只读，数据更新内容写入实例本地。',
            'type' => 'string',
            'required' => false,
            'example' => 'common',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A331CA96-3948-4BD2-B067-F6174F5C17EA',
              ),
              'Data' => 
              array (
                'description' => '返回Data对象。',
                'type' => 'object',
                'properties' => 
                array (
                  'Message' => 
                  array (
                    'description' => '响应消息，若成功请求为success。',
                    'type' => 'string',
                    'example' => 'success',
                  ),
                  'Result' => 
                  array (
                    'description' => '任务结果。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'FailedCount' => 
                      array (
                        'description' => '失败任务数。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '0',
                      ),
                      'FailedItems' => 
                      array (
                        'description' => '失败任务详情列表',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '失败任务详情',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ErrMessage' => 
                            array (
                              'description' => '错误信息。',
                              'type' => 'string',
                              'example' => 'sdg not found',
                            ),
                            'InstanceId' => 
                            array (
                              'description' => '实例ID。',
                              'type' => 'string',
                              'example' => 'aic-xxxxx-0',
                            ),
                          ),
                        ),
                      ),
                      'SuccessCount' => 
                      array (
                        'description' => '成功数量。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1',
                      ),
                    ),
                  ),
                  'Success' => 
                  array (
                    'description' => '请求是否全部成功。取值说明如下：

- true：全部成功。
- false：存在失败任务。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Interface.Call.Error',
            'errorMessage' => 'The interface call error',
          ),
          1 => 
          array (
            'errorCode' => 'Interface.Call.Failed',
            'errorMessage' => '%s.',
          ),
          2 => 
          array (
            'errorCode' => 'Parameter.Invalid',
            'errorMessage' => 'The parameter is invalid. Please check your parameters and try it again.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A331CA96-3948-4BD2-B067-F6174F5C17EA\\",\\n  \\"Data\\": {\\n    \\"Message\\": \\"success\\",\\n    \\"Result\\": {\\n      \\"FailedCount\\": 0,\\n      \\"FailedItems\\": [\\n        {\\n          \\"ErrMessage\\": \\"sdg not found\\",\\n          \\"InstanceId\\": \\"aic-xxxxx-0\\"\\n        }\\n      ],\\n      \\"SuccessCount\\": 1\\n    },\\n    \\"Success\\": true\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DeploySDGResponse>\\n    <RequestId>A331CA96-3948-4BD2-B067-F6174F5C17EA</RequestId>\\n</DeploySDGResponse>","errorExample":""}]',
      'title' => '部署SDG',
    ),
    'CopySDG' => 
    array (
      'summary' => '调用 CopySDG 跨节点复制SDG。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SDGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待复制的SDG的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sdg-xxx',
          ),
        ),
        1 => 
        array (
          'name' => 'DestinationRegionIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '目的节点列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '目的节点。',
              'type' => 'string',
              'required' => false,
              'example' => 'cn-foshan-4',
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'XXX-XXX-XXX',
              ),
              'Data' => 
              array (
                'description' => '返回Data对象。',
                'type' => 'object',
                'properties' => 
                array (
                  'Message' => 
                  array (
                    'description' => '响应消息，若成功请求为success。',
                    'type' => 'string',
                    'example' => 'success',
                  ),
                  'Result' => 
                  array (
                    'description' => '同步请求执行结果。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'FailedCount' => 
                      array (
                        'description' => '失败节点数。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '0',
                      ),
                      'FailedItems' => 
                      array (
                        'description' => '失败节点详情列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '失败节点详情。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ErrorMessage' => 
                            array (
                              'description' => '错误信息。',
                              'type' => 'string',
                              'example' => 'region not found',
                            ),
                            'DestinationRegionId' => 
                            array (
                              'description' => '目标节点ID。',
                              'type' => 'string',
                              'example' => 'cn-hangzhou-xxx',
                            ),
                          ),
                        ),
                      ),
                      'SuccessCount' => 
                      array (
                        'description' => '成功数。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1',
                      ),
                    ),
                  ),
                  'Success' => 
                  array (
                    'description' => '请求是否全部成功。取值说明如下：

- **true**：全部成功。
- **false**：存在失败任务。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Interface.Call.Error',
            'errorMessage' => 'The interface call error',
          ),
          1 => 
          array (
            'errorCode' => 'Interface.Call.Failed',
            'errorMessage' => '%s.',
          ),
          2 => 
          array (
            'errorCode' => 'Parameter.Invalid',
            'errorMessage' => 'The parameter is invalid. Please check your parameters and try it again.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"XXX-XXX-XXX\\",\\n  \\"Data\\": {\\n    \\"Message\\": \\"success\\",\\n    \\"Result\\": {\\n      \\"FailedCount\\": 0,\\n      \\"FailedItems\\": [\\n        {\\n          \\"ErrorMessage\\": \\"region not found\\",\\n          \\"DestinationRegionId\\": \\"cn-hangzhou-xxx\\"\\n        }\\n      ],\\n      \\"SuccessCount\\": 1\\n    },\\n    \\"Success\\": true\\n  }\\n}","type":"json"}]',
      'title' => '跨节点复制SDG',
    ),
    'SaveSDG' => 
    array (
      'summary' => '调用SaveSDG将指定设备的云盘保存为SDG。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SDGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待保存SDG的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'sdg-xxxx',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0003E8B-B930-4F59-ADC0-0E209A9012A8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Interface.Call.Error',
            'errorMessage' => 'The interface call error',
          ),
          1 => 
          array (
            'errorCode' => 'Interface.Call.Failed',
            'errorMessage' => '%s.',
          ),
          2 => 
          array (
            'errorCode' => 'Parameter.Invalid',
            'errorMessage' => 'The parameter is invalid. Please check your parameters and try it again.',
          ),
          3 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C0003E8B-B930-4F59-ADC0-0E209A9012A8\\"\\n}","errorExample":""},{"type":"xml","example":"<SaveSDGResponse>\\n    <RequestId>C0003E8B-B930-4F59-ADC0-0E209A9012A8</RequestId>\\n</SaveSDGResponse>","errorExample":""}]',
      'title' => '保存SDG',
    ),
    'DescribeSDGs' => 
    array (
      'summary' => '调用DescribeSDGs查询已创建的共享数据组信息。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SDGIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '指定查询若干SDG，默认查询全部。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '指定查询若干SDG，默认查询全部。',
              'type' => 'string',
              'required' => false,
              'example' => '["sdg-1", "sdg-2", "sdg-3"]',
            ),
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '指定查询若干Instance，默认查询全部。

> 若指定了**SDGIds**，同时指定了**InstanceIds**，则查询结果为上述两个条件的交集。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '指定查询若干Instance，默认查询全部。

> 若指定了**SDGIds**，同时指定了**InstanceIds**，则查询结果为上述两个条件的交集。',
              'type' => 'string',
              'required' => false,
              'example' => '["aic-1", "aic-2", "aic-3"]',
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3703C4AC-9396-458C-8F25-1D701334D309',
              ),
              'SDGs' => 
              array (
                'description' => 'SDG信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'SDG信息列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'AvaliableRegionIds' => 
                    array (
                      'description' => '可用节点列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '可用节点列表。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'CreationTime' => 
                          array (
                            'description' => '该节点内SDG的创建时间。',
                            'type' => 'string',
                            'example' => '2023-02-27 15:13:26',
                          ),
                          'RegionId' => 
                          array (
                            'description' => '节点ID。',
                            'type' => 'string',
                            'example' => 'cn-hangzhou-26',
                          ),
                          'SnapshotId' => 
                          array (
                            'description' => '快照ID。',
                            'type' => 'string',
                            'example' => 'mock-clone_snapshot_id',
                          ),
                          'Status' => 
                          array (
                            'description' => '该节点SDG的状态，包括：

- **sdg_making**：制作中。
- **sdg_saving**：保存中。
- **sdg_copying**：跨节点同步中。
- **failed**：制作失败。
- **success**：制作成功。',
                            'type' => 'string',
                            'example' => 'success',
                          ),
                        ),
                      ),
                    ),
                    'CreationInstanceId' => 
                    array (
                      'description' => '创建SDG的实例ID。',
                      'type' => 'string',
                      'example' => 'aic-5x20dyeos****',
                    ),
                    'CreationRegionId' => 
                    array (
                      'description' => '创建SDG的节点ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou-26',
                    ),
                    'CreationTime' => 
                    array (
                      'description' => 'SDG首次创建时间。',
                      'type' => 'string',
                      'example' => '2023-02-27 15:07:21',
                    ),
                    'DeployedInstanceIds' => 
                    array (
                      'description' => '部署状态信息列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '部署状态信息列表',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'CreationTime' => 
                          array (
                            'description' => 'SDG在该实例上的部署时间。',
                            'type' => 'string',
                            'example' => '2023-02-27 16:48:43',
                          ),
                          'InstanceId' => 
                          array (
                            'description' => '实例ID。',
                            'type' => 'string',
                            'example' => 'aic-5x20dyeos****',
                          ),
                          'Status' => 
                          array (
                            'description' => '部署状态，包括：

- **sdg_deploying**：部署中。
- **failed**：部署失败。
- **success**：部署成功。',
                            'type' => 'string',
                            'example' => 'sdg_deploying',
                          ),
                          'DeploymentType' => 
                          array (
                            'description' => 'SDG部署类型，包括：

- common: 普通部署
- overlay: 读写分离部署',
                            'type' => 'string',
                            'example' => 'overlay',
                          ),
                        ),
                      ),
                    ),
                    'Description' => 
                    array (
                      'description' => 'SDG的描述信息。',
                      'type' => 'string',
                      'example' => '测试SDG',
                    ),
                    'ParentSDGId' => 
                    array (
                      'description' => '增量制作时，来源SDG的ID，即[CreateSDG](~~608128~~)时传入的**FromSDGId**。',
                      'type' => 'string',
                      'example' => 'sdg-xxxxx',
                    ),
                    'SDGId' => 
                    array (
                      'description' => 'SDG的ID。',
                      'type' => 'string',
                      'example' => 'sdg-30e1fdba7196bc****',
                    ),
                    'Size' => 
                    array (
                      'description' => 'SDG大小，单位GB。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '20',
                    ),
                    'Status' => 
                    array (
                      'description' => 'SDG制作状态，包括：

- **sdg_making**：制作中。
- **sdg_saving**：保存中。
- **failed**：制作失败。
- **success**：制作成功。',
                      'type' => 'string',
                      'example' => 'success',
                    ),
                    'UpdateTime' => 
                    array (
                      'description' => 'SDG最后更新时间。',
                      'type' => 'string',
                      'example' => '2023-02-27 16:04:39',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Interface.Call.Failed',
            'errorMessage' => '%s.',
          ),
          1 => 
          array (
            'errorCode' => 'Parameter.Invalid',
            'errorMessage' => 'The parameter is invalid. Please check your parameters and try it again.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3703C4AC-9396-458C-8F25-1D701334D309\\",\\n  \\"SDGs\\": [\\n    {\\n      \\"AvaliableRegionIds\\": [\\n        {\\n          \\"CreationTime\\": \\"2023-02-27 15:13:26\\",\\n          \\"RegionId\\": \\"cn-hangzhou-26\\",\\n          \\"SnapshotId\\": \\"mock-clone_snapshot_id\\",\\n          \\"Status\\": \\"success\\"\\n        }\\n      ],\\n      \\"CreationInstanceId\\": \\"aic-5x20dyeos****\\",\\n      \\"CreationRegionId\\": \\"cn-hangzhou-26\\",\\n      \\"CreationTime\\": \\"2023-02-27 15:07:21\\",\\n      \\"DeployedInstanceIds\\": [\\n        {\\n          \\"CreationTime\\": \\"2023-02-27 16:48:43\\",\\n          \\"InstanceId\\": \\"aic-5x20dyeos****\\",\\n          \\"Status\\": \\"sdg_deploying\\",\\n          \\"DeploymentType\\": \\"overlay\\"\\n        }\\n      ],\\n      \\"Description\\": \\"测试SDG\\",\\n      \\"ParentSDGId\\": \\"sdg-xxxxx\\",\\n      \\"SDGId\\": \\"sdg-30e1fdba7196bc****\\",\\n      \\"Size\\": 20,\\n      \\"Status\\": \\"success\\",\\n      \\"UpdateTime\\": \\"2023-02-27 16:04:39\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSDGsResponse>\\n    <RequestId>3703C4AC-9396-458C-8F25-1D701334D309</RequestId>\\n    <SDGs>\\n        <AvaliableRegionIds>\\n            <CreationTime>2023-02-27 15:13:26</CreationTime>\\n            <RegionId>cn-hangzhou-26</RegionId>\\n            <SnapshotId>mock-clone_snapshot_id</SnapshotId>\\n            <Status>success</Status>\\n        </AvaliableRegionIds>\\n        <CreationInstanceId>aic-5x20dyeos****</CreationInstanceId>\\n        <CreationRegionId>cn-hangzhou-26</CreationRegionId>\\n        <CreationTime>2023-02-27 15:07:21</CreationTime>\\n        <DeployedInstanceIds>\\n            <CreationTime>2023-02-27 16:48:43</CreationTime>\\n            <InstanceId>aic-5x20dyeos****</InstanceId>\\n            <Status>sdg_deploying</Status>\\n        </DeployedInstanceIds>\\n        <Description>测试SDG</Description>\\n        <ParentSDGId>sdg-xxxxx</ParentSDGId>\\n        <SDGId>sdg-30e1fdba7196bc****</SDGId>\\n        <Size>20</Size>\\n        <Status>success</Status>\\n        <UpdateTime>2023-02-27 16:04:39</UpdateTime>\\n    </SDGs>\\n</DescribeSDGsResponse>","errorExample":""}]',
      'title' => '查询SDG信息',
    ),
    'DescribeSDGDeploymentStatus' => 
    array (
      'summary' => '调用DescribeSDGDeploymentStatus查询SDG的部署状态。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SDGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SDG的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sdg-xxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，起始值为：**1**，默认值：**1**。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页行数。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID',
                'type' => 'string',
                'example' => '68B85217-03B8-5141-9216-EA4D7C496B9A',
              ),
              'DeploymentStatus' => 
              array (
                'description' => 'SDG 部署信息列表',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'InstanceId' => 
                    array (
                      'description' => 'AIC实例ID。',
                      'type' => 'string',
                      'example' => 'aic-xxxx',
                    ),
                    'MountType' => 
                    array (
                      'description' => '部署类型',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'overlay' => '读写分离部署',
                        'common' => '普通部署',
                      ),
                      'example' => 'overlay',
                    ),
                    'RegionId' => 
                    array (
                      'description' => '节点ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'Status' => 
                    array (
                      'description' => 'SDG部署状态',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'sdg_deploying' => '部署中',
                        'success' => '部署成功',
                        'failed' => '部署失败',
                      ),
                      'example' => 'success',
                    ),
                    'UpdateTime' => 
                    array (
                      'description' => '最新的状态更新时间。',
                      'type' => 'string',
                      'example' => '2023-02-17T02:44:31Z',
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '页码，起始值为1。默认值：1。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，默认值为**10**。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '查询到的部署记录总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"68B85217-03B8-5141-9216-EA4D7C496B9A\\",\\n  \\"DeploymentStatus\\": [\\n    {\\n      \\"InstanceId\\": \\"aic-xxxx\\",\\n      \\"MountType\\": \\"overlay\\",\\n      \\"RegionId\\": \\"cn-hangzhou\\",\\n      \\"Status\\": \\"success\\",\\n      \\"UpdateTime\\": \\"2023-02-17T02:44:31Z\\"\\n    }\\n  ],\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 100\\n}","type":"json"}]',
      'title' => '查询SDG部署状态',
    ),
    'ModifyInstanceChargeType' => 
    array (
      'summary' => '调用ModifyInstanceChargeType更换一台或者多台ENS实例的计费方式。支持在实例级后付费实例和包年包月实例间相互转换，同时针对实例级后付费实例可以将随实例创建的后付费云盘转换为包年包月云盘。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '实例ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'i-5xlrc9wdeo3xxxxxx',
            ),
            'required' => true,
            'maxItems' => 20,
            'minItems' => 1,
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例需要修改的目标计费方式。取值：

PrePaid：将实例级后付费实例转换为包年包月实例。

PostPaid：将包年包月实例转换为实例级后付费实例（默认值）。',
            'type' => 'string',
            'required' => true,
            'example' => 'PostPaid',
            'enum' => 
            array (
              0 => 'PostPaid',
              1 => 'PrePaid',
            ),
          ),
        ),
        2 => 
        array (
          'name' => 'AutoRenew',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例级后付费转为包年包月的时候是否开启自动续费。取值：

true：自动续费。

false：不自动续费（默认值）。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例级后付费转为包年包月的时候的包年包月时长，如果是此场景下该字段必填。取值：

如果 PeriodUnit 取值为 Day 时，则 Period 仅可设置为 3。

如果 PeriodUnit 取值为 Month 时，则 Period 可设置为1-9,12。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
            'enum' => 
            array (
              0 => '1',
              1 => '2',
              2 => '3',
              3 => '4',
              4 => '5',
              5 => '6',
              6 => '7',
              7 => '8',
              8 => '9',
              9 => '12',
            ),
          ),
        ),
        4 => 
        array (
          'name' => 'PeriodUnit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例级后付费转为包年包月的时候的购买资源的时长单位，如果是此场景下该字段必填。取值：

Month：按月购买。

Day：按天购买。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'Month',
            'enum' => 
            array (
              0 => 'Year',
              1 => 'Month',
              2 => 'Day',
            ),
          ),
        ),
        5 => 
        array (
          'name' => 'IncludeDataDisks',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例级后付费转为包年包月的时候是否将随实例创建的所有按量付费数据盘一起转换为包年包月数据盘。取值：

true：是。

false：否（默认值）。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例级后付费转为包年包月的时候是否自动支付。取值：

true：自动支付，您需要确保账户余额充足。

false：只生成订单不扣费（默认值）。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E2CE5821-7A18-5F7B-A18A-1C751B933D2A',
              ),
              'InstanceIds' => 
              array (
                'description' => '实例ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '实例ID。',
                  'type' => 'string',
                  'example' => 'i-5xu1chy7ckxxxx',
                ),
              ),
              'OrderId' => 
              array (
                'description' => '生成的订单ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '21522202681****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VALIDATE.MODULE.FAILED',
            'errorMessage' => 'Required module is not selected.',
          ),
          1 => 
          array (
            'errorCode' => 'ens.interface.error',
            'errorMessage' => 'Failed to call API.',
          ),
          2 => 
          array (
            'errorCode' => 'NoPermission',
            'errorMessage' => 'Permission denied.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.%s',
            'errorMessage' => 'The specified field %s invalid. Please check it again.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E2CE5821-7A18-5F7B-A18A-1C751B933D2A\\",\\n  \\"InstanceIds\\": [\\n    \\"i-5xu1chy7ckxxxx\\"\\n  ],\\n  \\"OrderId\\": 0\\n}","type":"json"}]',
      'title' => '实例计费类型转换',
      'description' => '请确保在使用该接口前，已充分了解ENS产品的收费方式和价格。

目标实例的状态必须为运行中或者已停止，并且无欠费的情况下才能修改计费方式。',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-wulanchabu',
      'endpoint' => 'ens.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'ap-southeast-1',
      'endpoint' => 'ens.ap-southeast-1.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'ens.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'cn-chengdu',
      'endpoint' => 'ens.aliyuncs.com',
    ),
    4 => 
    array (
      'regionId' => 'cn-zhangjiakou',
      'endpoint' => 'ens.aliyuncs.com',
    ),
    5 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'ens.aliyuncs.com',
    ),
    6 => 
    array (
      'regionId' => 'cn-heyuan',
      'endpoint' => 'ens.aliyuncs.com',
    ),
    7 => 
    array (
      'regionId' => 'cn-beijing',
      'endpoint' => 'ens.aliyuncs.com',
    ),
  ),
);