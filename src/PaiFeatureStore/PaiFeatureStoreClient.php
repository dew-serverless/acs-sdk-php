<?php

declare(strict_types=1);

namespace Dew\Acs\PaiFeatureStore;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createInstance(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result listInstances(array $arguments = [])
 * @method \Http\Promise\Promise listInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result getInstance(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result checkInstanceDatasource(array $arguments = [])
 * @method \Http\Promise\Promise checkInstanceDatasourceAsync($arguments = [])
 * @method \Dew\Acs\Result createProject(array $arguments = [])
 * @method \Http\Promise\Promise createProjectAsync($arguments = [])
 * @method \Dew\Acs\Result getProject(array $arguments = [])
 * @method \Http\Promise\Promise getProjectAsync($arguments = [])
 * @method \Dew\Acs\Result deleteProject(array $arguments = [])
 * @method \Http\Promise\Promise deleteProjectAsync($arguments = [])
 * @method \Dew\Acs\Result writeProjectFeatureEntityHotIds(array $arguments = [])
 * @method \Http\Promise\Promise writeProjectFeatureEntityHotIdsAsync($arguments = [])
 * @method \Dew\Acs\Result updateProject(array $arguments = [])
 * @method \Http\Promise\Promise updateProjectAsync($arguments = [])
 * @method \Dew\Acs\Result listProjects(array $arguments = [])
 * @method \Http\Promise\Promise listProjectsAsync($arguments = [])
 * @method \Dew\Acs\Result listProjectFeatureViews(array $arguments = [])
 * @method \Http\Promise\Promise listProjectFeatureViewsAsync($arguments = [])
 * @method \Dew\Acs\Result listProjectFeatureViewTags(array $arguments = [])
 * @method \Http\Promise\Promise listProjectFeatureViewTagsAsync($arguments = [])
 * @method \Dew\Acs\Result listProjectFeatureViewOwners(array $arguments = [])
 * @method \Http\Promise\Promise listProjectFeatureViewOwnersAsync($arguments = [])
 * @method \Dew\Acs\Result getProjectModelFeature(array $arguments = [])
 * @method \Http\Promise\Promise getProjectModelFeatureAsync($arguments = [])
 * @method \Dew\Acs\Result getProjectFeatureView(array $arguments = [])
 * @method \Http\Promise\Promise getProjectFeatureViewAsync($arguments = [])
 * @method \Dew\Acs\Result getProjectFeatureEntityHotIds(array $arguments = [])
 * @method \Http\Promise\Promise getProjectFeatureEntityHotIdsAsync($arguments = [])
 * @method \Dew\Acs\Result getProjectFeatureEntity(array $arguments = [])
 * @method \Http\Promise\Promise getProjectFeatureEntityAsync($arguments = [])
 * @method \Dew\Acs\Result changeProjectFeatureEntityHotIdVersion(array $arguments = [])
 * @method \Http\Promise\Promise changeProjectFeatureEntityHotIdVersionAsync($arguments = [])
 * @method \Dew\Acs\Result createDatasource(array $arguments = [])
 * @method \Http\Promise\Promise createDatasourceAsync($arguments = [])
 * @method \Dew\Acs\Result listDatasources(array $arguments = [])
 * @method \Http\Promise\Promise listDatasourcesAsync($arguments = [])
 * @method \Dew\Acs\Result getDatasource(array $arguments = [])
 * @method \Http\Promise\Promise getDatasourceAsync($arguments = [])
 * @method \Dew\Acs\Result updateDatasource(array $arguments = [])
 * @method \Http\Promise\Promise updateDatasourceAsync($arguments = [])
 * @method \Dew\Acs\Result listDatasourceTables(array $arguments = [])
 * @method \Http\Promise\Promise listDatasourceTablesAsync($arguments = [])
 * @method \Dew\Acs\Result getDatasourceTable(array $arguments = [])
 * @method \Http\Promise\Promise getDatasourceTableAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDatasource(array $arguments = [])
 * @method \Http\Promise\Promise deleteDatasourceAsync($arguments = [])
 * @method \Dew\Acs\Result createFeatureEntity(array $arguments = [])
 * @method \Http\Promise\Promise createFeatureEntityAsync($arguments = [])
 * @method \Dew\Acs\Result listFeatureEntities(array $arguments = [])
 * @method \Http\Promise\Promise listFeatureEntitiesAsync($arguments = [])
 * @method \Dew\Acs\Result getFeatureEntity(array $arguments = [])
 * @method \Http\Promise\Promise getFeatureEntityAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFeatureEntity(array $arguments = [])
 * @method \Http\Promise\Promise deleteFeatureEntityAsync($arguments = [])
 * @method \Dew\Acs\Result listFeatureViewOnlineFeatures(array $arguments = [])
 * @method \Http\Promise\Promise listFeatureViewOnlineFeaturesAsync($arguments = [])
 * @method \Dew\Acs\Result writeFeatureViewTable(array $arguments = [])
 * @method \Http\Promise\Promise writeFeatureViewTableAsync($arguments = [])
 * @method \Dew\Acs\Result publishFeatureViewTable(array $arguments = [])
 * @method \Http\Promise\Promise publishFeatureViewTableAsync($arguments = [])
 * @method \Dew\Acs\Result listFeatureViews(array $arguments = [])
 * @method \Http\Promise\Promise listFeatureViewsAsync($arguments = [])
 * @method \Dew\Acs\Result listFeatureViewRelationships(array $arguments = [])
 * @method \Http\Promise\Promise listFeatureViewRelationshipsAsync($arguments = [])
 * @method \Dew\Acs\Result listFeatureViewFieldRelationships(array $arguments = [])
 * @method \Http\Promise\Promise listFeatureViewFieldRelationshipsAsync($arguments = [])
 * @method \Dew\Acs\Result getFeatureView(array $arguments = [])
 * @method \Http\Promise\Promise getFeatureViewAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFeatureView(array $arguments = [])
 * @method \Http\Promise\Promise deleteFeatureViewAsync($arguments = [])
 * @method \Dew\Acs\Result createFeatureView(array $arguments = [])
 * @method \Http\Promise\Promise createFeatureViewAsync($arguments = [])
 * @method \Dew\Acs\Result updateLabelTable(array $arguments = [])
 * @method \Http\Promise\Promise updateLabelTableAsync($arguments = [])
 * @method \Dew\Acs\Result listLabelTables(array $arguments = [])
 * @method \Http\Promise\Promise listLabelTablesAsync($arguments = [])
 * @method \Dew\Acs\Result getLabelTable(array $arguments = [])
 * @method \Http\Promise\Promise getLabelTableAsync($arguments = [])
 * @method \Dew\Acs\Result deleteLabelTable(array $arguments = [])
 * @method \Http\Promise\Promise deleteLabelTableAsync($arguments = [])
 * @method \Dew\Acs\Result createLabelTable(array $arguments = [])
 * @method \Http\Promise\Promise createLabelTableAsync($arguments = [])
 * @method \Dew\Acs\Result listModelFeatures(array $arguments = [])
 * @method \Http\Promise\Promise listModelFeaturesAsync($arguments = [])
 * @method \Dew\Acs\Result getModelFeature(array $arguments = [])
 * @method \Http\Promise\Promise getModelFeatureAsync($arguments = [])
 * @method \Dew\Acs\Result exportModelFeatureTrainingSetTable(array $arguments = [])
 * @method \Http\Promise\Promise exportModelFeatureTrainingSetTableAsync($arguments = [])
 * @method \Dew\Acs\Result deleteModelFeature(array $arguments = [])
 * @method \Http\Promise\Promise deleteModelFeatureAsync($arguments = [])
 * @method \Dew\Acs\Result createModelFeature(array $arguments = [])
 * @method \Http\Promise\Promise createModelFeatureAsync($arguments = [])
 * @method \Dew\Acs\Result updateModelFeature(array $arguments = [])
 * @method \Http\Promise\Promise updateModelFeatureAsync($arguments = [])
 * @method \Dew\Acs\Result createModelFeatureTrainingSetFGTable(array $arguments = [])
 * @method \Http\Promise\Promise createModelFeatureTrainingSetFGTableAsync($arguments = [])
 * @method \Dew\Acs\Result updateModelFeatureFGInfo(array $arguments = [])
 * @method \Http\Promise\Promise updateModelFeatureFGInfoAsync($arguments = [])
 * @method \Dew\Acs\Result updateModelFeatureFGFeature(array $arguments = [])
 * @method \Http\Promise\Promise updateModelFeatureFGFeatureAsync($arguments = [])
 * @method \Dew\Acs\Result listModelFeatureAvailableFeatures(array $arguments = [])
 * @method \Http\Promise\Promise listModelFeatureAvailableFeaturesAsync($arguments = [])
 * @method \Dew\Acs\Result getModelFeatureFGInfo(array $arguments = [])
 * @method \Http\Promise\Promise getModelFeatureFGInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getModelFeatureFGFeature(array $arguments = [])
 * @method \Http\Promise\Promise getModelFeatureFGFeatureAsync($arguments = [])
 * @method \Dew\Acs\Result exportModelFeatureTrainingSetFGTable(array $arguments = [])
 * @method \Http\Promise\Promise exportModelFeatureTrainingSetFGTableAsync($arguments = [])
 * @method \Dew\Acs\Result getTask(array $arguments = [])
 * @method \Http\Promise\Promise getTaskAsync($arguments = [])
 * @method \Dew\Acs\Result listTaskLogs(array $arguments = [])
 * @method \Http\Promise\Promise listTaskLogsAsync($arguments = [])
 * @method \Dew\Acs\Result listTasks(array $arguments = [])
 * @method \Http\Promise\Promise listTasksAsync($arguments = [])
 * @method \Dew\Acs\Result getServiceIdentityRole(array $arguments = [])
 * @method \Http\Promise\Promise getServiceIdentityRoleAsync($arguments = [])
 * @method \Dew\Acs\Result createServiceIdentityRole(array $arguments = [])
 * @method \Http\Promise\Promise createServiceIdentityRoleAsync($arguments = [])
 */
final class PaiFeatureStoreClient extends AcsClient
{
    //
}
