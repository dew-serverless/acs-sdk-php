<?php

declare(strict_types=1);

namespace Dew\Acs\Ecs;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result describeRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result describeZones(array $arguments = [])
 * @method \Http\Promise\Promise describeZonesAsync($arguments = [])
 * @method \Dew\Acs\Result describeAvailableResource(array $arguments = [])
 * @method \Http\Promise\Promise describeAvailableResourceAsync($arguments = [])
 * @method \Dew\Acs\Result describeAccountAttributes(array $arguments = [])
 * @method \Http\Promise\Promise describeAccountAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result describeResourcesModification(array $arguments = [])
 * @method \Http\Promise\Promise describeResourcesModificationAsync($arguments = [])
 * @method \Dew\Acs\Result describeRecommendInstanceType(array $arguments = [])
 * @method \Http\Promise\Promise describeRecommendInstanceTypeAsync($arguments = [])
 * @method \Dew\Acs\Result describePrice(array $arguments = [])
 * @method \Http\Promise\Promise describePriceAsync($arguments = [])
 * @method \Dew\Acs\Result describeRenewalPrice(array $arguments = [])
 * @method \Http\Promise\Promise describeRenewalPriceAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceModificationPrice(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceModificationPriceAsync($arguments = [])
 * @method \Dew\Acs\Result runInstances(array $arguments = [])
 * @method \Http\Promise\Promise runInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result createInstance(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result startInstance(array $arguments = [])
 * @method \Http\Promise\Promise startInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result startInstances(array $arguments = [])
 * @method \Http\Promise\Promise startInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result stopInstance(array $arguments = [])
 * @method \Http\Promise\Promise stopInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result stopInstances(array $arguments = [])
 * @method \Http\Promise\Promise stopInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result rebootInstance(array $arguments = [])
 * @method \Http\Promise\Promise rebootInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result rebootInstances(array $arguments = [])
 * @method \Http\Promise\Promise rebootInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstance(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstances(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceTypeFamilies(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceTypeFamiliesAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceTypes(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceTypesAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceAttribute(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceClockOptions(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceClockOptionsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceChargeType(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceChargeTypeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceSpec(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceSpecAsync($arguments = [])
 * @method \Dew\Acs\Result modifyPrepayInstanceSpec(array $arguments = [])
 * @method \Http\Promise\Promise modifyPrepayInstanceSpecAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceAutoReleaseTime(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceAutoReleaseTimeAsync($arguments = [])
 * @method \Dew\Acs\Result attachInstanceRamRole(array $arguments = [])
 * @method \Http\Promise\Promise attachInstanceRamRoleAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceRamRole(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceRamRoleAsync($arguments = [])
 * @method \Dew\Acs\Result detachInstanceRamRole(array $arguments = [])
 * @method \Http\Promise\Promise detachInstanceRamRoleAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceVncUrl(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceVncUrlAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceVncPasswd(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceVncPasswdAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceMetadataOptions(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceMetadataOptionsAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserData(array $arguments = [])
 * @method \Http\Promise\Promise describeUserDataAsync($arguments = [])
 * @method \Dew\Acs\Result renewInstance(array $arguments = [])
 * @method \Http\Promise\Promise renewInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceAutoRenewAttribute(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceAutoRenewAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceAutoRenewAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceAutoRenewAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result reActivateInstances(array $arguments = [])
 * @method \Http\Promise\Promise reActivateInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeSpotPriceHistory(array $arguments = [])
 * @method \Http\Promise\Promise describeSpotPriceHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result describeSpotAdvice(array $arguments = [])
 * @method \Http\Promise\Promise describeSpotAdviceAsync($arguments = [])
 * @method \Dew\Acs\Result createImage(array $arguments = [])
 * @method \Http\Promise\Promise createImageAsync($arguments = [])
 * @method \Dew\Acs\Result describeImages(array $arguments = [])
 * @method \Http\Promise\Promise describeImagesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyImageAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyImageAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteImage(array $arguments = [])
 * @method \Http\Promise\Promise deleteImageAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageFromFamily(array $arguments = [])
 * @method \Http\Promise\Promise describeImageFromFamilyAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageSupportInstanceTypes(array $arguments = [])
 * @method \Http\Promise\Promise describeImageSupportInstanceTypesAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageSharePermission(array $arguments = [])
 * @method \Http\Promise\Promise describeImageSharePermissionAsync($arguments = [])
 * @method \Dew\Acs\Result modifyImageSharePermission(array $arguments = [])
 * @method \Http\Promise\Promise modifyImageSharePermissionAsync($arguments = [])
 * @method \Dew\Acs\Result modifyImageShareGroupPermission(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise modifyImageShareGroupPermissionAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result importImage(array $arguments = [])
 * @method \Http\Promise\Promise importImageAsync($arguments = [])
 * @method \Dew\Acs\Result exportImage(array $arguments = [])
 * @method \Http\Promise\Promise exportImageAsync($arguments = [])
 * @method \Dew\Acs\Result copyImage(array $arguments = [])
 * @method \Http\Promise\Promise copyImageAsync($arguments = [])
 * @method \Dew\Acs\Result cancelCopyImage(array $arguments = [])
 * @method \Http\Promise\Promise cancelCopyImageAsync($arguments = [])
 * @method \Dew\Acs\Result createImageComponent(array $arguments = [])
 * @method \Http\Promise\Promise createImageComponentAsync($arguments = [])
 * @method \Dew\Acs\Result describeImageComponents(array $arguments = [])
 * @method \Http\Promise\Promise describeImageComponentsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteImageComponent(array $arguments = [])
 * @method \Http\Promise\Promise deleteImageComponentAsync($arguments = [])
 * @method \Dew\Acs\Result createImagePipeline(array $arguments = [])
 * @method \Http\Promise\Promise createImagePipelineAsync($arguments = [])
 * @method \Dew\Acs\Result describeImagePipelines(array $arguments = [])
 * @method \Http\Promise\Promise describeImagePipelinesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteImagePipeline(array $arguments = [])
 * @method \Http\Promise\Promise deleteImagePipelineAsync($arguments = [])
 * @method \Dew\Acs\Result startImagePipelineExecution(array $arguments = [])
 * @method \Http\Promise\Promise startImagePipelineExecutionAsync($arguments = [])
 * @method \Dew\Acs\Result describeImagePipelineExecutions(array $arguments = [])
 * @method \Http\Promise\Promise describeImagePipelineExecutionsAsync($arguments = [])
 * @method \Dew\Acs\Result cancelImagePipelineExecution(array $arguments = [])
 * @method \Http\Promise\Promise cancelImagePipelineExecutionAsync($arguments = [])
 * @method \Dew\Acs\Result createDisk(array $arguments = [])
 * @method \Http\Promise\Promise createDiskAsync($arguments = [])
 * @method \Dew\Acs\Result describeDisks(array $arguments = [])
 * @method \Http\Promise\Promise describeDisksAsync($arguments = [])
 * @method \Dew\Acs\Result attachDisk(array $arguments = [])
 * @method \Http\Promise\Promise attachDiskAsync($arguments = [])
 * @method \Dew\Acs\Result detachDisk(array $arguments = [])
 * @method \Http\Promise\Promise detachDiskAsync($arguments = [])
 * @method \Dew\Acs\Result resizeDisk(array $arguments = [])
 * @method \Http\Promise\Promise resizeDiskAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDiskAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyDiskAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDiskChargeType(array $arguments = [])
 * @method \Http\Promise\Promise modifyDiskChargeTypeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDiskSpec(array $arguments = [])
 * @method \Http\Promise\Promise modifyDiskSpecAsync($arguments = [])
 * @method \Dew\Acs\Result replaceSystemDisk(array $arguments = [])
 * @method \Http\Promise\Promise replaceSystemDiskAsync($arguments = [])
 * @method \Dew\Acs\Result resetDisk(array $arguments = [])
 * @method \Http\Promise\Promise resetDiskAsync($arguments = [])
 * @method \Dew\Acs\Result resetDisks(array $arguments = [])
 * @method \Http\Promise\Promise resetDisksAsync($arguments = [])
 * @method \Dew\Acs\Result reInitDisk(array $arguments = [])
 * @method \Http\Promise\Promise reInitDiskAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDiskDeployment(array $arguments = [])
 * @method \Http\Promise\Promise modifyDiskDeploymentAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDisk(array $arguments = [])
 * @method \Http\Promise\Promise deleteDiskAsync($arguments = [])
 * @method \Dew\Acs\Result enableDiskEncryptionByDefault(array $arguments = [])
 * @method \Http\Promise\Promise enableDiskEncryptionByDefaultAsync($arguments = [])
 * @method \Dew\Acs\Result describeDiskEncryptionByDefaultStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeDiskEncryptionByDefaultStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeDiskDefaultKMSKeyId(array $arguments = [])
 * @method \Http\Promise\Promise describeDiskDefaultKMSKeyIdAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDiskDefaultKMSKeyId(array $arguments = [])
 * @method \Http\Promise\Promise modifyDiskDefaultKMSKeyIdAsync($arguments = [])
 * @method \Dew\Acs\Result resetDiskDefaultKMSKeyId(array $arguments = [])
 * @method \Http\Promise\Promise resetDiskDefaultKMSKeyIdAsync($arguments = [])
 * @method \Dew\Acs\Result disableDiskEncryptionByDefault(array $arguments = [])
 * @method \Http\Promise\Promise disableDiskEncryptionByDefaultAsync($arguments = [])
 * @method \Dew\Acs\Result createSnapshot(array $arguments = [])
 * @method \Http\Promise\Promise createSnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result describeSnapshots(array $arguments = [])
 * @method \Http\Promise\Promise describeSnapshotsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSnapshotsUsage(array $arguments = [])
 * @method \Http\Promise\Promise describeSnapshotsUsageAsync($arguments = [])
 * @method \Dew\Acs\Result modifySnapshotAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifySnapshotAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result modifySnapshotCategory(array $arguments = [])
 * @method \Http\Promise\Promise modifySnapshotCategoryAsync($arguments = [])
 * @method \Dew\Acs\Result copySnapshot(array $arguments = [])
 * @method \Http\Promise\Promise copySnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSnapshot(array $arguments = [])
 * @method \Http\Promise\Promise deleteSnapshotAsync($arguments = [])
 * @method \Dew\Acs\Result describeSnapshotLinks(array $arguments = [])
 * @method \Http\Promise\Promise describeSnapshotLinksAsync($arguments = [])
 * @method \Dew\Acs\Result createSnapshotGroup(array $arguments = [])
 * @method \Http\Promise\Promise createSnapshotGroupAsync($arguments = [])
 * @method \Dew\Acs\Result describeSnapshotGroups(array $arguments = [])
 * @method \Http\Promise\Promise describeSnapshotGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result modifySnapshotGroup(array $arguments = [])
 * @method \Http\Promise\Promise modifySnapshotGroupAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSnapshotGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteSnapshotGroupAsync($arguments = [])
 * @method \Dew\Acs\Result createAutoSnapshotPolicy(array $arguments = [])
 * @method \Http\Promise\Promise createAutoSnapshotPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeAutoSnapshotPolicyEx(array $arguments = [])
 * @method \Http\Promise\Promise describeAutoSnapshotPolicyExAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAutoSnapshotPolicyEx(array $arguments = [])
 * @method \Http\Promise\Promise modifyAutoSnapshotPolicyExAsync($arguments = [])
 * @method \Dew\Acs\Result applyAutoSnapshotPolicy(array $arguments = [])
 * @method \Http\Promise\Promise applyAutoSnapshotPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result cancelAutoSnapshotPolicy(array $arguments = [])
 * @method \Http\Promise\Promise cancelAutoSnapshotPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAutoSnapshotPolicy(array $arguments = [])
 * @method \Http\Promise\Promise deleteAutoSnapshotPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeSnapshotPackage(array $arguments = [])
 * @method \Http\Promise\Promise describeSnapshotPackageAsync($arguments = [])
 * @method \Dew\Acs\Result describeBandwidthLimitation(array $arguments = [])
 * @method \Http\Promise\Promise describeBandwidthLimitationAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceNetworkSpec(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceNetworkSpecAsync($arguments = [])
 * @method \Dew\Acs\Result allocatePublicIpAddress(array $arguments = [])
 * @method \Http\Promise\Promise allocatePublicIpAddressAsync($arguments = [])
 * @method \Dew\Acs\Result convertNatPublicIpToEip(array $arguments = [])
 * @method \Http\Promise\Promise convertNatPublicIpToEipAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceVpcAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceVpcAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result describeClassicLinkInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeClassicLinkInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result attachClassicLinkVpc(array $arguments = [])
 * @method \Http\Promise\Promise attachClassicLinkVpcAsync($arguments = [])
 * @method \Dew\Acs\Result detachClassicLinkVpc(array $arguments = [])
 * @method \Http\Promise\Promise detachClassicLinkVpcAsync($arguments = [])
 * @method \Dew\Acs\Result createNetworkInterface(array $arguments = [])
 * @method \Http\Promise\Promise createNetworkInterfaceAsync($arguments = [])
 * @method \Dew\Acs\Result describeNetworkInterfaces(array $arguments = [])
 * @method \Http\Promise\Promise describeNetworkInterfacesAsync($arguments = [])
 * @method \Dew\Acs\Result describeNetworkInterfaceAttribute(array $arguments = [])
 * @method \Http\Promise\Promise describeNetworkInterfaceAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyNetworkInterfaceAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyNetworkInterfaceAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteNetworkInterface(array $arguments = [])
 * @method \Http\Promise\Promise deleteNetworkInterfaceAsync($arguments = [])
 * @method \Dew\Acs\Result attachNetworkInterface(array $arguments = [])
 * @method \Http\Promise\Promise attachNetworkInterfaceAsync($arguments = [])
 * @method \Dew\Acs\Result detachNetworkInterface(array $arguments = [])
 * @method \Http\Promise\Promise detachNetworkInterfaceAsync($arguments = [])
 * @method \Dew\Acs\Result assignPrivateIpAddresses(array $arguments = [])
 * @method \Http\Promise\Promise assignPrivateIpAddressesAsync($arguments = [])
 * @method \Dew\Acs\Result unassignPrivateIpAddresses(array $arguments = [])
 * @method \Http\Promise\Promise unassignPrivateIpAddressesAsync($arguments = [])
 * @method \Dew\Acs\Result assignIpv6Addresses(array $arguments = [])
 * @method \Http\Promise\Promise assignIpv6AddressesAsync($arguments = [])
 * @method \Dew\Acs\Result unassignIpv6Addresses(array $arguments = [])
 * @method \Http\Promise\Promise unassignIpv6AddressesAsync($arguments = [])
 * @method \Dew\Acs\Result createNetworkInterfacePermission(array $arguments = [])
 * @method \Http\Promise\Promise createNetworkInterfacePermissionAsync($arguments = [])
 * @method \Dew\Acs\Result describeNetworkInterfacePermissions(array $arguments = [])
 * @method \Http\Promise\Promise describeNetworkInterfacePermissionsAsync($arguments = [])
 * @method \Dew\Acs\Result createPrefixList(array $arguments = [])
 * @method \Http\Promise\Promise createPrefixListAsync($arguments = [])
 * @method \Dew\Acs\Result describePrefixLists(array $arguments = [])
 * @method \Http\Promise\Promise describePrefixListsAsync($arguments = [])
 * @method \Dew\Acs\Result describePrefixListAttributes(array $arguments = [])
 * @method \Http\Promise\Promise describePrefixListAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result describePrefixListAssociations(array $arguments = [])
 * @method \Http\Promise\Promise describePrefixListAssociationsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyPrefixList(array $arguments = [])
 * @method \Http\Promise\Promise modifyPrefixListAsync($arguments = [])
 * @method \Dew\Acs\Result deletePrefixList(array $arguments = [])
 * @method \Http\Promise\Promise deletePrefixListAsync($arguments = [])
 * @method \Dew\Acs\Result createPortRangeList(array $arguments = [])
 * @method \Http\Promise\Promise createPortRangeListAsync($arguments = [])
 * @method \Dew\Acs\Result describePortRangeLists(array $arguments = [])
 * @method \Http\Promise\Promise describePortRangeListsAsync($arguments = [])
 * @method \Dew\Acs\Result describePortRangeListEntries(array $arguments = [])
 * @method \Http\Promise\Promise describePortRangeListEntriesAsync($arguments = [])
 * @method \Dew\Acs\Result describePortRangeListAssociations(array $arguments = [])
 * @method \Http\Promise\Promise describePortRangeListAssociationsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyPortRangeList(array $arguments = [])
 * @method \Http\Promise\Promise modifyPortRangeListAsync($arguments = [])
 * @method \Dew\Acs\Result deletePortRangeList(array $arguments = [])
 * @method \Http\Promise\Promise deletePortRangeListAsync($arguments = [])
 * @method \Dew\Acs\Result createSecurityGroup(array $arguments = [])
 * @method \Http\Promise\Promise createSecurityGroupAsync($arguments = [])
 * @method \Dew\Acs\Result describeSecurityGroups(array $arguments = [])
 * @method \Http\Promise\Promise describeSecurityGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSecurityGroupAttribute(array $arguments = [])
 * @method \Http\Promise\Promise describeSecurityGroupAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result modifySecurityGroupPolicy(array $arguments = [])
 * @method \Http\Promise\Promise modifySecurityGroupPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result modifySecurityGroupAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifySecurityGroupAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSecurityGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteSecurityGroupAsync($arguments = [])
 * @method \Dew\Acs\Result authorizeSecurityGroup(array $arguments = [])
 * @method \Http\Promise\Promise authorizeSecurityGroupAsync($arguments = [])
 * @method \Dew\Acs\Result modifySecurityGroupRule(array $arguments = [])
 * @method \Http\Promise\Promise modifySecurityGroupRuleAsync($arguments = [])
 * @method \Dew\Acs\Result revokeSecurityGroup(array $arguments = [])
 * @method \Http\Promise\Promise revokeSecurityGroupAsync($arguments = [])
 * @method \Dew\Acs\Result authorizeSecurityGroupEgress(array $arguments = [])
 * @method \Http\Promise\Promise authorizeSecurityGroupEgressAsync($arguments = [])
 * @method \Dew\Acs\Result modifySecurityGroupEgressRule(array $arguments = [])
 * @method \Http\Promise\Promise modifySecurityGroupEgressRuleAsync($arguments = [])
 * @method \Dew\Acs\Result revokeSecurityGroupEgress(array $arguments = [])
 * @method \Http\Promise\Promise revokeSecurityGroupEgressAsync($arguments = [])
 * @method \Dew\Acs\Result describeSecurityGroupReferences(array $arguments = [])
 * @method \Http\Promise\Promise describeSecurityGroupReferencesAsync($arguments = [])
 * @method \Dew\Acs\Result joinSecurityGroup(array $arguments = [])
 * @method \Http\Promise\Promise joinSecurityGroupAsync($arguments = [])
 * @method \Dew\Acs\Result leaveSecurityGroup(array $arguments = [])
 * @method \Http\Promise\Promise leaveSecurityGroupAsync($arguments = [])
 * @method \Dew\Acs\Result createKeyPair(array $arguments = [])
 * @method \Http\Promise\Promise createKeyPairAsync($arguments = [])
 * @method \Dew\Acs\Result importKeyPair(array $arguments = [])
 * @method \Http\Promise\Promise importKeyPairAsync($arguments = [])
 * @method \Dew\Acs\Result describeKeyPairs(array $arguments = [])
 * @method \Http\Promise\Promise describeKeyPairsAsync($arguments = [])
 * @method \Dew\Acs\Result attachKeyPair(array $arguments = [])
 * @method \Http\Promise\Promise attachKeyPairAsync($arguments = [])
 * @method \Dew\Acs\Result detachKeyPair(array $arguments = [])
 * @method \Http\Promise\Promise detachKeyPairAsync($arguments = [])
 * @method \Dew\Acs\Result deleteKeyPairs(array $arguments = [])
 * @method \Http\Promise\Promise deleteKeyPairsAsync($arguments = [])
 * @method \Dew\Acs\Result createLaunchTemplate(array $arguments = [])
 * @method \Http\Promise\Promise createLaunchTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result describeLaunchTemplates(array $arguments = [])
 * @method \Http\Promise\Promise describeLaunchTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteLaunchTemplate(array $arguments = [])
 * @method \Http\Promise\Promise deleteLaunchTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result createLaunchTemplateVersion(array $arguments = [])
 * @method \Http\Promise\Promise createLaunchTemplateVersionAsync($arguments = [])
 * @method \Dew\Acs\Result describeLaunchTemplateVersions(array $arguments = [])
 * @method \Http\Promise\Promise describeLaunchTemplateVersionsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyLaunchTemplateDefaultVersion(array $arguments = [])
 * @method \Http\Promise\Promise modifyLaunchTemplateDefaultVersionAsync($arguments = [])
 * @method \Dew\Acs\Result deleteLaunchTemplateVersion(array $arguments = [])
 * @method \Http\Promise\Promise deleteLaunchTemplateVersionAsync($arguments = [])
 * @method \Dew\Acs\Result createAutoProvisioningGroup(array $arguments = [])
 * @method \Http\Promise\Promise createAutoProvisioningGroupAsync($arguments = [])
 * @method \Dew\Acs\Result describeAutoProvisioningGroups(array $arguments = [])
 * @method \Http\Promise\Promise describeAutoProvisioningGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result describeAutoProvisioningGroupInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeAutoProvisioningGroupInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyAutoProvisioningGroup(array $arguments = [])
 * @method \Http\Promise\Promise modifyAutoProvisioningGroupAsync($arguments = [])
 * @method \Dew\Acs\Result describeAutoProvisioningGroupHistory(array $arguments = [])
 * @method \Http\Promise\Promise describeAutoProvisioningGroupHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAutoProvisioningGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteAutoProvisioningGroupAsync($arguments = [])
 * @method \Dew\Acs\Result createDeploymentSet(array $arguments = [])
 * @method \Http\Promise\Promise createDeploymentSetAsync($arguments = [])
 * @method \Dew\Acs\Result describeDeploymentSetSupportedInstanceTypeFamily(array $arguments = [])
 * @method \Http\Promise\Promise describeDeploymentSetSupportedInstanceTypeFamilyAsync($arguments = [])
 * @method \Dew\Acs\Result describeDeploymentSets(array $arguments = [])
 * @method \Http\Promise\Promise describeDeploymentSetsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDeploymentSetAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyDeploymentSetAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDeploymentSet(array $arguments = [])
 * @method \Http\Promise\Promise deleteDeploymentSetAsync($arguments = [])
 * @method \Dew\Acs\Result createElasticityAssurance(array $arguments = [])
 * @method \Http\Promise\Promise createElasticityAssuranceAsync($arguments = [])
 * @method \Dew\Acs\Result describeElasticityAssurances(array $arguments = [])
 * @method \Http\Promise\Promise describeElasticityAssurancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeElasticityAssuranceInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeElasticityAssuranceInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyElasticityAssurance(array $arguments = [])
 * @method \Http\Promise\Promise modifyElasticityAssuranceAsync($arguments = [])
 * @method \Dew\Acs\Result renewElasticityAssurances(array $arguments = [])
 * @method \Http\Promise\Promise renewElasticityAssurancesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyElasticityAssuranceAutoRenewAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyElasticityAssuranceAutoRenewAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result describeElasticityAssuranceAutoRenewAttribute(array $arguments = [])
 * @method \Http\Promise\Promise describeElasticityAssuranceAutoRenewAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result purchaseElasticityAssurance(array $arguments = [])
 * @method \Http\Promise\Promise purchaseElasticityAssuranceAsync($arguments = [])
 * @method \Dew\Acs\Result createCapacityReservation(array $arguments = [])
 * @method \Http\Promise\Promise createCapacityReservationAsync($arguments = [])
 * @method \Dew\Acs\Result describeCapacityReservations(array $arguments = [])
 * @method \Http\Promise\Promise describeCapacityReservationsAsync($arguments = [])
 * @method \Dew\Acs\Result describeCapacityReservationInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeCapacityReservationInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCapacityReservation(array $arguments = [])
 * @method \Http\Promise\Promise modifyCapacityReservationAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceAttachmentAttributes(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceAttachmentAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceAttachmentAttributes(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceAttachmentAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result releaseCapacityReservation(array $arguments = [])
 * @method \Http\Promise\Promise releaseCapacityReservationAsync($arguments = [])
 * @method \Dew\Acs\Result purchaseReservedInstancesOffering(array $arguments = [])
 * @method \Http\Promise\Promise purchaseReservedInstancesOfferingAsync($arguments = [])
 * @method \Dew\Acs\Result describeReservedInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeReservedInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyReservedInstances(array $arguments = [])
 * @method \Http\Promise\Promise modifyReservedInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyReservedInstanceAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyReservedInstanceAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result renewReservedInstances(array $arguments = [])
 * @method \Http\Promise\Promise renewReservedInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result describeReservedInstanceAutoRenewAttribute(array $arguments = [])
 * @method \Http\Promise\Promise describeReservedInstanceAutoRenewAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyReservedInstanceAutoRenewAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyReservedInstanceAutoRenewAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result purchaseStorageCapacityUnit(array $arguments = [])
 * @method \Http\Promise\Promise purchaseStorageCapacityUnitAsync($arguments = [])
 * @method \Dew\Acs\Result describeStorageCapacityUnits(array $arguments = [])
 * @method \Http\Promise\Promise describeStorageCapacityUnitsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyStorageCapacityUnitAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyStorageCapacityUnitAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result runCommand(array $arguments = [])
 * @method \Http\Promise\Promise runCommandAsync($arguments = [])
 * @method \Dew\Acs\Result createCommand(array $arguments = [])
 * @method \Http\Promise\Promise createCommandAsync($arguments = [])
 * @method \Dew\Acs\Result invokeCommand(array $arguments = [])
 * @method \Http\Promise\Promise invokeCommandAsync($arguments = [])
 * @method \Dew\Acs\Result describeInvocations(array $arguments = [])
 * @method \Http\Promise\Promise describeInvocationsAsync($arguments = [])
 * @method \Dew\Acs\Result describeInvocationResults(array $arguments = [])
 * @method \Http\Promise\Promise describeInvocationResultsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInvocationAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyInvocationAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result stopInvocation(array $arguments = [])
 * @method \Http\Promise\Promise stopInvocationAsync($arguments = [])
 * @method \Dew\Acs\Result describeCommands(array $arguments = [])
 * @method \Http\Promise\Promise describeCommandsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCommand(array $arguments = [])
 * @method \Http\Promise\Promise modifyCommandAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCommand(array $arguments = [])
 * @method \Http\Promise\Promise deleteCommandAsync($arguments = [])
 * @method \Dew\Acs\Result sendFile(array $arguments = [])
 * @method \Http\Promise\Promise sendFileAsync($arguments = [])
 * @method \Dew\Acs\Result describeSendFileResults(array $arguments = [])
 * @method \Http\Promise\Promise describeSendFileResultsAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudAssistantStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudAssistantStatusAsync($arguments = [])
 * @method \Dew\Acs\Result installCloudAssistant(array $arguments = [])
 * @method \Http\Promise\Promise installCloudAssistantAsync($arguments = [])
 * @method \Dew\Acs\Result startTerminalSession(array $arguments = [])
 * @method \Http\Promise\Promise startTerminalSessionAsync($arguments = [])
 * @method \Dew\Acs\Result endTerminalSession(array $arguments = [])
 * @method \Http\Promise\Promise endTerminalSessionAsync($arguments = [])
 * @method \Dew\Acs\Result describeTerminalSessions(array $arguments = [])
 * @method \Http\Promise\Promise describeTerminalSessionsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCloudAssistantSettings(array $arguments = [])
 * @method \Http\Promise\Promise modifyCloudAssistantSettingsAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudAssistantSettings(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudAssistantSettingsAsync($arguments = [])
 * @method \Dew\Acs\Result createActivation(array $arguments = [])
 * @method \Http\Promise\Promise createActivationAsync($arguments = [])
 * @method \Dew\Acs\Result describeActivations(array $arguments = [])
 * @method \Http\Promise\Promise describeActivationsAsync($arguments = [])
 * @method \Dew\Acs\Result disableActivation(array $arguments = [])
 * @method \Http\Promise\Promise disableActivationAsync($arguments = [])
 * @method \Dew\Acs\Result deleteActivation(array $arguments = [])
 * @method \Http\Promise\Promise deleteActivationAsync($arguments = [])
 * @method \Dew\Acs\Result describeManagedInstances(array $arguments = [])
 * @method \Http\Promise\Promise describeManagedInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyManagedInstance(array $arguments = [])
 * @method \Http\Promise\Promise modifyManagedInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result deregisterManagedInstance(array $arguments = [])
 * @method \Http\Promise\Promise deregisterManagedInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result listPluginStatus(array $arguments = [])
 * @method \Http\Promise\Promise listPluginStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstancesFullStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeInstancesFullStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeDisksFullStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeDisksFullStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceHistoryEvents(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceHistoryEventsAsync($arguments = [])
 * @method \Dew\Acs\Result createSimulatedSystemEvents(array $arguments = [])
 * @method \Http\Promise\Promise createSimulatedSystemEventsAsync($arguments = [])
 * @method \Dew\Acs\Result cancelSimulatedSystemEvents(array $arguments = [])
 * @method \Http\Promise\Promise cancelSimulatedSystemEventsAsync($arguments = [])
 * @method \Dew\Acs\Result acceptInquiredSystemEvent(array $arguments = [])
 * @method \Http\Promise\Promise acceptInquiredSystemEventAsync($arguments = [])
 * @method \Dew\Acs\Result describeDiagnosticMetrics(array $arguments = [])
 * @method \Http\Promise\Promise describeDiagnosticMetricsAsync($arguments = [])
 * @method \Dew\Acs\Result createDiagnosticMetricSet(array $arguments = [])
 * @method \Http\Promise\Promise createDiagnosticMetricSetAsync($arguments = [])
 * @method \Dew\Acs\Result describeDiagnosticMetricSets(array $arguments = [])
 * @method \Http\Promise\Promise describeDiagnosticMetricSetsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDiagnosticMetricSet(array $arguments = [])
 * @method \Http\Promise\Promise modifyDiagnosticMetricSetAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDiagnosticMetricSets(array $arguments = [])
 * @method \Http\Promise\Promise deleteDiagnosticMetricSetsAsync($arguments = [])
 * @method \Dew\Acs\Result createDiagnosticReport(array $arguments = [])
 * @method \Http\Promise\Promise createDiagnosticReportAsync($arguments = [])
 * @method \Dew\Acs\Result describeDiagnosticReports(array $arguments = [])
 * @method \Http\Promise\Promise describeDiagnosticReportsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDiagnosticReportAttributes(array $arguments = [])
 * @method \Http\Promise\Promise describeDiagnosticReportAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDiagnosticReports(array $arguments = [])
 * @method \Http\Promise\Promise deleteDiagnosticReportsAsync($arguments = [])
 * @method \Dew\Acs\Result getInstanceScreenshot(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceScreenshotAsync($arguments = [])
 * @method \Dew\Acs\Result getInstanceConsoleOutput(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceConsoleOutputAsync($arguments = [])
 * @method \Dew\Acs\Result describeDiskMonitorData(array $arguments = [])
 * @method \Http\Promise\Promise describeDiskMonitorDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceMonitorData(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceMonitorDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeEniMonitorData(array $arguments = [])
 * @method \Http\Promise\Promise describeEniMonitorDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeSnapshotMonitorData(array $arguments = [])
 * @method \Http\Promise\Promise describeSnapshotMonitorDataAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstanceMaintenanceAttributes(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceMaintenanceAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceMaintenanceAttributes(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceMaintenanceAttributesAsync($arguments = [])
 * @method \Dew\Acs\Result redeployInstance(array $arguments = [])
 * @method \Http\Promise\Promise redeployInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result reportInstancesStatus(array $arguments = [])
 * @method \Http\Promise\Promise reportInstancesStatusAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result listTagResources(array $arguments = [])
 * @method \Http\Promise\Promise listTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result untagResources(array $arguments = [])
 * @method \Http\Promise\Promise untagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result joinResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise joinResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result allocateDedicatedHosts(array $arguments = [])
 * @method \Http\Promise\Promise allocateDedicatedHostsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDedicatedHosts(array $arguments = [])
 * @method \Http\Promise\Promise describeDedicatedHostsAsync($arguments = [])
 * @method \Dew\Acs\Result describeDedicatedHostTypes(array $arguments = [])
 * @method \Http\Promise\Promise describeDedicatedHostTypesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDedicatedHostAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyDedicatedHostAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDedicatedHostsChargeType(array $arguments = [])
 * @method \Http\Promise\Promise modifyDedicatedHostsChargeTypeAsync($arguments = [])
 * @method \Dew\Acs\Result describeDedicatedHostAutoRenew(array $arguments = [])
 * @method \Http\Promise\Promise describeDedicatedHostAutoRenewAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDedicatedHostAutoRenewAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyDedicatedHostAutoRenewAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result renewDedicatedHosts(array $arguments = [])
 * @method \Http\Promise\Promise renewDedicatedHostsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDedicatedHostAutoReleaseTime(array $arguments = [])
 * @method \Http\Promise\Promise modifyDedicatedHostAutoReleaseTimeAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstanceDeployment(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceDeploymentAsync($arguments = [])
 * @method \Dew\Acs\Result redeployDedicatedHost(array $arguments = [])
 * @method \Http\Promise\Promise redeployDedicatedHostAsync($arguments = [])
 * @method \Dew\Acs\Result releaseDedicatedHost(array $arguments = [])
 * @method \Http\Promise\Promise releaseDedicatedHostAsync($arguments = [])
 * @method \Dew\Acs\Result createDedicatedHostCluster(array $arguments = [])
 * @method \Http\Promise\Promise createDedicatedHostClusterAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDedicatedHostClusterAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyDedicatedHostClusterAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result describeDedicatedHostClusters(array $arguments = [])
 * @method \Http\Promise\Promise describeDedicatedHostClustersAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDedicatedHostCluster(array $arguments = [])
 * @method \Http\Promise\Promise deleteDedicatedHostClusterAsync($arguments = [])
 * @method \Dew\Acs\Result createHpcCluster(array $arguments = [])
 * @method \Http\Promise\Promise createHpcClusterAsync($arguments = [])
 * @method \Dew\Acs\Result describeHpcClusters(array $arguments = [])
 * @method \Http\Promise\Promise describeHpcClustersAsync($arguments = [])
 * @method \Dew\Acs\Result modifyHpcClusterAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyHpcClusterAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHpcCluster(array $arguments = [])
 * @method \Http\Promise\Promise deleteHpcClusterAsync($arguments = [])
 * @method \Dew\Acs\Result describeTasks(array $arguments = [])
 * @method \Http\Promise\Promise describeTasksAsync($arguments = [])
 * @method \Dew\Acs\Result describeTaskAttribute(array $arguments = [])
 * @method \Http\Promise\Promise describeTaskAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result cancelTask(array $arguments = [])
 * @method \Http\Promise\Promise cancelTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserBusinessBehavior(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeUserBusinessBehaviorAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result modifyUserBusinessBehavior(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise modifyUserBusinessBehaviorAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeLimitation(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeLimitationAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeClusters(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeClustersAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result deleteNetworkInterfacePermission(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise deleteNetworkInterfacePermissionAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result deleteBandwidthPackage(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise deleteBandwidthPackageAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result modifyBandwidthPackageSpec(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise modifyBandwidthPackageSpecAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeBandwidthPackages(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeBandwidthPackagesAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result createVSwitch(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise createVSwitchAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result deleteVSwitch(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise deleteVSwitchAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result modifyVSwitchAttribute(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise modifyVSwitchAttributeAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeVSwitches(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeVSwitchesAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result createPhysicalConnection(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise createPhysicalConnectionAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result deletePhysicalConnection(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise deletePhysicalConnectionAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result modifyPhysicalConnectionAttribute(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise modifyPhysicalConnectionAttributeAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result enablePhysicalConnection(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise enablePhysicalConnectionAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describePhysicalConnections(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describePhysicalConnectionsAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result cancelPhysicalConnection(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise cancelPhysicalConnectionAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result terminatePhysicalConnection(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise terminatePhysicalConnectionAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result createVpc(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise createVpcAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result deleteVpc(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise deleteVpcAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeVpcs(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeVpcsAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result modifyVpcAttribute(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise modifyVpcAttributeAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result removeBandwidthPackageIps(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise removeBandwidthPackageIpsAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result createHaVip(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise createHaVipAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result deleteHaVip(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise deleteHaVipAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result associateHaVip(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise associateHaVipAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result modifyHaVipAttribute(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise modifyHaVipAttributeAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeHaVips(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeHaVipsAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result unassociateHaVip(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise unassociateHaVipAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result createVirtualBorderRouter(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise createVirtualBorderRouterAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result deleteVirtualBorderRouter(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise deleteVirtualBorderRouterAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result modifyVirtualBorderRouterAttribute(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise modifyVirtualBorderRouterAttributeAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result recoverVirtualBorderRouter(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise recoverVirtualBorderRouterAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result terminateVirtualBorderRouter(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise terminateVirtualBorderRouterAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeVirtualBorderRouters(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeVirtualBorderRoutersAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeVirtualBorderRoutersForPhysicalConnection(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeVirtualBorderRoutersForPhysicalConnectionAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result createRouterInterface(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise createRouterInterfaceAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result deleteRouterInterface(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise deleteRouterInterfaceAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result activateRouterInterface(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise activateRouterInterfaceAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result deactivateRouterInterface(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise deactivateRouterInterfaceAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result modifyRouterInterfaceAttribute(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise modifyRouterInterfaceAttributeAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result modifyRouterInterfaceSpec(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise modifyRouterInterfaceSpecAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result modifyVRouterAttribute(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise modifyVRouterAttributeAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeRouterInterfaces(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeRouterInterfacesAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result unassociateEipAddress(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise unassociateEipAddressAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result allocateEipAddress(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise allocateEipAddressAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result modifyEipAddressAttribute(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise modifyEipAddressAttributeAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result releaseEipAddress(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise releaseEipAddressAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result associateEipAddress(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise associateEipAddressAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeEipAddresses(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeEipAddressesAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeEipMonitorData(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeEipMonitorDataAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result createNatGateway(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise createNatGatewayAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result deleteNatGateway(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise deleteNatGatewayAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeNatGateways(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeNatGatewaysAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeNewProjectEipMonitorData(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeNewProjectEipMonitorDataAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result deleteRouteEntry(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise deleteRouteEntryAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result deleteForwardEntry(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise deleteForwardEntryAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result createForwardEntry(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise createForwardEntryAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result addBandwidthPackageIps(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise addBandwidthPackageIpsAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeVRouters(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeVRoutersAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result createRouteEntry(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise createRouteEntryAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeForwardTableEntries(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeForwardTableEntriesAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result modifyForwardEntry(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise modifyForwardEntryAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeAccessPoints(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeAccessPointsAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeRouteTables(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeRouteTablesAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result connectRouterInterface(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise connectRouterInterfaceAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result exportSnapshot(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise exportSnapshotAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result releasePublicIpAddress(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise releasePublicIpAddressAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result addTags(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise addTagsAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeResourceByTags(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeResourceByTagsAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result describeTags(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise describeTagsAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result removeTags(array $arguments = []) {@deprecated 2014-05-26}
 * @method \Http\Promise\Promise removeTagsAsync($arguments = []) {@deprecated 2014-05-26}
 * @method \Dew\Acs\Result modifyInstanceNetworkOptions(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceNetworkOptionsAsync($arguments = [])
 */
final class EcsClient extends AcsClient
{
    //
}
