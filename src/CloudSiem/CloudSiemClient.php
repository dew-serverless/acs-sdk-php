<?php

declare(strict_types=1);

namespace Dew\Acs\CloudSiem;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result listRdUsers(array $arguments = [])
 * @method \Http\Promise\Promise listRdUsersAsync($arguments = [])
 * @method \Dew\Acs\Result listAccountsByLog(array $arguments = [])
 * @method \Http\Promise\Promise listAccountsByLogAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserBuyStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeUserBuyStatusAsync($arguments = [])
 * @method \Dew\Acs\Result listProjectLogStores(array $arguments = [])
 * @method \Http\Promise\Promise listProjectLogStoresAsync($arguments = [])
 * @method \Dew\Acs\Result listUserProdLogs(array $arguments = [])
 * @method \Http\Promise\Promise listUserProdLogsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDataSource(array $arguments = [])
 * @method \Http\Promise\Promise modifyDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDataSourceLog(array $arguments = [])
 * @method \Http\Promise\Promise modifyDataSourceLogAsync($arguments = [])
 * @method \Dew\Acs\Result modifyBindAccount(array $arguments = [])
 * @method \Http\Promise\Promise modifyBindAccountAsync($arguments = [])
 * @method \Dew\Acs\Result listUsersByProd(array $arguments = [])
 * @method \Http\Promise\Promise listUsersByProdAsync($arguments = [])
 * @method \Dew\Acs\Result listImportedLogsByProd(array $arguments = [])
 * @method \Http\Promise\Promise listImportedLogsByProdAsync($arguments = [])
 * @method \Dew\Acs\Result listDataSourceTypes(array $arguments = [])
 * @method \Http\Promise\Promise listDataSourceTypesAsync($arguments = [])
 * @method \Dew\Acs\Result listDataSourceLogs(array $arguments = [])
 * @method \Http\Promise\Promise listDataSourceLogsAsync($arguments = [])
 * @method \Dew\Acs\Result listBindDataSources(array $arguments = [])
 * @method \Http\Promise\Promise listBindDataSourcesAsync($arguments = [])
 * @method \Dew\Acs\Result listAllProds(array $arguments = [])
 * @method \Http\Promise\Promise listAllProdsAsync($arguments = [])
 * @method \Dew\Acs\Result enableServiceForCloudSiem(array $arguments = [])
 * @method \Http\Promise\Promise enableServiceForCloudSiemAsync($arguments = [])
 * @method \Dew\Acs\Result enableAccessForCloudSiem(array $arguments = [])
 * @method \Http\Promise\Promise enableAccessForCloudSiemAsync($arguments = [])
 * @method \Dew\Acs\Result describeServiceStatus(array $arguments = [])
 * @method \Http\Promise\Promise describeServiceStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeProdCount(array $arguments = [])
 * @method \Http\Promise\Promise describeProdCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeImportedLogCount(array $arguments = [])
 * @method \Http\Promise\Promise describeImportedLogCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataSourceParameters(array $arguments = [])
 * @method \Http\Promise\Promise describeDataSourceParametersAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataSourceInstance(array $arguments = [])
 * @method \Http\Promise\Promise describeDataSourceInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result describeAuth(array $arguments = [])
 * @method \Http\Promise\Promise describeAuthAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDataSourceLog(array $arguments = [])
 * @method \Http\Promise\Promise deleteDataSourceLogAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDataSource(array $arguments = [])
 * @method \Http\Promise\Promise deleteDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteBindAccount(array $arguments = [])
 * @method \Http\Promise\Promise deleteBindAccountAsync($arguments = [])
 * @method \Dew\Acs\Result bindAccount(array $arguments = [])
 * @method \Http\Promise\Promise bindAccountAsync($arguments = [])
 * @method \Dew\Acs\Result addUserSourceLogConfig(array $arguments = [])
 * @method \Http\Promise\Promise addUserSourceLogConfigAsync($arguments = [])
 * @method \Dew\Acs\Result addDataSourceLog(array $arguments = [])
 * @method \Http\Promise\Promise addDataSourceLogAsync($arguments = [])
 * @method \Dew\Acs\Result addDataSource(array $arguments = [])
 * @method \Http\Promise\Promise addDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result listBindAccount(array $arguments = [])
 * @method \Http\Promise\Promise listBindAccountAsync($arguments = [])
 * @method \Dew\Acs\Result listAccountAccessId(array $arguments = [])
 * @method \Http\Promise\Promise listAccountAccessIdAsync($arguments = [])
 * @method \Dew\Acs\Result submitImportLogTasks(array $arguments = [])
 * @method \Http\Promise\Promise submitImportLogTasksAsync($arguments = [])
 * @method \Dew\Acs\Result describeAlertsWithEntity(array $arguments = [])
 * @method \Http\Promise\Promise describeAlertsWithEntityAsync($arguments = [])
 * @method \Dew\Acs\Result describeAlerts(array $arguments = [])
 * @method \Http\Promise\Promise describeAlertsAsync($arguments = [])
 * @method \Dew\Acs\Result describeAlertSource(array $arguments = [])
 * @method \Http\Promise\Promise describeAlertSourceAsync($arguments = [])
 * @method \Dew\Acs\Result describeAlertsCount(array $arguments = [])
 * @method \Http\Promise\Promise describeAlertsCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeEntityInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeEntityInfoAsync($arguments = [])
 * @method \Dew\Acs\Result postEventDisposeAndWhiteruleList(array $arguments = [])
 * @method \Http\Promise\Promise postEventDisposeAndWhiteruleListAsync($arguments = [])
 * @method \Dew\Acs\Result describeWafScope(array $arguments = [])
 * @method \Http\Promise\Promise describeWafScopeAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventDispose(array $arguments = [])
 * @method \Http\Promise\Promise describeEventDisposeAsync($arguments = [])
 * @method \Dew\Acs\Result describeEventCountByThreatLevel(array $arguments = [])
 * @method \Http\Promise\Promise describeEventCountByThreatLevelAsync($arguments = [])
 * @method \Dew\Acs\Result describeDisposeAndPlaybook(array $arguments = [])
 * @method \Http\Promise\Promise describeDisposeAndPlaybookAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudSiemEvents(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudSiemEventsAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudSiemEventDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudSiemEventDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudSiemAssetsCounter(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudSiemAssetsCounterAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudSiemAssets(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudSiemAssetsAsync($arguments = [])
 * @method \Dew\Acs\Result describeAlertsWithEvent(array $arguments = [])
 * @method \Http\Promise\Promise describeAlertsWithEventAsync($arguments = [])
 * @method \Dew\Acs\Result describeAlertSourceWithEvent(array $arguments = [])
 * @method \Http\Promise\Promise describeAlertSourceWithEventAsync($arguments = [])
 * @method \Dew\Acs\Result describeAlertType(array $arguments = [])
 * @method \Http\Promise\Promise describeAlertTypeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCustomizeRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteCustomizeRuleAsync($arguments = [])
 * @method \Dew\Acs\Result describeAggregateFunction(array $arguments = [])
 * @method \Http\Promise\Promise describeAggregateFunctionAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomizeRuleCount(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomizeRuleCountAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomizeRuleTest(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomizeRuleTestAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomizeRuleTestHistogram(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomizeRuleTestHistogramAsync($arguments = [])
 * @method \Dew\Acs\Result describeLogFields(array $arguments = [])
 * @method \Http\Promise\Promise describeLogFieldsAsync($arguments = [])
 * @method \Dew\Acs\Result describeLogSource(array $arguments = [])
 * @method \Http\Promise\Promise describeLogSourceAsync($arguments = [])
 * @method \Dew\Acs\Result describeLogType(array $arguments = [])
 * @method \Http\Promise\Promise describeLogTypeAsync($arguments = [])
 * @method \Dew\Acs\Result describeOperators(array $arguments = [])
 * @method \Http\Promise\Promise describeOperatorsAsync($arguments = [])
 * @method \Dew\Acs\Result listCloudSiemCustomizeRules(array $arguments = [])
 * @method \Http\Promise\Promise listCloudSiemCustomizeRulesAsync($arguments = [])
 * @method \Dew\Acs\Result listCloudSiemPredefinedRules(array $arguments = [])
 * @method \Http\Promise\Promise listCloudSiemPredefinedRulesAsync($arguments = [])
 * @method \Dew\Acs\Result listCustomizeRuleTestResult(array $arguments = [])
 * @method \Http\Promise\Promise listCustomizeRuleTestResultAsync($arguments = [])
 * @method \Dew\Acs\Result postCustomizeRule(array $arguments = [])
 * @method \Http\Promise\Promise postCustomizeRuleAsync($arguments = [])
 * @method \Dew\Acs\Result postCustomizeRuleTest(array $arguments = [])
 * @method \Http\Promise\Promise postCustomizeRuleTestAsync($arguments = [])
 * @method \Dew\Acs\Result postFinishCustomizeRuleTest(array $arguments = [])
 * @method \Http\Promise\Promise postFinishCustomizeRuleTestAsync($arguments = [])
 * @method \Dew\Acs\Result postRuleStatusChange(array $arguments = [])
 * @method \Http\Promise\Promise postRuleStatusChangeAsync($arguments = [])
 * @method \Dew\Acs\Result describeScopeUsers(array $arguments = [])
 * @method \Http\Promise\Promise describeScopeUsersAsync($arguments = [])
 * @method \Dew\Acs\Result deleteAutomateResponseConfig(array $arguments = [])
 * @method \Http\Promise\Promise deleteAutomateResponseConfigAsync($arguments = [])
 * @method \Dew\Acs\Result describeAutomateResponseConfigCounter(array $arguments = [])
 * @method \Http\Promise\Promise describeAutomateResponseConfigCounterAsync($arguments = [])
 * @method \Dew\Acs\Result describeAutomateResponseConfigFeature(array $arguments = [])
 * @method \Http\Promise\Promise describeAutomateResponseConfigFeatureAsync($arguments = [])
 * @method \Dew\Acs\Result describeAutomateResponseConfigPlayBooks(array $arguments = [])
 * @method \Http\Promise\Promise describeAutomateResponseConfigPlayBooksAsync($arguments = [])
 * @method \Dew\Acs\Result listAutomateResponseConfigs(array $arguments = [])
 * @method \Http\Promise\Promise listAutomateResponseConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result postAutomateResponseConfig(array $arguments = [])
 * @method \Http\Promise\Promise postAutomateResponseConfigAsync($arguments = [])
 * @method \Dew\Acs\Result updateAutomateResponseConfigStatus(array $arguments = [])
 * @method \Http\Promise\Promise updateAutomateResponseConfigStatusAsync($arguments = [])
 * @method \Dew\Acs\Result listDisposeStrategy(array $arguments = [])
 * @method \Http\Promise\Promise listDisposeStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result describeDisposeStrategyPlaybook(array $arguments = [])
 * @method \Http\Promise\Promise describeDisposeStrategyPlaybookAsync($arguments = [])
 * @method \Dew\Acs\Result restoreCapacity(array $arguments = [])
 * @method \Http\Promise\Promise restoreCapacityAsync($arguments = [])
 * @method \Dew\Acs\Result getCapacity(array $arguments = [])
 * @method \Http\Promise\Promise getCapacityAsync($arguments = [])
 * @method \Dew\Acs\Result setStorage(array $arguments = [])
 * @method \Http\Promise\Promise setStorageAsync($arguments = [])
 * @method \Dew\Acs\Result describeStorage(array $arguments = [])
 * @method \Http\Promise\Promise describeStorageAsync($arguments = [])
 * @method \Dew\Acs\Result getStorage(array $arguments = [])
 * @method \Http\Promise\Promise getStorageAsync($arguments = [])
 * @method \Dew\Acs\Result listDelivery(array $arguments = [])
 * @method \Http\Promise\Promise listDeliveryAsync($arguments = [])
 * @method \Dew\Acs\Result openDelivery(array $arguments = [])
 * @method \Http\Promise\Promise openDeliveryAsync($arguments = [])
 * @method \Dew\Acs\Result closeDelivery(array $arguments = [])
 * @method \Http\Promise\Promise closeDeliveryAsync($arguments = [])
 * @method \Dew\Acs\Result updateWhiteRuleList(array $arguments = [])
 * @method \Http\Promise\Promise updateWhiteRuleListAsync($arguments = [])
 * @method \Dew\Acs\Result postEventWhiteruleList(array $arguments = [])
 * @method \Http\Promise\Promise postEventWhiteruleListAsync($arguments = [])
 * @method \Dew\Acs\Result describeWhiteRuleList(array $arguments = [])
 * @method \Http\Promise\Promise describeWhiteRuleListAsync($arguments = [])
 * @method \Dew\Acs\Result describeAlertScene(array $arguments = [])
 * @method \Http\Promise\Promise describeAlertSceneAsync($arguments = [])
 * @method \Dew\Acs\Result describeAlertSceneByEvent(array $arguments = [])
 * @method \Http\Promise\Promise describeAlertSceneByEventAsync($arguments = [])
 * @method \Dew\Acs\Result deleteWhiteRuleList(array $arguments = [])
 * @method \Http\Promise\Promise deleteWhiteRuleListAsync($arguments = [])
 */
final class CloudSiemClient extends AcsClient
{
    //
}
