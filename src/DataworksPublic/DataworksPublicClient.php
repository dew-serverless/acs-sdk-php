<?php

declare(strict_types=1);

namespace Dew\Acs\DataworksPublic;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result listCalcEngines(array $arguments = [])
 * @method \Http\Promise\Promise listCalcEnginesAsync($arguments = [])
 * @method \Dew\Acs\Result createDataSource(array $arguments = [])
 * @method \Http\Promise\Promise createDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result listDataSources(array $arguments = [])
 * @method \Http\Promise\Promise listDataSourcesAsync($arguments = [])
 * @method \Dew\Acs\Result updateDataSource(array $arguments = [])
 * @method \Http\Promise\Promise updateDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDataSource(array $arguments = [])
 * @method \Http\Promise\Promise deleteDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result listResourceGroups(array $arguments = [])
 * @method \Http\Promise\Promise listResourceGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result getProject(array $arguments = [])
 * @method \Http\Promise\Promise getProjectAsync($arguments = [])
 * @method \Dew\Acs\Result addProjectMemberToRole(array $arguments = [])
 * @method \Http\Promise\Promise addProjectMemberToRoleAsync($arguments = [])
 * @method \Dew\Acs\Result createProjectMember(array $arguments = [])
 * @method \Http\Promise\Promise createProjectMemberAsync($arguments = [])
 * @method \Dew\Acs\Result deleteProjectMember(array $arguments = [])
 * @method \Http\Promise\Promise deleteProjectMemberAsync($arguments = [])
 * @method \Dew\Acs\Result listProjectRoles(array $arguments = [])
 * @method \Http\Promise\Promise listProjectRolesAsync($arguments = [])
 * @method \Dew\Acs\Result removeProjectMemberFromRole(array $arguments = [])
 * @method \Http\Promise\Promise removeProjectMemberFromRoleAsync($arguments = [])
 * @method \Dew\Acs\Result listProjectMembers(array $arguments = [])
 * @method \Http\Promise\Promise listProjectMembersAsync($arguments = [])
 * @method \Dew\Acs\Result listProjects(array $arguments = [])
 * @method \Http\Promise\Promise listProjectsAsync($arguments = [])
 * @method \Dew\Acs\Result listProjectIds(array $arguments = [])
 * @method \Http\Promise\Promise listProjectIdsAsync($arguments = [])
 * @method \Dew\Acs\Result createProject(array $arguments = [])
 * @method \Http\Promise\Promise createProjectAsync($arguments = [])
 * @method \Dew\Acs\Result changeResourceManagerResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise changeResourceManagerResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listMeasureData(array $arguments = [])
 * @method \Http\Promise\Promise listMeasureDataAsync($arguments = [])
 * @method \Dew\Acs\Result listTables(array $arguments = [])
 * @method \Http\Promise\Promise listTablesAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaDBInfo(array $arguments = [])
 * @method \Http\Promise\Promise getMetaDBInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaDBTableList(array $arguments = [])
 * @method \Http\Promise\Promise getMetaDBTableListAsync($arguments = [])
 * @method \Dew\Acs\Result checkMetaTable(array $arguments = [])
 * @method \Http\Promise\Promise checkMetaTableAsync($arguments = [])
 * @method \Dew\Acs\Result checkMetaPartition(array $arguments = [])
 * @method \Http\Promise\Promise checkMetaPartitionAsync($arguments = [])
 * @method \Dew\Acs\Result searchMetaTables(array $arguments = [])
 * @method \Http\Promise\Promise searchMetaTablesAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaTableBasicInfo(array $arguments = [])
 * @method \Http\Promise\Promise getMetaTableBasicInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaTableColumn(array $arguments = [])
 * @method \Http\Promise\Promise getMetaTableColumnAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaTablePartition(array $arguments = [])
 * @method \Http\Promise\Promise getMetaTablePartitionAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaTableOutput(array $arguments = [])
 * @method \Http\Promise\Promise getMetaTableOutputAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaTableChangeLog(array $arguments = [])
 * @method \Http\Promise\Promise getMetaTableChangeLogAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaTableIntroWiki(array $arguments = [])
 * @method \Http\Promise\Promise getMetaTableIntroWikiAsync($arguments = [])
 * @method \Dew\Acs\Result createMetaCategory(array $arguments = [])
 * @method \Http\Promise\Promise createMetaCategoryAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMetaCategory(array $arguments = [])
 * @method \Http\Promise\Promise deleteMetaCategoryAsync($arguments = [])
 * @method \Dew\Acs\Result updateMetaCategory(array $arguments = [])
 * @method \Http\Promise\Promise updateMetaCategoryAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaCategory(array $arguments = [])
 * @method \Http\Promise\Promise getMetaCategoryAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaTableListByCategory(array $arguments = [])
 * @method \Http\Promise\Promise getMetaTableListByCategoryAsync($arguments = [])
 * @method \Dew\Acs\Result addToMetaCategory(array $arguments = [])
 * @method \Http\Promise\Promise addToMetaCategoryAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFromMetaCategory(array $arguments = [])
 * @method \Http\Promise\Promise deleteFromMetaCategoryAsync($arguments = [])
 * @method \Dew\Acs\Result updateMetaTable(array $arguments = [])
 * @method \Http\Promise\Promise updateMetaTableAsync($arguments = [])
 * @method \Dew\Acs\Result updateMetaTableIntroWiki(array $arguments = [])
 * @method \Http\Promise\Promise updateMetaTableIntroWikiAsync($arguments = [])
 * @method \Dew\Acs\Result listMetaDB(array $arguments = [])
 * @method \Http\Promise\Promise listMetaDBAsync($arguments = [])
 * @method \Dew\Acs\Result updateTableModelInfo(array $arguments = [])
 * @method \Http\Promise\Promise updateTableModelInfoAsync($arguments = [])
 * @method \Dew\Acs\Result createTableTheme(array $arguments = [])
 * @method \Http\Promise\Promise createTableThemeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTableTheme(array $arguments = [])
 * @method \Http\Promise\Promise deleteTableThemeAsync($arguments = [])
 * @method \Dew\Acs\Result updateTableTheme(array $arguments = [])
 * @method \Http\Promise\Promise updateTableThemeAsync($arguments = [])
 * @method \Dew\Acs\Result listTableTheme(array $arguments = [])
 * @method \Http\Promise\Promise listTableThemeAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaTableThemeLevel(array $arguments = [])
 * @method \Http\Promise\Promise getMetaTableThemeLevelAsync($arguments = [])
 * @method \Dew\Acs\Result createTableLevel(array $arguments = [])
 * @method \Http\Promise\Promise createTableLevelAsync($arguments = [])
 * @method \Dew\Acs\Result updateTableLevel(array $arguments = [])
 * @method \Http\Promise\Promise updateTableLevelAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTableLevel(array $arguments = [])
 * @method \Http\Promise\Promise deleteTableLevelAsync($arguments = [])
 * @method \Dew\Acs\Result listTableLevel(array $arguments = [])
 * @method \Http\Promise\Promise listTableLevelAsync($arguments = [])
 * @method \Dew\Acs\Result updateMetaCollection(array $arguments = [])
 * @method \Http\Promise\Promise updateMetaCollectionAsync($arguments = [])
 * @method \Dew\Acs\Result listMetaCollections(array $arguments = [])
 * @method \Http\Promise\Promise listMetaCollectionsAsync($arguments = [])
 * @method \Dew\Acs\Result listMetaCollectionEntities(array $arguments = [])
 * @method \Http\Promise\Promise listMetaCollectionEntitiesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMetaCollection(array $arguments = [])
 * @method \Http\Promise\Promise deleteMetaCollectionAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaCollectionDetail(array $arguments = [])
 * @method \Http\Promise\Promise getMetaCollectionDetailAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMetaCollectionEntity(array $arguments = [])
 * @method \Http\Promise\Promise deleteMetaCollectionEntityAsync($arguments = [])
 * @method \Dew\Acs\Result addMetaCollectionEntity(array $arguments = [])
 * @method \Http\Promise\Promise addMetaCollectionEntityAsync($arguments = [])
 * @method \Dew\Acs\Result createMetaCollection(array $arguments = [])
 * @method \Http\Promise\Promise createMetaCollectionAsync($arguments = [])
 * @method \Dew\Acs\Result listLineage(array $arguments = [])
 * @method \Http\Promise\Promise listLineageAsync($arguments = [])
 * @method \Dew\Acs\Result deleteLineageRelation(array $arguments = [])
 * @method \Http\Promise\Promise deleteLineageRelationAsync($arguments = [])
 * @method \Dew\Acs\Result registerLineageRelation(array $arguments = [])
 * @method \Http\Promise\Promise registerLineageRelationAsync($arguments = [])
 * @method \Dew\Acs\Result createFile(array $arguments = [])
 * @method \Http\Promise\Promise createFileAsync($arguments = [])
 * @method \Dew\Acs\Result createUdfFile(array $arguments = [])
 * @method \Http\Promise\Promise createUdfFileAsync($arguments = [])
 * @method \Dew\Acs\Result createBusiness(array $arguments = [])
 * @method \Http\Promise\Promise createBusinessAsync($arguments = [])
 * @method \Dew\Acs\Result deleteBusiness(array $arguments = [])
 * @method \Http\Promise\Promise deleteBusinessAsync($arguments = [])
 * @method \Dew\Acs\Result createFolder(array $arguments = [])
 * @method \Http\Promise\Promise createFolderAsync($arguments = [])
 * @method \Dew\Acs\Result updateBusiness(array $arguments = [])
 * @method \Http\Promise\Promise updateBusinessAsync($arguments = [])
 * @method \Dew\Acs\Result listFiles(array $arguments = [])
 * @method \Http\Promise\Promise listFilesAsync($arguments = [])
 * @method \Dew\Acs\Result establishRelationTableToBusiness(array $arguments = [])
 * @method \Http\Promise\Promise establishRelationTableToBusinessAsync($arguments = [])
 * @method \Dew\Acs\Result submitFile(array $arguments = [])
 * @method \Http\Promise\Promise submitFileAsync($arguments = [])
 * @method \Dew\Acs\Result listBusiness(array $arguments = [])
 * @method \Http\Promise\Promise listBusinessAsync($arguments = [])
 * @method \Dew\Acs\Result getFileVersion(array $arguments = [])
 * @method \Http\Promise\Promise getFileVersionAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFolder(array $arguments = [])
 * @method \Http\Promise\Promise deleteFolderAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFile(array $arguments = [])
 * @method \Http\Promise\Promise deleteFileAsync($arguments = [])
 * @method \Dew\Acs\Result getDeployment(array $arguments = [])
 * @method \Http\Promise\Promise getDeploymentAsync($arguments = [])
 * @method \Dew\Acs\Result updateFile(array $arguments = [])
 * @method \Http\Promise\Promise updateFileAsync($arguments = [])
 * @method \Dew\Acs\Result getFolder(array $arguments = [])
 * @method \Http\Promise\Promise getFolderAsync($arguments = [])
 * @method \Dew\Acs\Result listFileVersions(array $arguments = [])
 * @method \Http\Promise\Promise listFileVersionsAsync($arguments = [])
 * @method \Dew\Acs\Result getFile(array $arguments = [])
 * @method \Http\Promise\Promise getFileAsync($arguments = [])
 * @method \Dew\Acs\Result listFolders(array $arguments = [])
 * @method \Http\Promise\Promise listFoldersAsync($arguments = [])
 * @method \Dew\Acs\Result deployFile(array $arguments = [])
 * @method \Http\Promise\Promise deployFileAsync($arguments = [])
 * @method \Dew\Acs\Result updateUdfFile(array $arguments = [])
 * @method \Http\Promise\Promise updateUdfFileAsync($arguments = [])
 * @method \Dew\Acs\Result getBusiness(array $arguments = [])
 * @method \Http\Promise\Promise getBusinessAsync($arguments = [])
 * @method \Dew\Acs\Result updateFolder(array $arguments = [])
 * @method \Http\Promise\Promise updateFolderAsync($arguments = [])
 * @method \Dew\Acs\Result listDeployments(array $arguments = [])
 * @method \Http\Promise\Promise listDeploymentsAsync($arguments = [])
 * @method \Dew\Acs\Result updateIDEEventResult(array $arguments = [])
 * @method \Http\Promise\Promise updateIDEEventResultAsync($arguments = [])
 * @method \Dew\Acs\Result getIDEEventDetail(array $arguments = [])
 * @method \Http\Promise\Promise getIDEEventDetailAsync($arguments = [])
 * @method \Dew\Acs\Result createResourceFile(array $arguments = [])
 * @method \Http\Promise\Promise createResourceFileAsync($arguments = [])
 * @method \Dew\Acs\Result createDISyncTask(array $arguments = [])
 * @method \Http\Promise\Promise createDISyncTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDISyncTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteDISyncTaskAsync($arguments = [])
 * @method \Dew\Acs\Result updateDISyncTask(array $arguments = [])
 * @method \Http\Promise\Promise updateDISyncTaskAsync($arguments = [])
 * @method \Dew\Acs\Result testNetworkConnection(array $arguments = [])
 * @method \Http\Promise\Promise testNetworkConnectionAsync($arguments = [])
 * @method \Dew\Acs\Result getDataSourceMeta(array $arguments = [])
 * @method \Http\Promise\Promise getDataSourceMetaAsync($arguments = [])
 * @method \Dew\Acs\Result listDIProjectConfig(array $arguments = [])
 * @method \Http\Promise\Promise listDIProjectConfigAsync($arguments = [])
 * @method \Dew\Acs\Result updateDIProjectConfig(array $arguments = [])
 * @method \Http\Promise\Promise updateDIProjectConfigAsync($arguments = [])
 * @method \Dew\Acs\Result getDISyncTask(array $arguments = [])
 * @method \Http\Promise\Promise getDISyncTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deployDISyncTask(array $arguments = [])
 * @method \Http\Promise\Promise deployDISyncTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getDISyncInstanceInfo(array $arguments = [])
 * @method \Http\Promise\Promise getDISyncInstanceInfoAsync($arguments = [])
 * @method \Dew\Acs\Result terminateDISyncInstance(array $arguments = [])
 * @method \Http\Promise\Promise terminateDISyncInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result generateDISyncTaskConfigForCreating(array $arguments = [])
 * @method \Http\Promise\Promise generateDISyncTaskConfigForCreatingAsync($arguments = [])
 * @method \Dew\Acs\Result generateDISyncTaskConfigForUpdating(array $arguments = [])
 * @method \Http\Promise\Promise generateDISyncTaskConfigForUpdatingAsync($arguments = [])
 * @method \Dew\Acs\Result startDISyncInstance(array $arguments = [])
 * @method \Http\Promise\Promise startDISyncInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result stopDISyncInstance(array $arguments = [])
 * @method \Http\Promise\Promise stopDISyncInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result queryDISyncTaskConfigProcessResult(array $arguments = [])
 * @method \Http\Promise\Promise queryDISyncTaskConfigProcessResultAsync($arguments = [])
 * @method \Dew\Acs\Result createDIJob(array $arguments = [])
 * @method \Http\Promise\Promise createDIJobAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDIJob(array $arguments = [])
 * @method \Http\Promise\Promise deleteDIJobAsync($arguments = [])
 * @method \Dew\Acs\Result getDIJob(array $arguments = [])
 * @method \Http\Promise\Promise getDIJobAsync($arguments = [])
 * @method \Dew\Acs\Result listDIJobs(array $arguments = [])
 * @method \Http\Promise\Promise listDIJobsAsync($arguments = [])
 * @method \Dew\Acs\Result startDIJob(array $arguments = [])
 * @method \Http\Promise\Promise startDIJobAsync($arguments = [])
 * @method \Dew\Acs\Result stopDIJob(array $arguments = [])
 * @method \Http\Promise\Promise stopDIJobAsync($arguments = [])
 * @method \Dew\Acs\Result updateDIJob(array $arguments = [])
 * @method \Http\Promise\Promise updateDIJobAsync($arguments = [])
 * @method \Dew\Acs\Result createDIAlarmRule(array $arguments = [])
 * @method \Http\Promise\Promise createDIAlarmRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDIAlarmRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteDIAlarmRuleAsync($arguments = [])
 * @method \Dew\Acs\Result getDIAlarmRule(array $arguments = [])
 * @method \Http\Promise\Promise getDIAlarmRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listDIAlarmRules(array $arguments = [])
 * @method \Http\Promise\Promise listDIAlarmRulesAsync($arguments = [])
 * @method \Dew\Acs\Result updateDIAlarmRule(array $arguments = [])
 * @method \Http\Promise\Promise updateDIAlarmRuleAsync($arguments = [])
 * @method \Dew\Acs\Result queryPublicModelEngine(array $arguments = [])
 * @method \Http\Promise\Promise queryPublicModelEngineAsync($arguments = [])
 * @method \Dew\Acs\Result getAlertMessage(array $arguments = [])
 * @method \Http\Promise\Promise getAlertMessageAsync($arguments = [])
 * @method \Dew\Acs\Result listAlertMessages(array $arguments = [])
 * @method \Http\Promise\Promise listAlertMessagesAsync($arguments = [])
 * @method \Dew\Acs\Result getBaselineConfig(array $arguments = [])
 * @method \Http\Promise\Promise getBaselineConfigAsync($arguments = [])
 * @method \Dew\Acs\Result listNodesByBaseline(array $arguments = [])
 * @method \Http\Promise\Promise listNodesByBaselineAsync($arguments = [])
 * @method \Dew\Acs\Result listBaselineConfigs(array $arguments = [])
 * @method \Http\Promise\Promise listBaselineConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result getBaselineKeyPath(array $arguments = [])
 * @method \Http\Promise\Promise getBaselineKeyPathAsync($arguments = [])
 * @method \Dew\Acs\Result getBaselineStatus(array $arguments = [])
 * @method \Http\Promise\Promise getBaselineStatusAsync($arguments = [])
 * @method \Dew\Acs\Result listBaselineStatuses(array $arguments = [])
 * @method \Http\Promise\Promise listBaselineStatusesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRemind(array $arguments = [])
 * @method \Http\Promise\Promise deleteRemindAsync($arguments = [])
 * @method \Dew\Acs\Result updateRemind(array $arguments = [])
 * @method \Http\Promise\Promise updateRemindAsync($arguments = [])
 * @method \Dew\Acs\Result createRemind(array $arguments = [])
 * @method \Http\Promise\Promise createRemindAsync($arguments = [])
 * @method \Dew\Acs\Result getRemind(array $arguments = [])
 * @method \Http\Promise\Promise getRemindAsync($arguments = [])
 * @method \Dew\Acs\Result listReminds(array $arguments = [])
 * @method \Http\Promise\Promise listRemindsAsync($arguments = [])
 * @method \Dew\Acs\Result listTopics(array $arguments = [])
 * @method \Http\Promise\Promise listTopicsAsync($arguments = [])
 * @method \Dew\Acs\Result getTopic(array $arguments = [])
 * @method \Http\Promise\Promise getTopicAsync($arguments = [])
 * @method \Dew\Acs\Result getTopicInfluence(array $arguments = [])
 * @method \Http\Promise\Promise getTopicInfluenceAsync($arguments = [])
 * @method \Dew\Acs\Result getNode(array $arguments = [])
 * @method \Http\Promise\Promise getNodeAsync($arguments = [])
 * @method \Dew\Acs\Result listNodeInputOrOutput(array $arguments = [])
 * @method \Http\Promise\Promise listNodeInputOrOutputAsync($arguments = [])
 * @method \Dew\Acs\Result listNodes(array $arguments = [])
 * @method \Http\Promise\Promise listNodesAsync($arguments = [])
 * @method \Dew\Acs\Result getNodeCode(array $arguments = [])
 * @method \Http\Promise\Promise getNodeCodeAsync($arguments = [])
 * @method \Dew\Acs\Result getInstance(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result listInstances(array $arguments = [])
 * @method \Http\Promise\Promise listInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result getInstanceLog(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceLogAsync($arguments = [])
 * @method \Dew\Acs\Result stopInstance(array $arguments = [])
 * @method \Http\Promise\Promise stopInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result restartInstance(array $arguments = [])
 * @method \Http\Promise\Promise restartInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result setSuccessInstance(array $arguments = [])
 * @method \Http\Promise\Promise setSuccessInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result suspendInstance(array $arguments = [])
 * @method \Http\Promise\Promise suspendInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result resumeInstance(array $arguments = [])
 * @method \Http\Promise\Promise resumeInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result runCycleDagNodes(array $arguments = [])
 * @method \Http\Promise\Promise runCycleDagNodesAsync($arguments = [])
 * @method \Dew\Acs\Result runSmokeTest(array $arguments = [])
 * @method \Http\Promise\Promise runSmokeTestAsync($arguments = [])
 * @method \Dew\Acs\Result listSuccessInstanceAmount(array $arguments = [])
 * @method \Http\Promise\Promise listSuccessInstanceAmountAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceAmount(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceAmountAsync($arguments = [])
 * @method \Dew\Acs\Result topTenElapsedTimeInstance(array $arguments = [])
 * @method \Http\Promise\Promise topTenElapsedTimeInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result topTenErrorTimesInstance(array $arguments = [])
 * @method \Http\Promise\Promise topTenErrorTimesInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result getFileTypeStatistic(array $arguments = [])
 * @method \Http\Promise\Promise getFileTypeStatisticAsync($arguments = [])
 * @method \Dew\Acs\Result getInstanceStatusStatistic(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceStatusStatisticAsync($arguments = [])
 * @method \Dew\Acs\Result listFileType(array $arguments = [])
 * @method \Http\Promise\Promise listFileTypeAsync($arguments = [])
 * @method \Dew\Acs\Result runManualDagNodes(array $arguments = [])
 * @method \Http\Promise\Promise runManualDagNodesAsync($arguments = [])
 * @method \Dew\Acs\Result listManualDagInstances(array $arguments = [])
 * @method \Http\Promise\Promise listManualDagInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result getDag(array $arguments = [])
 * @method \Http\Promise\Promise getDagAsync($arguments = [])
 * @method \Dew\Acs\Result listDags(array $arguments = [])
 * @method \Http\Promise\Promise listDagsAsync($arguments = [])
 * @method \Dew\Acs\Result listNodesByOutput(array $arguments = [])
 * @method \Http\Promise\Promise listNodesByOutputAsync($arguments = [])
 * @method \Dew\Acs\Result runTriggerNode(array $arguments = [])
 * @method \Http\Promise\Promise runTriggerNodeAsync($arguments = [])
 * @method \Dew\Acs\Result getNodeParents(array $arguments = [])
 * @method \Http\Promise\Promise getNodeParentsAsync($arguments = [])
 * @method \Dew\Acs\Result getNodeChildren(array $arguments = [])
 * @method \Http\Promise\Promise getNodeChildrenAsync($arguments = [])
 * @method \Dew\Acs\Result updateNodeRunMode(array $arguments = [])
 * @method \Http\Promise\Promise updateNodeRunModeAsync($arguments = [])
 * @method \Dew\Acs\Result updateNodeOwner(array $arguments = [])
 * @method \Http\Promise\Promise updateNodeOwnerAsync($arguments = [])
 * @method \Dew\Acs\Result updateWorkbenchEventResult(array $arguments = [])
 * @method \Http\Promise\Promise updateWorkbenchEventResultAsync($arguments = [])
 * @method \Dew\Acs\Result listShiftPersonnels(array $arguments = [])
 * @method \Http\Promise\Promise listShiftPersonnelsAsync($arguments = [])
 * @method \Dew\Acs\Result listShiftSchedules(array $arguments = [])
 * @method \Http\Promise\Promise listShiftSchedulesAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceHistory(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result listInnerNodes(array $arguments = [])
 * @method \Http\Promise\Promise listInnerNodesAsync($arguments = [])
 * @method \Dew\Acs\Result offlineNode(array $arguments = [])
 * @method \Http\Promise\Promise offlineNodeAsync($arguments = [])
 * @method \Dew\Acs\Result getBaseline(array $arguments = [])
 * @method \Http\Promise\Promise getBaselineAsync($arguments = [])
 * @method \Dew\Acs\Result deleteBaseline(array $arguments = [])
 * @method \Http\Promise\Promise deleteBaselineAsync($arguments = [])
 * @method \Dew\Acs\Result listBaselines(array $arguments = [])
 * @method \Http\Promise\Promise listBaselinesAsync($arguments = [])
 * @method \Dew\Acs\Result createBaseline(array $arguments = [])
 * @method \Http\Promise\Promise createBaselineAsync($arguments = [])
 * @method \Dew\Acs\Result updateBaseline(array $arguments = [])
 * @method \Http\Promise\Promise updateBaselineAsync($arguments = [])
 * @method \Dew\Acs\Result updateQualityFollower(array $arguments = [])
 * @method \Http\Promise\Promise updateQualityFollowerAsync($arguments = [])
 * @method \Dew\Acs\Result updateQualityRule(array $arguments = [])
 * @method \Http\Promise\Promise updateQualityRuleAsync($arguments = [])
 * @method \Dew\Acs\Result getQualityRule(array $arguments = [])
 * @method \Http\Promise\Promise getQualityRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listQualityRules(array $arguments = [])
 * @method \Http\Promise\Promise listQualityRulesAsync($arguments = [])
 * @method \Dew\Acs\Result createQualityRule(array $arguments = [])
 * @method \Http\Promise\Promise createQualityRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deleteQualityFollower(array $arguments = [])
 * @method \Http\Promise\Promise deleteQualityFollowerAsync($arguments = [])
 * @method \Dew\Acs\Result deleteQualityRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteQualityRuleAsync($arguments = [])
 * @method \Dew\Acs\Result getQualityFollower(array $arguments = [])
 * @method \Http\Promise\Promise getQualityFollowerAsync($arguments = [])
 * @method \Dew\Acs\Result createQualityFollower(array $arguments = [])
 * @method \Http\Promise\Promise createQualityFollowerAsync($arguments = [])
 * @method \Dew\Acs\Result deleteQualityEntity(array $arguments = [])
 * @method \Http\Promise\Promise deleteQualityEntityAsync($arguments = [])
 * @method \Dew\Acs\Result getQualityEntity(array $arguments = [])
 * @method \Http\Promise\Promise getQualityEntityAsync($arguments = [])
 * @method \Dew\Acs\Result createQualityEntity(array $arguments = [])
 * @method \Http\Promise\Promise createQualityEntityAsync($arguments = [])
 * @method \Dew\Acs\Result createQualityRelativeNode(array $arguments = [])
 * @method \Http\Promise\Promise createQualityRelativeNodeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteQualityRelativeNode(array $arguments = [])
 * @method \Http\Promise\Promise deleteQualityRelativeNodeAsync($arguments = [])
 * @method \Dew\Acs\Result listQualityResultsByEntity(array $arguments = [])
 * @method \Http\Promise\Promise listQualityResultsByEntityAsync($arguments = [])
 * @method \Dew\Acs\Result listQualityResultsByRule(array $arguments = [])
 * @method \Http\Promise\Promise listQualityResultsByRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createDataServiceApi(array $arguments = [])
 * @method \Http\Promise\Promise createDataServiceApiAsync($arguments = [])
 * @method \Dew\Acs\Result publishDataServiceApi(array $arguments = [])
 * @method \Http\Promise\Promise publishDataServiceApiAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDataServiceApi(array $arguments = [])
 * @method \Http\Promise\Promise deleteDataServiceApiAsync($arguments = [])
 * @method \Dew\Acs\Result listDataServiceApis(array $arguments = [])
 * @method \Http\Promise\Promise listDataServiceApisAsync($arguments = [])
 * @method \Dew\Acs\Result getDataServiceApi(array $arguments = [])
 * @method \Http\Promise\Promise getDataServiceApiAsync($arguments = [])
 * @method \Dew\Acs\Result updateDataServiceApi(array $arguments = [])
 * @method \Http\Promise\Promise updateDataServiceApiAsync($arguments = [])
 * @method \Dew\Acs\Result getDataServicePublishedApi(array $arguments = [])
 * @method \Http\Promise\Promise getDataServicePublishedApiAsync($arguments = [])
 * @method \Dew\Acs\Result listDataServicePublishedApis(array $arguments = [])
 * @method \Http\Promise\Promise listDataServicePublishedApisAsync($arguments = [])
 * @method \Dew\Acs\Result listDataServiceApiAuthorities(array $arguments = [])
 * @method \Http\Promise\Promise listDataServiceApiAuthoritiesAsync($arguments = [])
 * @method \Dew\Acs\Result listDataServiceAuthorizedApis(array $arguments = [])
 * @method \Http\Promise\Promise listDataServiceAuthorizedApisAsync($arguments = [])
 * @method \Dew\Acs\Result abolishDataServiceApi(array $arguments = [])
 * @method \Http\Promise\Promise abolishDataServiceApiAsync($arguments = [])
 * @method \Dew\Acs\Result getDataServiceApplication(array $arguments = [])
 * @method \Http\Promise\Promise getDataServiceApplicationAsync($arguments = [])
 * @method \Dew\Acs\Result listDataServiceApplications(array $arguments = [])
 * @method \Http\Promise\Promise listDataServiceApplicationsAsync($arguments = [])
 * @method \Dew\Acs\Result createDataServiceFolder(array $arguments = [])
 * @method \Http\Promise\Promise createDataServiceFolderAsync($arguments = [])
 * @method \Dew\Acs\Result getDataServiceFolder(array $arguments = [])
 * @method \Http\Promise\Promise getDataServiceFolderAsync($arguments = [])
 * @method \Dew\Acs\Result listDataServiceFolders(array $arguments = [])
 * @method \Http\Promise\Promise listDataServiceFoldersAsync($arguments = [])
 * @method \Dew\Acs\Result createDataServiceGroup(array $arguments = [])
 * @method \Http\Promise\Promise createDataServiceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result getDataServiceGroup(array $arguments = [])
 * @method \Http\Promise\Promise getDataServiceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listDataServiceGroups(array $arguments = [])
 * @method \Http\Promise\Promise listDataServiceGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result createDataServiceApiAuthority(array $arguments = [])
 * @method \Http\Promise\Promise createDataServiceApiAuthorityAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDataServiceApiAuthority(array $arguments = [])
 * @method \Http\Promise\Promise deleteDataServiceApiAuthorityAsync($arguments = [])
 * @method \Dew\Acs\Result listDataServiceApiTest(array $arguments = [])
 * @method \Http\Promise\Promise listDataServiceApiTestAsync($arguments = [])
 * @method \Dew\Acs\Result testDataServiceApi(array $arguments = [])
 * @method \Http\Promise\Promise testDataServiceApiAsync($arguments = [])
 * @method \Dew\Acs\Result getDataServiceApiTest(array $arguments = [])
 * @method \Http\Promise\Promise getDataServiceApiTestAsync($arguments = [])
 * @method \Dew\Acs\Result submitDataServiceApi(array $arguments = [])
 * @method \Http\Promise\Promise submitDataServiceApiAsync($arguments = [])
 * @method \Dew\Acs\Result saveDataServiceApiTestResult(array $arguments = [])
 * @method \Http\Promise\Promise saveDataServiceApiTestResultAsync($arguments = [])
 * @method \Dew\Acs\Result getOpSensitiveData(array $arguments = [])
 * @method \Http\Promise\Promise getOpSensitiveDataAsync($arguments = [])
 * @method \Dew\Acs\Result desensitizeData(array $arguments = [])
 * @method \Http\Promise\Promise desensitizeDataAsync($arguments = [])
 * @method \Dew\Acs\Result getOpRiskData(array $arguments = [])
 * @method \Http\Promise\Promise getOpRiskDataAsync($arguments = [])
 * @method \Dew\Acs\Result getSensitiveData(array $arguments = [])
 * @method \Http\Promise\Promise getSensitiveDataAsync($arguments = [])
 * @method \Dew\Acs\Result scanSensitiveData(array $arguments = [])
 * @method \Http\Promise\Promise scanSensitiveDataAsync($arguments = [])
 * @method \Dew\Acs\Result dsgQuerySensResult(array $arguments = [])
 * @method \Http\Promise\Promise dsgQuerySensResultAsync($arguments = [])
 * @method \Dew\Acs\Result queryDefaultTemplate(array $arguments = [])
 * @method \Http\Promise\Promise queryDefaultTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result dsgStopSensIdentify(array $arguments = [])
 * @method \Http\Promise\Promise dsgStopSensIdentifyAsync($arguments = [])
 * @method \Dew\Acs\Result querySensClassification(array $arguments = [])
 * @method \Http\Promise\Promise querySensClassificationAsync($arguments = [])
 * @method \Dew\Acs\Result querySensLevel(array $arguments = [])
 * @method \Http\Promise\Promise querySensLevelAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecognizeRulesType(array $arguments = [])
 * @method \Http\Promise\Promise queryRecognizeRulesTypeAsync($arguments = [])
 * @method \Dew\Acs\Result dsgRunSensIdentify(array $arguments = [])
 * @method \Http\Promise\Promise dsgRunSensIdentifyAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRecognizeRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteRecognizeRuleAsync($arguments = [])
 * @method \Dew\Acs\Result querySensNodeInfo(array $arguments = [])
 * @method \Http\Promise\Promise querySensNodeInfoAsync($arguments = [])
 * @method \Dew\Acs\Result addRecognizeRule(array $arguments = [])
 * @method \Http\Promise\Promise addRecognizeRuleAsync($arguments = [])
 * @method \Dew\Acs\Result editRecognizeRule(array $arguments = [])
 * @method \Http\Promise\Promise editRecognizeRuleAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecognizeDataByRuleType(array $arguments = [])
 * @method \Http\Promise\Promise queryRecognizeDataByRuleTypeAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecognizeRuleDetail(array $arguments = [])
 * @method \Http\Promise\Promise queryRecognizeRuleDetailAsync($arguments = [])
 * @method \Dew\Acs\Result dsgUserGroupGetOdpsRoleGroups(array $arguments = [])
 * @method \Http\Promise\Promise dsgUserGroupGetOdpsRoleGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result dsgDesensPlanAddOrUpdate(array $arguments = [])
 * @method \Http\Promise\Promise dsgDesensPlanAddOrUpdateAsync($arguments = [])
 * @method \Dew\Acs\Result dsgPlatformQueryProjectsAndSchemaFromMeta(array $arguments = [])
 * @method \Http\Promise\Promise dsgPlatformQueryProjectsAndSchemaFromMetaAsync($arguments = [])
 * @method \Dew\Acs\Result dsgUserGroupDelete(array $arguments = [])
 * @method \Http\Promise\Promise dsgUserGroupDeleteAsync($arguments = [])
 * @method \Dew\Acs\Result dsgWhiteListDeleteList(array $arguments = [])
 * @method \Http\Promise\Promise dsgWhiteListDeleteListAsync($arguments = [])
 * @method \Dew\Acs\Result dsgScenedDeleteScene(array $arguments = [])
 * @method \Http\Promise\Promise dsgScenedDeleteSceneAsync($arguments = [])
 * @method \Dew\Acs\Result dsgDesensPlanDelete(array $arguments = [])
 * @method \Http\Promise\Promise dsgDesensPlanDeleteAsync($arguments = [])
 * @method \Dew\Acs\Result dsgDesensPlanUpdateStatus(array $arguments = [])
 * @method \Http\Promise\Promise dsgDesensPlanUpdateStatusAsync($arguments = [])
 * @method \Dew\Acs\Result dsgWhiteListQueryList(array $arguments = [])
 * @method \Http\Promise\Promise dsgWhiteListQueryListAsync($arguments = [])
 * @method \Dew\Acs\Result dsgSceneAddOrUpdateScene(array $arguments = [])
 * @method \Http\Promise\Promise dsgSceneAddOrUpdateSceneAsync($arguments = [])
 * @method \Dew\Acs\Result dsgSceneQuerySceneListByName(array $arguments = [])
 * @method \Http\Promise\Promise dsgSceneQuerySceneListByNameAsync($arguments = [])
 * @method \Dew\Acs\Result dsgUserGroupAddOrUpdate(array $arguments = [])
 * @method \Http\Promise\Promise dsgUserGroupAddOrUpdateAsync($arguments = [])
 * @method \Dew\Acs\Result dsgUserGroupQueryList(array $arguments = [])
 * @method \Http\Promise\Promise dsgUserGroupQueryListAsync($arguments = [])
 * @method \Dew\Acs\Result dsgUserGroupQueryUserList(array $arguments = [])
 * @method \Http\Promise\Promise dsgUserGroupQueryUserListAsync($arguments = [])
 * @method \Dew\Acs\Result dsgDesensPlanQueryList(array $arguments = [])
 * @method \Http\Promise\Promise dsgDesensPlanQueryListAsync($arguments = [])
 * @method \Dew\Acs\Result dsgWhiteListAddOrUpdate(array $arguments = [])
 * @method \Http\Promise\Promise dsgWhiteListAddOrUpdateAsync($arguments = [])
 * @method \Dew\Acs\Result dsgQueryDefaultTemplates(array $arguments = [])
 * @method \Http\Promise\Promise dsgQueryDefaultTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result createImportMigration(array $arguments = [])
 * @method \Http\Promise\Promise createImportMigrationAsync($arguments = [])
 * @method \Dew\Acs\Result getMigrationProcess(array $arguments = [])
 * @method \Http\Promise\Promise getMigrationProcessAsync($arguments = [])
 * @method \Dew\Acs\Result startMigration(array $arguments = [])
 * @method \Http\Promise\Promise startMigrationAsync($arguments = [])
 * @method \Dew\Acs\Result createExportMigration(array $arguments = [])
 * @method \Http\Promise\Promise createExportMigrationAsync($arguments = [])
 * @method \Dew\Acs\Result getMigrationSummary(array $arguments = [])
 * @method \Http\Promise\Promise getMigrationSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result listMigrations(array $arguments = [])
 * @method \Http\Promise\Promise listMigrationsAsync($arguments = [])
 * @method \Dew\Acs\Result createPermissionApplyOrder(array $arguments = [])
 * @method \Http\Promise\Promise createPermissionApplyOrderAsync($arguments = [])
 * @method \Dew\Acs\Result getPermissionApplyOrderDetail(array $arguments = [])
 * @method \Http\Promise\Promise getPermissionApplyOrderDetailAsync($arguments = [])
 * @method \Dew\Acs\Result listPermissionApplyOrders(array $arguments = [])
 * @method \Http\Promise\Promise listPermissionApplyOrdersAsync($arguments = [])
 * @method \Dew\Acs\Result approvePermissionApplyOrder(array $arguments = [])
 * @method \Http\Promise\Promise approvePermissionApplyOrderAsync($arguments = [])
 * @method \Dew\Acs\Result revokeTablePermission(array $arguments = [])
 * @method \Http\Promise\Promise revokeTablePermissionAsync($arguments = [])
 * @method \Dew\Acs\Result listExtensions(array $arguments = [])
 * @method \Http\Promise\Promise listExtensionsAsync($arguments = [])
 * @method \Dew\Acs\Result getExtension(array $arguments = [])
 * @method \Http\Promise\Promise getExtensionAsync($arguments = [])
 * @method \Dew\Acs\Result getOptionValueForProject(array $arguments = [])
 * @method \Http\Promise\Promise getOptionValueForProjectAsync($arguments = [])
 * @method \Dew\Acs\Result listEnabledExtensionsForProject(array $arguments = [])
 * @method \Http\Promise\Promise listEnabledExtensionsForProjectAsync($arguments = [])
 * @method \Dew\Acs\Result callbackExtension(array $arguments = [])
 * @method \Http\Promise\Promise callbackExtensionAsync($arguments = [])
 * @method \Dew\Acs\Result listCheckProcesses(array $arguments = [])
 * @method \Http\Promise\Promise listCheckProcessesAsync($arguments = [])
 * @method \Dew\Acs\Result createTable(array $arguments = [])
 * @method \Http\Promise\Promise createTableAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTable(array $arguments = [])
 * @method \Http\Promise\Promise deleteTableAsync($arguments = [])
 * @method \Dew\Acs\Result getDDLJobStatus(array $arguments = [])
 * @method \Http\Promise\Promise getDDLJobStatusAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaColumnLineage(array $arguments = [])
 * @method \Http\Promise\Promise getMetaColumnLineageAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaTableFullInfo(array $arguments = [])
 * @method \Http\Promise\Promise getMetaTableFullInfoAsync($arguments = [])
 * @method \Dew\Acs\Result getMetaTableLineage(array $arguments = [])
 * @method \Http\Promise\Promise getMetaTableLineageAsync($arguments = [])
 * @method \Dew\Acs\Result updateTable(array $arguments = [])
 * @method \Http\Promise\Promise updateTableAsync($arguments = [])
 * @method \Dew\Acs\Result updateTableAddColumn(array $arguments = [])
 * @method \Http\Promise\Promise updateTableAddColumnAsync($arguments = [])
 * @method \Dew\Acs\Result checkFileDeployment(array $arguments = [])
 * @method \Http\Promise\Promise checkFileDeploymentAsync($arguments = [])
 * @method \Dew\Acs\Result listRefDISyncTasks(array $arguments = [])
 * @method \Http\Promise\Promise listRefDISyncTasksAsync($arguments = [])
 * @method \Dew\Acs\Result exportDataSources(array $arguments = [])
 * @method \Http\Promise\Promise exportDataSourcesAsync($arguments = [])
 * @method \Dew\Acs\Result importDataSources(array $arguments = [])
 * @method \Http\Promise\Promise importDataSourcesAsync($arguments = [])
 * @method \Dew\Acs\Result updateClusterConfigs(array $arguments = [])
 * @method \Http\Promise\Promise updateClusterConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result listClusterConfigs(array $arguments = [])
 * @method \Http\Promise\Promise listClusterConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result listClusters(array $arguments = [])
 * @method \Http\Promise\Promise listClustersAsync($arguments = [])
 * @method \Dew\Acs\Result listEntitiesByTags(array $arguments = [])
 * @method \Http\Promise\Promise listEntitiesByTagsAsync($arguments = [])
 * @method \Dew\Acs\Result removeEntityTags(array $arguments = [])
 * @method \Http\Promise\Promise removeEntityTagsAsync($arguments = [])
 * @method \Dew\Acs\Result setEntityTags(array $arguments = [])
 * @method \Http\Promise\Promise setEntityTagsAsync($arguments = [])
 * @method \Dew\Acs\Result listEntityTags(array $arguments = [])
 * @method \Http\Promise\Promise listEntityTagsAsync($arguments = [])
 * @method \Dew\Acs\Result setDataSourceShare(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise setDataSourceShareAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result createConnection(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise createConnectionAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result createDagComplement(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise createDagComplementAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result createDagTest(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise createDagTestAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result createManualDag(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise createManualDagAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result deleteConnection(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise deleteConnectionAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result updateConnection(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise updateConnectionAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result listConnections(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise listConnectionsAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result getProjectDetail(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise getProjectDetailAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result listNodeIO(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise listNodeIOAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result getInstanceStatusCount(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise getInstanceStatusCountAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result listProgramTypeCount(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise listProgramTypeCountAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result getManualDagInstances(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise getManualDagInstancesAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result searchNodesByOutput(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise searchNodesByOutputAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result getNodeTypeListInfo(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise getNodeTypeListInfoAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result getNodeOnBaseline(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise getNodeOnBaselineAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result getSuccessInstanceTrend(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise getSuccessInstanceTrendAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result getInstanceCountTrend(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise getInstanceCountTrendAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result getInstanceConsumeTimeRank(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise getInstanceConsumeTimeRankAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result getInstanceErrorRank(array $arguments = []) {@deprecated 2020-05-18}
 * @method \Http\Promise\Promise getInstanceErrorRankAsync($arguments = []) {@deprecated 2020-05-18}
 * @method \Dew\Acs\Result importCertificate(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise importCertificateAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getCertificate(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getCertificateAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listCertificates(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listCertificatesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteCertificate(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteCertificateAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateProject(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateProjectAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteProject(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteProjectAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getProjectRole(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getProjectRoleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result grantMemberProjectRoles(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise grantMemberProjectRolesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result revokeMemberProjectRoles(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise revokeMemberProjectRolesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getProjectMember(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getProjectMemberAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result testDataSourceConnectivity(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise testDataSourceConnectivityAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result cloneDataSource(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise cloneDataSourceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getDataSource(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getDataSourceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createDataSourceSharedRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createDataSourceSharedRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteDataSourceSharedRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteDataSourceSharedRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDataSourceSharedRules(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDataSourceSharedRulesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createResourceGroup(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createResourceGroupAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteResourceGroup(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteResourceGroupAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateResourceGroup(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateResourceGroupAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getResourceGroup(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getResourceGroupAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result dissociateProjectFromResourceGroup(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise dissociateProjectFromResourceGroupAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result associateProjectToResourceGroup(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise associateProjectToResourceGroupAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createRoute(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createRouteAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteRoute(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteRouteAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateRoute(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateRouteAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getRoute(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getRouteAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listRoutes(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listRoutesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createNetwork(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createNetworkAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteNetwork(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteNetworkAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getNetwork(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getNetworkAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listNetworks(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listNetworksAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createNode(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createNodeAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteNode(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteNodeAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateNode(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateNodeAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result moveNode(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise moveNodeAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result renameNode(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise renameNodeAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listNodeDependencies(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listNodeDependenciesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createWorkflowDefinition(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createWorkflowDefinitionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result importWorkflowDefinition(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise importWorkflowDefinitionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteWorkflowDefinition(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteWorkflowDefinitionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateWorkflowDefinition(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateWorkflowDefinitionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result moveWorkflowDefinition(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise moveWorkflowDefinitionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result renameWorkflowDefinition(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise renameWorkflowDefinitionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getWorkflowDefinition(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getWorkflowDefinitionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listWorkflowDefinitions(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listWorkflowDefinitionsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createResource(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createResourceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteResource(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteResourceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateResource(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateResourceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result moveResource(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise moveResourceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result renameResource(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise renameResourceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getResource(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getResourceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listResources(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listResourcesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createFunction(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createFunctionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteFunction(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteFunctionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateFunction(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateFunctionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result moveFunction(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise moveFunctionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result renameFunction(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise renameFunctionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getFunction(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getFunctionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listFunctions(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listFunctionsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createPipelineRun(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createPipelineRunAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result abolishPipelineRun(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise abolishPipelineRunAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result execPipelineRunStage(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise execPipelineRunStageAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getPipelineRun(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getPipelineRunAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listPipelineRuns(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listPipelineRunsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listPipelineRunItems(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listPipelineRunItemsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getDeploymentPackage(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getDeploymentPackageAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDeploymentPackages(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDeploymentPackagesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDeploymentPackageFiles(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDeploymentPackageFilesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getDIJobLog(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getDIJobLogAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDIJobRunDetails(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDIJobRunDetailsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDIJobMetrics(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDIJobMetricsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDIJobEvents(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDIJobEventsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listCrawlerTypes(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listCrawlerTypesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listCatalogs(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listCatalogsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getCatalog(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getCatalogAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDatabases(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDatabasesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getDatabase(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getDatabaseAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listSchemas(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listSchemasAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getSchema(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getSchemaAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getTable(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getTableAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateTableBusinessMetadata(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateTableBusinessMetadataAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listColumns(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listColumnsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getColumn(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getColumnAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateColumnBusinessMetadata(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateColumnBusinessMetadataAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listPartitions(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listPartitionsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getPartition(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getPartitionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listLineageRelationships(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listLineageRelationshipsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getLineageRelationship(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getLineageRelationshipAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteLineageRelationship(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteLineageRelationshipAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createLineageRelationship(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createLineageRelationshipAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listLineages(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listLineagesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getMetaCollection(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getMetaCollectionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listEntitiesInMetaCollection(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listEntitiesInMetaCollectionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result addEntityIntoMetaCollection(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise addEntityIntoMetaCollectionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result removeEntityFromMetaCollection(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise removeEntityFromMetaCollectionAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listAlertRules(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listAlertRulesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getAlertRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getAlertRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateAlertRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateAlertRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteAlertRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteAlertRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createAlertRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createAlertRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteTask(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteTaskAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateTask(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateTaskAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result batchUpdateTasks(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise batchUpdateTasksAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getTask(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getTaskAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listTasks(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listTasksAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listUpstreamTasks(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listUpstreamTasksAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDownstreamTasks(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDownstreamTasksAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listTaskOperationLogs(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listTaskOperationLogsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateTaskInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateTaskInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getTaskInstance(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getTaskInstanceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getTaskInstanceLog(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getTaskInstanceLogAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listTaskInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listTaskInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listUpstreamTaskInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listUpstreamTaskInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listTaskInstanceOperationLogs(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listTaskInstanceOperationLogsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDownstreamTaskInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDownstreamTaskInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result suspendTaskInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise suspendTaskInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result resumeTaskInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise resumeTaskInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result stopTaskInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise stopTaskInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result setSuccessTaskInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise setSuccessTaskInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result rerunTaskInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise rerunTaskInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result removeTaskInstanceDependencies(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise removeTaskInstanceDependenciesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result triggerSchedulerTaskInstance(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise triggerSchedulerTaskInstanceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteWorkflow(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteWorkflowAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateWorkflow(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateWorkflowAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getWorkflow(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getWorkflowAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listWorkflows(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listWorkflowsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getRerunWorkflowInstancesResult(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getRerunWorkflowInstancesResultAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result rerunWorkflowInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise rerunWorkflowInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createWorkflowInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createWorkflowInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getCreateWorkflowInstancesResult(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getCreateWorkflowInstancesResultAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getWorkflowInstance(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getWorkflowInstanceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listWorkflowInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listWorkflowInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result startWorkflowInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise startWorkflowInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result stopWorkflowInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise stopWorkflowInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result executeAdhocWorkflowInstance(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise executeAdhocWorkflowInstanceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createDataQualityTemplate(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createDataQualityTemplateAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateDataQualityTemplate(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateDataQualityTemplateAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDataQualityTemplates(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDataQualityTemplatesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getDataQualityTemplate(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getDataQualityTemplateAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteDataQualityTemplate(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteDataQualityTemplateAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createDataQualityScan(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createDataQualityScanAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateDataQualityScan(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateDataQualityScanAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDataQualityScans(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDataQualityScansAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getDataQualityScan(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getDataQualityScanAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteDataQualityScan(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteDataQualityScanAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createDataQualityAlertRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createDataQualityAlertRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateDataQualityAlertRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateDataQualityAlertRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDataQualityAlertRules(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDataQualityAlertRulesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getDataQualityAlertRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getDataQualityAlertRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteDataQualityAlertRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteDataQualityAlertRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createDataQualityScanRun(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createDataQualityScanRunAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDataQualityScanRuns(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDataQualityScanRunsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getDataQualityScanRunLog(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getDataQualityScanRunLogAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getDataQualityScanRun(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getDataQualityScanRunAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createDataAssetTag(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createDataAssetTagAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteDataAssetTag(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteDataAssetTagAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateDataAssetTag(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateDataAssetTagAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDataAssetTags(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDataAssetTagsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result tagDataAssets(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise tagDataAssetsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result unTagDataAssets(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise unTagDataAssetsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDataAssets(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDataAssetsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getJobStatus(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getJobStatusAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDataQualityEvaluationTasks(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDataQualityEvaluationTasksAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDataQualityRules(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDataQualityRulesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDataQualityEvaluationTaskInstances(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDataQualityEvaluationTaskInstancesAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDataQualityResults(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDataQualityResultsAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result detachDataQualityRulesFromEvaluationTask(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise detachDataQualityRulesFromEvaluationTaskAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteDataQualityEvaluationTask(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteDataQualityEvaluationTaskAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getDataQualityEvaluationTaskInstance(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getDataQualityEvaluationTaskInstanceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getDataQualityEvaluationTask(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getDataQualityEvaluationTaskAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result attachDataQualityRulesToEvaluationTask(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise attachDataQualityRulesToEvaluationTaskAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateDataQualityEvaluationTask(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateDataQualityEvaluationTaskAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createDataQualityEvaluationTaskInstance(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createDataQualityEvaluationTaskInstanceAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createDataQualityEvaluationTask(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createDataQualityEvaluationTaskAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteDataQualityRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteDataQualityRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateDataQualityRuleTemplate(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateDataQualityRuleTemplateAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createDataQualityRuleTemplate(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createDataQualityRuleTemplateAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result deleteDataQualityRuleTemplate(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise deleteDataQualityRuleTemplateAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getDataQualityRuleTemplate(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getDataQualityRuleTemplateAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result createDataQualityRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise createDataQualityRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result updateDataQualityRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise updateDataQualityRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result getDataQualityRule(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise getDataQualityRuleAsync($arguments = []) {@since 2024-05-18}
 * @method \Dew\Acs\Result listDataQualityRuleTemplates(array $arguments = []) {@since 2024-05-18}
 * @method \Http\Promise\Promise listDataQualityRuleTemplatesAsync($arguments = []) {@since 2024-05-18}
 */
final class DataworksPublicClient extends AcsClient
{
    //
}
