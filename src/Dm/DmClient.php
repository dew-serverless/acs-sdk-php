<?php

declare(strict_types=1);

namespace Dew\Acs\Dm;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result descAccountSummary(array $arguments = [])
 * @method \Http\Promise\Promise descAccountSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result addIpfilter(array $arguments = [])
 * @method \Http\Promise\Promise addIpfilterAsync($arguments = [])
 * @method \Dew\Acs\Result deleteIpfilterByEdmId(array $arguments = [])
 * @method \Http\Promise\Promise deleteIpfilterByEdmIdAsync($arguments = [])
 * @method \Dew\Acs\Result updateIpProtection(array $arguments = [])
 * @method \Http\Promise\Promise updateIpProtectionAsync($arguments = [])
 * @method \Dew\Acs\Result getIpProtection(array $arguments = [])
 * @method \Http\Promise\Promise getIpProtectionAsync($arguments = [])
 * @method \Dew\Acs\Result getIpfilterList(array $arguments = [])
 * @method \Http\Promise\Promise getIpfilterListAsync($arguments = [])
 * @method \Dew\Acs\Result queryTaskByParam(array $arguments = [])
 * @method \Http\Promise\Promise queryTaskByParamAsync($arguments = [])
 * @method \Dew\Acs\Result senderStatisticsByTagNameAndBatchID(array $arguments = [])
 * @method \Http\Promise\Promise senderStatisticsByTagNameAndBatchIDAsync($arguments = [])
 * @method \Dew\Acs\Result senderStatisticsDetailByParam(array $arguments = [])
 * @method \Http\Promise\Promise senderStatisticsDetailByParamAsync($arguments = [])
 * @method \Dew\Acs\Result getTrackList(array $arguments = [])
 * @method \Http\Promise\Promise getTrackListAsync($arguments = [])
 * @method \Dew\Acs\Result getTrackListByMailFromAndTagName(array $arguments = [])
 * @method \Http\Promise\Promise getTrackListByMailFromAndTagNameAsync($arguments = [])
 * @method \Dew\Acs\Result singleSendMail(array $arguments = [])
 * @method \Http\Promise\Promise singleSendMailAsync($arguments = [])
 * @method \Dew\Acs\Result batchSendMail(array $arguments = [])
 * @method \Http\Promise\Promise batchSendMailAsync($arguments = [])
 * @method \Dew\Acs\Result sendTestByTemplate(array $arguments = [])
 * @method \Http\Promise\Promise sendTestByTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result createDomain(array $arguments = [])
 * @method \Http\Promise\Promise createDomainAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDomain(array $arguments = [])
 * @method \Http\Promise\Promise deleteDomainAsync($arguments = [])
 * @method \Dew\Acs\Result modifyPWByDomain(array $arguments = [])
 * @method \Http\Promise\Promise modifyPWByDomainAsync($arguments = [])
 * @method \Dew\Acs\Result queryDomainByParam(array $arguments = [])
 * @method \Http\Promise\Promise queryDomainByParamAsync($arguments = [])
 * @method \Dew\Acs\Result checkDomain(array $arguments = [])
 * @method \Http\Promise\Promise checkDomainAsync($arguments = [])
 * @method \Dew\Acs\Result descDomain(array $arguments = [])
 * @method \Http\Promise\Promise descDomainAsync($arguments = [])
 * @method \Dew\Acs\Result createMailAddress(array $arguments = [])
 * @method \Http\Promise\Promise createMailAddressAsync($arguments = [])
 * @method \Dew\Acs\Result deleteMailAddress(array $arguments = [])
 * @method \Http\Promise\Promise deleteMailAddressAsync($arguments = [])
 * @method \Dew\Acs\Result modifyMailAddress(array $arguments = [])
 * @method \Http\Promise\Promise modifyMailAddressAsync($arguments = [])
 * @method \Dew\Acs\Result queryInvalidAddress(array $arguments = [])
 * @method \Http\Promise\Promise queryInvalidAddressAsync($arguments = [])
 * @method \Dew\Acs\Result queryMailAddressByParam(array $arguments = [])
 * @method \Http\Promise\Promise queryMailAddressByParamAsync($arguments = [])
 * @method \Dew\Acs\Result approveReplyMailAddress(array $arguments = [])
 * @method \Http\Promise\Promise approveReplyMailAddressAsync($arguments = [])
 * @method \Dew\Acs\Result checkReplyToMailAddress(array $arguments = [])
 * @method \Http\Promise\Promise checkReplyToMailAddressAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInvalidAddress(array $arguments = [])
 * @method \Http\Promise\Promise deleteInvalidAddressAsync($arguments = [])
 * @method \Dew\Acs\Result createReceiver(array $arguments = [])
 * @method \Http\Promise\Promise createReceiverAsync($arguments = [])
 * @method \Dew\Acs\Result deleteReceiver(array $arguments = [])
 * @method \Http\Promise\Promise deleteReceiverAsync($arguments = [])
 * @method \Dew\Acs\Result deleteReceiverDetail(array $arguments = [])
 * @method \Http\Promise\Promise deleteReceiverDetailAsync($arguments = [])
 * @method \Dew\Acs\Result queryReceiverByParam(array $arguments = [])
 * @method \Http\Promise\Promise queryReceiverByParamAsync($arguments = [])
 * @method \Dew\Acs\Result queryReceiverDetail(array $arguments = [])
 * @method \Http\Promise\Promise queryReceiverDetailAsync($arguments = [])
 * @method \Dew\Acs\Result saveReceiverDetail(array $arguments = [])
 * @method \Http\Promise\Promise saveReceiverDetailAsync($arguments = [])
 * @method \Dew\Acs\Result createTag(array $arguments = [])
 * @method \Http\Promise\Promise createTagAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTag(array $arguments = [])
 * @method \Http\Promise\Promise deleteTagAsync($arguments = [])
 * @method \Dew\Acs\Result modifyTag(array $arguments = [])
 * @method \Http\Promise\Promise modifyTagAsync($arguments = [])
 * @method \Dew\Acs\Result queryTagByParam(array $arguments = [])
 * @method \Http\Promise\Promise queryTagByParamAsync($arguments = [])
 * @method \Dew\Acs\Result listUserSuppression(array $arguments = [])
 * @method \Http\Promise\Promise listUserSuppressionAsync($arguments = [])
 * @method \Dew\Acs\Result updateUser(array $arguments = [])
 * @method \Http\Promise\Promise updateUserAsync($arguments = [])
 * @method \Dew\Acs\Result getUser(array $arguments = [])
 * @method \Http\Promise\Promise getUserAsync($arguments = [])
 * @method \Dew\Acs\Result createUserSuppression(array $arguments = [])
 * @method \Http\Promise\Promise createUserSuppressionAsync($arguments = [])
 * @method \Dew\Acs\Result removeUserSuppression(array $arguments = [])
 * @method \Http\Promise\Promise removeUserSuppressionAsync($arguments = [])
 * @method \Dew\Acs\Result dedicatedIpNonePoolList(array $arguments = [])
 * @method \Http\Promise\Promise dedicatedIpNonePoolListAsync($arguments = [])
 * @method \Dew\Acs\Result dedicatedIpChangeWarmupType(array $arguments = [])
 * @method \Http\Promise\Promise dedicatedIpChangeWarmupTypeAsync($arguments = [])
 * @method \Dew\Acs\Result dedicatedIpPoolCreate(array $arguments = [])
 * @method \Http\Promise\Promise dedicatedIpPoolCreateAsync($arguments = [])
 * @method \Dew\Acs\Result dedicatedIpPoolList(array $arguments = [])
 * @method \Http\Promise\Promise dedicatedIpPoolListAsync($arguments = [])
 * @method \Dew\Acs\Result dedicatedIpPoolUpdate(array $arguments = [])
 * @method \Http\Promise\Promise dedicatedIpPoolUpdateAsync($arguments = [])
 * @method \Dew\Acs\Result dedicatedIpAutoRenewal(array $arguments = [])
 * @method \Http\Promise\Promise dedicatedIpAutoRenewalAsync($arguments = [])
 * @method \Dew\Acs\Result dedicatedIpPoolDelete(array $arguments = [])
 * @method \Http\Promise\Promise dedicatedIpPoolDeleteAsync($arguments = [])
 * @method \Dew\Acs\Result dedicatedIpList(array $arguments = [])
 * @method \Http\Promise\Promise dedicatedIpListAsync($arguments = [])
 * @method \Dew\Acs\Result unblockSending(array $arguments = [])
 * @method \Http\Promise\Promise unblockSendingAsync($arguments = [])
 * @method \Dew\Acs\Result listBlockSending(array $arguments = [])
 * @method \Http\Promise\Promise listBlockSendingAsync($arguments = [])
 */
final class DmClient extends AcsClient
{
    //
}
