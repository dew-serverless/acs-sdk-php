<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'RPC',
    'product' => 'Alidns',
    'version' => '2015-01-09',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 73378,
      'title' => '云解析实例',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeDnsProductInstance',
        1 => 'DescribeDnsProductInstances',
      ),
    ),
    1 => 
    array (
      'id' => 73429,
      'title' => '域名',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddDomain',
        1 => 'AddDomainBackup',
        2 => 'AddDomainGroup',
        3 => 'DeleteDomainGroup',
        4 => 'DeleteDomain',
        5 => 'ChangeDomainOfDnsProduct',
        6 => 'ModifyHichinaDomainDNS',
        7 => 'UpdateDomainGroup',
        8 => 'UpdateDomainRemark',
        9 => 'ChangeDomainGroup',
        10 => 'SetDomainDnssecStatus',
        11 => 'DescribeDomainInfo',
        12 => 'DescribeDomainLogs',
        13 => 'DescribeDomainNs',
        14 => 'DescribeDomains',
        15 => 'DescribeDomainStatistics',
        16 => 'DescribeDomainStatisticsSummary',
        17 => 'DescribeRecordStatistics',
        18 => 'DescribeRecordStatisticsSummary',
        19 => 'DescribeInstanceDomains',
        20 => 'DescribeTransferDomains',
        21 => 'GetMainDomainName',
        22 => 'DescribeDNSSLBSubDomains',
        23 => 'DescribeDomainDnssecInfo',
        24 => 'DescribeDomainGroups',
        25 => 'BindInstanceDomains',
        26 => 'RetrieveDomain',
        27 => 'OperateBatchDomain',
        28 => 'TransferDomain',
        29 => 'UnbindInstanceDomains',
      ),
    ),
    2 => 
    array (
      'id' => 73337,
      'title' => '权威代理域名',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddDnsCacheDomain',
        1 => 'UpdateDnsCacheDomain',
        2 => 'UpdateDnsCacheDomainRemark',
        3 => 'DeleteDnsCacheDomain',
        4 => 'DescribeDnsCacheDomains',
      ),
    ),
    3 => 
    array (
      'id' => 73319,
      'title' => '解析记录',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddDomainRecord',
        1 => 'DeleteDomainRecord',
        2 => 'DeleteSubDomainRecords',
        3 => 'UpdateDomainRecord',
        4 => 'UpdateDomainRecordRemark',
        5 => 'SetDomainRecordStatus',
        6 => 'DescribeDomainRecordInfo',
        7 => 'DescribeDomainRecords',
        8 => 'DescribeRecordLogs',
        9 => 'DescribeSubDomainRecords',
        10 => 'GetTxtRecordForVerify',
      ),
    ),
    4 => 
    array (
      'id' => 73312,
      'title' => '解析请求来源线路',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddCustomLine',
        1 => 'DeleteCustomLines',
        2 => 'UpdateCustomLine',
        3 => 'DescribeCustomLine',
        4 => 'DescribeCustomLines',
        5 => 'DescribeSupportLines',
      ),
    ),
    5 => 
    array (
      'id' => 73331,
      'title' => '权重',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'SetDNSSLBStatus',
        1 => 'UpdateDNSSLBWeight',
      ),
    ),
    6 => 
    array (
      'id' => 73334,
      'title' => '批量处理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeBatchResultCount',
        1 => 'DescribeBatchResultDetail',
      ),
    ),
    7 => 
    array (
      'id' => 73413,
      'title' => '资源',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeTags',
        1 => 'ListTagResources',
        2 => 'TagResources',
        3 => 'UntagResources',
        4 => 'MoveDomainResourceGroup',
      ),
    ),
    8 => 
    array (
      'id' => 73396,
      'title' => 'GTM 实例',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'SetGtmAccessMode',
        1 => 'UpdateDnsGtmInstanceGlobalConfig',
        2 => 'UpdateGtmInstanceGlobalConfig',
        3 => 'UpdateDnsGtmAccessStrategy',
        4 => 'DescribeDnsGtmAddrAttributeInfo',
        5 => 'DescribeDnsGtmAvailableAlertGroup',
        6 => 'DescribeDnsGtmInstance',
        7 => 'DescribeGtmInstance',
        8 => 'DescribeDnsGtmInstances',
        9 => 'DescribeGtmInstances',
        10 => 'DescribeDnsGtmInstanceStatus',
        11 => 'DescribeGtmInstanceStatus',
        12 => 'DescribeDnsGtmLogs',
        13 => 'DescribeGtmAvailableAlertGroup',
        14 => 'DescribeGtmLogs',
        15 => 'DescribeGtmInstanceSystemCname',
        16 => 'DescribeDnsGtmInstanceSystemCname',
        17 => 'CopyGtmConfig',
        18 => 'MoveGtmResourceGroup',
      ),
    ),
    9 => 
    array (
      'id' => 73366,
      'title' => '地址池',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddGtmAddressPool',
        1 => 'AddDnsGtmAddressPool',
        2 => 'DeleteDnsGtmAddressPool',
        3 => 'DeleteGtmAddressPool',
        4 => 'UpdateDnsGtmAddressPool',
        5 => 'UpdateGtmAddressPool',
        6 => 'DescribeDnsGtmInstanceAddressPool',
        7 => 'DescribeDnsGtmInstanceAddressPools',
        8 => 'DescribeDnsGtmAddressPoolAvailableConfig',
        9 => 'DescribeGtmInstanceAddressPool',
        10 => 'DescribeGtmInstanceAddressPools',
      ),
    ),
    10 => 
    array (
      'id' => 73341,
      'title' => '健康检查',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddDnsGtmMonitor',
        1 => 'AddGtmMonitor',
        2 => 'UpdateDnsGtmMonitor',
        3 => 'UpdateGtmMonitor',
        4 => 'SetDnsGtmMonitorStatus',
        5 => 'SetGtmMonitorStatus',
        6 => 'DescribeGtmMonitorAvailableConfig',
        7 => 'DescribeGtmMonitorConfig',
        8 => 'DescribeDnsGtmMonitorAvailableConfig',
        9 => 'DescribeDnsGtmMonitorConfig',
      ),
    ),
    11 => 
    array (
      'id' => 73352,
      'title' => '访问策略',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddDnsGtmAccessStrategy',
        1 => 'AddGtmAccessStrategy',
        2 => 'DeleteDnsGtmAccessStrategy',
        3 => 'DeleteGtmAccessStrategy',
        4 => 'UpdateGtmAccessStrategy',
        5 => 'SetDnsGtmAccessMode',
        6 => 'DescribeDnsGtmAccessStrategies',
        7 => 'DescribeDnsGtmAccessStrategy',
        8 => 'DescribeDnsGtmAccessStrategyAvailableConfig',
        9 => 'DescribeGtmAccessStrategies',
        10 => 'DescribeGtmAccessStrategy',
        11 => 'DescribeGtmAccessStrategyAvailableConfig',
        12 => 'SwitchDnsGtmInstanceStrategyMode',
      ),
    ),
    12 => 
    array (
      'id' => 73389,
      'title' => 'DoH 域名',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeDohAccountStatistics',
        1 => 'DescribeDohDomainStatistics',
        2 => 'DescribeDohDomainStatisticsSummary',
        3 => 'DescribeDohSubDomainStatistics',
        4 => 'DescribeDohSubDomainStatisticsSummary',
        5 => 'DescribeDohUserInfo',
      ),
    ),
    13 => 
    array (
      'id' => 73419,
      'title' => '容灾',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddGtmRecoveryPlan',
        1 => 'DeleteGtmRecoveryPlan',
        2 => 'UpdateGtmRecoveryPlan',
        3 => 'DescribeGtmRecoveryPlan',
        4 => 'DescribeGtmRecoveryPlanAvailableConfig',
        5 => 'DescribeGtmRecoveryPlans',
        6 => 'ExecuteGtmRecoveryPlan',
        7 => 'PreviewGtmRecoveryPlan',
        8 => 'RollbackGtmRecoveryPlan',
      ),
    ),
    14 => 
    array (
      'id' => 73384,
      'title' => 'PdnsAppKey',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreatePdnsAppKey',
        1 => 'RemovePdnsAppKey',
        2 => 'DescribePdnsAppKey',
        3 => 'DescribePdnsAppKeys',
      ),
    ),
    15 => 
    array (
      'id' => 192681,
      'title' => 'GTM3.0',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeCloudGtmInstanceConfigFullInfo',
        1 => 'ListCloudGtmAddressPools',
        2 => 'ListCloudGtmInstanceConfigs',
        3 => 'SearchCloudGtmMonitorTemplates',
        4 => 'UpdateCloudGtmAddressRemark',
        5 => 'CreateCloudGtmAddress',
        6 => 'UpdateCloudGtmAddress',
        7 => 'UpdateCloudGtmAddressEnableStatus',
        8 => 'UpdateCloudGtmAddressManualAvailableStatus',
        9 => 'UpdateCloudGtmAddressPoolEnableStatus',
        10 => 'CreateCloudGtmAddressPool',
        11 => 'UpdateCloudGtmAddressPoolRemark',
        12 => 'DeleteCloudGtmAddressPool',
        13 => 'UpdateCloudGtmAddressPoolLbStrategy',
        14 => 'DeleteCloudGtmAddress',
        15 => 'UpdateCloudGtmAddressPoolBasicConfig',
        16 => 'ReplaceCloudGtmAddressPoolAddress',
        17 => 'UpdateCloudGtmInstanceConfigBasic',
        18 => 'UpdateCloudGtmInstanceConfigLbStrategy',
        19 => 'ReplaceCloudGtmInstanceConfigAddressPool',
        20 => 'UpdateCloudGtmInstanceConfigEnableStatus',
        21 => 'CreateCloudGtmMonitorTemplate',
        22 => 'UpdateCloudGtmInstanceConfigRemark',
        23 => 'DeleteCloudGtmInstanceConfig',
        24 => 'DeleteCloudGtmMonitorTemplate',
        25 => 'UpdateCloudGtmMonitorTemplate',
        26 => 'ListCloudGtmMonitorTemplates',
        27 => 'DescribeCloudGtmMonitorTemplate',
        28 => 'ListCloudGtmMonitorNodes',
        29 => 'DescribeCloudGtmAddress',
        30 => 'DescribeCloudGtmAddressPool',
        31 => 'DescribeCloudGtmAddressReference',
        32 => 'SearchCloudGtmAddressPools',
        33 => 'ListCloudGtmAddresses',
        34 => 'ListCloudGtmInstances',
        35 => 'SearchCloudGtmInstances',
        36 => 'DescribeCloudGtmAddressPoolReference',
        37 => 'SearchCloudGtmInstanceConfigs',
        38 => 'SearchCloudGtmAddresses',
        39 => 'DescribeCloudGtmSystemLines',
        40 => 'ListCloudGtmAlertLogs',
        41 => 'DescribeCloudGtmInstanceConfigAlert',
        42 => 'UpdateCloudGtmGlobalAlert',
        43 => 'UpdateCloudGtmMonitorTemplateRemark',
        44 => 'DescribeCloudGtmGlobalAlert',
        45 => 'CreateCloudGtmInstanceConfig',
        46 => 'UpdateCloudGtmInstanceConfigAlert',
        47 => 'UpdateCloudGtmInstanceName',
        48 => 'ListCloudGtmAvailableAlertGroups',
        49 => 'DescribeCloudGtmSummary',
      ),
    ),
    16 => 
    array (
      'id' => 182652,
      'title' => '其他',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ValidateDnsGtmCnameRrCanUse',
        1 => 'CreatePdnsUdpIpSegment',
        2 => 'DescribePdnsUdpIpSegments',
        3 => 'RemovePdnsUdpIpSegment',
        4 => 'DescribePdnsThreatStatistics',
        5 => 'DescribePdnsUserInfo',
        6 => 'DescribePdnsRequestStatistic',
        7 => 'ValidatePdnsUdpIpSegment',
        8 => 'DescribePdnsThreatLogs',
        9 => 'DescribePdnsRequestStatistics',
        10 => 'DescribePdnsOperateLogs',
        11 => 'ResumePdnsService',
        12 => 'DescribePdnsAccountSummary',
        13 => 'PausePdnsService',
        14 => 'DescribePdnsThreatStatistic',
        15 => 'UpdateAppKeyState',
        16 => 'UpdateIspFlushCacheInstanceConfig',
        17 => 'SubmitIspFlushCacheTask',
        18 => 'DescribeIspFlushCacheRemainQuota',
        19 => 'DescribeIspFlushCacheInstances',
        20 => 'DescribeIspFlushCacheTask',
        21 => 'DescribeIspFlushCacheTasks',
        22 => 'DescribeRecordResolveStatisticsSummary',
        23 => 'DescribeDomainResolveStatisticsSummary',
        24 => 'DescribeInternetDnsLogs',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
    ),
  ),
  'apis' => 
  array (
    'DescribeDnsProductInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。可通过调用**DescribeDomainInfo**获取。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'i-8fxxxx',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'MonitorNodeCount' => 
              array (
                'description' => '监控节点个数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '5',
              ),
              'InBlackHole' => 
              array (
                'description' => '域名是否处于黑洞状态。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'BindDomainCount' => 
              array (
                'description' => '适用于个人版、企业标准版、企业旗舰版用户调用，指付费版DNS实例可以绑定的域名个数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '5',
              ),
              'RegionLines' => 
              array (
                'description' => '是否允许地域线路。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'BindCount' => 
              array (
                'description' => '适用于定制版用户调用，指付费版DNS实例可支持更换域名次数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '3',
              ),
              'EndTime' => 
              array (
                'description' => '实例到期时间。',
                'type' => 'string',
                'example' => '2015-12-12T09:23Z',
              ),
              'StartTimestamp' => 
              array (
                'description' => '实例购买时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1474335170000',
              ),
              'ISPLines' => 
              array (
                'description' => '运营商解析请求来源线路列表。',
                'type' => 'string',
                'example' => '电信、移动、联通、教育网',
              ),
              'EndTimestamp' => 
              array (
                'description' => '实例到期时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1474335170000',
              ),
              'DnsServers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DnsServer' => 
                  array (
                    'description' => '域名当前设置的DNS服务器列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'DNS服务器详情。',
                      'type' => 'string',
                      'example' => '{"DnsServer": ["vip1.alidns.com","vip2.alidns.com"]}',
                    ),
                  ),
                ),
              ),
              'DDosDefendQuery' => 
              array (
                'description' => '适用于定制版用户调用，DNS防护QPS（万qps）',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '50',
              ),
              'DnsSecurity' => 
              array (
                'description' => 'DNS安全。取值：

- **no**：不需要
- **basic**：dns攻击基础防御
- **advanced**：dns攻击全力防御',
                'type' => 'string',
                'example' => 'advanced',
              ),
              'DomainType' => 
              array (
                'description' => '实例类型：
- PUBLIC：权威托管域名实例。
- CACHE：权威代理域名实例。',
                'type' => 'string',
                'example' => 'PUBLIC',
              ),
              'URLForwardCount' => 
              array (
                'description' => 'URL转发数量（个）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
              'TTLMinValue' => 
              array (
                'description' => '最小TTL值（秒）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'PaymentType' => 
              array (
                'description' => '付费类型。',
                'type' => 'string',
                'example' => 'Subscription',
              ),
              'VersionName' => 
              array (
                'description' => '云解析产品名称。',
                'type' => 'string',
                'example' => '企业旗舰版',
              ),
              'OverseaLine' => 
              array (
                'description' => '海外线路。',
                'type' => 'string',
                'example' => '海外大洲',
              ),
              'ISPRegionLines' => 
              array (
                'description' => '运营商解析请求来源线路列表。',
                'type' => 'string',
                'example' => '电信（省份）、移动（省份）、联通（省份）、教育网（省份）',
              ),
              'Gslb' => 
              array (
                'description' => '是否允许GSLB。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'BindUsedCount' => 
              array (
                'description' => '适用于定制版用户调用，指付费版DNS实例已使用的更换域名次数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'DnsSLBCount' => 
              array (
                'description' => '负载均衡（单域名、单线路的IP地址容量）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '15',
              ),
              'InstanceId' => 
              array (
                'description' => '云解析产品ID。',
                'type' => 'string',
                'example' => 'i-8fxxx',
              ),
              'MonitorTaskCount' => 
              array (
                'description' => '监控任务数（个）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'StartTime' => 
              array (
                'description' => '购买时间。',
                'type' => 'string',
                'example' => '2015-12-12T09:23Z',
              ),
              'DDosDefendFlow' => 
              array (
                'description' => 'DNS防护流量（单位：G）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '50',
              ),
              'MonitorFrequency' => 
              array (
                'description' => '监控频率（单位：分钟）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '50',
              ),
              'SearchEngineLines' => 
              array (
                'description' => '搜索引擎解析请求来源线路列表。',
                'type' => 'string',
                'example' => '搜索引擎、谷歌、百度、必应',
              ),
              'BindDomainUsedCount' => 
              array (
                'description' => '适用于个人版、企业标准版、企业旗舰版用户调用，指付费版DNS实例已绑定使用的域名个数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '3',
              ),
              'VersionCode' => 
              array (
                'description' => '云解析产品code。',
                'type' => 'string',
                'example' => 'version1',
              ),
              'OverseaDDosDefendFlow' => 
              array (
                'description' => '海外DNS防护（单位：G）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'InClean' => 
              array (
                'description' => '域名是否处于清洗状态。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'SubDomainLevel' => 
              array (
                'description' => '子域名级别（个）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '6',
              ),
              'Domain' => 
              array (
                'description' => '绑定的域名。

如果为空，则表示未绑定域名。',
                'type' => 'string',
                'example' => 'dns-example.top',
              ),
              'AutoRenewal' => 
              array (
                'description' => '实例自动续费状态。

- **true**：自动续费。

- **false**：非自动续费。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"MonitorNodeCount\\": 5,\\n  \\"InBlackHole\\": false,\\n  \\"BindDomainCount\\": 5,\\n  \\"RegionLines\\": true,\\n  \\"BindCount\\": 3,\\n  \\"EndTime\\": \\"2015-12-12T09:23Z\\",\\n  \\"StartTimestamp\\": 1474335170000,\\n  \\"ISPLines\\": \\"电信、移动、联通、教育网\\",\\n  \\"EndTimestamp\\": 1474335170000,\\n  \\"DnsServers\\": {\\n    \\"DnsServer\\": [\\n      \\"{\\\\\\"DnsServer\\\\\\": [\\\\\\"vip1.alidns.com\\\\\\",\\\\\\"vip2.alidns.com\\\\\\"]}\\"\\n    ]\\n  },\\n  \\"DDosDefendQuery\\": 50,\\n  \\"DnsSecurity\\": \\"advanced\\",\\n  \\"DomainType\\": \\"PUBLIC\\",\\n  \\"URLForwardCount\\": 20,\\n  \\"TTLMinValue\\": 10,\\n  \\"PaymentType\\": \\"Subscription\\",\\n  \\"VersionName\\": \\"企业旗舰版\\",\\n  \\"OverseaLine\\": \\"海外大洲\\",\\n  \\"ISPRegionLines\\": \\"电信（省份）、移动（省份）、联通（省份）、教育网（省份）\\",\\n  \\"Gslb\\": true,\\n  \\"BindUsedCount\\": 1,\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"DnsSLBCount\\": 15,\\n  \\"InstanceId\\": \\"i-8fxxx\\",\\n  \\"MonitorTaskCount\\": 2,\\n  \\"StartTime\\": \\"2015-12-12T09:23Z\\",\\n  \\"DDosDefendFlow\\": 50,\\n  \\"MonitorFrequency\\": 50,\\n  \\"SearchEngineLines\\": \\"搜索引擎、谷歌、百度、必应\\",\\n  \\"BindDomainUsedCount\\": 3,\\n  \\"VersionCode\\": \\"version1\\",\\n  \\"OverseaDDosDefendFlow\\": 1,\\n  \\"InClean\\": false,\\n  \\"SubDomainLevel\\": 6,\\n  \\"Domain\\": \\"dns-example.top\\",\\n  \\"AutoRenewal\\": true\\n}","errorExample":""},{"type":"xml","example":"<DescribeDnsProductInstanceResponse>\\n    <MonitorNodeCount>5</MonitorNodeCount>\\n    <InBlackHole>false</InBlackHole>\\n    <BindDomainCount>5</BindDomainCount>\\n    <RegionLines>true</RegionLines>\\n    <BindCount>3</BindCount>\\n    <EndTime>2015-12-12T09:23Z</EndTime>\\n    <StartTimestamp>1474335170000</StartTimestamp>\\n    <ISPLines>电信、移动、联通、教育网</ISPLines>\\n    <EndTimestamp>1474335170000</EndTimestamp>\\n    <DnsServers>{\\"DnsServer\\": [\\"vip1.alidns.com\\",\\"vip2.alidns.com\\"]}</DnsServers>\\n    <DDosDefendQuery>50</DDosDefendQuery>\\n    <DnsSecurity>advanced</DnsSecurity>\\n    <DomainType>PUBLIC</DomainType>\\n    <URLForwardCount>20</URLForwardCount>\\n    <TTLMinValue>10</TTLMinValue>\\n    <PaymentType>Subscription</PaymentType>\\n    <VersionName>企业旗舰版</VersionName>\\n    <OverseaLine>海外大洲</OverseaLine>\\n    <ISPRegionLines>电信（省份）、移动（省份）、联通（省份）、教育网（省份）</ISPRegionLines>\\n    <Gslb>true</Gslb>\\n    <BindUsedCount>1</BindUsedCount>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n    <DnsSLBCount>15</DnsSLBCount>\\n    <InstanceId>i-8fxxx</InstanceId>\\n    <MonitorTaskCount>2</MonitorTaskCount>\\n    <StartTime>2015-12-12T09:23Z</StartTime>\\n    <DDosDefendFlow>50</DDosDefendFlow>\\n    <MonitorFrequency>50</MonitorFrequency>\\n    <SearchEngineLines>搜索引擎、谷歌、百度、必应</SearchEngineLines>\\n    <BindDomainUsedCount>3</BindDomainUsedCount>\\n    <VersionCode>version1</VersionCode>\\n    <OverseaDDosDefendFlow>1</OverseaDDosDefendFlow>\\n    <InClean>false</InClean>\\n    <SubDomainLevel>6</SubDomainLevel>\\n    <Domain>example.com</Domain>\\n</DescribeDnsProductInstanceResponse>","errorExample":""}]',
      'title' => '获取付费版DNS产品实例详情',
      'summary' => '根据实例ID获取云解析收费版本产品实例的详情信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsProductInstances' => 
    array (
      'summary' => '根据传入参数获取付费版DNS产品实例列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '1000',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'VersionCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云解析产品code。',
            'type' => 'string',
            'required' => false,
            'example' => 'version1',
          ),
        ),
        5 => 
        array (
          'name' => 'DomainType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名类型，大小写不敏感。取值：

- PUBLIC：权威托管域名（默认值）

- CACHE：权威代理域名',
            'type' => 'string',
            'required' => false,
            'example' => 'PUBLIC',
          ),
        ),
        6 => 
        array (
          'name' => 'OrderBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序参数。取值：
- **createDate**：按创建时间排序（为空时默认按创建时间排序）
- **expireDate**：按过期时间排序',
            'type' => 'string',
            'required' => false,
            'example' => 'createDate',
          ),
        ),
        7 => 
        array (
          'name' => 'Direction',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序方向。取值：
- **DESC**：递减（为空时默认递减排序） 
- **ASC**: 递增',
            'type' => 'string',
            'required' => false,
            'example' => 'DESC',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '本次查询获取的付费版DNS产品实例数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'DomainType' => 
              array (
                'description' => '域名类型，取值：

- PUBLIC：权威托管域名（默认值）

- CACHE：权威代理域名',
                'type' => 'string',
                'example' => 'PUBLIC',
              ),
              'PageSize' => 
              array (
                'description' => '本次查询获取的域名数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'DnsProducts' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DnsProduct' => 
                  array (
                    'description' => '本次获取的付费版DNS产品实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'OverseaLine' => 
                        array (
                          'description' => '海外解析请求来源线路。',
                          'type' => 'string',
                          'example' => '海外大洲',
                        ),
                        'PaymentType' => 
                        array (
                          'description' => '预付费。',
                          'type' => 'string',
                          'example' => 'Subscription',
                        ),
                        'MonitorNodeCount' => 
                        array (
                          'description' => '监控节点个数（个）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '5',
                        ),
                        'InBlackHole' => 
                        array (
                          'description' => '域名是否处于黑洞状态。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'BindDomainUsedCount' => 
                        array (
                          'description' => '适用于个人版、企业标准版、企业旗舰版用户调用，指付费版DNS实例已绑定使用的域名个数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3',
                        ),
                        'ISPRegionLines' => 
                        array (
                          'description' => '运营商解析请求来源线路细分列表。',
                          'type' => 'string',
                          'example' => '电信（省份）、移动（省份）、联通（省份）、教育网（省份）',
                        ),
                        'TTLMinValue' => 
                        array (
                          'description' => '最小TTL值（秒）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '10',
                        ),
                        'ISPLines' => 
                        array (
                          'description' => '运营商解析请求来源线路列表。',
                          'type' => 'string',
                          'example' => '电信、移动、联通、教育网',
                        ),
                        'SearchEngineLines' => 
                        array (
                          'description' => '搜索引擎解析请求来源线路列表。',
                          'type' => 'string',
                          'example' => '搜索引擎、谷歌、百度、必应',
                        ),
                        'EndTimestamp' => 
                        array (
                          'description' => '实例到期时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1474335170000',
                        ),
                        'VersionName' => 
                        array (
                          'description' => '云解析产品版本名称。',
                          'type' => 'string',
                          'example' => '企业旗舰版',
                        ),
                        'VersionCode' => 
                        array (
                          'description' => '云解析产品code。',
                          'type' => 'string',
                          'example' => 'version1',
                        ),
                        'MonitorTaskCount' => 
                        array (
                          'description' => '监控任务数（个）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'BindUsedCount' => 
                        array (
                          'description' => '适用于定制版用户调用，指付费版DNS实例已使用的更换域名次数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'Domain' => 
                        array (
                          'description' => '绑定域名。',
                          'type' => 'string',
                          'example' => 'example.com',
                        ),
                        'MonitorFrequency' => 
                        array (
                          'description' => '监控频率（单位:分钟）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '50',
                        ),
                        'InClean' => 
                        array (
                          'description' => '域名是否处于清洗状态。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'URLForwardCount' => 
                        array (
                          'description' => 'URL转发数量（个）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '20',
                        ),
                        'StartTimestamp' => 
                        array (
                          'description' => '实例购买时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1474335170000',
                        ),
                        'DDosDefendQuery' => 
                        array (
                          'description' => '适用于定制版用户调用，DNS防护QPS（万qps）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '50',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '云解析产品ID。',
                          'type' => 'string',
                          'example' => 'i-8fj',
                        ),
                        'DDosDefendFlow' => 
                        array (
                          'description' => 'DNS防护流量（G）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '50',
                        ),
                        'BindCount' => 
                        array (
                          'description' => '适用于定制版用户调用，指付费版DNS实例可支持更换域名次数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3',
                        ),
                        'SubDomainLevel' => 
                        array (
                          'description' => '子域名级别（个）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '6',
                        ),
                        'BindDomainCount' => 
                        array (
                          'description' => '适用于个人版、企业标准版、企业旗舰版用户调用，指付费版DNS实例可以绑定的域名个数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '5',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '实例到期时间。',
                          'type' => 'string',
                          'example' => '2015-12-12T00:00Z',
                        ),
                        'StartTime' => 
                        array (
                          'description' => '实例购买时间。',
                          'type' => 'string',
                          'example' => '2015-11-12T09:23Z',
                        ),
                        'OverseaDDosDefendFlow' => 
                        array (
                          'description' => '海外DNS防护（G）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'RegionLines' => 
                        array (
                          'description' => '是否允许地域解析请求来源线路。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Gslb' => 
                        array (
                          'description' => '是否允许GSLB。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'DnsSecurity' => 
                        array (
                          'description' => 'DNS安全。取值：
- **no**：不需要
- **basic**：dns攻击基础防御
- **advanced**：dns攻击全力防御',
                          'type' => 'string',
                          'example' => 'no',
                        ),
                        'DnsSLBCount' => 
                        array (
                          'description' => '负载均衡（单域名、单线路的IP地址容量）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '15',
                        ),
                        'AutoRenewal' => 
                        array (
                          'description' => '续费状态。

- **true**：自动续费类型。

- **false**：非自动续费类型。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 2,\\n  \\"DomainType\\": \\"PUBLIC\\",\\n  \\"PageSize\\": 2,\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"PageNumber\\": 1,\\n  \\"DnsProducts\\": {\\n    \\"DnsProduct\\": [\\n      {\\n        \\"OverseaLine\\": \\"海外大洲\\",\\n        \\"PaymentType\\": \\"Subscription\\",\\n        \\"MonitorNodeCount\\": 5,\\n        \\"InBlackHole\\": false,\\n        \\"BindDomainUsedCount\\": 3,\\n        \\"ISPRegionLines\\": \\"电信（省份）、移动（省份）、联通（省份）、教育网（省份）\\",\\n        \\"TTLMinValue\\": 10,\\n        \\"ISPLines\\": \\"电信、移动、联通、教育网\\",\\n        \\"SearchEngineLines\\": \\"搜索引擎、谷歌、百度、必应\\",\\n        \\"EndTimestamp\\": 1474335170000,\\n        \\"VersionName\\": \\"企业旗舰版\\",\\n        \\"VersionCode\\": \\"version1\\",\\n        \\"MonitorTaskCount\\": 2,\\n        \\"BindUsedCount\\": 1,\\n        \\"Domain\\": \\"example.com\\",\\n        \\"MonitorFrequency\\": 50,\\n        \\"InClean\\": false,\\n        \\"URLForwardCount\\": 20,\\n        \\"StartTimestamp\\": 1474335170000,\\n        \\"DDosDefendQuery\\": 50,\\n        \\"InstanceId\\": \\"i-8fj\\",\\n        \\"DDosDefendFlow\\": 50,\\n        \\"BindCount\\": 3,\\n        \\"SubDomainLevel\\": 6,\\n        \\"BindDomainCount\\": 5,\\n        \\"EndTime\\": \\"2015-12-12T00:00Z\\",\\n        \\"StartTime\\": \\"2015-11-12T09:23Z\\",\\n        \\"OverseaDDosDefendFlow\\": 1,\\n        \\"RegionLines\\": true,\\n        \\"Gslb\\": true,\\n        \\"DnsSecurity\\": \\"no\\",\\n        \\"DnsSLBCount\\": 15,\\n        \\"AutoRenewal\\": true\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeDnsProductInstancesResponse>\\n    <TotalCount>2</TotalCount>\\n    <DomainType>PUBLIC</DomainType>\\n    <PageSize>2</PageSize>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <DnsProducts>\\n        <OverseaLine>海外大洲</OverseaLine>\\n        <PaymentType>Subscription</PaymentType>\\n        <MonitorNodeCount>5</MonitorNodeCount>\\n        <InBlackHole>false</InBlackHole>\\n        <BindDomainUsedCount>3</BindDomainUsedCount>\\n        <ISPRegionLines>电信（省份）、移动（省份）、联通（省份）、教育网（省份）</ISPRegionLines>\\n        <TTLMinValue>10</TTLMinValue>\\n        <ISPLines>电信、移动、联通、教育网</ISPLines>\\n        <SearchEngineLines>搜索引擎、谷歌、百度、必应</SearchEngineLines>\\n        <EndTimestamp>1474335170000</EndTimestamp>\\n        <VersionName>企业旗舰版</VersionName>\\n        <VersionCode>version1</VersionCode>\\n        <MonitorTaskCount>2</MonitorTaskCount>\\n        <BindUsedCount>1</BindUsedCount>\\n        <Domain>example.com</Domain>\\n        <MonitorFrequency>50</MonitorFrequency>\\n        <InClean>false</InClean>\\n        <URLForwardCount>20</URLForwardCount>\\n        <StartTimestamp>1474335170000</StartTimestamp>\\n        <DDosDefendQuery>50</DDosDefendQuery>\\n        <InstanceId>i-8fj</InstanceId>\\n        <DDosDefendFlow>50</DDosDefendFlow>\\n        <BindCount>3</BindCount>\\n        <SubDomainLevel>6</SubDomainLevel>\\n        <BindDomainCount>5</BindDomainCount>\\n        <EndTime>2015-12-12T09:23Z</EndTime>\\n        <StartTime>2015-12-12T09:23Z</StartTime>\\n        <OverseaDDosDefendFlow>1</OverseaDDosDefendFlow>\\n        <RegionLines>true</RegionLines>\\n        <Gslb>true</Gslb>\\n        <DnsSecurity>no</DnsSecurity>\\n        <DnsSLBCount>15</DnsSLBCount>\\n    </DnsProducts>\\n</DescribeDnsProductInstancesResponse>","errorExample":""}]',
      'title' => '获取付费版DNS产品实例列表',
      'description' => '> **如果返回参数中未包含域名，则表示该云解析产品尚未绑定任何域名。**',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名分组ID，默认为默认分组的GroupId。',
            'type' => 'string',
            'required' => false,
            'example' => '2223',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-resourcegroupid',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'GroupName' => 
              array (
                'description' => '域名分组名称。',
                'type' => 'string',
                'example' => 'MyGroup',
              ),
              'DomainId' => 
              array (
                'description' => '域名ID。',
                'type' => 'string',
                'example' => '00efd71a-770e-4255-b54e-6fe5659baffe',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'DomainName' => 
              array (
                'description' => '域名名称。',
                'type' => 'string',
                'example' => 'dns-example.top',
              ),
              'PunyCode' => 
              array (
                'description' => '只针对中文域名返回punycode码。',
                'type' => 'string',
                'example' => 'xn--fsq270a.com',
              ),
              'DnsServers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DnsServer' => 
                  array (
                    'description' => '域名在解析系统中的DNS列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '域名当前设置的DNS服务器名称。',
                      'type' => 'string',
                      'example' => '{"DnsServer": ["ns1.alidns.com","ns2.alidns.com"]}',
                    ),
                  ),
                ),
              ),
              'GroupId' => 
              array (
                'description' => '域名分组ID。',
                'type' => 'string',
                'example' => '2223',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"GroupName\\": \\"MyGroup\\",\\n  \\"DomainId\\": \\"00efd71a-770e-4255-b54e-6fe5659baffe\\",\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"DomainName\\": \\"dns-example.top\\",\\n  \\"PunyCode\\": \\"xn--fsq270a.com\\",\\n  \\"DnsServers\\": {\\n    \\"DnsServer\\": [\\n      \\"{\\\\\\"DnsServer\\\\\\": [\\\\\\"ns1.alidns.com\\\\\\",\\\\\\"ns2.alidns.com\\\\\\"]}\\"\\n    ]\\n  },\\n  \\"GroupId\\": \\"2223\\"\\n}","type":"json"}]',
      'title' => '添加域名',
      'summary' => '根据传入参数添加域名。',
      'description' => '域名合法性判断参见：
<props="china">[域名合法性](https://help.aliyun.com/document_detail/67788.html)。</props>
<props="intl">[域名合法性](https://www.alibabacloud.com/help/zh/doc-detail/67788.htm)。</props>',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddDomainBackup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
        2 => 
        array (
          'name' => 'PeriodType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备份周期，当前支持：

- **DAY**：每天备份一次
- **HOUR**：每小时备份一次',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HOUR',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PeriodType' => 
              array (
                'description' => '备份周期。',
                'type' => 'string',
                'example' => 'HOUR',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => 'FD552816-FCC8-4832-B4A2-2DA0C2BA1688',
              ),
              'DomainName' => 
              array (
                'description' => '域名名称。',
                'type' => 'string',
                'example' => 'dns-example.top',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PeriodType\\": \\"HOUR\\",\\n  \\"RequestId\\": \\"FD552816-FCC8-4832-B4A2-2DA0C2BA1688\\",\\n  \\"DomainName\\": \\"dns-example.top\\"\\n}","errorExample":""},{"type":"xml","example":"<AddDomainBackupResponse>\\r\\n    <RequestId>FD552816-FCC8-4832-B4A2-2DA0C2BA1688</RequestId>\\r\\n    <DomainName>test.aliyun.com</DomainName>\\r\\n    <PeriodType>DAY</PeriodType>\\r\\n</AddDomainBackupResponse>","errorExample":""}]',
      'title' => '新建域名备份',
      'summary' => '新建域名备份。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddDomainGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名分组名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'MyGroup',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'GroupName' => 
              array (
                'description' => '域名分组名称。',
                'type' => 'string',
                'example' => 'NewName',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'GroupId' => 
              array (
                'description' => '域名分组ID。',
                'type' => 'string',
                'example' => '2223',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"GroupName\\": \\"NewName\\",\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"GroupId\\": \\"2223\\"\\n}","errorExample":""},{"type":"xml","example":"<AddDomainGroupResponse>\\r\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\r\\n    <GroupId>2223</GroupId>\\r\\n    <GroupName>NewName</GroupName>\\r\\n</AddDomainGroupResponse>","errorExample":""}]',
      'title' => '添加域名分组',
      'summary' => '根据传入参数添加域名分组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDomainGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名分组ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2223',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'GroupName' => 
              array (
                'description' => '域名分组名称。',
                'type' => 'string',
                'example' => 'MyGroup',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"GroupName\\": \\"MyGroup\\",\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteDomainGroupResponse>\\r\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\r\\n    <GroupName>MyGroup</GroupName>\\r\\n</DeleteDomainGroupResponse>","errorExample":""}]',
      'title' => '删除域名分组',
      'summary' => '删除域名分组，分组下的域名会被移动到默认分组。',
      'description' => '> 默认分组无法删除。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'DomainName' => 
              array (
                'description' => '域名名称。',
                'type' => 'string',
                'example' => 'dns-example.top',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"DomainName\\": \\"dns-example.top\\"\\n}","type":"json"}]',
      'title' => '删除域名',
      'summary' => '根据传入参数删除域名。',
    ),
    'ChangeDomainOfDnsProduct' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '1.1.XX.XX',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云解析产品ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'i-7sb',
          ),
        ),
        3 => 
        array (
          'name' => 'NewDomain',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标绑定域名，如不填写，则为解绑。',
            'type' => 'string',
            'required' => false,
            'example' => 'dns-example.top',
          ),
        ),
        4 => 
        array (
          'name' => 'Force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制绑定。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'OriginalDomain' => 
              array (
                'description' => '原始绑定的域名，如果为空，则为第一次绑定。',
                'type' => 'string',
                'example' => 'originaldomain.com',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"OriginalDomain\\": \\"originaldomain.com\\"\\n}","errorExample":""},{"type":"xml","example":"<ChangeDomainOfDnsProductResponse>\\r\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\r\\n    <OriginalDomain>originaldomain.com</OriginalDomain>\\r\\n</ChangeDomainOfDnsProductResponse>","errorExample":""}]',
      'title' => '更换云解析产品绑定的域名',
      'summary' => '更换云解析产品绑定的域名。',
      'description' => '- **无论当前云解析产品是否绑定域名，都调用此接口。从云解析产品中解绑域名，也调用此接口，即NewDomain为空。**

- **本接口适用于老版本实例，如果是新版本套餐，例如个人版、企业标准版、企业旗舰版实例，请调用BindInstanceDomains接口。**',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyHichinaDomainDNS' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'NewDnsServers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DnsServer' => 
                  array (
                    'description' => '域名修改后的DNS服务器列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '域名修改后的DNS服务器。',
                      'type' => 'string',
                      'example' => '{"DnsServer": ["dns9.hichina.com","dns10.hichina.com"]}',
                    ),
                  ),
                ),
              ),
              'OriginalDnsServers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DnsServer' => 
                  array (
                    'description' => '域名修改前的DNS服务器列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '域名修改前的DNS服务器。',
                      'type' => 'string',
                      'example' => '{"DnsServer": ["NS3.DNSV5.COM","NS4.DNSV5.COM"]}',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"NewDnsServers\\": {\\n    \\"DnsServer\\": [\\n      \\"{\\\\\\"DnsServer\\\\\\": [\\\\\\"dns9.hichina.com\\\\\\",\\\\\\"dns10.hichina.com\\\\\\"]}\\"\\n    ]\\n  },\\n  \\"OriginalDnsServers\\": {\\n    \\"DnsServer\\": [\\n      \\"{\\\\\\"DnsServer\\\\\\": [\\\\\\"NS3.DNSV5.COM\\\\\\",\\\\\\"NS4.DNSV5.COM\\\\\\"]}\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ModifyHichinaDomainDNSResponse>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n    <NewDnsServers>{\\"DnsServer\\": [\\"dns9.hichina.com\\",\\"dns10.hichina.com\\"]}</NewDnsServers>\\n    <OriginalDnsServers>{\\"DnsServer\\": [\\"NS3.DNSV5.COM\\",\\"NS4.DNSV5.COM\\"]}</OriginalDnsServers>\\n</ModifyHichinaDomainDNSResponse>","errorExample":""}]',
      'title' => '修改域名DNS服务器名称',
      'summary' => '根据传入参数修改域名DNS服务器名称。',
      'description' => '修改成功后，DNS会被修改为云解析DNS（hichina.com结尾的DNS）。
> **使用前提：适用于阿里云注册域名，且当前DNS服务器是第三方DNS的域名使用。**',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDomainGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名分组ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2223',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名分组新名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'NewName',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'GroupName' => 
              array (
                'description' => '域名分组新名称。',
                'type' => 'string',
                'example' => 'NewName',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'GroupId' => 
              array (
                'description' => '域名分组ID。',
                'type' => 'string',
                'example' => '2223',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"GroupName\\": \\"NewName\\",\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"GroupId\\": \\"2223\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateDomainGroupResponse>\\r\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\r\\n    <GroupId>2223</GroupId>\\r\\n    <GroupName>NewName</GroupName>\\r\\n</UpdateDomainGroupResponse>","errorExample":""}]',
      'title' => '修改域名分组',
      'summary' => '根据传入参数修改域名分组名称。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDomainRemark' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云解析中已存在的域名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
        2 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '您的域名的备注信息。',
            'type' => 'string',
            'required' => false,
            'example' => '这是我在阿里云解析的第一个域名',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateDomainRemarkResponse>\\n<RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n</UpdateDomainRemarkResponse>","errorExample":""}]',
      'title' => '修改域名的备注',
      'summary' => '根据传入参数修改域名的备注。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ChangeDomainGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'example.com',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标域名分组ID。

- 如不传GroupId，则指将域名放到默认分组下。
- 如GroupId为空字符""，则指将域名放到默认分组下。
- 如GroupId为defaultGroup，则指将域名放到默认分组下。
- 如GroupId不符合上述条件，传入的GroupId验证结果为存在，则更新目标域名的GroupId，不存在则不更新。',
            'type' => 'string',
            'required' => false,
            'example' => '2223',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'GroupName' => 
              array (
                'description' => '目标域名分组名称。',
                'type' => 'string',
                'example' => 'MyGroup',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'GroupId' => 
              array (
                'description' => '目标域名分组ID。',
                'type' => 'string',
                'example' => '2223',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"GroupName\\": \\"MyGroup\\",\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"GroupId\\": \\"2223\\"\\n}","type":"json"}]',
      'title' => '将域名从原分组更换到新分组',
      'summary' => '根据传入参数将域名从原分组更换到新分组。',
      'description' => '可以指定域名分组的ID（GroupId），全部域名代表所有域名、默认分组代表未设置分组的域名。',
    ),
    'SetDomainDnssecStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'example.com',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Dnssec状态：

- ON 开启
- OFF 关闭',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ON',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>","errorExample":""}]',
      'title' => '设置域名DNSSEC状态',
      'summary' => '设置域名DNSSEC状态。',
    ),
    'DescribeDomainInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.com',
          ),
        ),
        2 => 
        array (
          'name' => 'NeedDetailAttributes',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '默认值为**false**，表示不需要细节属性。

当值为**true**时，则返回以下数据：lineType、minTtl、recordLineTreeJson、recordLines、lineCode、lineDisplayName、lineName、regionLines、slaveDns。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RecordLineTreeJson' => 
              array (
                'description' => '树形化解析请求来源线路列表。',
                'type' => 'string',
                'example' => '{"default":{},"unicom":{},"telecom":{},"mobile":{},"edu":{},"oversea":{},"baidu":{},"biying":{},"google":{}}',
              ),
              'GroupName' => 
              array (
                'description' => '域名分组名称。',
                'type' => 'string',
                'example' => 'mygroup',
              ),
              'InBlackHole' => 
              array (
                'description' => '是否在黑洞中。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'RegionLines' => 
              array (
                'description' => '是否是地域线路。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'SlaveDns' => 
              array (
                'description' => '是否允许有辅助dns。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AliDomain' => 
              array (
                'description' => '是否为阿里云万网域名。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。',
                'type' => 'string',
                'example' => 'rg-aek3dj3wvclgcxo',
              ),
              'InstanceId' => 
              array (
                'description' => '云解析产品ID。',
                'type' => 'string',
                'example' => 'i-7bg',
              ),
              'DomainName' => 
              array (
                'description' => '域名名称。',
                'type' => 'string',
                'example' => 'example.com',
              ),
              'CreateTime' => 
              array (
                'description' => '创建时间。',
                'type' => 'string',
                'example' => '2015-12-12T09:23Z',
              ),
              'PunyCode' => 
              array (
                'description' => '只针对中文域名返回punycode码。',
                'type' => 'string',
                'example' => 'example.com',
              ),
              'DnsServers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DnsServer' => 
                  array (
                    'description' => '域名在解析系统中的DNS列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'DNS信息。',
                      'type' => 'string',
                      'example' => '["vip3.alidns.com", "vip4.alidns.com"]',
                    ),
                  ),
                ),
              ),
              'Remark' => 
              array (
                'description' => '备注。',
                'type' => 'string',
                'example' => 'remark',
              ),
              'GroupId' => 
              array (
                'description' => '域名分组ID。',
                'type' => 'string',
                'example' => '2223',
              ),
              'VersionCode' => 
              array (
                'description' => '云解析版本ID。',
                'type' => 'string',
                'example' => 'version1',
              ),
              'RecordLines' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RecordLine' => 
                  array (
                    'description' => '解析请求来源线路数据列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'FatherCode' => 
                        array (
                          'description' => '父线路Code，如果没有则为空。',
                          'type' => 'string',
                          'example' => 'internal',
                        ),
                        'LineDisplayName' => 
                        array (
                          'description' => '父线路展示名。',
                          'type' => 'string',
                          'example' => '中国地区_西北',
                        ),
                        'LineCode' => 
                        array (
                          'description' => '子线路Code。',
                          'type' => 'string',
                          'example' => 'cn_region_xibei',
                        ),
                        'LineName' => 
                        array (
                          'description' => '子线路展示名。',
                          'type' => 'string',
                          'example' => '西北',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'DomainId' => 
              array (
                'description' => '域名ID。',
                'type' => 'string',
                'example' => '00efd71a-770e-4255-b54e-6fe5659baffe',
              ),
              'AvailableTtls' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AvailableTtl' => 
                  array (
                    'description' => '域名当前可用TTL列表。默认不返回，需要设置NeedDetailAttributes=true。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '可用TTL列表。',
                      'type' => 'string',
                      'example' => '[600,1800,3600,43200,86400]',
                    ),
                  ),
                ),
              ),
              'MinTtl' => 
              array (
                'description' => '最小TTL。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'InClean' => 
              array (
                'description' => '是否在清洗中。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'VersionName' => 
              array (
                'description' => '云解析产品名称。',
                'type' => 'string',
                'example' => '企业旗舰版',
              ),
              'LineType' => 
              array (
                'description' => '解析请求来源线路类型。',
                'type' => 'string',
                'example' => 'region_province',
              ),
              'SubDomain' => 
              array (
                'description' => '查询的 domain 是否是托管的子域名。
取值：
- true
- false',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'DomainLoggingSwitchStatus' => 
              array (
                'description' => '日志开关状态',
                'type' => 'string',
                'example' => 'CLOSE：关闭状态
OPEN：开启状态',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RecordLineTreeJson\\": \\"{\\\\\\"default\\\\\\":{},\\\\\\"unicom\\\\\\":{},\\\\\\"telecom\\\\\\":{},\\\\\\"mobile\\\\\\":{},\\\\\\"edu\\\\\\":{},\\\\\\"oversea\\\\\\":{},\\\\\\"baidu\\\\\\":{},\\\\\\"biying\\\\\\":{},\\\\\\"google\\\\\\":{}}\\",\\n  \\"GroupName\\": \\"mygroup\\",\\n  \\"InBlackHole\\": false,\\n  \\"RegionLines\\": false,\\n  \\"SlaveDns\\": true,\\n  \\"AliDomain\\": true,\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"ResourceGroupId\\": \\"rg-aek3dj3wvclgcxo\\",\\n  \\"InstanceId\\": \\"i-7bg\\",\\n  \\"DomainName\\": \\"example.com\\",\\n  \\"CreateTime\\": \\"2015-12-12T09:23Z\\",\\n  \\"PunyCode\\": \\"example.com\\",\\n  \\"DnsServers\\": {\\n    \\"DnsServer\\": [\\n      \\"[\\\\\\"vip3.alidns.com\\\\\\", \\\\\\"vip4.alidns.com\\\\\\"]\\"\\n    ]\\n  },\\n  \\"Remark\\": \\"remark\\",\\n  \\"GroupId\\": \\"2223\\",\\n  \\"VersionCode\\": \\"version1\\",\\n  \\"RecordLines\\": {\\n    \\"RecordLine\\": [\\n      {\\n        \\"FatherCode\\": \\"internal\\",\\n        \\"LineDisplayName\\": \\"中国地区_西北\\",\\n        \\"LineCode\\": \\"cn_region_xibei\\",\\n        \\"LineName\\": \\"西北\\"\\n      }\\n    ]\\n  },\\n  \\"DomainId\\": \\"00efd71a-770e-4255-b54e-6fe5659baffe\\",\\n  \\"AvailableTtls\\": {\\n    \\"AvailableTtl\\": [\\n      \\"[600,1800,3600,43200,86400]\\"\\n    ]\\n  },\\n  \\"MinTtl\\": 1,\\n  \\"InClean\\": false,\\n  \\"VersionName\\": \\"企业旗舰版\\",\\n  \\"LineType\\": \\"region_province\\",\\n  \\"SubDomain\\": false,\\n  \\"DomainLoggingSwitchStatus\\": \\"CLOSE：关闭状态\\\\nOPEN：开启状态\\"\\n}","errorExample":""},{"type":"xml","example":"<GroupName>dns-example.com</GroupName>\\n<RecordLineTreeJson>{\\"default\\":{},\\"aliyun\\":{\\"aliyun_r_cn-hangzhou\\":[],\\"aliyun_r_cn-shanghai\\":[],\\"aliyun_r_cn-qingdao\\":[],\\"aliyun_r_cn-beijing\\":[],\\"aliyun_r_cn-zhangjiakou\\":[],\\"aliyun_r_cn-huhehaote\\":[],\\"aliyun_r_cn-wulanchabu\\":[],\\"aliyun_r_cn-shenzhen\\":[],\\"aliyun_r_cn-heyuan\\":[],\\"aliyun_r_cn-guangzhou\\":[],\\"aliyun_r_cn-chengdu\\":[],\\"aliyun_r_cn-hongkong\\":[],\\"aliyun_r_ap-southeast-1\\":[],\\"aliyun_r_ap-southeast-2\\":[],\\"aliyun_r_ap-southeast-3\\":[],\\"aliyun_r_ap-southeast-5\\":[],\\"aliyun_r_ap-northeast-1\\":[],\\"aliyun_r_eu-central-1\\":[],\\"aliyun_r_eu-west-1\\":[],\\"aliyun_r_us-west-1\\":[],\\"aliyun_r_us-east-1\\":[],\\"aliyun_r_ap-south-1\\":[],\\"aliyun_r_me-east-1\\":[]},\\"unicom\\":{\\"cn_unicom_xizang\\":[],\\"cn_unicom_jiangxi\\":[],\\"cn_unicom_hunan\\":[],\\"cn_unicom_xinjiang\\":[],\\"cn_unicom_ningxia\\":[],\\"cn_unicom_tianjin\\":[],\\"cn_unicom_sichuan\\":[],\\"cn_unicom_guangxi\\":[],\\"cn_unicom_yunnan\\":[],\\"cn_unicom_guangdong\\":[],\\"cn_unicom_anhui\\":[],\\"cn_unicom_shanghai\\":[],\\"cn_unicom_fujian\\":[],\\"cn_unicom_qinghai\\":[],\\"cn_unicom_shanxi\\":[],\\"cn_unicom_henan\\":[],\\"cn_unicom_guizhou\\":[],\\"cn_unicom_liaoning\\":[],\\"cn_unicom_gansu\\":[],\\"cn_unicom_chongqing\\":[],\\"cn_unicom_heilongjiang\\":[],\\"cn_unicom_hubei\\":[],\\"cn_unicom_jiangsu\\":[],\\"cn_unicom_jilin\\":[],\\"cn_unicom_shandong\\":[],\\"cn_unicom_beijing\\":[],\\"cn_unicom_neimenggu\\":[],\\"cn_unicom_hainan\\":[],\\"cn_unicom_shaanxi\\":[],\\"cn_unicom_hebei\\":[],\\"cn_unicom_zhejiang\\":[]},\\"telecom\\":{\\"cn_telecom_xinjiang\\":[],\\"cn_telecom_hubei\\":[],\\"cn_telecom_guizhou\\":[],\\"cn_telecom_yunnan\\":[],\\"cn_telecom_shanghai\\":[],\\"cn_telecom_shaanxi\\":[],\\"cn_telecom_beijing\\":[],\\"cn_telecom_sichuan\\":[],\\"cn_telecom_zhejiang\\":[],\\"cn_telecom_ningxia\\":[],\\"cn_telecom_jilin\\":[],\\"cn_telecom_qinghai\\":[],\\"cn_telecom_fujian\\":[],\\"cn_telecom_hunan\\":[],\\"cn_telecom_shandong\\":[],\\"cn_telecom_guangdong\\":[],\\"cn_telecom_chongqing\\":[],\\"cn_telecom_henan\\":[],\\"cn_telecom_hainan\\":[],\\"cn_telecom_anhui\\":[],\\"cn_telecom_jiangsu\\":[],\\"cn_telecom_gansu\\":[],\\"cn_telecom_guangxi\\":[],\\"cn_telecom_liaoning\\":[],\\"cn_telecom_hebei\\":[],\\"cn_telecom_jiangxi\\":[],\\"cn_telecom_neimenggu\\":[],\\"cn_telecom_tianjin\\":[],\\"cn_telecom_xizang\\":[],\\"cn_telecom_heilongjiang\\":[],\\"cn_telecom_shanxi\\":[]},\\"mobile\\":{\\"cn_mobile_sichuan\\":[],\\"cn_mobile_liaoning\\":[],\\"cn_mobile_ningxia\\":[],\\"cn_mobile_qinghai\\":[],\\"cn_mobile_shanxi\\":[],\\"cn_mobile_beijing\\":[],\\"cn_mobile_yunnan\\":[],\\"cn_mobile_heilongjiang\\":[],\\"cn_mobile_henan\\":[],\\"cn_mobile_shaanxi\\":[],\\"cn_mobile_gansu\\":[],\\"cn_mobile_jilin\\":[],\\"cn_mobile_guangxi\\":[],\\"cn_mobile_jiangxi\\":[],\\"cn_mobile_shanghai\\":[],\\"cn_mobile_xinjiang\\":[],\\"cn_mobile_xizang\\":[],\\"cn_mobile_tianjin\\":[],\\"cn_mobile_hunan\\":[],\\"cn_mobile_neimenggu\\":[],\\"cn_mobile_zhejiang\\":[],\\"cn_mobile_hebei\\":[],\\"cn_mobile_guizhou\\":[],\\"cn_mobile_jiangsu\\":[],\\"cn_mobile_guangdong\\":[],\\"cn_mobile_chongqing\\":[],\\"cn_mobile_hainan\\":[],\\"cn_mobile_fujian\\":[],\\"cn_mobile_shandong\\":[],\\"cn_mobile_anhui\\":[],\\"cn_mobile_hubei\\":[]},\\"edu\\":{\\"cn_edu_guizhou\\":[],\\"cn_edu_guangdong\\":[],\\"cn_edu_hainan\\":[],\\"cn_edu_jilin\\":[],\\"cn_edu_gansu\\":[],\\"cn_edu_tianjin\\":[],\\"cn_edu_shanxi\\":[],\\"cn_edu_jiangsu\\":[],\\"cn_edu_hunan\\":[],\\"cn_edu_shandong\\":[],\\"cn_edu_xizang\\":[],\\"cn_edu_yunnan\\":[],\\"cn_edu_shaanxi\\":[],\\"cn_edu_heilongjiang\\":[],\\"cn_edu_hubei\\":[],\\"cn_edu_xinjiang\\":[],\\"cn_edu_zhejiang\\":[],\\"cn_edu_jiangxi\\":[],\\"cn_edu_chongqing\\":[],\\"cn_edu_sichuan\\":[],\\"cn_edu_qinghai\\":[],\\"cn_edu_henan\\":[],\\"cn_edu_neimenggu\\":[],\\"cn_edu_anhui\\":[],\\"cn_edu_beijing\\":[],\\"cn_edu_guangxi\\":[],\\"cn_edu_liaoning\\":[],\\"cn_edu_ningxia\\":[],\\"cn_edu_fujian\\":[],\\"cn_edu_shanghai\\":[],\\"cn_edu_hebei\\":[]},\\"drpeng\\":{\\"cn_drpeng_qinghai\\":[],\\"cn_drpeng_shanghai\\":[],\\"cn_drpeng_jiangsu\\":[],\\"cn_drpeng_yunnan\\":[],\\"cn_drpeng_liaoning\\":[],\\"cn_drpeng_beijing\\":[],\\"cn_drpeng_fujian\\":[],\\"cn_drpeng_shanxi\\":[],\\"cn_drpeng_jiangxi\\":[],\\"cn_drpeng_gansu\\":[],\\"cn_drpeng_jilin\\":[],\\"cn_drpeng_guangdong\\":[],\\"cn_drpeng_hubei\\":[],\\"cn_drpeng_ningxia\\":[],\\"cn_drpeng_hainan\\":[],\\"cn_drpeng_hebei\\":[],\\"cn_drpeng_heilongjiang\\":[],\\"cn_drpeng_xizang\\":[],\\"cn_drpeng_anhui\\":[],\\"cn_drpeng_hunan\\":[],\\"cn_drpeng_henan\\":[],\\"cn_drpeng_neimenggu\\":[],\\"cn_drpeng_guangxi\\":[],\\"cn_drpeng_shandong\\":[],\\"cn_drpeng_xinjiang\\":[],\\"cn_drpeng_guizhou\\":[],\\"cn_drpeng_sichuan\\":[],\\"cn_drpeng_chongqing\\":[],\\"cn_drpeng_shaanxi\\":[],\\"cn_drpeng_tianjin\\":[],\\"cn_drpeng_zhejiang\\":[]},\\"btvn\\":{\\"cn_btvn_hebei\\":[],\\"cn_btvn_qinghai\\":[],\\"cn_btvn_shanxi\\":[],\\"cn_btvn_ningxia\\":[],\\"cn_btvn_guangxi\\":[],\\"cn_btvn_jiangsu\\":[],\\"cn_btvn_guangdong\\":[],\\"cn_btvn_jilin\\":[],\\"cn_btvn_shanghai\\":[],\\"cn_btvn_henan\\":[],\\"cn_btvn_tianjin\\":[],\\"cn_btvn_anhui\\":[],\\"cn_btvn_guizhou\\":[],\\"cn_btvn_chongqing\\":[],\\"cn_btvn_liaoning\\":[],\\"cn_btvn_xizang\\":[],\\"cn_btvn_zhejiang\\":[],\\"cn_btvn_xinjiang\\":[],\\"cn_btvn_yunnan\\":[],\\"cn_btvn_shandong\\":[],\\"cn_btvn_neimenggu\\":[],\\"cn_btvn_shaanxi\\":[],\\"cn_btvn_fujian\\":[],\\"cn_btvn_beijing\\":[],\\"cn_btvn_heilongjiang\\":[],\\"cn_btvn_gansu\\":[],\\"cn_btvn_sichuan\\":[],\\"cn_btvn_hubei\\":[],\\"cn_btvn_hunan\\":[],\\"cn_btvn_hainan\\":[],\\"cn_btvn_jiangxi\\":[]},\\"oversea\\":{\\"os_asia\\":[\\"os_asia_tr\\",\\"os_asia_om\\",\\"os_asia_kz\\",\\"os_asia_ae\\",\\"os_asia_kr\\",\\"os_asia_tw\\",\\"os_asia_pk\\",\\"os_asia_ir\\",\\"os_asia_uz\\",\\"os_asia_mm\\",\\"os_asia_id\\",\\"os_asia_bh\\",\\"os_asia_my\\",\\"os_asia_lb\\",\\"os_asia_kp\\",\\"os_asia_qa\\",\\"os_asia_vn\\",\\"os_asia_sy\\",\\"os_asia_ph\\",\\"os_asia_kw\\",\\"os_asia_mn\\",\\"os_asia_mo\\",\\"os_asia_kh\\",\\"os_asia_mv\\",\\"os_asia_la\\",\\"os_asia_sg\\",\\"os_asia_np\\",\\"os_asia_sa\\",\\"os_asia_iq\\",\\"os_asia_th\\",\\"os_asia_jp\\",\\"os_asia_in\\",\\"os_asia_hk\\",\\"os_asia_il\\"],\\"os_africa\\":[\\"os_africa_ao\\",\\"os_africa_gh\\",\\"os_africa_sc\\",\\"os_africa_dz\\",\\"os_africa_ng\\",\\"os_africa_sd\\",\\"os_africa_cm\\",\\"os_africa_ss\\",\\"os_africa_ci\\",\\"os_africa_sn\\",\\"os_africa_eg\\",\\"os_africa_za\\",\\"os_africa_ke\\",\\"os_africa_ma\\"],\\"os_namerica\\":[\\"os_namerica_ca\\",\\"os_namerica_us\\",\\"os_namerica_cu\\",\\"os_namerica_mx\\"],\\"os_oceanica\\":[\\"os_oceanica_nz\\",\\"os_oceanica_fj\\",\\"os_oceanica_au\\",\\"os_oceanica_pw\\"],\\"os_samerica\\":[\\"os_samerica_ec\\",\\"os_samerica_uy\\",\\"os_samerica_ar\\",\\"os_samerica_br\\",\\"os_samerica_co\\",\\"os_samerica_cl\\",\\"os_samerica_py\\",\\"os_samerica_ve\\",\\"os_samerica_bo\\",\\"os_samerica_pe\\"],\\"os_euro\\":[\\"os_euro_hr\\",\\"os_euro_es\\",\\"os_euro_pl\\",\\"os_euro_pt\\",\\"os_euro_ch\\",\\"os_euro_dk\\",\\"os_euro_ua\\",\\"os_euro_it\\",\\"os_euro_de\\",\\"os_euro_fi\\",\\"os_euro_fr\\",\\"os_euro_ro\\",\\"os_euro_ie\\",\\"os_euro_be\\",\\"os_euro_hu\\",\\"os_euro_se\\",\\"os_euro_by\\",\\"os_euro_lt\\",\\"os_euro_sk\\",\\"os_euro_cz\\",\\"os_euro_nl\\",\\"os_euro_gb\\",\\"os_euro_at\\",\\"os_euro_bg\\",\\"os_euro_is\\",\\"os_euro_si\\",\\"os_euro_ru\\"]},\\"search\\":{\\"google\\":[],\\"baidu\\":[],\\"biying\\":[],\\"youdao\\":[]},\\"hra1e0-1161\\":{},\\"hra15r-864\\":{},\\"hra15q-863\\":{},\\"hra15p-862\\":{},\\"hra15o-861\\":{},\\"hra15n-860\\":{},\\"hra14m-823\\":{}}</RecordLineTreeJson>\\n<InBlackHole>false</InBlackHole>\\n<RegionLines>true</RegionLines>\\n<RequestId>CA8F8FEE-BE0E-4DC8-AEA8-0B2EAD4CB756</RequestId>\\n<AliDomain>true</AliDomain>\\n<SlaveDns>true</SlaveDns>\\n<ResourceGroupId>rg-acfmw2vjqzvwrfi</ResourceGroupId>\\n<DomainName>dns-example.com</DomainName>\\n<InstanceId>dns-cn-st21yjlom5j</InstanceId>\\n<CreateTime>2019-01-30T05:25Z</CreateTime>\\n<PunyCode>dns-example.com</PunyCode>\\n<DnsServers>\\n    <DnsServer>vip3.alidns.com</DnsServer>\\n    <DnsServer>vip4.alidns.com</DnsServer>\\n</DnsServers>\\n<Remark/>\\n<GroupId>de0efd8ff83c4178946fe37fa6eafaf4</GroupId>\\n<VersionCode>version_enterprise_advanced</VersionCode>\\n<RecordLines>\\n    <RecordLine>\\n        <LineDisplayName>默认</LineDisplayName>\\n        <LineCode>default</LineCode>\\n        <LineName>默认</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <LineDisplayName>阿里云</LineDisplayName>\\n        <LineCode>aliyun</LineCode>\\n        <LineName>阿里云</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_华东1（杭州）</LineDisplayName>\\n        <LineCode>aliyun_r_cn-hangzhou</LineCode>\\n        <LineName>华东1（杭州）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_华东2（上海）</LineDisplayName>\\n        <LineCode>aliyun_r_cn-shanghai</LineCode>\\n        <LineName>华东2（上海）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_华北1（青岛）</LineDisplayName>\\n        <LineCode>aliyun_r_cn-qingdao</LineCode>\\n        <LineName>华北1（青岛）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_华北2（北京）</LineDisplayName>\\n        <LineCode>aliyun_r_cn-beijing</LineCode>\\n        <LineName>华北2（北京）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_华北3（张家口）</LineDisplayName>\\n        <LineCode>aliyun_r_cn-zhangjiakou</LineCode>\\n        <LineName>华北3（张家口）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_华北5（呼和浩特）</LineDisplayName>\\n        <LineCode>aliyun_r_cn-huhehaote</LineCode>\\n        <LineName>华北5（呼和浩特）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_华北6（乌兰察布）</LineDisplayName>\\n        <LineCode>aliyun_r_cn-wulanchabu</LineCode>\\n        <LineName>华北6（乌兰察布）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_华南1（深圳）</LineDisplayName>\\n        <LineCode>aliyun_r_cn-shenzhen</LineCode>\\n        <LineName>华南1（深圳）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_华南2（河源）</LineDisplayName>\\n        <LineCode>aliyun_r_cn-heyuan</LineCode>\\n        <LineName>华南2（河源）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_华南3（广州）</LineDisplayName>\\n        <LineCode>aliyun_r_cn-guangzhou</LineCode>\\n        <LineName>华南3（广州）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_西南1（成都）</LineDisplayName>\\n        <LineCode>aliyun_r_cn-chengdu</LineCode>\\n        <LineName>西南1（成都）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_中国（香港）</LineDisplayName>\\n        <LineCode>aliyun_r_cn-hongkong</LineCode>\\n        <LineName>中国（香港）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_新加坡</LineDisplayName>\\n        <LineCode>aliyun_r_ap-southeast-1</LineCode>\\n        <LineName>新加坡</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_澳大利亚（悉尼)</LineDisplayName>\\n        <LineCode>aliyun_r_ap-southeast-2</LineCode>\\n        <LineName>澳大利亚（悉尼)</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_马来西亚（吉隆坡）</LineDisplayName>\\n        <LineCode>aliyun_r_ap-southeast-3</LineCode>\\n        <LineName>马来西亚（吉隆坡）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_印度尼西亚（雅加达）</LineDisplayName>\\n        <LineCode>aliyun_r_ap-southeast-5</LineCode>\\n        <LineName>印度尼西亚（雅加达）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_日本（东京）</LineDisplayName>\\n        <LineCode>aliyun_r_ap-northeast-1</LineCode>\\n        <LineName>日本（东京）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_德国（法兰克福）</LineDisplayName>\\n        <LineCode>aliyun_r_eu-central-1</LineCode>\\n        <LineName>德国（法兰克福）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_英国（伦敦）</LineDisplayName>\\n        <LineCode>aliyun_r_eu-west-1</LineCode>\\n        <LineName>英国（伦敦）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_美国（硅谷）</LineDisplayName>\\n        <LineCode>aliyun_r_us-west-1</LineCode>\\n        <LineName>美国（硅谷）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_美国（弗吉尼亚）</LineDisplayName>\\n        <LineCode>aliyun_r_us-east-1</LineCode>\\n        <LineName>美国（弗吉尼亚）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_印度（孟买）</LineDisplayName>\\n        <LineCode>aliyun_r_ap-south-1</LineCode>\\n        <LineName>印度（孟买）</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>aliyun</FatherCode>\\n        <LineDisplayName>阿里云_中东东部 1 (迪拜)</LineDisplayName>\\n        <LineCode>aliyun_r_me-east-1</LineCode>\\n        <LineName>中东东部 1 (迪拜)</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <LineDisplayName>中国联通</LineDisplayName>\\n        <LineCode>unicom</LineCode>\\n        <LineName>中国联通</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_西藏</LineDisplayName>\\n        <LineCode>cn_unicom_xizang</LineCode>\\n        <LineName>西藏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_江西</LineDisplayName>\\n        <LineCode>cn_unicom_jiangxi</LineCode>\\n        <LineName>江西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_湖南</LineDisplayName>\\n        <LineCode>cn_unicom_hunan</LineCode>\\n        <LineName>湖南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_新疆</LineDisplayName>\\n        <LineCode>cn_unicom_xinjiang</LineCode>\\n        <LineName>新疆</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_宁夏</LineDisplayName>\\n        <LineCode>cn_unicom_ningxia</LineCode>\\n        <LineName>宁夏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_天津</LineDisplayName>\\n        <LineCode>cn_unicom_tianjin</LineCode>\\n        <LineName>天津</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_四川</LineDisplayName>\\n        <LineCode>cn_unicom_sichuan</LineCode>\\n        <LineName>四川</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_广西</LineDisplayName>\\n        <LineCode>cn_unicom_guangxi</LineCode>\\n        <LineName>广西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_云南</LineDisplayName>\\n        <LineCode>cn_unicom_yunnan</LineCode>\\n        <LineName>云南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_广东</LineDisplayName>\\n        <LineCode>cn_unicom_guangdong</LineCode>\\n        <LineName>广东</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_安徽</LineDisplayName>\\n        <LineCode>cn_unicom_anhui</LineCode>\\n        <LineName>安徽</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_上海</LineDisplayName>\\n        <LineCode>cn_unicom_shanghai</LineCode>\\n        <LineName>上海</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_福建</LineDisplayName>\\n        <LineCode>cn_unicom_fujian</LineCode>\\n        <LineName>福建</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_青海</LineDisplayName>\\n        <LineCode>cn_unicom_qinghai</LineCode>\\n        <LineName>青海</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_山西</LineDisplayName>\\n        <LineCode>cn_unicom_shanxi</LineCode>\\n        <LineName>山西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_河南</LineDisplayName>\\n        <LineCode>cn_unicom_henan</LineCode>\\n        <LineName>河南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_贵州</LineDisplayName>\\n        <LineCode>cn_unicom_guizhou</LineCode>\\n        <LineName>贵州</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_辽宁</LineDisplayName>\\n        <LineCode>cn_unicom_liaoning</LineCode>\\n        <LineName>辽宁</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_甘肃</LineDisplayName>\\n        <LineCode>cn_unicom_gansu</LineCode>\\n        <LineName>甘肃</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_重庆</LineDisplayName>\\n        <LineCode>cn_unicom_chongqing</LineCode>\\n        <LineName>重庆</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_黑龙江</LineDisplayName>\\n        <LineCode>cn_unicom_heilongjiang</LineCode>\\n        <LineName>黑龙江</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_湖北</LineDisplayName>\\n        <LineCode>cn_unicom_hubei</LineCode>\\n        <LineName>湖北</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_江苏</LineDisplayName>\\n        <LineCode>cn_unicom_jiangsu</LineCode>\\n        <LineName>江苏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_吉林</LineDisplayName>\\n        <LineCode>cn_unicom_jilin</LineCode>\\n        <LineName>吉林</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_山东</LineDisplayName>\\n        <LineCode>cn_unicom_shandong</LineCode>\\n        <LineName>山东</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_北京</LineDisplayName>\\n        <LineCode>cn_unicom_beijing</LineCode>\\n        <LineName>北京</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_内蒙古</LineDisplayName>\\n        <LineCode>cn_unicom_neimenggu</LineCode>\\n        <LineName>内蒙古</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_海南</LineDisplayName>\\n        <LineCode>cn_unicom_hainan</LineCode>\\n        <LineName>海南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_陕西</LineDisplayName>\\n        <LineCode>cn_unicom_shaanxi</LineCode>\\n        <LineName>陕西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_河北</LineDisplayName>\\n        <LineCode>cn_unicom_hebei</LineCode>\\n        <LineName>河北</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>中国联通_浙江</LineDisplayName>\\n        <LineCode>cn_unicom_zhejiang</LineCode>\\n        <LineName>浙江</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <LineDisplayName>中国电信</LineDisplayName>\\n        <LineCode>telecom</LineCode>\\n        <LineName>中国电信</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_新疆</LineDisplayName>\\n        <LineCode>cn_telecom_xinjiang</LineCode>\\n        <LineName>新疆</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_湖北</LineDisplayName>\\n        <LineCode>cn_telecom_hubei</LineCode>\\n        <LineName>湖北</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_贵州</LineDisplayName>\\n        <LineCode>cn_telecom_guizhou</LineCode>\\n        <LineName>贵州</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_云南</LineDisplayName>\\n        <LineCode>cn_telecom_yunnan</LineCode>\\n        <LineName>云南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_上海</LineDisplayName>\\n        <LineCode>cn_telecom_shanghai</LineCode>\\n        <LineName>上海</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_陕西</LineDisplayName>\\n        <LineCode>cn_telecom_shaanxi</LineCode>\\n        <LineName>陕西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_北京</LineDisplayName>\\n        <LineCode>cn_telecom_beijing</LineCode>\\n        <LineName>北京</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_四川</LineDisplayName>\\n        <LineCode>cn_telecom_sichuan</LineCode>\\n        <LineName>四川</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_浙江</LineDisplayName>\\n        <LineCode>cn_telecom_zhejiang</LineCode>\\n        <LineName>浙江</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_宁夏</LineDisplayName>\\n        <LineCode>cn_telecom_ningxia</LineCode>\\n        <LineName>宁夏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_吉林</LineDisplayName>\\n        <LineCode>cn_telecom_jilin</LineCode>\\n        <LineName>吉林</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_青海</LineDisplayName>\\n        <LineCode>cn_telecom_qinghai</LineCode>\\n        <LineName>青海</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_福建</LineDisplayName>\\n        <LineCode>cn_telecom_fujian</LineCode>\\n        <LineName>福建</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_湖南</LineDisplayName>\\n        <LineCode>cn_telecom_hunan</LineCode>\\n        <LineName>湖南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_山东</LineDisplayName>\\n        <LineCode>cn_telecom_shandong</LineCode>\\n        <LineName>山东</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_广东</LineDisplayName>\\n        <LineCode>cn_telecom_guangdong</LineCode>\\n        <LineName>广东</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_重庆</LineDisplayName>\\n        <LineCode>cn_telecom_chongqing</LineCode>\\n        <LineName>重庆</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_河南</LineDisplayName>\\n        <LineCode>cn_telecom_henan</LineCode>\\n        <LineName>河南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_海南</LineDisplayName>\\n        <LineCode>cn_telecom_hainan</LineCode>\\n        <LineName>海南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_安徽</LineDisplayName>\\n        <LineCode>cn_telecom_anhui</LineCode>\\n        <LineName>安徽</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_江苏</LineDisplayName>\\n        <LineCode>cn_telecom_jiangsu</LineCode>\\n        <LineName>江苏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_甘肃</LineDisplayName>\\n        <LineCode>cn_telecom_gansu</LineCode>\\n        <LineName>甘肃</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_广西</LineDisplayName>\\n        <LineCode>cn_telecom_guangxi</LineCode>\\n        <LineName>广西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_辽宁</LineDisplayName>\\n        <LineCode>cn_telecom_liaoning</LineCode>\\n        <LineName>辽宁</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_河北</LineDisplayName>\\n        <LineCode>cn_telecom_hebei</LineCode>\\n        <LineName>河北</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_江西</LineDisplayName>\\n        <LineCode>cn_telecom_jiangxi</LineCode>\\n        <LineName>江西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_内蒙古</LineDisplayName>\\n        <LineCode>cn_telecom_neimenggu</LineCode>\\n        <LineName>内蒙古</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_天津</LineDisplayName>\\n        <LineCode>cn_telecom_tianjin</LineCode>\\n        <LineName>天津</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_西藏</LineDisplayName>\\n        <LineCode>cn_telecom_xizang</LineCode>\\n        <LineName>西藏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_黑龙江</LineDisplayName>\\n        <LineCode>cn_telecom_heilongjiang</LineCode>\\n        <LineName>黑龙江</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>telecom</FatherCode>\\n        <LineDisplayName>中国电信_山西</LineDisplayName>\\n        <LineCode>cn_telecom_shanxi</LineCode>\\n        <LineName>山西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <LineDisplayName>中国移动</LineDisplayName>\\n        <LineCode>mobile</LineCode>\\n        <LineName>中国移动</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_四川</LineDisplayName>\\n        <LineCode>cn_mobile_sichuan</LineCode>\\n        <LineName>四川</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_辽宁</LineDisplayName>\\n        <LineCode>cn_mobile_liaoning</LineCode>\\n        <LineName>辽宁</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_宁夏</LineDisplayName>\\n        <LineCode>cn_mobile_ningxia</LineCode>\\n        <LineName>宁夏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_青海</LineDisplayName>\\n        <LineCode>cn_mobile_qinghai</LineCode>\\n        <LineName>青海</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_山西</LineDisplayName>\\n        <LineCode>cn_mobile_shanxi</LineCode>\\n        <LineName>山西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_北京</LineDisplayName>\\n        <LineCode>cn_mobile_beijing</LineCode>\\n        <LineName>北京</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_云南</LineDisplayName>\\n        <LineCode>cn_mobile_yunnan</LineCode>\\n        <LineName>云南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_黑龙江</LineDisplayName>\\n        <LineCode>cn_mobile_heilongjiang</LineCode>\\n        <LineName>黑龙江</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_河南</LineDisplayName>\\n        <LineCode>cn_mobile_henan</LineCode>\\n        <LineName>河南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_陕西</LineDisplayName>\\n        <LineCode>cn_mobile_shaanxi</LineCode>\\n        <LineName>陕西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_甘肃</LineDisplayName>\\n        <LineCode>cn_mobile_gansu</LineCode>\\n        <LineName>甘肃</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_吉林</LineDisplayName>\\n        <LineCode>cn_mobile_jilin</LineCode>\\n        <LineName>吉林</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_广西</LineDisplayName>\\n        <LineCode>cn_mobile_guangxi</LineCode>\\n        <LineName>广西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_江西</LineDisplayName>\\n        <LineCode>cn_mobile_jiangxi</LineCode>\\n        <LineName>江西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_上海</LineDisplayName>\\n        <LineCode>cn_mobile_shanghai</LineCode>\\n        <LineName>上海</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_新疆</LineDisplayName>\\n        <LineCode>cn_mobile_xinjiang</LineCode>\\n        <LineName>新疆</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_西藏</LineDisplayName>\\n        <LineCode>cn_mobile_xizang</LineCode>\\n        <LineName>西藏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_天津</LineDisplayName>\\n        <LineCode>cn_mobile_tianjin</LineCode>\\n        <LineName>天津</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_湖南</LineDisplayName>\\n        <LineCode>cn_mobile_hunan</LineCode>\\n        <LineName>湖南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_内蒙古</LineDisplayName>\\n        <LineCode>cn_mobile_neimenggu</LineCode>\\n        <LineName>内蒙古</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_浙江</LineDisplayName>\\n        <LineCode>cn_mobile_zhejiang</LineCode>\\n        <LineName>浙江</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_河北</LineDisplayName>\\n        <LineCode>cn_mobile_hebei</LineCode>\\n        <LineName>河北</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_贵州</LineDisplayName>\\n        <LineCode>cn_mobile_guizhou</LineCode>\\n        <LineName>贵州</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_江苏</LineDisplayName>\\n        <LineCode>cn_mobile_jiangsu</LineCode>\\n        <LineName>江苏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_广东</LineDisplayName>\\n        <LineCode>cn_mobile_guangdong</LineCode>\\n        <LineName>广东</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_重庆</LineDisplayName>\\n        <LineCode>cn_mobile_chongqing</LineCode>\\n        <LineName>重庆</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_海南</LineDisplayName>\\n        <LineCode>cn_mobile_hainan</LineCode>\\n        <LineName>海南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_福建</LineDisplayName>\\n        <LineCode>cn_mobile_fujian</LineCode>\\n        <LineName>福建</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_山东</LineDisplayName>\\n        <LineCode>cn_mobile_shandong</LineCode>\\n        <LineName>山东</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_安徽</LineDisplayName>\\n        <LineCode>cn_mobile_anhui</LineCode>\\n        <LineName>安徽</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>mobile</FatherCode>\\n        <LineDisplayName>中国移动_湖北</LineDisplayName>\\n        <LineCode>cn_mobile_hubei</LineCode>\\n        <LineName>湖北</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <LineDisplayName>中国教育网</LineDisplayName>\\n        <LineCode>edu</LineCode>\\n        <LineName>中国教育网</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_贵州</LineDisplayName>\\n        <LineCode>cn_edu_guizhou</LineCode>\\n        <LineName>贵州</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_广东</LineDisplayName>\\n        <LineCode>cn_edu_guangdong</LineCode>\\n        <LineName>广东</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_海南</LineDisplayName>\\n        <LineCode>cn_edu_hainan</LineCode>\\n        <LineName>海南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_吉林</LineDisplayName>\\n        <LineCode>cn_edu_jilin</LineCode>\\n        <LineName>吉林</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_甘肃</LineDisplayName>\\n        <LineCode>cn_edu_gansu</LineCode>\\n        <LineName>甘肃</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_天津</LineDisplayName>\\n        <LineCode>cn_edu_tianjin</LineCode>\\n        <LineName>天津</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_山西</LineDisplayName>\\n        <LineCode>cn_edu_shanxi</LineCode>\\n        <LineName>山西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_江苏</LineDisplayName>\\n        <LineCode>cn_edu_jiangsu</LineCode>\\n        <LineName>江苏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_湖南</LineDisplayName>\\n        <LineCode>cn_edu_hunan</LineCode>\\n        <LineName>湖南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_山东</LineDisplayName>\\n        <LineCode>cn_edu_shandong</LineCode>\\n        <LineName>山东</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_西藏</LineDisplayName>\\n        <LineCode>cn_edu_xizang</LineCode>\\n        <LineName>西藏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_云南</LineDisplayName>\\n        <LineCode>cn_edu_yunnan</LineCode>\\n        <LineName>云南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_陕西</LineDisplayName>\\n        <LineCode>cn_edu_shaanxi</LineCode>\\n        <LineName>陕西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_黑龙江</LineDisplayName>\\n        <LineCode>cn_edu_heilongjiang</LineCode>\\n        <LineName>黑龙江</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_湖北</LineDisplayName>\\n        <LineCode>cn_edu_hubei</LineCode>\\n        <LineName>湖北</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_新疆</LineDisplayName>\\n        <LineCode>cn_edu_xinjiang</LineCode>\\n        <LineName>新疆</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_浙江</LineDisplayName>\\n        <LineCode>cn_edu_zhejiang</LineCode>\\n        <LineName>浙江</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_江西</LineDisplayName>\\n        <LineCode>cn_edu_jiangxi</LineCode>\\n        <LineName>江西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_重庆</LineDisplayName>\\n        <LineCode>cn_edu_chongqing</LineCode>\\n        <LineName>重庆</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_四川</LineDisplayName>\\n        <LineCode>cn_edu_sichuan</LineCode>\\n        <LineName>四川</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_青海</LineDisplayName>\\n        <LineCode>cn_edu_qinghai</LineCode>\\n        <LineName>青海</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_河南</LineDisplayName>\\n        <LineCode>cn_edu_henan</LineCode>\\n        <LineName>河南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_内蒙古</LineDisplayName>\\n        <LineCode>cn_edu_neimenggu</LineCode>\\n        <LineName>内蒙古</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_安徽</LineDisplayName>\\n        <LineCode>cn_edu_anhui</LineCode>\\n        <LineName>安徽</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_北京</LineDisplayName>\\n        <LineCode>cn_edu_beijing</LineCode>\\n        <LineName>北京</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_广西</LineDisplayName>\\n        <LineCode>cn_edu_guangxi</LineCode>\\n        <LineName>广西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_辽宁</LineDisplayName>\\n        <LineCode>cn_edu_liaoning</LineCode>\\n        <LineName>辽宁</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_宁夏</LineDisplayName>\\n        <LineCode>cn_edu_ningxia</LineCode>\\n        <LineName>宁夏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_福建</LineDisplayName>\\n        <LineCode>cn_edu_fujian</LineCode>\\n        <LineName>福建</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_上海</LineDisplayName>\\n        <LineCode>cn_edu_shanghai</LineCode>\\n        <LineName>上海</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>edu</FatherCode>\\n        <LineDisplayName>中国教育网_河北</LineDisplayName>\\n        <LineCode>cn_edu_hebei</LineCode>\\n        <LineName>河北</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <LineDisplayName>中国鹏博士</LineDisplayName>\\n        <LineCode>drpeng</LineCode>\\n        <LineName>中国鹏博士</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_青海</LineDisplayName>\\n        <LineCode>cn_drpeng_qinghai</LineCode>\\n        <LineName>青海</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_上海</LineDisplayName>\\n        <LineCode>cn_drpeng_shanghai</LineCode>\\n        <LineName>上海</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_江苏</LineDisplayName>\\n        <LineCode>cn_drpeng_jiangsu</LineCode>\\n        <LineName>江苏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_云南</LineDisplayName>\\n        <LineCode>cn_drpeng_yunnan</LineCode>\\n        <LineName>云南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_辽宁</LineDisplayName>\\n        <LineCode>cn_drpeng_liaoning</LineCode>\\n        <LineName>辽宁</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_北京</LineDisplayName>\\n        <LineCode>cn_drpeng_beijing</LineCode>\\n        <LineName>北京</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_福建</LineDisplayName>\\n        <LineCode>cn_drpeng_fujian</LineCode>\\n        <LineName>福建</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_山西</LineDisplayName>\\n        <LineCode>cn_drpeng_shanxi</LineCode>\\n        <LineName>山西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_江西</LineDisplayName>\\n        <LineCode>cn_drpeng_jiangxi</LineCode>\\n        <LineName>江西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_甘肃</LineDisplayName>\\n        <LineCode>cn_drpeng_gansu</LineCode>\\n        <LineName>甘肃</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_吉林</LineDisplayName>\\n        <LineCode>cn_drpeng_jilin</LineCode>\\n        <LineName>吉林</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_广东</LineDisplayName>\\n        <LineCode>cn_drpeng_guangdong</LineCode>\\n        <LineName>广东</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_湖北</LineDisplayName>\\n        <LineCode>cn_drpeng_hubei</LineCode>\\n        <LineName>湖北</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_宁夏</LineDisplayName>\\n        <LineCode>cn_drpeng_ningxia</LineCode>\\n        <LineName>宁夏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_海南</LineDisplayName>\\n        <LineCode>cn_drpeng_hainan</LineCode>\\n        <LineName>海南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_河北</LineDisplayName>\\n        <LineCode>cn_drpeng_hebei</LineCode>\\n        <LineName>河北</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_黑龙江</LineDisplayName>\\n        <LineCode>cn_drpeng_heilongjiang</LineCode>\\n        <LineName>黑龙江</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_西藏</LineDisplayName>\\n        <LineCode>cn_drpeng_xizang</LineCode>\\n        <LineName>西藏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_安徽</LineDisplayName>\\n        <LineCode>cn_drpeng_anhui</LineCode>\\n        <LineName>安徽</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_湖南</LineDisplayName>\\n        <LineCode>cn_drpeng_hunan</LineCode>\\n        <LineName>湖南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_河南</LineDisplayName>\\n        <LineCode>cn_drpeng_henan</LineCode>\\n        <LineName>河南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_内蒙古</LineDisplayName>\\n        <LineCode>cn_drpeng_neimenggu</LineCode>\\n        <LineName>内蒙古</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_广西</LineDisplayName>\\n        <LineCode>cn_drpeng_guangxi</LineCode>\\n        <LineName>广西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_山东</LineDisplayName>\\n        <LineCode>cn_drpeng_shandong</LineCode>\\n        <LineName>山东</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_新疆</LineDisplayName>\\n        <LineCode>cn_drpeng_xinjiang</LineCode>\\n        <LineName>新疆</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_贵州</LineDisplayName>\\n        <LineCode>cn_drpeng_guizhou</LineCode>\\n        <LineName>贵州</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_四川</LineDisplayName>\\n        <LineCode>cn_drpeng_sichuan</LineCode>\\n        <LineName>四川</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_重庆</LineDisplayName>\\n        <LineCode>cn_drpeng_chongqing</LineCode>\\n        <LineName>重庆</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_陕西</LineDisplayName>\\n        <LineCode>cn_drpeng_shaanxi</LineCode>\\n        <LineName>陕西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_天津</LineDisplayName>\\n        <LineCode>cn_drpeng_tianjin</LineCode>\\n        <LineName>天津</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>drpeng</FatherCode>\\n        <LineDisplayName>中国鹏博士_浙江</LineDisplayName>\\n        <LineCode>cn_drpeng_zhejiang</LineCode>\\n        <LineName>浙江</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <LineDisplayName>中国广电网</LineDisplayName>\\n        <LineCode>btvn</LineCode>\\n        <LineName>中国广电网</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_河北</LineDisplayName>\\n        <LineCode>cn_btvn_hebei</LineCode>\\n        <LineName>河北</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_青海</LineDisplayName>\\n        <LineCode>cn_btvn_qinghai</LineCode>\\n        <LineName>青海</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_山西</LineDisplayName>\\n        <LineCode>cn_btvn_shanxi</LineCode>\\n        <LineName>山西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_宁夏</LineDisplayName>\\n        <LineCode>cn_btvn_ningxia</LineCode>\\n        <LineName>宁夏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_广西</LineDisplayName>\\n        <LineCode>cn_btvn_guangxi</LineCode>\\n        <LineName>广西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_江苏</LineDisplayName>\\n        <LineCode>cn_btvn_jiangsu</LineCode>\\n        <LineName>江苏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_广东</LineDisplayName>\\n        <LineCode>cn_btvn_guangdong</LineCode>\\n        <LineName>广东</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_吉林</LineDisplayName>\\n        <LineCode>cn_btvn_jilin</LineCode>\\n        <LineName>吉林</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_上海</LineDisplayName>\\n        <LineCode>cn_btvn_shanghai</LineCode>\\n        <LineName>上海</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_河南</LineDisplayName>\\n        <LineCode>cn_btvn_henan</LineCode>\\n        <LineName>河南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_天津</LineDisplayName>\\n        <LineCode>cn_btvn_tianjin</LineCode>\\n        <LineName>天津</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_安徽</LineDisplayName>\\n        <LineCode>cn_btvn_anhui</LineCode>\\n        <LineName>安徽</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_贵州</LineDisplayName>\\n        <LineCode>cn_btvn_guizhou</LineCode>\\n        <LineName>贵州</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_重庆</LineDisplayName>\\n        <LineCode>cn_btvn_chongqing</LineCode>\\n        <LineName>重庆</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_辽宁</LineDisplayName>\\n        <LineCode>cn_btvn_liaoning</LineCode>\\n        <LineName>辽宁</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_西藏</LineDisplayName>\\n        <LineCode>cn_btvn_xizang</LineCode>\\n        <LineName>西藏</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_浙江</LineDisplayName>\\n        <LineCode>cn_btvn_zhejiang</LineCode>\\n        <LineName>浙江</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_新疆</LineDisplayName>\\n        <LineCode>cn_btvn_xinjiang</LineCode>\\n        <LineName>新疆</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_云南</LineDisplayName>\\n        <LineCode>cn_btvn_yunnan</LineCode>\\n        <LineName>云南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_山东</LineDisplayName>\\n        <LineCode>cn_btvn_shandong</LineCode>\\n        <LineName>山东</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_内蒙古</LineDisplayName>\\n        <LineCode>cn_btvn_neimenggu</LineCode>\\n        <LineName>内蒙古</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_陕西</LineDisplayName>\\n        <LineCode>cn_btvn_shaanxi</LineCode>\\n        <LineName>陕西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_福建</LineDisplayName>\\n        <LineCode>cn_btvn_fujian</LineCode>\\n        <LineName>福建</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_北京</LineDisplayName>\\n        <LineCode>cn_btvn_beijing</LineCode>\\n        <LineName>北京</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_黑龙江</LineDisplayName>\\n        <LineCode>cn_btvn_heilongjiang</LineCode>\\n        <LineName>黑龙江</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_甘肃</LineDisplayName>\\n        <LineCode>cn_btvn_gansu</LineCode>\\n        <LineName>甘肃</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_四川</LineDisplayName>\\n        <LineCode>cn_btvn_sichuan</LineCode>\\n        <LineName>四川</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_湖北</LineDisplayName>\\n        <LineCode>cn_btvn_hubei</LineCode>\\n        <LineName>湖北</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国��电网_湖南</LineDisplayName>\\n        <LineCode>cn_btvn_hunan</LineCode>\\n        <LineName>湖南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_海南</LineDisplayName>\\n        <LineCode>cn_btvn_hainan</LineCode>\\n        <LineName>海南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>btvn</FatherCode>\\n        <LineDisplayName>中国广电网_江西</LineDisplayName>\\n        <LineCode>cn_btvn_jiangxi</LineCode>\\n        <LineName>江西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <LineDisplayName>境外</LineDisplayName>\\n        <LineCode>oversea</LineCode>\\n        <LineName>境外</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>oversea</FatherCode>\\n        <LineDisplayName>世界_亚洲</LineDisplayName>\\n        <LineCode>os_asia</LineCode>\\n        <LineName>亚洲</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_土耳其</LineDisplayName>\\n        <LineCode>os_asia_tr</LineCode>\\n        <LineName>土耳其</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_阿曼</LineDisplayName>\\n        <LineCode>os_asia_om</LineCode>\\n        <LineName>阿曼</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_哈萨克斯坦</LineDisplayName>\\n        <LineCode>os_asia_kz</LineCode>\\n        <LineName>哈萨克斯坦</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_阿联酋</LineDisplayName>\\n        <LineCode>os_asia_ae</LineCode>\\n        <LineName>阿联酋</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_韩国</LineDisplayName>\\n        <LineCode>os_asia_kr</LineCode>\\n        <LineName>韩国</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_中国台湾</LineDisplayName>\\n        <LineCode>os_asia_tw</LineCode>\\n        <LineName>中国台湾</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_巴基斯坦</LineDisplayName>\\n        <LineCode>os_asia_pk</LineCode>\\n        <LineName>巴基斯坦</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_伊朗</LineDisplayName>\\n        <LineCode>os_asia_ir</LineCode>\\n        <LineName>伊朗</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_乌兹别克斯坦</LineDisplayName>\\n        <LineCode>os_asia_uz</LineCode>\\n        <LineName>乌兹别克斯坦</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_缅甸</LineDisplayName>\\n        <LineCode>os_asia_mm</LineCode>\\n        <LineName>缅甸</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_印尼</LineDisplayName>\\n        <LineCode>os_asia_id</LineCode>\\n        <LineName>印尼</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_巴林</LineDisplayName>\\n        <LineCode>os_asia_bh</LineCode>\\n        <LineName>巴林</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_马来西亚</LineDisplayName>\\n        <LineCode>os_asia_my</LineCode>\\n        <LineName>马来西亚</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_黎巴嫩</LineDisplayName>\\n        <LineCode>os_asia_lb</LineCode>\\n        <LineName>黎巴嫩</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_朝鲜</LineDisplayName>\\n        <LineCode>os_asia_kp</LineCode>\\n        <LineName>朝鲜</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_卡塔尔</LineDisplayName>\\n        <LineCode>os_asia_qa</LineCode>\\n        <LineName>卡塔尔</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_越南</LineDisplayName>\\n        <LineCode>os_asia_vn</LineCode>\\n        <LineName>越南</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_叙利亚</LineDisplayName>\\n        <LineCode>os_asia_sy</LineCode>\\n        <LineName>叙利亚</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_菲律宾</LineDisplayName>\\n        <LineCode>os_asia_ph</LineCode>\\n        <LineName>菲律宾</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_科威特</LineDisplayName>\\n        <LineCode>os_asia_kw</LineCode>\\n        <LineName>科威特</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_蒙古</LineDisplayName>\\n        <LineCode>os_asia_mn</LineCode>\\n        <LineName>蒙古</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_中国澳门</LineDisplayName>\\n        <LineCode>os_asia_mo</LineCode>\\n        <LineName>中国澳门</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_柬埔寨</LineDisplayName>\\n        <LineCode>os_asia_kh</LineCode>\\n        <LineName>柬埔寨</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_马尔代夫</LineDisplayName>\\n        <LineCode>os_asia_mv</LineCode>\\n        <LineName>马尔代夫</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_老挝</LineDisplayName>\\n        <LineCode>os_asia_la</LineCode>\\n        <LineName>老挝</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_新加坡</LineDisplayName>\\n        <LineCode>os_asia_sg</LineCode>\\n        <LineName>新加坡</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_尼泊尔</LineDisplayName>\\n        <LineCode>os_asia_np</LineCode>\\n        <LineName>尼泊尔</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_沙特</LineDisplayName>\\n        <LineCode>os_asia_sa</LineCode>\\n        <LineName>沙特</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_伊拉克</LineDisplayName>\\n        <LineCode>os_asia_iq</LineCode>\\n        <LineName>伊拉克</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_泰国</LineDisplayName>\\n        <LineCode>os_asia_th</LineCode>\\n        <LineName>泰国</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_日本</LineDisplayName>\\n        <LineCode>os_asia_jp</LineCode>\\n        <LineName>日本</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_印度</LineDisplayName>\\n        <LineCode>os_asia_in</LineCode>\\n        <LineName>印度</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_中国香港</LineDisplayName>\\n        <LineCode>os_asia_hk</LineCode>\\n        <LineName>中国香港</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_asia</FatherCode>\\n        <LineDisplayName>亚洲_以色列</LineDisplayName>\\n        <LineCode>os_asia_il</LineCode>\\n        <LineName>以色列</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>oversea</FatherCode>\\n        <LineDisplayName>世界_非洲</LineDisplayName>\\n        <LineCode>os_africa</LineCode>\\n        <LineName>非洲</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_安哥拉</LineDisplayName>\\n        <LineCode>os_africa_ao</LineCode>\\n        <LineName>安哥拉</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_加纳</LineDisplayName>\\n        <LineCode>os_africa_gh</LineCode>\\n        <LineName>加纳</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_塞舌尔</LineDisplayName>\\n        <LineCode>os_africa_sc</LineCode>\\n        <LineName>塞舌尔</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_阿尔及利亚</LineDisplayName>\\n        <LineCode>os_africa_dz</LineCode>\\n        <LineName>阿尔及利亚</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_尼日利亚</LineDisplayName>\\n        <LineCode>os_africa_ng</LineCode>\\n        <LineName>尼日利亚</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_苏丹</LineDisplayName>\\n        <LineCode>os_africa_sd</LineCode>\\n        <LineName>苏丹</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_喀麦隆</LineDisplayName>\\n        <LineCode>os_africa_cm</LineCode>\\n        <LineName>喀麦隆</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_南苏丹</LineDisplayName>\\n        <LineCode>os_africa_ss</LineCode>\\n        <LineName>南苏丹</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_科特迪瓦</LineDisplayName>\\n        <LineCode>os_africa_ci</LineCode>\\n        <LineName>科特迪瓦</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_塞内加尔</LineDisplayName>\\n        <LineCode>os_africa_sn</LineCode>\\n        <LineName>塞内加尔</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_埃及</LineDisplayName>\\n        <LineCode>os_africa_eg</LineCode>\\n        <LineName>埃及</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_南非</LineDisplayName>\\n        <LineCode>os_africa_za</LineCode>\\n        <LineName>南非</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_肯尼亚</LineDisplayName>\\n        <LineCode>os_africa_ke</LineCode>\\n        <LineName>肯尼亚</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_africa</FatherCode>\\n        <LineDisplayName>非洲_摩洛哥</LineDisplayName>\\n        <LineCode>os_africa_ma</LineCode>\\n        <LineName>摩洛哥</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>oversea</FatherCode>\\n        <LineDisplayName>世界_北美洲</LineDisplayName>\\n        <LineCode>os_namerica</LineCode>\\n        <LineName>北美洲</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_namerica</FatherCode>\\n        <LineDisplayName>北美洲_加拿大</LineDisplayName>\\n        <LineCode>os_namerica_ca</LineCode>\\n        <LineName>加拿大</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_namerica</FatherCode>\\n        <LineDisplayName>北美洲_美国</LineDisplayName>\\n        <LineCode>os_namerica_us</LineCode>\\n        <LineName>美国</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_namerica</FatherCode>\\n        <LineDisplayName>北美洲_古巴</LineDisplayName>\\n        <LineCode>os_namerica_cu</LineCode>\\n        <LineName>古巴</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_namerica</FatherCode>\\n        <LineDisplayName>北美洲_墨西哥</LineDisplayName>\\n        <LineCode>os_namerica_mx</LineCode>\\n        <LineName>墨西哥</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>oversea</FatherCode>\\n        <LineDisplayName>世界_大洋洲</LineDisplayName>\\n        <LineCode>os_oceanica</LineCode>\\n        <LineName>大洋洲</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_oceanica</FatherCode>\\n        <LineDisplayName>大洋洲_新西兰</LineDisplayName>\\n        <LineCode>os_oceanica_nz</LineCode>\\n        <LineName>新西兰</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_oceanica</FatherCode>\\n        <LineDisplayName>大洋洲_斐济</LineDisplayName>\\n        <LineCode>os_oceanica_fj</LineCode>\\n        <LineName>斐济</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_oceanica</FatherCode>\\n        <LineDisplayName>大洋洲_澳大利亚</LineDisplayName>\\n        <LineCode>os_oceanica_au</LineCode>\\n        <LineName>澳大利亚</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_oceanica</FatherCode>\\n        <LineDisplayName>大洋洲_帕劳</LineDisplayName>\\n        <LineCode>os_oceanica_pw</LineCode>\\n        <LineName>帕劳</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>oversea</FatherCode>\\n        <LineDisplayName>世界_南美洲</LineDisplayName>\\n        <LineCode>os_samerica</LineCode>\\n        <LineName>南美洲</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_samerica</FatherCode>\\n        <LineDisplayName>南美洲_厄瓜多尔</LineDisplayName>\\n        <LineCode>os_samerica_ec</LineCode>\\n        <LineName>厄瓜多尔</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_samerica</FatherCode>\\n        <LineDisplayName>南美洲_乌拉圭</LineDisplayName>\\n        <LineCode>os_samerica_uy</LineCode>\\n        <LineName>乌拉圭</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_samerica</FatherCode>\\n        <LineDisplayName>南美洲_阿根廷</LineDisplayName>\\n        <LineCode>os_samerica_ar</LineCode>\\n        <LineName>阿根廷</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_samerica</FatherCode>\\n        <LineDisplayName>南美洲_巴西</LineDisplayName>\\n        <LineCode>os_samerica_br</LineCode>\\n        <LineName>巴西</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_samerica</FatherCode>\\n        <LineDisplayName>南美洲_哥伦比亚</LineDisplayName>\\n        <LineCode>os_samerica_co</LineCode>\\n        <LineName>哥伦比亚</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_samerica</FatherCode>\\n        <LineDisplayName>南美洲_智利</LineDisplayName>\\n        <LineCode>os_samerica_cl</LineCode>\\n        <LineName>智利</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_samerica</FatherCode>\\n        <LineDisplayName>南美洲_巴拉圭</LineDisplayName>\\n        <LineCode>os_samerica_py</LineCode>\\n        <LineName>巴拉圭</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_samerica</FatherCode>\\n        <LineDisplayName>南美洲_委内瑞拉</LineDisplayName>\\n        <LineCode>os_samerica_ve</LineCode>\\n        <LineName>委内瑞拉</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_samerica</FatherCode>\\n        <LineDisplayName>南美洲_玻利维亚</LineDisplayName>\\n        <LineCode>os_samerica_bo</LineCode>\\n        <LineName>玻利维亚</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_samerica</FatherCode>\\n        <LineDisplayName>南美洲_秘鲁</LineDisplayName>\\n        <LineCode>os_samerica_pe</LineCode>\\n        <LineName>秘鲁</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>oversea</FatherCode>\\n        <LineDisplayName>世界_欧洲</LineDisplayName>\\n        <LineCode>os_euro</LineCode>\\n        <LineName>欧洲</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_克罗地亚</LineDisplayName>\\n        <LineCode>os_euro_hr</LineCode>\\n        <LineName>克罗地亚</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_西班牙</LineDisplayName>\\n        <LineCode>os_euro_es</LineCode>\\n        <LineName>西班牙</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_波兰</LineDisplayName>\\n        <LineCode>os_euro_pl</LineCode>\\n        <LineName>波兰</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_葡萄牙</LineDisplayName>\\n        <LineCode>os_euro_pt</LineCode>\\n        <LineName>葡萄牙</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_瑞士</LineDisplayName>\\n        <LineCode>os_euro_ch</LineCode>\\n        <LineName>瑞士</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_丹麦</LineDisplayName>\\n        <LineCode>os_euro_dk</LineCode>\\n        <LineName>丹麦</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_乌克兰</LineDisplayName>\\n        <LineCode>os_euro_ua</LineCode>\\n        <LineName>乌克兰</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_意大利</LineDisplayName>\\n        <LineCode>os_euro_it</LineCode>\\n        <LineName>意大利</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_德国</LineDisplayName>\\n        <LineCode>os_euro_de</LineCode>\\n        <LineName>德国</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_芬兰</LineDisplayName>\\n        <LineCode>os_euro_fi</LineCode>\\n        <LineName>芬兰</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_法国</LineDisplayName>\\n        <LineCode>os_euro_fr</LineCode>\\n        <LineName>法国</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_罗马尼亚</LineDisplayName>\\n        <LineCode>os_euro_ro</LineCode>\\n        <LineName>罗马尼亚</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_爱尔兰</LineDisplayName>\\n        <LineCode>os_euro_ie</LineCode>\\n        <LineName>爱尔兰</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_比利时</LineDisplayName>\\n        <LineCode>os_euro_be</LineCode>\\n        <LineName>比利时</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_匈牙利</LineDisplayName>\\n        <LineCode>os_euro_hu</LineCode>\\n        <LineName>匈牙利</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_瑞典</LineDisplayName>\\n        <LineCode>os_euro_se</LineCode>\\n        <LineName>瑞典</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_白俄罗斯</LineDisplayName>\\n        <LineCode>os_euro_by</LineCode>\\n        <LineName>白俄罗斯</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_立陶宛</LineDisplayName>\\n        <LineCode>os_euro_lt</LineCode>\\n        <LineName>立陶宛</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_斯洛伐克</LineDisplayName>\\n        <LineCode>os_euro_sk</LineCode>\\n        <LineName>斯洛伐克</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_捷克</LineDisplayName>\\n        <LineCode>os_euro_cz</LineCode>\\n        <LineName>捷克</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_荷兰</LineDisplayName>\\n        <LineCode>os_euro_nl</LineCode>\\n        <LineName>荷兰</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_英国</LineDisplayName>\\n        <LineCode>os_euro_gb</LineCode>\\n        <LineName>英国</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_奥地利</LineDisplayName>\\n        <LineCode>os_euro_at</LineCode>\\n        <LineName>奥地利</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_保加利亚</LineDisplayName>\\n        <LineCode>os_euro_bg</LineCode>\\n        <LineName>保加利亚</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_冰岛</LineDisplayName>\\n        <LineCode>os_euro_is</LineCode>\\n        <LineName>冰岛</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_斯洛文尼亚</LineDisplayName>\\n        <LineCode>os_euro_si</LineCode>\\n        <LineName>斯洛文尼亚</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>os_euro</FatherCode>\\n        <LineDisplayName>欧洲_俄罗斯</LineDisplayName>\\n        <LineCode>os_euro_ru</LineCode>\\n        <LineName>俄罗斯</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <LineDisplayName>搜索引擎</LineDisplayName>\\n        <LineCode>search</LineCode>\\n        <LineName>搜索引擎</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>search</FatherCode>\\n        <LineDisplayName>谷歌</LineDisplayName>\\n        <LineCode>google</LineCode>\\n        <LineName>谷歌</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>search</FatherCode>\\n        <LineDisplayName>百度</LineDisplayName>\\n        <LineCode>baidu</LineCode>\\n        <LineName>百度</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>search</FatherCode>\\n        <LineDisplayName>必应</LineDisplayName>\\n        <LineCode>biying</LineCode>\\n        <LineName>必应</LineName>\\n    </RecordLine>\\n    <RecordLine>\\n        <FatherCode>search</FatherCode>\\n        <LineDisplayName>有道</LineDisplayName>\\n        <LineCode>youdao</LineCode>\\n        <LineName>有道</LineName>\\n    </RecordLine>\\n</RecordLines>\\n<DomainId>f8f8cd88-f253-48f5-a0ba-befcd5d0dc03</DomainId>\\n<AvailableTtls>\\n    <AvailableTtl>1</AvailableTtl>\\n    <AvailableTtl>5</AvailableTtl>\\n    <AvailableTtl>10</AvailableTtl>\\n    <AvailableTtl>60</AvailableTtl>\\n    <AvailableTtl>120</AvailableTtl>\\n    <AvailableTtl>600</AvailableTtl>\\n    <AvailableTtl>1800</AvailableTtl>\\n    <AvailableTtl>3600</AvailableTtl>\\n    <AvailableTtl>43200</AvailableTtl>\\n    <AvailableTtl>86400</AvailableTtl>\\n</AvailableTtls>\\n<VersionName>Alibaba Cloud DNS</VersionName>\\n<MinTtl>1</MinTtl>\\n<InClean>false</InClean>\\n<LineType>isp</LineType>","errorExample":""}]',
      'title' => '获取域名信息',
      'summary' => '根据传入参数查询指定域名的信息。',
      'description' => '本示例中域名绑定的实例为企业旗舰版。线路枚举信息可以参考RecordLines的返回值。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDomainLogs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'KeyWord',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关键字，按照“%KeyWord%”模式搜索，不区分大小写。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名分组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '2223',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。格式：**YYYY-MM-DD**。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-07-04',
          ),
        ),
        6 => 
        array (
          'name' => 'endDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间。格式：**YYYY-MM-DD**。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-07-04',
          ),
        ),
        7 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询内容类型。

- domain：域名
- slavedns：辅助DNS',
            'type' => 'string',
            'required' => false,
            'example' => 'domain',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '日志列表中日志的数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'PageSize' => 
              array (
                'description' => '本次查询获取的日志数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'DomainLogs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DomainLog' => 
                  array (
                    'description' => '域名操作日志列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Action' => 
                        array (
                          'description' => '操作行为。',
                          'type' => 'string',
                          'example' => '添加',
                        ),
                        'ActionTimestamp' => 
                        array (
                          'description' => '操作时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '143562300000',
                        ),
                        'ZoneId' => 
                        array (
                          'description' => 'Zone ID。',
                          'type' => 'string',
                          'example' => 'cxfd345sd234',
                        ),
                        'ClientIp' => 
                        array (
                          'description' => '操作者IP。',
                          'type' => 'string',
                          'example' => '182.92.XX.XX',
                        ),
                        'Message' => 
                        array (
                          'description' => '操作消息。',
                          'type' => 'string',
                          'example' => '添加到域名解析列表',
                        ),
                        'ActionTime' => 
                        array (
                          'description' => '操作时间。',
                          'type' => 'string',
                          'example' => '2015-12-12T09:23Z',
                        ),
                        'DomainName' => 
                        array (
                          'description' => '域名名称。',
                          'type' => 'string',
                          'example' => 'dns-example.top',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 2,\\n  \\"PageSize\\": 2,\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"PageNumber\\": 1,\\n  \\"DomainLogs\\": {\\n    \\"DomainLog\\": [\\n      {\\n        \\"Action\\": \\"添加\\",\\n        \\"ActionTimestamp\\": 143562300000,\\n        \\"ZoneId\\": \\"cxfd345sd234\\",\\n        \\"ClientIp\\": \\"182.92.XX.XX\\",\\n        \\"Message\\": \\"添加到域名解析列表\\",\\n        \\"ActionTime\\": \\"2015-12-12T09:23Z\\",\\n        \\"DomainName\\": \\"dns-example.top\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeDomainLogsResponse>\\r\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\r\\n    <TotalCount>2</TotalCount>\\r\\n    <PageNumber>1</PageNumber>\\r\\n    <PageSize>2</PageSize>\\r\\n    <DomainLogs>\\r\\n        <DomainLog>\\r\\n            <ActionTime>2015-12-12T09:23Z</ActionTime>\\r\\n            <DomainName>abc.com</DomainName>\\r\\n            <Action>添加</Action>\\r\\n            <Message>到域名解析列表</Message>\\r\\n            <ClientIp>182.92.253.20</ClientIp>\\r\\n        </DomainLog>\\r\\n        <DomainLog>\\r\\n            <ActionTime>2015-12-12T09:23Z</ActionTime>\\r\\n            <DomainName>example.com</DomainName>\\r\\n            <Action>找回成功</Action>\\r\\n            <Message>并添加到域名解析列表</Message>\\r\\n            <ClientIp>182.92.253.20</ClientIp>\\r\\n        </DomainLog>\\r\\n    </DomainLogs>\\r\\n</DescribeDomainLogsResponse>","errorExample":""}]',
      'title' => '获取域名操作日志',
      'summary' => '根据传入参数获取域名的操作日志。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDomainNs' => 
    array (
      'summary' => '根据传入域名获取域名当前的NS服务器列表，以及NS是否属于阿里云解析管理。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'AllAliDns' => 
              array (
                'description' => '是否全部为阿里云解析DNS。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '16C7DC7A-2FA7-4D14-8B12-88A2BB6373DB',
              ),
              'ExpectDnsServers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ExpectDnsServer' => 
                  array (
                    'description' => '云解析DNS分配的域名DNS服务器名称。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '云解析DNS分配的域名DNS服务器名称。',
                      'type' => 'string',
                      'example' => 'x1.alidns.com,x2.alidns.com',
                    ),
                  ),
                ),
              ),
              'DnsServers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DnsServer' => 
                  array (
                    'description' => '域名当前设置的DNS服务器名称。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '域名当前设置的DNS服务器名称。',
                      'type' => 'string',
                      'example' => 'vip1.alidns.com,vip2.alidns.com',
                    ),
                  ),
                ),
              ),
              'IncludeAliDns' => 
              array (
                'description' => '是否包含阿里云解析DNS。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DetectFailedReasonCode' => 
              array (
                'description' => '检测失败原因编码。',
                'type' => 'string',
                'example' => 'DnsCheck.Failed',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"AllAliDns\\": true,\\n  \\"RequestId\\": \\"16C7DC7A-2FA7-4D14-8B12-88A2BB6373DB\\",\\n  \\"ExpectDnsServers\\": {\\n    \\"ExpectDnsServer\\": [\\n      \\"x1.alidns.com,x2.alidns.com\\"\\n    ]\\n  },\\n  \\"DnsServers\\": {\\n    \\"DnsServer\\": [\\n      \\"vip1.alidns.com,vip2.alidns.com\\"\\n    ]\\n  },\\n  \\"IncludeAliDns\\": true,\\n  \\"DetectFailedReasonCode\\": \\"DnsCheck.Failed\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeDomainNsResponse>\\r\\n    <RequestId>16C7DC7A-2FA7-4D14-8B12-88A2BB6373DB</RequestId>\\r\\n    <AllAliDns>true</AllAliDns>\\r\\n    <DnsServers>\\r\\n        <DnsServer>vip1.alidns.com</DnsServer>\\r\\n        <DnsServer>vip2.alidns.com</DnsServer>\\r\\n    </DnsServers>\\r\\n    <IncludeAliDns>true</IncludeAliDns>\\r\\n</DescribeDomainNsResponse>","errorExample":""}]',
      'title' => '获取域名NS服务器列表',
      'description' => '> 此接口通过直接查询注册局权威服务器来获取域名DNS服务器名称，如果域名处于未生效状态（例如：serverHold、clientHold、未实名认证），可能会返回异常。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDomains' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'KeyWord',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关键字，按照“%KeyWord%”模式搜索，不区分大小写。',
            'type' => 'string',
            'required' => false,
            'example' => 'com',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指域名分组ID。如不填或传空字符，将在全部域名下查询。如传defaultGroup，将在默认分组下查询。
',
            'type' => 'string',
            'required' => false,
            'example' => '2223',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'SearchMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索模式。取值：

- **LIKE**：模糊搜索
- **EXACT**：精确搜索',
            'type' => 'string',
            'required' => false,
            'example' => 'LIKE',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-resourcegroupid01',
          ),
        ),
        7 => 
        array (
          'name' => 'Starmark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否查询域名星标。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Domains' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Domain' => 
                  array (
                    'description' => '本次获取的域名列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '本次获取的域名列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Remark' => 
                        array (
                          'description' => '备注。',
                          'type' => 'string',
                          'example' => 'remark',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '域名添加时间。',
                          'type' => 'string',
                          'example' => '2019-01-30T05:25Z',
                        ),
                        'RecordCount' => 
                        array (
                          'description' => '域名含有的解析记录条数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '100',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '标签键值对数组。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => '测试标签',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => '测试标签值',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '云解析产品ID。',
                          'type' => 'string',
                          'example' => 'i-7bg',
                        ),
                        'DomainName' => 
                        array (
                          'description' => '域名名称。',
                          'type' => 'string',
                          'example' => 'abc.com',
                        ),
                        'DomainId' => 
                        array (
                          'description' => '域名ID。',
                          'type' => 'string',
                          'example' => '00efd71a-770e-4255-b54e-6fe5659baffe',
                        ),
                        'AliDomain' => 
                        array (
                          'description' => '是否为阿里云万网域名。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'GroupId' => 
                        array (
                          'description' => '域名分组ID。',
                          'type' => 'string',
                          'example' => '2223',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '域名分组名称。',
                          'type' => 'string',
                          'example' => 'mygroup',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '所属资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-acf',
                        ),
                        'InstanceEndTime' => 
                        array (
                          'description' => '实例的到期时间。',
                          'type' => 'string',
                          'example' => '2020-03-14T16:00Z',
                        ),
                        'InstanceExpired' => 
                        array (
                          'description' => '实例是否过期。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'VersionName' => 
                        array (
                          'description' => '云解析产品名称。',
                          'type' => 'string',
                          'example' => '企业标准版',
                        ),
                        'DnsServers' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DnsServer' => 
                            array (
                              'description' => '云解析系统分配的DNS服务器名称列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '云解析系统分配的DNS服务器名称。',
                                'type' => 'string',
                                'example' => '{"DnsServer": ["ns1.alidns.com","ns2.alidns.com"]}',
                              ),
                            ),
                          ),
                        ),
                        'VersionCode' => 
                        array (
                          'description' => '云解析版本Code。',
                          'type' => 'string',
                          'example' => 'version_enterprise_basic',
                        ),
                        'PunyCode' => 
                        array (
                          'description' => '中文域名的punycode码，英文域名返回为空。',
                          'type' => 'string',
                          'example' => 'abc.com',
                        ),
                        'RegistrantEmail' => 
                        array (
                          'description' => '注册人邮箱。',
                          'type' => 'string',
                          'example' => 'test@example.com',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '添加时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1660546144000',
                        ),
                        'Starmark' => 
                        array (
                          'description' => '是否收藏至常用域名列表。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'DomainLoggingSwitchStatus' => 
                        array (
                          'description' => '域名DNS流量分析开启状态：

- OPEN：开启

- CLOSE：关闭',
                          'type' => 'string',
                          'example' => 'OPEN',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '域名列表总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '68386699-8B9E-4D5B-BC4C-75A28F6C2A00',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为1，默认为1。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Domains\\": {\\n    \\"Domain\\": [\\n      {\\n        \\"Remark\\": \\"remark\\",\\n        \\"CreateTime\\": \\"2019-01-30T05:25Z\\",\\n        \\"RecordCount\\": 100,\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"测试标签\\",\\n              \\"Value\\": \\"测试标签值\\"\\n            }\\n          ]\\n        },\\n        \\"InstanceId\\": \\"i-7bg\\",\\n        \\"DomainName\\": \\"abc.com\\",\\n        \\"DomainId\\": \\"00efd71a-770e-4255-b54e-6fe5659baffe\\",\\n        \\"AliDomain\\": true,\\n        \\"GroupId\\": \\"2223\\",\\n        \\"GroupName\\": \\"mygroup\\",\\n        \\"ResourceGroupId\\": \\"rg-acf\\",\\n        \\"InstanceEndTime\\": \\"2020-03-14T16:00Z\\",\\n        \\"InstanceExpired\\": false,\\n        \\"VersionName\\": \\"企业标准版\\",\\n        \\"DnsServers\\": {\\n          \\"DnsServer\\": [\\n            \\"{\\\\\\"DnsServer\\\\\\": [\\\\\\"ns1.alidns.com\\\\\\",\\\\\\"ns2.alidns.com\\\\\\"]}\\"\\n          ]\\n        },\\n        \\"VersionCode\\": \\"version_enterprise_basic\\",\\n        \\"PunyCode\\": \\"abc.com\\",\\n        \\"RegistrantEmail\\": \\"test@example.com\\",\\n        \\"CreateTimestamp\\": 1660546144000,\\n        \\"Starmark\\": true,\\n        \\"DomainLoggingSwitchStatus\\": \\"OPEN\\"\\n      }\\n    ]\\n  },\\n  \\"TotalCount\\": 2,\\n  \\"PageSize\\": 2,\\n  \\"RequestId\\": \\"68386699-8B9E-4D5B-BC4C-75A28F6C2A00\\",\\n  \\"PageNumber\\": 1\\n}","type":"json"}]',
      'title' => '获取域名列表',
      'summary' => '根据传入参数查询该用户的域名列表。',
      'description' => '1. 可以指定页码（PageNumber）和每页的数量（PageSize）来获取域名列表。
2. 可以指定域名的关键字（KeyWord）来查询含有该关键字的域名列表。
3. 域名列表的默认排序方式是按照域名添加的时间从新到旧排序的。
4. 可以指定域名分组的ID（GroupId），全部域名代表所有域名、默认分组代表未设置分组的域名。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDomainStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'example.com',
          ),
        ),
        2 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间，格式：**YYYY-MM-DD**。

只能查询最近90天的记录，即：`StartDate >= Now - 90`。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2019-07-04',
          ),
        ),
        3 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的结束时间，格式：**YYYY-MM-DD**。

默认为查询当天的时间。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '2019-07-04',
          ),
        ),
        4 => 
        array (
          'name' => 'DomainType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名类型，取值：

- PUBLIC：权威托管域名（默认值）

- CACHE：权威代理域名',
            'type' => 'string',
            'required' => false,
            'example' => 'PUBLIC',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6AEC7A64-3CB1-4C49-8B35-0B901F1E26BF',
              ),
              'Statistics' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Statistic' => 
                  array (
                    'description' => '请求量数据列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Timestamp' => 
                        array (
                          'description' => '统计时间戳。单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1556640000000',
                        ),
                        'Count' => 
                        array (
                          'description' => '请求量（次）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '15292887',
                        ),
                        'DomainName' => 
                        array (
                          'description' => '域名名称。',
                          'type' => 'string',
                          'example' => 'example.com',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6AEC7A64-3CB1-4C49-8B35-0B901F1E26BF\\",\\n  \\"Statistics\\": {\\n    \\"Statistic\\": [\\n      {\\n        \\"Timestamp\\": 1556640000000,\\n        \\"Count\\": 15292887,\\n        \\"DomainName\\": \\"example.com\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeDomainStatisticsResponse>\\n    <RequestId>6AEC7A64-3CB1-4C49-8B35-0B901F1E26BF</RequestId>\\n    <Statistics>\\n        <Timestamp>1556640000000</Timestamp>\\n        <Count>15292887</Count>\\n    </Statistics>\\n</DescribeDomainStatisticsResponse>","errorExample":""}]',
      'title' => '获取主域名请求量实时统计',
      'summary' => '查询指定主域名请求量的实时数据。',
      'description' => '实时数据的统计维度是按小时。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDomainStatisticsSummary' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，最小值为**1**，默认值为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间，格式：**YYYY-MM-DD**。

只能查询最近90天的记录，即：`StartDate >= Now - 90`。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2019-07-04',
          ),
        ),
        4 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的结束时间，格式：**YYYY-MM-DD**。

默认为查询当天的时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-07-04',
          ),
        ),
        5 => 
        array (
          'name' => 'SearchMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关键词的搜索模式。取值：

- 模糊搜索（默认）：**LIKE**
- 精确搜索：**EXACT**',
            'type' => 'string',
            'required' => false,
            'example' => 'LIKE',
          ),
        ),
        6 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关键词，按照“%KeyWord%”模式搜索，不区分大小写。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        7 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询总量阈值，也可查询相应请求量不大于threshold的数据。例如，如果您将该参数设置为100，可查询出请求量小于100次的域名。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'minimum' => '0',
            'example' => '12',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => 'CC625C21-8832-4683-BF10-C3CFB1A4FA13',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPages' => 
              array (
                'description' => '数据分页后总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '14',
              ),
              'TotalItems' => 
              array (
                'description' => '数据总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '68',
              ),
              'Statistics' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Statistic' => 
                  array (
                    'description' => '请求量数据列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DomainName' => 
                        array (
                          'description' => '域名名称。',
                          'type' => 'string',
                          'example' => 'ali-gslb.com',
                        ),
                        'Count' => 
                        array (
                          'description' => '请求量（次）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '35509014',
                        ),
                        'DomainType' => 
                        array (
                          'description' => '域名类型，大小写不敏感。取值:

PUBLIC：权威托管域名（默认值）

CACHE：权威代理域名',
                          'type' => 'string',
                          'example' => 'PUBLIC',
                        ),
                        'resolveAnalysisStatus' => 
                        array (
                          'description' => '域名DNS流量分析开启状态：

- OPEN：开启

- CLOSE：关闭',
                          'type' => 'string',
                          'example' => 'OPEN',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 5,\\n  \\"RequestId\\": \\"CC625C21-8832-4683-BF10-C3CFB1A4FA13\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalPages\\": 14,\\n  \\"TotalItems\\": 68,\\n  \\"Statistics\\": {\\n    \\"Statistic\\": [\\n      {\\n        \\"DomainName\\": \\"ali-gslb.com\\",\\n        \\"Count\\": 35509014,\\n        \\"DomainType\\": \\"PUBLIC\\",\\n        \\"resolveAnalysisStatus\\": \\"OPEN\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeDomainStatisticsSummaryResponse>\\r\\n    <PageNumber>1</PageNumber>\\r\\n  <Statistics>\\r\\n    <Statistic>\\r\\n      <Count>837871652</Count>\\r\\n      <DomainName>alitest2.com</DomainName>\\r\\n    </Statistic>\\r\\n    <Statistic>\\r\\n      <Count>50205934</Count>\\r\\n      <DomainName>dns-example.com</DomainName>\\r\\n    </Statistic>\\r\\n    <Statistic>\\r\\n      <Count>35509014</Count>\\r\\n      <DomainName>ali-gslb.com</DomainName>\\r\\n    </Statistic>\\r\\n    <Statistic>\\r\\n      <Count>31397370</Count>\\r\\n      <DomainName>dns-example.cn</DomainName>\\r\\n    </Statistic>\\r\\n    <Statistic>\\r\\n      <Count>3896503</Count>\\r\\n      <DomainName>mydomi.cn</DomainName>\\r\\n    </Statistic>\\r\\n  </Statistics>\\r\\n  <PageSize>5</PageSize>\\r\\n  <RequestId>CC625C21-8832-4683-BF10-C3CFB1A4FA13</RequestId>\\r\\n  <TotalItems>68</TotalItems>\\r\\n  <TotalPages>14</TotalPages>\\r\\n</DescribeDomainStatisticsSummaryResponse>","errorExample":""}]',
      'title' => '获取全部域名的请求量统计列表',
      'summary' => '查询用户账号下所有付费域名的请求量列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeRecordStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间，格式：**YYYY-MM-DD**。

只能查询最近90天的记录，即：`StartDate >= Now - 90`。

若查询时间小于等于7天，按照`维度：小时`返回数据，即：`StartDate <= Now - 7`。

若查询时间大于7天，按照`维度：天`返回数据，即：`StartDate > Now - 7`。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2019-07-04',
          ),
        ),
        2 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的结束时间，格式：**YYYY-MM-DD**。

默认为查询当天的时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-07-04',
          ),
        ),
        3 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
        4 => 
        array (
          'name' => 'Rr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指主机记录，如果要解析www.dns-exmaple.top，主机记录要填写www。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'www',
          ),
        ),
        5 => 
        array (
          'name' => 'DomainType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名类型，大小写不敏感。取值：

- PUBLIC：权威域名（默认值）

- CACHE：权威代理域名',
            'type' => 'string',
            'required' => false,
            'example' => 'PUBLIC',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6AEC7A64-3CB1-4C49-8B35-0B901F1E26BF',
              ),
              'Statistics' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Statistic' => 
                  array (
                    'description' => '请求量数据列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '统计数据列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Timestamp' => 
                        array (
                          'description' => '统计时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1556640000000',
                        ),
                        'Count' => 
                        array (
                          'description' => '请求量（次）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '15292887',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6AEC7A64-3CB1-4C49-8B35-0B901F1E26BF\\",\\n  \\"Statistics\\": {\\n    \\"Statistic\\": [\\n      {\\n        \\"Timestamp\\": 1556640000000,\\n        \\"Count\\": 15292887\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取子域名请求量实时统计',
      'summary' => '查询指定子域名请求量的实时数据。',
      'description' => '实时数据的统计维度是按小时。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeRecordStatisticsSummary' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，最小值为**1**，默认值为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间，格式：**YYYY-MM-DD**。

只能查询最近90天的记录，即：`StartDate >= Now - 90。`',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2019-07-04',
          ),
        ),
        4 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的结束时间。格式：**YYYY-MM-DD**。

默认为查询当天的时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-07-04',
          ),
        ),
        5 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
        6 => 
        array (
          'name' => 'SearchMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关键词的搜索模式。取值：

- 模糊搜索（默认）：**LIKE**
- 精确搜索：**EXACT**',
            'type' => 'string',
            'required' => false,
            'example' => 'EXACT',
          ),
        ),
        7 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关键词，按照“%KeyWord%”模式搜索，不区分大小写。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        8 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询总量阈值，也可查询相应的请求量不大于threshold的数据。例如，可查询出请求量小于100次的域名。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '12',
          ),
        ),
        9 => 
        array (
          'name' => 'DomainType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名类型，大小写不敏感。取值： 

- PUBLIC：权威托管域名（默认值）

- CACHE：权威代理域名',
            'type' => 'string',
            'required' => false,
            'example' => 'PUBLIC',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => 'E49F0023-4A98-486F-8BA3-6003D5664105',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPages' => 
              array (
                'description' => '数据分页后总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '数据总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'Statistics' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Statistic' => 
                  array (
                    'description' => '请求量数据列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SubDomain' => 
                        array (
                          'description' => '子域名。',
                          'type' => 'string',
                          'example' => 't1.alitest2.com',
                        ),
                        'Count' => 
                        array (
                          'description' => '请求量（次）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '838711553',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 20,\\n  \\"RequestId\\": \\"E49F0023-4A98-486F-8BA3-6003D5664105\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 3,\\n  \\"Statistics\\": {\\n    \\"Statistic\\": [\\n      {\\n        \\"SubDomain\\": \\"t1.alitest2.com\\",\\n        \\"Count\\": 838711553\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeRecordStatisticsSummaryResponse>\\r\\n  <PageNumber>1</PageNumber>\\r\\n  <Statistics>\\r\\n    <Statistic>\\r\\n      <Count>838711553</Count>\\r\\n      <SubDomain>t1.alitest2.com</SubDomain>\\r\\n    </Statistic>\\r\\n    <Statistic>\\r\\n      <Count>3467</Count>\\r\\n      <SubDomain>alitest2.com</SubDomain>\\r\\n    </Statistic>\\r\\n    <Statistic>\\r\\n      <Count>487</Count>\\r\\n      <SubDomain>txt.alitest2.com</SubDomain>\\r\\n    </Statistic>\\r\\n  </Statistics>\\r\\n  <PageSize>20</PageSize>\\r\\n  <RequestId>E49F0023-4A98-486F-8BA3-6003D5664105</RequestId>\\r\\n  <TotalItems>3</TotalItems>\\r\\n  <TotalPages>1</TotalPages>\\r\\n</DescribeRecordStatisticsSummaryResponse>","errorExample":""}]',
      'title' => '获取全部子域名的请求量统计',
      'summary' => '查询指定域名下的全部子域名的请求量统计。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeInstanceDomains' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为1，默认为1。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-cn-9lb38ldq9**',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '68386699-8B9E-4D5B-BC4C-75A28F6C2A00',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'InstanceDomains' => 
              array (
                'description' => '实例绑定域名列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreateTime' => 
                    array (
                      'description' => '实例创建时间。',
                      'type' => 'string',
                      'example' => '2020-03-09T02:15Z',
                    ),
                    'DomainName' => 
                    array (
                      'description' => '域名。',
                      'type' => 'string',
                      'example' => 'dns-example.top',
                    ),
                    'CreateTimestamp' => 
                    array (
                      'description' => '实例创建时间（时间戳）。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1583720154000',
                    ),
                  ),
                ),
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'TotalItems' => 
              array (
                'description' => '总计。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 2,\\n  \\"RequestId\\": \\"68386699-8B9E-4D5B-BC4C-75A28F6C2A00\\",\\n  \\"PageNumber\\": 1,\\n  \\"InstanceDomains\\": [\\n    {\\n      \\"CreateTime\\": \\"2020-03-09T02:15Z\\",\\n      \\"DomainName\\": \\"dns-example.top\\",\\n      \\"CreateTimestamp\\": 1583720154000\\n    }\\n  ],\\n  \\"TotalPages\\": 2,\\n  \\"TotalItems\\": 2\\n}","errorExample":""},{"type":"xml","example":"<RequestId>EC467B88-BD3D-4537-8F44-37F125BE5E65</RequestId>\\n<PageSize>20</PageSize>\\n<PageNumber>1</PageNumber>\\n<InstanceDomains>\\n    <DomainName>example.com</DomainName>\\n    <CreateTime>2020-03-09T02:15Z</CreateTime>\\n    <CreateTimestamp>1583720154000</CreateTimestamp>\\n</InstanceDomains>\\n<TotalPages>1</TotalPages>\\n<TotalItems>1</TotalItems>","errorExample":""}]',
      'title' => '获取实例绑定域名列表',
      'summary' => '获取实例绑定域名列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => '访问[公共错误码](https://next.api.aliyun.com/document/Alidns/2015-01-09/errorCode)查看更多错误码。',
    ),
    'DescribeTransferDomains' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为1，默认为1。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'TransferType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转移类型。取值范围：

- IN：转入到本账号的列表
- OUT：本账号转出的列表',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'IN',
          ),
        ),
        4 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询指定域名的转移记录。',
            'type' => 'string',
            'required' => false,
            'example' => 'dns-example.top',
          ),
        ),
        5 => 
        array (
          'name' => 'FromUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查看从123456转移给自己的域名列表。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '123456',
          ),
        ),
        6 => 
        array (
          'name' => 'TargetUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查看自己转移给123456的域名列表。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '列表总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'DomainTransfers' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DomainTransfer' => 
                  array (
                    'description' => '跨账号转移DNS列表。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'FromUserId' => 
                        array (
                          'description' => '域名转出的原始用户ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2222',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2019-10-30T07:16Z',
                        ),
                        'TargetUserId' => 
                        array (
                          'description' => '转移到的目标用户ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '111111',
                        ),
                        'DomainName' => 
                        array (
                          'description' => '域名。',
                          'type' => 'string',
                          'example' => 'dns-example.top',
                        ),
                        'Id' => 
                        array (
                          'description' => '转移记录的ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1572419764000',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"PageSize\\": 20,\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"PageNumber\\": 1,\\n  \\"DomainTransfers\\": {\\n    \\"DomainTransfer\\": [\\n      {\\n        \\"FromUserId\\": 2222,\\n        \\"CreateTime\\": \\"2019-10-30T07:16Z\\",\\n        \\"TargetUserId\\": 111111,\\n        \\"DomainName\\": \\"dns-example.top\\",\\n        \\"Id\\": 1,\\n        \\"CreateTimestamp\\": 1572419764000\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeTransferDomainsResponse>\\n<DomainTransfers>\\n    <DomainTransfer>\\n        <CreateTimestamp>1574304668000</CreateTimestamp>\\n        <CreateTime>2019-11-21T02:51Z</CreateTime>\\n        <DomainName>test.com</DomainName>\\n        <Id>1</Id>\\n        <TargetUserId>1111</TargetUserId>\\n        <FromUserId>2222</FromUserId>\\n    </DomainTransfer>\\n</DomainTransfers>\\n<PageNumber>1</PageNumber>\\n<TotalCount>1</TotalCount>\\n<PageSize>20</PageSize>\\n<RequestId>A54C2B66-E857-434D-B77F-BE5B45C89458</RequestId>\\n</DescribeTransferDomainsResponse>","errorExample":""}]',
      'title' => '获取跨账号转移DNS权限列表',
      'summary' => '根据传入参数获取跨账号转移DNS列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetMainDomainName' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InputString',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '字符串，最长不超过128个字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RR' => 
              array (
                'description' => '主机记录信息。',
                'type' => 'string',
                'example' => 'www',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'DomainName' => 
              array (
                'description' => '域名名称。',
                'type' => 'string',
                'example' => 'dns-example.top',
              ),
              'DomainLevel' => 
              array (
                'description' => '输入域名的级别。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RR\\": \\"www\\",\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"DomainName\\": \\"dns-example.top\\",\\n  \\"DomainLevel\\": 2\\n}","type":"json"}]',
      'title' => '获取主域名名称',
      'summary' => '通过输入的参数，获取主域名名称。',
      'description' => '关于主域名和子域名级别，参见：
<props="china">[域名级别](https://help.aliyun.com/document_detail/39803.html?spm=a2c4g.2357293.0.0.211f41ffUR1cPb)。 如输入`www.abc.com`，则输出abc.com。</props>
<props="intl">[域名级别](https://www.alibabacloud.com/help/zh/faq-detail/39803.htm)。 如输入`www.abc.com`，则输出abc.com。</props>',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDNSSLBSubDomains' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户IP。',
            'type' => 'string',
            'required' => false,
            'example' => '1.1.XX.XX',
          ),
        ),
        2 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'example' => '20',
            'default' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'Rr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主机记录。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '域名分组数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'SlbSubDomains' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SlbSubDomain' => 
                  array (
                    'description' => '权重配置子域名列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '描述：支持设置权重配置的记录类型，取值为：A、AAAA、CNAME。',
                          'type' => 'string',
                          'example' => 'A',
                        ),
                        'RecordCount' => 
                        array (
                          'description' => '解析记录数量。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3',
                        ),
                        'Open' => 
                        array (
                          'description' => '权重配置的状态。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'SubDomain' => 
                        array (
                          'description' => '子域名名称。',
                          'type' => 'string',
                          'example' => 'test.dns-example.top
',
                        ),
                        'LineAlgorithms' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'LineAlgorithm' => 
                            array (
                              'description' => '权重线路列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Line' => 
                                  array (
                                    'description' => '指解析线路，如电信、移动、联通等。',
                                    'type' => 'string',
                                    'example' => 'default',
                                  ),
                                  'Open' => 
                                  array (
                                    'description' => '是否开启权重配置。取值：

- **true**（默认）：开启
- **false**：关闭',
                                    'type' => 'boolean',
                                    'example' => 'true',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"PageSize\\": 1,\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"PageNumber\\": 1,\\n  \\"SlbSubDomains\\": {\\n    \\"SlbSubDomain\\": [\\n      {\\n        \\"Type\\": \\"A\\",\\n        \\"RecordCount\\": 3,\\n        \\"Open\\": true,\\n        \\"SubDomain\\": \\"test.dns-example.top\\\\n\\",\\n        \\"LineAlgorithms\\": {\\n          \\"LineAlgorithm\\": [\\n            {\\n              \\"Line\\": \\"default\\",\\n              \\"Open\\": true\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeDNSSLBSubDomainsResponse>\\n    <TotalCount>1</TotalCount>\\n    <PageSize>1</PageSize>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <SlbSubDomains>\\n        <Type>A</Type>\\n        <RecordCount>3</RecordCount>\\n        <Open>true</Open>\\n        <SubDomain>www.example.com</SubDomain>\\n        <LineAlgorithms/>\\n    </SlbSubDomains>\\n</DescribeDNSSLBSubDomainsResponse>","errorExample":""}]',
      'title' => '获取权重配置子域名列表',
      'summary' => '根据传入参数获取权重配置子域名列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDomainDnssecInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => 'Dnssec状态：

- ON：开启
- OFF：关闭',
                'type' => 'string',
                'example' => 'ON',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'Digest' => 
              array (
                'description' => '摘要（如果Dnssec开启则返回）。',
                'type' => 'string',
                'example' => 'C1A0424B97A049F1F9B2EA139CC298533219668164E343BD21203ABC4608C02A',
              ),
              'DomainName' => 
              array (
                'description' => '域名名称。',
                'type' => 'string',
                'example' => 'dns-example.top',
              ),
              'PublicKey' => 
              array (
                'description' => '公钥（如果Dnssec开启则返回）。',
                'type' => 'string',
                'example' => 'mdsswUyr3DPW132mOi8V9xESWE8jTo0dxCjjnopKl+GqJxpVXckHAeF+KkxLbxILfDLUT0rAK9iUzy1L53eKGQ==',
              ),
              'DigestType' => 
              array (
                'description' => '摘要类型（如果Dnssec开启则返回）。',
                'type' => 'string',
                'example' => 'SHA256',
              ),
              'DsRecord' => 
              array (
                'description' => 'DS记录（如果Dnssec开启则返回）。',
                'type' => 'string',
                'example' => 'example.com. 3600 IN DS 2371 13 2 C1A0424B97A049F1F9B2EA139CC298533219668164E343BD21203ABC4608C02A',
              ),
              'KeyTag' => 
              array (
                'description' => '密钥标签（如果Dnssec开启则返回）。',
                'type' => 'string',
                'example' => '54931',
              ),
              'Flags' => 
              array (
                'description' => '标志（如果Dnssec开启则返回）。',
                'type' => 'string',
                'example' => '257 (KSK)',
              ),
              'Algorithm' => 
              array (
                'description' => '算法类型（如果Dnssec开启则返回）。',
                'type' => 'string',
                'example' => '13',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Status\\": \\"ON\\",\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"Digest\\": \\"C1A0424B97A049F1F9B2EA139CC298533219668164E343BD21203ABC4608C02A\\",\\n  \\"DomainName\\": \\"dns-example.top\\",\\n  \\"PublicKey\\": \\"mdsswUyr3DPW132mOi8V9xESWE8jTo0dxCjjnopKl+GqJxpVXckHAeF+KkxLbxILfDLUT0rAK9iUzy1L53eKGQ==\\",\\n  \\"DigestType\\": \\"SHA256\\",\\n  \\"DsRecord\\": \\"example.com. 3600 IN DS 2371 13 2 C1A0424B97A049F1F9B2EA139CC298533219668164E343BD21203ABC4608C02A\\",\\n  \\"KeyTag\\": \\"54931\\",\\n  \\"Flags\\": \\"257 (KSK)\\",\\n  \\"Algorithm\\": \\"13\\"\\n}","errorExample":""},{"type":"xml","example":"<Status>ON</Status>\\n<RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n<Digest>C1A0424B97A049F1F9B2EA139CC298533219668164E343BD21203ABC4608C02A</Digest>\\n<DomainName>example.com</DomainName>\\n<PublicKey>mdsswUyr3DPW132mOi8V9xESWE8jTo0dxCjjnopKl+GqJxpVXckHAeF+KkxLbxILfDLUT0rAK9iUzy1L53eKGQ==</PublicKey>\\n<DigestType>SHA256</DigestType>\\n<DsRecord>example.com. 3600 IN DS 2371 13 2 C1A0424B97A049F1F9B2EA139CC298533219668164E343BD21203ABC4608C02A</DsRecord>\\n<KeyTag>54931</KeyTag>\\n<Flags>257 (KSK)</Flags>\\n<Algorithm>13</Algorithm>","errorExample":""}]',
      'title' => '查询域名的DNSSEC信息',
      'summary' => '根据传入参数查询指定域名的DNSSEC信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDomainGroups' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'KeyWord',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组名关键字，按照“%KeyWord%”模式搜索，不区分大小写。',
            'type' => 'string',
            'required' => false,
            'example' => 'Group',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '110',
            'example' => '20',
            'default' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'DomainGroups' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DomainGroup' => 
                  array (
                    'description' => '域名分组结构列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GroupId' => 
                        array (
                          'description' => '域名分组ID。

- 默认分组GroupId："defaultGroup"，代表未设置分组的域名。
- 全部域名GroupId：""，代表所有域名。',
                          'type' => 'string',
                          'example' => '2223',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '域名分组名称。',
                          'type' => 'string',
                          'example' => 'MyGroup',
                        ),
                        'DomainCount' => 
                        array (
                          'description' => '域名分组数量。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '域名分组总数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"DomainGroups\\": {\\n    \\"DomainGroup\\": [\\n      {\\n        \\"GroupId\\": \\"2223\\",\\n        \\"GroupName\\": \\"MyGroup\\",\\n        \\"DomainCount\\": 2\\n      }\\n    ]\\n  },\\n  \\"TotalCount\\": 1,\\n  \\"PageSize\\": 20,\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"PageNumber\\": 1\\n}","type":"json"}]',
      'title' => '获取所有域名分组列表',
      'summary' => '根据传入参数获取所有分组列表。',
    ),
    'BindInstanceDomains' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sdfasdf',
          ),
        ),
        2 => 
        array (
          'name' => 'DomainNames',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名列表。

> " , ” 号隔开多个域名，最多100个域名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'example.com,example.net',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'FailedCount' => 
              array (
                'description' => '绑定失败个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'SuccessCount' => 
              array (
                'description' => '绑定成功个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"FailedCount\\": 0,\\n  \\"SuccessCount\\": 2\\n}","errorExample":""},{"type":"xml","example":"<BindInstanceDomainsResponse>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n    <FailedCount>0</FailedCount>\\n    <SuccessCount>2</SuccessCount>\\n</BindInstanceDomainsResponse>","errorExample":""}]',
      'title' => '绑定付费版DNS域名',
      'summary' => '绑定付费版DNS域名到实例ID。',
      'description' => '实例ID以”dns-“开头的实例为新版实例，支持绑定多个域名，调用接口直接绑定到实例，如果域名个数超过实例的配置，则会报错。<br>
实例ID以非”dns-“开头的实例为旧版实例，只支持绑定一个域名，因此调用此接口，如果实例已经绑定域名，则会执行域名换绑操作。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RetrieveDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '9CC0D642-49D4-48DE-A1A5-9F218652E4A7',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9CC0D642-49D4-48DE-A1A5-9F218652E4A7\\"\\n}","errorExample":""},{"type":"xml","example":"<RetrieveDomainResponse>\\n    <RequestId>9CC0D642-49D4-48DE-A1A5-9F218652E4A7</RequestId>\\n</RetrieveDomainResponse>","errorExample":""}]',
      'title' => '找回域名',
      'summary' => '执行找回域名操作。',
      'description' => '域名找回时需要做txt记录验证，请配合<props="china">[生成txt记录](https://help.aliyun.com/document_detail/145533.html)</props>  <props="intl">[生成txt记录](https://www.alibabacloud.com/help/zh/alibaba-cloud-dns/latest/generating-a-txt-record)</props>接口使用。',
    ),
    'OperateBatchDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '批量操作类型，取值：

- **DOMAIN_ADD**：批量添加域名
- **DOMAIN_DEL**：批量删除域名
- **RR_ADD**：批量添加解析
- **RR_DEL**：批量删除解析（删除满足N.RR、N.VALUE、N.RR&amp;N.VALUE条件的解析记录。如果无N.RR&&N.VALUE则清空参数DomainRecordInfo.N.Domain下的解析记录）',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RR_ADD',
          ),
        ),
        2 => 
        array (
          'name' => 'DomainRecordInfo',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '用户提交的数据（POPAPI确认size，最大1000条数据）。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Type' => 
                array (
                  'description' => '记录类型。例如：A、AAAA、TXT、MX、CNAME等。

> 批量操作类型为**RR_ADD**、**RR_DEL**时必需。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'MX',
                ),
                'Value' => 
                array (
                  'description' => '记录值。

> 批量操作类型为**RR_ADD**、**RR_DEL**时必需。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'fd87da3c4528844d45af39200155a905',
                ),
                'Ttl' => 
                array (
                  'description' => '生效时间（单位：秒），默认***600***。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '600',
                ),
                'Domain' => 
                array (
                  'description' => '域名名称。

> 用户提交的数据， N 从 1 开始，最多 1000 条数据。由于HTTP请求头限制，超过 1000 条的数据会被忽略，不予处理。请勿超过1000条数据。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'dns-example.top',
                ),
                'Line' => 
                array (
                  'description' => '解析请求来源。默认：default。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'default',
                ),
                'NewRr' => 
                array (
                  'description' => '新的主机记录（仅修改操作时使用，外部用户不支持）。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'mail',
                ),
                'Rr' => 
                array (
                  'description' => '主机记录。

> 批量操作类型为**RR_ADD**、**RR_DEL**时必需。

',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'zhaohui',
                ),
                'Priority' => 
                array (
                  'description' => 'MX优先级。

记录类型为MX时必需。默认：10。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '5',
                ),
                'NewType' => 
                array (
                  'description' => '新的记录类型代码（仅修改操作时使用，外部用户不支持）。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'AAAA',
                ),
                'NewValue' => 
                array (
                  'description' => '新的记录值（仅修改操作时使用，外部用户不支持）。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '114.92.XX.XX',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 1000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TaskId' => 
              array (
                'description' => '任务ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '345345',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '75446CC1-FC9A-4595-8D96-089D73D7A63D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"TaskId\\": 345345,\\n  \\"RequestId\\": \\"75446CC1-FC9A-4595-8D96-089D73D7A63D\\"\\n}","type":"json"}]',
      'title' => '批量管理域名和解析记录',
      'summary' => '提交批量添加、删除域名、解析记录的任务。',
      'description' => '使用场景：有大量需要执行的解析操作任务，但是对任务生效效率没有高需求。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TransferDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainNames',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名列表，英文逗号隔开；仅支持阿里云注册的域名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test1.com,test2.com',
          ),
        ),
        2 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备注。',
            'type' => 'string',
            'required' => false,
            'example' => 'test domain transfer',
          ),
        ),
        3 => 
        array (
          'name' => 'TargetUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '将云解析列表中的域名和解析记录转移到目标用户ID下。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '12345678',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TaskId' => 
              array (
                'description' => '任务ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '112233',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TaskId\\": 112233,\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\"\\n}","errorExample":""},{"type":"xml","example":"<TransferDomainResponse>\\n<RequestId>92901A84-B317-43BE-9610-76B1C7B7ADC7</RequestId>\\n<TaskId>180839</TaskId>\\n</TransferDomainResponse>","errorExample":""}]',
      'title' => '跨账号转移DNS权限',
      'summary' => '根据传入参数批量跨账号转移DNS权限至其他账户。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnbindInstanceDomains' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainNames',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名列表。

使用“ , ”号隔开多个域名，最多100个域名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'example.com,example.net',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-cn-9lb38ldq9**',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '123',
              ),
              'FailedCount' => 
              array (
                'description' => '域名解绑失败个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'SuccessCount' => 
              array (
                'description' => '域名解绑成功个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"123\\",\\n  \\"FailedCount\\": 0,\\n  \\"SuccessCount\\": 2\\n}","errorExample":""},{"type":"xml","example":"<UnbindInstanceDomainsResponse>\\n    <RequestId>123</RequestId>\\n    <FailedCount>0</FailedCount>\\n    <SuccessCount>2</SuccessCount>\\n</UnbindInstanceDomainsResponse>","errorExample":""}]',
      'title' => '解绑付费版DNS域名',
      'summary' => '根据实例ID解绑付费版DNS的域名。',
      'description' => '实例ID以”dns-“开头的实例为新版实例，支持绑定多个域名，调用接口直接绑定到实例，如果域名个数超过实例的配置，则会报错。<br>
实例ID以非”dns-“开头的实例为旧版实例，只支持绑定一个域名，因此调用此接口，如果实例已经绑定域名，则会执行域名换绑操作。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddDnsCacheDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns.example.com',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权威代理域名实例ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-cn-j6666',
          ),
        ),
        3 => 
        array (
          'name' => 'CacheTtlMin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '回源缓存数据TTL(最小值)，取值范围为30 - 86400',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '86400',
            'minimum' => '30',
            'example' => '30',
          ),
        ),
        4 => 
        array (
          'name' => 'CacheTtlMax',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '回源缓存数据TTL(最大值)，取值范围为30 - 86400',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '86400',
            'minimum' => '30',
            'example' => '86400',
          ),
        ),
        5 => 
        array (
          'name' => 'SourceProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '回源协议，TCP、UDP。默认值为UDP',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'UDP',
          ),
        ),
        6 => 
        array (
          'name' => 'SourceEdns',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源站是否支持edns。NOT_SUPPORT：不支持，SUPPORT：支持',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'SUPPORT',
          ),
        ),
        7 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备注',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        8 => 
        array (
          'name' => 'SourceDnsServer',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '源站DNS服务器列表，最多支持10条记录',
            'type' => 'array',
            'items' => 
            array (
              'description' => '源站DNS服务器',
              'type' => 'object',
              'properties' => 
              array (
                'Host' => 
                array (
                  'description' => '源站服务器的域名或IP地址',
                  'type' => 'string',
                  'required' => true,
                  'example' => '192.0.0.0',
                ),
                'Port' => 
                array (
                  'description' => '源站DNS服务器端口',
                  'type' => 'string',
                  'required' => true,
                  'example' => '53',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-XXXXXXX',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-XXXXXXX\\"\\n}","type":"json"}]',
      'title' => '添加 DNS 权威代理域名',
    ),
    'UpdateDnsCacheDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns.example.com',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权威代理域名实例ID',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'dns-sg-l9u2ux1fw01',
          ),
        ),
        3 => 
        array (
          'name' => 'CacheTtlMin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '回源缓存数据TTL(最小值)，取值范围为30 - 86400',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'maximum' => '86400',
            'minimum' => '30',
            'example' => '30',
          ),
        ),
        4 => 
        array (
          'name' => 'CacheTtlMax',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '回源缓存数据TTL(最大值)，取值范围为30 - 86400',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'maximum' => '86400',
            'minimum' => '30',
            'example' => '86400',
          ),
        ),
        5 => 
        array (
          'name' => 'SourceProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '回源协议，TCP、UDP，默认值为UDP',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'UDP',
          ),
        ),
        6 => 
        array (
          'name' => 'SourceEdns',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源站是否支持edns。
NOT_SUPPORT：不支持，SUPPORT：支持',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'SUPPORT',
          ),
        ),
        7 => 
        array (
          'name' => 'SourceDnsServer',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '源站DNS服务器列表，最多支持添加10条记录',
            'type' => 'array',
            'items' => 
            array (
              'description' => '源站DNS服务器',
              'type' => 'object',
              'properties' => 
              array (
                'Host' => 
                array (
                  'description' => '源站服务器的域名或IP地址',
                  'type' => 'string',
                  'required' => false,
                  'example' => '223.5.5.5',
                ),
                'Port' => 
                array (
                  'description' => '源站DNS服务器端口',
                  'type' => 'string',
                  'required' => false,
                  'example' => '53',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\"\\n}","type":"json"}]',
      'title' => '更新 DNS 权威代理域名',
    ),
    'UpdateDnsCacheDomainRemark' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.com',
          ),
        ),
        2 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备注，长度限制50个字符，只可包含中英文数字以及 . 、_、-',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\"\\n}","type":"json"}]',
      'title' => '更新 DNS 权威代理域名备注',
    ),
    'DeleteDnsCacheDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\"\\n}","type":"json"}]',
      'title' => '删除 DNS 权威代理域名',
    ),
    'DescribeDnsCacheDomains' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
          ),
        ),
        1 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关键字，按照”%Keyword%”模式搜索，不区分大小写',
            'type' => 'string',
            'required' => false,
            'example' => 'a',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为1，默认为1',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Domains' => 
              array (
                'description' => '本次获取的域名列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '域名名称',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SourceProtocol' => 
                    array (
                      'description' => '回源协议，TCP、UDP。默认值为UDP',
                      'type' => 'string',
                      'example' => 'UDP',
                    ),
                    'UpdateTime' => 
                    array (
                      'description' => '最后更新时间',
                      'type' => 'string',
                      'example' => '2023-05-22T03:40Z',
                    ),
                    'Remark' => 
                    array (
                      'description' => '备注',
                      'type' => 'string',
                      'example' => 'remark',
                    ),
                    'ExpireTime' => 
                    array (
                      'description' => '实例过期时间',
                      'type' => 'string',
                      'example' => '2022-12-02T16:00Z',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '添加时间',
                      'type' => 'string',
                      'example' => '2022-10-17T06:13Z',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '权威代理域名实例ID',
                      'type' => 'string',
                      'example' => 'i-7bg',
                    ),
                    'SourceEdns' => 
                    array (
                      'description' => '源站是否支持edns。NOT_SUPPORT：不支持，SUPPORT：支持',
                      'type' => 'string',
                      'example' => 'SUPPORT',
                    ),
                    'DomainName' => 
                    array (
                      'description' => '权威代理域名名称',
                      'type' => 'string',
                      'example' => 'dns-example.top',
                    ),
                    'DomainId' => 
                    array (
                      'description' => '权威代理域名ID',
                      'type' => 'string',
                      'example' => '00efd71a-770e-4255-b54e-6fe5659baffe',
                    ),
                    'UpdateTimestamp' => 
                    array (
                      'description' => '最后更新时间（时间戳）',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1671690491000',
                    ),
                    'ExpireTimestamp' => 
                    array (
                      'description' => '实例过期时间（时间戳）',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1692374400000',
                    ),
                    'CacheTtlMax' => 
                    array (
                      'description' => '回源缓存数据TTL(最大值)，取值范围为30 - 86400',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '86400',
                    ),
                    'CacheTtlMin' => 
                    array (
                      'description' => '回源缓存数据TTL(最小值)，取值范围为30 - 86400',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '30',
                    ),
                    'VersionCode' => 
                    array (
                      'description' => '云解析版本Code',
                      'type' => 'string',
                      'example' => 'ultimate',
                    ),
                    'SourceDnsServers' => 
                    array (
                      'description' => '源站DNS服务器列表',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '源站DNS服务器',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Host' => 
                          array (
                            'description' => '源站服务器的域名或IP地址',
                            'type' => 'string',
                            'example' => 'ns8.alidns.com',
                          ),
                          'Port' => 
                          array (
                            'description' => '源站DNS服务器端口',
                            'type' => 'string',
                            'example' => '53',
                          ),
                        ),
                      ),
                    ),
                    'CreateTimestamp' => 
                    array (
                      'description' => '添加时间（时间戳）',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1660546144000',
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '域名列表总数',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '3',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码',
                'type' => 'string',
                'example' => '57121A9C-CDCF-541F-AD39-275D89099420',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Domains\\": [\\n    {\\n      \\"SourceProtocol\\": \\"UDP\\",\\n      \\"UpdateTime\\": \\"2023-05-22T03:40Z\\",\\n      \\"Remark\\": \\"remark\\",\\n      \\"ExpireTime\\": \\"2022-12-02T16:00Z\\",\\n      \\"CreateTime\\": \\"2022-10-17T06:13Z\\",\\n      \\"InstanceId\\": \\"i-7bg\\",\\n      \\"SourceEdns\\": \\"SUPPORT\\",\\n      \\"DomainName\\": \\"dns-example.top\\",\\n      \\"DomainId\\": \\"00efd71a-770e-4255-b54e-6fe5659baffe\\",\\n      \\"UpdateTimestamp\\": 1671690491000,\\n      \\"ExpireTimestamp\\": 1692374400000,\\n      \\"CacheTtlMax\\": 86400,\\n      \\"CacheTtlMin\\": 30,\\n      \\"VersionCode\\": \\"ultimate\\",\\n      \\"SourceDnsServers\\": [\\n        {\\n          \\"Host\\": \\"ns8.alidns.com\\",\\n          \\"Port\\": \\"53\\"\\n        }\\n      ],\\n      \\"CreateTimestamp\\": 1660546144000\\n    }\\n  ],\\n  \\"TotalCount\\": 3,\\n  \\"PageSize\\": 20,\\n  \\"RequestId\\": \\"57121A9C-CDCF-541F-AD39-275D89099420\\",\\n  \\"PageNumber\\": 1\\n}","type":"json"}]',
      'title' => '获取 DNS 权威代理域名',
    ),
    'AddDomainRecord' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'example.com',
          ),
        ),
        3 => 
        array (
          'name' => 'RR',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主机记录。

如果要解析@.exmaple.com，主机记录要填写”@”，而不是空。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'www',
          ),
        ),
        4 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析记录类型，参见：


<props="china">[解析记录类型格式](https://help.aliyun.com/document_detail/29805.html)</props>


<props="intl">[解析记录类型格式](https://www.alibabacloud.com/help/zh/doc-detail/29805.htm)</props>',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'A',
          ),
        ),
        5 => 
        array (
          'name' => 'Value',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '记录值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.0.2.254',
          ),
        ),
        6 => 
        array (
          'name' => 'TTL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析生效时间，默认为600秒（10分钟）。参见：

<props="china">[TTL定义说明](https://help.aliyun.com/document_detail/29806.html)</props>

<props="intl">[TTL定义说明](https://www.alibabacloud.com/help/zh/doc-detail/29806.htm)</props>',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '86400',
            'minimum' => '1',
            'example' => '600',
            'default' => '600',
          ),
        ),
        7 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MX记录的优先级，取值范围：`[1,50]`。

记录类型为MX记录时，此参数必需，MX 优先级的数值越低，优先级别就越高。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'Line',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析线路，默认为**default**。参见：

<props="china">[解析线路枚举](https://help.aliyun.com/document_detail/29807.html)</props>

<props="intl">[解析线路枚举](https://www.alibabacloud.com/help/zh/doc-detail/29807.htm)</props>',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'default' => 'default',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'RecordId' => 
              array (
                'description' => '解析记录的ID。',
                'type' => 'string',
                'example' => '9999985',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"RecordId\\": \\"9999985\\"\\n}","type":"json"}]',
      'title' => '添加解析记录',
      'summary' => '根据传入参数添加解析记录。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDomainRecord' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'RecordId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析记录的ID。

此参数在添加解析时会返回，在获取域名解析列表时会返回。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '9999985',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'RecordId' => 
              array (
                'description' => '解析记录的ID。',
                'type' => 'string',
                'example' => '9999985',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"RecordId\\": \\"9999985\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteDomainRecordResponse>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n    <RecordId>9999985</RecordId>\\n</DeleteDomainRecordResponse>","errorExample":""}]',
      'title' => '删除解析记录',
      'summary' => '根据传入参数删除解析记录。',
    ),
    'DeleteSubDomainRecords' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'example.com',
          ),
        ),
        3 => 
        array (
          'name' => 'RR',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主机记录。

如果要解析@.exmaple.com，主机记录要填写”@”，而不是空。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'www',
          ),
        ),
        4 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析记录类型。如果不填写，则返回子域名对应的全部解析记录类型。

解析类型包括(不区分大小写)：**A、MX、CNAME、TXT、REDIRECT_URL、FORWORD_URL、NS、AAAA、SRV**。',
            'type' => 'string',
            'required' => false,
            'example' => 'A',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RR' => 
              array (
                'description' => '主机记录。',
                'type' => 'string',
                'example' => 'www',
              ),
              'TotalCount' => 
              array (
                'description' => '被删除的解析记录总数。',
                'type' => 'string',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RR\\": \\"www\\",\\n  \\"TotalCount\\": \\"1\\",\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteSubDomainRecordsResponse>\\n    <RR>www</RR>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n</DeleteSubDomainRecordsResponse>","errorExample":""}]',
      'title' => '删除主机记录对应的解析记录',
      'summary' => '根据传入参数删除主机记录对应的解析记录。',
      'description' => '如果被删除的解析记录中存在锁定解析，则该锁定解析不会被删除。',
    ),
    'UpdateDomainRecord' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'RecordId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析记录的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '9999985',
          ),
        ),
        3 => 
        array (
          'name' => 'RR',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主机记录。

如果要解析@.exmaple.com，主机记录要填写”@”，而不是空。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'www',
          ),
        ),
        4 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析记录类型，参见:

<props="china">[解析记录类型格式](https://help.aliyun.com/document_detail/29805.html)。</props>
<props="intl">[解析记录类型格式](https://www.alibabacloud.com/help/zh/doc-detail/29805.htm)。</props>
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'A',
          ),
        ),
        5 => 
        array (
          'name' => 'Value',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '记录值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.0.2.254',
          ),
        ),
        6 => 
        array (
          'name' => 'TTL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析生效时间，默认为600秒（10分钟）。

参见:

<props="china">[TTL定义说明](https://help.aliyun.com/document_detail/29806.html)。</props>
<props="intl">[TTL定义说明](https://www.alibabacloud.com/help/zh/doc-detail/29806.htm)。</props>
',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '86400',
            'minimum' => '1',
            'example' => '600',
            'default' => '600',
          ),
        ),
        7 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MX记录的优先级，取值范围：`[1,50]`。

记录类型为MX记录时，此参数必需。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'Line',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析线路，默认为**default**。

参见:

<props="china">[解析线路枚举](https://help.aliyun.com/document_detail/29807.html)。</props>
<props="intl">[解析线路枚举](https://www.alibabacloud.com/help/zh/doc-detail/29807.htm)。</props>
',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
            'default' => 'default',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'RecordId' => 
              array (
                'description' => '解析记录的ID。',
                'type' => 'string',
                'example' => '9999985',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"RecordId\\": \\"9999985\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateDomainRecordResponse>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n    <RecordId>9999985</RecordId>\\n</UpdateDomainRecordResponse>","errorExample":""}]',
      'title' => '修改域名解析记录',
      'summary' => '根据传入参数修改解析记录。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDomainRecordRemark' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'RecordId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '您的解析记录ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '12345678',
          ),
        ),
        3 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '您的解析记录的备注信息。

',
            'type' => 'string',
            'required' => false,
            'example' => '我的第一个解析记录',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateDomainRecordRemarkResponse>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n</UpdateDomainRecordRemarkResponse>","errorExample":""}]',
      'title' => '修改解析记录的备注',
      'summary' => '根据传入参数修改解析记录的备注。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetDomainRecordStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'RecordId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析记录的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '9999985',
          ),
        ),
        3 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析记录状态。取值：

- **Enable**: 启用解析 
- **Disable**: 暂停解析',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Disable',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => '当前解析记录状态。',
                'type' => 'string',
                'example' => 'Disable',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'RecordId' => 
              array (
                'description' => '解析记录的ID。',
                'type' => 'string',
                'example' => '9999985',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Status\\": \\"Disable\\",\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"RecordId\\": \\"9999985\\"\\n}","errorExample":""},{"type":"xml","example":"<SetDomainRecordStatusResponse>\\n    <Status>Disable</Status>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n    <RecordId>9999985</RecordId>\\n</SetDomainRecordStatusResponse>","errorExample":""}]',
      'title' => '设置解析记录状态',
      'summary' => '根据传入参数设置解析记录状态。',
    ),
    'DescribeDomainRecordInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'RecordId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析记录的ID 。

此参数在添加解析时会返回，在获取域名解析列表时会返回。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '9999985',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => '解析记录状态，取值：**Enable/Disable**。',
                'type' => 'string',
                'example' => 'Enable',
              ),
              'RR' => 
              array (
                'description' => '解析类型。',
                'type' => 'string',
                'example' => '@',
              ),
              'GroupName' => 
              array (
                'description' => '域名分组名称。',
                'type' => 'string',
                'example' => 'MyGroup',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'DomainName' => 
              array (
                'description' => '域名名称。',
                'type' => 'string',
                'example' => 'dns-example.top',
              ),
              'Priority' => 
              array (
                'description' => 'MX记录的优先级。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '5',
              ),
              'PunyCode' => 
              array (
                'description' => '只针对中文域名返回punycode码。',
                'type' => 'string',
                'example' => 'xn--fsq270a.com',
              ),
              'TTL' => 
              array (
                'description' => '生存时间。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '600',
              ),
              'GroupId' => 
              array (
                'description' => '域名分组ID。',
                'type' => 'string',
                'example' => '2223',
              ),
              'Line' => 
              array (
                'description' => '解析线路。',
                'type' => 'string',
                'example' => 'default',
              ),
              'Locked' => 
              array (
                'description' => '解析记录锁定状态，取值：**true/false**。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Type' => 
              array (
                'description' => '记录类型。',
                'type' => 'string',
                'example' => 'MX',
              ),
              'DomainId' => 
              array (
                'description' => '域名ID。',
                'type' => 'string',
                'example' => '00efd71a-770e-4255-b54e-6fe5659baffe',
              ),
              'Value' => 
              array (
                'description' => '记录值。',
                'type' => 'string',
                'example' => '1.1.XX.XX',
              ),
              'RecordId' => 
              array (
                'description' => '解析记录的ID。',
                'type' => 'string',
                'example' => '9999985',
              ),
              'Remark' => 
              array (
                'description' => '您的解析记录的备注信息。

',
                'type' => 'string',
                'example' => 'test',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Status\\": \\"Enable\\",\\n  \\"RR\\": \\"@\\",\\n  \\"GroupName\\": \\"MyGroup\\",\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"DomainName\\": \\"dns-example.top\\",\\n  \\"Priority\\": 5,\\n  \\"PunyCode\\": \\"xn--fsq270a.com\\",\\n  \\"TTL\\": 600,\\n  \\"GroupId\\": \\"2223\\",\\n  \\"Line\\": \\"default\\",\\n  \\"Locked\\": true,\\n  \\"Type\\": \\"MX\\",\\n  \\"DomainId\\": \\"00efd71a-770e-4255-b54e-6fe5659baffe\\",\\n  \\"Value\\": \\"1.1.XX.XX\\",\\n  \\"RecordId\\": \\"9999985\\",\\n  \\"Remark\\": \\"test\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeDomainRecordInfoResponse>\\n    <Status>Enable</Status>\\n    <RR>@</RR>\\n    <GroupName>MyGroup</GroupName>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n    <DomainName>example.com</DomainName>\\n    <Priority>5</Priority>\\n    <PunyCode>xn--fsq270a.com</PunyCode>\\n    <TTL>600</TTL>\\n    <GroupId>2223</GroupId>\\n    <Line>default</Line>\\n    <Locked>true</Locked>\\n    <Type>MX</Type>\\n    <DomainId>00efd71a-770e-4255-b54e-6fe5659baffe</DomainId>\\n    <Value>192.0.2.254</Value>\\n    <RecordId>9999985</RecordId>\\n</DescribeDomainRecordInfoResponse>","errorExample":""}]',
      'title' => '获取解析记录的详细信息',
      'summary' => '获取解析记录的详细信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDomainRecords' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'example.com',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**500**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '500',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'KeyWord',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关键字。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'RRKeyWord',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主机记录的关键字，按照 RRKeyWord（前后模糊匹配）模式搜索，不区分大小写。',
            'type' => 'string',
            'required' => false,
            'example' => 'www',
          ),
        ),
        6 => 
        array (
          'name' => 'TypeKeyWord',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析类型的关键字，按照全匹配搜索，不区分大小写。',
            'type' => 'string',
            'required' => false,
            'example' => 'MX',
          ),
        ),
        7 => 
        array (
          'name' => 'ValueKeyWord',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '记录值的关键字，按照 ValueKeyWord（前后模糊匹配）模式搜索，不区分大小写。',
            'type' => 'string',
            'required' => false,
            'example' => 'com',
          ),
        ),
        8 => 
        array (
          'name' => 'OrderBy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序方式。按照解析添加的时间从新到旧排序。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
        9 => 
        array (
          'name' => 'Direction',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '排序方向。取值范围：DESC、ASC。默认为：DESC。',
            'type' => 'string',
            'required' => false,
            'example' => 'DESC',
          ),
        ),
        10 => 
        array (
          'name' => 'SearchMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索模式，取值：**LIKE/EXACT/ADVANCED。**
- 填入LIKE或EXACT时，请使用KeyWord参数。（传入RRKeyWord、TypeKeyWord、ValueKeyWord、Type、Line、Status参数无效）
- 填入ADVANCED时，请使用RRKeyWord、TypeKeyWord、ValueKeyWord、Type、Line、Status
- 不传值：
    - keyWord传值，搜索模式取”LIKE“值。
    - keyWord不传值，RRKeyWord和ValueKeyWord支持模糊查询，TypeKeyWord和Type、Line、Status支持精确查询。',
            'type' => 'string',
            'required' => false,
            'example' => 'LIKE',
          ),
        ),
        11 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指域名分组ID

- 如不传GroupId，则在全部域名下查询。

- 如GroupId为0，则返回空数据。

- 如GroupId为-1，则在默认分组（指未设置分组的域名）下查询。

- 如GroupId为-2，则在全部域名下查询。

- 如GroupId不符合上述条件，则按GroupId查询并返回结果。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '2223',
          ),
        ),
        12 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析记录类型，参见：

<props="china">[解析记录类型格式](https://help.aliyun.com/document_detail/29805.html)</props>
<props="intl">[解析记录类型格式](https://www.alibabacloud.com/help/zh/doc-detail/29805.htm)</props>
',
            'type' => 'string',
            'required' => false,
            'example' => 'A',
          ),
        ),
        13 => 
        array (
          'name' => 'Line',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析线路，默认为**default**。

参见：
<props="china">[解析线路枚举](https://help.aliyun.com/document_detail/29807.html)。</props>

<props="intl">[解析线路枚举](https://www.alibabacloud.com/help/zh/doc-detail/29807.htm)</props>
',
            'type' => 'string',
            'required' => false,
            'example' => 'cn_mobile_anhui',
          ),
        ),
        14 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析记录状态，取值：**Enable/Disable**。',
            'type' => 'string',
            'required' => false,
            'example' => 'Enable',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '解析记录总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'PageSize' => 
              array (
                'description' => '本次查询获取的解析数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'DomainRecords' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Record' => 
                  array (
                    'description' => '解析记录列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '当前的解析记录状态。',
                          'type' => 'string',
                          'example' => 'Enable',
                        ),
                        'Type' => 
                        array (
                          'description' => '记录类型。',
                          'type' => 'string',
                          'example' => 'MX',
                        ),
                        'Remark' => 
                        array (
                          'description' => '备注。',
                          'type' => 'string',
                          'example' => '备注',
                        ),
                        'TTL' => 
                        array (
                          'description' => '缓存时间设置。单位：秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '600',
                        ),
                        'RecordId' => 
                        array (
                          'description' => '解析记录ID。',
                          'type' => 'string',
                          'example' => '9999985',
                        ),
                        'Priority' => 
                        array (
                          'description' => 'mx记录的优先级。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '5',
                        ),
                        'RR' => 
                        array (
                          'description' => '主机记录。',
                          'type' => 'string',
                          'example' => 'www',
                        ),
                        'DomainName' => 
                        array (
                          'description' => '域名名称。',
                          'type' => 'string',
                          'example' => 'example.com',
                        ),
                        'Weight' => 
                        array (
                          'description' => '负载均衡权重。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'Value' => 
                        array (
                          'description' => '记录值。',
                          'type' => 'string',
                          'example' => 'mail1.hichina.com',
                        ),
                        'Line' => 
                        array (
                          'description' => '解析线路。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'Locked' => 
                        array (
                          'description' => '当前解析记录锁定状态。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1666501957000',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '更新时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1676872961000',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"TotalCount\\": 2,\\n  \\"PageSize\\": 20,\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"DomainRecords\\": {\\n    \\"Record\\": [\\n      {\\n        \\"Status\\": \\"Enable\\",\\n        \\"Type\\": \\"MX\\",\\n        \\"Remark\\": \\"备注\\",\\n        \\"TTL\\": 600,\\n        \\"RecordId\\": \\"9999985\\",\\n        \\"Priority\\": 5,\\n        \\"RR\\": \\"www\\",\\n        \\"DomainName\\": \\"example.com\\",\\n        \\"Weight\\": 2,\\n        \\"Value\\": \\"mail1.hichina.com\\",\\n        \\"Line\\": \\"default\\",\\n        \\"Locked\\": false,\\n        \\"CreateTimestamp\\": 1666501957000,\\n        \\"UpdateTimestamp\\": 1676872961000\\n      }\\n    ]\\n  },\\n  \\"PageNumber\\": 1\\n}","type":"json"}]',
      'title' => '获取解析记录列表',
      'summary' => '根据传入参数获取指定主域名的所有解析记录列表。',
      'description' => '- 查询可以指定域名（DomainName）、页码（PageNumber）和每页的数量（PageSize）来获取域名的解析列表。
- 查询可以指定解析记录的主机记录关键字（RRKeyWord）、解析类型关键字（TypeKeyWord）或者记录值的关键字（ValueKeyWord）来查询含有该关键字的解析列表。
- 解析列表的默认排序方式是按照解析添加的时间从新到旧排序的。
- 可以指定域名分组的ID（GroupId），全部域名代表所有域名、默认分组代表未设置分组的域名。',
    ),
    'DescribeRecordLogs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'example.com',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'KeyWord',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关键字，按照“%KeyWord%”模式搜索，不区分大小写。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        6 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间，格式：**YYYY-MM-DD**。',
            'type' => 'string',
            'required' => false,
            'example' => '2015-12-12',
          ),
        ),
        7 => 
        array (
          'name' => 'endDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的结束时间，格式：**YYYY-MM-DD**。',
            'type' => 'string',
            'required' => false,
            'example' => '2015-12-12',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '日志列表总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'PageSize' => 
              array (
                'description' => '本次查询获取的日志数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RecordLogs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RecordLog' => 
                  array (
                    'description' => '域名操作日志列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Action' => 
                        array (
                          'description' => '操作行为',
                          'type' => 'string',
                          'example' => '暂停解析记录',
                        ),
                        'ActionTimestamp' => 
                        array (
                          'description' => '操作时间戳',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '134514540000',
                        ),
                        'ClientIp' => 
                        array (
                          'description' => '操作者IP',
                          'type' => 'string',
                          'example' => '192.0.2.0',
                        ),
                        'Message' => 
                        array (
                          'description' => '操作消息',
                          'type' => 'string',
                          'example' => 'MX记录 mail 默认 xxxx.top. ( TTL: 600)',
                        ),
                        'ActionTime' => 
                        array (
                          'description' => '操作时间',
                          'type' => 'string',
                          'example' => '2015-12-12T09:23Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 2,\\n  \\"PageSize\\": 2,\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"PageNumber\\": 1,\\n  \\"RecordLogs\\": {\\n    \\"RecordLog\\": [\\n      {\\n        \\"Action\\": \\"暂停解析记录\\",\\n        \\"ActionTimestamp\\": 134514540000,\\n        \\"ClientIp\\": \\"192.0.2.0\\",\\n        \\"Message\\": \\"MX记录 mail 默认 xxxx.top. ( TTL: 600)\\",\\n        \\"ActionTime\\": \\"2015-12-12T09:23Z\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeRecordLogsResponse>\\n    <TotalCount>2</TotalCount>\\n    <PageSize>2</PageSize>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <RecordLogs>\\n        <Action>暂停解析记录</Action>\\n        <ActionTimestamp>134514540000</ActionTimestamp>\\n        <ClientIp>192.0.2.0</ClientIp>\\n        <Message>MX记录 mail 默认 xxxx.top. ( TTL: 600)</Message>\\n        <ActionTime>2015-12-12T09:23Z</ActionTime>\\n    </RecordLogs>\\n</DescribeRecordLogsResponse>","errorExample":""}]',
      'title' => '获取解析记录操作日志',
      'summary' => '根据传入参数获取域名的解析操作日志。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSubDomainRecords' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'SubDomain',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '`例如参数SubDomain为"a.www.example.com"为例：`

`如果参数DomainName为空，则查询域名为example.com、主机名为”a.www“的解析记录。`
`如果参数DomainName为"www.example.com"，则查询域名为"www.example.com"、主机名为"a"的解析记录。`
`如果参数DomainName为"a.www.example.com"，则查询域名为"a.www.example.com"、主机名为"@"的解析记录。`',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'a.www.example.com',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '500',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析记录类型。若不传值，则返回子域名对应的全部解析记录类型。

解析类型包括(不区分大小写)：**A、MX、CNAME、TXT、REDIRECT_URL、FORWORD_URL、NS、AAAA、SRV**。',
            'type' => 'string',
            'required' => false,
            'example' => 'MX',
          ),
        ),
        6 => 
        array (
          'name' => 'Line',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析线路。',
            'type' => 'string',
            'required' => false,
            'example' => 'default',
          ),
        ),
        7 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '解析记录总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'PageSize' => 
              array (
                'description' => '本次查询获取的解析数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'DomainRecords' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Record' => 
                  array (
                    'description' => '解析记录列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '解析记录状态。',
                          'type' => 'string',
                          'example' => 'Enable',
                        ),
                        'Type' => 
                        array (
                          'description' => '记录类型。',
                          'type' => 'string',
                          'example' => 'CNAME',
                        ),
                        'Weight' => 
                        array (
                          'description' => '解析记录的权重。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '10',
                        ),
                        'Value' => 
                        array (
                          'description' => '记录值。',
                          'type' => 'string',
                          'example' => 'example.net',
                        ),
                        'TTL' => 
                        array (
                          'description' => '生存时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '600',
                        ),
                        'Line' => 
                        array (
                          'description' => '解析线路。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'RecordId' => 
                        array (
                          'description' => '解析记录ID。',
                          'type' => 'string',
                          'example' => '9999985',
                        ),
                        'Priority' => 
                        array (
                          'description' => 'MX记录的优先级。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'RR' => 
                        array (
                          'description' => '主机记录。',
                          'type' => 'string',
                          'example' => 'www',
                        ),
                        'DomainName' => 
                        array (
                          'description' => '域名名称。',
                          'type' => 'string',
                          'example' => 'example.com',
                        ),
                        'Locked' => 
                        array (
                          'description' => '解析记录锁定状态。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Remark' => 
                        array (
                          'description' => '备注信息。',
                          'type' => 'string',
                          'required' => false,
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 2,\\n  \\"PageSize\\": 2,\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"DomainRecords\\": {\\n    \\"Record\\": [\\n      {\\n        \\"Status\\": \\"Enable\\",\\n        \\"Type\\": \\"CNAME\\",\\n        \\"Weight\\": 10,\\n        \\"Value\\": \\"example.net\\",\\n        \\"TTL\\": 600,\\n        \\"Line\\": \\"default\\",\\n        \\"RecordId\\": \\"9999985\\",\\n        \\"Priority\\": 2,\\n        \\"RR\\": \\"www\\",\\n        \\"DomainName\\": \\"example.com\\",\\n        \\"Locked\\": false,\\n        \\"Remark\\": \\"test\\"\\n      }\\n    ]\\n  },\\n  \\"PageNumber\\": 1\\n}","errorExample":""},{"type":"xml","example":"<DescribeSubDomainRecordsResponse>\\n    <TotalCount>2</TotalCount>\\n    <PageSize>2</PageSize>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n    <DomainRecords>\\n        <Status>Enable</Status>\\n        <Type>CNAME</Type>\\n        <Weight>10</Weight>\\n        <Value>example.net</Value>\\n        <TTL>600</TTL>\\n        <Line>default</Line>\\n        <RecordId>9999985</RecordId>\\n        <Priority>2</Priority>\\n        <RR>www</RR>\\n        <DomainName>example.com</DomainName>\\n        <Locked>false</Locked>\\n    </DomainRecords>\\n    <PageNumber>1</PageNumber>\\n</DescribeSubDomainRecordsResponse>","errorExample":""}]',
      'title' => '获取子域名解析记录列表',
      'summary' => '根据传入参数获取某个固定子域名的所有解析记录列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetTxtRecordForVerify' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
        1 => 
        array (
          'BearerToken' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'txt验证的功能。取值：

- ADD_SUB_DOMAIN
- RETRIEVAL',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ADD_SUB_DOMAIN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RR' => 
              array (
                'description' => '主机记录。',
                'type' => 'string',
                'example' => 'aliyunRetrieval',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '9CC0D642-49D4-48DE-A1A5-9F218652E4A7',
              ),
              'DomainName' => 
              array (
                'description' => '域名名称。

> 若传入为空，则不返回该字段。',
                'type' => 'string',
                'example' => 'example.com',
              ),
              'Value' => 
              array (
                'description' => '记录值。

> 有效期为三天。',
                'type' => 'string',
                'example' => 'c99419e6997f41daaa3e*****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RR\\": \\"aliyunRetrieval\\",\\n  \\"RequestId\\": \\"9CC0D642-49D4-48DE-A1A5-9F218652E4A7\\",\\n  \\"DomainName\\": \\"example.com\\",\\n  \\"Value\\": \\"c99419e6997f41daaa3e*****\\"\\n}","errorExample":""},{"type":"xml","example":"<GetTxtRecordForVerifyResponse>\\r\\n    <RequestId>9CC0D642-49D4-48DE-A1A5-9F218652E4A7</RequestId>\\r\\n    <DomainName>example.com</DomainName>\\r\\n    <RR>aliyunRetrieval</RR>\\r\\n    <Value>c99419e6997f41daaa3eS*****</Value>\\r\\n</GetTxtRecordForVerifyResponse>","errorExample":""}]',
      'title' => '生成txt记录',
      'summary' => '生成txt记录。用于域名、子域名找回、添加子域名验证、批量找回等功能。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddCustomLine' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'example.com',
          ),
        ),
        2 => 
        array (
          'name' => 'LineName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义线路名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '北京线路',
          ),
        ),
        3 => 
        array (
          'name' => 'IpSegment',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'IP段列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'EndIp' => 
                array (
                  'description' => 'Ip段的结束IP。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.0.2.254',
                ),
                'StartIp' => 
                array (
                  'description' => 'IP段的开始IP。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.0.2.0',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'LineId' => 
              array (
                'description' => '自定义线路唯一ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '597',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-13E5A5044195',
              ),
              'LineCode' => 
              array (
                'description' => '自定义线路Code。',
                'type' => 'string',
                'example' => 'hra0yc-597',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"LineId\\": 597,\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-13E5A5044195\\",\\n  \\"LineCode\\": \\"hra0yc-597\\"\\n}","errorExample":""},{"type":"xml","example":"<AddCustomLineResponse>\\n    <LineId>597</LineId>\\n    <RequestId>B57C121B-A45F-44D8-A9B2-13E5A5044195</RequestId>\\n    <LineCode>hra0yc-597</LineCode>\\n</AddCustomLineResponse>","errorExample":""}]',
      'title' => '添加自定义线路',
      'summary' => '添加自定义线路。',
      'description' => '每个IP段的IP地址必须满足： EndIp >=StartIp。<br>
域名下所有自定义线路中的所有IP段，IP范围都不能交叉重叠。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteCustomLines' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'LineIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义线路唯一ID列表，用 “,” 号隔开唯一ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1234,1235',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-13E5A5044195',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-13E5A5044195\\"\\n}","errorExample":""},{"type":"xml","example":"</DeleteCustomLinesResponse>\\n<requestId>2BC218C5-F8A7-4ED8-BC04-A962CD5493B2</requestId>\\n</DeleteCustomLinesResponse>","errorExample":""}]',
      'title' => '批量删除自定义线路',
      'summary' => '批量删除自定义线路。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateCustomLine' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'LineName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义线路名称，长度限制为1-20个字符，允许包含中文、字母、数字、\'-\'、\'_\'这些字符。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '望京线路',
          ),
        ),
        2 => 
        array (
          'name' => 'LineId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义线路唯一ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1234',
          ),
        ),
        3 => 
        array (
          'name' => 'IpSegment',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => 'IP段列表。IP与IP之间用中横线“-”间隔； 每行一个IP段，最少1行最多50行；只有一个IP填写IP1-IP1，不同IP段不能交叉。',
            'type' => 'array',
            'items' => 
            array (
              'description' => 'ip段列表。',
              'type' => 'object',
              'properties' => 
              array (
                'EndIp' => 
                array (
                  'description' => 'IP段的结束IP。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '2.2.XX.XX',
                ),
                'StartIp' => 
                array (
                  'description' => 'IP段的开始IP。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '1.1.XX.XX',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 500,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-13E5A5044195',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-13E5A5044195\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateCustomLineResponse>\\n    <RequestId>B57C121B-A45F-44D8-A9B2-13E5A5044195</RequestId>\\n</UpdateCustomLineResponse>","errorExample":""}]',
      'title' => '编辑自定义线路',
      'summary' => '编辑自定义线路。',
      'description' => '每个IP段的IP地址必须满足： EndIp >=StartIp。<br>
域名下所有自定义线路中的所有IP段，IP范围都不能交叉重叠。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCustomLine' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LineId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义线路唯一ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '597',
          ),
        ),
        1 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-13E5A5044195',
              ),
              'IpSegmentList' => 
              array (
                'description' => 'IP段列表。IP与IP之间用中横线“-”间隔； 每行一个IP段，最少1行最多50行；只有一个IP填写IP1-IP1，不同IP段不能交叉。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'IP段列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'EndIp' => 
                    array (
                      'description' => 'IP段的结束IP。',
                      'type' => 'string',
                      'example' => '1.1.XX.XX',
                    ),
                    'StartIp' => 
                    array (
                      'description' => 'IP段的开始IP。',
                      'type' => 'string',
                      'example' => '1.2.XX.XX',
                    ),
                  ),
                ),
              ),
              'DomainName' => 
              array (
                'description' => '域名名称。',
                'type' => 'string',
                'example' => 'dns-example.top',
              ),
              'Id' => 
              array (
                'description' => '自定义线路名称ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '597',
              ),
              'Code' => 
              array (
                'description' => '自定义线路Code。',
                'type' => 'string',
                'example' => 'hra0yc-597',
              ),
              'Name' => 
              array (
                'description' => '自定义线路名称。',
                'type' => 'string',
                'example' => '测试线路',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-13E5A5044195\\",\\n  \\"IpSegmentList\\": [\\n    {\\n      \\"EndIp\\": \\"1.1.XX.XX\\",\\n      \\"StartIp\\": \\"1.2.XX.XX\\"\\n    }\\n  ],\\n  \\"DomainName\\": \\"dns-example.top\\",\\n  \\"Id\\": 597,\\n  \\"Code\\": \\"hra0yc-597\\",\\n  \\"Name\\": \\"测试线路\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeCustomLineResponse>\\n<domainName>customline.taobao</domainName>\\n<id>598</id>\\n<code>hra0yc-597</code>\\n<ipSegmentList>\\n    <endIp>12.2.2.3</endIp>\\n    <startIp>11.1.1.2</startIp>\\n</ipSegmentList>\\n<name>secLine</name>\\n<requestId>B57C121B-A45F-44D8-A9B2-13E5A5044195</requestId>\\n</DescribeCustomLineResponse>\\n","errorExample":""}]',
      'title' => '查询自定义线路',
      'summary' => '查询自定义线路。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCustomLines' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页个数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'example.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-13E5A5044195',
              ),
              'PageNumber' => 
              array (
                'description' => '页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPages' => 
              array (
                'description' => '页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'CustomLines' => 
              array (
                'description' => '自定义线路列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Code' => 
                    array (
                      'description' => '自定义线路Code。',
                      'type' => 'string',
                      'example' => 'hra0yc-597',
                    ),
                    'Name' => 
                    array (
                      'description' => '线路名称。',
                      'type' => 'string',
                      'example' => 'hra0yd-597',
                    ),
                    'Id' => 
                    array (
                      'description' => '自定义线路唯一ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '597',
                    ),
                  ),
                ),
              ),
              'TotalItems' => 
              array (
                'description' => '自定义线路总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-13E5A5044195\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalPages\\": 1,\\n  \\"CustomLines\\": [\\n    {\\n      \\"Code\\": \\"hra0yc-597\\",\\n      \\"Name\\": \\"hra0yd-597\\",\\n      \\"Id\\": 597\\n    }\\n  ],\\n  \\"TotalItems\\": 1\\n}","errorExample":""},{"type":"xml","example":"<DescribeCustomLinesResponse>\\n<customLines>\\n    <code>hra0yd-598</code>\\n    <id>598</id>\\n    <name>secLine</name>\\n</customLines>\\n<pageNumber>1</pageNumber>\\n<pageSize>2</pageSize>\\n<requestId>39AC4D3A-3B1E-4DC7-ACDB-B1A1E6A9C59C</requestId>\\n<totalItems>1</totalItems>\\n<totalPages>1</totalPages>\\n</DescribeCustomLinesResponse>","errorExample":""}]',
      'title' => '查询自定义线路列表',
      'summary' => '查询自定义线路列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSupportLines' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户端IP。',
            'type' => 'string',
            'required' => false,
            'example' => '1.1.*.*',
          ),
        ),
        2 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RecordLines' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RecordLine' => 
                  array (
                    'description' => '云解析线路列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'FatherCode' => 
                        array (
                          'description' => '父线路Code，暂时不支持返回。',
                          'type' => 'string',
                          'example' => 'unicom',
                        ),
                        'LineDisplayName' => 
                        array (
                          'description' => '线路展示名称。',
                          'type' => 'string',
                          'example' => '中国联通_海南',
                        ),
                        'LineCode' => 
                        array (
                          'description' => '线路Code。',
                          'type' => 'string',
                          'example' => 'cn_unicom_hainan',
                        ),
                        'LineName' => 
                        array (
                          'description' => '子线路名称。',
                          'type' => 'string',
                          'example' => '海南',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CFDA0830-7D6E-4C13-8632-B57C7EDCF079',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RecordLines\\": {\\n    \\"RecordLine\\": [\\n      {\\n        \\"FatherCode\\": \\"unicom\\",\\n        \\"LineDisplayName\\": \\"中国联通_海南\\",\\n        \\"LineCode\\": \\"cn_unicom_hainan\\",\\n        \\"LineName\\": \\"海南\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"CFDA0830-7D6E-4C13-8632-B57C7EDCF079\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeSupportLinesResponse>\\n    <RecordLines>\\n        <FatherCode>unicom</FatherCode>\\n        <LineDisplayName>联通_山西</LineDisplayName>\\n        <LineCode>cn_unicom_shanxi</LineCode>\\n        <LineName>山西</LineName>\\n    </RecordLines>\\n    <RequestId>CFDA0830-7D6E-4C13-8632-B57C7EDCF079</RequestId>\\n</DescribeSupportLinesResponse>","errorExample":""}]',
      'title' => '获取解析线路列表',
      'summary' => '查询云解析支持的所有线路列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetDNSSLBStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'SubDomain',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要权重配置的子域名，其中example.com为错误参数，请使用@.example.com',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'www.example.com',
          ),
        ),
        3 => 
        array (
          'name' => 'Open',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启权重配置。取值：

- **true**（默认）：开启
- **false**：关闭',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
        5 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '记录类型，取值范围：A、AAAA，默认为A。',
            'type' => 'string',
            'required' => false,
            'example' => 'A',
          ),
        ),
        6 => 
        array (
          'name' => 'Line',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析线路：例如默认、电信、移动等',
            'type' => 'string',
            'required' => false,
            'example' => 'telecom',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'RecordCount' => 
              array (
                'description' => '符合规则的A记录数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '8',
              ),
              'Open' => 
              array (
                'description' => '权重配置的最新状态。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"RecordCount\\": 8,\\n  \\"Open\\": true\\n}","errorExample":""},{"type":"xml","example":"<SetDNSSLBStatusResponse>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n    <RecordCount>8</RecordCount>\\n    <Open>true</Open>\\n</SetDNSSLBStatusResponse>","errorExample":""}]',
      'title' => '开启关闭权重配置',
      'summary' => '根据传入参数开启关闭权重配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDNSSLBWeight' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'UserClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户IP。',
            'type' => 'string',
            'required' => false,
            'example' => '192.0.2.0',
          ),
        ),
        2 => 
        array (
          'name' => 'RecordId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析记录ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '9999985',
          ),
        ),
        3 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要修改的权重值`[1-100]`。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'RecordId' => 
              array (
                'description' => '解析记录ID。',
                'type' => 'string',
                'example' => '9999985',
              ),
              'Weight' => 
              array (
                'description' => '修改后的权重值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"RecordId\\": \\"9999985\\",\\n  \\"Weight\\": 2\\n}","errorExample":""},{"type":"xml","example":"<UpdateDNSSLBWeightResponse>\\n    <RequestId>536E9CAD-DB30-4647-AC87-AA5CC38C5382</RequestId>\\n    <RecordId>9999985</RecordId>\\n    <Weight>2</Weight>\\n</UpdateDNSSLBWeightResponse>","errorExample":""}]',
      'title' => '修改权重',
      'summary' => '根据传入参数修改解析记录的权重。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeBatchResultCount' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。

如果TaskId不为空，返回TaskId对应任务的执行结果；如果TaskId为空，返回最后一次任务的执行结果。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '123456',
          ),
        ),
        2 => 
        array (
          'name' => 'BatchType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '批量操作类型，取值：

- **DOMAIN_ADD**：批量添加域名
- **DOMAIN_DEL**：批量删除域名
- **RR_ADD**：批量添加解析
- **RR_DEL**：批量删除解析',
            'type' => 'string',
            'required' => false,
            'example' => 'DOMAIN_ADD',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => '任务状态，取值：

- **-1**：无已提交的导入域名或解析任务
- **0**：处理中
- **1**：已完成
- **2**：已失败',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'TotalCount' => 
              array (
                'description' => '批量处理的记录总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'TaskId' => 
              array (
                'description' => '最后一次任务ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '123456',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '75446CC1-FC9A-4595-8D96-089D73D7A63D',
              ),
              'FailedCount' => 
              array (
                'description' => '处理失败的域名或解析记录总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'SuccessCount' => 
              array (
                'description' => '处理成功的域名或解析记录总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'BatchType' => 
              array (
                'description' => '批量操作类型。',
                'type' => 'string',
                'example' => 'DOMAIN_ADD',
              ),
              'Reason' => 
              array (
                'description' => '处理失败的原因。',
                'type' => 'string',
                'example' => 'failed_reason',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Status\\": 0,\\n  \\"TotalCount\\": 4,\\n  \\"TaskId\\": 123456,\\n  \\"RequestId\\": \\"75446CC1-FC9A-4595-8D96-089D73D7A63D\\",\\n  \\"FailedCount\\": 2,\\n  \\"SuccessCount\\": 2,\\n  \\"BatchType\\": \\"DOMAIN_ADD\\",\\n  \\"Reason\\": \\"failed_reason\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeBatchResultCountResponse>\\n    <Status>0</Status>\\n    <TotalCount>4</TotalCount>\\n    <TaskId>123456</TaskId>\\n    <RequestId>75446CC1-FC9A-4595-8D96-089D73D7A63D</RequestId>\\n    <FailedCount>2</FailedCount>\\n    <SuccessCount>2</SuccessCount>\\n    <BatchType>DOMAIN_ADD</BatchType>\\n    <Reason>failed_reason</Reason>\\n</DescribeBatchResultCountResponse>","errorExample":""}]',
      'title' => '查询一次批量操作任务的执行结果',
      'summary' => '查询一次批量操作任务的执行结果。',
    ),
    'DescribeBatchResultDetail' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页设置的大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '83618818',
          ),
        ),
        4 => 
        array (
          'name' => 'BatchType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '批量操作类型。取值：

- **DOMAIN_ADD**：批量添加域名
- **DOMAIN_DEL**：批量删除域名
- **RR_ADD**：批量添加解析
- **RR_DEL**：批量删除解析',
            'type' => 'string',
            'required' => false,
            'example' => 'DOMAIN_ADD',
          ),
        ),
        5 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '获取指定状态结果详情，不传入则获取所有。',
            'type' => 'string',
            'required' => false,
            'example' => 'SUCCESS',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '记录总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'BatchResultDetails' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'BatchResultDetail' => 
                  array (
                    'description' => '批量处理结果的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '执行结果。**true**代表成功，**false**代表失败。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Type' => 
                        array (
                          'description' => '域名解析类型。',
                          'type' => 'string',
                          'example' => 'A',
                        ),
                        'Domain' => 
                        array (
                          'description' => '域名。',
                          'type' => 'string',
                          'example' => 'example.com',
                        ),
                        'Remark' => 
                        array (
                          'description' => '解析记录备注。',
                          'type' => 'string',
                          'example' => 'remark',
                        ),
                        'RecordId' => 
                        array (
                          'description' => '解析记录的ID。',
                          'type' => 'string',
                          'example' => '123456789',
                        ),
                        'Rr' => 
                        array (
                          'description' => '主机记录。',
                          'type' => 'string',
                          'example' => 'www',
                        ),
                        'Priority' => 
                        array (
                          'description' => 'MX优先级。',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'RrStatus' => 
                        array (
                          'description' => '解析记录状态。',
                          'type' => 'string',
                          'example' => '暂停',
                        ),
                        'OperateDateStr' => 
                        array (
                          'description' => '处理时间。',
                          'type' => 'string',
                          'example' => '2019-08-22 18:02:58',
                        ),
                        'NewValue' => 
                        array (
                          'description' => '新的记录值。',
                          'type' => 'string',
                          'example' => '192.0.2.254',
                        ),
                        'Value' => 
                        array (
                          'description' => '记录值。',
                          'type' => 'string',
                          'example' => '192.0.2.0',
                        ),
                        'Ttl' => 
                        array (
                          'description' => '生效时间。',
                          'type' => 'string',
                          'example' => '600',
                        ),
                        'BatchType' => 
                        array (
                          'description' => '批量操作类型。',
                          'type' => 'string',
                          'example' => 'DOMAIN_ADD',
                        ),
                        'Line' => 
                        array (
                          'description' => '线路代码。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'NewRr' => 
                        array (
                          'description' => '新的主机记录。',
                          'type' => 'string',
                          'example' => 'demo-batch-7',
                        ),
                        'Reason' => 
                        array (
                          'description' => '执行失败的原因。',
                          'type' => 'string',
                          'example' => '内部异常',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageSize' => 
              array (
                'description' => '分页大小。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '75446CC1-FC9A-4595-8D96-089D73D7A63D',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"BatchResultDetails\\": {\\n    \\"BatchResultDetail\\": [\\n      {\\n        \\"Status\\": true,\\n        \\"Type\\": \\"A\\",\\n        \\"Domain\\": \\"example.com\\",\\n        \\"Remark\\": \\"remark\\",\\n        \\"RecordId\\": \\"123456789\\",\\n        \\"Rr\\": \\"www\\",\\n        \\"Priority\\": \\"10\\",\\n        \\"RrStatus\\": \\"暂停\\",\\n        \\"OperateDateStr\\": \\"2019-08-22 18:02:58\\",\\n        \\"NewValue\\": \\"192.0.2.254\\",\\n        \\"Value\\": \\"192.0.2.0\\",\\n        \\"Ttl\\": \\"600\\",\\n        \\"BatchType\\": \\"DOMAIN_ADD\\",\\n        \\"Line\\": \\"default\\",\\n        \\"NewRr\\": \\"demo-batch-7\\",\\n        \\"Reason\\": \\"内部异常\\"\\n      }\\n    ]\\n  },\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"75446CC1-FC9A-4595-8D96-089D73D7A63D\\",\\n  \\"PageNumber\\": 1\\n}","errorExample":""},{"type":"xml","example":"<DescribeBatchResultDetailResponse>\\n    <TotalCount>1</TotalCount>\\n    <BatchResultDetails>\\n        <Status>true</Status>\\n        <Type>A</Type>\\n        <Domain>example.com</Domain>\\n        <Remark>remark</Remark>\\n        <RecordId>123456789</RecordId>\\n        <Rr>www</Rr>\\n        <Priority>10</Priority>\\n        <RrStatus>暂停</RrStatus>\\n        <OperateDateStr>2019-08-22 18:02:58</OperateDateStr>\\n        <NewValue>192.0.2.254</NewValue>\\n        <Value>192.0.2.0</Value>\\n        <Ttl>600</Ttl>\\n        <BatchType>DOMAIN_ADD</BatchType>\\n        <Line>default</Line>\\n        <NewRr>demo-batch-7</NewRr>\\n        <Reason>内部异常</Reason>\\n    </BatchResultDetails>\\n    <PageSize>10</PageSize>\\n    <RequestId>75446CC1-FC9A-4595-8D96-089D73D7A63D</RequestId>\\n    <PageNumber>1</PageNumber>\\n</DescribeBatchResultDetailResponse>","errorExample":""}]',
      'title' => '查询批量处理结果的详细信息',
      'summary' => '查询批量处理结果的详细信息。',
      'description' => '**前提条件：请在批量任务执行完成后，再调用此接口。**',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeTags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：DOMAIN。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DOMAIN',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页数，默认值：200。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '200',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '总计数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '5',
              ),
              'PageSize' => 
              array (
                'description' => '分页数，默认值：200。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '200',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '89184F33-48A1-4401-9C0F-40E45DB091AB',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'Tags' => 
              array (
                'description' => '标签列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Key' => 
                    array (
                      'description' => '标签键。',
                      'type' => 'string',
                      'example' => 'abc',
                    ),
                    'Values' => 
                    array (
                      'description' => '标签值列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '标签值。',
                        'type' => 'string',
                        'example' => '11111',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 5,\\n  \\"PageSize\\": 200,\\n  \\"RequestId\\": \\"89184F33-48A1-4401-9C0F-40E45DB091AB\\",\\n  \\"PageNumber\\": 1,\\n  \\"Tags\\": [\\n    {\\n      \\"Key\\": \\"abc\\",\\n      \\"Values\\": [\\n        \\"11111\\"\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<TotalCount>6</TotalCount>\\n<RequestId>89184F33-48A1-4401-9C0F-40E45DB091AB</RequestId>\\n<PageSize>1</PageSize>\\n<PageNumber>1</PageNumber>\\n<Tags>\\n    <Values>1</Values>\\n    <Key>a</Key>\\n</Tags>\\n<Tags>\\n    <Values>123</Values>\\n    <Key>123</Key>\\n</Tags>\\n<Tags>\\n    <Values>001</Values>\\n    <Key>abc</Key>\\n</Tags>\\n<Tags>\\n    <Values>1111</Values>\\n    <Key>1111</Key>\\n</Tags>\\n<Tags>\\n    <Values>abcd</Values>\\n    <Key>abcd</Key>\\n</Tags>\\n<Tags>\\n    <Key>testtag</Key>\\n</Tags>","errorExample":""}]',
      'title' => '查询已有标签列表',
      'summary' => '查询已有标签。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DOMAIN',
          ),
        ),
        2 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一个查询开始Token。',
            'type' => 'string',
            'required' => false,
            'example' => '4698691',
          ),
        ),
        3 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签键值对数组。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'abcd',
                ),
                'Value' => 
                array (
                  'description' => '标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'abcd',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源id。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '域名，当Tag数组传空值时，ResourceId为必传。',
              'type' => 'string',
              'required' => false,
              'example' => 'dns-example.top',
            ),
            'required' => false,
            'maxItems' => 51,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '下一个查询开始token，nexttoken为空说明没有下一个。',
                'type' => 'string',
                'example' => '4698691',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '61092C8D-6AEB-4310-B74D-C632F89BF4FB',
              ),
              'TagResources' => 
              array (
                'description' => '由资源及其标签组成的集合，包含了资源ID、资源类型和标签键值等信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ResourceType' => 
                    array (
                      'description' => '资源类型。取值：DOMAIN。',
                      'type' => 'string',
                      'example' => 'DOMAIN',
                    ),
                    'TagValue' => 
                    array (
                      'description' => '标签值。',
                      'type' => 'string',
                      'example' => 'abcd',
                    ),
                    'ResourceId' => 
                    array (
                      'description' => '资源ID。',
                      'type' => 'string',
                      'example' => 'dns-example.com',
                    ),
                    'TagKey' => 
                    array (
                      'description' => '标签键。',
                      'type' => 'string',
                      'example' => 'abcd',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"NextToken\\": \\"4698691\\",\\n  \\"RequestId\\": \\"61092C8D-6AEB-4310-B74D-C632F89BF4FB\\",\\n  \\"TagResources\\": [\\n    {\\n      \\"ResourceType\\": \\"DOMAIN\\",\\n      \\"TagValue\\": \\"abcd\\",\\n      \\"ResourceId\\": \\"dns-example.com\\",\\n      \\"TagKey\\": \\"abcd\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '标签查询资源',
      'summary' => '按照标签查询资源。',
      'description' => '- 请求中至少指定参数ResourceId.N或Tag.N（Tag.N.Key与Tag.N.Value），以确定检索对象。
- Tag.N是资源的标签，由一个键值对组成。仅指定Tag.N.Key时，则返回该标签键关联的所有标签值。仅指定Tag.N.Value会报错。
- 如果您同时指定Tag.N和ResourceId.N筛选标签，则ResourceId.N必须满足所有输入的标签键值对。
- 如果您同时指定多个标签键值对，返回结果为同时包含被指定的多个键值对的资源。',
    ),
    'TagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DOMAIN',
          ),
        ),
        2 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签键值对数组。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。不能以acs:或aliyun，开头，长度不能超过20字节。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'abcd',
                ),
                'Value' => 
                array (
                  'description' => '标签值。长度不能超过20字节。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'abcd',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 21,
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源id。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '域名，当Tag数组传空值时，ResourceId为必传。',
              'type' => 'string',
              'required' => false,
              'example' => 'dns-example.top
',
            ),
            'required' => true,
            'example' => 'dns-example.com',
            'maxItems' => 51,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '635B0CCD-15A7-48C9-B4D6-628FF57FF4B8',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"635B0CCD-15A7-48C9-B4D6-628FF57FF4B8\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>635B0CCD-15A7-48C9-B4D6-628FF57FF4B8</RequestId>","errorExample":""}]',
      'title' => '添加修改资源标签',
      'summary' => '通过进行添加、修改资源的标签。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UntagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DOMAIN',
          ),
        ),
        2 => 
        array (
          'name' => 'All',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否全部删除，默认是false。只针对tagkey数组为空时有效。取值范围：-true-false',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源id。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '域名，当Tag数组传空值时，ResourceId为必传。',
              'type' => 'string',
              'required' => false,
              'example' => '"dns-example.top"',
            ),
            'required' => true,
            'maxItems' => 51,
          ),
        ),
        4 => 
        array (
          'name' => 'TagKey',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签数组。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签键。',
              'type' => 'string',
              'required' => false,
              'example' => 'abcd',
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求标识。',
                'type' => 'string',
                'example' => 'F152A869-DF77-4DF1-9A00-4E06978FE6A1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"F152A869-DF77-4DF1-9A00-4E06978FE6A1\\"\\n}","type":"json"}]',
      'title' => '删除资源标签',
      'summary' => '进行删除资源的标签。',
    ),
    'MoveDomainResourceGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。
',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名，当Tag数组传空值时，ResourceId为必传。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dns-example.top',
          ),
        ),
        2 => 
        array (
          'name' => 'NewResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新资源组ID。

您可以通过[资源管理控制台](https://resourcemanager.console.aliyun.com/resource-groups?)查看资源组ID，或者调用ListResourceGroups接口获取。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rg-aekzzk7hx3glaoq',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => 'C6F1D541-E7A6-447A-A2B5-9F7A20B2A8FB',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C6F1D541-E7A6-447A-A2B5-9F7A20B2A8FB\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>C6F1D541-E7A6-447A-A2B5-9F7A20B2A8FB</RequestId>","errorExample":""}]',
      'title' => '更换域名资源组',
      'summary' => '更换资源组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetGtmAccessMode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hra0hx',
          ),
        ),
        2 => 
        array (
          'name' => 'AccessMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标访问策略。取值：
- **AUTO**： 自动切换
- **DEFAULT**：默认地址池
- **FAILOVER**： failover地址池',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'AUTO',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF55925',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF55925\\"\\n}","errorExample":""},{"type":"xml","example":"<SetGtmAccessModeResponse>\\r\\n<RequestId>29D0F8F8-5499-4F6C-9FDC-1EE13BF55925</RequestId>\\r\\n</SetGtmAccessModeResponse>","errorExample":""}]',
      'title' => '修改生效地址池切换策略（旧版）',
      'summary' => '根据传入参数修改生效地址池切换策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDnsGtmInstanceGlobalConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'GTM实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例名称：首次更新必填，再次更新则非必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-1',
          ),
        ),
        3 => 
        array (
          'name' => 'Ttl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局TTL。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '9999999',
            'minimum' => '1',
            'example' => '60',
          ),
        ),
        4 => 
        array (
          'name' => 'PublicCnameMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '公网域名接入方式：

- SYSTEM_ASSIGN:系统分配（此选项功能关闭）
- CUSTOM:自定义',
            'type' => 'string',
            'required' => false,
            'example' => 'CUSTOM',
          ),
        ),
        5 => 
        array (
          'name' => 'PublicUserDomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务域名（公网）。',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
        6 => 
        array (
          'name' => 'PublicZoneName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'CNAME接入域名（公网）：主域名，且当为自定义接入时为必填。

> 此处应填入主域名，不包含PublicRr参数内容
',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-003.com',
          ),
        ),
        7 => 
        array (
          'name' => 'AlertGroup',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警组(List<String>的JSON格式)。

',
            'type' => 'string',
            'required' => false,
            'example' => '["test1","test2"]',
          ),
        ),
        8 => 
        array (
          'name' => 'CnameType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'CNAME接入域名类型：

- PUBLIC: 公网型',
            'type' => 'string',
            'required' => false,
            'example' => 'PUBLIC',
          ),
        ),
        9 => 
        array (
          'name' => 'AlertConfig',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '报警配置列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'SmsNotice' => 
                array (
                  'description' => '是否配置短信通知：

- true：已配置
- false｜null : 未配置',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
                'NoticeType' => 
                array (
                  'description' => '报警事件类型：

- ADDR_ALERT：地址不可用
- ADDR_RESUME：地址恢复可用
- ADDR_POOL_GROUP_UNAVAILABLE：地址池集合不可用
- ADDR_POOL_GROUP_AVAILABLE：地址池集合恢复可用
- ACCESS_STRATEGY_POOL_GROUP_SWITCH：主备地址池切换
- MONITOR_NODE_IP_CHANGE：监控节点IP地址变更',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'ADDR_ALERT',
                ),
                'EmailNotice' => 
                array (
                  'description' => '是否配置邮件通知：

- true：已配置
- false｜null : 未配置',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
                'DingtalkNotice' => 
                array (
                  'description' => '是否需要钉钉报警：

- true-需要
- false-不需要',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        10 => 
        array (
          'name' => 'PublicRr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'CNAME接入域名（公网）：主机名',
            'type' => 'string',
            'required' => false,
            'example' => 'test.rr',
          ),
        ),
        11 => 
        array (
          'name' => 'ForceUpdate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制更新。

- true-强制更新，不进行冲突提示。
- false|null-不强制更新，若遇冲突则提示。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF559**',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DnsGtmInstance.PublicRrDuplicate.OtherUserInstance',
            'errorMessage' => ' ',
          ),
          1 => 
          array (
            'errorCode' => 'GtmInstance.CnameModeDeny',
            'errorMessage' => ' ',
          ),
          2 => 
          array (
            'errorCode' => 'DnsGtmInstance.CnameModeDeny',
            'errorMessage' => ' ',
          ),
          3 => 
          array (
            'errorCode' => 'DnsGtmSystemBusyness',
            'errorMessage' => ' ',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF559**\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>29D0F8F8-5499-4F6C-9FDC-1EE13BF55925</RequestId>","errorExample":""}]',
      'title' => '修改GTM实例全局配置',
      'summary' => '修改实例配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateGtmInstanceGlobalConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'GTM实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-cs02xyk4a**',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例名称。

> 首次更新必填，再次更新则非必填。',
            'type' => 'string',
            'required' => false,
            'example' => '测试实例',
          ),
        ),
        3 => 
        array (
          'name' => 'Ttl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局TTL。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
        4 => 
        array (
          'name' => 'UserDomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主域名。
> 首次更新必填，再次更新非必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'dns-example.top',
          ),
        ),
        5 => 
        array (
          'name' => 'LbaStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '均衡策略。取值：

- **ALL_RR**: 负载均摊
- **RATIO**：加权轮询
> 首次更新必填，再次更新非必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'RATIO',
          ),
        ),
        6 => 
        array (
          'name' => 'AlertGroup',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '报警组。目前仅支持一个报警组。

> 首次更新必填，再次更新非必填。',
            'type' => 'string',
            'required' => false,
            'example' => '[\\"研发组\\"]',
          ),
        ),
        7 => 
        array (
          'name' => 'CnameMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '接入方式。取值：
- **SYSTEM_ASSIGN**：系统分配
- **CUSTOM**：自定义',
            'type' => 'string',
            'required' => false,
            'example' => 'SYSTEM_ASSIGN',
          ),
        ),
        8 => 
        array (
          'name' => 'CnameCustomDomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '**CnameMode**为**CUSTOM**接入时必传，必须是主域名。',
            'type' => 'string',
            'required' => false,
            'example' => 'dns-example.top',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF55925',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'GtmInstance.CnameModeDeny',
            'errorMessage' => ' ',
          ),
          1 => 
          array (
            'errorCode' => 'DnsGtmInstance.CnameModeDeny',
            'errorMessage' => ' ',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF55925\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateGtmInstanceGlobalConfigResponse>\\r\\n<RequestId>29D0F8F8-5499-4F6C-9FDC-1EE13BF55925</RequestId>\\r\\n</UpdateGtmInstanceGlobalConfigResponse>","errorExample":""}]',
      'title' => '修改GTM实例全局配置（旧版）',
      'summary' => '根据传入参数修改GTM实例配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDnsGtmAccessStrategy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '
hrb5ju',
          ),
        ),
        2 => 
        array (
          'name' => 'StrategyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'Lines',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问区域LineCode列表。例如：`["default", "drpeng"]`，即全局策略和鹏博士。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '["default", "drpeng"]',
          ),
        ),
        4 => 
        array (
          'name' => 'DefaultAddrPoolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主地址池类型：

- IPV4
- IPV6
- DOMAIN',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'IPV4',
          ),
        ),
        5 => 
        array (
          'name' => 'DefaultLbaStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主地址池集合均衡策略：

- ALL_RR: 返回全部地址
- RATIO：按权重返回地址',
            'type' => 'string',
            'required' => false,
            'example' => 'ALL_RR',
          ),
        ),
        6 => 
        array (
          'name' => 'DefaultMinAvailableAddrNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主地址池集合最小可用地址数量。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '400',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'DefaultMaxReturnAddrNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主地址池集合最多返回地址数量。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '8',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'DefaultLatencyOptimization',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主地址池集合延时解析调度优化：

- OPEN：开启
- CLOSE：关闭',
            'type' => 'string',
            'required' => false,
            'example' => 'OPEN',
          ),
        ),
        9 => 
        array (
          'name' => 'FailoverAddrPoolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备地址池类型：

- IPV4
- IPV6
- DOMAIN',
            'type' => 'string',
            'required' => false,
            'example' => 'IPV4',
          ),
        ),
        10 => 
        array (
          'name' => 'FailoverLbaStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备地址池集合均衡策略：

- ALL_RR: 返回全部地址
- RATIO：按权重返回地址',
            'type' => 'string',
            'required' => false,
            'example' => 'ALL_RR',
          ),
        ),
        11 => 
        array (
          'name' => 'FailoverMinAvailableAddrNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备地址池集合最小可用地址数量。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '400',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        12 => 
        array (
          'name' => 'FailoverMaxReturnAddrNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备地址池集合最多返回地址数量。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '8',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        13 => 
        array (
          'name' => 'FailoverLatencyOptimization',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备地址池集合延时解析调度优化：

- OPEN：开启
- CLOSE：关闭',
            'type' => 'string',
            'required' => false,
            'example' => 'OPEN',
          ),
        ),
        14 => 
        array (
          'name' => 'DefaultAddrPool',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '主地址池集合。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'LbaWeight' => 
                array (
                  'description' => '主地址池集合列表中权重。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'Id' => 
                array (
                  'description' => '主地址池集合列表中地址池id。

',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'pool1',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 100,
          ),
        ),
        15 => 
        array (
          'name' => 'FailoverAddrPool',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '备地址池集合，若未设置备地址池集合，输入"EMPTY"。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'LbaWeight' => 
                array (
                  'description' => '备地址池集合列表中权重。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'Id' => 
                array (
                  'description' => '备地址池集合列表中地址池id。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'pool1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        16 => 
        array (
          'name' => 'AccessMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池集合切换策略：

- AUTO： 自动切换
- DEFAULT：主地址池集合
- FAILOVER： 备地址池集合',
            'type' => 'string',
            'required' => false,
            'example' => 'DEFAULT',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF55925',
              ),
              'StrategyId' => 
              array (
                'description' => '策略id。',
                'type' => 'string',
                'example' => 'testStrategyId1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DnsGtmSystemBusyness',
            'errorMessage' => ' ',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF55925\\",\\n  \\"StrategyId\\": \\"testStrategyId1\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>29D0F8F8-5499-4F6C-9FDC-1EE13BF55925</RequestId>\\n<StrategyId>testStrategyId1</StrategyId>","errorExample":""}]',
      'title' => '修改访问策略',
      'summary' => '修改访问策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmAddrAttributeInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址类型：

- IPV4：ipv4地址
- IPV6: ipv6地址
- DOMAIN：域名',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'IPV4',
          ),
        ),
        2 => 
        array (
          'name' => 'Addrs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址列表。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '[
      "1.1.XX.XX"
]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'Addr' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Addr' => 
                  array (
                    'description' => '地址池地址。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AttributeInfo' => 
                        array (
                          'description' => '地址归属信息。

',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'FatherCode' => 
                            array (
                              'description' => '父线路的code。',
                              'type' => 'string',
                              'example' => 'telecom',
                            ),
                            'GroupName' => 
                            array (
                              'description' => '地址归属区域分组名称。',
                              'type' => 'string',
                              'example' => 'Global',
                            ),
                            'LineCode' => 
                            array (
                              'description' => '归属线路code。',
                              'type' => 'string',
                              'example' => 'default',
                            ),
                            'LineName' => 
                            array (
                              'description' => '地址归属线路名称。',
                              'type' => 'string',
                              'example' => 'Global',
                            ),
                            'GroupCode' => 
                            array (
                              'description' => '地址归属区域分组code。',
                              'type' => 'string',
                              'example' => 'DEFAULT',
                            ),
                          ),
                        ),
                        'Addr' => 
                        array (
                          'description' => '地址。',
                          'type' => 'string',
                          'example' => '1.1.XX.XX',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"Addr\\": {\\n    \\"Addr\\": [\\n      {\\n        \\"AttributeInfo\\": {\\n          \\"FatherCode\\": \\"telecom\\",\\n          \\"GroupName\\": \\"Global\\",\\n          \\"LineCode\\": \\"default\\",\\n          \\"LineName\\": \\"Global\\",\\n          \\"GroupCode\\": \\"DEFAULT\\"\\n        },\\n        \\"Addr\\": \\"1.1.XX.XX\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\n<Addr>\\n    <Addr>\\n        <Addr>1.1.1.1</Addr>\\n        <AttributeInfo>\\n            <GroupName>Global</GroupName>\\n            <GroupCode>DEFAULT</GroupCode>\\n            <FatherCode>telecom</FatherCode>\\n            <LineCode>default</LineCode>\\n            <LineName>Global</LineName>\\n        </AttributeInfo>\\n    </Addr>\\n</Addr>","errorExample":""}]',
      'title' => '查询地址归属区域信息',
      'summary' => '查询地址归属区域。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmAvailableAlertGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'AvailableAlertGroup' => 
              array (
                'description' => '可设置的报警组。',
                'type' => 'string',
                'example' => '[\\"测试报警组\\",\\"研发报警组\\"]',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"AvailableAlertGroup\\": \\"[\\\\\\\\\\\\\\"测试报警组\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"研发报警组\\\\\\\\\\\\\\"]\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\n<AvailableAlertGroup>[\\"测试报警组\\",\\"研发报警组\\"]</AvailableAlertGroup>","errorExample":""}]',
      'title' => '获取GTM实例可用的报警组列表',
      'summary' => '获取可设置的报警组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ExpireTimestamp' => 
              array (
                'description' => '实例到期时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1602656937000',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '84314904-D047-4176-A0EC-256D7F68C7F5',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组id。',
                'type' => 'string',
                'example' => 'resourcegroupid1',
              ),
              'InstanceId' => 
              array (
                'description' => '实例id。

',
                'type' => 'string',
                'example' => 'gtm-cn-wwo3a3hbz**',
              ),
              'TaskQuota' => 
              array (
                'description' => '探测任务总数。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'Config' => 
              array (
                'description' => '实例配置信息。

',
                'type' => 'object',
                'properties' => 
                array (
                  'Ttl' => 
                  array (
                    'description' => '全局TTL。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '60',
                  ),
                  'AlertGroup' => 
                  array (
                    'description' => '报警组(List<String>的JSON格式)。',
                    'type' => 'string',
                    'example' => '["test1","test2"]',
                  ),
                  'CnameType' => 
                  array (
                    'description' => 'cname接入域名类型：

- PUBLIC: 公网型',
                    'type' => 'string',
                    'example' => 'PUBLIC',
                  ),
                  'StrategyMode' => 
                  array (
                    'description' => '访问策略模式：

- LATENCY：基于延时
- GEO：基于地理位置',
                    'type' => 'string',
                    'example' => 'GEO',
                  ),
                  'InstanceName' => 
                  array (
                    'description' => '实例名称。

',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'PublicCnameMode' => 
                  array (
                    'description' => '公网cname接入方式：

- CUSTOM: 自定义
- SYSTEM_ASSIGN: 系统分配（此功能已关闭）',
                    'type' => 'string',
                    'example' => 'CUSTOM',
                  ),
                  'AlertConfig' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AlertConfig' => 
                      array (
                        'description' => '报警通知方式。

',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SmsNotice' => 
                            array (
                              'description' => '是否配置短信通知：

- true：已配置
- false｜null : 未配置',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                            'NoticeType' => 
                            array (
                              'description' => '报警事件类型：

- ADDR_ALERT：地址不可用
- ADDR_RESUME：地址恢复可用
- ADDR_POOL_GROUP_UNAVAILABLE：地址池集合不可用
- ADDR_POOL_GROUP_AVAILABLE：地址池集合恢复可用
- ACCESS_STRATEGY_POOL_GROUP_SWITCH：主备地址池切换
- MONITOR_NODE_IP_CHANGE：监控节点IP地址变更',
                              'type' => 'string',
                              'example' => 'ADDR_ALERT',
                            ),
                            'EmailNotice' => 
                            array (
                              'description' => '是否配置邮件通知：

- true：已配置
- false｜null : 未配置',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                            'DingtalkNotice' => 
                            array (
                              'description' => '是否配置钉钉通知：

- true：已配置
- false｜null ：未配置',
                              'type' => 'boolean',
                              'example' => 'true',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'PublicUserDomainName' => 
                  array (
                    'description' => '公网用户业务域名。

',
                    'type' => 'string',
                    'example' => 'example.com',
                  ),
                  'PubicZoneName' => 
                  array (
                    'description' => '公网接入域名。

',
                    'type' => 'string',
                    'example' => '
gtm-cn-wwo3a3hbz**.example.com',
                  ),
                  'PublicRr' => 
                  array (
                    'description' => '公网接入主机名

',
                    'type' => 'string',
                    'example' => 'test.rr',
                  ),
                ),
              ),
              'CreateTime' => 
              array (
                'description' => '实例创建时间。',
                'type' => 'string',
                'example' => '2020-10-14T06:58Z',
              ),
              'SmsQuota' => 
              array (
                'description' => '短信通知总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'VersionCode' => 
              array (
                'description' => '实例版本。',
                'type' => 'string',
                'example' => 'standard',
              ),
              'PaymentType' => 
              array (
                'description' => '付费类型

- Subscription：预付费',
                'type' => 'string',
                'example' => 'Subscription',
              ),
              'ExpireTime' => 
              array (
                'description' => '到期日。',
                'type' => 'string',
                'example' => '2020-10-14T06:58Z',
              ),
              'CreateTimestamp' => 
              array (
                'description' => '实例创建时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1602656937000',
              ),
              'UsedQuota' => 
              array (
                'description' => '已使用的配额。

',
                'type' => 'object',
                'properties' => 
                array (
                  'EmailUsedCount' => 
                  array (
                    'description' => '已发送邮件总数。

',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '123',
                  ),
                  'TaskUsedCount' => 
                  array (
                    'description' => '已创建探测任务数。

',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '123',
                  ),
                  'SmsUsedCount' => 
                  array (
                    'description' => '已发送短信总数。

',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '123',
                  ),
                  'DingtalkUsedCount' => 
                  array (
                    'description' => '已发送钉钉总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '123',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ExpireTimestamp\\": 1602656937000,\\n  \\"RequestId\\": \\"84314904-D047-4176-A0EC-256D7F68C7F5\\",\\n  \\"ResourceGroupId\\": \\"resourcegroupid1\\",\\n  \\"InstanceId\\": \\"gtm-cn-wwo3a3hbz**\\",\\n  \\"TaskQuota\\": 100,\\n  \\"Config\\": {\\n    \\"Ttl\\": 60,\\n    \\"AlertGroup\\": \\"[\\\\\\"test1\\\\\\",\\\\\\"test2\\\\\\"]\\",\\n    \\"CnameType\\": \\"PUBLIC\\",\\n    \\"StrategyMode\\": \\"GEO\\",\\n    \\"InstanceName\\": \\"test\\",\\n    \\"PublicCnameMode\\": \\"CUSTOM\\",\\n    \\"AlertConfig\\": {\\n      \\"AlertConfig\\": [\\n        {\\n          \\"SmsNotice\\": true,\\n          \\"NoticeType\\": \\"ADDR_ALERT\\",\\n          \\"EmailNotice\\": true,\\n          \\"DingtalkNotice\\": true\\n        }\\n      ]\\n    },\\n    \\"PublicUserDomainName\\": \\"example.com\\",\\n    \\"PubicZoneName\\": \\"\\\\ngtm-cn-wwo3a3hbz**.example.com\\",\\n    \\"PublicRr\\": \\"test.rr\\"\\n  },\\n  \\"CreateTime\\": \\"2020-10-14T06:58Z\\",\\n  \\"SmsQuota\\": 100,\\n  \\"VersionCode\\": \\"standard\\",\\n  \\"PaymentType\\": \\"Subscription\\",\\n  \\"ExpireTime\\": \\"2020-10-14T06:58Z\\",\\n  \\"CreateTimestamp\\": 1602656937000,\\n  \\"UsedQuota\\": {\\n    \\"EmailUsedCount\\": 123,\\n    \\"TaskUsedCount\\": 123,\\n    \\"SmsUsedCount\\": 123,\\n    \\"DingtalkUsedCount\\": 123\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ExpireTimestamp>1602656937000</ExpireTimestamp>\\n<ResourceGroupId>resourcegroupid1</ResourceGroupId>\\n<RequestId>84314904-D047-4176-A0EC-256D7F68C7F5</RequestId>\\n<InstanceId>instanceid1</InstanceId>\\n<TaskQuota>100</TaskQuota>\\n<Config>\\n    <InstanceName>instancetest1</InstanceName>\\n    <PubicZoneName>test.rr.gtm-003.com</PubicZoneName>\\n    <AlertGroup>[\\"test1\\",\\"test2\\"]</AlertGroup>\\n    <CnameType>public</CnameType>\\n    <PublicUserDomainName>example.com</PublicUserDomainName>\\n    <PublicRr>test.rr</PublicRr>\\n    <StrategyMode>GEO</StrategyMode>\\n    <Ttl>1</Ttl>\\n    <PublicCnameMode>custom</PublicCnameMode>\\n    <AlertConfig>\\n        <AlertConfig>\\n            <EmailNotice>true</EmailNotice>\\n            <NoticeType>ADDR_ALERT</NoticeType>\\n            <SmsNotice>true</SmsNotice>\\n            <DingtalkNotice>true</DingtalkNotice>\\n        </AlertConfig>\\n    </AlertConfig>\\n</Config>\\n<CreateTime>2020-10-14T06:58Z</CreateTime>\\n<SmsQuota>100</SmsQuota>\\n<VersionCode>versioncode1</VersionCode>\\n<PaymentType>Subscription</PaymentType>\\n<ExpireTime>2020-10-14T06:58Z</ExpireTime>\\n<CreateTimestamp>1602656937000</CreateTimestamp>\\n<UsedQuota>\\n    <TaskUsedCount>123</TaskUsedCount>\\n    <DingtalkUsedCount>123</DingtalkUsedCount>\\n    <SmsUsedCount>123</SmsUsedCount>\\n    <EmailUsedCount>123</EmailUsedCount>\\n</UsedQuota>","errorExample":""}]',
      'title' => '获取GTM实例详情',
      'summary' => '获取实例详情。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'GTM实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'instance1',
          ),
        ),
        2 => 
        array (
          'name' => 'NeedDetailAttributes',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否需要额外信息，默认为**false**。取值为**true**时，返回AccessStrategyNum（访问策略个数）、AddressPoolNum（地址池个数）。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'ExpireTimestamp' => 
              array (
                'description' => '实例到期时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1528284856000',
              ),
              'UserDomainName' => 
              array (
                'description' => '用户域名。',
                'type' => 'string',
                'example' => 'dns-example.top',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => 'E41AA251-F9BA-48C6-99B2-2B82B26A573A',
              ),
              'LbaStrategy' => 
              array (
                'description' => '负载均衡策略。
- **ALL_RR**: 负载均摊
- **RATIO**: 加权轮询',
                'type' => 'string',
                'example' => 'RATIO',
              ),
              'InstanceId' => 
              array (
                'description' => 'GTM实例ID。',
                'type' => 'string',
                'example' => 'gtm-cn-wwo3a3hbz**',
              ),
              'CreateTime' => 
              array (
                'description' => '实例创建时间。',
                'type' => 'string',
                'example' => '2018-06-06T11:34Z',
              ),
              'CnameMode' => 
              array (
                'description' => '当前接入方式。其中：

- **SYSTEM_ASSIGN**：系统分配
- **CUSTOM**：自定义',
                'type' => 'string',
                'example' => 'CUSTOM',
              ),
              'Ttl' => 
              array (
                'description' => '全局TTL。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '60',
              ),
              'Cname' => 
              array (
                'description' => 'CNAME接入域名。',
                'type' => 'string',
                'example' => 'gtm-cn-wwo3a3hbz**.dns-example.top',
              ),
              'InstanceName' => 
              array (
                'description' => '实例名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'VersionCode' => 
              array (
                'description' => '版本Code。',
                'type' => 'string',
                'example' => 'biaozhun',
              ),
              'AlertGroup' => 
              array (
                'description' => '报警组。',
                'type' => 'string',
                'example' => '[\\"日常测试-研发组\\"]',
              ),
              'AddressPoolNum' => 
              array (
                'description' => '地址池个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'AccessStrategyNum' => 
              array (
                'description' => '访问策略个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'ExpireTime' => 
              array (
                'description' => '实例到期时间。',
                'type' => 'string',
                'example' => '2018-06-06T11:34Z',
              ),
              'CreateTimestamp' => 
              array (
                'description' => '创建时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1528284856000',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '资源组ID。',
                'type' => 'string',
                'example' => 'rg-testgroupid',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ExpireTimestamp\\": 1528284856000,\\n  \\"UserDomainName\\": \\"dns-example.top\\",\\n  \\"RequestId\\": \\"E41AA251-F9BA-48C6-99B2-2B82B26A573A\\",\\n  \\"LbaStrategy\\": \\"RATIO\\",\\n  \\"InstanceId\\": \\"gtm-cn-wwo3a3hbz**\\",\\n  \\"CreateTime\\": \\"2018-06-06T11:34Z\\",\\n  \\"CnameMode\\": \\"CUSTOM\\",\\n  \\"Ttl\\": 60,\\n  \\"Cname\\": \\"gtm-cn-wwo3a3hbz**.dns-example.top\\",\\n  \\"InstanceName\\": \\"test\\",\\n  \\"VersionCode\\": \\"biaozhun\\",\\n  \\"AlertGroup\\": \\"[\\\\\\\\\\\\\\"日常测试-研发组\\\\\\\\\\\\\\"]\\",\\n  \\"AddressPoolNum\\": 5,\\n  \\"AccessStrategyNum\\": 5,\\n  \\"ExpireTime\\": \\"2018-06-06T11:34Z\\",\\n  \\"CreateTimestamp\\": 1528284856000,\\n  \\"ResourceGroupId\\": \\"rg-testgroupid\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmInstanceResponse>\\r\\n\\t<Cname>instance1.14.com</Cname>\\r\\n\\t<CnameMode>SYSTEM_ASSIGN</CnameMode>\\r\\n\\t<CreateTimestamp>1528284856000</CreateTimestamp>\\r\\n\\t<InstanceId>instance1</InstanceId>\\r\\n\\t<ExpireTimestamp>1528284856000</ExpireTimestamp>\\r\\n\\t<ExpireTime>2018-06-06T11:34Z</ExpireTime>\\r\\n\\t<Ttl>60</Ttl>\\r\\n\\t<RequestId>E41AA251-F9BA-48C6-99B2-2B82B26A573A</RequestId>\\r\\n\\t<VersionCode>biaozhun</VersionCode>\\r\\n\\t<CreateTime>2018-06-06T11:34Z</CreateTime>\\r\\n\\t<UserDomainName>www.example.com</UserDomainName>\\r\\n\\t<AlertGroup>[&quot;日常测试-研发组&quot;]</AlertGroup>\\r\\n\\t<InstanceName>获取实例详情测试</InstanceName>\\r\\n\\t<LbaStrategy>RATIO</LbaStrategy>\\r\\n\\t<AccessStrategyNum>5</AccessStrategyNum>\\r\\n\\t<AddressPoolNum>5</AddressPoolNum>\\r\\n</DescribeGtmInstanceResponse>","errorExample":""}]',
      'title' => '获取GTM实例详情（旧版）',
      'summary' => '获取GTM实例的详情信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en，zh，ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '9999999',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询关键字，支持实例ID、实例名称模糊搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-testgroupid',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '84314904-D047-4176-A0EC-256D7F68C7F5',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'GtmInstances' => 
              array (
                'description' => 'GTM实例列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'PaymentType' => 
                    array (
                      'description' => '付费类型：

- Subscription：预付费',
                      'type' => 'string',
                      'example' => 'Subscription',
                    ),
                    'ExpireTime' => 
                    array (
                      'description' => '实例到期时间。',
                      'type' => 'string',
                      'example' => '2020-10-14T06:58Z',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '实例创建时间。',
                      'type' => 'string',
                      'example' => '2020-10-14T06:58Z',
                    ),
                    'SmsQuota' => 
                    array (
                      'description' => '短信通知总数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例id。',
                      'type' => 'string',
                      'example' => 'gtm-cn-wwo3a3hbz**',
                    ),
                    'Config' => 
                    array (
                      'description' => '实例配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Ttl' => 
                        array (
                          'description' => '全局TTL。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '60',
                        ),
                        'AlertGroup' => 
                        array (
                          'description' => '报警组(List<String>的JSON格式)。',
                          'type' => 'string',
                          'example' => '["test1","test2"]',
                        ),
                        'PublicZoneName' => 
                        array (
                          'description' => '公网接入域名。',
                          'type' => 'string',
                          'example' => 'gtm-cn-wwo3a3hbz**.dns-example.top',
                        ),
                        'CnameType' => 
                        array (
                          'description' => 'cname接入域名类型：

- PUBLIC：公网型',
                          'type' => 'string',
                          'example' => 'PUBLIC',
                        ),
                        'StrategyMode' => 
                        array (
                          'description' => '访问策略模式：

- LATENCY：基于延时
- GEO：基于地理位置',
                          'type' => 'string',
                          'example' => 'GEO',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => 'instanceTest',
                        ),
                        'PublicCnameMode' => 
                        array (
                          'description' => '公网cname接入方式：

- CUSTOM：自定义
- SYSTEM_ASSIGN：系统分配（此功能已关闭）',
                          'type' => 'string',
                          'example' => 'CUSTOM',
                        ),
                        'AlertConfig' => 
                        array (
                          'description' => '报警通知方式。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'SmsNotice' => 
                              array (
                                'description' => '是否配置短信通知：

- true：已配置
- false｜null:  未配置',
                                'type' => 'string',
                                'example' => 'true',
                              ),
                              'NoticeType' => 
                              array (
                                'description' => '报警事件类型：

- ADDR_ALERT：地址不可用
- ADDR_RESUME：地址恢复可用
- ADDR_POOL_GROUP_UNAVAILABLE：地址池集合不可用
- ADDR_POOL_GROUP_AVAILABLE：地址池集合恢复可用
- ACCESS_STRATEGY_POOL_GROUP_SWITCH：主备地址池切换',
                                'type' => 'string',
                                'example' => 'ADDR_ALERT',
                              ),
                              'EmailNotice' => 
                              array (
                                'description' => '是否配置邮件通知：

- true：已配置
- false｜null：未配置',
                                'type' => 'string',
                                'example' => 'true',
                              ),
                              'DingtalkNotice' => 
                              array (
                                'description' => '是否配置钉钉报警通知：

- true：已配置
- false｜null：未配置',
                                'type' => 'string',
                                'example' => 'true',
                              ),
                            ),
                          ),
                        ),
                        'PublicUserDomainName' => 
                        array (
                          'description' => '公网用户业务域名。

',
                          'type' => 'string',
                          'example' => 'dns-example.top',
                        ),
                        'PublicRr' => 
                        array (
                          'description' => '公网接入主机名
',
                          'type' => 'string',
                          'example' => 'test.rr',
                        ),
                      ),
                    ),
                    'ExpireTimestamp' => 
                    array (
                      'description' => '实例到期时间（时间戳）。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1602658709000',
                    ),
                    'ResourceGroupId' => 
                    array (
                      'description' => '资源组Id。',
                      'type' => 'string',
                      'example' => 'resourceGroupid123',
                    ),
                    'VersionCode' => 
                    array (
                      'description' => '实例版本。',
                      'type' => 'string',
                      'example' => 'standard',
                    ),
                    'UsedQuota' => 
                    array (
                      'description' => '已使用的配额。

',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EmailUsedCount' => 
                        array (
                          'description' => '已发送邮件总数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'TaskUsedCount' => 
                        array (
                          'description' => '已创建探测任务数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'SmsUsedCount' => 
                        array (
                          'description' => '已发送短信总数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'DingtalkUsedCount' => 
                        array (
                          'description' => '已发送钉钉总数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                      ),
                    ),
                    'TaskQuota' => 
                    array (
                      'description' => '探测任务总数。

',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'CreateTimestamp' => 
                    array (
                      'description' => '创建时间戳。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1602658709000',
                    ),
                  ),
                ),
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '123',
              ),
              'TotalItems' => 
              array (
                'description' => '总个数。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 1,\\n  \\"RequestId\\": \\"84314904-D047-4176-A0EC-256D7F68C7F5\\",\\n  \\"PageNumber\\": 1,\\n  \\"GtmInstances\\": [\\n    {\\n      \\"PaymentType\\": \\"Subscription\\",\\n      \\"ExpireTime\\": \\"2020-10-14T06:58Z\\",\\n      \\"CreateTime\\": \\"2020-10-14T06:58Z\\",\\n      \\"SmsQuota\\": 1,\\n      \\"InstanceId\\": \\"gtm-cn-wwo3a3hbz**\\",\\n      \\"Config\\": {\\n        \\"Ttl\\": 60,\\n        \\"AlertGroup\\": \\"[\\\\\\"test1\\\\\\",\\\\\\"test2\\\\\\"]\\",\\n        \\"PublicZoneName\\": \\"gtm-cn-wwo3a3hbz**.dns-example.top\\",\\n        \\"CnameType\\": \\"PUBLIC\\",\\n        \\"StrategyMode\\": \\"GEO\\",\\n        \\"InstanceName\\": \\"instanceTest\\",\\n        \\"PublicCnameMode\\": \\"CUSTOM\\",\\n        \\"AlertConfig\\": [\\n          {\\n            \\"SmsNotice\\": \\"true\\",\\n            \\"NoticeType\\": \\"ADDR_ALERT\\",\\n            \\"EmailNotice\\": \\"true\\",\\n            \\"DingtalkNotice\\": \\"true\\"\\n          }\\n        ],\\n        \\"PublicUserDomainName\\": \\"dns-example.top\\",\\n        \\"PublicRr\\": \\"test.rr\\"\\n      },\\n      \\"ExpireTimestamp\\": 1602658709000,\\n      \\"ResourceGroupId\\": \\"resourceGroupid123\\",\\n      \\"VersionCode\\": \\"standard\\",\\n      \\"UsedQuota\\": {\\n        \\"EmailUsedCount\\": 100,\\n        \\"TaskUsedCount\\": 100,\\n        \\"SmsUsedCount\\": 100,\\n        \\"DingtalkUsedCount\\": 100\\n      },\\n      \\"TaskQuota\\": 1,\\n      \\"CreateTimestamp\\": 1602658709000\\n    }\\n  ],\\n  \\"TotalPages\\": 123,\\n  \\"TotalItems\\": 100\\n}","errorExample":""},{"type":"xml","example":"<RequestId>84314904-D047-4176-A0EC-256D7F68C7F5</RequestId>\\n<PageSize>1</PageSize>\\n<PageNumber>1</PageNumber>\\n<GtmInstances>\\n    <VersionCode>testVersion1</VersionCode>\\n    <ExpireTimestamp>1602658709000</ExpireTimestamp>\\n    <ResourceGroupId>resourceGroupid123</ResourceGroupId>\\n    <InstanceId>instance1</InstanceId>\\n    <TaskQuota>1</TaskQuota>\\n    <CreateTime>2020-10-14T06:58Z</CreateTime>\\n    <PaymentType>Subscription</PaymentType>\\n    <ExpireTime>2020-10-14T06:58Z</ExpireTime>\\n    <CreateTimestamp>1602658709000</CreateTimestamp>\\n    <SmsQuota>1</SmsQuota>\\n    <Config>\\n        <InstanceName>instanceTest</InstanceName>\\n        <AlertGroup>[\\"test1\\",\\"test2\\"]</AlertGroup>\\n        <CnameType>public</CnameType>\\n        <PublicUserDomainName>example.com</PublicUserDomainName>\\n        <PublicZoneName>test.rr.gtm-003.com</PublicZoneName>\\n        <PublicRr>test.rr</PublicRr>\\n        <StrategyMode>geo</StrategyMode>\\n        <Ttl>1</Ttl>\\n        <PublicCnameMode>custom</PublicCnameMode>\\n        <AlertConfig>\\n            <EmailNotice>true</EmailNotice>\\n            <NoticeType>ADDR_ALERT</NoticeType>\\n            <SmsNotice>true</SmsNotice>\\n            <DingtalkNotice>true</DingtalkNotice>\\n        </AlertConfig>\\n    </Config>\\n    <UsedQuota>\\n        <TaskUsedCount>100</TaskUsedCount>\\n        <DingtalkUsedCount>100</DingtalkUsedCount>\\n        <SmsUsedCount>100</SmsUsedCount>\\n        <EmailUsedCount>100</EmailUsedCount>\\n    </UsedQuota>\\n</GtmInstances>\\n<TotalPages>123</TotalPages>\\n<TotalItems>100</TotalItems>","errorExample":""}]',
      'title' => '获取GTM实例列表',
      'summary' => '获取实例列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询关键字，支持实例Id，实例名称精确搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-xxxxx',
          ),
        ),
        5 => 
        array (
          'name' => 'NeedDetailAttributes',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否需要额外信息，默认为**false**。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '193B0163-7F93-42DF-AB05-ACEEB7D22707',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为1，默认为1。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'GtmInstances' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'GtmInstance' => 
                  array (
                    'description' => 'GTM实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ExpireTime' => 
                        array (
                          'description' => '实例到期时间。',
                          'type' => 'string',
                          'example' => '2018-06-06T11:34Z',
                        ),
                        'AccessStrategyNum' => 
                        array (
                          'description' => '访问策略个数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '实例创建时间。',
                          'type' => 'string',
                          'example' => '2018-06-06T11:34Z',
                        ),
                        'CnameMode' => 
                        array (
                          'description' => '当前接入方式。其中：
- **SYSTEM_ASSIGN**：系统分配
- **CUSTOM**：自定义',
                          'type' => 'string',
                          'example' => 'CUSTOM',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'gtm-cn-wwo3a3hbz**',
                        ),
                        'ExpireTimestamp' => 
                        array (
                          'description' => '实例到期时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1528284856000',
                        ),
                        'Ttl' => 
                        array (
                          'description' => '全局TTL。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '60',
                        ),
                        'AlertGroup' => 
                        array (
                          'description' => '报警组。',
                          'type' => 'string',
                          'example' => '[\\"研发组\\"]',
                        ),
                        'AddressPoolNum' => 
                        array (
                          'description' => '地址池个数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'LbaStrategy' => 
                        array (
                          'description' => '负载均衡策略。
- **ALL_RR**: 负载均摊
- **RATIO**: 加权轮询',
                          'type' => 'string',
                          'example' => 'RATIO',
                        ),
                        'Cname' => 
                        array (
                          'description' => 'CNAME接入域名。',
                          'type' => 'string',
                          'example' => 'gtm-cn-wwo3a3hbz**.dns-example.top
',
                        ),
                        'VersionCode' => 
                        array (
                          'description' => '版本Code。',
                          'type' => 'string',
                          'example' => 'biaozhun',
                        ),
                        'UserDomainName' => 
                        array (
                          'description' => '用户域名。',
                          'type' => 'string',
                          'example' => 'dns-example.top',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1528284856000',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-acfm2q2jqpjh***',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 20,\\n  \\"RequestId\\": \\"193B0163-7F93-42DF-AB05-ACEEB7D22707\\",\\n  \\"PageNumber\\": 1,\\n  \\"GtmInstances\\": {\\n    \\"GtmInstance\\": [\\n      {\\n        \\"ExpireTime\\": \\"2018-06-06T11:34Z\\",\\n        \\"AccessStrategyNum\\": 5,\\n        \\"CreateTime\\": \\"2018-06-06T11:34Z\\",\\n        \\"CnameMode\\": \\"CUSTOM\\",\\n        \\"InstanceId\\": \\"gtm-cn-wwo3a3hbz**\\",\\n        \\"ExpireTimestamp\\": 1528284856000,\\n        \\"Ttl\\": 60,\\n        \\"AlertGroup\\": \\"[\\\\\\\\\\\\\\"研发组\\\\\\\\\\\\\\"]\\",\\n        \\"AddressPoolNum\\": 5,\\n        \\"InstanceName\\": \\"test\\",\\n        \\"LbaStrategy\\": \\"RATIO\\",\\n        \\"Cname\\": \\"gtm-cn-wwo3a3hbz**.dns-example.top\\\\n\\",\\n        \\"VersionCode\\": \\"biaozhun\\",\\n        \\"UserDomainName\\": \\"dns-example.top\\",\\n        \\"CreateTimestamp\\": 1528284856000,\\n        \\"ResourceGroupId\\": \\"rg-acfm2q2jqpjh***\\"\\n      }\\n    ]\\n  },\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 1\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmInstancesResponse>\\r\\n<GtmInstances>\\r\\n\\t\\t<GtmInstance>\\r\\n\\t\\t\\t<Cname>instance1.14.com</Cname>\\r\\n\\t\\t\\t<CnameMode>SYSTEM_ASSIGN</CnameMode>\\r\\n\\t\\t\\t<CreateTimestamp>1528284856000</CreateTimestamp>\\r\\n\\t\\t\\t<ExpireTime>2018-06-06T11:34Z</ExpireTime>\\r\\n\\t\\t\\t<Ttl>60</Ttl>\\r\\n\\t\\t\\t<CreateTime>2018-06-06T11:34Z</CreateTime>\\r\\n\\t\\t\\t<InstanceId>instance1</InstanceId>\\r\\n\\t\\t\\t<AlertGroup>[&quot;研发组&quot;]</AlertGroup>\\r\\n\\t\\t\\t<UserDomainName>www.example.com</UserDomainName>\\r\\n\\t\\t\\t<ExpireTimestamp>1528284856000</ExpireTimestamp>\\r\\n\\t\\t\\t<LbaStrategy>RATIO</LbaStrategy>\\r\\n\\t\\t\\t<InstanceName>获取实例列表测试</InstanceName>\\r\\n\\t\\t\\t<VerisonCode>biaozhun</VerisonCode>\\r\\n\\t\\t\\t<AccessStrategyNum>5</AccessStrategyNum>\\r\\n\\t\\t\\t<AddressPoolNum>5</AddressPoolNum>\\r\\n\\t\\t</GtmInstance>\\r\\n\\t</GtmInstances>\\r\\n\\t<PageNumber>1</PageNumber>\\r\\n\\t<PageSize>20</PageSize>\\r\\n\\t<RequestId>193B0163-7F93-42DF-AB05-ACEEB7D22707</RequestId>\\r\\n\\t<TotalItems>1</TotalItems>\\r\\n\\t<TotalPages>1</TotalPages>\\r\\n</DescribeGtmInstancesResponse>","errorExample":""}]',
      'title' => '获取GTM实例列表（旧版）',
      'summary' => '获取GTM实例列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmInstanceStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'StrategyNotAvailableNum' => 
              array (
                'description' => '当前生效地址池集合不可用的访问策略个数。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'AddrAvailableNum' => 
              array (
                'description' => '正常地址个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA',
              ),
              'SwitchToFailoverStrategyNum' => 
              array (
                'description' => '切换到备用地址池集合的访问策略个数。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'AddrNotAvailableNum' => 
              array (
                'description' => '故障地址个数。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'AddrPoolGroupNotAvailableNum' => 
              array (
                'description' => '不可用地址池集合个数。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"StrategyNotAvailableNum\\": 1,\\n  \\"AddrAvailableNum\\": 1,\\n  \\"RequestId\\": \\"389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA\\",\\n  \\"SwitchToFailoverStrategyNum\\": 1,\\n  \\"AddrNotAvailableNum\\": 1,\\n  \\"AddrPoolGroupNotAvailableNum\\": 1\\n}","errorExample":""},{"type":"xml","example":"<AddrAvailableNum>1</AddrAvailableNum>\\n<StrategyNotAvailableNum>1</StrategyNotAvailableNum>\\n<RequestId>389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA</RequestId>\\n<SwitchToFailoverStrategyNum>1</SwitchToFailoverStrategyNum>\\n<AddrNotAvailableNum>1</AddrNotAvailableNum>\\n<AddrPoolGroupNotAvailableNum>1</AddrPoolGroupNotAvailableNum>","errorExample":""}]',
      'title' => '获取GTM实例状态',
      'summary' => '获取实例当前状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmInstanceStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => '实例状态：

- ALLOW：允许操作
- DENY：不允许操作',
                'type' => 'string',
                'example' => 'ALLOW',
              ),
              'StrategyNotAvailableNum' => 
              array (
                'description' => '当前生效地址池不可用的访问策略个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA',
              ),
              'SwitchToFailoverStrategyNum' => 
              array (
                'description' => '切换到备用地址池的访问策略个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'StatusReason' => 
              array (
                'description' => '实例状态原因列表

- INSTANCE_OPERATE_BLACK_LIST：黑名单
- BETA_INSTANCE：公测期实例
',
                'type' => 'string',
                'example' => '["BETA_INSTANCE"]',
              ),
              'AddrNotAvailableNum' => 
              array (
                'description' => '故障地址个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'AddrPoolNotAvailableNum' => 
              array (
                'description' => '不可用地址池个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Status\\": \\"ALLOW\\",\\n  \\"StrategyNotAvailableNum\\": 10,\\n  \\"RequestId\\": \\"389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA\\",\\n  \\"SwitchToFailoverStrategyNum\\": 10,\\n  \\"StatusReason\\": \\"[\\\\\\"BETA_INSTANCE\\\\\\"]\\",\\n  \\"AddrNotAvailableNum\\": 10,\\n  \\"AddrPoolNotAvailableNum\\": 10\\n}","errorExample":""},{"type":"xml","example":"<RequestId>389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA</RequestId>\\n<AddrNotAvailableNum>10</AddrNotAvailableNum>\\n<AddrPoolNotAvailableNum>10</AddrPoolNotAvailableNum>\\n<SwitchToFailoverStrategyNum>10</SwitchToFailoverStrategyNum>\\n<StrategyNotAvailableNum>10</StrategyNotAvailableNum>\\n<Status>DENY</Status>\\n<StatusReason>[\\"BETA_INSTANCE\\"]</StatusReason>","errorExample":""}]',
      'title' => '获取GTM实例状态（旧版）',
      'summary' => '获取实例的当前状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
    ),
    'DescribeDnsGtmLogs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        2 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关键字，按照”%KeyWord%”模式搜索，不区分大小写。',
            'type' => 'string',
            'required' => false,
            'example' => 'demo',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为1，默认为1。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '9999999',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'StartTimestamp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间（时间戳）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '999999999999999',
            'minimum' => '1',
            'example' => '1516779348000',
          ),
        ),
        6 => 
        array (
          'name' => 'EndTimestamp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的结束时间（时间戳）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '999999999999999',
            'minimum' => '1',
            'example' => '1516779348000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '50C60A29-2E93-425A-ABA8-068686E28873',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为1，默认为1。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Logs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Log' => 
                  array (
                    'description' => '日志列表。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'OperTimestamp' => 
                        array (
                          'description' => '操作时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1516779348000',
                        ),
                        'EntityId' => 
                        array (
                          'description' => '操作对象Id。

',
                          'type' => 'string',
                          'example' => '121212',
                        ),
                        'EntityType' => 
                        array (
                          'description' => '操作的对象类型。

',
                          'type' => 'string',
                          'example' => '地址池',
                        ),
                        'OperTime' => 
                        array (
                          'description' => '操作时间。

',
                          'type' => 'string',
                          'example' => '2018-01-24T07:35Z',
                        ),
                        'OperAction' => 
                        array (
                          'description' => '操作的动作。

',
                          'type' => 'string',
                          'example' => '增加',
                        ),
                        'Content' => 
                        array (
                          'description' => '格式化的消息内容。

',
                          'type' => 'string',
                          'example' => 'addtest-pool-1',
                        ),
                        'EntityName' => 
                        array (
                          'description' => '操作对象名称。

',
                          'type' => 'string',
                          'example' => 'test-pool-1',
                        ),
                        'Id' => 
                        array (
                          'description' => '记录Id。

',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '6726',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalItems' => 
              array (
                'description' => '总个数。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 20,\\n  \\"RequestId\\": \\"50C60A29-2E93-425A-ABA8-068686E28873\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalPages\\": 1,\\n  \\"Logs\\": {\\n    \\"Log\\": [\\n      {\\n        \\"OperTimestamp\\": 1516779348000,\\n        \\"EntityId\\": \\"121212\\",\\n        \\"EntityType\\": \\"地址池\\",\\n        \\"OperTime\\": \\"2018-01-24T07:35Z\\",\\n        \\"OperAction\\": \\"增加\\",\\n        \\"Content\\": \\"addtest-pool-1\\",\\n        \\"EntityName\\": \\"test-pool-1\\",\\n        \\"Id\\": 6726\\n      }\\n    ]\\n  },\\n  \\"TotalItems\\": 1\\n}","errorExample":""},{"type":"xml","example":"<PageSize>1</PageSize>\\n<RequestId>50C60A29-2E93-425A-ABA8-068686E28873</RequestId>\\n<PageNumber>1</PageNumber>\\n<TotalPages>1</TotalPages>\\n<Logs>\\n    <Log>\\n        <EntityId>121212</EntityId>\\n        <EntityType>地址池</EntityType>\\n        <EntityName>test-pool-1</EntityName>\\n        <OperTime>2018-01-24T07:35Z</OperTime>\\n        <Content>addtest-pool-1</Content>\\n        <OperTimestamp>1516779348000</OperTimestamp>\\n        <Id>6726</Id>\\n        <OperAction>增加</OperAction>\\n    </Log>\\n</Logs>\\n<TotalItems>1</TotalItems>","errorExample":""}]',
      'title' => '获取GTM操作日志列表',
      'summary' => '获取操作日志列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmAvailableAlertGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF55925',
              ),
              'AvailableAlertGroup' => 
              array (
                'description' => '可用报警组。',
                'type' => 'string',
                'example' => '[\\"研发组\\",\\"GTM测试组\\"]',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF55925\\",\\n  \\"AvailableAlertGroup\\": \\"[\\\\\\\\\\\\\\"研发组\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"GTM测试组\\\\\\\\\\\\\\"]\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmAvailableAlertGroupResponse>\\r\\n\\t<RequestId>29D0F8F8-5499-4F6C-9FDC-1EE13BF55925</RequestId>\\r\\n\\t<AvailableAlertGroup>[&quot;研发组&quot;,&quot;GTM测试组&quot;]</AvailableAlertGroup>\\r\\n</DescribeGtmAvailableAlertGroupResponse>","errorExample":""}]',
      'title' => '获取GTM实例可用的报警组列表（旧版）',
      'summary' => '获取GTM实例可用的报警组列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmLogs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-xxxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关键字，按照“%Keyword%”模式搜索，不区分大小写。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'StartTimestamp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间（时间戳）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1363453340000',
          ),
        ),
        6 => 
        array (
          'name' => 'EndTimestamp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的结束时间（时间戳）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1363453340000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '页面大小。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '50C60A29-2E93-425A-ABA8-068686E28873',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '224',
              ),
              'Logs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Log' => 
                  array (
                    'description' => '日志列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'OperTimestamp' => 
                        array (
                          'description' => '操作时间（时间戳）',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1516779348000',
                        ),
                        'EntityId' => 
                        array (
                          'description' => '操作对象ID',
                          'type' => 'string',
                          'example' => '121212',
                        ),
                        'EntityType' => 
                        array (
                          'description' => '操作的对象类型',
                          'type' => 'string',
                          'example' => 'POOL',
                        ),
                        'OperTime' => 
                        array (
                          'description' => '操作时间',
                          'type' => 'string',
                          'example' => '2018-01-24T07:35Z',
                        ),
                        'OperIp' => 
                        array (
                          'description' => '操作ip',
                          'type' => 'string',
                          'example' => '106.11.34.X',
                        ),
                        'OperAction' => 
                        array (
                          'description' => '操作的动作',
                          'type' => 'string',
                          'example' => 'add',
                        ),
                        'Content' => 
                        array (
                          'description' => '格式化的消息内容',
                          'type' => 'string',
                          'example' => 'addtest-pool-1',
                        ),
                        'EntityName' => 
                        array (
                          'description' => '操作对象名称',
                          'type' => 'string',
                          'example' => 'test-pool-1',
                        ),
                        'Id' => 
                        array (
                          'description' => '记录ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '6726',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalItems' => 
              array (
                'description' => '总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '224',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 20,\\n  \\"RequestId\\": \\"50C60A29-2E93-425A-ABA8-068686E28873\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalPages\\": 224,\\n  \\"Logs\\": {\\n    \\"Log\\": [\\n      {\\n        \\"OperTimestamp\\": 1516779348000,\\n        \\"EntityId\\": \\"121212\\",\\n        \\"EntityType\\": \\"POOL\\",\\n        \\"OperTime\\": \\"2018-01-24T07:35Z\\",\\n        \\"OperIp\\": \\"106.11.34.X\\",\\n        \\"OperAction\\": \\"add\\",\\n        \\"Content\\": \\"addtest-pool-1\\",\\n        \\"EntityName\\": \\"test-pool-1\\",\\n        \\"Id\\": 6726\\n      }\\n    ]\\n  },\\n  \\"TotalItems\\": 224\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmLogsResponse>\\r\\n\\t<Logs>\\r\\n\\t\\t<Content>addtest-pool-1</Content>\\r\\n\\t\\t<EntityId>121212</EntityId>\\r\\n\\t\\t<EntityName>test-pool-1</EntityName>\\r\\n\\t\\t<Id>6726</Id>\\r\\n\\t\\t<OperAction>add</OperAction>\\r\\n\\t\\t<OperIp>106.11.34.X</OperIp>\\r\\n\\t\\t<EntityType>POOL</EntityType>\\r\\n\\t\\t<OperTime>2018-01-24T07:35Z</OperTime>\\r\\n\\t\\t<OperTimestamp>1516779348000</OperTimestamp>\\r\\n\\t</Logs>\\r\\n\\t<PageNumber>1</PageNumber>\\r\\n\\t<PageSize>1</PageSize>\\r\\n\\t<RequestId>50C60A29-2E93-425A-ABA8-068686E28873</RequestId>\\r\\n\\t<TotalItems>224</TotalItems>\\r\\n\\t<TotalPages>224</TotalPages>\\r\\n</DescribeGtmLogsResponse>","errorExample":""}]',
      'title' => '获取GTM操作日志列表（旧版）',
      'summary' => '获取日志列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmInstanceSystemCname' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SystemCname' => 
              array (
                'description' => '系统分配cname域名。',
                'type' => 'string',
                'example' => 'gtm-cn-mp91004xxxx.gtm-a2**.com',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"SystemCname\\": \\"gtm-cn-mp91004xxxx.gtm-a2**.com\\",\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmInstanceSystemCnameResponse>\\r\\n\\t<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n\\t<SystemCname>gtm-cn-mp91004xxxx.gtm-a2b4.com</SystemCname>\\r\\n</DescribeGtmInstanceSystemCnameResponse>","errorExample":""}]',
      'title' => '获取系统分配的CNAME域名（旧版）',
      'summary' => '获取系统分配的cname域名。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmInstanceSystemCname' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SystemCname' => 
              array (
                'description' => '系统分配cname域名。

',
                'type' => 'string',
                'example' => 'gtm-cn-mp91004xxxx.gtm-a2**.com',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"SystemCname\\": \\"gtm-cn-mp91004xxxx.gtm-a2**.com\\",\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\n<SystemCname>gtminstance.com</SystemCname>","errorExample":""}]',
      'title' => '获取系统分配的CNAME域名',
      'summary' => '获取系统分配的CNAME域名。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CopyGtmConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'SourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源对象Id，目前仅支持实例id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-0pp1j84v60d',
          ),
        ),
        2 => 
        array (
          'name' => 'TargetId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标对象Id，目前仅支持实例id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-v0h1gaujg06',
          ),
        ),
        3 => 
        array (
          'name' => 'CopyType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '复制类型，目前仅支持INSTANCE。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'INSTANCE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA</RequestId>","errorExample":""}]',
      'title' => '复制GTM配置',
      'summary' => '复制GTM配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => '访问[公共错误码](https://next.api.aliyun.com/document/Alidns/2015-01-09/errorCode)查看更多错误码。',
    ),
    'MoveGtmResourceGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。
',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rg-aekzzk7hx3*****',
          ),
        ),
        2 => 
        array (
          'name' => 'NewResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'AgIDE1MA_XXX',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => 'C6F1D541-E7A6-447A-A2B5-9F7A20B2A8FB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C6F1D541-E7A6-447A-A2B5-9F7A20B2A8FB\\"\\n}","errorExample":""},{"type":"xml","example":"<MoveGtmResourceGroupResponse>\\r\\n  <RequestId>C6F1D541-E7A6-447A-A2B5-9F7A20B2A8FB</RequestId>\\r\\n</MoveGtmResourceGroupResponse>","errorExample":""}]',
      'title' => '修改GTM实例的资源组ID',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddGtmAddressPool' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-xxxxxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '测试',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池类型。取值：

- **IP**：IPv4地址
- **DOMAIN**：域名',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'IP',
          ),
        ),
        4 => 
        array (
          'name' => 'MinAvailableAddrNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最小可用地址数量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'MonitorStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查开启状态。取值：

- **OPEN**：开启
- **CLOSE**（默认）：关闭',
            'type' => 'string',
            'required' => false,
            'example' => 'OPEN',
          ),
        ),
        6 => 
        array (
          'name' => 'ProtocolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '检查协议。取值：

- HTTP
- HTTPS
- Ping
- TCP',
            'type' => 'string',
            'required' => false,
            'example' => 'TCP',
          ),
        ),
        7 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '检查间隔，单位：秒，取值范围：60。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
        8 => 
        array (
          'name' => 'EvaluationCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续失败次数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        9 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '超时时间，单位：毫秒，取值范围：2000、3000、5000、10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5000',
          ),
        ),
        10 => 
        array (
          'name' => 'MonitorExtendInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展信息。根据不同协议，进行传参：

HTTP、HTTPS：
 
- port：检查端口
- failureRate：失败比例
- code：返回码（大于此值会被判定为异常）。取值：400、500。
- host：Host设置
- path：URL路径

PING:

- packetNum：ping包数目
- packetLossRate：丢包率
- failureRate：失败比例

TCP：

- port：检查端口
- failureRate：失败比例',
            'type' => 'string',
            'required' => false,
            'example' => '{"host":"aliyun.com","port":80}',
          ),
        ),
        11 => 
        array (
          'name' => 'Addr',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '地址池列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Value' => 
                array (
                  'description' => '地址池地址。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '1.1.XX.XX',
                ),
                'LbaWeight' => 
                array (
                  'description' => '地址池权重。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'Mode' => 
                array (
                  'description' => '地址池模式。取值：

- **SMART**：智能返回
- **ONLINE**：永远在线
- **OFFLINE**：永远离线',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'SMART',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
        12 => 
        array (
          'name' => 'IspCityNode',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '监控城市节点列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'CityCode' => 
                array (
                  'description' => '监控节点的城市Code。具体取值请参考DescribeGtmMonitorAvailableConfig的返回值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '546',
                ),
                'IspCode' => 
                array (
                  'description' => '- 具体取值可参考：DescribeGtmMonitorAvailableConfig接口返回数据。
- GroupType为BGP或Overseas时，IspCityNode.N.IspCode为非必传值，默认为465。
- GroupType为非BGP或Overseas时，IspCityNode.N.IspCode为必传值。并与IspCityNode.N.CityCode匹配使用。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '465',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'AddrPoolId' => 
              array (
                'description' => '地址池ID。',
                'type' => 'string',
                'example' => 'hraf3x',
              ),
              'MonitorConfigId' => 
              array (
                'description' => '健康检查配置ID。',
                'type' => 'string',
                'example' => 'hraf14',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"AddrPoolId\\": \\"hraf3x\\",\\n  \\"MonitorConfigId\\": \\"hraf14\\"\\n}","errorExample":""},{"type":"xml","example":"<AddGtmAddressPoolResponse>\\r\\n    <RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n\\t<AddrPoolId>hraf3x</AddrPoolId>\\r\\n\\t<MonitorConfigId>hraf14</MonitorConfigId>\\r\\n</AddGtmAddressPoolResponse>","errorExample":""}]',
      'title' => '新增地址池（旧版）',
      'summary' => '新增地址池。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddDnsGtmAddressPool' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例Id。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-cs02xyk4a**',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池类型：

- IPV4：ipv4地址
- IPV6: ipv6地址
- DOMAIN：域名',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'IPV4',
          ),
        ),
        4 => 
        array (
          'name' => 'LbaStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡状态：

- ALL_RR：返回全部地址
- RATIO：按权重返回地址',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ALL_RR',
          ),
        ),
        5 => 
        array (
          'name' => 'MonitorStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查开启状态（默认CLOSE），若OPEN则校验健康检查配置，否则抛弃

- OPEN：开启
- CLOSE：关闭',
            'type' => 'string',
            'required' => false,
            'example' => 'OPEN',
          ),
        ),
        6 => 
        array (
          'name' => 'ProtocolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '检查协议：

- HTTP
- HTTPS
- PING
- TCP',
            'type' => 'string',
            'required' => false,
            'example' => 'TCP',
          ),
        ),
        7 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '检查间隔，单位秒。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '9999999',
            'minimum' => '1',
            'example' => '60',
          ),
        ),
        8 => 
        array (
          'name' => 'EvaluationCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续失败次数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '9999999',
            'minimum' => '1',
            'example' => '2',
          ),
        ),
        9 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '超时时间，单位毫秒。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '9999999',
            'minimum' => '1',
            'example' => '2000',
          ),
        ),
        10 => 
        array (
          'name' => 'MonitorExtendInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展信息，各协议检查所需参数：
- HTTP(S)：

	- port：检查端口
	- host：Host设置
	- path：URL路径
	- code：返回码大于
	- failureRate：失败比例
	- sni：是否开启sni，仅在HTTPS协议时使用。
	    - true-开启
	    - 其他-未开启
	- nodeType：地址池类型为DOMAIN时，健康检查监控节点类型：
	    - IPV4
	    - IPV6

- PING：

	- failureRate：失败比例
	- packetNum：ping包数目
	- packetLossRate：丢包率
	- nodeType：地址池类型为DOMAIN时，健康检查监控节点类型：
	    - IPV4
	    - IPV6

- TCP：

	- port：检查端口
	- failureRate：失败比例
	- nodeType：地址池类型为DOMAIN时，健康检查监控节点类型：
	    - IPV4
	    - IPV6',
            'type' => 'string',
            'required' => false,
            'example' => '{"failureRate":50,"port":80}',
          ),
        ),
        11 => 
        array (
          'name' => 'Addr',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '地址池列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'AttributeInfo' => 
                array (
                  'description' => '地址归属信息, JSON字符串格式。

- lineCode：归属线路Code
- lineCodeRectifyType：归属线路订正类型，默认：自动订正
    - NO_NEED 不订正
    - RECTIFIED 已订正
    - AUTO 自动订正',
                  'type' => 'string',
                  'required' => true,
                  'example' => '{"lineCodeRectifyType":"AUTO", "lineCode":[]}',
                ),
                'Remark' => 
                array (
                  'description' => '备注。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'LbaWeight' => 
                array (
                  'description' => '权重。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'Addr' => 
                array (
                  'description' => '地址。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '223.5.XX.XX',
                ),
                'Mode' => 
                array (
                  'description' => '模式：

- SMART：智能返回
- ONLINE：永远在线
- OFFLINE：永远离线',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'SMART',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
        12 => 
        array (
          'name' => 'IspCityNode',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '监控城市节点列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'CityCode' => 
                array (
                  'description' => '城市Code。

具体取值可参考：DescribeGtmMonitorAvailableConfig接口返回数据。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '503',
                ),
                'IspCode' => 
                array (
                  'description' => '- 具体取值可参考：DescribeGtmMonitorAvailableConfig接口返回数据。
- GroupType为BGP或Overseas时，IspCityNode.N.IspCode为非必传值，默认为465。
- GroupType为非BGP或Overseas时，IspCityNode.N.IspCode为必传值。并与IspCityNode.N.CityCode匹配使用。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '465',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD5799335**B',
              ),
              'AddrPoolId' => 
              array (
                'description' => '地址池id。',
                'type' => 'string',
                'example' => 'hrbv**',
              ),
              'MonitorConfigId' => 
              array (
                'description' => '健康检查配置id。

',
                'type' => 'string',
                'example' => 'hra**a',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DnsGtmSystemBusyness',
            'errorMessage' => ' ',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD5799335**B\\",\\n  \\"AddrPoolId\\": \\"hrbv**\\",\\n  \\"MonitorConfigId\\": \\"hra**a\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\n<AddrPoolId>testpool1</AddrPoolId>\\n<MonitorConfigId>test1</MonitorConfigId>","errorExample":""}]',
      'title' => '新增地址池',
      'summary' => '新增地址池。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDnsGtmAddressPool' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'AddrPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testpool1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DnsGtmSystemBusyness',
            'errorMessage' => ' ',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>","errorExample":""}]',
      'title' => '删除 DNS 地址池',
      'summary' => '删除地址池。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteGtmAddressPool' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'AddrPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1234',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteGtmAddressPoolResponse>\\r\\n<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n</DeleteGtmAddressPoolResponse>","errorExample":""}]',
      'title' => '删除地址池（旧版）',
      'summary' => '删除地址池。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDnsGtmAddressPool' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'AddrPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池id。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testpool1',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'testpoolname',
          ),
        ),
        3 => 
        array (
          'name' => 'LbaStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '负载均衡策略：

- ALL_RR: 返回全部地址
- RATIO：按权重返回地址',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ALL_RR',
          ),
        ),
        4 => 
        array (
          'name' => 'Addr',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '地址池列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'AttributeInfo' => 
                array (
                  'description' => '地址归属信息，JSON化字符串格式。

- LineCode：归属线路Code（已废弃，以lineCodes数据为准）
- lineCodes：归属线路Code列表
- lineCodeRectifyType：归属线路订正类型，默认：自动订正
    - NO_NEED 不订正
    - RECTIFIED 已订正
    - AUTO 自动订正
    



',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Linecode: default
lineCodes： ["default"]
lineCodeRectifyType: AUTO',
                ),
                'Remark' => 
                array (
                  'description' => '备注。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'LbaWeight' => 
                array (
                  'description' => '权重。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'Addr' => 
                array (
                  'description' => '地址。',
                  'type' => 'string',
                  'required' => true,
                  'example' => '1.1.XX.XX',
                ),
                'Mode' => 
                array (
                  'description' => '模式：

- SMART：智能返回
- ONLINE：永远在线
- OFFLINE：永远离线',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'SMART',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DnsGtmSystemBusyness',
            'errorMessage' => ' ',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>","errorExample":""}]',
      'title' => '修改地址池',
      'summary' => '修改地址池。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateGtmAddressPool' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'AddrPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1234abc',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池名称。',
            'type' => 'string',
            'required' => false,
            'example' => '名称',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池类型：

- IP：ipv4地址
- DOMAIN：域名',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'IP',
          ),
        ),
        4 => 
        array (
          'name' => 'MinAvailableAddrNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最小可用地址数量',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        5 => 
        array (
          'name' => 'Addr',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '地址池列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Value' => 
                array (
                  'description' => '地址池地址。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '1.1.XX.XX',
                ),
                'LbaWeight' => 
                array (
                  'description' => '地址池权重。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'Mode' => 
                array (
                  'description' => '模式。
- **SMART**：智能返回
- **ONLINE**：永远在线
- **OFFLINE**：永远离线',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'SMART',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求标识。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateGtmAddressPoolResponse>\\r\\n<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n</UpdateGtmAddressPoolResponse>","errorExample":""}]',
      'title' => '修改地址池（旧版）',
      'summary' => '修改地址池。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmInstanceAddressPool' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'AddrPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池id。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testpool1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Addrs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Addr' => 
                  array (
                    'description' => '地址池地址。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'UpdateTimestamp' => 
                        array (
                          'description' => '更新时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'AttributeInfo' => 
                        array (
                          'description' => '地址归属信息。

- LineCode：归属线路code。（已废弃，以LineCodes数据为准）
- LineName：归属线路名称。（已废弃）
- LineCodes：归属线路列表。







',
                          'type' => 'string',
                          'example' => '"LineCode":"aliyun_r_cn-zhangjiakou", "LineName": "阿里云_华北3（张家口）"，“LineCodes”：["aliyun_r_cn-zhangjiakou"]',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '更新时间。',
                          'type' => 'string',
                          'example' => '2017-12-28T13:08Z',
                        ),
                        'AlertStatus' => 
                        array (
                          'description' => '健康检查状态：

- OK：正常
- ALERT：报警',
                          'type' => 'string',
                          'example' => 'OK',
                        ),
                        'Remark' => 
                        array (
                          'description' => '备注。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'LbaWeight' => 
                        array (
                          'description' => '权重。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Addr' => 
                        array (
                          'description' => 'IP地址。',
                          'type' => 'string',
                          'example' => '1.1.XX.XX',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2017-12-28T13:08Z',
                        ),
                        'Mode' => 
                        array (
                          'description' => '模式：

- SMART：智能返回
- ONLINE：永远在线
- OFFLINE：永远离线',
                          'type' => 'string',
                          'example' => 'SMART',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'LbaStrategy' => 
              array (
                'description' => '负载均衡策略：

- ALL_RR: 返回全部地址
- RATIO：按权重返回地址',
                'type' => 'string',
                'example' => 'ALL_RR',
              ),
              'CreateTime' => 
              array (
                'description' => '创建时间。',
                'type' => 'string',
                'example' => '2017-12-28T13:08Z',
              ),
              'AddrCount' => 
              array (
                'description' => '地址池数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Name' => 
              array (
                'description' => '地址池名称。

',
                'type' => 'string',
                'example' => 'test',
              ),
              'Type' => 
              array (
                'description' => '地址池类型：

- IPV4：ipv4地址
- IPV6: ipv6地址
- DOMAIN：域名',
                'type' => 'string',
                'example' => 'IPV4',
              ),
              'UpdateTime' => 
              array (
                'description' => '更新时间。',
                'type' => 'string',
                'example' => '2017-12-28T13:08Z',
              ),
              'AddrPoolId' => 
              array (
                'description' => '地址池id。',
                'type' => 'string',
                'example' => 'testpool1',
              ),
              'UpdateTimestamp' => 
              array (
                'description' => '更新时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'MonitorConfigId' => 
              array (
                'description' => '监控配置id。

',
                'type' => 'string',
                'example' => 'test1',
              ),
              'MonitorStatus' => 
              array (
                'description' => '监控状态：

- OPEN：开启
- CLOSE：关闭
- UNCONFIGURED：未配置',
                'type' => 'string',
                'example' => 'OPEN',
              ),
              'CreateTimestamp' => 
              array (
                'description' => '创建时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Addrs\\": {\\n    \\"Addr\\": [\\n      {\\n        \\"UpdateTimestamp\\": 1527690629357,\\n        \\"AttributeInfo\\": \\"\\\\\\"LineCode\\\\\\":\\\\\\"aliyun_r_cn-zhangjiakou\\\\\\", \\\\\\"LineName\\\\\\": \\\\\\"阿里云_华北3（张家口）\\\\\\"，“LineCodes”：[\\\\\\"aliyun_r_cn-zhangjiakou\\\\\\"]\\",\\n        \\"UpdateTime\\": \\"2017-12-28T13:08Z\\",\\n        \\"AlertStatus\\": \\"OK\\",\\n        \\"Remark\\": \\"test\\",\\n        \\"LbaWeight\\": 1,\\n        \\"Addr\\": \\"1.1.XX.XX\\",\\n        \\"CreateTime\\": \\"2017-12-28T13:08Z\\",\\n        \\"Mode\\": \\"SMART\\",\\n        \\"CreateTimestamp\\": 1527690629357\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"LbaStrategy\\": \\"ALL_RR\\",\\n  \\"CreateTime\\": \\"2017-12-28T13:08Z\\",\\n  \\"AddrCount\\": 1,\\n  \\"Name\\": \\"test\\",\\n  \\"Type\\": \\"IPV4\\",\\n  \\"UpdateTime\\": \\"2017-12-28T13:08Z\\",\\n  \\"AddrPoolId\\": \\"testpool1\\",\\n  \\"UpdateTimestamp\\": 1527690629357,\\n  \\"MonitorConfigId\\": \\"test1\\",\\n  \\"MonitorStatus\\": \\"OPEN\\",\\n  \\"CreateTimestamp\\": 1527690629357\\n}","errorExample":""},{"type":"xml","example":"<Addrs>\\n    <Addr>\\n        <AttributeInfo>\\"LineCode\\":\\"aliyun_r_cn-zhangjiakou\\", \\"LineName\\": \\"阿里云_华北3（张家口）\\"，“LineCodes”：[\\"aliyun_r_cn-zhangjiakou\\"]</AttributeInfo>\\n        <LbaWeight>1</LbaWeight>\\n        <AlertStatus>ok</AlertStatus>\\n        <Mode>online</Mode>\\n        <CreateTime>2017-12-28T13:08Z</CreateTime>\\n        <UpdateTime>2017-12-28T13:08Z</UpdateTime>\\n        <UpdateTimestamp>1527690629357</UpdateTimestamp>\\n        <CreateTimestamp>1527690629357</CreateTimestamp>\\n        <Addr>1.1.1.1</Addr>\\n        <Remark>test</Remark>\\n    </Addr>\\n</Addrs>\\n<LbaStrategy>all_rr</LbaStrategy>\\n<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\n<CreateTime>2017-12-28T13:08Z</CreateTime>\\n<Name>test</Name>\\n<AddrCount>1</AddrCount>\\n<Type>ipv4</Type>\\n<UpdateTime>2017-12-28T13:08Z</UpdateTime>\\n<AddrPoolId>testpool1</AddrPoolId>\\n<UpdateTimestamp>1527690629357</UpdateTimestamp>\\n<MonitorConfigId>test1</MonitorConfigId>\\n<MonitorStatus>open</MonitorStatus>\\n<CreateTimestamp>1527690629357</CreateTimestamp>","errorExample":""}]',
      'title' => '获取地址池详情',
      'summary' => '获取地址池详情。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmInstanceAddressPools' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'GTM实例id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为1，默认为1。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '9999999',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '1',
            'default' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为1，默认为1。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'AddrPools' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AddrPool' => 
                  array (
                    'description' => '地址池列表。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '地址池类型：

- IPV4：ip地址
- IPV6: ipv6地址
- DOMAIN：域名',
                          'type' => 'string',
                          'example' => 'IPV4',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '更新时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'MonitorStatus' => 
                        array (
                          'description' => '监控状态：

- OPEN：开启
- CLOSE：关闭
- UNCONFIGURED：未配置',
                          'type' => 'string',
                          'example' => 'OPEN',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '更新时间。

',
                          'type' => 'string',
                          'example' => '2017-12-28T13:08Z',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2017-12-28T13:08Z',
                        ),
                        'AddrPoolId' => 
                        array (
                          'description' => '地址池id。

',
                          'type' => 'string',
                          'example' => 'hrbpne',
                        ),
                        'LbaStrategy' => 
                        array (
                          'description' => '负载均衡策略

- ALL_RR: 返回全部地址
- RATIO：按权重返回地址',
                          'type' => 'string',
                          'example' => 'ALL_RR',
                        ),
                        'Name' => 
                        array (
                          'description' => '地址池名称。

',
                          'type' => 'string',
                          'example' => 'testpool',
                        ),
                        'AddrCount' => 
                        array (
                          'description' => '地址数量。

',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'MonitorConfigId' => 
                        array (
                          'description' => '监控配置id。

',
                          'type' => 'string',
                          'example' => 'abc123',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 1,\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 1,\\n  \\"AddrPools\\": {\\n    \\"AddrPool\\": [\\n      {\\n        \\"Type\\": \\"IPV4\\",\\n        \\"UpdateTimestamp\\": 1527690629357,\\n        \\"MonitorStatus\\": \\"OPEN\\",\\n        \\"UpdateTime\\": \\"2017-12-28T13:08Z\\",\\n        \\"CreateTime\\": \\"2017-12-28T13:08Z\\",\\n        \\"AddrPoolId\\": \\"hrbpne\\",\\n        \\"LbaStrategy\\": \\"ALL_RR\\",\\n        \\"Name\\": \\"testpool\\",\\n        \\"AddrCount\\": 1,\\n        \\"MonitorConfigId\\": \\"abc123\\",\\n        \\"CreateTimestamp\\": 1527690629357\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<PageSize>1</PageSize>\\n<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\n<PageNumber>1</PageNumber>\\n<TotalPages>1</TotalPages>\\n<TotalItems>1</TotalItems>\\n<AddrPools>\\n    <AddrPool>\\n        <Type>ipv4</Type>\\n        <LbaStrategy>all_rr</LbaStrategy>\\n        <CreateTime>2017-12-28T13:08Z</CreateTime>\\n        <UpdateTime>2017-12-28T13:08Z</UpdateTime>\\n        <AddrPoolId>pool-1</AddrPoolId>\\n        <UpdateTimestamp>1527690629357</UpdateTimestamp>\\n        <MonitorConfigId>abc123</MonitorConfigId>\\n        <MonitorStatus>open</MonitorStatus>\\n        <CreateTimestamp>1527690629357</CreateTimestamp>\\n        <Name>testpool</Name>\\n        <AddrCount>1</AddrCount>\\n    </AddrPool>\\n</AddrPools>","errorExample":""}]',
      'title' => '获取地址池列表',
      'summary' => '获取地址池列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmAddressPoolAvailableConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'GTM实例id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '199C3699-9A7B-41A1-BB5A-F1E862D3CB38',
              ),
              'AttributeInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AttributeInfo' => 
                  array (
                    'description' => '支持的地址归属区域列表。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'FatherCode' => 
                        array (
                          'description' => '地址归属区域父节点线路Code。',
                          'type' => 'string',
                          'example' => 'telecom',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '地址归属区域分组名称。

',
                          'type' => 'string',
                          'example' => 'ISP',
                        ),
                        'LineCode' => 
                        array (
                          'description' => '地址归属区域线路Code。

',
                          'type' => 'string',
                          'example' => 'cn_telecom_jiangxi',
                        ),
                        'LineName' => 
                        array (
                          'description' => '地址归属区域线路名称。

',
                          'type' => 'string',
                          'example' => 'ChinaTelecom_jiangxi',
                        ),
                        'GroupCode' => 
                        array (
                          'description' => '地址归属区域分组Code。

',
                          'type' => 'string',
                          'example' => 'ISP',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"199C3699-9A7B-41A1-BB5A-F1E862D3CB38\\",\\n  \\"AttributeInfos\\": {\\n    \\"AttributeInfo\\": [\\n      {\\n        \\"FatherCode\\": \\"telecom\\",\\n        \\"GroupName\\": \\"ISP\\",\\n        \\"LineCode\\": \\"cn_telecom_jiangxi\\",\\n        \\"LineName\\": \\"ChinaTelecom_jiangxi\\",\\n        \\"GroupCode\\": \\"ISP\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>199C3699-9A7B-41A1-BB5A-F1E862D3CB38</RequestId>\\n<AttributeInfos>\\n    <AttributeInfo>\\n        <GroupName>global</GroupName>\\n        <GroupCode>default</GroupCode>\\n        <FatherCode>telecom</FatherCode>\\n        <LineCode>default</LineCode>\\n        <LineName>global</LineName>\\n    </AttributeInfo>\\n</AttributeInfos>","errorExample":""}]',
      'title' => '获取地址池可设置配置信息',
      'summary' => '获取地址池可设置配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmInstanceAddressPool' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'AddrPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hrbpnf',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => '地址池可用状态。其中：

- **AVAILABLE**：可用
- **NOT_AVAILABLE**：不可用',
                'type' => 'string',
                'example' => 'AVAILABLE',
              ),
              'Addrs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Addr' => 
                  array (
                    'description' => '地址池列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Value' => 
                        array (
                          'description' => 'IP地址。',
                          'type' => 'string',
                          'example' => '1.1.XX.XX',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '更新时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '更新时间。',
                          'type' => 'string',
                          'example' => '2017-12-28T13:08Z',
                        ),
                        'AlertStatus' => 
                        array (
                          'description' => '健康检查状态。其中：

- **OK**：正常
- **ALERT**：报警',
                          'type' => 'string',
                          'example' => 'OK',
                        ),
                        'LbaWeight' => 
                        array (
                          'description' => '权重。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2017-12-28T13:08Z',
                        ),
                        'AddrId' => 
                        array (
                          'description' => '地址ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123',
                        ),
                        'Mode' => 
                        array (
                          'description' => '返回模式。其中：

- **SMART**：智能返回
- **ONLINE**：永远在线
- **OFFLINE**：永远离线',
                          'type' => 'string',
                          'example' => 'SMART',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'CreateTime' => 
              array (
                'description' => '创建时间。',
                'type' => 'string',
                'example' => '2017-12-28T13:08Z',
              ),
              'AddrCount' => 
              array (
                'description' => '地址数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Name' => 
              array (
                'description' => '地址池名称。',
                'type' => 'string',
                'example' => '名称',
              ),
              'Type' => 
              array (
                'description' => '地址池类型。其中：

- **IP**：IP地址
- **DOMAIN**：域名',
                'type' => 'string',
                'example' => 'IP',
              ),
              'UpdateTime' => 
              array (
                'description' => '更新时间。',
                'type' => 'string',
                'example' => '2017-12-28T13:08Z',
              ),
              'AddrPoolId' => 
              array (
                'description' => '地址池ID。',
                'type' => 'string',
                'example' => '1234abc',
              ),
              'UpdateTimestamp' => 
              array (
                'description' => '更新时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'MonitorConfigId' => 
              array (
                'description' => '监控配置ID。',
                'type' => 'string',
                'example' => '100abc',
              ),
              'MinAvailableAddrNum' => 
              array (
                'description' => '最小可用地址数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MonitorStatus' => 
              array (
                'description' => '监控状态。其中：
- **OPEN**：开启
- **CLOSE**：关闭
- **UNCONFIGURED**：未配置',
                'type' => 'string',
                'example' => 'OPEN',
              ),
              'CreateTimestamp' => 
              array (
                'description' => '创建时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Status\\": \\"AVAILABLE\\",\\n  \\"Addrs\\": {\\n    \\"Addr\\": [\\n      {\\n        \\"Value\\": \\"1.1.XX.XX\\",\\n        \\"UpdateTimestamp\\": 1527690629357,\\n        \\"UpdateTime\\": \\"2017-12-28T13:08Z\\",\\n        \\"AlertStatus\\": \\"OK\\",\\n        \\"LbaWeight\\": 1,\\n        \\"CreateTime\\": \\"2017-12-28T13:08Z\\",\\n        \\"AddrId\\": 123,\\n        \\"Mode\\": \\"SMART\\",\\n        \\"CreateTimestamp\\": 1527690629357\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"CreateTime\\": \\"2017-12-28T13:08Z\\",\\n  \\"AddrCount\\": 2,\\n  \\"Name\\": \\"名称\\",\\n  \\"Type\\": \\"IP\\",\\n  \\"UpdateTime\\": \\"2017-12-28T13:08Z\\",\\n  \\"AddrPoolId\\": \\"1234abc\\",\\n  \\"UpdateTimestamp\\": 1527690629357,\\n  \\"MonitorConfigId\\": \\"100abc\\",\\n  \\"MinAvailableAddrNum\\": 1,\\n  \\"MonitorStatus\\": \\"OPEN\\",\\n  \\"CreateTimestamp\\": 1527690629357\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmInstanceAddressPoolResponse>\\r\\n\\t<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n\\t<AddrPoolId>1234abc</AddrPoolId>\\r\\n\\t<CreateTime>2017-12-28T13:08Z</CreateTime>\\r\\n\\t<CreateTimestamp>1527690629357</CreateTimestamp>\\r\\n\\t<AddrCount>2</AddrCount>\\r\\n\\t<MinAvailableAddrNum>2</MinAvailableAddrNum>\\r\\n\\t<MonitorConfigId>100abc</MonitorConfigId>\\r\\n\\t<MonitorStatus>OPEN</MonitorStatus>\\r\\n\\t<Name>名称测试1</Name>\\r\\n\\t<Status>AVAILABLE</Status>\\r\\n\\t<Type>IP</Type>\\r\\n\\t<UpdateTime>2018-01-03T08:57Z</UpdateTime>\\r\\n\\t<UpdateTimestamp>1527690629357</UpdateTimestamp>\\r\\n\\t<Addrs>\\r\\n\\t\\t<AddrId>123</AddrId>\\r\\n\\t\\t<CreateTime>2017-12-28T13:08Z</CreateTime>\\r\\n\\t\\t<CreateTimestamp>1527690629357</CreateTimestamp>\\r\\n\\t\\t<UpdateTime>2018-01-03T08:57Z</UpdateTime>\\r\\n\\t\\t<UpdateTimestamp>1527690629357</UpdateTimestamp>\\r\\n\\t\\t<Value>1.1.1.1</Value>\\r\\n\\t\\t<LbaWeight>1</LbaWeight>\\r\\n\\t\\t<Mode>SMART</Mode>\\r\\n\\t\\t<AlertStatus>OK</AlertStatus>\\r\\n\\t</Addrs>\\r\\n\\t<Addrs>\\r\\n\\t\\t<AddrId>234</AddrId>\\r\\n\\t\\t<CreateTime>2017-12-28T13:08Z</CreateTime>\\r\\n\\t\\t<CreateTimestamp>1527690629357</CreateTimestamp>\\r\\n\\t\\t<UpdateTime>2018-01-03T08:57Z</UpdateTime>\\r\\n\\t\\t<UpdateTimestamp>1527690629357</UpdateTimestamp>\\r\\n\\t\\t<Value>2.2.2.2</Value>\\r\\n\\t\\t<LbaWeight>1</LbaWeight>\\r\\n\\t\\t<Mode>SMART</Mode>\\r\\n\\t\\t<AlertStatus>OK</AlertStatus>\\r\\n\\t</Addrs>\\r\\n</DescribeGtmInstanceAddressPoolResponse>","errorExample":""}]',
      'title' => '获取地址池详细信息（旧版）',
      'summary' => '获取地址池详细信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmInstanceAddressPools' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'GTM实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtmtest',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页码，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为1，默认为1。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'AddrPools' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AddrPool' => 
                  array (
                    'description' => '地址池列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '地址池类型：

- **IP**：IP地址
- **DOMAIN**：域名',
                          'type' => 'string',
                          'example' => 'IP',
                        ),
                        'Status' => 
                        array (
                          'description' => '地址池可用状态：

- **AVAILABLE**：可用
- **NOT_AVAILABLE**：不可用',
                          'type' => 'string',
                          'example' => 'AVAILABLE',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '更新时间。',
                          'type' => 'string',
                          'example' => '2017-12-28T13:08Z',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2017-12-28T13:08Z',
                        ),
                        'MonitorConfigId' => 
                        array (
                          'description' => '监控配置ID。',
                          'type' => 'string',
                          'example' => '100abc',
                        ),
                        'MinAvailableAddrNum' => 
                        array (
                          'description' => '最小可用地址数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '更新时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'MonitorStatus' => 
                        array (
                          'description' => '监控状态。其中：

- **OPEN**：开启
- **CLOSE**：关闭
- **UNCONFIGURED**：未配置',
                          'type' => 'string',
                          'example' => 'OPEN',
                        ),
                        'AddrPoolId' => 
                        array (
                          'description' => '地址池ID。',
                          'type' => 'string',
                          'example' => 'hrbpnf',
                        ),
                        'Name' => 
                        array (
                          'description' => '地址池名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'AddrCount' => 
                        array (
                          'description' => '地址数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 20,\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 2,\\n  \\"AddrPools\\": {\\n    \\"AddrPool\\": [\\n      {\\n        \\"Type\\": \\"IP\\",\\n        \\"Status\\": \\"AVAILABLE\\",\\n        \\"UpdateTime\\": \\"2017-12-28T13:08Z\\",\\n        \\"CreateTime\\": \\"2017-12-28T13:08Z\\",\\n        \\"MonitorConfigId\\": \\"100abc\\",\\n        \\"MinAvailableAddrNum\\": 2,\\n        \\"UpdateTimestamp\\": 1527690629357,\\n        \\"MonitorStatus\\": \\"OPEN\\",\\n        \\"AddrPoolId\\": \\"hrbpnf\\",\\n        \\"Name\\": \\"test\\",\\n        \\"AddrCount\\": 2,\\n        \\"CreateTimestamp\\": 1527690629357\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmInstanceAddressPoolsResponse>\\r\\n<PageNumber>1</PageNumber>\\r\\n\\t<PageSize>20</PageSize>\\r\\n\\t<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n\\t<TotalItems>2</TotalItems>\\r\\n\\t<TotalPages>1</TotalPages>\\r\\n\\t<AddrPools>\\r\\n\\t\\t<AddrPoolId>1234abc</AddrPoolId>\\r\\n\\t\\t<CreateTime>2017-12-28T13:08Z</CreateTime>\\r\\n\\t\\t<CreateTimestamp>1527690629357</CreateTimestamp>\\r\\n\\t\\t<AddrCount>2</AddrCount>\\r\\n\\t\\t<MinAvailableAddrNum>2</MinAvailableAddrNum>\\r\\n\\t\\t<MonitorConfigId>100abc</MonitorConfigId>\\r\\n\\t\\t<MonitorStatus>OPEN</MonitorStatus>\\r\\n\\t\\t<Name>名称测试1</Name>\\r\\n\\t\\t<Status>AVAILABLE</Status>\\r\\n\\t\\t<Type>IP</Type>\\r\\n\\t\\t<UpdateTime>2018-01-03T08:57Z</UpdateTime>\\r\\n\\t\\t<UpdateTimestamp>1527690629357</UpdateTimestamp>\\r\\n\\t</AddrPools>\\r\\n\\t<AddrPools>\\r\\n\\t\\t<AddrPoolId>2345abc</AddrPoolId>\\r\\n\\t\\t<CreateTime>2017-12-28T13:08Z</CreateTime>\\r\\n\\t\\t<CreateTimestamp>1527690629357</CreateTimestamp>\\r\\n\\t\\t<AddrCount>2</AddrCount>\\r\\n\\t\\t<MinAvailableAddrNum>2</MinAvailableAddrNum>\\r\\n\\t\\t<MonitorConfigId>101abc</MonitorConfigId>\\r\\n\\t\\t<MonitorStatus>OPEN</MonitorStatus>\\r\\n\\t\\t<Name>名称测试2</Name>\\r\\n\\t\\t<Status>AVAILABLE</Status>\\r\\n\\t\\t<Type>IP</Type>\\r\\n\\t\\t<UpdateTime>2018-01-03T08:57Z</UpdateTime>\\r\\n\\t\\t<UpdateTimestamp>1527690629357</UpdateTimestamp>\\r\\n\\t</AddrPools>\\r\\n</DescribeGtmInstanceAddressPoolsResponse>","errorExample":""}]',
      'title' => '获取GTM实例地址池列表（旧版）',
      'summary' => '获取GTM实例地址池列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddDnsGtmMonitor' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'AddrPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池id。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pool1',
          ),
        ),
        2 => 
        array (
          'name' => 'ProtocolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '检查协议：

- HTTP
- HTTPS
- PING
- TCP',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'TCP',
          ),
        ),
        3 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '检查间隔，单位秒。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '60',
            'minimum' => '15',
            'example' => '60',
          ),
        ),
        4 => 
        array (
          'name' => 'EvaluationCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续次数。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '3',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '超时时间，单位毫秒。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '10000',
            'minimum' => '1000',
            'example' => '3000',
          ),
        ),
        6 => 
        array (
          'name' => 'MonitorExtendInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展信息，各协议检查所需参数：

- HTTP(S)：

	- port：检查端口
	- host：Host设置
	- path：URL路径
	- code：返回码大于某个数值时则判定健康检查异常。
	- failureRate：失败率
	- sni：是否开启sni，仅在HTTPS协议时使用。
	    - true-开启
	    - false-未开启
	- nodeType：地址池类型为DOMAIN时，健康检查监控节点类型：
	    - IPV4
	    - IPV6

- PING：

	- failureRate：失败率
	- packetNum：ping包数
	- packetLossRate：ping丢包率
	- nodeType：地址池类型为DOMAIN时，健康检查监控节点类型：
	    - IPV4
	    - IPV6

- TCP：

	- port：检查端口
	- failureRate：失败率
	- nodeType：地址池类型为DOMAIN时，健康检查监控节点类型：
	    - IPV4
	    - IPV6',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
            ),
            'example' => '该字段为JSON字符串
{"failureRate":50,"port":80}',
          ),
        ),
        7 => 
        array (
          'name' => 'IspCityNode',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '监控城市节点列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'CityCode' => 
                array (
                  'description' => '监控节点-城市code。

',
                  'type' => 'string',
                  'required' => false,
                  'example' => '123',
                ),
                'IspCode' => 
                array (
                  'description' => '监控节点-运营商code。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '123',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'MonitorConfigId' => 
              array (
                'description' => '健康检查配置id。

',
                'type' => 'string',
                'example' => 'MonitorConfigId1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"MonitorConfigId\\": \\"MonitorConfigId1\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\n<MonitorConfigId>MonitorConfigId1</MonitorConfigId>","errorExample":""}]',
      'title' => '添加健康检查',
      'summary' => '创建健康检查。',
      'description' => '****',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddGtmMonitor' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'AddrPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'xxxx',
          ),
        ),
        2 => 
        array (
          'name' => 'ProtocolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '检查协议。取值：

- HTTP
- HTTPS
- PING
- TCP',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HTTP',
          ),
        ),
        3 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '检查间隔，单位：秒，取值范围：60。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '60',
          ),
        ),
        4 => 
        array (
          'name' => 'EvaluationCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续失败次数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '3',
          ),
        ),
        5 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '超时时间，单位：毫秒，取值范围：2000、3000、5000、10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '3000',
          ),
        ),
        6 => 
        array (
          'name' => 'MonitorExtendInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展信息。根据不同协议，进行传参：

HTTP、HTTPS：

- port：检查端口
- failureRate：失败比例
- code：返回码（大于此值会被判定为异常）。取值：400、500。
- host：Host设置
- path：URL路径

PING:

- packetNum：ping包数
- packetLossRate：丢包率
- failureRate：失败比例

TCP：

- port：检查端口
- failureRate：失败比例',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{\\"code\\":200,\\"path\\":\\"/index.htm\\",\\"host\\":\\"aliyun.com\\"}',
          ),
        ),
        7 => 
        array (
          'name' => 'IspCityNode',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '监控城市节点列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '监控城市节点。',
              'type' => 'object',
              'properties' => 
              array (
                'CityCode' => 
                array (
                  'description' => '城市Code。

具体取值可参考：DescribeGtmMonitorAvailableConfig接口返回数据。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '503',
                ),
                'IspCode' => 
                array (
                  'description' => '具体取值可参考：DescribeGtmMonitorAvailableConfig接口返回数据。

- GroupType为BGP或Overseas时，IspCityNode.N.IspCode为非必传值，默认为465。
- GroupType为非BGP或Overseas时，IspCityNode.N.IspCode为必传值。并与IspCityNode.N.CityCode匹配使用。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '465',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'MonitorConfigId' => 
              array (
                'description' => '健康检查配置ID',
                'type' => 'string',
                'example' => '1234abc',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"MonitorConfigId\\": \\"1234abc\\"\\n}","errorExample":""},{"type":"xml","example":"<AddGtmMonitorResponse>\\r\\n\\t<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n\\t<MonitorConfigId>1234abc</MonitorConfigId>\\r\\n</AddGtmMonitorResponse>","errorExample":""}]',
      'title' => '添加健康检查（旧版）',
      'summary' => '创建健康检查。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateDnsGtmMonitor' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'MonitorConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查配置id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'MonitorConfigId1',
          ),
        ),
        2 => 
        array (
          'name' => 'ProtocolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '检查协议：

- HTTP
- HTTPS
- PING
- TCP',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'http',
          ),
        ),
        3 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '检查间隔，单位秒。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '60',
            'minimum' => '15',
            'example' => '60',
          ),
        ),
        4 => 
        array (
          'name' => 'EvaluationCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续次数。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '3',
            'minimum' => '1',
            'example' => '2',
          ),
        ),
        5 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '超时时间，单位毫秒。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10000',
            'minimum' => '1000',
            'example' => '30000',
          ),
        ),
        6 => 
        array (
          'name' => 'MonitorExtendInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展信息，各协议检查所需参数：

- HTTP(S)：

	- port：检查端口
	- host：Host设置
	- path：URL路径
	- code：返回码大于设定值时则认为健康检查异常，例如设置为400，当返回码为404时，判定健康检查结果异常。
	- failureRate：失败率
	- sni：是否开启sni，仅在HTTPS协议时使用。
	    - true-开启
	    - false-未开启
	- nodeType：地址池类型为DOMAIN时，健康检查监控节点类型：
	    - IPV4
	    - IPV6

- PING：

	- failureRate：失败率
	- packetNum：ping包数
	- packetLossRate：ping丢包率
	- nodeType：地址池类型为DOMAIN时，健康检查监控节点类型：
	    - IPV4
	    - IPV6

- TCP：

	- port：检查端口
	- failureRate：失败率
	- nodeType：地址池类型为DOMAIN时，健康检查监控节点类型：
	    - IPV4
	    - IPV6',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{\\"code\\":200,\\"path\\":\\"\\\\index.htm\\",\\"host\\":\\"aliyun.com\\"}',
          ),
        ),
        7 => 
        array (
          'name' => 'IspCityNode',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '监控城市节点列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'CityCode' => 
                array (
                  'description' => '监控节点-城市Code。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '123',
                ),
                'IspCode' => 
                array (
                  'description' => '监控节点-运营商code。

',
                  'type' => 'string',
                  'required' => false,
                  'example' => '123',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>","errorExample":""}]',
      'title' => '修改健康检查',
      'summary' => '修改健康检查。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateGtmMonitor' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'MonitorConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查配置ID',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1234abc',
          ),
        ),
        2 => 
        array (
          'name' => 'ProtocolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '检查协议',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'HTTP',
          ),
        ),
        3 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '检查间隔，单位：秒，取值范围：60。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
        4 => 
        array (
          'name' => 'EvaluationCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续次数',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
        5 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '超时时间，单位：毫秒，取值范围：2000、3000、5000、10000。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3000',
          ),
        ),
        6 => 
        array (
          'name' => 'MonitorExtendInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '扩展信息。根据不同协议，进行传参：

HTTP、HTTPS：

- port：检查端口
- failureRate：失败率
- code：返回码（大于此值会被判定为异常）。取值：400、500。
- host：Host设置
- path：URL路径

PING:

- packetNum：ping包数
- packetLossRate：ping丢包率
- failureRate：失败率

TCP：

- port：检查端口
- failureRate：失败率',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{\\"code\\":200,\\"path\\":\\"\\\\index.htm\\",\\"host\\":\\"aliyun.com\\"}',
          ),
        ),
        7 => 
        array (
          'name' => 'IspCityNode',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '监控城市节点列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'CityCode' => 
                array (
                  'description' => '城市Code',
                  'type' => 'string',
                  'required' => false,
                  'example' => '572',
                ),
                'IspCode' => 
                array (
                  'description' => '- 具体取值可参考：DescribeGtmMonitorAvailableConfig接口返回数据。
- GroupType为BGP或Overseas时，IspCityNode.N.IspCode为非必传值，默认为465。
- GroupType为非BGP或Overseas时，IspCityNode.N.IspCode为必传值。并与IspCityNode.N.CityCode匹配使用。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '465',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateGtmMonitorResponse>\\r\\n<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n</UpdateGtmMonitorResponse>","errorExample":""}]',
      'title' => '修改健康检查（旧版）',
      'summary' => '修改健康检查。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetDnsGtmMonitorStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'MonitorConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查配置id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'MonitorConfigId1',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开启状态：

- OPEN：开启
- CLOSE：关闭

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'OPEN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>","errorExample":""}]',
      'title' => '设置 DNS 地址池健康检查状态',
      'summary' => '设置地址池健康检查状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetGtmMonitorStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'MonitorConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查配置ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'abc1234',
          ),
        ),
        2 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开启状态。取值：

- **OPEN**：开启
- **CLOSE**：关闭',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'OPEN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<SetGtmMonitorStatusResponse>\\r\\n<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n</SetGtmMonitorStatusResponse>","errorExample":""}]',
      'title' => '设置地址池健康检查状态（旧版）',
      'summary' => '设置地址池健康检查状态。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmMonitorAvailableConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'IspCityNodes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'IspCityNode' => 
                  array (
                    'description' => '监控节点列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '监控节点。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CityCode' => 
                        array (
                          'description' => '城市编码。',
                          'type' => 'string',
                          'example' => '503',
                        ),
                        'Mainland' => 
                        array (
                          'description' => '是否是中国内地。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '节点分组名称。',
                          'type' => 'string',
                          'example' => '国际节点',
                        ),
                        'IspCode' => 
                        array (
                          'description' => '运营商编码

- GroupType为BGP或Overseas时，IspCode为非必传值，默认为465。
- GroupType为非BGP或Overseas时，IspCode为必传值。并与CityCode匹配使用。',
                          'type' => 'string',
                          'example' => '465',
                        ),
                        'CityName' => 
                        array (
                          'description' => '城市展示名。',
                          'type' => 'string',
                          'example' => '张家口市',
                        ),
                        'IspName' => 
                        array (
                          'description' => '运营商展示名（目前仅阿里巴巴）。',
                          'type' => 'string',
                          'example' => '阿里巴巴',
                        ),
                        'GroupType' => 
                        array (
                          'description' => '节点分组类型：当前支持
BGP：BGP节点；
OVERSEAS：国际节点；
ISP：运营商节点。',
                          'type' => 'string',
                          'example' => 'OVERSEAS',
                        ),
                        'DefaultSelected' => 
                        array (
                          'description' => '是否默认选中。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"IspCityNodes\\": {\\n    \\"IspCityNode\\": [\\n      {\\n        \\"CityCode\\": \\"503\\",\\n        \\"Mainland\\": true,\\n        \\"GroupName\\": \\"国际节点\\",\\n        \\"IspCode\\": \\"465\\",\\n        \\"CityName\\": \\"张家口市\\",\\n        \\"IspName\\": \\"阿里巴巴\\",\\n        \\"GroupType\\": \\"OVERSEAS\\",\\n        \\"DefaultSelected\\": true\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmMonitorAvailableConfigResponse>\\r\\n\\t<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n\\t<IspCityNodes>\\r\\n\\t\\t<IspName>阿里巴巴</IspName>\\r\\n\\t\\t<IspCode>465</IspCode>\\r\\n\\t\\t<City>张家口市</City>\\r\\n\\t\\t<CityCode>503</CityCode>\\r\\n\\t\\t<DefaultSelected>true</DefaultSelected>\\r\\n\\t\\t<Mainland>true</Mainland>\\r\\n\\t</IspCityNodes>\\r\\n\\t<IspCityNodes>\\r\\n\\t\\t<IspName>阿里巴巴</IspName>\\r\\n\\t\\t<IspCode>465</IspCode>\\r\\n\\t\\t<City>青岛市</City>\\r\\n\\t\\t<CityCode>572</CityCode>\\r\\n\\t\\t<DefaultSelected>false</DefaultSelected>\\r\\n\\t\\t<Mainland>true</Mainland>\\r\\n\\t</IspCityNodes>\\r\\n</DescribeGtmMonitorAvailableConfigResponse>","errorExample":""}]',
      'title' => '获取健康检查可设置的配置（旧版）',
      'summary' => '获取健康检查可设置的配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmMonitorConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'MonitorConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查配置ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'Timeout' => 
              array (
                'description' => '超时时间，单位：毫秒，取值范围：2000、3000、5000、10000。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3000',
              ),
              'ProtocolType' => 
              array (
                'description' => '检查协议。',
                'type' => 'string',
                'example' => 'HTTP',
              ),
              'IspCityNodes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'IspCityNode' => 
                  array (
                    'description' => '监控节点列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '监控节点。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CityCode' => 
                        array (
                          'description' => '城市编码。',
                          'type' => 'string',
                          'example' => '503',
                        ),
                        'CountryName' => 
                        array (
                          'description' => '国家展示名。',
                          'type' => 'string',
                          'example' => '中国',
                        ),
                        'IspCode' => 
                        array (
                          'description' => '运营商Code。',
                          'type' => 'string',
                          'example' => '465',
                        ),
                        'CityName' => 
                        array (
                          'description' => '城市展示名。',
                          'type' => 'string',
                          'example' => '张家口市',
                        ),
                        'CountryCode' => 
                        array (
                          'description' => '国家编码。',
                          'type' => 'string',
                          'example' => '001',
                        ),
                        'IspName' => 
                        array (
                          'description' => '运营商名称。',
                          'type' => 'string',
                          'example' => '阿里巴巴',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'CreateTime' => 
              array (
                'description' => '创建时间。',
                'type' => 'string',
                'example' => '2017-12-28T13:08Z',
              ),
              'UpdateTime' => 
              array (
                'description' => '更新时间。',
                'type' => 'string',
                'example' => '2017-12-28T13:08Z',
              ),
              'EvaluationCount' => 
              array (
                'description' => '连续次数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'UpdateTimestamp' => 
              array (
                'description' => '更新时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'MonitorExtendInfo' => 
              array (
                'description' => '扩展信息。根据不同协议，进行传参：

HTTP、HTTPS：

- port：检查端口
- failureRate：失败率
- code：返回码（大于此值会被判定为异常）。取值：400、500。
- host：Host设置
- path：URL路径

PING:

- packetNum：ping包数
- packetLossRate：ping丢包率
- failureRate：失败率

TCP：

- port：检查端口
- failureRate：失败率',
                'type' => 'string',
                'example' => '{\\"code\\":200,\\"path\\":\\"\\\\index.htm\\",\\"host\\":\\"aliyun.com\\"}',
              ),
              'MonitorConfigId' => 
              array (
                'description' => '健康检查配置ID。',
                'type' => 'string',
                'example' => '1234abc',
              ),
              'CreateTimestamp' => 
              array (
                'description' => '创建时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'Interval' => 
              array (
                'description' => '检查间隔，单位：秒，取值范围：60。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '60',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"Timeout\\": 3000,\\n  \\"ProtocolType\\": \\"HTTP\\",\\n  \\"IspCityNodes\\": {\\n    \\"IspCityNode\\": [\\n      {\\n        \\"CityCode\\": \\"503\\",\\n        \\"CountryName\\": \\"中国\\",\\n        \\"IspCode\\": \\"465\\",\\n        \\"CityName\\": \\"张家口市\\",\\n        \\"CountryCode\\": \\"001\\",\\n        \\"IspName\\": \\"阿里巴巴\\"\\n      }\\n    ]\\n  },\\n  \\"CreateTime\\": \\"2017-12-28T13:08Z\\",\\n  \\"UpdateTime\\": \\"2017-12-28T13:08Z\\",\\n  \\"EvaluationCount\\": 3,\\n  \\"UpdateTimestamp\\": 1527690629357,\\n  \\"MonitorExtendInfo\\": \\"{\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\":200,\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\index.htm\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"host\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"aliyun.com\\\\\\\\\\\\\\"}\\",\\n  \\"MonitorConfigId\\": \\"1234abc\\",\\n  \\"CreateTimestamp\\": 1527690629357,\\n  \\"Interval\\": 60\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmMonitorConfigResponse>\\r\\n<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n\\t<MonitorConfigId>1234abc</MonitorConfigId>\\r\\n\\t<CreateTime>2017-12-28T13:08Z</CreateTime>\\r\\n\\t<CreateTimestamp>1527690629357</CreateTimestamp>\\r\\n\\t<UpdateTime>2018-01-03T08:57Z</UpdateTime>\\r\\n\\t<UpdateTimestamp>1527690629357</UpdateTimestamp>\\r\\n\\t<ProtocolType>HTTP</ProtocolType>\\r\\n\\t<Interval>60</Interval>\\r\\n\\t<EvaluationCount>3</EvaluationCount>\\r\\n\\t<Timeout>3000</Timeout>\\r\\n\\t<MonitorExtendInfo>{&quot;code&quot;:200,&quot;path&quot;:&quot;\\\\index.htm&quot;,&quot;host&quot;:&quot;aliyun.com&quot;}</MonitorExtendInfo>\\r\\n\\t<IspCityNodes>\\r\\n\\t\\t<CountryName>中国</CountryName>\\r\\n\\t\\t<CountryCode>001</CountryCode>\\r\\n\\t\\t<City>张家口市</City>\\r\\n\\t\\t<CityCode>503</CityCode>\\r\\n\\t</IspCityNodes>\\r\\n\\t<IspCityNodes>\\r\\n\\t\\t<CountryName>中国</CountryName>\\r\\n\\t\\t<CountryCode>001</CountryCode>\\r\\n\\t\\t<City>青岛市</City>\\r\\n\\t\\t<CityCode>572</CityCode>\\r\\n\\t</IspCityNodes>\\r\\n</DescribeGtmMonitorConfigResponse>","errorExample":""}]',
      'title' => '获取地址池健康检查配置（旧版）',
      'summary' => '获取地址池健康检查配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmMonitorAvailableConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Ipv4IspCityNodes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Ipv4IspCityNode' => 
                  array (
                    'description' => '公网Ipv4监控节点列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '公网ipv4监控节点。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CityCode' => 
                        array (
                          'description' => '城市编码。

',
                          'type' => 'string',
                          'example' => '503',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '节点分组名称。

',
                          'type' => 'string',
                          'example' => 'BGP节点',
                        ),
                        'IspCode' => 
                        array (
                          'description' => '运营商编码。

',
                          'type' => 'string',
                          'example' => '465',
                        ),
                        'CityName' => 
                        array (
                          'description' => '城市展示名。

',
                          'type' => 'string',
                          'example' => '张家口市',
                        ),
                        'IspName' => 
                        array (
                          'description' => '运营商展示名。

',
                          'type' => 'string',
                          'example' => '阿里巴巴',
                        ),
                        'GroupType' => 
                        array (
                          'description' => '节点分组类型，当前支持：

- BGP：BGP节点
- OVERSEAS：国际节点
- ISP：运营商节点',
                          'type' => 'string',
                          'example' => 'BGP',
                        ),
                        'DefaultSelected' => 
                        array (
                          'description' => '是否默认选中。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Ips' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Ip' => 
                            array (
                              'description' => '节点ip列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '节点IP列表。',
                                'type' => 'string',
                                'example' => '[
      "1.1.XX.XX",
      "2.2.XX.XX"
]',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'DomainIpv4IspCityNodes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DomainIpv4IspCityNode' => 
                  array (
                    'description' => '公网域名Ipv4监控节点列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '公网域名Ipv4监控节点。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CityCode' => 
                        array (
                          'description' => '城市编码。',
                          'type' => 'string',
                          'example' => '503',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '节点分组名称。',
                          'type' => 'string',
                          'example' => 'BGP节点',
                        ),
                        'IspCode' => 
                        array (
                          'description' => '运营商编码。',
                          'type' => 'string',
                          'example' => '465',
                        ),
                        'CityName' => 
                        array (
                          'description' => '城市展示名。',
                          'type' => 'string',
                          'example' => '张家口市',
                        ),
                        'IspName' => 
                        array (
                          'description' => '运营商展示名。',
                          'type' => 'string',
                          'example' => '阿里巴巴',
                        ),
                        'GroupType' => 
                        array (
                          'description' => '节点分组类型，当前支持：

- BGP：BGP节点
- OVERSEAS：国际节点
- ISP：运营商节点',
                          'type' => 'string',
                          'example' => 'BGP',
                        ),
                        'DefaultSelected' => 
                        array (
                          'description' => '是否默认选中。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Ips' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Ip' => 
                            array (
                              'description' => '节点ip列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '节点IP。',
                                'type' => 'string',
                                'example' => '[
      "1.1.XX.XX",
      "2.2.XX.XX"
]',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'DomainIpv6IspCityNodes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DomainIpv6IspCityNode' => 
                  array (
                    'description' => '公网域名Ipv6监控节点列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '公网域名ipv6监控节点。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CityCode' => 
                        array (
                          'description' => '城市编码。',
                          'type' => 'string',
                          'example' => '503',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '节点分组名称。',
                          'type' => 'string',
                          'example' => 'BGP节点',
                        ),
                        'IspCode' => 
                        array (
                          'description' => '运营商编码。',
                          'type' => 'string',
                          'example' => '465',
                        ),
                        'CityName' => 
                        array (
                          'description' => '城市展示名。',
                          'type' => 'string',
                          'example' => '张家口市',
                        ),
                        'IspName' => 
                        array (
                          'description' => '运营商展示名。',
                          'type' => 'string',
                          'example' => '阿里巴巴',
                        ),
                        'GroupType' => 
                        array (
                          'description' => '节点分组类型，当前支持：

- BGP：BGP节点
- OVERSEAS：国际节点
- ISP：运营商节点',
                          'type' => 'string',
                          'example' => 'BGP',
                        ),
                        'DefaultSelected' => 
                        array (
                          'description' => '是否默认选中。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Ips' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ip' => 
                            array (
                              'description' => '暂不开放此返回参数。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '暂不开放此返回参数。',
                                'type' => 'string',
                                'example' => '暂无',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Ipv6IspCityNodes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Ipv6IspCityNode' => 
                  array (
                    'description' => '公网Ipv6监控节点列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '公网Ipv6监控节点。

',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CityCode' => 
                        array (
                          'description' => '城市编码。

',
                          'type' => 'string',
                          'example' => '503',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '节点分组名称。

',
                          'type' => 'string',
                          'example' => 'BGP节点',
                        ),
                        'IspCode' => 
                        array (
                          'description' => '运营商编码。

',
                          'type' => 'string',
                          'example' => '465',
                        ),
                        'CityName' => 
                        array (
                          'description' => '城市展示名。

',
                          'type' => 'string',
                          'example' => '张家口市',
                        ),
                        'IspName' => 
                        array (
                          'description' => '运营商展示名。

',
                          'type' => 'string',
                          'example' => '阿里巴巴',
                        ),
                        'GroupType' => 
                        array (
                          'description' => '节点分组类型，当前支持：

- BGP：BGP节点
- OVERSEAS：国际节点
- ISP：运营商节点',
                          'type' => 'string',
                          'example' => 'BGP',
                        ),
                        'DefaultSelected' => 
                        array (
                          'description' => '是否默认选中。

',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Ips' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Ip' => 
                            array (
                              'description' => '暂不开放此返回参数。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '暂不开放此返回参数。',
                                'type' => 'string',
                                'example' => '暂无',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Ipv4IspCityNodes\\": {\\n    \\"Ipv4IspCityNode\\": [\\n      {\\n        \\"CityCode\\": \\"503\\",\\n        \\"GroupName\\": \\"BGP节点\\",\\n        \\"IspCode\\": \\"465\\",\\n        \\"CityName\\": \\"张家口市\\",\\n        \\"IspName\\": \\"阿里巴巴\\",\\n        \\"GroupType\\": \\"BGP\\",\\n        \\"DefaultSelected\\": true,\\n        \\"Ips\\": {\\n          \\"Ip\\": [\\n            \\"[\\\\n      \\\\\\"1.1.XX.XX\\\\\\",\\\\n      \\\\\\"2.2.XX.XX\\\\\\"\\\\n]\\"\\n          ]\\n        }\\n      }\\n    ]\\n  },\\n  \\"DomainIpv4IspCityNodes\\": {\\n    \\"DomainIpv4IspCityNode\\": [\\n      {\\n        \\"CityCode\\": \\"503\\",\\n        \\"GroupName\\": \\"BGP节点\\",\\n        \\"IspCode\\": \\"465\\",\\n        \\"CityName\\": \\"张家口市\\",\\n        \\"IspName\\": \\"阿里巴巴\\",\\n        \\"GroupType\\": \\"BGP\\",\\n        \\"DefaultSelected\\": true,\\n        \\"Ips\\": {\\n          \\"Ip\\": [\\n            \\"[\\\\n      \\\\\\"1.1.XX.XX\\\\\\",\\\\n      \\\\\\"2.2.XX.XX\\\\\\"\\\\n]\\"\\n          ]\\n        }\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"DomainIpv6IspCityNodes\\": {\\n    \\"DomainIpv6IspCityNode\\": [\\n      {\\n        \\"CityCode\\": \\"503\\",\\n        \\"GroupName\\": \\"BGP节点\\",\\n        \\"IspCode\\": \\"465\\",\\n        \\"CityName\\": \\"张家口市\\",\\n        \\"IspName\\": \\"阿里巴巴\\",\\n        \\"GroupType\\": \\"BGP\\",\\n        \\"DefaultSelected\\": false,\\n        \\"Ips\\": {\\n          \\"ip\\": [\\n            \\"暂无\\"\\n          ]\\n        }\\n      }\\n    ]\\n  },\\n  \\"Ipv6IspCityNodes\\": {\\n    \\"Ipv6IspCityNode\\": [\\n      {\\n        \\"CityCode\\": \\"503\\",\\n        \\"GroupName\\": \\"BGP节点\\",\\n        \\"IspCode\\": \\"465\\",\\n        \\"CityName\\": \\"张家口市\\",\\n        \\"IspName\\": \\"阿里巴巴\\",\\n        \\"GroupType\\": \\"BGP\\",\\n        \\"DefaultSelected\\": true,\\n        \\"Ips\\": {\\n          \\"Ip\\": [\\n            \\"暂无\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Ipv4IspCityNodes>\\n    <Ipv4IspCityNode>\\n        <CityCode>503</CityCode>\\n        <GroupName>BGP节点</GroupName>\\n        <IspName>阿里巴巴</IspName>\\n        <GroupType>BGP</GroupType>\\n        <CityName>张家口市</CityName>\\n        <IspCode>465</IspCode>\\n        <DefaultSelected>true</DefaultSelected>\\n        <Ips>\\n            <Ip>1.1.1.1</Ip>\\n            <Ip>2.2.2.2</Ip>\\n        </Ips>\\n    </Ipv4IspCityNode>\\n</Ipv4IspCityNodes>\\n<DomainIpv4IspCityNodes>\\n    <DomainIpv4IspCityNode>\\n        <CityCode>503</CityCode>\\n        <GroupName>BGP节点</GroupName>\\n        <IspName>阿里巴巴</IspName>\\n        <GroupType>BGP</GroupType>\\n        <CityName>张家口市</CityName>\\n        <IspCode>465</IspCode>\\n        <DefaultSelected>true</DefaultSelected>\\n        <Ips>\\n            <Ip>1.1.1.1</Ip>\\n            <Ip>2.2.2.2</Ip>\\n        </Ips>\\n    </DomainIpv4IspCityNode>\\n</DomainIpv4IspCityNodes>\\n<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\n<DomainIpv6IspCityNodes>\\n    <DomainIpv6IspCityNode>\\n        <CityCode>503</CityCode>\\n        <GroupName>BGP节点</GroupName>\\n        <IspName>阿里巴巴</IspName>\\n        <GroupType>BGP</GroupType>\\n        <CityName>张家口市</CityName>\\n        <IspCode>465</IspCode>\\n        <DefaultSelected>false</DefaultSelected>\\n    </DomainIpv6IspCityNode>\\n</DomainIpv6IspCityNodes>\\n<Ipv6IspCityNodes>\\n    <Ipv6IspCityNode>\\n        <CityCode>503</CityCode>\\n        <GroupName>BGP节点</GroupName>\\n        <IspName>阿里巴巴</IspName>\\n        <GroupType>BGP</GroupType>\\n        <CityName>张家口市</CityName>\\n        <IspCode>465</IspCode>\\n        <DefaultSelected>true</DefaultSelected>\\n    </Ipv6IspCityNode>\\n</Ipv6IspCityNodes>","errorExample":""}]',
      'title' => '获取 DNS 健康检查可设置的配置',
      'summary' => '获取健康检查可设置的配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmMonitorConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'MonitorConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查配置id。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'MonitorConfigId1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'Timeout' => 
              array (
                'description' => '超时时间。单位毫秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3000',
              ),
              'ProtocolType' => 
              array (
                'description' => '检查协议：

- HTTP
- HTTPS
- PING
- TCP',
                'type' => 'string',
                'example' => 'TCP',
              ),
              'IspCityNodes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'IspCityNode' => 
                  array (
                    'description' => '监控节点列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '监控节点。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CityCode' => 
                        array (
                          'description' => '城市编码。',
                          'type' => 'string',
                          'example' => '572',
                        ),
                        'CountryName' => 
                        array (
                          'description' => '国家展示名。

',
                          'type' => 'string',
                          'example' => '中国',
                        ),
                        'IspCode' => 
                        array (
                          'description' => '运营商编码。

',
                          'type' => 'string',
                          'example' => '123',
                        ),
                        'CityName' => 
                        array (
                          'description' => '城市展示名。

',
                          'type' => 'string',
                          'example' => '青岛市',
                        ),
                        'CountryCode' => 
                        array (
                          'description' => '国家编码。

',
                          'type' => 'string',
                          'example' => '001',
                        ),
                        'IspName' => 
                        array (
                          'description' => '运营商名称。

',
                          'type' => 'string',
                          'example' => '阿里巴巴',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'CreateTime' => 
              array (
                'description' => '创建时间。',
                'type' => 'string',
                'example' => '2017-12-28T13:08Z',
              ),
              'UpdateTime' => 
              array (
                'description' => '更新时间。',
                'type' => 'string',
                'example' => '2018-01-03T08:57Z',
              ),
              'EvaluationCount' => 
              array (
                'description' => '连续失败次数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'UpdateTimestamp' => 
              array (
                'description' => '更新时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'MonitorExtendInfo' => 
              array (
                'description' => '扩展信息，各协议检查所需参数：

- HTTP(S)：

	- port：检查端口
	- host：Host设置
	- path：URL路径
	- code：返回码大于
	- failureRate：失败率
	- sni：是否开启sni，仅在HTTPS协议时使用。
	    - true-开启
	    - false-未开启
	- nodeType：地址池类型为DOMAIN时，健康检查监控节点类型：
	    - IPV4
	    - IPV6

- PING：

	- failureRate：失败率
	- packetNum：ping包数
	- packetLossRate：ping丢包率
	- nodeType：地址池类型为DOMAIN时，健康检查监控节点类型：
	    - IPV4
	    - IPV6

- TCP：

	- port：检查端口
	- failureRate：失败率
	- nodeType：地址池类型为DOMAIN时，健康检查监控节点类型：
	    - IPV4
	    - IPV6

',
                'type' => 'string',
                'example' => '{\\"code\\":200,\\"path\\":\\"\\\\index.htm\\",\\"host\\":\\"aliyun.com\\"}',
              ),
              'MonitorConfigId' => 
              array (
                'description' => '健康检查配置id。

',
                'type' => 'string',
                'example' => 'MonitorConfigId1',
              ),
              'CreateTimestamp' => 
              array (
                'description' => '创建时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'Interval' => 
              array (
                'description' => '检查间隔，单位秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"Timeout\\": 3000,\\n  \\"ProtocolType\\": \\"TCP\\",\\n  \\"IspCityNodes\\": {\\n    \\"IspCityNode\\": [\\n      {\\n        \\"CityCode\\": \\"572\\",\\n        \\"CountryName\\": \\"中国\\",\\n        \\"IspCode\\": \\"123\\",\\n        \\"CityName\\": \\"青岛市\\",\\n        \\"CountryCode\\": \\"001\\",\\n        \\"IspName\\": \\"阿里巴巴\\"\\n      }\\n    ]\\n  },\\n  \\"CreateTime\\": \\"2017-12-28T13:08Z\\",\\n  \\"UpdateTime\\": \\"2018-01-03T08:57Z\\",\\n  \\"EvaluationCount\\": 3,\\n  \\"UpdateTimestamp\\": 1527690629357,\\n  \\"MonitorExtendInfo\\": \\"{\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\":200,\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\index.htm\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"host\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"aliyun.com\\\\\\\\\\\\\\"}\\",\\n  \\"MonitorConfigId\\": \\"MonitorConfigId1\\",\\n  \\"CreateTimestamp\\": 1527690629357,\\n  \\"Interval\\": 1\\n}","errorExample":""},{"type":"xml","example":"<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\n<Timeout>3000</Timeout>\\n<ProtocolType>http</ProtocolType>\\n<IspCityNodes>\\n    <IspCityNode>\\n        <CityCode>572</CityCode>\\n        <IspName>阿里巴巴</IspName>\\n        <CountryName>中国</CountryName>\\n        <CityName>青岛市</CityName>\\n        <CountryCode>001</CountryCode>\\n        <IspCode>123</IspCode>\\n    </IspCityNode>\\n</IspCityNodes>\\n<CreateTime>2017-12-28T13:08Z</CreateTime>\\n<UpdateTime>2018-01-03T08:57Z</UpdateTime>\\n<EvaluationCount>1</EvaluationCount>\\n<MonitorExtendInfo>\\"{\\\\\\"code\\\\\\":200,\\\\\\"path\\\\\\":\\\\\\"\\\\\\\\index.htm\\\\\\",\\\\\\"host\\\\\\":\\\\\\"aliyun.com\\\\\\"}\\"</MonitorExtendInfo>\\n<UpdateTimestamp>1527690629357</UpdateTimestamp>\\n<MonitorConfigId>MonitorConfigId1</MonitorConfigId>\\n<CreateTimestamp>1527690629357</CreateTimestamp>\\n<Interval>1</Interval>","errorExample":""}]',
      'title' => '获取 DNS 地址池健康检查配置',
      'summary' => '获取地址池健康检查配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddDnsGtmAccessStrategy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'instance1',
          ),
        ),
        2 => 
        array (
          'name' => 'StrategyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testStrategyName',
          ),
        ),
        3 => 
        array (
          'name' => 'Lines',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析请求来源。例如：`["default", "drpeng"]`，即全局策略和鹏博士。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '["default", "drpeng"]',
          ),
        ),
        4 => 
        array (
          'name' => 'DefaultAddrPoolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主地址池类型：

- IPV4
- IPV6
- DOMAIN',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'IPV4',
          ),
        ),
        5 => 
        array (
          'name' => 'DefaultLbaStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主地址池集合负载均衡策略：

- ALL_RR: 返回全部地址
- RATIO：按权重返回地址',
            'type' => 'string',
            'required' => false,
            'example' => 'ALL_RR',
          ),
        ),
        6 => 
        array (
          'name' => 'DefaultMinAvailableAddrNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主地址池集合最小可用地址数量。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '400',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'DefaultMaxReturnAddrNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主地址池集合最多返回地址数量。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '8',
            'minimum' => '1',
            'example' => '3',
          ),
        ),
        8 => 
        array (
          'name' => 'DefaultLatencyOptimization',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主地址池集合延时解析调度优化：

- OPEN：开启
- CLOSE：关闭',
            'type' => 'string',
            'required' => false,
            'example' => 'OPEN',
          ),
        ),
        9 => 
        array (
          'name' => 'FailoverAddrPoolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备地址池类型：

- IPV4
- IPV6
- DOMAIN',
            'type' => 'string',
            'required' => false,
            'example' => 'IPV4',
          ),
        ),
        10 => 
        array (
          'name' => 'FailoverLbaStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备地址池集合负载均衡策略：

- ALL_RR: 返回全部地址
- RATIO：按权重返回地址',
            'type' => 'string',
            'required' => false,
            'example' => 'ALL_RR',
          ),
        ),
        11 => 
        array (
          'name' => 'FailoverMinAvailableAddrNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备地址池集合最小可用地址数量。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '400',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        12 => 
        array (
          'name' => 'FailoverMaxReturnAddrNum',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备地址池集合最多返回地址数量。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '8',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        13 => 
        array (
          'name' => 'FailoverLatencyOptimization',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备地址池集合延时解析调度优化：

- OPEN：开启
- CLOSE：关闭',
            'type' => 'string',
            'required' => false,
            'example' => 'OPEN',
          ),
        ),
        14 => 
        array (
          'name' => 'StrategyMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问策略类型：

- GEO：基于地理位置的访问策略
- LATENCY：基于访问延时的访问策略',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'GEO',
          ),
        ),
        15 => 
        array (
          'name' => 'DefaultAddrPool',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '主地址池集合列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '主地址池集合。',
              'type' => 'object',
              'properties' => 
              array (
                'LbaWeight' => 
                array (
                  'description' => '主地址池集合列表中权重。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'Id' => 
                array (
                  'description' => '主地址池集合列表中地址池Id。

',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'pool1',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 100,
          ),
        ),
        16 => 
        array (
          'name' => 'FailoverAddrPool',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '备地址池集合，若未设置备地址池集合，输入"EMPTY"。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '备地址池集合。',
              'type' => 'object',
              'properties' => 
              array (
                'LbaWeight' => 
                array (
                  'description' => '备地址池集合列表中权重。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'Id' => 
                array (
                  'description' => '备地址池集合列表中地址池id。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'pool1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF55925',
              ),
              'StrategyId' => 
              array (
                'description' => '访问策略id。',
                'type' => 'string',
                'example' => 'testStrategyId1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DnsGtmSystemBusyness',
            'errorMessage' => ' ',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF55925\\",\\n  \\"StrategyId\\": \\"testStrategyId1\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>29D0F8F8-5499-4F6C-9FDC-1EE13BF55925</RequestId>\\n<StrategyId>testStrategyId1</StrategyId>","errorExample":""}]',
      'title' => '新增访问策略',
      'summary' => '新增访问策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddGtmAccessStrategy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'instance1',
          ),
        ),
        2 => 
        array (
          'name' => 'StrategyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '访问策略测试',
          ),
        ),
        3 => 
        array (
          'name' => 'DefaultAddrPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主地址池集合ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hrsix',
          ),
        ),
        4 => 
        array (
          'name' => 'FailoverAddrPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备地址池集合ID。

若未设置备地址池集合，参数输入**EMPTY**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hrsyw',
          ),
        ),
        5 => 
        array (
          'name' => 'AccessLines',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析请求来源。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '["default", "drpeng"]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF55925',
              ),
              'StrategyId' => 
              array (
                'description' => '策略ID。',
                'type' => 'string',
                'example' => 'strategyid',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF55925\\",\\n  \\"StrategyId\\": \\"strategyid\\"\\n}","errorExample":""},{"type":"xml","example":"<AddGtmAccessStrategyResponse>\\r\\n    <StrategyId>xxxx</StrategyId>\\r\\n\\t<RequestId>29D0F8F8-5499-4F6C-9FDC-1EE13BF55925</RequestId>\\r\\n</AddGtmAccessStrategyResponse>","errorExample":""}]',
      'title' => '新增访问策略（旧版）',
      'summary' => '根据传入参数新增访问策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDnsGtmAccessStrategy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testStrategyId1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF55925',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DnsGtmSystemBusyness',
            'errorMessage' => ' ',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF55925\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>29D0F8F8-5499-4F6C-9FDC-1EE13BF55925</RequestId>","errorExample":""}]',
      'title' => '删除访问策略',
      'summary' => '删除访问策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteGtmAccessStrategy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hrskc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求标识。',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF55925',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF55925\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteGtmAccessStrategyResponse>\\r\\n<RequestId>29D0F8F8-5499-4F6C-9FDC-1EE13BF55925</RequestId>\\r\\n</DeleteGtmAccessStrategyResponse>","errorExample":""}]',
      'title' => '删除访问策略（旧版）',
      'summary' => '根据传入参数删除访问策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateGtmAccessStrategy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hrmxc',
          ),
        ),
        2 => 
        array (
          'name' => 'StrategyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略名称。',
            'type' => 'string',
            'required' => false,
            'example' => '访问策略测试',
          ),
        ),
        3 => 
        array (
          'name' => 'DefaultAddrPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主地址池集合ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hrsix',
          ),
        ),
        4 => 
        array (
          'name' => 'FailoverAddrPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备地址池集合ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hrsyw',
          ),
        ),
        5 => 
        array (
          'name' => 'AccessLines',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '解析请求来源。',
            'type' => 'string',
            'required' => false,
            'example' => '["default", "mobile"]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF55925',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF55925\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateGtmAccessStrategyResponse>\\r\\n<RequestId>29D0F8F8-5499-4F6C-9FDC-1EE13BF55925</RequestId>\\r\\n</UpdateGtmAccessStrategyResponse>","errorExample":""}]',
      'title' => '修改访问策略（旧版）',
      'summary' => '根据传入参数修改访问策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetDnsGtmAccessMode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '策略Id。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hr**zb',
          ),
        ),
        2 => 
        array (
          'name' => 'AccessMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池集合切换策略：

- AUTO： 自动切换
- DEFAULT：主地址池集合
- FAILOVER： 备地址池集合',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'AUTO',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF55925',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DnsGtmSystemBusyness',
            'errorMessage' => ' ',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF55925\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>29D0F8F8-5499-4F6C-9FDC-1EE13BF55925</RequestId>","errorExample":""}]',
      'title' => '修改生效地址池切换策略',
      'summary' => '调整访问策略。',
      'description' => '****',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmAccessStrategies' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'StrategyMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问策略类型：

- GEO：基于地理位置的访问策略
- LATENCY：基于访问延时的访问策略',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'GEO',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '0CCC9971-CEC9-4132-824B-4AE611C07623',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Strategies' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Strategy' => 
                  array (
                    'description' => '策略列表。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'EffectiveLbaStrategy' => 
                        array (
                          'description' => '当前生效地址池集合均衡策略（StrategyMode为GEO有返回值）：

- ALL_RR: 返回全部地址
- RATIO：按权重返回地址',
                          'type' => 'string',
                          'example' => 'ALL_RR',
                        ),
                        'StrategyId' => 
                        array (
                          'description' => '访问策略id。',
                          'type' => 'string',
                          'example' => 'hrb5ju',
                        ),
                        'StrategyName' => 
                        array (
                          'description' => '访问策略名称。',
                          'type' => 'string',
                          'example' => 'strategname1',
                        ),
                        'EffectiveAddrPoolGroupType' => 
                        array (
                          'description' => '当前生效地址池集合类型：

- DEFAULT：主地址池集合
- FAILOVER： 备地址池集合',
                          'type' => 'string',
                          'example' => 'DEFAULT',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2018-08-09T00:10Z',
                        ),
                        'EffectiveAddrPools' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'EffectiveAddrPool' => 
                            array (
                              'description' => '当前生效地址池集合列表。

',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '当前生效地址池集合。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'LbaWeight' => 
                                  array (
                                    'description' => '权重。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'Name' => 
                                  array (
                                    'description' => '地址池名称。',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                  'AddrCount' => 
                                  array (
                                    'description' => '地址数量。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '3',
                                  ),
                                  'Id' => 
                                  array (
                                    'description' => '地址池id。',
                                    'type' => 'string',
                                    'example' => 'pool1',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1533773400000',
                        ),
                        'EffectiveAddrPoolType' => 
                        array (
                          'description' => '当前生效地址池类型：

- IPV4
- IPV6
- DOMAIN',
                          'type' => 'string',
                          'example' => 'IPV4',
                        ),
                        'Lines' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Line' => 
                            array (
                              'description' => '解析请求来源列表（StrategyMode为GEO有返回值）。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'GroupName' => 
                                  array (
                                    'description' => '解析请求来源分组名称。',
                                    'type' => 'string',
                                    'example' => 'Global',
                                  ),
                                  'LineCode' => 
                                  array (
                                    'description' => '解析请求来源编码。',
                                    'type' => 'string',
                                    'example' => 'default',
                                  ),
                                  'LineName' => 
                                  array (
                                    'description' => '解析请求来源名称。',
                                    'type' => 'string',
                                    'example' => 'Global',
                                  ),
                                  'GroupCode' => 
                                  array (
                                    'description' => '解析请求来源分组编码。',
                                    'type' => 'string',
                                    'example' => 'DEFAULT',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '11',
              ),
              'TotalItems' => 
              array (
                'description' => '总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '11',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 1,\\n  \\"RequestId\\": \\"0CCC9971-CEC9-4132-824B-4AE611C07623\\",\\n  \\"PageNumber\\": 1,\\n  \\"Strategies\\": {\\n    \\"Strategy\\": [\\n      {\\n        \\"EffectiveLbaStrategy\\": \\"ALL_RR\\",\\n        \\"StrategyId\\": \\"hrb5ju\\",\\n        \\"StrategyName\\": \\"strategname1\\",\\n        \\"EffectiveAddrPoolGroupType\\": \\"DEFAULT\\",\\n        \\"CreateTime\\": \\"2018-08-09T00:10Z\\",\\n        \\"EffectiveAddrPools\\": {\\n          \\"EffectiveAddrPool\\": [\\n            {\\n              \\"LbaWeight\\": 1,\\n              \\"Name\\": \\"test\\",\\n              \\"AddrCount\\": 3,\\n              \\"Id\\": \\"pool1\\"\\n            }\\n          ]\\n        },\\n        \\"CreateTimestamp\\": 1533773400000,\\n        \\"EffectiveAddrPoolType\\": \\"IPV4\\",\\n        \\"Lines\\": {\\n          \\"Line\\": [\\n            {\\n              \\"GroupName\\": \\"Global\\",\\n              \\"LineCode\\": \\"default\\",\\n              \\"LineName\\": \\"Global\\",\\n              \\"GroupCode\\": \\"DEFAULT\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  },\\n  \\"TotalPages\\": 11,\\n  \\"TotalItems\\": 11\\n}","errorExample":""},{"type":"xml","example":"<PageSize>1</PageSize>\\n<RequestId>0CCC9971-CEC9-4132-824B-4AE611C07623</RequestId>\\n<PageNumber>1</PageNumber>\\n<Strategies>\\n    <Strategy>\\n        <StrategyName>strategname1</StrategyName>\\n        <EffectiveAddrPoolType>ipv4</EffectiveAddrPoolType>\\n        <EffectiveAddrPoolGroupType>default</EffectiveAddrPoolGroupType>\\n        <CreateTime>2018-08-09T00:10Z</CreateTime>\\n        <StrategyId>strategyid1</StrategyId>\\n        <CreateTimestamp>1533773400000</CreateTimestamp>\\n        <EffectiveLbaStrategy>all_rr</EffectiveLbaStrategy>\\n    </Strategy>\\n    <Strategy>\\n        <EffectiveAddrPools>\\n            <EffectiveAddrPool>\\n                <Id>pool1</Id>\\n                <LbaWeight>1</LbaWeight>\\n                <AddrCount>3</AddrCount>\\n                <Name>test</Name>\\n            </EffectiveAddrPool>\\n        </EffectiveAddrPools>\\n        <Lines>\\n            <Line>\\n                <GroupName>global</GroupName>\\n                <GroupCode>default</GroupCode>\\n                <LineCode>default</LineCode>\\n                <LineName>global</LineName>\\n            </Line>\\n        </Lines>\\n    </Strategy>\\n</Strategies>\\n<TotalPages>11</TotalPages>\\n<TotalItems>11</TotalItems>","errorExample":""}]',
      'title' => '获取实例访问策略列表',
      'summary' => '获取实例访问策略列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmAccessStrategy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问策略id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hrb5ju',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'FailoverMinAvailableAddrNum' => 
              array (
                'description' => '备地址池集合最小可用地址数量。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'DefaultAddrPoolType' => 
              array (
                'description' => '主地址池类型：

- IPV4
- IPV6
- DOMAIN',
                'type' => 'string',
                'example' => 'IPV4',
              ),
              'DefaultAvailableAddrNum' => 
              array (
                'description' => '主地址池当前可用地址数量。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'StrategyId' => 
              array (
                'description' => '访问策略id。',
                'type' => 'string',
                'example' => 'hrb5ju',
              ),
              'FailoverAddrPoolGroupStatus' => 
              array (
                'description' => '备地址池集合状态：

- AVAILABLE：可用
- NOT_AVAILABLE：不可用',
                'type' => 'string',
                'example' => 'AVAILABLE',
              ),
              'FailoverAvailableAddrNum' => 
              array (
                'description' => '备地址池当前可用地址数量。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'FailoverLbaStrategy' => 
              array (
                'description' => '备地址池集合均衡策略：

- ALL_RR: 返回全部地址
- RATIO：按权重返回地址',
                'type' => 'string',
                'example' => 'ALL_RR',
              ),
              'DefaultMaxReturnAddrNum' => 
              array (
                'description' => '主地址池集合最多返回地址数量。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'StrategyMode' => 
              array (
                'description' => '访问策略类型：

- GEO：基于地理位置的访问策略
- LATENCY：基于访问延时的访问策略',
                'type' => 'string',
                'example' => 'GEO',
              ),
              'CreateTimestamp' => 
              array (
                'description' => '创建时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1533773400000',
              ),
              'DefaultLbaStrategy' => 
              array (
                'description' => '主地址池集合均衡策略：

- ALL_RR: 返回全部地址
- RATIO：按权重返回地址',
                'type' => 'string',
                'example' => 'ALL_RR',
              ),
              'DefaultAddrPoolGroupStatus' => 
              array (
                'description' => '主地址池集合状态：

- AVAILABLE：可用
- NOT_AVAILABLE：不可用',
                'type' => 'string',
                'example' => 'AVAILABLE',
              ),
              'FailoverAddrPoolType' => 
              array (
                'description' => '备地址池类型：

- IPV4
- IPV6
- DOMAIN',
                'type' => 'string',
                'example' => 'IPV4',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => 'BA1608CA-834C-4E63-8682-8AF0B11ED72D',
              ),
              'InstanceId' => 
              array (
                'description' => '关联的GTM实例Id。',
                'type' => 'string',
                'example' => 'gtm-cn-wwo3a3hbz**',
              ),
              'FailoverAddrPools' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'FailoverAddrPool' => 
                  array (
                    'description' => '备地址池集合列表。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'LbaWeight' => 
                        array (
                          'description' => '权重。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Name' => 
                        array (
                          'description' => '地址池名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'AddrCount' => 
                        array (
                          'description' => '地址数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Id' => 
                        array (
                          'description' => '地址池id。',
                          'type' => 'string',
                          'example' => 'pool1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'DefaultLatencyOptimization' => 
              array (
                'description' => '主地址池集合延时解析调度优化：

- OPEN：开启
- CLOSE：关闭',
                'type' => 'string',
                'example' => 'OPEN',
              ),
              'EffectiveAddrPoolGroupType' => 
              array (
                'description' => '当前生效地址池集合类型：

- DEFAULT：主地址池集合
- FAILOVER： 备地址池集合',
                'type' => 'string',
                'example' => 'DEFAULT',
              ),
              'CreateTime' => 
              array (
                'description' => '创建时间。',
                'type' => 'string',
                'example' => '2018-08-09T00:10Z',
              ),
              'DefaultAddrPools' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DefaultAddrPool' => 
                  array (
                    'description' => '主地址池集合列表。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'LbaWeight' => 
                        array (
                          'description' => '权重。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Name' => 
                        array (
                          'description' => '地址池名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'AddrCount' => 
                        array (
                          'description' => '地址数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Id' => 
                        array (
                          'description' => '地址池id。',
                          'type' => 'string',
                          'example' => 'pool1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'DefaultMinAvailableAddrNum' => 
              array (
                'description' => '主地址池集合最小可用地址数量。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'FailoverLatencyOptimization' => 
              array (
                'description' => '备地址池集合延时解析调度优化：

- OPEN：开启
- CLOSE：关闭',
                'type' => 'string',
                'example' => 'OPEN',
              ),
              'StrategyName' => 
              array (
                'description' => '访问策略名称。',
                'type' => 'string',
                'example' => 'strategyName1',
              ),
              'FailoverMaxReturnAddrNum' => 
              array (
                'description' => '备地址池集合最多返回地址数量。

',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'AccessMode' => 
              array (
                'description' => '地址池集合切换策略：

- AUTO：自动切换
- DEFAULT：主地址池集合
- FAILOVER： 备地址池集合',
                'type' => 'string',
                'example' => 'AUTO',
              ),
              'Lines' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Line' => 
                  array (
                    'description' => '解析请求来源列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GroupName' => 
                        array (
                          'description' => '解析请求来源分组名称。',
                          'type' => 'string',
                          'example' => 'Global',
                        ),
                        'LineCode' => 
                        array (
                          'description' => '解析请求来源编码。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'LineName' => 
                        array (
                          'description' => '解析请求来源名称。',
                          'type' => 'string',
                          'example' => 'Global',
                        ),
                        'GroupCode' => 
                        array (
                          'description' => '解析请求来源分组编码。',
                          'type' => 'string',
                          'example' => 'DEFAULT',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"FailoverMinAvailableAddrNum\\": 1,\\n  \\"DefaultAddrPoolType\\": \\"IPV4\\",\\n  \\"DefaultAvailableAddrNum\\": 1,\\n  \\"StrategyId\\": \\"hrb5ju\\",\\n  \\"FailoverAddrPoolGroupStatus\\": \\"AVAILABLE\\",\\n  \\"FailoverAvailableAddrNum\\": 1,\\n  \\"FailoverLbaStrategy\\": \\"ALL_RR\\",\\n  \\"DefaultMaxReturnAddrNum\\": 1,\\n  \\"StrategyMode\\": \\"GEO\\",\\n  \\"CreateTimestamp\\": 1533773400000,\\n  \\"DefaultLbaStrategy\\": \\"ALL_RR\\",\\n  \\"DefaultAddrPoolGroupStatus\\": \\"AVAILABLE\\",\\n  \\"FailoverAddrPoolType\\": \\"IPV4\\",\\n  \\"RequestId\\": \\"BA1608CA-834C-4E63-8682-8AF0B11ED72D\\",\\n  \\"InstanceId\\": \\"gtm-cn-wwo3a3hbz**\\",\\n  \\"FailoverAddrPools\\": {\\n    \\"FailoverAddrPool\\": [\\n      {\\n        \\"LbaWeight\\": 1,\\n        \\"Name\\": \\"test\\",\\n        \\"AddrCount\\": 1,\\n        \\"Id\\": \\"pool1\\"\\n      }\\n    ]\\n  },\\n  \\"DefaultLatencyOptimization\\": \\"OPEN\\",\\n  \\"EffectiveAddrPoolGroupType\\": \\"DEFAULT\\",\\n  \\"CreateTime\\": \\"2018-08-09T00:10Z\\",\\n  \\"DefaultAddrPools\\": {\\n    \\"DefaultAddrPool\\": [\\n      {\\n        \\"LbaWeight\\": 1,\\n        \\"Name\\": \\"test\\",\\n        \\"AddrCount\\": 1,\\n        \\"Id\\": \\"pool1\\"\\n      }\\n    ]\\n  },\\n  \\"DefaultMinAvailableAddrNum\\": 1,\\n  \\"FailoverLatencyOptimization\\": \\"OPEN\\",\\n  \\"StrategyName\\": \\"strategyName1\\",\\n  \\"FailoverMaxReturnAddrNum\\": 1,\\n  \\"AccessMode\\": \\"AUTO\\",\\n  \\"Lines\\": {\\n    \\"Line\\": [\\n      {\\n        \\"GroupName\\": \\"Global\\",\\n        \\"LineCode\\": \\"default\\",\\n        \\"LineName\\": \\"Global\\",\\n        \\"GroupCode\\": \\"DEFAULT\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<FailoverMinAvailableAddrNum>1</FailoverMinAvailableAddrNum>\\n<DefaultAddrPoolType>ipv4</DefaultAddrPoolType>\\n<DefaultAvailableAddrNum>1</DefaultAvailableAddrNum>\\n<FailoverAddrPoolGroupStatus>AVAILABLE</FailoverAddrPoolGroupStatus>\\n<StrategyId>strategyId1</StrategyId>\\n<FailoverAvailableAddrNum>1</FailoverAvailableAddrNum>\\n<FailoverLbaStrategy>all_rr</FailoverLbaStrategy>\\n<DefaultMaxReturnAddrNum>1</DefaultMaxReturnAddrNum>\\n<StrategyMode>geo</StrategyMode>\\n<CreateTimestamp>1533773400000</CreateTimestamp>\\n<DefaultAddrPoolGroupStatus>AVAILABLE</DefaultAddrPoolGroupStatus>\\n<DefaultLbaStrategy>all_rr</DefaultLbaStrategy>\\n<FailoverAddrPoolType>ipv4</FailoverAddrPoolType>\\n<RequestId>BA1608CA-834C-4E63-8682-8AF0B11ED72D</RequestId>\\n<InstanceId>instance1</InstanceId>\\n<FailoverAddrPools>\\n    <FailoverAddrPool>\\n        <Id>pool1</Id>\\n        <LbaWeight>1</LbaWeight>\\n        <AddrCount>1</AddrCount>\\n        <Name>test</Name>\\n    </FailoverAddrPool>\\n</FailoverAddrPools>\\n<DefaultLatencyOptimization>open</DefaultLatencyOptimization>\\n<CreateTime>2018-08-09T00:10Z</CreateTime>\\n<EffectiveAddrPoolGroupType>DEFAULT</EffectiveAddrPoolGroupType>\\n<DefaultAddrPools>\\n    <DefaultAddrPool>\\n        <Id>pool1</Id>\\n        <LbaWeight>1</LbaWeight>\\n        <AddrCount>1</AddrCount>\\n        <Name>test</Name>\\n    </DefaultAddrPool>\\n</DefaultAddrPools>\\n<DefaultMinAvailableAddrNum>1</DefaultMinAvailableAddrNum>\\n<FailoverLatencyOptimization>open</FailoverLatencyOptimization>\\n<StrategyName>strategyName1</StrategyName>\\n<FailoverMaxReturnAddrNum>1</FailoverMaxReturnAddrNum>\\n<AccessMode>auto</AccessMode>\\n<Lines>\\n    <Line>\\n        <GroupName>global</GroupName>\\n        <GroupCode>default</GroupCode>\\n        <LineCode>default</LineCode>\\n        <LineName>global</LineName>\\n    </Line>\\n</Lines>","errorExample":""}]',
      'title' => '获取访问策略详细信息',
      'summary' => '获取访问策略详细信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnsGtmAccessStrategyAvailableConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        2 => 
        array (
          'name' => 'StrategyMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '调度模式：

- GEO：基于地理位置
- LATENCY：基于延时',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'GEO',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SelectedDomainLines' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SelectedDomainLine' => 
                  array (
                    'description' => '主地址池集合已选择域名区域列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '主地址池集合已选择域名区域。',
                      'type' => 'string',
                      'example' => 'telecom',
                    ),
                  ),
                ),
              ),
              'DomainAddrPools' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DomainAddrPool' => 
                  array (
                    'description' => '域名类型可用地址池列表。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Name' => 
                        array (
                          'description' => '地址池名称。',
                          'type' => 'string',
                          'example' => 'testpool',
                        ),
                        'AddrCount' => 
                        array (
                          'description' => '地址数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Id' => 
                        array (
                          'description' => '地址池id。',
                          'type' => 'string',
                          'example' => 'pool1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Ipv4AddrPools' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Ipv4AddrPool' => 
                  array (
                    'description' => 'Ipv4类型可用地址池列表。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Name' => 
                        array (
                          'description' => '地址池名称。',
                          'type' => 'string',
                          'example' => 'testpool',
                        ),
                        'AddrCount' => 
                        array (
                          'description' => '地址数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Id' => 
                        array (
                          'description' => '地址池id。',
                          'type' => 'string',
                          'example' => 'pool1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => 'C2851BA9-CE56-49AF-8D12-4FC6A49EE688',
              ),
              'SelectedIpv4Lines' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SelectedIpv4Line' => 
                  array (
                    'description' => '主地址池集合已选择Ipv4区域列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '主地址池集合已选择Ipv4区域。',
                      'type' => 'string',
                      'example' => 'telecom',
                    ),
                  ),
                ),
              ),
              'Ipv6AddrPools' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Ipv6AddrPool' => 
                  array (
                    'description' => 'Ipv6类型可用地址池列表。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Name' => 
                        array (
                          'description' => '地址池名称。',
                          'type' => 'string',
                          'example' => 'testpool',
                        ),
                        'AddrCount' => 
                        array (
                          'description' => '地址数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Id' => 
                        array (
                          'description' => '地址池id。',
                          'type' => 'string',
                          'example' => 'pool1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'SuggestSetDefaultLine' => 
              array (
                'description' => '建议设置全局线路。

',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'SelectedIpv6Lines' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SelectedIpv6Line' => 
                  array (
                    'description' => '主地址池集合已选择Ipv6区域列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '主地址池集合已选择Ipv6区域。',
                      'type' => 'string',
                      'example' => 'telecom',
                    ),
                  ),
                ),
              ),
              'Lines' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Line' => 
                  array (
                    'description' => '解析请求来源列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'FatherCode' => 
                        array (
                          'description' => '父线路的code，如果没有则为空。

',
                          'type' => 'string',
                          'example' => 'telecom',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '解析请求来源分组名称。',
                          'type' => 'string',
                          'example' => 'Global',
                        ),
                        'LineCode' => 
                        array (
                          'description' => '解析请求来源编码。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'LineName' => 
                        array (
                          'description' => '解析请求来源名称。',
                          'type' => 'string',
                          'example' => 'Global',
                        ),
                        'GroupCode' => 
                        array (
                          'description' => '解析请求来源分组编号。',
                          'type' => 'string',
                          'example' => 'DEFAULT',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"SelectedDomainLines\\": {\\n    \\"SelectedDomainLine\\": [\\n      \\"telecom\\"\\n    ]\\n  },\\n  \\"DomainAddrPools\\": {\\n    \\"DomainAddrPool\\": [\\n      {\\n        \\"Name\\": \\"testpool\\",\\n        \\"AddrCount\\": 1,\\n        \\"Id\\": \\"pool1\\"\\n      }\\n    ]\\n  },\\n  \\"Ipv4AddrPools\\": {\\n    \\"Ipv4AddrPool\\": [\\n      {\\n        \\"Name\\": \\"testpool\\",\\n        \\"AddrCount\\": 1,\\n        \\"Id\\": \\"pool1\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"C2851BA9-CE56-49AF-8D12-4FC6A49EE688\\",\\n  \\"SelectedIpv4Lines\\": {\\n    \\"SelectedIpv4Line\\": [\\n      \\"telecom\\"\\n    ]\\n  },\\n  \\"Ipv6AddrPools\\": {\\n    \\"Ipv6AddrPool\\": [\\n      {\\n        \\"Name\\": \\"testpool\\",\\n        \\"AddrCount\\": 1,\\n        \\"Id\\": \\"pool1\\"\\n      }\\n    ]\\n  },\\n  \\"SuggestSetDefaultLine\\": true,\\n  \\"SelectedIpv6Lines\\": {\\n    \\"SelectedIpv6Line\\": [\\n      \\"telecom\\"\\n    ]\\n  },\\n  \\"Lines\\": {\\n    \\"Line\\": [\\n      {\\n        \\"FatherCode\\": \\"telecom\\",\\n        \\"GroupName\\": \\"Global\\",\\n        \\"LineCode\\": \\"default\\",\\n        \\"LineName\\": \\"Global\\",\\n        \\"GroupCode\\": \\"DEFAULT\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<Ipv4AddrPools>\\n    <Ipv4AddrPool>\\n        <Id>pool1</Id>\\n        <AddrCount>1</AddrCount>\\n        <Name>testpool</Name>\\n    </Ipv4AddrPool>\\n</Ipv4AddrPools>\\n<DomainAddrPools>\\n    <DomainAddrPool>\\n        <Id>pool1</Id>\\n        <AddrCount>1</AddrCount>\\n        <Name>testpool</Name>\\n    </DomainAddrPool>\\n</DomainAddrPools>\\n<RequestId>C2851BA9-CE56-49AF-8D12-4FC6A49EE688</RequestId>\\n<Ipv6AddrPools>\\n    <Ipv6AddrPool>\\n        <Id>pool1</Id>\\n        <AddrCount>1</AddrCount>\\n        <Name>testpool</Name>\\n    </Ipv6AddrPool>\\n</Ipv6AddrPools>\\n<SuggestSetDefaultLine>true</SuggestSetDefaultLine>\\n<Lines>\\n    <Line>\\n        <GroupName>global</GroupName>\\n        <GroupCode>default</GroupCode>\\n        <FatherCode>telecom</FatherCode>\\n        <LineCode>default</LineCode>\\n        <LineName>global</LineName>\\n    </Line>\\n</Lines>","errorExample":""}]',
      'title' => '获取访问策略可设置的配置',
      'summary' => '获取访问策略可设置的配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmAccessStrategies' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为1，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '0CCC9971-CEC9-4132-824B-4AE611C07623',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为1，默认为1。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Strategies' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Strategy' => 
                  array (
                    'description' => '策略列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AccessMode' => 
                        array (
                          'description' => '访问策略。其中：
- **AUTO**：自动切换
- **DEFAULT**：主地址池集合
- **FAILOVER**：备地址池集合',
                          'type' => 'string',
                          'example' => 'AUTO',
                        ),
                        'StrategyName' => 
                        array (
                          'description' => '策略名称。',
                          'type' => 'string',
                          'example' => '访问策略',
                        ),
                        'DefaultAddrPoolMonitorStatus' => 
                        array (
                          'description' => '主地址池集合健康检查状态。其中：

- **OPEN**：开启
- **CLOSE**：关闭
- **UNCONFIGURED**：未配置',
                          'type' => 'string',
                          'example' => 'OPEN',
                        ),
                        'StrategyMode' => 
                        array (
                          'description' => '访问策略类型：

- **GEO**：基于地理位置
- **LATENCY**：基于延时',
                          'type' => 'string',
                          'example' => 'GEO',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2018-08-09T00:10Z',
                        ),
                        'DefaultAddrPoolStatus' => 
                        array (
                          'description' => '主地址池集合可用状态。其中：

- **AVAILABLE**：可用
- **NOT_AVAILABLE**：不可用',
                          'type' => 'string',
                          'example' => 'AVAILABLE',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '关联实例ID。',
                          'type' => 'string',
                          'example' => 'gtm-cn-wwo3a3hbz**',
                        ),
                        'Lines' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Line' => 
                            array (
                              'description' => '解析请求来源列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'GroupName' => 
                                  array (
                                    'description' => '解析请求来源分组名称。',
                                    'type' => 'string',
                                    'example' => 'Global',
                                  ),
                                  'LineCode' => 
                                  array (
                                    'description' => '解析请求来源编码。',
                                    'type' => 'string',
                                    'example' => 'default',
                                  ),
                                  'LineName' => 
                                  array (
                                    'description' => '解析请求来源名称。',
                                    'type' => 'string',
                                    'example' => 'Global',
                                  ),
                                  'GroupCode' => 
                                  array (
                                    'description' => '解析请求来源分组编码。',
                                    'type' => 'string',
                                    'example' => 'DEFAULT',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'FailoverAddrPoolId' => 
                        array (
                          'description' => '备地址池集合ID。',
                          'type' => 'string',
                          'example' => 'hra0i2',
                        ),
                        'DefaultAddrPoolId' => 
                        array (
                          'description' => '主地址池集合ID。',
                          'type' => 'string',
                          'example' => 'hra0i1',
                        ),
                        'StrategyId' => 
                        array (
                          'description' => '访问策略ID。',
                          'type' => 'string',
                          'example' => 'hra0hs',
                        ),
                        'FailoverAddrPoolStatus' => 
                        array (
                          'description' => '备地址池集合可用状态。其中：

- ****AVAILABLE****：可用
- ****NOT_AVAILABLE****：不可用',
                          'type' => 'string',
                          'example' => 'AVAILABLE',
                        ),
                        'AccessStatus' => 
                        array (
                          'description' => '访问状态。其中：
- **DEFAULT**：当前访问主地址池集合
- **FAILOVER**：当前访问备地址池集合',
                          'type' => 'string',
                          'example' => 'DEFAULT',
                        ),
                        'FailoverAddrPoolMonitorStatus' => 
                        array (
                          'description' => '备地址池集合健康检查状态。其中：

- **OPEN**：开启
- **CLOSE**：关闭
- **UNCONFIGURED**：未配置',
                          'type' => 'string',
                          'example' => 'OPEN',
                        ),
                        'DefaultAddrPoolName' => 
                        array (
                          'description' => '主地址池集合名称。',
                          'type' => 'string',
                          'example' => '地址池1',
                        ),
                        'FailoverAddrPoolName' => 
                        array (
                          'description' => '备地址池集合名称。',
                          'type' => 'string',
                          'example' => '地址池2',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1533773400000',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 20,\\n  \\"RequestId\\": \\"0CCC9971-CEC9-4132-824B-4AE611C07623\\",\\n  \\"PageNumber\\": 1,\\n  \\"Strategies\\": {\\n    \\"Strategy\\": [\\n      {\\n        \\"AccessMode\\": \\"AUTO\\",\\n        \\"StrategyName\\": \\"访问策略\\",\\n        \\"DefaultAddrPoolMonitorStatus\\": \\"OPEN\\",\\n        \\"StrategyMode\\": \\"GEO\\",\\n        \\"CreateTime\\": \\"2018-08-09T00:10Z\\",\\n        \\"DefaultAddrPoolStatus\\": \\"AVAILABLE\\",\\n        \\"InstanceId\\": \\"gtm-cn-wwo3a3hbz**\\",\\n        \\"Lines\\": {\\n          \\"Line\\": [\\n            {\\n              \\"GroupName\\": \\"Global\\",\\n              \\"LineCode\\": \\"default\\",\\n              \\"LineName\\": \\"Global\\",\\n              \\"GroupCode\\": \\"DEFAULT\\"\\n            }\\n          ]\\n        },\\n        \\"FailoverAddrPoolId\\": \\"hra0i2\\",\\n        \\"DefaultAddrPoolId\\": \\"hra0i1\\",\\n        \\"StrategyId\\": \\"hra0hs\\",\\n        \\"FailoverAddrPoolStatus\\": \\"AVAILABLE\\",\\n        \\"AccessStatus\\": \\"DEFAULT\\",\\n        \\"FailoverAddrPoolMonitorStatus\\": \\"OPEN\\",\\n        \\"DefaultAddrPoolName\\": \\"地址池1\\",\\n        \\"FailoverAddrPoolName\\": \\"地址池2\\",\\n        \\"CreateTimestamp\\": 1533773400000\\n      }\\n    ]\\n  },\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 1\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmAccessStrategiesResponse>\\r\\n<PageNumber>1</PageNumber>\\r\\n\\t<PageSize>20</PageSize>\\r\\n\\t<RequestId>0CCC9971-CEC9-4132-824B-4AE611C07623</RequestId>\\r\\n\\t<TotalItems>1</TotalItems>\\r\\n\\t<TotalPages>1</TotalPages>\\r\\n\\t<Strategies>\\r\\n\\t\\t<Strategy>\\r\\n\\t\\t\\t<FailoverAddrPoolName>地址池2</FailoverAddrPoolName>\\r\\n\\t\\t\\t<FailoverAddrPoolStatus>AVAILABLE</FailoverAddrPoolStatus>\\r\\n\\t\\t\\t<FailoverAddrPoolMonitorStatus>OPEN</FailoverAddrPoolMonitorStatus>\\r\\n\\t\\t\\t<StrategyName>访问策略测试</StrategyName>\\r\\n\\t\\t\\t<AccessMode>DEFAULT</AccessMode>\\r\\n\\t\\t\\t<CreateTimestamp>1533773400000</CreateTimestamp>\\r\\n\\t\\t\\t<Lines>\\r\\n\\t\\t\\t\\t<Line>\\r\\n\\t\\t\\t\\t\\t<GroupName>全局</GroupName>\\r\\n\\t\\t\\t\\t\\t<GroupCode>DEFAULT</GroupCode>\\r\\n\\t\\t\\t\\t\\t<LineName>全局</LineName>\\r\\n\\t\\t\\t\\t\\t<LineCode>default</LineCode>\\r\\n\\t\\t\\t\\t</Line>\\r\\n\\t\\t\\t</Lines>\\r\\n\\t\\t\\t<StrategyMode>SELF_DEFINED</StrategyMode>\\r\\n\\t\\t\\t<DefaultAddrPoolId>hra0i1</DefaultAddrPoolId>\\r\\n\\t\\t\\t<CreateTime>2018-08-09T00:10Z</CreateTime>\\r\\n\\t\\t\\t<FailoverAddrPoolId>hra0i2</FailoverAddrPoolId>\\r\\n\\t\\t\\t<DefaultAddrPoolName>地址池1</DefaultAddrPoolName>\\r\\n\\t\\t\\t<DefaultAddrPoolStatus>AVAILABLE</DefaultAddrPoolStatus>\\r\\n\\t\\t\\t<DefaultAddrPoolMonitorStatus>CLOSE</DefaultAddrPoolMonitorStatus>\\r\\n\\t\\t\\t<AccessStatus>DEFAULT</AccessStatus>\\r\\n\\t\\t\\t<InstanceId>instance1</InstanceId>\\r\\n\\t\\t\\t<StrategyId>hra0hs</StrategyId>\\r\\n\\t\\t</Strategy>\\r\\n\\t</Strategies>\\r\\n</DescribeGtmAccessStrategiesResponse>","errorExample":""}]',
      'title' => '获取实例访问策略列表（旧版）',
      'summary' => '获取当前实例的访问策略列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmAccessStrategy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'StrategyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hra0hs',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => 'BA1608CA-834C-4E63-8682-8AF0B11ED72D',
              ),
              'InstanceId' => 
              array (
                'description' => '关联的GTM实例ID。',
                'type' => 'string',
                'example' => 'gtm-cn-wwo3a3hbz**',
              ),
              'StrategyId' => 
              array (
                'description' => '策略ID。',
                'type' => 'string',
                'example' => 'hra0hs',
              ),
              'DefaultAddrPoolStatus' => 
              array (
                'description' => '主地址池集合可用状态。其中：

- **AVAILABLE**：可用
- **NOT_AVAILABLE**：不可用',
                'type' => 'string',
                'example' => 'AVAILABLE',
              ),
              'FailoverAddrPoolId' => 
              array (
                'description' => '备地址池集合ID。
若未设置备地址池集合，传值**EMPTY**。',
                'type' => 'string',
                'example' => 'hra0i2',
              ),
              'AccessStatus' => 
              array (
                'description' => '访问状态。其中：

- **DEFAULT**：访问主地址池集合，表示正常
- **FAILOVER**：访问备地址池集合，表示异常',
                'type' => 'string',
                'example' => 'DEFAULT',
              ),
              'DefaultAddrPoolMonitorStatus' => 
              array (
                'description' => '主地址池集合健康检查状态。其中：

- **OPEN**：开启
- **CLOSE**：关闭
- **UNCONFIGURED**：未配置',
                'type' => 'string',
                'example' => 'OPEN',
              ),
              'DefaultAddrPoolName' => 
              array (
                'description' => '主地址池集合名称。',
                'type' => 'string',
                'example' => '地址池1',
              ),
              'DefultAddrPoolId' => 
              array (
                'description' => '备地址池集合ID。',
                'type' => 'string',
                'example' => 'hra0i1',
              ),
              'StrategyName' => 
              array (
                'description' => '访问策略名称。',
                'type' => 'string',
                'example' => '全局',
              ),
              'FailoverAddrPoolStatus' => 
              array (
                'description' => '备地址池集合可用状态。其中：

- **AVAILABLE**：可用
- **NOT_AVAILABLE**：不可用',
                'type' => 'string',
                'example' => 'AVAILABLE',
              ),
              'AccessMode' => 
              array (
                'description' => '地址池集合切换策略：

- **AUTO**：自动切换
- **DEFAULT**：主地址池集合
- **FAILOVER**： 备地址池集合',
                'type' => 'string',
                'example' => 'AUTO',
              ),
              'StrategyMode' => 
              array (
                'description' => '策略模式
SELF_DEFINED 自定义。',
                'type' => 'string',
                'example' => 'SELF_DEFINED',
              ),
              'FailoverAddrPoolMonitorStatus' => 
              array (
                'description' => '备地址池集合健康检查状态。其中：

- **OPEN**：开启
- **CLOSE**：关闭
- **UNCONFIGURED**：未配置',
                'type' => 'string',
                'example' => 'OPEN',
              ),
              'FailoverAddrPoolName' => 
              array (
                'description' => '备地址池集合名称。',
                'type' => 'string',
                'example' => '地址池2',
              ),
              'Lines' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Line' => 
                  array (
                    'description' => '解析请求来源列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GroupName' => 
                        array (
                          'description' => '解析请求来源分组名称。',
                          'type' => 'string',
                          'example' => 'Global',
                        ),
                        'LineCode' => 
                        array (
                          'description' => '解析请求来源编码。',
                          'type' => 'string',
                          'example' => 'default',
                        ),
                        'LineName' => 
                        array (
                          'description' => '解析请求来源名称。',
                          'type' => 'string',
                          'example' => 'Global',
                        ),
                        'GroupCode' => 
                        array (
                          'description' => '解析请求来源分组编码。',
                          'type' => 'string',
                          'example' => 'DEFAULT',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BA1608CA-834C-4E63-8682-8AF0B11ED72D\\",\\n  \\"InstanceId\\": \\"gtm-cn-wwo3a3hbz**\\",\\n  \\"StrategyId\\": \\"hra0hs\\",\\n  \\"DefaultAddrPoolStatus\\": \\"AVAILABLE\\",\\n  \\"FailoverAddrPoolId\\": \\"hra0i2\\",\\n  \\"AccessStatus\\": \\"DEFAULT\\",\\n  \\"DefaultAddrPoolMonitorStatus\\": \\"OPEN\\",\\n  \\"DefaultAddrPoolName\\": \\"地址池1\\",\\n  \\"DefultAddrPoolId\\": \\"hra0i1\\",\\n  \\"StrategyName\\": \\"全局\\",\\n  \\"FailoverAddrPoolStatus\\": \\"AVAILABLE\\",\\n  \\"AccessMode\\": \\"AUTO\\",\\n  \\"StrategyMode\\": \\"SELF_DEFINED\\",\\n  \\"FailoverAddrPoolMonitorStatus\\": \\"OPEN\\",\\n  \\"FailoverAddrPoolName\\": \\"地址池2\\",\\n  \\"Lines\\": {\\n    \\"Line\\": [\\n      {\\n        \\"GroupName\\": \\"Global\\",\\n        \\"LineCode\\": \\"default\\",\\n        \\"LineName\\": \\"Global\\",\\n        \\"GroupCode\\": \\"DEFAULT\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmAccessStrategyResponse>\\r\\n\\t<StrategyName>访问策略测试</StrategyName>\\r\\n\\t<AccessMode>DEFAULT</AccessMode>\\r\\n\\t<Lines>\\r\\n\\t\\t<Line>\\r\\n\\t\\t\\t<GroupName>Global</GroupName>\\r\\n\\t\\t\\t<GroupCode>DEFAULT</GroupCode>\\r\\n\\t\\t\\t<LineName>Global</LineName>\\r\\n\\t\\t\\t<LineCode>default</LineCode>\\r\\n\\t\\t</Line>\\r\\n\\t\\t<Line>\\r\\n\\t\\t\\t<GroupCode>ISP</GroupCode>\\r\\n\\t\\t\\t<GroupName>ISP</GroupName>\\r\\n\\t\\t\\t<LineCode>mobile</LineCode>\\r\\n\\t\\t\\t<LineName>China Mobile</LineName>\\r\\n\\t\\t</Line>\\r\\n\\t</Lines>\\r\\n\\t<RequestId>BA1608CA-834C-4E63-8682-8AF0B11ED72D</RequestId>\\r\\n\\t<AccessStatus>DEFAULT</AccessStatus>\\r\\n\\t<CreateTime>2018-08-09T00:10Z</CreateTime>\\r\\n\\t<CreateTimestamp>1533773400000</CreateTimestamp>\\r\\n\\t<DefaultAddrPoolId>hra0i1</DefaultAddrPoolId>\\r\\n\\t<DefaultAddrPoolName>地址池1</DefaultAddrPoolName>\\r\\n\\t<FailoverAddrPoolId>hra0i2</FailoverAddrPoolId>\\r\\n\\t<FailoverAddrPoolName>地址池2</FailoverAddrPoolName>\\r\\n\\t<InstanceId>instance1</InstanceId>\\r\\n\\t<StrategyMode>SELF_DEFINED</StrategyMode>\\r\\n\\t<StrategyId>hra0hs</StrategyId>\\r\\n\\t<FailoverAddrPoolStatus>AVAILABLE</FailoverAddrPoolStatus>\\r\\n\\t<FailoverAddrPoolMonitorStatus>OPEN</FailoverAddrPoolMonitorStatus>\\r\\n\\t<DefaultAddrPoolStatus>AVAILABLE</DefaultAddrPoolStatus>\\r\\n\\t<DefaultAddrPoolMonitorStatus>CLOSE</DefaultAddrPoolMonitorStatus>\\r\\n</DescribeGtmAccessStrategyResponse>","errorExample":""}]',
      'title' => '获取访问策略详细信息（旧版）',
      'summary' => '根据策略ID获取策略详细信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmAccessStrategyAvailableConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'GTM实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => 'C2851BA9-CE56-49AF-8D12-4FC6A49EE688',
              ),
              'AddrPools' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AddrPool' => 
                  array (
                    'description' => '地址池列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AddrPoolId' => 
                        array (
                          'description' => '地址池ID。',
                          'type' => 'string',
                          'example' => 'hra0ix',
                        ),
                        'AddrPoolName' => 
                        array (
                          'description' => '地址池名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Lines' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Line' => 
                  array (
                    'description' => '解析请求来源列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '线路当前状态。其中：

- **FORBIDDEN**：不可选
- **OPTIONAL**：可选择',
                          'type' => 'string',
                          'example' => 'FORBIDDEN',
                        ),
                        'FatherCode' => 
                        array (
                          'description' => '父线路的code，如果没有则为空。',
                          'type' => 'string',
                          'example' => '无',
                        ),
                        'LineCode' => 
                        array (
                          'description' => '解析请求来源编码。',
                          'type' => 'string',
                          'example' => 'cn_region_huanan',
                        ),
                        'GroupName' => 
                        array (
                          'description' => '解析请求来源分组名称。',
                          'type' => 'string',
                          'example' => 'Mainland China',
                        ),
                        'LineName' => 
                        array (
                          'description' => '解析请求来源名称。',
                          'type' => 'string',
                          'example' => 'South China',
                        ),
                        'GroupCode' => 
                        array (
                          'description' => '解析请求来源分组编号。',
                          'type' => 'string',
                          'example' => 'CN_REGION',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'SuggestSetDefaultLine' => 
              array (
                'description' => '建议设置全局线路。

',
                'type' => 'boolean',
                'example' => 'True',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C2851BA9-CE56-49AF-8D12-4FC6A49EE688\\",\\n  \\"AddrPools\\": {\\n    \\"AddrPool\\": [\\n      {\\n        \\"AddrPoolId\\": \\"hra0ix\\",\\n        \\"AddrPoolName\\": \\"test\\"\\n      }\\n    ]\\n  },\\n  \\"Lines\\": {\\n    \\"Line\\": [\\n      {\\n        \\"Status\\": \\"FORBIDDEN\\",\\n        \\"FatherCode\\": \\"无\\",\\n        \\"LineCode\\": \\"cn_region_huanan\\",\\n        \\"GroupName\\": \\"Mainland China\\",\\n        \\"LineName\\": \\"South China\\",\\n        \\"GroupCode\\": \\"CN_REGION\\"\\n      }\\n    ]\\n  },\\n  \\"SuggestSetDefaultLine\\": true\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmAccessStrategyAvailableConfigResponse>\\r\\n<Lines>\\r\\n\\t\\t<Line>\\r\\n\\t\\t\\t<Status>FORBIDDEN</Status>\\r\\n\\t\\t\\t<GroupName>全局</GroupName>\\r\\n\\t\\t\\t<GroupCode>DEFAULT</GroupCode>\\r\\n\\t\\t\\t<LineName>全局</LineName>\\r\\n\\t\\t\\t<LineCode>default</LineCode>\\r\\n\\t\\t</Line>\\r\\n\\t\\t<Line>\\r\\n\\t\\t\\t<Status>OPTIONAL</Status>\\r\\n\\t\\t\\t<GroupName>运营商</GroupName>\\r\\n\\t\\t\\t<GroupCode>ISP</GroupCode>\\r\\n\\t\\t\\t<LineName>电信</LineName>\\r\\n\\t\\t\\t<LineCode>telecom</LineCode>\\r\\n\\t\\t</Line>\\r\\n\\t\\t<Line>\\r\\n\\t\\t\\t<Status>OPTIONAL</Status>\\r\\n\\t\\t\\t<GroupName>境外地区</GroupName>\\r\\n\\t\\t\\t<GroupCode>OS</GroupCode>\\r\\n\\t\\t\\t<LineName>南美洲</LineName>\\r\\n\\t\\t\\t<LineCode>os_samerica</LineCode>\\r\\n\\t\\t</Line>\\r\\n\\t</Lines>\\r\\n\\t<RequestId>C2851BA9-CE56-49AF-8D12-4FC6A49EE688</RequestId>\\r\\n\\t<AddrPools>\\r\\n\\t\\t<AddrPool>\\r\\n\\t\\t\\t<AddrPoolName>地址池1</AddrPoolName>\\r\\n\\t\\t\\t<AddrPoolId>hra0ix</AddrPoolId>\\r\\n\\t\\t</AddrPool>\\r\\n\\t\\t<AddrPool>\\r\\n\\t\\t\\t<AddrPoolName>地址池2</AddrPoolName>\\r\\n\\t\\t\\t<AddrPoolId>hra0iy</AddrPoolId>\\r\\n\\t\\t</AddrPool>\\r\\n\\t</AddrPools>\\r\\n</DescribeGtmAccessStrategyAvailableConfigResponse>","errorExample":""}]',
      'title' => '获取访问策略可设置的配置（旧版）',
      'summary' => '获取当前访问策略可设置的配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SwitchDnsGtmInstanceStrategyMode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '部分返回参数语言。默认值：en。取值范围：en、zh、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例id。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'gtm-cn-cs02xyk4a**',
          ),
        ),
        2 => 
        array (
          'name' => 'StrategyMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问策略模式：

- GEO：基于地理位置
- LATENCY：基于延时',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'GEO',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>","errorExample":""}]',
      'title' => '切换访问策略类型',
      'summary' => '切换访问策略类型。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDohAccountStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间，格式：YYYY-MM-DD。

只能查询最近90天的记录，即：`StartDate >= Now - 90`。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '2019-07-04',
          ),
        ),
        2 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的结束时间，格式：YYYY-MM-DD。

默认为查询当天的时间。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '2019-07-04',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码',
                'type' => 'string',
                'example' => '0F32959D-417B-4D66-8463-68606605E3E2',
              ),
              'Statistics' => 
              array (
                'description' => '统计数据列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'V6HttpCount' => 
                    array (
                      'description' => 'IPv6 HTTP 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V4HttpsCount' => 
                    array (
                      'description' => 'IPv4 HTTPS 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'Timestamp' => 
                    array (
                      'description' => '统计时间戳。单位：毫秒。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1544976000000',
                    ),
                    'TotalCount' => 
                    array (
                      'description' => '请求总量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V4HttpCount' => 
                    array (
                      'description' => 'IPv4 HTTP 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V6HttpsCount' => 
                    array (
                      'description' => 'IPv6 HTTPS 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0F32959D-417B-4D66-8463-68606605E3E2\\",\\n  \\"Statistics\\": [\\n    {\\n      \\"V6HttpCount\\": 3141592653,\\n      \\"V4HttpsCount\\": 3141592653,\\n      \\"Timestamp\\": 1544976000000,\\n      \\"TotalCount\\": 3141592653,\\n      \\"V4HttpCount\\": 3141592653,\\n      \\"V6HttpsCount\\": 3141592653\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeDohAccountStatisticsResponse>\\n    <RequestId>0F32959D-417B-4D66-8463-68606605E3E2</RequestId>\\n    <Statistics>\\n        <V6HttpCount>3141592653</V6HttpCount>\\n        <V4HttpsCount>3141592653</V4HttpsCount>\\n        <Timestamp>1544976000000</Timestamp>\\n        <TotalCount>3141592653</TotalCount>\\n        <V4HttpCount>3141592653</V4HttpCount>\\n        <V6HttpsCount>3141592653</V6HttpsCount>\\n    </Statistics>\\n</DescribeDohAccountStatisticsResponse>","errorExample":""}]',
      'title' => '获取DoH账户请求量统计概览',
      'summary' => '获取DoH账户请求量统计概览。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDohDomainStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'example.com',
          ),
        ),
        2 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间，格式：YYYY-MM-DD。

只能查询最近90天的记录，即：`StartDate >= Now - 90`。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '2019-07-04',
          ),
        ),
        3 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的结束时间，格式：YYYY-MM-DD。

默认为查询当天的时间。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '2019-07-04',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '0F32959D-417B-4D66-8463-68606605E3E2',
              ),
              'Statistics' => 
              array (
                'description' => '统计数据列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'V6HttpCount' => 
                    array (
                      'description' => 'IPv6 HTTP 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V4HttpsCount' => 
                    array (
                      'description' => 'IPv4 HTTPS 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'Timestamp' => 
                    array (
                      'description' => '统计时间戳。单位：毫秒。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1544976000000',
                    ),
                    'TotalCount' => 
                    array (
                      'description' => '请求总量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V4HttpCount' => 
                    array (
                      'description' => 'IPv4 HTTP 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V6HttpsCount' => 
                    array (
                      'description' => 'IPv6 HTTPS 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0F32959D-417B-4D66-8463-68606605E3E2\\",\\n  \\"Statistics\\": [\\n    {\\n      \\"V6HttpCount\\": 3141592653,\\n      \\"V4HttpsCount\\": 3141592653,\\n      \\"Timestamp\\": 1544976000000,\\n      \\"TotalCount\\": 3141592653,\\n      \\"V4HttpCount\\": 3141592653,\\n      \\"V6HttpsCount\\": 3141592653\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<RequestId>0F32959D-417B-4D66-8463-68606605E3E2</RequestId>\\n<Statistics>\\n    <TotalCount>3141592653</TotalCount>\\n    <V4HttpCount>3141592653</V4HttpCount>\\n    <V6HttpCount>3141592653</V6HttpCount>\\n    <Timestamp>1544976000000</Timestamp>\\n    <V4HttpsCount>3141592653</V4HttpsCount>\\n    <V6HttpsCount>3141592653</V6HttpsCount>\\n</Statistics>","errorExample":""}]',
      'title' => '获取DoH域名请求量统计概览',
      'summary' => '获取DoH域名请求量统计概览。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDohDomainStatisticsSummary' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为1，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间，格式：YYYY-MM-DD。

只能查询最近90天的记录，即：`StartDate >= Now - 90`。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '2019-07-04	',
          ),
        ),
        4 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的结束时间，格式：YYYY-MM-DD。

默认为查询当天的时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-07-04	',
          ),
        ),
        5 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名。',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '0F32959D-417B-4D66-8463-68606605E3E2',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '50',
              ),
              'TotalItems' => 
              array (
                'description' => '总数据条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '300',
              ),
              'Statistics' => 
              array (
                'description' => '统计数据列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'V6HttpCount' => 
                    array (
                      'description' => 'IPv6 HTTP 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V4HttpsCount' => 
                    array (
                      'description' => 'IPv4 HTTPS 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'IpCount' => 
                    array (
                      'description' => 'IP地址数量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '20',
                    ),
                    'TotalCount' => 
                    array (
                      'description' => '请求总量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '14141592653',
                    ),
                    'HttpCount' => 
                    array (
                      'description' => 'HTTP请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'DomainName' => 
                    array (
                      'description' => '域名。',
                      'type' => 'string',
                      'example' => 'example.com',
                    ),
                    'HttpsCount' => 
                    array (
                      'description' => 'HTTPS请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V4HttpCount' => 
                    array (
                      'description' => 'IPv4 HTTP 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V6HttpsCount' => 
                    array (
                      'description' => 'IPv6 HTTPS 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 20,\\n  \\"RequestId\\": \\"0F32959D-417B-4D66-8463-68606605E3E2\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalPages\\": 50,\\n  \\"TotalItems\\": 300,\\n  \\"Statistics\\": [\\n    {\\n      \\"V6HttpCount\\": 3141592653,\\n      \\"V4HttpsCount\\": 3141592653,\\n      \\"IpCount\\": 20,\\n      \\"TotalCount\\": 14141592653,\\n      \\"HttpCount\\": 3141592653,\\n      \\"DomainName\\": \\"example.com\\",\\n      \\"HttpsCount\\": 3141592653,\\n      \\"V4HttpCount\\": 3141592653,\\n      \\"V6HttpsCount\\": 3141592653\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeDohDomainStatisticsSummaryResponse>\\n    <PageSize>20</PageSize>\\n    <RequestId>0F32959D-417B-4D66-8463-68606605E3E2</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalPages>50</TotalPages>\\n    <TotalItems>300</TotalItems>\\n    <Statistics>\\n        <V6HttpCount>3141592653</V6HttpCount>\\n        <V4HttpsCount>3141592653</V4HttpsCount>\\n        <IpCount>20</IpCount>\\n        <TotalCount>14141592653</TotalCount>\\n        <HttpCount>3141592653</HttpCount>\\n        <DomainName>example.com</DomainName>\\n        <HttpsCount>3141592653</HttpsCount>\\n        <V4HttpCount>3141592653</V4HttpCount>\\n        <V6HttpsCount>3141592653</V6HttpsCount>\\n    </Statistics>\\n</DescribeDohDomainStatisticsSummaryResponse>","errorExample":""}]',
      'title' => '获取DoH域名的请求量统计列表',
      'summary' => '获取DoH域名的请求量统计列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDohSubDomainStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'SubDomain',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查看统计数据的子域名',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'www.example.com',
          ),
        ),
        2 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间，格式：YYYY-MM-DD。

只能查询最近90天的记录，即：`StartDate >= Now - 90`。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '2019-07-04',
          ),
        ),
        3 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的结束时间，格式：YYYY-MM-DD。

默认为查询当天的时间。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '2019-07-04',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '0F32959D-417B-4D66-8463-68606605E3E2',
              ),
              'Statistics' => 
              array (
                'description' => '统计数据列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'V6HttpCount' => 
                    array (
                      'description' => 'IPv6 HTTP 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V4HttpsCount' => 
                    array (
                      'description' => 'IPv4 HTTPS 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'Timestamp' => 
                    array (
                      'description' => '统计时间戳。单位：毫秒。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1544976000000',
                    ),
                    'TotalCount' => 
                    array (
                      'description' => '请求总量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V4HttpCount' => 
                    array (
                      'description' => 'IPv4 HTTP 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V6HttpsCount' => 
                    array (
                      'description' => 'IPv6 HTTPS 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0F32959D-417B-4D66-8463-68606605E3E2\\",\\n  \\"Statistics\\": [\\n    {\\n      \\"V6HttpCount\\": 3141592653,\\n      \\"V4HttpsCount\\": 3141592653,\\n      \\"Timestamp\\": 1544976000000,\\n      \\"TotalCount\\": 3141592653,\\n      \\"V4HttpCount\\": 3141592653,\\n      \\"V6HttpsCount\\": 3141592653\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<RequestId>0F32959D-417B-4D66-8463-68606605E3E2</RequestId>\\n<Statistics>\\n    <TotalCount>3141592653</TotalCount>\\n    <V4HttpCount>3141592653</V4HttpCount>\\n    <V6HttpCount>3141592653</V6HttpCount>\\n    <Timestamp>1544976000000</Timestamp>\\n    <V4HttpsCount>3141592653</V4HttpsCount>\\n    <V6HttpsCount>3141592653</V6HttpsCount>\\n</Statistics>","errorExample":""}]',
      'title' => '获取DoH子域名请求量统计',
      'summary' => '获取DoH子域名请求量统计。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDohSubDomainStatisticsSummary' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为1，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '	
查询的开始时间，格式：YYYY-MM-DD。

只能查询最近90天的记录，即：`StartDate >= Now - 90`。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '2019-07-04	',
          ),
        ),
        4 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '	
查询的结束时间，格式：YYYY-MM-DD。

默认为查询当天的时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-07-04	',
          ),
        ),
        5 => 
        array (
          'name' => 'SubDomain',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '子域名。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.example.com',
          ),
        ),
        6 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'example.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '0F32959D-417B-4D66-8463-68606605E3E2',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为1，默认为1。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '50',
              ),
              'TotalItems' => 
              array (
                'description' => '总数据条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '100',
              ),
              'Statistics' => 
              array (
                'description' => '统计数据列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'V6HttpCount' => 
                    array (
                      'description' => 'IPv6 HTTP 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V4HttpsCount' => 
                    array (
                      'description' => 'IPv4 HTTPS 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'IpCount' => 
                    array (
                      'description' => 'IP地址数量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '20',
                    ),
                    'SubDomain' => 
                    array (
                      'description' => '子域名。',
                      'type' => 'string',
                      'example' => 'www.example.com',
                    ),
                    'TotalCount' => 
                    array (
                      'description' => '总请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '14141592653',
                    ),
                    'HttpCount' => 
                    array (
                      'description' => 'HTTP请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'HttpsCount' => 
                    array (
                      'description' => 'HTTPS请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V4HttpCount' => 
                    array (
                      'description' => 'IPv4 HTTP 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                    'V6HttpsCount' => 
                    array (
                      'description' => 'IPv6 HTTPS 请求量。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3141592653',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"0F32959D-417B-4D66-8463-68606605E3E2\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalPages\\": 50,\\n  \\"TotalItems\\": 100,\\n  \\"Statistics\\": [\\n    {\\n      \\"V6HttpCount\\": 3141592653,\\n      \\"V4HttpsCount\\": 3141592653,\\n      \\"IpCount\\": 20,\\n      \\"SubDomain\\": \\"www.example.com\\",\\n      \\"TotalCount\\": 14141592653,\\n      \\"HttpCount\\": 3141592653,\\n      \\"HttpsCount\\": 3141592653,\\n      \\"V4HttpCount\\": 3141592653,\\n      \\"V6HttpsCount\\": 3141592653\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<RequestId>0F32959D-417B-4D66-8463-68606605E3E2</RequestId>\\n<PageSize>10</PageSize>\\n<PageNumber>1</PageNumber>\\n<TotalPages>50</TotalPages>\\n<TotalItems>100</TotalItems>\\n<Statistics>\\n    <SubDomain>www.example.com</SubDomain>\\n    <TotalCount>14141592653</TotalCount>\\n    <IpCount>20</IpCount>\\n    <V4HttpCount>3141592653</V4HttpCount>\\n    <V6HttpCount>3141592653</V6HttpCount>\\n    <HttpCount>3141592653</HttpCount>\\n    <HttpsCount>3141592653</HttpsCount>\\n    <V4HttpsCount>3141592653</V4HttpsCount>\\n    <V6HttpsCount>3141592653</V6HttpsCount>\\n</Statistics>","errorExample":""}]',
      'title' => '获取DoH子域名的请求量统计列表',
      'summary' => '获取DoH子域名的请求量统计列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDohUserInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间，格式：YYYY-MM-DD。

只能查询最近90天的记录，即：`StartDate >= Now - 90`。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-07-04',
          ),
        ),
        2 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '	
查询的结束时间，格式：YYYY-MM-DD。

默认为查询当天的时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-07-04',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '0F32959D-417B-4D66-8463-68606605E3E2',
              ),
              'SubDomainCount' => 
              array (
                'description' => '已接入子域名数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'PdnsId' => 
              array (
                'description' => '公共DNS用户ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '12345678',
              ),
              'DomainCount' => 
              array (
                'description' => '已接入域名数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0F32959D-417B-4D66-8463-68606605E3E2\\",\\n  \\"SubDomainCount\\": 5,\\n  \\"PdnsId\\": 12345678,\\n  \\"DomainCount\\": 2\\n}","errorExample":""},{"type":"xml","example":"<RequestId>0F32959D-417B-4D66-8463-68606605E3E2</RequestId>\\n<SubDomainCount>123</SubDomainCount>\\n<PdnsId>12345678</PdnsId>\\n<DomainCount>123</DomainCount>","errorExample":""}]',
      'title' => '获取DoH用户基本信息',
      'summary' => '获取DoH用户基本信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddGtmRecoveryPlan' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容灾预案名称',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'name-example',
          ),
        ),
        2 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备注',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'remark',
          ),
        ),
        3 => 
        array (
          'name' => 'FaultAddrPool',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '故障地址池ID列表',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '["hra0or"]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RecoveryPlanId' => 
              array (
                'description' => '容灾预案ID',
                'type' => 'string',
                'example' => '100',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RecoveryPlanId\\": \\"100\\",\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<AddGtmRecoveryPlanResponse>\\r\\n\\t<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n\\t<RecoveryPlanId>100</RecoveryPlanId>\\r\\n</AddGtmRecoveryPlanResponse>","errorExample":""}]',
      'title' => '新增容灾预案',
      'summary' => '新增容灾预案。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteGtmRecoveryPlan' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'RecoveryPlanId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容灾预案ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteGtmRecoveryPlanResponse>\\r\\n<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n</DeleteGtmRecoveryPlanResponse>","errorExample":""}]',
      'title' => '删除容灾预案',
      'summary' => '删除容灾预案。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateGtmRecoveryPlan' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'RecoveryPlanId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容灾预案ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '100',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容灾预案名称',
            'type' => 'string',
            'required' => false,
            'example' => 'abc',
          ),
        ),
        3 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备注',
            'type' => 'string',
            'required' => false,
            'example' => 'remark',
          ),
        ),
        4 => 
        array (
          'name' => 'FaultAddrPool',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '故障地址池列表',
            'type' => 'string',
            'required' => false,
            'example' => '["hra0or"]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateGtmRecoveryPlanResponse>\\r\\n<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n</UpdateGtmRecoveryPlanResponse>","errorExample":""}]',
      'title' => '修改容灾预案',
      'summary' => '修改容灾预案。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmRecoveryPlan' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'RecoveryPlanId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容灾预案ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => '预案状态',
                'type' => 'string',
                'example' => 'UNEXECUTED',
              ),
              'LastRollbackTime' => 
              array (
                'description' => '最近回滚时间',
                'type' => 'string',
                'example' => '2019-08-11T06:45Z',
              ),
              'FaultAddrPoolNum' => 
              array (
                'description' => '故障地址池个数',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'FaultAddrPools' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'FaultAddrPool' => 
                  array (
                    'description' => '故障地址池列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Addrs' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Addr' => 
                            array (
                              'description' => '地址列表',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Value' => 
                                  array (
                                    'description' => '地址值',
                                    'type' => 'string',
                                    'example' => '1.1.1.1',
                                  ),
                                  'Mode' => 
                                  array (
                                    'description' => '地址模式',
                                    'type' => 'string',
                                    'example' => 'OFFLINE',
                                  ),
                                  'Id' => 
                                  array (
                                    'description' => '地址ID',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '739',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'AddrPoolId' => 
                        array (
                          'description' => '地址池ID',
                          'type' => 'string',
                          'example' => 'hra0oq',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID',
                          'type' => 'string',
                          'example' => 'instance-zwy-38',
                        ),
                        'AddrPoolName' => 
                        array (
                          'description' => '地址池名称',
                          'type' => 'string',
                          'example' => '压测-Failover-1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'LastExecuteTime' => 
              array (
                'description' => '最近执行时间',
                'type' => 'string',
                'example' => '2019-08-11T05:04Z',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '0A5F4315-D6E8-435E-82DF-24F4C97D6999',
              ),
              'CreateTime' => 
              array (
                'description' => '创建时间',
                'type' => 'string',
                'example' => '2019-08-11T05:04Z',
              ),
              'LastExecuteTimestamp' => 
              array (
                'description' => '最近执行时间（时间戳）',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1565505898000',
              ),
              'Remark' => 
              array (
                'description' => '备注',
                'type' => 'string',
                'example' => 'remark-example',
              ),
              'Name' => 
              array (
                'description' => '容灾预案名称',
                'type' => 'string',
                'example' => 'name-example',
              ),
              'RecoveryPlanId' => 
              array (
                'description' => '容灾预案ID',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '55',
              ),
              'UpdateTime' => 
              array (
                'description' => '更新时间',
                'type' => 'string',
                'example' => '2019-08-11T06:45Z',
              ),
              'UpdateTimestamp' => 
              array (
                'description' => '更新时间（时间戳）',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1565499867000',
              ),
              'LastRollbackTimestamp' => 
              array (
                'description' => '最近回滚时间（时间戳）',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1565505919000',
              ),
              'CreateTimestamp' => 
              array (
                'description' => '创建时间（时间戳）',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1565499867000',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Status\\": \\"UNEXECUTED\\",\\n  \\"LastRollbackTimestamp\\": 1565505919000,\\n  \\"UpdateTime\\": \\"2019-08-11T06:45Z\\",\\n  \\"Remark\\": \\"remark-example\\",\\n  \\"CreateTime\\": \\"2019-08-11T05:04Z\\",\\n  \\"RecoveryPlanId\\": 55,\\n  \\"UpdateTimestamp\\": 1565499867000,\\n  \\"RequestId\\": \\"0A5F4315-D6E8-435E-82DF-24F4C97D6999\\",\\n  \\"LastExecuteTimestamp\\": 1565505898000,\\n  \\"LastExecuteTime\\": \\"2019-08-11T05:04Z\\",\\n  \\"LastRollbackTime\\": \\"2019-08-11T06:45Z\\",\\n  \\"Name\\": \\"name-example\\",\\n  \\"FaultAddrPoolNum\\": 2,\\n  \\"CreateTimestamp\\": 1565499867000,\\n  \\"FaultAddrPools\\": {\\n    \\"FaultAddrPool\\": [\\n      {\\n        \\"AddrPoolId\\": \\"hra0oq\\",\\n        \\"InstanceId\\": \\"instance-zwy-38\\",\\n        \\"AddrPoolName\\": \\"压测-Failover-1\\",\\n        \\"Addrs\\": {\\n          \\"Addr\\": [\\n            {\\n              \\"Value\\": \\"1.1.1.1\\",\\n              \\"Mode\\": \\"OFFLINE\\",\\n              \\"Id\\": 739\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmRecoveryPlanResponse>\\r\\n\\t<CreateTimestamp>1565499867000</CreateTimestamp>\\r\\n\\t<UpdateTimestamp>1565505919000</UpdateTimestamp>\\r\\n\\t<LastRollbackTime>2019-08-11T06:45Z</LastRollbackTime>\\r\\n\\t<UpdateTime>2019-08-11T06:45Z</UpdateTime>\\r\\n\\t<RecoveryPlanId>55</RecoveryPlanId>\\r\\n\\t<Name>name-example</Name>\\r\\n\\t<Status>ROLLED_BACK</Status>\\r\\n\\t<LastRollbackTimestamp>1565505919000</LastRollbackTimestamp>\\r\\n\\t<LastExecuteTimestamp>1565505898000</LastExecuteTimestamp>\\r\\n\\t<RequestId>0A5F4315-D6E8-435E-82DF-24F4C97D6999</RequestId>\\r\\n\\t<CreateTime>2019-08-11T05:04Z</CreateTime>\\r\\n\\t<LastExecuteTime>2019-08-11T06:44Z</LastExecuteTime>\\r\\n\\t<FaultAddrPoolNum>2</FaultAddrPoolNum>\\r\\n\\t<FaultAddrPools>\\r\\n\\t\\t<FaultAddrPool>\\r\\n\\t\\t\\t<AddrPoolName>压测-Failover-1</AddrPoolName>\\r\\n\\t\\t\\t<Addrs>\\r\\n\\t\\t\\t\\t<Addr>\\r\\n\\t\\t\\t\\t\\t<Value>1.1.1.1</Value>\\r\\n\\t\\t\\t\\t\\t<Id>739</Id>\\r\\n\\t\\t\\t\\t\\t<Mode>OFFLINE</Mode>\\r\\n\\t\\t\\t\\t</Addr>\\r\\n\\t\\t\\t\\t<Addr>\\r\\n\\t\\t\\t\\t\\t<Value>2.2.2.2</Value>\\r\\n\\t\\t\\t\\t\\t<Id>740</Id>\\r\\n\\t\\t\\t\\t\\t<Mode>OFFLINE</Mode>\\r\\n\\t\\t\\t\\t</Addr>\\r\\n\\t\\t\\t</Addrs>\\r\\n\\t\\t\\t<InstanceId>instance-zwy-38</InstanceId>\\r\\n\\t\\t\\t<AddrPoolId>hra0oq</AddrPoolId>\\r\\n\\t\\t</FaultAddrPool>\\r\\n\\t</FaultAddrPools>\\r\\n\\t<Remark>remark-example</Remark>\\r\\n</DescribeGtmRecoveryPlanResponse>","errorExample":""}]',
      'title' => '获取容灾预案详情',
      'summary' => '获取容灾预案详情。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmRecoveryPlanAvailableConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Instances' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Instance' => 
                  array (
                    'description' => '实例列表',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AddrPools' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AddrPool' => 
                            array (
                              'description' => '地址池列表',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'AddrPoolId' => 
                                  array (
                                    'description' => '地址池ID',
                                    'type' => 'string',
                                    'example' => '地址池1',
                                  ),
                                  'Name' => 
                                  array (
                                    'description' => '地址池名称',
                                    'type' => 'string',
                                    'example' => 'hra0i9',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '实例名称',
                          'type' => 'string',
                          'example' => 'instance-name-example',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID',
                          'type' => 'string',
                          'example' => 'instance-example',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => 'F8F8EF50-8B7F-4702-B294-97170A423403',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F8F8EF50-8B7F-4702-B294-97170A423403\\",\\n  \\"Instances\\": {\\n    \\"Instance\\": [\\n      {\\n        \\"InstanceName\\": \\"instance-name-example\\",\\n        \\"InstanceId\\": \\"instance-example\\",\\n        \\"AddrPools\\": {\\n          \\"AddrPool\\": [\\n            {\\n              \\"Name\\": \\"hra0i9\\",\\n              \\"AddrPoolId\\": \\"地址池1\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmRecoveryPlanAvailableConfigResponse>\\r\\n\\t<RequestId>F8F8EF50-8B7F-4702-B294-97170A423403</RequestId>\\r\\n\\t<Instances>\\r\\n\\t\\t<Instance>\\r\\n\\t\\t\\t<InstanceId>instance-example</InstanceId>\\r\\n\\t\\t\\t<AddrPools>\\r\\n\\t\\t\\t\\t<AddrPool>\\r\\n\\t\\t\\t\\t\\t<Name>地址池2</Name>\\r\\n\\t\\t\\t\\t\\t<AddrPoolId>hra0i9</AddrPoolId>\\r\\n\\t\\t\\t\\t</AddrPool>\\r\\n\\t\\t\\t\\t<AddrPool>\\r\\n\\t\\t\\t\\t\\t<Name>地址池1</Name>\\r\\n\\t\\t\\t\\t\\t<AddrPoolId>hra0ig</AddrPoolId>\\r\\n\\t\\t\\t\\t</AddrPool>\\r\\n\\t\\t\\t</AddrPools>\\r\\n\\t\\t\\t<InstanceName>instance-name-example</InstanceName>\\r\\n\\t\\t</Instance>\\r\\n\\t</Instances>\\r\\n</DescribeGtmRecoveryPlanAvailableConfigResponse>","errorExample":""}]',
      'title' => '获取容灾预案可设置的配置',
      'summary' => '获取容灾预案可设置的配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGtmRecoveryPlans' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询关键字。支持容灾预案名称模糊匹配。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RecoveryPlans' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RecoveryPlan' => 
                  array (
                    'description' => '容灾预案列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '预案状态。其中：

- **UNEXECUTED**：未执行
- **EXECUTED**：已执行
- **ROLLED_BACK**：已回滚',
                          'type' => 'string',
                          'example' => 'UNEXECUTED',
                        ),
                        'LastRollbackTimestamp' => 
                        array (
                          'description' => '最近回滚时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1565505919000',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '更新时间。',
                          'type' => 'string',
                          'example' => '2019-08-11T06:45Z',
                        ),
                        'Remark' => 
                        array (
                          'description' => '备注。',
                          'type' => 'string',
                          'example' => 'remark-example',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '创建时间。',
                          'type' => 'string',
                          'example' => '2019-08-11T06:45Z',
                        ),
                        'RecoveryPlanId' => 
                        array (
                          'description' => '容灾预案ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '55',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '更新时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1565505919000',
                        ),
                        'LastExecuteTimestamp' => 
                        array (
                          'description' => '最近执行时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1565505898000',
                        ),
                        'LastExecuteTime' => 
                        array (
                          'description' => '最近执行时间。',
                          'type' => 'string',
                          'example' => '2019-08-11T06:44Z',
                        ),
                        'LastRollbackTime' => 
                        array (
                          'description' => '最近回滚时间。',
                          'type' => 'string',
                          'example' => '2019-08-11T06:45Z',
                        ),
                        'Name' => 
                        array (
                          'description' => '容灾预案名称。',
                          'type' => 'string',
                          'example' => 'name-example',
                        ),
                        'FaultAddrPoolNum' => 
                        array (
                          'description' => '故障地址池个数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1565499867000',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '2BA072CF-CA21-4A34-B6C2-227BE2C58079',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RecoveryPlans\\": {\\n    \\"RecoveryPlan\\": [\\n      {\\n        \\"Status\\": \\"UNEXECUTED\\",\\n        \\"LastRollbackTimestamp\\": 1565505919000,\\n        \\"UpdateTime\\": \\"2019-08-11T06:45Z\\",\\n        \\"Remark\\": \\"remark-example\\",\\n        \\"CreateTime\\": \\"2019-08-11T06:45Z\\",\\n        \\"RecoveryPlanId\\": 55,\\n        \\"UpdateTimestamp\\": 1565505919000,\\n        \\"LastExecuteTimestamp\\": 1565505898000,\\n        \\"LastExecuteTime\\": \\"2019-08-11T06:44Z\\",\\n        \\"LastRollbackTime\\": \\"2019-08-11T06:45Z\\",\\n        \\"Name\\": \\"name-example\\",\\n        \\"FaultAddrPoolNum\\": 0,\\n        \\"CreateTimestamp\\": 1565499867000\\n      }\\n    ]\\n  },\\n  \\"PageSize\\": 20,\\n  \\"RequestId\\": \\"2BA072CF-CA21-4A34-B6C2-227BE2C58079\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 10\\n}","errorExample":""},{"type":"xml","example":"<DescribeGtmRecoveryPlansResponse>\\r\\n<PageNumber>1</PageNumber>\\r\\n\\t<PageSize>20</PageSize>\\r\\n\\t<RequestId>2BA072CF-CA21-4A34-B6C2-227BE2C58079</RequestId>\\r\\n\\t<TotalItems>10</TotalItems>\\r\\n\\t<TotalPages>1</TotalPages>\\r\\n\\t<RecoveryPlans>\\r\\n\\t\\t<RecoveryPlan>\\r\\n\\t\\t\\t<CreateTimestamp>1565499867000</CreateTimestamp>\\r\\n\\t\\t\\t<LastRollbackTime>2019-08-11T06:45Z</LastRollbackTime>\\r\\n\\t\\t\\t<UpdateTimestamp>1565505919000</UpdateTimestamp>\\r\\n\\t\\t\\t<UpdateTime>2019-08-11T06:45Z</UpdateTime>\\r\\n\\t\\t\\t<RecoveryPlanId>55</RecoveryPlanId>\\r\\n\\t\\t\\t<Name>name-example</Name>\\r\\n\\t\\t\\t<LastRollbackTimestamp>1565505919000</LastRollbackTimestamp>\\r\\n\\t\\t\\t<Status>ROLLED_BACK</Status>\\r\\n\\t\\t\\t<LastExecuteTimestamp>1565505898000</LastExecuteTimestamp>\\r\\n\\t\\t\\t<CreateTime>2019-08-11T05:04Z</CreateTime>\\r\\n\\t\\t\\t<LastExecuteTime>2019-08-11T06:44Z</LastExecuteTime>\\r\\n\\t\\t\\t<FaultAddrPoolNum>0</FaultAddrPoolNum>\\r\\n\\t\\t\\t<Remark>remark-example</Remark>\\r\\n\\t\\t</RecoveryPlan>\\r\\n\\t</RecoveryPlans>\\r\\n</DescribeGtmRecoveryPlansResponse>","errorExample":""}]',
      'title' => '获取容灾预案列表',
      'summary' => '获取容灾预案列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ExecuteGtmRecoveryPlan' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'RecoveryPlanId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容灾预案ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\"\\n}","errorExample":""},{"type":"xml","example":"<ExecuteGtmRecoveryPlanResponse>\\r\\n<RequestId>6856BCF6-11D6-4D7E-AC53-FD579933522B</RequestId>\\r\\n</ExecuteGtmRecoveryPlanResponse>","errorExample":""}]',
      'title' => '执行容灾预案',
      'summary' => '执行容灾预案。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PreviewGtmRecoveryPlan' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'RecoveryPlanId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容灾预案ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '100',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**20**，默认为**5**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '853805EA-3D47-47D5-9A1A-A45C24313ABD',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Previews' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Preview' => 
                  array (
                    'description' => '容灾预案执行预览。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => 'gtm-cn-wwo3a3hbz**',
                        ),
                        'SwitchInfos' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SwitchInfo' => 
                            array (
                              'description' => '切换信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'StrategyName' => 
                                  array (
                                    'description' => '策略名称。',
                                    'type' => 'string',
                                    'example' => 'hrb5ju',
                                  ),
                                  'Content' => 
                                  array (
                                    'description' => '格式化的消息内容。',
                                    'type' => 'string',
                                    'example' => '默认地址池（默认地址池1）切换备用地址池（备用地址池1）',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Name' => 
                        array (
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => 'name-example',
                        ),
                        'UserDomainName' => 
                        array (
                          'description' => '用户域名（列表）。',
                          'type' => 'string',
                          'example' => '30.yyy.com',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'TotalItems' => 
              array (
                'description' => '总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '15',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 5,\\n  \\"RequestId\\": \\"853805EA-3D47-47D5-9A1A-A45C24313ABD\\",\\n  \\"PageNumber\\": 1,\\n  \\"Previews\\": {\\n    \\"Preview\\": [\\n      {\\n        \\"InstanceId\\": \\"gtm-cn-wwo3a3hbz**\\",\\n        \\"SwitchInfos\\": {\\n          \\"SwitchInfo\\": [\\n            {\\n              \\"StrategyName\\": \\"hrb5ju\\",\\n              \\"Content\\": \\"默认地址池（默认地址池1）切换备用地址池（备用地址池1）\\"\\n            }\\n          ]\\n        },\\n        \\"Name\\": \\"name-example\\",\\n        \\"UserDomainName\\": \\"30.yyy.com\\"\\n      }\\n    ]\\n  },\\n  \\"TotalPages\\": 3,\\n  \\"TotalItems\\": 15\\n}","errorExample":""},{"type":"xml","example":"<PreviewGtmRecoveryPlanResponse>\\r\\n\\t<PageNumber>1</PageNumber>\\r\\n\\t<Previews>\\r\\n\\t\\t<Preview>\\r\\n\\t\\t\\t<Name>name-example</Name>\\r\\n\\t\\t\\t<SwitchInfos>\\r\\n\\t\\t\\t\\t<SwitchInfo>\\r\\n\\t\\t\\t\\t\\t<StrategyName>strategy-name-example-1</StrategyName>\\r\\n\\t\\t\\t\\t\\t<Content>默认地址池(默认地址池1) 切换 备用地址池(备用地址池1)</Content>\\r\\n\\t\\t\\t\\t</SwitchInfo>\\r\\n\\t\\t\\t\\t<SwitchInfo>\\r\\n\\t\\t\\t\\t\\t<StrategyName>strategy-name-examle-2</StrategyName>\\r\\n\\t\\t\\t\\t\\t<Content>默认地址池(默认地址池2) 切换 备用地址池(备用地址池2)</Content>\\r\\n\\t\\t\\t\\t</SwitchInfo>\\r\\n\\t\\t\\t</SwitchInfos>\\r\\n\\t\\t\\t<InstanceId>instance-example</InstanceId>\\r\\n\\t\\t\\t<UserDomainName>30.yyy.com</UserDomainName>\\r\\n\\t\\t</Preview>\\r\\n\\t</Previews>\\r\\n\\t<PageSize>5</PageSize>\\r\\n\\t<RequestId>853805EA-3D47-47D5-9A1A-A45C24313ABD</RequestId>\\r\\n\\t<TotalItems>15</TotalItems>\\r\\n\\t<TotalPages>3</TotalPages>\\r\\n</PreviewGtmRecoveryPlanResponse>","errorExample":""}]',
      'title' => '预览容灾预案',
      'summary' => '预览容灾预案。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RollbackGtmRecoveryPlan' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户语言',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'RecoveryPlanId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '容灾预案ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID',
                'type' => 'string',
                'example' => '853805EA-3D47-47D5-9A1A-A45C24313ABD',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"853805EA-3D47-47D5-9A1A-A45C24313ABD\\"\\n}","errorExample":""},{"type":"xml","example":"<RollbackGtmRecoveryPlanResponse>\\r\\n<RequestId>853805EA-3D47-47D5-9A1A-A45C24313ABD</RequestId>\\r\\n</RollbackGtmRecoveryPlanResponse>","errorExample":""}]',
      'title' => '回滚容灾预案',
      'summary' => '回滚容灾预案。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreatePdnsAppKey' => 
    array (
      'summary' => '创建公共DNS AppKey',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '',
    ),
    'RemovePdnsAppKey' => 
    array (
      'summary' => '删除公共DNS AppKey',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'AppKeyId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribePdnsAppKey' => 
    array (
      'summary' => '获取公共DNS AppKey 详情',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AppKeyId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        1 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'AuthCode',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'AppKey' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AppKeyId' => 
                  array (
                    'type' => 'string',
                  ),
                  'AppKeySecret' => 
                  array (
                    'type' => 'string',
                  ),
                  'State' => 
                  array (
                    'type' => 'string',
                  ),
                  'CreateDate' => 
                  array (
                    'type' => 'string',
                  ),
                  'CreateTimestamp' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribePdnsAppKeys' => 
    array (
      'summary' => '获取公共DNS AppKey 列表',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'AppKeys' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'AppKeyId' => 
                    array (
                      'type' => 'string',
                    ),
                    'CreateDate' => 
                    array (
                      'type' => 'string',
                    ),
                    'CreateTimestamp' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'State' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribeCloudGtmInstanceConfigFullInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回信息的语言类型：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局流量管理3.0实例id。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        3 => 
        array (
          'name' => 'ConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'Config-000**11',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF55925',
              ),
              'InstanceId' => 
              array (
                'title' => '实例id',
                'description' => '全局流量管理3.0实例id。',
                'type' => 'string',
                'example' => 'gtm-cn-wwo3a3hbz**',
              ),
              'ConfigId' => 
              array (
                'title' => '实例id',
                'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。',
                'type' => 'string',
                'example' => 'Config-000**11',
              ),
              'CreateTime' => 
              array (
                'title' => '创建时间',
                'description' => '实例创建时间。',
                'type' => 'string',
                'example' => '2024-03-15T01:46Z',
              ),
              'CreateTimestamp' => 
              array (
                'description' => '实例创建时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'UpdateTime' => 
              array (
                'title' => '修改时间',
                'description' => '最后一次修改时间。',
                'type' => 'string',
                'example' => '2024-03-15T01:46Z',
              ),
              'UpdateTimestamp' => 
              array (
                'description' => '最后一次修改时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'VersionCode' => 
              array (
                'title' => '版本code',
                'description' => '全局流量管理3.0实例版本：

- standard：标准版

- ultimate：旗舰版',
                'type' => 'string',
                'example' => 'ultimate',
              ),
              'CommodityCode' => 
              array (
                'title' => '商品code',
                'description' => '商品编码：

- dns_gtm_public_cn：中国站商品编码；

- dns_gtm_public_intl：国际站商品编码；',
                'type' => 'string',
                'example' => 'dns_gtm_public_cn',
              ),
              'InstanceName' => 
              array (
                'title' => '调度实例名称',
                'description' => '调度实例名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'ScheduleZoneMode' => 
              array (
                'title' => '接入zone分配模式',
                'description' => '接入域名分配模式：

- custom：自定义接入域名，用户自定义主机记录，并关联GTM实例所在账号下的Zone，生成接入域名

- sys_assign：系统默认分配接入域名，本功能已经不支持，请勿选择此模式',
                'type' => 'string',
                'example' => 'custom',
              ),
              'ScheduleZoneName' => 
              array (
                'title' => 'zone名称',
                'description' => 'zone名称，即GTM接入域名的父Zone。一般为GTM实例所在账号下，在云解析DNS控制台的托管域名，支持主域和子域。',
                'type' => 'string',
                'example' => 'example.com',
              ),
              'ScheduleHostname' => 
              array (
                'title' => '主机记录',
                'description' => 'GTM接入域名的主机记录。',
                'type' => 'string',
                'example' => 'www',
              ),
              'ScheduleDomainName' => 
              array (
                'title' => '域名，主机记录+zoneNamne',
                'description' => 'GTM接入域名，ScheduleHostname+ScheduleZoneName。',
                'type' => 'string',
                'example' => 'www.example.com',
              ),
              'ScheduleRrType' => 
              array (
                'title' => '调度解析记录类型',
                'description' => '调度域名的解析记录类型：

- A：IPv4地址

- AAAA：IPv6地址

- CNAME：域名',
                'type' => 'string',
                'example' => 'A',
              ),
              'Ttl' => 
              array (
                'title' => '调度调度实例的TTL',
                'description' => '全局TTL（单位：秒），接入域名解析到地址池中地址的TTL值，影响解析记录在运营商LocalDNS中的缓存时间，支持自定义TTL值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '60',
              ),
              'AddressPoolLbStrategy' => 
              array (
                'title' => '地址池的负载均衡策略',
                'description' => '地址池之间的负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址池。并且每次对于所有地址池进行轮转排序；

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址池（顺序号标识地址池返回的优先级，越小优先级越高）。若顺序号较小的地址池不可用时，返回下一个序号较小的地址池；

- weight：权重，支持对每个地址池设置不同的权重值，实现解析查询按照权重比例返回地址池；

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址池，实现用户就近访问的效果；',
                'type' => 'string',
                'example' => 'round_robin',
              ),
              'SequenceLbStrategyMode' => 
              array (
                'title' => '顺序负载策略模式（抢占式、非抢占式）',
                'description' => '地址池间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址池；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址池；',
                'type' => 'string',
                'example' => 'preemptive',
              ),
              'AvailableStatus' => 
              array (
                'description' => '域名实例服务可用状态：

- available：可用，域名“启用”且健康状态为“正常”，接入域名的服务可用状态为“可用”；

- unavailable：不可用，域名“禁用”或健康状态为“异常”，接入域名的服务可用状态为“不可用”；',
                'type' => 'string',
                'example' => 'available',
              ),
              'EnableStatus' => 
              array (
                'title' => '启用状态',
                'description' => '域名实例的启用状态：

- enable：启用状态，GTM实例智能调度策略生效；

- disable：禁用状态，GTM实例智能调度策略不可用；',
                'type' => 'string',
                'example' => 'enable',
              ),
              'HealthStatus' => 
              array (
                'title' => '监控状态',
                'description' => '域名实例健康状态：

- ok：正常，接入域名引用的所有地址池全部可用。

- ok_alert：警告，接入域名引用的所有地址池部分不可用。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，接入域名引用的所有地址池全部不可用。此时，使用实例所引用的顺序号较小的非空地址池中的地址进行兜底解析，尽可能帮助客户端获得解析结果。',
                'type' => 'string',
                'example' => 'ok',
              ),
              'AlertGroup' => 
              array (
                'title' => '告警通知组',
                'description' => '告警通知组。',
                'type' => 'string',
                'example' => '[\\"云账号报警联系人\\"]',
              ),
              'AlertConfig' => 
              array (
                'title' => '告警通知配置',
                'description' => '告警通知配置。',
                'type' => 'string',
                'example' => '[{\\"NoticeType\\":\\"addr_alert\\",\\"SmsNotice\\":true,\\"EmailNotice\\":true,\\"DingtalkNotice\\":true},{\\"NoticeType\\":\\"addr_resume\\",\\"SmsNotice\\":true,\\"EmailNotice\\":true,\\"DingtalkNotice\\":true},{\\"NoticeType\\":\\"addr_pool_unavailable\\",\\"SmsNotice\\":true,\\"EmailNotice\\":true,\\"DingtalkNotice\\":true},{\\"NoticeType\\":\\"addr_pool_available\\",\\"SmsNotice\\":true,\\"EmailNotice\\":true,\\"DingtalkNotice\\":true}]"',
              ),
              'Remark' => 
              array (
                'title' => '备注',
                'description' => '域名实例配置的备注。',
                'type' => 'string',
                'example' => 'test',
              ),
              'AddressPools' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AddressPool' => 
                  array (
                    'description' => '地址池列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '地址池配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreateTime' => 
                        array (
                          'description' => '地址池创建时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '地址池创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'UpdateTime' => 
                        array (
                          'description' => '地址池最后一次修改时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '地址池最后一次修改时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357
',
                        ),
                        'AddressPoolId' => 
                        array (
                          'title' => '地址池Id',
                          'description' => '地址池Id，地址池的唯一标识码。',
                          'type' => 'string',
                          'example' => 'pool-89528023225442**16',
                        ),
                        'WeightValue' => 
                        array (
                          'title' => '权重值',
                          'description' => '权重值（1-100之间的整数，包括1和100），支持对每个地址池设置不同的权重值，实现解析查询按照权重比例返回地址池。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'SerialNumber' => 
                        array (
                          'title' => '序号',
                          'description' => '顺序号，对于任何来源的解析请求，返回顺序号较小的地址池（顺序号标识地址池返回的优先级，越小优先级越高）。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'RequestSource' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'RequestSource' => 
                            array (
                              'description' => '解析请求来源列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '请求来源，是指解析请求的来源，GTM是根据终端所用LocalDNS的出口IP进行调度。若LocalDNS支持ECS (edns-client-subnet)，也可以根据访问终端的IP进行智能调度。',
                                'type' => 'string',
                                'example' => '["default"]',
                              ),
                            ),
                          ),
                        ),
                        'AddressPoolName' => 
                        array (
                          'title' => '地址池名称',
                          'description' => '地址池名称。',
                          'type' => 'string',
                          'example' => 'AddressPool-1',
                        ),
                        'AddressPoolType' => 
                        array (
                          'title' => '地址池类型ipv4、ipv6、domain',
                          'description' => '地址池类型：

- IPv4

- IPv6

- domain',
                          'type' => 'string',
                          'example' => 'IPv4',
                        ),
                        'AddressLbStrategy' => 
                        array (
                          'title' => '地址负载策略',
                          'description' => '地址池中地址间负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址。并且每次对于所有地址进行轮转排序。

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址（顺序号标识地址返回的优先级，越小优先级越高）。若顺序号较小的地址不可用时，返回下一个序号较小的地址。

- weight：权重，支持对每个地址设置不同的权重值，实现解析查询按照权重比例返回地址。

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址，实现用户就近访问的效果。',
                          'type' => 'string',
                          'example' => 'round_robin',
                        ),
                        'SequenceLbStrategyMode' => 
                        array (
                          'title' => '顺序负载策略模式（抢占式、非抢占式）',
                          'description' => '地址间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址；',
                          'type' => 'string',
                          'example' => 'preemptive',
                        ),
                        'EnableStatus' => 
                        array (
                          'title' => '启用状态',
                          'description' => '地址池启用状态：

- enable：启用状态

- disable：禁用状态',
                          'type' => 'string',
                          'example' => 'enable',
                        ),
                        'HealthJudgement' => 
                        array (
                          'title' => '健康判定',
                          'description' => '地址池健康状态判定条件：

- any_ok：地址池内至少1个地址是可用地址；

- p30_ok：地址池内至少30%地址是可用地址；

- p50_ok：地址池内至少50%地址是可用地址；

- p70_ok：地址池内至少70%地址是可用地址；

- all_ok：地址池内地址全部可用；',
                          'type' => 'string',
                          'example' => 'any_ok',
                        ),
                        'HealthStatus' => 
                        array (
                          'title' => '健康状态',
                          'description' => '地址池健康状态：

- ok：正常，地址池引用的所有地址全部可用。

- ok_alert：警告，地址池引用的地址部分不可用，但是地址池状态判定为正常。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，地址池引用的地址部分或全部不可用，地址池状态判定为异常。',
                          'type' => 'string',
                          'example' => 'ok',
                        ),
                        'AvailableStatus' => 
                        array (
                          'title' => '可用性状态',
                          'description' => '地址池可用性状态：

- available：可用

- unavailable：不可用',
                          'type' => 'string',
                          'example' => 'available',
                        ),
                        'Addresses' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Address' => 
                            array (
                              'description' => '地址列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '地址信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'CreateTime' => 
                                  array (
                                    'title' => '创建时间',
                                    'description' => '地址创建时间。',
                                    'type' => 'string',
                                    'example' => '2024-03-15T01:46Z',
                                  ),
                                  'CreateTimestamp' => 
                                  array (
                                    'description' => '地址创建时间（时间戳）。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1527690629357',
                                  ),
                                  'UpdateTime' => 
                                  array (
                                    'title' => '修改时间',
                                    'description' => '地址最后一次修改时间。',
                                    'type' => 'string',
                                    'example' => '2024-03-15T01:46Z',
                                  ),
                                  'UpdateTimestamp' => 
                                  array (
                                    'description' => '地址最后一次修改时间（时间戳）。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1527690629357
',
                                  ),
                                  'AddressId' => 
                                  array (
                                    'title' => '地址 ID',
                                    'description' => '地址id，唯一标识地址。',
                                    'type' => 'string',
                                    'example' => 'addr-89564712295703**96',
                                  ),
                                  'WeightValue' => 
                                  array (
                                    'title' => '权重',
                                    'description' => '权重值（1-100内的整数，包括1和100），支持对每个地址设置不同的权重值，实现解析查询按照权重比例返回地址。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'SerialNumber' => 
                                  array (
                                    'title' => '序号',
                                    'description' => '顺序号，标识地址返回的优先级，越小优先级越高。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'RequestSource' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'RequestSource' => 
                                      array (
                                        'description' => '解析请求来源列表。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '请求来源，是指解析请求的来源，GTM是根据终端所用LocalDNS的出口IP进行调度。若LocalDNS支持ECS (edns-client-subnet)，也可以根据访问终端的IP进行智能调度。',
                                          'type' => 'string',
                                          'example' => '["default"]',
                                        ),
                                      ),
                                    ),
                                  ),
                                  'Name' => 
                                  array (
                                    'title' => '地址名称',
                                    'description' => '地址名称。',
                                    'type' => 'string',
                                    'example' => 'Address-1',
                                  ),
                                  'Type' => 
                                  array (
                                    'title' => '地址类型',
                                    'description' => '地址类型：

- IPv4：ipv4地址

- IPv6：ipv6地址

- domain：域名',
                                    'type' => 'string',
                                    'example' => 'IPv4',
                                  ),
                                  'Address' => 
                                  array (
                                    'title' => '地址',
                                    'description' => 'IP地址或者域名。',
                                    'type' => 'string',
                                    'example' => '223.5.XX.XX',
                                  ),
                                  'AttributeInfo' => 
                                  array (
                                    'title' => '地址归属信息',
                                    'description' => '地址归属信息，当前版本不支持返回此参数。',
                                    'type' => 'string',
                                    'example' => '当前版本不支持返回此参数。',
                                  ),
                                  'Remark' => 
                                  array (
                                    'title' => '备注',
                                    'description' => '地址的备注。',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                  'EnableStatus' => 
                                  array (
                                    'title' => '启用状态 enable： 可用， disable：不可用',
                                    'description' => '地址启用状态，表示地址当前是否可用：

- enable：启用状态

- disable：禁用状态',
                                    'type' => 'string',
                                    'example' => 'enable',
                                  ),
                                  'AvailableMode' => 
                                  array (
                                    'title' => '可用状态设置模式',
                                    'description' => '地址探测异常切换方式：

- auto：自动模式（根据健康检查探测结果确定，探测异常停止解析，探测正常恢复解析）

- manual：手动模式（异常状态下停止解析，健康检查正常也不会恢复解析；正常状态下恢复解析，健康检查异常也只是告警，但不会停止解析。）',
                                    'type' => 'string',
                                    'example' => 'auto',
                                  ),
                                  'ManualAvailableStatus' => 
                                  array (
                                    'title' => '手动设置的可用状态',
                                    'description' => '当地址探测异常切换模式为manual时，地址设置的可用状态：

- available：正常，此状态下该地址正常解析，健康检查异常也只是告警，但不会停止解析；

- unavailable：异常，此状态下停止解析，健康检查正常也不会恢复解析；',
                                    'type' => 'string',
                                    'example' => 'available',
                                  ),
                                  'AvailableStatus' => 
                                  array (
                                    'title' => '地址可用状态',
                                    'description' => '地址可用状态：

- available：地址可用

- unavailable：地址不可用',
                                    'type' => 'string',
                                    'example' => 'available',
                                  ),
                                  'HealthStatus' => 
                                  array (
                                    'title' => '地址的健康状态：',
                                    'description' => '地址健康探测状态：

- ok：地址引用的健康探测模板探测任务全部正常；

- ok_alert：地址引用的健康探测模板探测任务部分异常，但地址判定为正常状态；

- ok_no_monitor：地址没有引用任何健康探测模板，状态正常；

- exceptional：地址引用的健康探测模板探测任务部分或全部异常，且地址判定为异常状态；',
                                    'type' => 'string',
                                    'example' => 'ok',
                                  ),
                                  'HealthJudgement' => 
                                  array (
                                    'title' => '地址健康状态判定为ok 的方式：',
                                    'description' => '地址健康状态判定条件：

- any_ok：所有探测模板至少一个探测正常

- p30_ok：所有探测模板至少30%探测正常

- p50_ok：所有探测模板至少50%探测正常

- p70_ok：所有探测模板至少70%探测正常

- all_ok：所有探测模板全部探测正常',
                                    'type' => 'string',
                                    'example' => 'any_ok',
                                  ),
                                  'SeqNonPreemptiveSchedule' => 
                                  array (
                                    'description' => '是否是顺序（非抢占）模式调度对象，针对于融合云纳管场景：

- true：是

- false：不是',
                                    'type' => 'boolean',
                                    'example' => 'false',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'SeqNonPreemptiveSchedule' => 
                        array (
                          'description' => '是否是顺序（非抢占）模式调度对象，针对于融合云纳管场景：

- true：是

- false：不是',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF55925\\",\\n  \\"InstanceId\\": \\"gtm-cn-wwo3a3hbz**\\",\\n  \\"ConfigId\\": \\"Config-000**11\\",\\n  \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n  \\"CreateTimestamp\\": 1527690629357,\\n  \\"UpdateTime\\": \\"2024-03-15T01:46Z\\",\\n  \\"UpdateTimestamp\\": 1527690629357,\\n  \\"VersionCode\\": \\"ultimate\\",\\n  \\"CommodityCode\\": \\"dns_gtm_public_cn\\",\\n  \\"InstanceName\\": \\"test\\",\\n  \\"ScheduleZoneMode\\": \\"custom\\",\\n  \\"ScheduleZoneName\\": \\"example.com\\",\\n  \\"ScheduleHostname\\": \\"www\\",\\n  \\"ScheduleDomainName\\": \\"www.example.com\\",\\n  \\"ScheduleRrType\\": \\"A\\",\\n  \\"Ttl\\": 60,\\n  \\"AddressPoolLbStrategy\\": \\"round_robin\\",\\n  \\"SequenceLbStrategyMode\\": \\"preemptive\\",\\n  \\"AvailableStatus\\": \\"available\\",\\n  \\"EnableStatus\\": \\"enable\\",\\n  \\"HealthStatus\\": \\"ok\\",\\n  \\"AlertGroup\\": \\"[\\\\\\\\\\\\\\"云账号报警联系人\\\\\\\\\\\\\\"]\\",\\n  \\"AlertConfig\\": \\"[{\\\\\\\\\\\\\\"NoticeType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"addr_alert\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"SmsNotice\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"EmailNotice\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"DingtalkNotice\\\\\\\\\\\\\\":true},{\\\\\\\\\\\\\\"NoticeType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"addr_resume\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"SmsNotice\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"EmailNotice\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"DingtalkNotice\\\\\\\\\\\\\\":true},{\\\\\\\\\\\\\\"NoticeType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"addr_pool_unavailable\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"SmsNotice\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"EmailNotice\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"DingtalkNotice\\\\\\\\\\\\\\":true},{\\\\\\\\\\\\\\"NoticeType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"addr_pool_available\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"SmsNotice\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"EmailNotice\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"DingtalkNotice\\\\\\\\\\\\\\":true}]\\\\\\"\\",\\n  \\"Remark\\": \\"test\\",\\n  \\"AddressPools\\": {\\n    \\"AddressPool\\": [\\n      {\\n        \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n        \\"CreateTimestamp\\": 1527690629357,\\n        \\"UpdateTime\\": \\"2024-03-15T01:46Z\\",\\n        \\"UpdateTimestamp\\": 1527690629357,\\n        \\"AddressPoolId\\": \\"pool-89528023225442**16\\",\\n        \\"WeightValue\\": 1,\\n        \\"SerialNumber\\": 1,\\n        \\"RequestSource\\": {\\n          \\"RequestSource\\": [\\n            \\"[\\\\\\"default\\\\\\"]\\"\\n          ]\\n        },\\n        \\"AddressPoolName\\": \\"AddressPool-1\\",\\n        \\"AddressPoolType\\": \\"IPv4\\",\\n        \\"AddressLbStrategy\\": \\"round_robin\\",\\n        \\"SequenceLbStrategyMode\\": \\"preemptive\\",\\n        \\"EnableStatus\\": \\"enable\\",\\n        \\"HealthJudgement\\": \\"any_ok\\",\\n        \\"HealthStatus\\": \\"ok\\",\\n        \\"AvailableStatus\\": \\"available\\",\\n        \\"Addresses\\": {\\n          \\"Address\\": [\\n            {\\n              \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n              \\"CreateTimestamp\\": 1527690629357,\\n              \\"UpdateTime\\": \\"2024-03-15T01:46Z\\",\\n              \\"UpdateTimestamp\\": 1527690629357,\\n              \\"AddressId\\": \\"addr-89564712295703**96\\",\\n              \\"WeightValue\\": 1,\\n              \\"SerialNumber\\": 1,\\n              \\"RequestSource\\": {\\n                \\"RequestSource\\": [\\n                  \\"[\\\\\\"default\\\\\\"]\\"\\n                ]\\n              },\\n              \\"Name\\": \\"Address-1\\",\\n              \\"Type\\": \\"IPv4\\",\\n              \\"Address\\": \\"223.5.XX.XX\\",\\n              \\"AttributeInfo\\": \\"当前版本不支持返回此参数。\\",\\n              \\"Remark\\": \\"test\\",\\n              \\"EnableStatus\\": \\"enable\\",\\n              \\"AvailableMode\\": \\"auto\\",\\n              \\"ManualAvailableStatus\\": \\"available\\",\\n              \\"AvailableStatus\\": \\"available\\",\\n              \\"HealthStatus\\": \\"ok\\",\\n              \\"HealthJudgement\\": \\"any_ok\\",\\n              \\"SeqNonPreemptiveSchedule\\": false\\n            }\\n          ]\\n        },\\n        \\"SeqNonPreemptiveSchedule\\": false\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取实例配置完整信息',
    ),
    'ListCloudGtmAddressPools' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'AddressPoolName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'AddressPool-1',
          ),
        ),
        5 => 
        array (
          'name' => 'AddressPoolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池类型：

- IPv4：表示要解析的服务地址是IPv4地址

- IPv6：表示要解析的服务地址是IPv6地址

- domain：表示要解析的服务地址是域名',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        6 => 
        array (
          'name' => 'EnableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池启用状态：

- enable：启用状态

- disable：禁用状态',
            'type' => 'string',
            'required' => false,
            'example' => 'enable',
          ),
        ),
        7 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池备注。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '地址池总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '11',
              ),
              'AddressPools' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AddressPool' => 
                  array (
                    'description' => '地址池列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '地址池信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreateTime' => 
                        array (
                          'title' => '创建时间',
                          'description' => '地址池创建时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '地址池创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'UpdateTime' => 
                        array (
                          'title' => '修改时间',
                          'description' => '地址池最后一次修改时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '地址池最后一次修改时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357
',
                        ),
                        'AddressPoolId' => 
                        array (
                          'title' => '地址池Id',
                          'description' => '地址池Id，地址池的唯一标识码。',
                          'type' => 'string',
                          'example' => 'pool-89528023225442**16',
                        ),
                        'AddressPoolName' => 
                        array (
                          'title' => '地址池名称',
                          'description' => '地址池名称。',
                          'type' => 'string',
                          'example' => 'AddressPool-1',
                        ),
                        'AddressPoolType' => 
                        array (
                          'title' => '地址池类型ipv4、ipv6、domain',
                          'description' => '地址池类型：

- IPv4

- IPv6

- domain',
                          'type' => 'string',
                          'example' => 'IPv4',
                        ),
                        'AddressLbStrategy' => 
                        array (
                          'title' => '地址负载策略',
                          'description' => '地址池中地址间负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址。并且每次对于所有地址进行轮转排序。

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址（顺序号标识地址返回的优先级，越小优先级越高）。若顺序号较小的地址不可用时，返回下一个序号较小的地址。

- weight：权重，支持对每个地址设置不同的权重值，实现解析查询按照权重比例返回地址。

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址，实现用户就近访问的效果。',
                          'type' => 'string',
                          'example' => 'round_robin',
                        ),
                        'SequenceLbStrategyMode' => 
                        array (
                          'title' => '顺序负载策略模式（抢占式、非抢占式）',
                          'description' => '地址间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址；',
                          'type' => 'string',
                          'example' => 'preemptive',
                        ),
                        'EnableStatus' => 
                        array (
                          'title' => '启用状态',
                          'description' => '地址池启用状态：

- enable：启用状态

- disable：禁用状态',
                          'type' => 'string',
                          'example' => 'enable',
                        ),
                        'HealthJudgement' => 
                        array (
                          'title' => '健康判定',
                          'description' => '地址健康状态判定条件：

- any_ok：所有探测模板至少一个探测正常

- p30_ok：所有探测模板至少30%探测正常

- p50_ok：所有探测模板至少50%探测正常

- p70_ok：所有探测模板至少70%探测正常

- all_ok：所有探测模板全部探测正常',
                          'type' => 'string',
                          'example' => 'any_ok',
                        ),
                        'HealthStatus' => 
                        array (
                          'title' => '健康状态',
                          'description' => '地址池健康状态：

- ok：正常，地址池引用的所有地址全部可用。

- ok_alert：警告，地址池引用的地址部分不可用，但是地址池状态判定为正常。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，地址池引用的地址部分或全部不可用，地址池状态判定为异常。',
                          'type' => 'string',
                          'example' => 'ok',
                        ),
                        'AvailableStatus' => 
                        array (
                          'title' => '可用性状态',
                          'description' => '地址池可用性状态：

- available：可用

- unavailable：不可用',
                          'type' => 'string',
                          'example' => 'available',
                        ),
                        'Addresses' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Address' => 
                            array (
                              'description' => '地址列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '地址信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'CreateTime' => 
                                  array (
                                    'title' => '创建时间',
                                    'description' => '地址创建时间。',
                                    'type' => 'string',
                                    'example' => '2024-03-15T01:46Z',
                                  ),
                                  'CreateTimestamp' => 
                                  array (
                                    'description' => '地址创建时间（时间戳）。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1527690629357',
                                  ),
                                  'UpdateTime' => 
                                  array (
                                    'title' => '修改时间',
                                    'description' => '地址最后一次修改时间。',
                                    'type' => 'string',
                                    'example' => '2024-03-15T01:46Z',
                                  ),
                                  'UpdateTimestamp' => 
                                  array (
                                    'description' => '地址最后一次修改时间（时间戳）。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1527690629357',
                                  ),
                                  'AddressId' => 
                                  array (
                                    'title' => '地址 ID',
                                    'description' => '地址 ID，地址的唯一标识码。',
                                    'type' => 'string',
                                    'example' => 'addr-895182181143688192',
                                  ),
                                  'WeightValue' => 
                                  array (
                                    'title' => '权重',
                                    'description' => '权重值（1-100内的整数），支持对每个地址设置不同的权重值，实现解析查询按照权重比例返回地址。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'SerialNumber' => 
                                  array (
                                    'title' => '序号',
                                    'description' => '顺序号，标识地址返回的优先级，越小优先级越高。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'RequestSource' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'RequestSource' => 
                                      array (
                                        'description' => '请求来源列表。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '请求来源，是指解析请求的来源，GTM是根据终端所用LocalDNS的出口IP进行调度。若LocalDNS支持ECS (edns-client-subnet)，也可以根据访问终端的IP进行智能调度。',
                                          'type' => 'string',
                                          'example' => '["default"]',
                                        ),
                                      ),
                                    ),
                                  ),
                                  'Name' => 
                                  array (
                                    'title' => '地址名称',
                                    'description' => '地址名称。',
                                    'type' => 'string',
                                    'example' => 'Address-1',
                                  ),
                                  'Type' => 
                                  array (
                                    'title' => '地址类型',
                                    'description' => '地址类型：

- IPv4：ipv4地址

- IPv6：ipv6地址

- domain：域名',
                                    'type' => 'string',
                                    'example' => 'IPv4',
                                  ),
                                  'Address' => 
                                  array (
                                    'title' => '地址',
                                    'description' => 'IP地址或者域名。',
                                    'type' => 'string',
                                    'example' => '223.5.XX.XX',
                                  ),
                                  'AttributeInfo' => 
                                  array (
                                    'title' => '地址归属信息',
                                    'description' => '地址归属信息，当前版本不支持返回此参数。',
                                    'type' => 'string',
                                    'example' => '当前版本不支持返回此参数。',
                                  ),
                                  'Remark' => 
                                  array (
                                    'title' => '备注',
                                    'description' => '地址备注。',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                  'EnableStatus' => 
                                  array (
                                    'title' => '启用状态 enable： 可用， disable：不可用',
                                    'description' => '地址启用状态：

- enable：启用状态

- disable：禁用状态',
                                    'type' => 'string',
                                    'example' => 'enable',
                                  ),
                                  'AvailableMode' => 
                                  array (
                                    'title' => '可用状态设置模式',
                                    'description' => '地址探测异常切换方式：

- auto：自动模式（根据健康检查探测结果确定，探测异常停止解析，探测正常恢复解析）

- manual：手动模式（异常状态下停止解析，健康检查正常也不会恢复解析；正常状态下恢复解析，健康检查异常也只是告警，但不会停止解析。）',
                                    'type' => 'string',
                                    'example' => 'auto',
                                  ),
                                  'ManualAvailableStatus' => 
                                  array (
                                    'title' => '手动设置的可用状态',
                                    'description' => '当地址探测异常切换模式为manual时，地址设置的可用状态：

- available：正常，此状态下该地址正常解析，健康检查异常也只是告警，但不会停止解析；

- unavailable：异常，此状态下停止解析，健康检查正常也不会恢复解析；',
                                    'type' => 'string',
                                    'example' => 'available',
                                  ),
                                  'AvailableStatus' => 
                                  array (
                                    'title' => '地址可用状态',
                                    'description' => '地址可用状态：

- available：地址可用

- unavailable：地址不可用',
                                    'type' => 'string',
                                    'example' => 'available',
                                  ),
                                  'HealthStatus' => 
                                  array (
                                    'title' => '地址的健康状态：',
                                    'description' => '地址健康探测状态：

- ok：地址引用的健康探测模板探测任务全部正常；

- ok_alert：地址引用的健康探测模板探测任务部分异常，但地址判定为正常状态；

- ok_no_monitor：地址没有引用任何健康探测模板，状态正常；

- exceptional：地址引用的健康探测模板探测任务部分或全部异常，且地址判定为异常状态；',
                                    'type' => 'string',
                                    'example' => 'ok',
                                  ),
                                  'HealthJudgement' => 
                                  array (
                                    'title' => '地址健康状态判定为ok 的方式：',
                                    'description' => '地址健康状态判定条件：

- any_ok：所有探测模板至少一个探测正常

- p30_ok：所有探测模板至少30%探测正常

- p50_ok：所有探测模板至少50%探测正常

- p70_ok：所有探测模板至少70%探测正常

- all_ok：所有探测模板全部探测正常',
                                    'type' => 'string',
                                    'example' => 'any_ok',
                                  ),
                                  'HealthTasks' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'HealthTask' => 
                                      array (
                                        'title' => '健康探测任务列表',
                                        'description' => '健康探测任务列表。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '健康探测任务信息。',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Port' => 
                                            array (
                                              'description' => '健康检查探测的目标地址服务端口，当健康检查选择Ping协议时，不支持服务端口的配置。',
                                              'type' => 'integer',
                                              'format' => 'int32',
                                              'example' => '80',
                                            ),
                                            'TemplateId' => 
                                            array (
                                              'description' => '健康探测模板ID。',
                                              'type' => 'string',
                                              'example' => 'mtp-895180524251002880',
                                            ),
                                            'TemplateName' => 
                                            array (
                                              'description' => '健康探测模板名称。',
                                              'type' => 'string',
                                              'example' => 'IPv4-Ping',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                  'SeqNonPreemptiveSchedule' => 
                                  array (
                                    'description' => '是否是顺序（非抢占）模式调度对象，针对于融合云纳管场景：

- true：是

- false：不是',
                                    'type' => 'boolean',
                                    'example' => 'false',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Remark' => 
                        array (
                          'description' => '备注。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 20,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 11,\\n  \\"AddressPools\\": {\\n    \\"AddressPool\\": [\\n      {\\n        \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n        \\"CreateTimestamp\\": 1527690629357,\\n        \\"UpdateTime\\": \\"2024-03-15T01:46Z\\",\\n        \\"UpdateTimestamp\\": 1527690629357,\\n        \\"AddressPoolId\\": \\"pool-89528023225442**16\\",\\n        \\"AddressPoolName\\": \\"AddressPool-1\\",\\n        \\"AddressPoolType\\": \\"IPv4\\",\\n        \\"AddressLbStrategy\\": \\"round_robin\\",\\n        \\"SequenceLbStrategyMode\\": \\"preemptive\\",\\n        \\"EnableStatus\\": \\"enable\\",\\n        \\"HealthJudgement\\": \\"any_ok\\",\\n        \\"HealthStatus\\": \\"ok\\",\\n        \\"AvailableStatus\\": \\"available\\",\\n        \\"Addresses\\": {\\n          \\"Address\\": [\\n            {\\n              \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n              \\"CreateTimestamp\\": 1527690629357,\\n              \\"UpdateTime\\": \\"2024-03-15T01:46Z\\",\\n              \\"UpdateTimestamp\\": 1527690629357,\\n              \\"AddressId\\": \\"addr-895182181143688192\\",\\n              \\"WeightValue\\": 1,\\n              \\"SerialNumber\\": 1,\\n              \\"RequestSource\\": {\\n                \\"RequestSource\\": [\\n                  \\"[\\\\\\"default\\\\\\"]\\"\\n                ]\\n              },\\n              \\"Name\\": \\"Address-1\\",\\n              \\"Type\\": \\"IPv4\\",\\n              \\"Address\\": \\"223.5.XX.XX\\",\\n              \\"AttributeInfo\\": \\"当前版本不支持返回此参数。\\",\\n              \\"Remark\\": \\"test\\",\\n              \\"EnableStatus\\": \\"enable\\",\\n              \\"AvailableMode\\": \\"auto\\",\\n              \\"ManualAvailableStatus\\": \\"available\\",\\n              \\"AvailableStatus\\": \\"available\\",\\n              \\"HealthStatus\\": \\"ok\\",\\n              \\"HealthJudgement\\": \\"any_ok\\",\\n              \\"HealthTasks\\": {\\n                \\"HealthTask\\": [\\n                  {\\n                    \\"Port\\": 80,\\n                    \\"TemplateId\\": \\"mtp-895180524251002880\\",\\n                    \\"TemplateName\\": \\"IPv4-Ping\\"\\n                  }\\n                ]\\n              },\\n              \\"SeqNonPreemptiveSchedule\\": false\\n            }\\n          ]\\n        },\\n        \\"Remark\\": \\"test\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取地址池列表',
    ),
    'ListCloudGtmInstanceConfigs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- **zh-CN**：中文

- **en-US**：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22
',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度实例id',
            'description' => '全局流量管理3.0实例id。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        5 => 
        array (
          'name' => 'ScheduleZoneName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'zone名称',
            'description' => 'zone名称，即GTM接入域名的父Zone。一般为GTM实例所在账号下，在云解析DNS控制台的托管域名，支持主域和子域。',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
        6 => 
        array (
          'name' => 'EnableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '启用状态',
            'description' => '域名实例的启用状态：

- enable：启用状态，GTM实例智能调度策略生效；

- disable：禁用状态，GTM实例智能调度策略不可用；',
            'type' => 'string',
            'required' => false,
            'example' => 'enable',
          ),
        ),
        7 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备注。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        8 => 
        array (
          'name' => 'ScheduleDomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'GTM接入域名，ScheduleHostname+ScheduleZoneName。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.example.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '域名实例配置的总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'InstanceConfigs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceConfig' => 
                  array (
                    'description' => '实例配置列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '实例配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceId' => 
                        array (
                          'title' => '实例id',
                          'description' => '全局流量管理3.0实例id。',
                          'type' => 'string',
                          'example' => 'gtm-cn-wwo3a3hbz**',
                        ),
                        'ConfigId' => 
                        array (
                          'title' => '实例id',
                          'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。',
                          'type' => 'string',
                          'example' => 'Config-000**11
',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '创建时间',
                          'description' => '实例配置创建时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '实例创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'UpdateTime' => 
                        array (
                          'title' => '修改时间',
                          'description' => '实例配置最后一次修改时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z
',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '实例配置最后一次修改时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'VersionCode' => 
                        array (
                          'title' => '版本code',
                          'description' => '全局流量管理3.0实例版本：

- standard：标准版

- ultimate：旗舰版',
                          'type' => 'string',
                          'example' => 'ultimate',
                        ),
                        'CommodityCode' => 
                        array (
                          'title' => '商品code',
                          'description' => '商品编码：

- dns_gtm_public_cn：中国站商品编码；

- dns_gtm_public_intl：国际站商品编码',
                          'type' => 'string',
                          'example' => 'dns_gtm_public_cn',
                        ),
                        'ScheduleZoneMode' => 
                        array (
                          'title' => '接入zone分配模式',
                          'description' => '接入域名分配模式：

- custom：自定义接入域名，用户自定义主机记录，并关联GTM实例所在账号下的Zone，生成接入域名

- sys_assign：系统默认分配接入域名，本功能已经不支持，请勿选择此模式',
                          'type' => 'string',
                          'example' => 'custom',
                        ),
                        'ScheduleZoneName' => 
                        array (
                          'title' => 'zone名称',
                          'description' => 'zone名称，即GTM接入域名的父Zone。一般为GTM实例所在账号下，在云解析DNS控制台的托管域名，支持主域和子域。',
                          'type' => 'string',
                          'example' => 'example.com',
                        ),
                        'ScheduleHostname' => 
                        array (
                          'title' => '主机记录',
                          'description' => 'GTM接入域名的主机记录。',
                          'type' => 'string',
                          'example' => 'www',
                        ),
                        'ScheduleDomainName' => 
                        array (
                          'title' => '域名，主机记录+zoneNamne',
                          'description' => 'GTM接入域名，ScheduleHostname+ScheduleZoneName。',
                          'type' => 'string',
                          'example' => 'www.example.com
',
                        ),
                        'ScheduleRrType' => 
                        array (
                          'title' => '调度解析记录类型',
                          'description' => '调度域名的解析记录类型：

- A：IPv4地址

- AAAA：IPv6地址

- CNAME：域名',
                          'type' => 'string',
                          'example' => 'A',
                        ),
                        'Ttl' => 
                        array (
                          'title' => '调度调度实例的TTL',
                          'description' => '全局TTL（单位：秒），接入域名解析到地址池中地址的TTL值，影响解析记录在运营商LocalDNS中的缓存时间，支持自定义TTL值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '60',
                        ),
                        'AddressPoolLbStrategy' => 
                        array (
                          'title' => '地址池的负载均衡策略',
                          'description' => '地址池之间的负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址池。并且每次对于所有地址池进行轮转排序；

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址池（顺序号标识地址池返回的优先级，越小优先级越高）。若顺序号较小的地址池不可用时，返回下一个序号较小的地址池；

- weight：权重，支持对每个地址池设置不同的权重值，实现解析查询按照权重比例返回地址池；

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址池，实现用户就近访问的效果；',
                          'type' => 'string',
                          'example' => 'round_robin',
                        ),
                        'SequenceLbStrategyMode' => 
                        array (
                          'title' => '顺序负载策略模式（抢占式、非抢占式）',
                          'description' => '地址池间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址池；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址池；',
                          'type' => 'string',
                          'example' => 'preemptive',
                        ),
                        'AvailableStatus' => 
                        array (
                          'description' => '域名实例服务可用状态：

- available：可用，域名“启用”且健康状态为“正常”，接入域名的服务可用状态为“可用”；

- unavailable：不可用，域名“禁用”或健康状态为“异常”，接入域名的服务可用状态为“不可用”；',
                          'type' => 'string',
                          'example' => 'available',
                        ),
                        'EnableStatus' => 
                        array (
                          'title' => '启用状态',
                          'description' => '域名实例的启用状态：

- enable：启用状态，GTM实例智能调度策略生效；

- disable：禁用状态，GTM实例智能调度策略不可用；',
                          'type' => 'string',
                          'example' => 'enable',
                        ),
                        'HealthStatus' => 
                        array (
                          'title' => '监控状态',
                          'description' => '域名实例健康状态：

- ok：正常，接入域名引用的所有地址池全部可用。

- ok_alert：警告，接入域名引用的所有地址池部分不可用。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，接入域名引用的所有地址池全部不可用。此时，使用实例所引用的顺序号较小的非空地址池中的地址进行兜底解析，尽可能帮助客户端获得解析结果。',
                          'type' => 'string',
                          'example' => 'ok',
                        ),
                        'Remark' => 
                        array (
                          'title' => '备注',
                          'description' => '域名实例配置的备注。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'AddressPools' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AddressPool' => 
                            array (
                              'description' => '地址池列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '地址池配置信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'CreateTime' => 
                                  array (
                                    'description' => '地址池创建时间。',
                                    'type' => 'string',
                                    'example' => '2024-03-15T01:46Z',
                                  ),
                                  'CreateTimestamp' => 
                                  array (
                                    'description' => '地址池创建时间（时间戳）。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1527690629357',
                                  ),
                                  'UpdateTime' => 
                                  array (
                                    'description' => '地址池最后一次修改时间。',
                                    'type' => 'string',
                                    'example' => '2024-03-15T01:46Z',
                                  ),
                                  'UpdateTimestamp' => 
                                  array (
                                    'description' => '地址池最后一次修改时间（时间戳）。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1527690629357',
                                  ),
                                  'AddressPoolId' => 
                                  array (
                                    'title' => '地址池Id',
                                    'description' => '地址池Id，地址池的唯一标识码。',
                                    'type' => 'string',
                                    'example' => 'pool-89528023225442**16
',
                                  ),
                                  'WeightValue' => 
                                  array (
                                    'title' => '权重值',
                                    'description' => '权重值（1-100之间的整数，包括1和100），支持对每个地址池设置不同的权重值，实现解析查询按照权重比例返回地址池。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'SerialNumber' => 
                                  array (
                                    'title' => '序号',
                                    'description' => '顺序号，对于任何来源的解析请求，返回顺序号较小的地址池（顺序号标识地址池返回的优先级，越小优先级越高）。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'RequestSource' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'RequestSource' => 
                                      array (
                                        'description' => '解析请求来源列表。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '请求来源，是指解析请求的来源，GTM是根据终端所用LocalDNS的出口IP进行调度。若LocalDNS支持ECS (edns-client-subnet)，也可以根据访问终端的IP进行智能调度。',
                                          'type' => 'string',
                                          'example' => '["default"]',
                                        ),
                                      ),
                                    ),
                                  ),
                                  'AddressPoolName' => 
                                  array (
                                    'title' => '地址池名称',
                                    'description' => '地址池名称。',
                                    'type' => 'string',
                                    'example' => 'AddressPool-1
',
                                  ),
                                  'AddressPoolType' => 
                                  array (
                                    'title' => '地址池类型ipv4、ipv6、domain',
                                    'description' => '地址池类型：

- IPv4

- IPv6

- domain',
                                    'type' => 'string',
                                    'example' => 'IPv4',
                                  ),
                                  'AddressLbStrategy' => 
                                  array (
                                    'title' => '地址负载策略',
                                    'description' => '地址池中地址间负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址。并且每次对于所有地址进行轮转排序。

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址（顺序号标识地址返回的优先级，越小优先级越高）。若顺序号较小的地址不可用时，返回下一个序号较小的地址。

- weight：权重，支持对每个地址设置不同的权重值，实现解析查询按照权重比例返回地址。

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址，实现用户就近访问的效果。',
                                    'type' => 'string',
                                    'example' => 'round_robin',
                                  ),
                                  'SequenceLbStrategyMode' => 
                                  array (
                                    'title' => '顺序负载策略模式（抢占式、非抢占式）',
                                    'description' => '地址间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址；',
                                    'type' => 'string',
                                    'example' => 'preemptive',
                                  ),
                                  'EnableStatus' => 
                                  array (
                                    'title' => '启用状态',
                                    'description' => '地址池启用状态：

- enable：启用状态

- disable：禁用状态',
                                    'type' => 'string',
                                    'example' => 'enable',
                                  ),
                                  'HealthJudgement' => 
                                  array (
                                    'title' => '健康判定',
                                    'description' => '地址池健康状态：

- ok：正常，地址池引用的所有地址全部可用。

- ok_alert：警告，地址池引用的地址部分不可用，但是地址池状态判定为正常。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，地址池引用的地址部分或全部不可用，地址池状态判定为异常。',
                                    'type' => 'string',
                                    'example' => 'ok',
                                  ),
                                  'HealthStatus' => 
                                  array (
                                    'title' => '健康状态',
                                    'description' => '地址池健康状态：

- ok：正常，地址池引用的所有地址全部可用。

- ok_alert：警告，地址池引用的地址部分不可用，但是地址池状态判定为正常。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，地址池引用的地址部分或全部不可用，地址池状态判定为异常。',
                                    'type' => 'string',
                                    'example' => 'ok',
                                  ),
                                  'AvailableStatus' => 
                                  array (
                                    'title' => '可用性状态',
                                    'description' => '地址池可用性状态：

- available：可用

- unavailable：不可用',
                                    'type' => 'string',
                                    'example' => 'available',
                                  ),
                                  'SeqNonPreemptiveSchedule' => 
                                  array (
                                    'description' => '是否是顺序（非抢占）模式调度对象，针对于融合云纳管场景：

- true：是

- false：不是',
                                    'type' => 'boolean',
                                    'example' => 'false',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 20,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 10,\\n  \\"InstanceConfigs\\": {\\n    \\"InstanceConfig\\": [\\n      {\\n        \\"InstanceId\\": \\"gtm-cn-wwo3a3hbz**\\",\\n        \\"ConfigId\\": \\"Config-000**11\\\\n\\",\\n        \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n        \\"CreateTimestamp\\": 1527690629357,\\n        \\"UpdateTime\\": \\"2024-03-15T01:46Z\\\\n\\",\\n        \\"UpdateTimestamp\\": 1527690629357,\\n        \\"VersionCode\\": \\"ultimate\\",\\n        \\"CommodityCode\\": \\"dns_gtm_public_cn\\",\\n        \\"ScheduleZoneMode\\": \\"custom\\",\\n        \\"ScheduleZoneName\\": \\"example.com\\",\\n        \\"ScheduleHostname\\": \\"www\\",\\n        \\"ScheduleDomainName\\": \\"www.example.com\\\\n\\",\\n        \\"ScheduleRrType\\": \\"A\\",\\n        \\"Ttl\\": 60,\\n        \\"AddressPoolLbStrategy\\": \\"round_robin\\",\\n        \\"SequenceLbStrategyMode\\": \\"preemptive\\",\\n        \\"AvailableStatus\\": \\"available\\",\\n        \\"EnableStatus\\": \\"enable\\",\\n        \\"HealthStatus\\": \\"ok\\",\\n        \\"Remark\\": \\"test\\",\\n        \\"AddressPools\\": {\\n          \\"AddressPool\\": [\\n            {\\n              \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n              \\"CreateTimestamp\\": 1527690629357,\\n              \\"UpdateTime\\": \\"2024-03-15T01:46Z\\",\\n              \\"UpdateTimestamp\\": 1527690629357,\\n              \\"AddressPoolId\\": \\"pool-89528023225442**16\\\\n\\",\\n              \\"WeightValue\\": 1,\\n              \\"SerialNumber\\": 1,\\n              \\"RequestSource\\": {\\n                \\"RequestSource\\": [\\n                  \\"[\\\\\\"default\\\\\\"]\\"\\n                ]\\n              },\\n              \\"AddressPoolName\\": \\"AddressPool-1\\\\n\\",\\n              \\"AddressPoolType\\": \\"IPv4\\",\\n              \\"AddressLbStrategy\\": \\"round_robin\\",\\n              \\"SequenceLbStrategyMode\\": \\"preemptive\\",\\n              \\"EnableStatus\\": \\"enable\\",\\n              \\"HealthJudgement\\": \\"ok\\",\\n              \\"HealthStatus\\": \\"ok\\",\\n              \\"AvailableStatus\\": \\"available\\",\\n              \\"SeqNonPreemptiveSchedule\\": false\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取实例配置列表',
    ),
    'SearchCloudGtmMonitorTemplates' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为1，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康探测模板的名称，按照输入的关键字进行模糊搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4-Ping
',
          ),
        ),
        4 => 
        array (
          'name' => 'IpVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按照探测节点IP地址的类型进行精确搜索：

- IPv4：当探测的目标地址类型为IPv4地址时适用；

- IPv6：当探测的目标地址类型为IPv6地址时适用；',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        5 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按照探测协议类型进行精确搜索：

- ping

- tcp

- http

- https',
            'type' => 'string',
            'required' => false,
            'example' => 'ping',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '搜索到的健康探测模板总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Templates' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Template' => 
                  array (
                    'description' => '健康探测模板列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '健康探测模板信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TemplateId' => 
                        array (
                          'title' => '模板 ID ，全局唯一',
                          'description' => '健康探测模板ID，唯一标识健康探测模板。',
                          'type' => 'string',
                          'example' => 'mtp-89518052425100**80',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '创建时间',
                          'description' => '健康探测模板的创建时间。',
                          'type' => 'string',
                          'example' => '2024-03-23T13:09Z',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '健康探测模板的创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'UpdateTime' => 
                        array (
                          'title' => '修改时间',
                          'description' => '健康探测模板的最后一次修改时间。',
                          'type' => 'string',
                          'example' => '2024-03-29T13:20Z',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '健康探测模板的最后一次修改时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'Name' => 
                        array (
                          'title' => '探测模板名称',
                          'description' => '健康检查探测模板的名称，一般为了方便配置人员区分和记忆，建议名称可以区分健康检查协议。',
                          'type' => 'string',
                          'example' => 'IPv4-Ping',
                        ),
                        'IpVersion' => 
                        array (
                          'title' => '探测的网络环境 IP 版本',
                          'description' => '探测节点IP地址的类型：

- IPv4：当探测的目标地址类型为IPv4地址时适用；

- IPv6：当探测的目标地址类型为IPv6地址时适用；',
                          'type' => 'string',
                          'example' => 'IPv4',
                        ),
                        'Protocol' => 
                        array (
                          'title' => '探测协议',
                          'description' => '对目标IP地址发起探测的协议类型：

- ping

- tcp

- http

- https',
                          'type' => 'string',
                          'example' => 'ping',
                        ),
                        'Interval' => 
                        array (
                          'title' => '探测间隔（秒）',
                          'description' => '每次检查的时间间隔（秒），默认每间隔1分钟探测一次，健康检查间隔最小支持15秒（面向旗舰版实例开放）。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '60',
                        ),
                        'Timeout' => 
                        array (
                          'title' => '探测超时时间',
                          'description' => '探测超时时间（毫秒），大于超时时间未返回的数据包即判断为健康检查超时：

- 2000

- 3000

- 5000

- 10000',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5000',
                        ),
                        'EvaluationCount' => 
                        array (
                          'title' => '探测连续次数',
                          'description' => '重试次数，连续多次监控出现异常，系统才将应用服务判断为异常，以防止因为一些网络瞬间抖动等其他原因影响监控准确率。重试次数可选值为：

- 1

- 2

- 3',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'FailureRate' => 
                        array (
                          'title' => '告警失败率',
                          'description' => '所选节点探测失败比例（%），即健康检查异常的探测点占探测点总数的百分比，当失败比例超过设置的阈值时，将服务地址判断为异常。可设置的失败比例阈值为：

- 20

- 50

- 80

- 100',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '50',
                        ),
                        'ExtendInfo' => 
                        array (
                          'description' => 'Json 字符串扩展信息，各协议检查所需参数：

- http(s)：

    **host**：执行HTTP(S)监控时，指定HTTP(S)请求头部信息中携带的Host字段，用于标识需要访问的具体HTTP网站，默认为主域名，如果目标网站的host有特殊要求，请自行修改；

  **path**：HTTP路径，用户HTTP(S)健康检查的URL路径配置，系统默认填写“/”；

  **code**：当执行HTTP(S)监控时，根据Web服务器的返回码判断Web服务器是否正常工作，大于返回码报警阈值时，系统认为应用服务出现异常：

  - 400：Bad Request，即如果HTTP(S)请求携带了错误的请求参数，Web服务器将返回大于400的返回码，如果校验内容设置为“异常码大于400”，请务必在URL路径中填写精确的URL访问路径参数；

  - 500：Server Error，即如果Web服务器出现了某些异常，将返回大于500的异常码，系统默认使用大于500的异常码作为报警阈值；

  **sni**：是否开启sni，仅在HTTPS协议时使用。SNI（Server Name Indication）是TLS协议的一个扩展，它允许客户端在发起TLS握手时指定想要连接的主机名。由于TLS握手发生在HTTP请求的任何数据被发送之前，SNI允许服务器在发送证书之前知道客户端试图访问的服务，这使得服务器可以选择正确的证书来呈现给客户端。

    - true-开启
    
  - false-未开启
  
  **followRedirect**：是否跟随3XX重定向

  - true：监控点获取的状态码为3XX (301，302，303， 307，308) 时，跟随跳转；

  - false：不跳转；


- ping：

  **packetNum**：每次Ping监控，同时发出多少个ICMP数据包，可选20、50、100

   **packetLossRate**：异常时丢包率，每次ping监控，对发出的ICMP数据包，计算丢包率（%）。丢包率=（丢失数据包/发送的总ICMP数据包数目）* 100%，达到丢包率阈值时，异常报警。丢包率可选值为：10、30、40、80、90、100',
                          'type' => 'string',
                          'example' => '{\\"code\\":200,\\"path\\":\\"\\\\index.htm\\",\\"host\\":\\"aliyun.com\\"}',
                        ),
                        'IspCityNodes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'IspCityNode' => 
                            array (
                              'title' => '探点信息',
                              'description' => '探测节点列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '探测节点信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'CountryCode' => 
                                  array (
                                    'title' => '国家 Code',
                                    'description' => '国家编码。',
                                    'type' => 'string',
                                    'example' => '001',
                                  ),
                                  'CountryName' => 
                                  array (
                                    'title' => '国家名称',
                                    'description' => '国家名称。',
                                    'type' => 'string',
                                    'example' => '中国',
                                  ),
                                  'CityCode' => 
                                  array (
                                    'title' => '城市 Code',
                                    'description' => '城市编码。',
                                    'type' => 'string',
                                    'example' => '503',
                                  ),
                                  'CityName' => 
                                  array (
                                    'title' => '城市名称',
                                    'description' => '城市名称。',
                                    'type' => 'string',
                                    'example' => '张家口市',
                                  ),
                                  'GroupType' => 
                                  array (
                                    'title' => '监控探点分组类型',
                                    'description' => '探测节点分组类型：

- BGP：BGP节点

- OVERSEAS：国际节点

- ISP：运营商节点',
                                    'type' => 'string',
                                    'example' => 'BGP',
                                  ),
                                  'GroupName' => 
                                  array (
                                    'title' => '监控探点分组类型名称',
                                    'description' => '探测节点分组类型名称。',
                                    'type' => 'string',
                                    'example' => 'BGP',
                                  ),
                                  'IspCode' => 
                                  array (
                                    'title' => 'ISP Code',
                                    'description' => '运营商编码。',
                                    'type' => 'string',
                                    'example' => '465',
                                  ),
                                  'IspName' => 
                                  array (
                                    'title' => 'ISP 名称',
                                    'description' => '运营商名称。',
                                    'type' => 'string',
                                    'example' => '阿里巴巴',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Remark' => 
                        array (
                          'description' => '健康探测模板的备注。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 1,\\n  \\"PageSize\\": 20,\\n  \\"PageNumber\\": 1,\\n  \\"Templates\\": {\\n    \\"Template\\": [\\n      {\\n        \\"TemplateId\\": \\"mtp-89518052425100**80\\",\\n        \\"CreateTime\\": \\"2024-03-23T13:09Z\\",\\n        \\"CreateTimestamp\\": 1527690629357,\\n        \\"UpdateTime\\": \\"2024-03-29T13:20Z\\",\\n        \\"UpdateTimestamp\\": 1527690629357,\\n        \\"Name\\": \\"IPv4-Ping\\",\\n        \\"IpVersion\\": \\"IPv4\\",\\n        \\"Protocol\\": \\"ping\\",\\n        \\"Interval\\": 60,\\n        \\"Timeout\\": 5000,\\n        \\"EvaluationCount\\": 2,\\n        \\"FailureRate\\": 50,\\n        \\"ExtendInfo\\": \\"{\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\":200,\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\index.htm\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"host\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"aliyun.com\\\\\\\\\\\\\\"}\\",\\n        \\"IspCityNodes\\": {\\n          \\"IspCityNode\\": [\\n            {\\n              \\"CountryCode\\": \\"001\\",\\n              \\"CountryName\\": \\"中国\\",\\n              \\"CityCode\\": \\"503\\",\\n              \\"CityName\\": \\"张家口市\\",\\n              \\"GroupType\\": \\"BGP\\",\\n              \\"GroupName\\": \\"BGP\\",\\n              \\"IspCode\\": \\"465\\",\\n              \\"IspName\\": \\"阿里巴巴\\"\\n            }\\n          ]\\n        },\\n        \\"Remark\\": \\"test\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '搜索健康检查模板列表',
    ),
    'UpdateCloudGtmAddressRemark' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址 ID',
            'description' => '地址的ID，地址唯一标识码。',
            'type' => 'string',
            'required' => true,
            'example' => 'addr-89518218114368**92',
          ),
        ),
        3 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '备注',
            'description' => '传入的参数作为更新后的备注，传空值则删除备注。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-13E5A5044195',
              ),
              'Success' => 
              array (
                'description' => '本次修改操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-13E5A5044195\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '修改地址备注',
    ),
    'CreateCloudGtmAddress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址名称',
            'description' => '地址名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'Address-1',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址类型(IPv4, IPv6, DOMAIN)',
            'description' => '地址类型：

- IPv4

- IPv6

- domain',
            'type' => 'string',
            'required' => true,
            'example' => 'IPv4',
          ),
        ),
        4 => 
        array (
          'name' => 'Address',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址',
            'description' => 'IP地址或者域名。',
            'type' => 'string',
            'required' => true,
            'example' => '223.5.XX.XX',
          ),
        ),
        5 => 
        array (
          'name' => 'AttributeInfo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址归属信息',
            'description' => '地址归属信息。',
            'type' => 'string',
            'required' => false,
            'example' => '当前版本不支持传入此参数，请不要传入参数。',
          ),
        ),
        6 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '备注',
            'description' => '备注。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        7 => 
        array (
          'name' => 'EnableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '启用状态 enable： 可用， disable：不可用',
            'description' => '表示该地址当前启用状态：

- enable：启用状态

- disable：禁用状态',
            'type' => 'string',
            'required' => true,
            'example' => 'enable',
          ),
        ),
        8 => 
        array (
          'name' => 'AvailableMode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '可用状态设置模式',
            'description' => '地址探测异常切换方式：

- auto：自动模式（根据健康检查探测结果确定，探测异常停止解析，探测正常恢复解析）

- manual：手动模式（异常状态下停止解析，健康检查正常也不会恢复解析；正常状态下恢复解析，健康检查异常也只是告警，但不会停止解析。）',
            'type' => 'string',
            'required' => true,
            'example' => 'auto',
          ),
        ),
        9 => 
        array (
          'name' => 'ManualAvailableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '手动设置的可用状态',
            'description' => '当地址探测异常切换模式为**manual**时，地址设置的可用状态：

- available：正常，此状态下该地址正常解析，健康检查异常也只是告警，但不会停止解析；

- unavailable：异常，此状态下停止解析，健康检查正常也不会恢复解析；',
            'type' => 'string',
            'required' => false,
            'example' => 'available',
          ),
        ),
        10 => 
        array (
          'name' => 'HealthJudgement',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址健康状态判定为ok 的方式：',
            'description' => '地址健康状态判定条件（HealthTasks 不为空时必填）：

- any_ok：所有探测模板至少一个探测正常

- p30_ok：所有探测模板至少30%探测正常

- p50_ok：所有探测模板至少50%探测正常

- p70_ok：所有探测模板至少70%探测正常

- all_ok：所有探测模板全部探测正常',
            'type' => 'string',
            'required' => true,
            'example' => 'p50_ok',
          ),
        ),
        11 => 
        array (
          'name' => 'HealthTasks',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '健康检查配置',
            'description' => '地址关联的健康探测任务列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '地址关联的健康探测模板。',
              'type' => 'object',
              'properties' => 
              array (
                'Port' => 
                array (
                  'title' => '服务端口',
                  'description' => '健康检查探测的目标地址服务端口，当健康检查选择Ping协议时，不支持服务端口的配置。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '80',
                ),
                'TemplateId' => 
                array (
                  'title' => '探测模板',
                  'description' => '地址关联的健康探测模板ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'mtp-89518052425100**80',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '46973D4C-E3E4-4ABA-9190-9A9DE406C7E',
              ),
              'Success' => 
              array (
                'description' => '创建地址操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AddressId' => 
              array (
                'description' => '创建地址的ID，地址唯一标识码。',
                'type' => 'string',
                'example' => 'addr-8951821811436**192',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"46973D4C-E3E4-4ABA-9190-9A9DE406C7E\\",\\n  \\"Success\\": true,\\n  \\"AddressId\\": \\"addr-8951821811436**192\\"\\n}","type":"json"}]',
      'title' => '创建地址',
    ),
    'UpdateCloudGtmAddress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。该参数值可自定义，但是要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址 ID',
            'description' => '地址的ID，地址唯一标识码。',
            'type' => 'string',
            'required' => true,
            'example' => 'addr-89518218114368**92',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址名称',
            'description' => '地址名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'Address-1',
          ),
        ),
        4 => 
        array (
          'name' => 'Address',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址',
            'description' => 'IP地址或者域名。',
            'type' => 'string',
            'required' => false,
            'example' => '223.5.XX.XX',
          ),
        ),
        5 => 
        array (
          'name' => 'AttributeInfo',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址归属信息',
            'description' => '地址归属信息。',
            'type' => 'string',
            'required' => false,
            'example' => '当前版本不支持此参数，不需要传入此参数。',
          ),
        ),
        6 => 
        array (
          'name' => 'HealthJudgement',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址健康状态判定为ok 的方式：',
            'description' => '地址健康状态判定条件（HealthTasks 不为空时必填）：

- 所有探测模板至少一个探测正常（any_ok）

- 所有探测模板至少30%探测正常（p30_ok）

- 所有探测模板至少50%探测正常（p50_ok）

- 所有探测模板至少70%探测正常（p70_ok）

- 所有探测模板全部探测正常（all_ok）',
            'type' => 'string',
            'required' => false,
            'example' => 'p50_ok',
          ),
        ),
        7 => 
        array (
          'name' => 'HealthTasks',
          'in' => 'query',
          'allowEmptyValue' => false,
          'style' => 'json',
          'schema' => 
          array (
            'title' => '健康检查配置',
            'description' => '健康探测任务列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '地址关联的健康探测任务列表。',
              'type' => 'object',
              'properties' => 
              array (
                'Port' => 
                array (
                  'title' => '服务端口',
                  'description' => '健康检查探测的目标地址服务端口，当健康检查选择Ping协议时，不支持服务端口的配置。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '80',
                ),
                'TemplateId' => 
                array (
                  'title' => '探测模板',
                  'description' => '地址关联的健康探测模板ID。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'mtp-89518052425100**80',
                ),
              ),
              'required' => false,
            ),
            'deprecated' => false,
            'required' => false,
            'minItems' => 0,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'Success' => 
              array (
                'description' => '修改地址基础配置操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '修改地址基础配置',
    ),
    'UpdateCloudGtmAddressEnableStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。该参数值可自定义，但是要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址 ID',
            'description' => '地址的ID，地址唯一标识码。',
            'type' => 'string',
            'required' => true,
            'example' => 'addr-89518218114368**92',
          ),
        ),
        3 => 
        array (
          'name' => 'EnableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '可用状态',
            'description' => '地址池的启用状态：
- enable：启用，当前地址池在健康检查正常的情况下可参与解析。
- disable： 禁用，当前地址池不管健康检查是否正常，均不可参与解析',
            'type' => 'string',
            'required' => true,
            'example' => 'enable',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'Success' => 
              array (
                'description' => '修改地址启用状态操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '修改地址启用状态',
    ),
    'UpdateCloudGtmAddressManualAvailableStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。该参数值可自定义，但是要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址 ID',
            'description' => '地址的ID，地址唯一标识码。',
            'type' => 'string',
            'required' => true,
            'example' => 'addr-89518218114368**92',
          ),
        ),
        3 => 
        array (
          'name' => 'AvailableMode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '可用状态设置模式',
            'description' => '地址探测异常切换方式：

- auto：自动模式（根据健康检查探测结果确定，探测异常停止解析，探测正常恢复解析）

- manual：手动模式（异常状态下停止解析，健康检查正常也不会恢复解析；正常状态下恢复解析，健康检查异常也只是告警，但不会停止解析。）',
            'type' => 'string',
            'required' => false,
            'example' => 'manual',
          ),
        ),
        4 => 
        array (
          'name' => 'ManualAvailableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '可用状态',
            'description' => '当地址探测异常切换模式为manual时，地址设置的可用状态：

- available：正常，此状态下该地址正常解析，健康检查异常也只是告警，但不会停止解析；

- unavailable：异常，此状态下停止解析，健康检查正常也不会恢复解析；',
            'type' => 'string',
            'required' => false,
            'example' => 'available',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '0F32959D-417B-4D66-8463-68606605E3E2',
              ),
              'Success' => 
              array (
                'description' => '本次修改操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0F32959D-417B-4D66-8463-68606605E3E2\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '修改地址探测异常切换方式配置',
    ),
    'UpdateCloudGtmAddressPoolEnableStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保证请求幂等性。从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符，且不能超过64个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池的ID，地址池的唯一识别码。',
            'type' => 'string',
            'required' => false,
            'example' => 'pool-89528023225442**16',
          ),
        ),
        3 => 
        array (
          'name' => 'EnableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池的启用状态：
- enable：启用，当前地址池在健康检查正常的情况下可参与解析。
- disable： 禁用，当前地址池不管健康检查是否正常，均不可参与解析',
            'type' => 'string',
            'required' => false,
            'example' => 'enable',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '89184F33-48A1-4401-9C0F-40E45DB091AB',
              ),
              'Success' => 
              array (
                'description' => '本次修改操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AddressPoolId' => 
              array (
                'description' => '地址池的ID，地址池的唯一识别码。',
                'type' => 'string',
                'example' => 'pool-89528023225442**16',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"89184F33-48A1-4401-9C0F-40E45DB091AB\\",\\n  \\"Success\\": true,\\n  \\"AddressPoolId\\": \\"pool-89528023225442**16\\"\\n}","type":"json"}]',
      'title' => '修改地址池启用状态',
    ),
    'CreateCloudGtmAddressPool' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressPoolName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池名称，方便用户区分地址池的用途。',
            'type' => 'string',
            'required' => false,
            'example' => 'Address pool-1',
          ),
        ),
        3 => 
        array (
          'name' => 'AddressPoolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池类型：

- IPv4：表示要解析的服务地址是IPv4地址

- IPv6：表示要解析的服务地址是IPv6地址

- domain：表示要解析的服务地址是域名',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        4 => 
        array (
          'name' => 'HealthJudgement',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池健康状态判定条件：

- any_ok：地址池内至少1个地址是可用地址

- p30_ok：地址池内至少30%地址是可用地址

- p50_ok：地址池内至少50%地址是可用地址

- p70_ok：地址池内至少70%地址是可用地址

- all_ok：地址池内地址全部可用',
            'type' => 'string',
            'required' => false,
            'example' => 'any_ok',
          ),
        ),
        5 => 
        array (
          'name' => 'EnableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池的启用状态：
- enable：启用，当前地址池在健康检查正常的情况下可参与解析。
- disable： 禁用，当前地址池不管健康检查是否正常，均不可参与解析',
            'type' => 'string',
            'required' => false,
            'example' => 'enable',
          ),
        ),
        6 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池的备注说明，方便用户区分地址池的使用场景。',
            'type' => 'string',
            'required' => false,
            'example' => 'app',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '46973D4C-E3E4-4ABA-9190-9A9DE406C7E',
              ),
              'Success' => 
              array (
                'description' => '创建地址池操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AddressPoolId' => 
              array (
                'description' => '创建地址池的ID，地址池的唯一识别码。',
                'type' => 'string',
                'example' => 'pool-89528023225442**16',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"46973D4C-E3E4-4ABA-9190-9A9DE406C7E\\",\\n  \\"Success\\": true,\\n  \\"AddressPoolId\\": \\"pool-89528023225442**16\\"\\n}","type":"json"}]',
      'title' => '创建地址池',
    ),
    'UpdateCloudGtmAddressPoolRemark' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保证请求幂等性。从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符，且不能超过64个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池的ID，地址池的唯一识别码。',
            'type' => 'string',
            'required' => false,
            'example' => 'pool-89528023225442**16',
          ),
        ),
        3 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '传入的参数作为更新后的备注，传空值则删除备注。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'Success' => 
              array (
                'description' => '本次修改操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AddressPoolId' => 
              array (
                'description' => '地址池的ID，地址池的唯一识别码。',
                'type' => 'string',
                'example' => 'pool-89528023225442**16',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"Success\\": true,\\n  \\"AddressPoolId\\": \\"pool-89528023225442**16\\"\\n}","type":"json"}]',
      'title' => '修改地址池备注',
    ),
    'DeleteCloudGtmAddressPool' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池的ID，地址池的唯一识别码。',
            'type' => 'string',
            'required' => false,
            'example' => 'pool-89528023225442**16',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'Success' => 
              array (
                'description' => '删除地址池操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AddressPoolId' => 
              array (
                'description' => '地址池的ID，地址池的唯一识别码。',
                'type' => 'string',
                'example' => 'pool-89528023225442**16',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"Success\\": true,\\n  \\"AddressPoolId\\": \\"pool-89528023225442**16\\"\\n}","type":"json"}]',
      'title' => '删除地址池',
    ),
    'UpdateCloudGtmAddressPoolLbStrategy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池的ID，地址池的唯一识别码。',
            'type' => 'string',
            'required' => false,
            'example' => 'pool-89528023225442**16',
          ),
        ),
        3 => 
        array (
          'name' => 'AddressLbStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池中地址间负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址。并且每次对于所有地址进行轮转排序。

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址（顺序号标识地址返回的优先级，越小优先级越高）。若顺序号较小的地址不可用时，返回下一个序号较小的地址。

- weight：权重，支持对每个地址设置不同的权重值，实现解析查询按照权重比例返回地址。

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址，实现用户就近访问的效果。',
            'type' => 'string',
            'required' => false,
            'example' => 'sequence',
          ),
        ),
        4 => 
        array (
          'name' => 'SequenceLbStrategyMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址；',
            'type' => 'string',
            'required' => false,
            'example' => 'preemptive',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-13E5A5044195',
              ),
              'Success' => 
              array (
                'description' => '本次修改操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AddressPoolId' => 
              array (
                'description' => '地址池的ID，地址池的唯一识别码。',
                'type' => 'string',
                'example' => 'pool-89528023225442**16
',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-13E5A5044195\\",\\n  \\"Success\\": true,\\n  \\"AddressPoolId\\": \\"pool-89528023225442**16\\\\n\\"\\n}","type":"json"}]',
      'title' => '修改地址池负载均衡策略',
    ),
    'DeleteCloudGtmAddress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。该参数值可自定义，但是要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22
',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址 ID',
            'description' => '地址的ID，地址的唯一识别码。',
            'type' => 'string',
            'required' => true,
            'example' => 'addr-895182181143688192',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'Success' => 
              array (
                'description' => '删除地址操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除地址',
    ),
    'UpdateCloudGtmAddressPoolBasicConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池的ID，地址池的唯一识别码。',
            'type' => 'string',
            'required' => false,
            'example' => 'pool-89528023225442**16',
          ),
        ),
        3 => 
        array (
          'name' => 'AddressPoolName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池名称，方便用户区分地址池的用途。',
            'type' => 'string',
            'required' => false,
            'example' => 'app',
          ),
        ),
        4 => 
        array (
          'name' => 'HealthJudgement',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池健康状态判定条件：

- any_ok：地址池内至少1个地址是可用地址

- p30_ok：地址池内至少30%地址是可用地址

- p50_ok：地址池内至少50%地址是可用地址

- p70_ok：地址池内至少70%地址是可用地址

- all_ok：地址池内地址全部可用',
            'type' => 'string',
            'required' => false,
            'example' => 'any_ok',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'Success' => 
              array (
                'description' => '修改地址池基础配置操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AddressPoolId' => 
              array (
                'description' => '地址池的ID，地址池的唯一识别码。',
                'type' => 'string',
                'example' => 'pool-89528023225442**16',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"Success\\": true,\\n  \\"AddressPoolId\\": \\"pool-89528023225442**16\\"\\n}","type":"json"}]',
      'title' => '修改地址池基础配置',
    ),
    'ReplaceCloudGtmAddressPoolAddress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回的语言。取值：

- **zh-CN**：中文

- **en-US**：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池Id，地址池的唯一标识码。此参数指需要更新的目标地址池。',
            'type' => 'string',
            'required' => false,
            'example' => 'pool-89618921167339**24',
          ),
        ),
        3 => 
        array (
          'name' => 'Addresses',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '地址列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '地址信息。',
              'type' => 'object',
              'properties' => 
              array (
                'AddressId' => 
                array (
                  'title' => '地址id',
                  'description' => '地址Id，地址的唯一标识码。表示更新后的地址ID。

- 传入此参数，地址池中原有的地址将会被删除，新增传入参数标识的地址。

- 参数为空，地址池中原有的地址被删除，地址池为空。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'addr-89636516932803**44',
                ),
                'WeightValue' => 
                array (
                  'title' => '权重值',
                  'description' => '权重值（1-100内的整数，包括1和100），支持对每个地址设置不同的权重值，实现解析查询按照权重比例返回地址。对更新后的地址配置生效。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'SerialNumber' => 
                array (
                  'title' => '序号',
                  'description' => '顺序号，标识地址返回的优先级，越小优先级越高。对更新后的地址配置生效。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'RequestSource' => 
                array (
                  'description' => '解析请求来源列表。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '请求来源，是指解析请求的来源，GTM是根据终端所用LocalDNS的出口IP进行调度。若LocalDNS支持ECS (edns-client-subnet)，也可以根据访问终端的IP进行智能调度。对更新后的地址配置生效。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '["default"]',
                  ),
                  'required' => false,
                  'maxItems' => 100,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-13E5A5044195',
              ),
              'Success' => 
              array (
                'description' => '本次操作是否成功：

- true：成功。
- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'AddressPoolId' => 
              array (
                'description' => '地址池Id，地址池的唯一标识码。',
                'type' => 'string',
                'example' => 'pool-89618921167339**24',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-13E5A5044195\\",\\n  \\"Success\\": true,\\n  \\"AddressPoolId\\": \\"pool-89618921167339**24\\"\\n}","type":"json"}]',
      'title' => '替换地址池引用的地址',
    ),
    'UpdateCloudGtmInstanceConfigBasic' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值： 
          
- **zh-CN**：中文。

- **en-US**：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度实例id',
            'description' => '本次操作需要修改的全局流量管理3.0实例id。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        3 => 
        array (
          'name' => 'ConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度实例名称',
            'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。标识本次修改的配置对象。',
            'type' => 'string',
            'required' => false,
            'example' => 'Config-000**11',
          ),
        ),
        4 => 
        array (
          'name' => 'ScheduleZoneName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'zone名称',
            'description' => 'zone名称，即GTM接入域名的父Zone。一般为GTM实例所在账号下，在云解析DNS控制台的托管域名，支持主域和子域。',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
        5 => 
        array (
          'name' => 'ScheduleHostname',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '主机记录',
            'description' => 'GTM接入域名的主机记录。',
            'type' => 'string',
            'required' => false,
            'example' => 'www',
          ),
        ),
        6 => 
        array (
          'name' => 'Ttl',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度调度实例的TTL',
            'description' => '调度实例的TTL。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '全局TTL（单位：秒），接入域名解析到地址池中地址的TTL值，影响解析记录在运营商LocalDNS中的缓存时间，支持自定义TTL值。',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'Success' => 
              array (
                'description' => '本次操作是否成功：
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新实例基础配置',
    ),
    'UpdateCloudGtmInstanceConfigLbStrategy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值： 
          
- **zh-CN**：中文。

- **en-US**：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局流量管理3.0实例id，唯一标识本次需要修改策略的目标实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        3 => 
        array (
          'name' => 'ConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识本次需要修改的域名实例配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'Config-000**11',
          ),
        ),
        4 => 
        array (
          'name' => 'AddressPoolLbStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改后的地址池之间的负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址池。并且每次对于所有地址池进行轮转排序；

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址池（顺序号标识地址池返回的优先级，越小优先级越高）。若顺序号较小的地址池不可用时，返回下一个序号较小的地址池；

- weight：权重，支持对每个地址池设置不同的权重值，实现解析查询按照权重比例返回地址池；

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址池，实现用户就近访问的效果；',
            'type' => 'string',
            'required' => false,
            'example' => 'sequence',
          ),
        ),
        5 => 
        array (
          'name' => 'SequenceLbStrategyMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址池；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址池；
此参数定义了修改后的模式。',
            'type' => 'string',
            'required' => false,
            'example' => 'preemptive',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '0F32959D-417B-4D66-8463-68606605E3E2',
              ),
              'Success' => 
              array (
                'description' => '本次操作是否成功：
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0F32959D-417B-4D66-8463-68606605E3E2\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新实例配置负载均衡策略',
    ),
    'ReplaceCloudGtmInstanceConfigAddressPool' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22
',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度实例id',
            'description' => '调度实例id，确定本次操作的目标实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        3 => 
        array (
          'name' => 'AddressPools',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '地址池列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '地址池信息。',
              'type' => 'object',
              'properties' => 
              array (
                'AddressPoolId' => 
                array (
                  'description' => '地址池ID，唯一标识地址池，此参数指更新后的目标地址池。

- 传入此参数，目标实例引用的地址池全部删除，新增传入参数标识的地址池；

- 传入参数为空，目标实例引用的地址池全部删除，实例无关联的地址池。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'pool-89564542105737**12',
                ),
                'WeightValue' => 
                array (
                  'title' => '权重值',
                  'description' => '权重值（1-100之间的整数，包括1和100），支持对每个地址池设置不同的权重值，实现解析查询按照权重比例返回地址池。配置参数对更新后的地址池生效。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'SerialNumber' => 
                array (
                  'title' => '序号',
                  'description' => '顺序号，对于任何来源的解析请求，返回顺序号较小的地址池（顺序号标识地址池返回的优先级，越小优先级越高）。配置参数对更新后的地址池生效。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'RequestSource' => 
                array (
                  'description' => '解析请求来源列表。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '请求来源，是指解析请求的来源，GTM是根据终端所用LocalDNS的出口IP进行调度。若LocalDNS支持ECS (edns-client-subnet)，也可以根据访问终端的IP进行智能调度。配置参数对更新后的地址池生效。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '["default"]',
                  ),
                  'required' => false,
                  'maxItems' => 100,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'ConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'Config-000**11',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'Success' => 
              array (
                'description' => '本次操作是否成功，取值：
- true：成功。
- false：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '替换更新实例关联的地址池',
    ),
    'UpdateCloudGtmInstanceConfigEnableStatus' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值： 
          
- **zh-CN**：中文。

- **en-US**：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度实例id',
            'description' => '全局流量管理3.0实例id。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        3 => 
        array (
          'name' => 'ConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度实例id',
            'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'Config-000**11',
          ),
        ),
        4 => 
        array (
          'name' => 'EnableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '启用状态',
            'description' => '域名实例的启用状态：

- enable：启用状态，GTM实例智能调度策略生效；

- disable：禁用状态，GTM实例智能调度策略不可用；',
            'type' => 'string',
            'required' => false,
            'example' => 'enable',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF55925',
              ),
              'Success' => 
              array (
                'description' => '本次操作是否成功：
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF55925\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新实例配置启用状态',
    ),
    'CreateCloudGtmMonitorTemplate' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。该参数值可自定义，但是要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板名',
            'description' => '健康检查探测模板的名称，一般为了方便配置人员区分和记忆，建议名称可以区分健康检查协议。',
            'type' => 'string',
            'required' => true,
            'example' => 'Ping-IPv4',
          ),
        ),
        3 => 
        array (
          'name' => 'IpVersion',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '探测的网络环境 IP 版本',
            'description' => '探测节点IP地址的类型：

- IPv4：当探测的目标地址类型为IPv4地址时适用；

- IPv6：当探测的目标地址类型为IPv6地址时适用；',
            'type' => 'string',
            'required' => true,
            'example' => 'IPv4',
          ),
        ),
        4 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '探测协议',
            'description' => '对目标IP地址发起探测的协议类型：

- ping

- tcp

- http

- https',
            'type' => 'string',
            'required' => true,
            'example' => 'ping',
          ),
        ),
        5 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '探测间隔（秒）',
            'description' => '每次检查的时间间隔（秒），默认每间隔1分钟探测一次，健康检查间隔最小支持15秒（面向旗舰版实例开放）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '60',
          ),
        ),
        6 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '探测超时时间（毫秒）',
            'description' => '探测超时时间（毫秒），大于超时时间未返回的数据包即判断为健康检查超时：

- 2000

- 3000

- 5000

- 10000',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '5000',
          ),
        ),
        7 => 
        array (
          'name' => 'EvaluationCount',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '探测连续次数',
            'description' => '重试次数，连续多次监控出现异常，系统才将应用服务判断为异常，以防止因为一些网络瞬间抖动等其他原因影响监控准确率。重试次数可选值为：

- 1

- 2

- 3',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '2',
          ),
        ),
        8 => 
        array (
          'name' => 'FailureRate',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '告警失败率',
            'description' => '所选节点探测失败比例（%），即健康检查异常的探测点占探测点总数的百分比，当失败比例超过设置的阈值时，将服务地址判断为异常。可设置的失败比例阈值为：

- 20

- 50

- 80

- 100',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '50',
          ),
        ),
        9 => 
        array (
          'name' => 'ExtendInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Json 字符串扩展信息，各协议检查所需参数：

- http(s)：

    **host**：执行HTTP(S)监控时，指定HTTP(S)请求头部信息中携带的Host字段，用于标识需要访问的具体HTTP网站，默认为主域名，如果目标网站的host有特殊要求，请自行修改；

  **path**：HTTP路径，用户HTTP(S)健康检查的URL路径配置，系统默认填写“/”；

  **code**：当执行HTTP(S)监控时，根据Web服务器的返回码判断Web服务器是否正常工作，大于返回码报警阈值时，系统认为应用服务出现异常：

  - 400：Bad Request，即如果HTTP(S)请求携带了错误的请求参数，Web服务器将返回大于400的返回码，如果校验内容设置为“异常码大于400”，请务必在URL路径中填写精确的URL访问路径参数；

  - 500：Server Error，即如果Web服务器出现了某些异常，将返回大于500的异常码，系统默认使用大于500的异常码作为报警阈值；

  **sni**：是否开启sni，仅在HTTPS协议时使用。SNI（Server Name Indication）是TLS协议的一个扩展，它允许客户端在发起TLS握手时指定想要连接的主机名。由于TLS握手发生在HTTP请求的任何数据被发送之前，SNI允许服务器在发送证书之前知道客户端试图访问的服务，这使得服务器可以选择正确的证书来呈现给客户端。

    - true-开启
    
  - false-未开启
  
  **followRedirect**：是否跟随3XX重定向

  - true：监控点获取的状态码为3XX (301，302，303， 307，308) 时，跟随跳转；

  - false：不跳转；


- ping：

  **packetNum**：每次Ping监控，同时发出多少个ICMP数据包，可选20、50、100

   **packetLossRate**：异常时丢包率，每次ping监控，对发出的ICMP数据包，计算丢包率（%）。丢包率=（丢失数据包/发送的总ICMP数据包数目）* 100%，达到丢包率阈值时，异常报警。丢包率可选值为：10、30、40、80、90、100',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"code\\":200,\\"path\\":\\"\\\\index.htm\\",\\"host\\":\\"aliyun.com\\"}',
          ),
        ),
        10 => 
        array (
          'name' => 'IspCityNodes',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '探测节点列表',
            'description' => '探测节点列表，具体信息可通过调用 **ListCloudGtmMonitorNodes** 获取',
            'type' => 'array',
            'items' => 
            array (
              'description' => '探测节点',
              'type' => 'object',
              'properties' => 
              array (
                'CityCode' => 
                array (
                  'title' => '探测节点 城市 code',
                  'description' => '探测节点-城市编码',
                  'type' => 'string',
                  'required' => false,
                  'example' => '503',
                ),
                'IspCode' => 
                array (
                  'title' => '探测节点 isp code',
                  'description' => '探测节点-运营商编码',
                  'type' => 'string',
                  'required' => false,
                  'example' => '465',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-13E5A5044195',
              ),
              'Success' => 
              array (
                'description' => '本次操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TemplateId' => 
              array (
                'description' => '健康探测模板ID，唯一标识健康探测模板。',
                'type' => 'string',
                'example' => 'mtp-89518052425100**80',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-13E5A5044195\\",\\n  \\"Success\\": true,\\n  \\"TemplateId\\": \\"mtp-89518052425100**80\\"\\n}","type":"json"}]',
      'title' => '创建健康探测模板',
    ),
    'UpdateCloudGtmInstanceConfigRemark' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值： 
          
- **zh-CN**：中文。

- **en-US**：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局流量管理3.0实例id，唯一确定本次需要操作的实例对象。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        3 => 
        array (
          'name' => 'ConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识本次需要修改的域名实例配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'Config-000**11',
          ),
        ),
        4 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备注，传入参数即为更新后的目标备注内容。',
            'type' => 'string',
            'required' => false,
            'example' => 'API',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-13E5A5044195',
              ),
              'Success' => 
              array (
                'description' => '本次操作是否成功：
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-13E5A5044195\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新实例配置备注',
    ),
    'DeleteCloudGtmInstanceConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定删除的GTM实例ID，仅支持删除单个。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-jmp3qnw**03',
          ),
        ),
        3 => 
        array (
          'name' => 'ConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'config-000**1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'Success' => 
              array (
                'description' => '删除域名实例配置操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除域名实例配置',
    ),
    'DeleteCloudGtmMonitorTemplate' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康探测模板ID，唯一标识健康探测模板。',
            'type' => 'string',
            'required' => true,
            'example' => 'mtp-89518052425100**80',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'Success' => 
              array (
                'description' => '删除健康探测模板操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除健康探测模板',
    ),
    'UpdateCloudGtmMonitorTemplate' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板 ID',
            'description' => '需要修改的健康探测模板ID，唯一标识健康探测模板。',
            'type' => 'string',
            'required' => true,
            'example' => 'mtp-89518052425100**80',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '模板名',
            'description' => '健康检查探测模板的名称，一般为了方便配置人员区分和记忆，建议名称可以区分健康检查协议。',
            'type' => 'string',
            'required' => false,
            'example' => 'Ping-IPv4
',
          ),
        ),
        4 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '探测间隔（秒）',
            'description' => '每次健康探测的时间间隔（秒），默认每间隔1分钟探测一次，健康检查间隔最小支持15秒（面向旗舰版实例开放）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '60',
          ),
        ),
        5 => 
        array (
          'name' => 'Timeout',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '探测超时时间',
            'description' => '探测超时时间（毫秒），大于超时时间未返回的数据包即判断为健康检查超时：

- 2000

- 3000

- 5000

- 10000',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5000',
          ),
        ),
        6 => 
        array (
          'name' => 'EvaluationCount',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '探测连续次数',
            'description' => '重试次数，连续多次监控出现异常，系统才将应用服务判断为异常，以防止因为一些网络瞬间抖动等其他原因影响监控准确率。重试次数可选值为：

- 1

- 2

- 3',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        7 => 
        array (
          'name' => 'FailureRate',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '告警失败率',
            'description' => '所选节点探测失败比例（%），即健康检查异常的探测点占探测点总数的百分比，当失败比例超过设置的阈值时，将服务地址判断为异常。可设置的失败比例阈值为：

- 20

- 50

- 80

- 100',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '50',
          ),
        ),
        8 => 
        array (
          'name' => 'ExtendInfo',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Json 字符串扩展信息，各协议检查所需参数：

- http(s)：

    host：执行HTTP(S)监控时，指定HTTP(S)请求头部信息中携带的Host字段，用于标识需要访问的具体HTTP网站，默认为主域名，如果目标网站的host有特殊要求，请自行修改；

  path：HTTP路径，用户HTTP(S)健康检查的URL路径配置，系统默认填写“/”；

  code：当执行HTTP(S)监控时，根据Web服务器的返回码判断Web服务器是否正常工作，大于返回码报警阈值时，系统认为应用服务出现异常：

  - 400：Bad Request，即如果HTTP(S)请求携带了错误的请求参数，Web服务器将返回大于400的返回码，如果校验内容设置为“异常码大于400”，请务必在URL路径中填写精确的URL访问路径参数；

  - 500：Server Error，即如果Web服务器出现了某些异常，将返回大于500的异常码，系统默认使用大于500的异常码作为报警阈值；

  sni：是否开启sni，仅在HTTPS协议时使用。SNI（Server Name Indication）是TLS协议的一个扩展，它允许客户端在发起TLS握手时指定想要连接的主机名。由于TLS握手发生在HTTP请求的任何数据被发送之前，SNI允许服务器在发送证书之前知道客户端试图访问的服务，这使得服务器可以选择正确的证书来呈现给客户端。

    - true-开启
    
  - false-未开启
  
  followRedirect：是否跟随3XX重定向

  - true：监控点获取的状态码为3XX (301，302，303， 307，308) 时，跟随跳转；

  - false：不跳转；

- ping：

  packetNum：每次Ping监控，同时发出多少个ICMP数据包，可选20、50、100

  packetLossRate：异常时丢包率，每次ping监控，对发出的ICMP数据包，计算丢包率（%）。丢包率=（丢失数据包/发送的总ICMP数据包数目）* 100%，达到丢包率阈值时，异常报警。丢包率可选值为：10、30、40、80、90、100',
            'type' => 'string',
            'required' => false,
            'example' => '{\\"code\\":200,\\"path\\":\\"\\\\index.htm\\",\\"host\\":\\"aliyun.com\\"}',
          ),
        ),
        9 => 
        array (
          'name' => 'IspCityNodes',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '探测节点列表',
            'description' => '探测节点列表，具体信息可通过调用 **ListCloudGtmMonitorNodes** 获取',
            'type' => 'array',
            'items' => 
            array (
              'description' => '探测节点。',
              'type' => 'object',
              'properties' => 
              array (
                'CityCode' => 
                array (
                  'title' => '探测节点 城市 code',
                  'description' => '探测节点-城市编码',
                  'type' => 'string',
                  'required' => false,
                  'example' => '503',
                ),
                'IspCode' => 
                array (
                  'title' => '探测节点 isp code',
                  'description' => '探测节点-运营商编码',
                  'type' => 'string',
                  'required' => false,
                  'example' => '465',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'Success' => 
              array (
                'description' => '修改健康探测模板操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '修改健康探测模板',
    ),
    'ListCloudGtmMonitorTemplates' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查探测模板的名称，一般为了方便配置人员区分和记忆，建议名称可以区分健康检查协议。',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4-Ping',
          ),
        ),
        4 => 
        array (
          'name' => 'IpVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '探测节点IP地址的类型：

- IPv4：当探测的目标地址类型为IPv4地址时适用；

- IPv6：当探测的目标地址类型为IPv6地址时适用；',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        5 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对目标IP地址发起探测的协议类型：

- ping

- tcp

- http

- https',
            'type' => 'string',
            'required' => false,
            'example' => 'ping',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '75446CC1-FC9A-4595-8D96-089D73D7A63D',
              ),
              'TotalPages' => 
              array (
                'description' => '数据分页后总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'TotalItems' => 
              array (
                'description' => '获取的健康探测模板列表总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '30',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为1，默认为1。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Templates' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Template' => 
                  array (
                    'description' => '健康探测模板列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '健康探测模板详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TemplateId' => 
                        array (
                          'title' => '模板 ID ，全局唯一',
                          'description' => '健康探测模板ID，唯一标识健康探测模板。',
                          'type' => 'string',
                          'example' => 'mtp-89518052425100**80',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '创建时间',
                          'description' => '健康探测模板创建时间。',
                          'type' => 'string',
                          'example' => '2024-03-23T13:09Z',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '健康探测模板创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'UpdateTime' => 
                        array (
                          'title' => '修改时间',
                          'description' => '健康探测模板最后一次修改时间。',
                          'type' => 'string',
                          'example' => '2024-03-29T13:20Z',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '健康检查模板配置修改时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'Name' => 
                        array (
                          'title' => '探测模板名称',
                          'description' => '健康检查探测模板的名称，一般为了方便配置人员区分和记忆。',
                          'type' => 'string',
                          'example' => 'IPv4-Ping',
                        ),
                        'IpVersion' => 
                        array (
                          'title' => '探测的网络环境 IP 版本',
                          'description' => '探测节点IP地址的类型：

- IPv4：当探测的目标地址类型为IPv4地址时适用；

- IPv6：当探测的目标地址类型为IPv6地址时适用；',
                          'type' => 'string',
                          'example' => 'IPv4',
                        ),
                        'Protocol' => 
                        array (
                          'title' => '探测协议',
                          'description' => '对目标IP地址发起探测的协议类型：

- ping

- tcp

- http

- https',
                          'type' => 'string',
                          'example' => 'ping',
                        ),
                        'Interval' => 
                        array (
                          'title' => '探测间隔（秒）',
                          'description' => '每次检查的时间间隔（秒），默认每间隔1分钟探测一次，健康检查间隔最小支持15秒（面向旗舰版实例开放）。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '60',
                        ),
                        'Timeout' => 
                        array (
                          'title' => '探测超时时间',
                          'description' => '探测超时时间（毫秒），大于超时时间未返回的数据包即判断为健康检查超时：

- 2000

- 3000

- 5000

- 10000',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5000',
                        ),
                        'EvaluationCount' => 
                        array (
                          'title' => '探测连续次数',
                          'description' => '重试次数，连续多次监控出现异常，系统才将应用服务判断为异常，以防止因为一些网络瞬间抖动等其他原因影响监控准确率。重试次数可选值为：

- 1

- 2

- 3',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'FailureRate' => 
                        array (
                          'title' => '告警失败率',
                          'description' => '所选节点探测失败比例（%），即健康检查异常的探测点占探测点总数的百分比，当失败比例超过设置的阈值时，将服务地址判断为异常。可设置的失败比例阈值为：

- 20

- 50

- 80

- 100',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '50',
                        ),
                        'ExtendInfo' => 
                        array (
                          'description' => 'Json 字符串扩展信息，各协议检查所需参数：

- http(s)：

    **host**：执行HTTP(S)监控时，指定HTTP(S)请求头部信息中携带的Host字段，用于标识需要访问的具体HTTP网站，默认为主域名，如果目标网站的host有特殊要求，请自行修改；

  **path**：HTTP路径，用户HTTP(S)健康检查的URL路径配置，系统默认填写“/”；

  **code**：当执行HTTP(S)监控时，根据Web服务器的返回码判断Web服务器是否正常工作，大于返回码报警阈值时，系统认为应用服务出现异常：

  - 400：Bad Request，即如果HTTP(S)请求携带了错误的请求参数，Web服务器将返回大于400的返回码，如果校验内容设置为“异常码大于400”，请务必在URL路径中填写精确的URL访问路径参数；

  - 500：Server Error，即如果Web服务器出现了某些异常，将返回大于500的异常码，系统默认使用大于500的异常码作为报警阈值；

  **sni**：是否开启sni，仅在HTTPS协议时使用。SNI（Server Name Indication）是TLS协议的一个扩展，它允许客户端在发起TLS握手时指定想要连接的主机名。由于TLS握手发生在HTTP请求的任何数据被发送之前，SNI允许服务器在发送证书之前知道客户端试图访问的服务，这使得服务器可以选择正确的证书来呈现给客户端。

    - true-开启
    
  - false-未开启
  
  **followRedirect**：是否跟随3XX重定向

  - true：监控点获取的状态码为3XX (301，302，303， 307，308) 时，跟随跳转；

  - false：不跳转；


- ping：

  **packetNum**：每次Ping监控，同时发出多少个ICMP数据包，可选20、50、100

   **packetLossRate**：异常时丢包率，每次ping监控，对发出的ICMP数据包，计算丢包率（%）。丢包率=（丢失数据包/发送的总ICMP数据包数目）* 100%，达到丢包率阈值时，异常报警。丢包率可选值为：10、30、40、80、90、100',
                          'type' => 'string',
                          'example' => '{\\"code\\":200,\\"path\\":\\"\\\\index.htm\\",\\"host\\":\\"aliyun.com\\"}
',
                        ),
                        'IspCityNodes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'IspCityNode' => 
                            array (
                              'title' => '探点信息',
                              'description' => '探测节点列表，具体信息可通过调用 **ListCloudGtmMonitorNodes** 获取。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '探测节点。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'CountryCode' => 
                                  array (
                                    'title' => '国家 Code',
                                    'description' => '国家编码。',
                                    'type' => 'string',
                                    'example' => '001',
                                  ),
                                  'CountryName' => 
                                  array (
                                    'title' => '国家名称',
                                    'description' => '国家名称。',
                                    'type' => 'string',
                                    'example' => '中国',
                                  ),
                                  'CityCode' => 
                                  array (
                                    'title' => '城市 Code',
                                    'description' => '城市编码。',
                                    'type' => 'string',
                                    'example' => '503',
                                  ),
                                  'CityName' => 
                                  array (
                                    'title' => '城市名称',
                                    'description' => '城市名称。',
                                    'type' => 'string',
                                    'example' => '张家口市',
                                  ),
                                  'GroupType' => 
                                  array (
                                    'title' => '监控探点分组类型',
                                    'description' => '探测节点分组类型：

- BGP：BGP节点

- OVERSEAS：国际节点

- ISP：运营商节点',
                                    'type' => 'string',
                                    'example' => 'BGP',
                                  ),
                                  'GroupName' => 
                                  array (
                                    'title' => '监控探点分组类型名称',
                                    'description' => '探测节点分组名称。',
                                    'type' => 'string',
                                    'example' => 'BGP节点',
                                  ),
                                  'IspCode' => 
                                  array (
                                    'title' => 'ISP Code',
                                    'description' => '运营商编码。',
                                    'type' => 'string',
                                    'example' => '465',
                                  ),
                                  'IspName' => 
                                  array (
                                    'title' => 'ISP 名称',
                                    'description' => '运营商名称。',
                                    'type' => 'string',
                                    'example' => '阿里巴巴',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Remark' => 
                        array (
                          'description' => '健康探测模板的备注。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"75446CC1-FC9A-4595-8D96-089D73D7A63D\\",\\n  \\"TotalPages\\": 2,\\n  \\"TotalItems\\": 30,\\n  \\"PageSize\\": 20,\\n  \\"PageNumber\\": 1,\\n  \\"Templates\\": {\\n    \\"Template\\": [\\n      {\\n        \\"TemplateId\\": \\"mtp-89518052425100**80\\",\\n        \\"CreateTime\\": \\"2024-03-23T13:09Z\\",\\n        \\"CreateTimestamp\\": 1527690629357,\\n        \\"UpdateTime\\": \\"2024-03-29T13:20Z\\",\\n        \\"UpdateTimestamp\\": 1527690629357,\\n        \\"Name\\": \\"IPv4-Ping\\",\\n        \\"IpVersion\\": \\"IPv4\\",\\n        \\"Protocol\\": \\"ping\\",\\n        \\"Interval\\": 60,\\n        \\"Timeout\\": 5000,\\n        \\"EvaluationCount\\": 2,\\n        \\"FailureRate\\": 50,\\n        \\"ExtendInfo\\": \\"{\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\":200,\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\index.htm\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"host\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"aliyun.com\\\\\\\\\\\\\\"}\\\\n\\",\\n        \\"IspCityNodes\\": {\\n          \\"IspCityNode\\": [\\n            {\\n              \\"CountryCode\\": \\"001\\",\\n              \\"CountryName\\": \\"中国\\",\\n              \\"CityCode\\": \\"503\\",\\n              \\"CityName\\": \\"张家口市\\",\\n              \\"GroupType\\": \\"BGP\\",\\n              \\"GroupName\\": \\"BGP节点\\",\\n              \\"IspCode\\": \\"465\\",\\n              \\"IspName\\": \\"阿里巴巴\\"\\n            }\\n          ]\\n        },\\n        \\"Remark\\": \\"test\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取健康检查模板列表',
    ),
    'DescribeCloudGtmMonitorTemplate' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置返回后可用区名称的语言，取值：
* **zh-CN**：中文。
* **en-US**：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的健康探测模板ID，唯一标识健康探测模板。',
            'type' => 'string',
            'required' => true,
            'example' => 'mtp-89518052425100**80',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6AEC7A64-3CB1-4C49-8B35-0B901F1E26BF',
              ),
              'TemplateId' => 
              array (
                'title' => '模板 ID ，全局唯一',
                'description' => '健康探测模板ID，唯一标识健康探测模板。',
                'type' => 'string',
                'example' => 'mtp-89518052425100**80',
              ),
              'CreateTime' => 
              array (
                'title' => '创建时间',
                'description' => '健康探测模板创建时间。',
                'type' => 'string',
                'example' => '2024-03-23T13:09Z',
              ),
              'CreateTimestamp' => 
              array (
                'description' => '健康探测模板创建时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'UpdateTime' => 
              array (
                'title' => '修改时间',
                'description' => '健康检查模板配置修改时间。',
                'type' => 'string',
                'example' => '2024-03-29T13:20Z',
              ),
              'UpdateTimestamp' => 
              array (
                'description' => '健康检查模板配置修改时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'Name' => 
              array (
                'title' => '探测模板名称',
                'description' => '健康检查探测模板的名称，一般为了方便配置人员区分和记忆，建议名称可以区分健康检查协议。',
                'type' => 'string',
                'example' => 'Ping-IPv4',
              ),
              'IpVersion' => 
              array (
                'title' => '探测的网络环境 IP 版本',
                'description' => '探测节点IP地址的类型：

- IPv4：当探测的目标地址类型为IPv4地址时适用；

- IPv6：当探测的目标地址类型为IPv6地址时适用；',
                'type' => 'string',
                'example' => 'IPv4',
              ),
              'Protocol' => 
              array (
                'title' => '探测协议',
                'description' => '对目标IP地址发起探测的协议类型：

- ping

- tcp

- http

- https',
                'type' => 'string',
                'example' => 'ping',
              ),
              'Interval' => 
              array (
                'title' => '探测间隔（秒）',
                'description' => '每次检查的时间间隔（秒），默认每间隔1分钟探测一次，健康检查间隔最小支持15秒（面向旗舰版实例开放）。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '60',
              ),
              'Timeout' => 
              array (
                'title' => '探测超时时间',
                'description' => '探测超时时间（毫秒），大于超时时间未返回的数据包即判断为健康检查超时：

- 2000

- 3000

- 5000

- 10000',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5000',
              ),
              'EvaluationCount' => 
              array (
                'title' => '探测连续次数',
                'description' => '重试次数，连续多次监控出现异常，系统才将应用服务判断为异常，以防止因为一些网络瞬间抖动等其他原因影响监控准确率。重试次数可选值为：

- 1

- 2

- 3',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'FailureRate' => 
              array (
                'title' => '告警失败率',
                'description' => '所选节点探测失败比例（%），即健康检查异常的探测点占探测点总数的百分比，当失败比例超过设置的阈值时，将服务地址判断为异常。可设置的失败比例阈值为：

- 20

- 50

- 80

- 100',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '50',
              ),
              'ExtendInfo' => 
              array (
                'description' => 'Json 字符串扩展信息，各协议检查所需参数：

- http(s)：

    **host**：执行HTTP(S)监控时，指定HTTP(S)请求头部信息中携带的Host字段，用于标识需要访问的具体HTTP网站，默认为主域名，如果目标网站的host有特殊要求，请自行修改；

  **path**：HTTP路径，用户HTTP(S)健康检查的URL路径配置，系统默认填写“/”；

  **code**：当执行HTTP(S)监控时，根据Web服务器的返回码判断Web服务器是否正常工作，大于返回码报警阈值时，系统认为应用服务出现异常：

  - 400：Bad Request，即如果HTTP(S)请求携带了错误的请求参数，Web服务器将返回大于400的返回码，如果校验内容设置为“异常码大于400”，请务必在URL路径中填写精确的URL访问路径参数；

  - 500：Server Error，即如果Web服务器出现了某些异常，将返回大于500的异常码，系统默认使用大于500的异常码作为报警阈值；

  **sni**：是否开启sni，仅在HTTPS协议时使用。SNI（Server Name Indication）是TLS协议的一个扩展，它允许客户端在发起TLS握手时指定想要连接的主机名。由于TLS握手发生在HTTP请求的任何数据被发送之前，SNI允许服务器在发送证书之前知道客户端试图访问的服务，这使得服务器可以选择正确的证书来呈现给客户端。

    - true-开启
    
  - false-未开启
  
  **followRedirect**：是否跟随3XX重定向

  - true：监控点获取的状态码为3XX (301，302，303， 307，308) 时，跟随跳转；

  - false：不跳转；


- ping：

  **packetNum**：每次Ping监控，同时发出多少个ICMP数据包，可选20、50、100

   **packetLossRate**：异常时丢包率，每次ping监控，对发出的ICMP数据包，计算丢包率（%）。丢包率=（丢失数据包/发送的总ICMP数据包数目）* 100%，达到丢包率阈值时，异常报警。丢包率可选值为：10、30、40、80、90、100',
                'type' => 'string',
                'example' => '{\\"code\\":200,\\"path\\":\\"\\\\index.htm\\",\\"host\\":\\"aliyun.com\\"}',
              ),
              'IspCityNodes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'IspCityNode' => 
                  array (
                    'title' => '探点信息',
                    'description' => '探测节点列表，具体信息可通过调用 ListCloudGtmMonitorNodes 获取。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '探测节点',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CountryCode' => 
                        array (
                          'title' => '国家 Code',
                          'description' => '国家编码',
                          'type' => 'string',
                          'example' => '001',
                        ),
                        'CountryName' => 
                        array (
                          'title' => '国家名称',
                          'description' => '国家名称',
                          'type' => 'string',
                          'example' => '中国',
                        ),
                        'CityCode' => 
                        array (
                          'title' => '城市 Code',
                          'description' => '城市编码',
                          'type' => 'string',
                          'example' => '503',
                        ),
                        'CityName' => 
                        array (
                          'title' => '城市名称',
                          'description' => '城市名称',
                          'type' => 'string',
                          'example' => '张家口市',
                        ),
                        'GroupType' => 
                        array (
                          'title' => '监控探点分组类型',
                          'description' => '探测节点分组类型：

- BGP：BGP节点

- OVERSEAS：国际节点

- ISP：运营商节点',
                          'type' => 'string',
                          'example' => 'BGP',
                        ),
                        'GroupName' => 
                        array (
                          'title' => '监控探点分组类型名称',
                          'description' => '探测节点分组类型名称',
                          'type' => 'string',
                          'example' => 'BGP节点',
                        ),
                        'IspCode' => 
                        array (
                          'title' => 'ISP Code',
                          'description' => '运营商编码',
                          'type' => 'string',
                          'example' => '465',
                        ),
                        'IspName' => 
                        array (
                          'title' => 'ISP 名称',
                          'description' => '运营商名称',
                          'type' => 'string',
                          'example' => '阿里巴巴',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Remark' => 
              array (
                'description' => '健康探测模板的备注。',
                'type' => 'string',
                'example' => 'test',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6AEC7A64-3CB1-4C49-8B35-0B901F1E26BF\\",\\n  \\"TemplateId\\": \\"mtp-89518052425100**80\\",\\n  \\"CreateTime\\": \\"2024-03-23T13:09Z\\",\\n  \\"CreateTimestamp\\": 1527690629357,\\n  \\"UpdateTime\\": \\"2024-03-29T13:20Z\\",\\n  \\"UpdateTimestamp\\": 1527690629357,\\n  \\"Name\\": \\"Ping-IPv4\\",\\n  \\"IpVersion\\": \\"IPv4\\",\\n  \\"Protocol\\": \\"ping\\",\\n  \\"Interval\\": 60,\\n  \\"Timeout\\": 5000,\\n  \\"EvaluationCount\\": 2,\\n  \\"FailureRate\\": 50,\\n  \\"ExtendInfo\\": \\"{\\\\\\\\\\\\\\"code\\\\\\\\\\\\\\":200,\\\\\\\\\\\\\\"path\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\index.htm\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"host\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"aliyun.com\\\\\\\\\\\\\\"}\\",\\n  \\"IspCityNodes\\": {\\n    \\"IspCityNode\\": [\\n      {\\n        \\"CountryCode\\": \\"001\\",\\n        \\"CountryName\\": \\"中国\\",\\n        \\"CityCode\\": \\"503\\",\\n        \\"CityName\\": \\"张家口市\\",\\n        \\"GroupType\\": \\"BGP\\",\\n        \\"GroupName\\": \\"BGP节点\\",\\n        \\"IspCode\\": \\"465\\",\\n        \\"IspName\\": \\"阿里巴巴\\"\\n      }\\n    ]\\n  },\\n  \\"Remark\\": \\"test\\"\\n}","type":"json"}]',
      'title' => '获取健康检查模板配置',
    ),
    'ListCloudGtmMonitorNodes' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- **zh-CN**：中文

- **en-US**：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'Ipv4IspCityNodes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Ipv4IspCityNode' => 
                  array (
                    'description' => '公网IPv4监控节点列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '公网IPv4监控节点信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CountryCode' => 
                        array (
                          'title' => '国家 Code',
                          'description' => '国家编码。',
                          'type' => 'string',
                          'example' => '001',
                        ),
                        'CountryName' => 
                        array (
                          'title' => '国家名称',
                          'description' => '国家名称。',
                          'type' => 'string',
                          'example' => '中国',
                        ),
                        'CityCode' => 
                        array (
                          'title' => '城市 Code',
                          'description' => '城市编码。',
                          'type' => 'string',
                          'example' => '503',
                        ),
                        'CityName' => 
                        array (
                          'title' => '城市名称',
                          'description' => '城市名称。',
                          'type' => 'string',
                          'example' => '张家口市',
                        ),
                        'GroupType' => 
                        array (
                          'title' => '监控探点分组类型',
                          'description' => '监控节点分组类型，当前支持：

- BGP：BGP节点

- OVERSEAS：国际节点

- ISP：运营商节点',
                          'type' => 'string',
                          'example' => 'BGP',
                        ),
                        'GroupName' => 
                        array (
                          'title' => '监控探点分组类型名称',
                          'description' => '监控探点分组名称。',
                          'type' => 'string',
                          'example' => 'BGP节点',
                        ),
                        'IspCode' => 
                        array (
                          'title' => 'ISP Code',
                          'description' => '运营商编码。',
                          'type' => 'string',
                          'example' => '465',
                        ),
                        'IspName' => 
                        array (
                          'title' => 'ISP 名称',
                          'description' => '运营商名称。',
                          'type' => 'string',
                          'example' => '阿里巴巴',
                        ),
                        'DefaultSelected' => 
                        array (
                          'title' => '是否默认勾选',
                          'description' => '监控节点是否默认选中：

- true：默认选中

- false：默认不选中',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'NodeId' => 
                        array (
                          'description' => '探测节点的唯一标识 ID。',
                          'type' => 'string',
                          'example' => 'node-ewze1bysndy4gf**j8',
                        ),
                        'Ips' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Ip' => 
                            array (
                              'description' => '节点IP列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '节点IP列表。',
                                'type' => 'string',
                                'example' => ' [
            "47.92.XX.XX",
            "47.92.XX.XX",
            "39.98.XX.XX",
            "39.100.XX.XX"
          ]',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Ipv6IspCityNodes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Ipv6IspCityNode' => 
                  array (
                    'description' => '公网IPv6监控节点列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '公网Ipv6监控节点。

',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CountryCode' => 
                        array (
                          'title' => '国家 Code',
                          'description' => '国家编码。',
                          'type' => 'string',
                          'example' => '001',
                        ),
                        'CountryName' => 
                        array (
                          'title' => '国家名称',
                          'description' => '国家名称。',
                          'type' => 'string',
                          'example' => '中国',
                        ),
                        'CityCode' => 
                        array (
                          'title' => '城市 Code',
                          'description' => '城市编码。',
                          'type' => 'string',
                          'example' => '503',
                        ),
                        'CityName' => 
                        array (
                          'title' => '城市名称',
                          'description' => '城市名称。',
                          'type' => 'string',
                          'example' => '张家口市',
                        ),
                        'GroupType' => 
                        array (
                          'title' => '监控探点分组类型',
                          'description' => '监控节点分组类型，当前支持：

- BGP：BGP节点

- OVERSEAS：国际节点

- ISP：运营商节点',
                          'type' => 'string',
                          'example' => 'BGP',
                        ),
                        'GroupName' => 
                        array (
                          'title' => '监控探点分组类型名称',
                          'description' => '监控探点分组名称。',
                          'type' => 'string',
                          'example' => 'BGP节点',
                        ),
                        'IspCode' => 
                        array (
                          'title' => 'ISP Code',
                          'description' => '运营商编码。',
                          'type' => 'string',
                          'example' => '465',
                        ),
                        'IspName' => 
                        array (
                          'title' => 'ISP 名称',
                          'description' => '运营商名称。',
                          'type' => 'string',
                          'example' => '阿里巴巴',
                        ),
                        'DefaultSelected' => 
                        array (
                          'title' => '是否默认勾选',
                          'description' => '监控节点是否默认选中：

- true：默认选中

- false：默认不选中',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'NodeId' => 
                        array (
                          'description' => '探测节点的唯一标识 ID。',
                          'type' => 'string',
                          'example' => 'node-ewze1bysndy4gf**j8
',
                        ),
                        'Ips' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Ip' => 
                            array (
                              'description' => '节点IP列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '节点IP列表。',
                                'type' => 'string',
                                'example' => ' [
            "240e:e9:6002:15c:0:ff:b015:1**f",
            "240e:e9:6002:15a:0:ff:b05c:1**8"
          ]
',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"Ipv4IspCityNodes\\": {\\n    \\"Ipv4IspCityNode\\": [\\n      {\\n        \\"CountryCode\\": \\"001\\",\\n        \\"CountryName\\": \\"中国\\",\\n        \\"CityCode\\": \\"503\\",\\n        \\"CityName\\": \\"张家口市\\",\\n        \\"GroupType\\": \\"BGP\\",\\n        \\"GroupName\\": \\"BGP节点\\",\\n        \\"IspCode\\": \\"465\\",\\n        \\"IspName\\": \\"阿里巴巴\\",\\n        \\"DefaultSelected\\": true,\\n        \\"NodeId\\": \\"node-ewze1bysndy4gf**j8\\",\\n        \\"Ips\\": {\\n          \\"Ip\\": [\\n            \\" [\\\\n            \\\\\\"47.92.XX.XX\\\\\\",\\\\n            \\\\\\"47.92.XX.XX\\\\\\",\\\\n            \\\\\\"39.98.XX.XX\\\\\\",\\\\n            \\\\\\"39.100.XX.XX\\\\\\"\\\\n          ]\\"\\n          ]\\n        }\\n      }\\n    ]\\n  },\\n  \\"Ipv6IspCityNodes\\": {\\n    \\"Ipv6IspCityNode\\": [\\n      {\\n        \\"CountryCode\\": \\"001\\",\\n        \\"CountryName\\": \\"中国\\",\\n        \\"CityCode\\": \\"503\\",\\n        \\"CityName\\": \\"张家口市\\",\\n        \\"GroupType\\": \\"BGP\\",\\n        \\"GroupName\\": \\"BGP节点\\",\\n        \\"IspCode\\": \\"465\\",\\n        \\"IspName\\": \\"阿里巴巴\\",\\n        \\"DefaultSelected\\": true,\\n        \\"NodeId\\": \\"node-ewze1bysndy4gf**j8\\\\n\\",\\n        \\"Ips\\": {\\n          \\"Ip\\": [\\n            \\" [\\\\n            \\\\\\"240e:e9:6002:15c:0:ff:b015:1**f\\\\\\",\\\\n            \\\\\\"240e:e9:6002:15a:0:ff:b05c:1**8\\\\\\"\\\\n          ]\\\\n\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取健康检查探点列表',
    ),
    'DescribeCloudGtmAddress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址的ID，地址唯一标识码。',
            'type' => 'string',
            'required' => true,
            'example' => 'addr-89518218114368**92',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-13E5A5044195',
              ),
              'AddressId' => 
              array (
                'title' => '地址 ID',
                'description' => '地址的ID，地址唯一标识码。',
                'type' => 'string',
                'example' => 'addr-89518218114368**92
',
              ),
              'CreateTime' => 
              array (
                'title' => '创建时间',
                'description' => '地址创建时间。',
                'type' => 'string',
                'example' => '2024-03-23T13:09Z',
              ),
              'CreateTimestamp' => 
              array (
                'description' => '创建时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'UpdateTime' => 
              array (
                'title' => '修改时间',
                'description' => '地址配置的最后修改时间。',
                'type' => 'string',
                'example' => '2024-03-29T13:20Z',
              ),
              'UpdateTimestamp' => 
              array (
                'description' => '修改时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'Name' => 
              array (
                'title' => '地址名称',
                'description' => '地址名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'Type' => 
              array (
                'title' => '地址类型',
                'description' => '地址类型：

- IPv4

- IPv6

- domain',
                'type' => 'string',
                'example' => 'IPv4',
              ),
              'Address' => 
              array (
                'title' => '地址',
                'description' => 'IP地址或者域名。',
                'type' => 'string',
                'example' => '223.5.XX.XX',
              ),
              'AttributeInfo' => 
              array (
                'title' => '地址归属信息',
                'description' => '地址归属信息。',
                'type' => 'string',
                'example' => '当前版本不支持此参数，不会返回地址归属信息。',
              ),
              'Remark' => 
              array (
                'title' => '备注',
                'description' => '备注。',
                'type' => 'string',
                'example' => 'test1',
              ),
              'EnableStatus' => 
              array (
                'title' => '启用状态 enable： 可用， disable：不可用',
                'description' => '表示该地址当前启用状态：

enable：启用状态

disable：禁用状态',
                'type' => 'string',
                'example' => 'enable',
              ),
              'AvailableMode' => 
              array (
                'title' => '可用状态设置模式',
                'description' => '地址探测异常切换方式：

- auto：自动模式（根据健康检查探测结果确定，探测异常停止解析，探测正常恢复解析）

- manual：手动模式（异常状态下停止解析，健康检查正常也不会恢复解析；正常状态下恢复解析，健康检查异常也只是告警，但不会停止解析。）',
                'type' => 'string',
                'example' => 'auto',
              ),
              'ManualAvailableStatus' => 
              array (
                'title' => '手动设置的可用状态',
                'description' => '当地址探测异常切换模式为manual时，地址设置的可用状态：

- available：正常，此状态下该地址正常解析，健康检查异常也只是告警，但不会停止解析；

- unavailable：异常，此状态下停止解析，健康检查正常也不会恢复解析；',
                'type' => 'string',
                'example' => 'available',
              ),
              'AvailableStatus' => 
              array (
                'title' => '地址可用状态',
                'description' => '地址可用状态：

- available：可用

- unavailable：不可用',
                'type' => 'string',
                'example' => 'available',
              ),
              'HealthStatus' => 
              array (
                'title' => '地址的健康状态：',
                'description' => '地址健康检查探测结果：

- ok：地址引用的健康探测模板探测任务全部正常；

 - ok_alert：地址引用的健康探测模板探测任务部分异常，地址判定为正常状态；

 - ok_no_monitor：地址没有引用任何健康探测模板；

 - exceptional：地址引用的健康探测模板探测任务部分或全部异常，但地址判定为异常状态；',
                'type' => 'string',
                'example' => 'ok',
              ),
              'HealthJudgement' => 
              array (
                'title' => '地址健康状态判定为ok 的方式：',
                'description' => '地址健康状态判定条件：

- any_ok：所有探测模板至少一个探测正常

- p30_ok：所有探测模板至少30%探测正常

- p50_ok：所有探测模板至少50%探测正常

- p70_ok：所有探测模板至少70%探测正常

- all_ok：所有探测模板全部探测正常',
                'type' => 'string',
                'example' => 'p50_ok',
              ),
              'HealthTasks' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'HealthTask' => 
                  array (
                    'title' => '健康探测任务列表',
                    'description' => '健康探测任务列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '地址引用的健康探测任务列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Port' => 
                        array (
                          'description' => '健康检查探测的目标地址服务端口，当健康检查选择Ping协议时，不支持服务端口的配置。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '80',
                        ),
                        'TemplateId' => 
                        array (
                          'description' => '地址关联的健康探测模板ID。',
                          'type' => 'string',
                          'example' => 'mtp-89518052425100**80',
                        ),
                        'TemplateName' => 
                        array (
                          'description' => '健康探测模板名称',
                          'type' => 'string',
                          'example' => 'Ping-IPv4',
                        ),
                        'MonitorStatus' => 
                        array (
                          'description' => '健康探测模板探测任务状态：
- ok：正常

- alert：告警

- no_data：无数据，一般是健康探测任务刚创建，探测任务数据暂未采集到',
                          'type' => 'string',
                          'example' => 'ok',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-13E5A5044195\\",\\n  \\"AddressId\\": \\"addr-89518218114368**92\\\\n\\",\\n  \\"CreateTime\\": \\"2024-03-23T13:09Z\\",\\n  \\"CreateTimestamp\\": 1527690629357,\\n  \\"UpdateTime\\": \\"2024-03-29T13:20Z\\",\\n  \\"UpdateTimestamp\\": 1527690629357,\\n  \\"Name\\": \\"test\\",\\n  \\"Type\\": \\"IPv4\\",\\n  \\"Address\\": \\"223.5.XX.XX\\",\\n  \\"AttributeInfo\\": \\"当前版本不支持此参数，不会返回地址归属信息。\\",\\n  \\"Remark\\": \\"test1\\",\\n  \\"EnableStatus\\": \\"enable\\",\\n  \\"AvailableMode\\": \\"auto\\",\\n  \\"ManualAvailableStatus\\": \\"available\\",\\n  \\"AvailableStatus\\": \\"available\\",\\n  \\"HealthStatus\\": \\"ok\\",\\n  \\"HealthJudgement\\": \\"p50_ok\\",\\n  \\"HealthTasks\\": {\\n    \\"HealthTask\\": [\\n      {\\n        \\"Port\\": 80,\\n        \\"TemplateId\\": \\"mtp-89518052425100**80\\",\\n        \\"TemplateName\\": \\"Ping-IPv4\\",\\n        \\"MonitorStatus\\": \\"ok\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取地址配置信息',
    ),
    'DescribeCloudGtmAddressPool' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池Id，地址池的唯一标识码。',
            'type' => 'string',
            'required' => false,
            'example' => 'pool-89564674533755**96',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'CreateTime' => 
              array (
                'title' => '创建时间',
                'description' => '地址池创建时间。',
                'type' => 'string',
                'example' => '2024-03-15T01:46Z',
              ),
              'CreateTimestamp' => 
              array (
                'description' => '地址池创建时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'UpdateTime' => 
              array (
                'title' => '修改时间',
                'description' => '地址池最后一次修改时间。',
                'type' => 'string',
                'example' => '2024-03-15T01:46Z',
              ),
              'UpdateTimestamp' => 
              array (
                'description' => '地址池最后一次修改时间（时间戳）。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1527690629357',
              ),
              'AddressPoolId' => 
              array (
                'title' => '地址池Id',
                'description' => '地址池Id，地址池的唯一标识码。',
                'type' => 'string',
                'example' => 'pool-89564674533755**96',
              ),
              'AddressPoolName' => 
              array (
                'title' => '地址池名称',
                'description' => '地址池名称。',
                'type' => 'string',
                'example' => 'AddressPool-1',
              ),
              'AddressPoolType' => 
              array (
                'title' => '地址池类型ipv4、ipv6、domain',
                'description' => '地址池类型：

- IPv4

- IPv6

- domain',
                'type' => 'string',
                'example' => 'IPv4',
              ),
              'AddressLbStrategy' => 
              array (
                'title' => '地址负载策略',
                'description' => '地址池中地址间负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址。并且每次对于所有地址进行轮转排序。

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址（顺序号标识地址返回的优先级，越小优先级越高）。若顺序号较小的地址不可用时，返回下一个序号较小的地址。

- weight：权重，支持对每个地址设置不同的权重值，实现解析查询按照权重比例返回地址。

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址，实现用户就近访问的效果。',
                'type' => 'string',
                'example' => 'round_robin',
              ),
              'SequenceLbStrategyMode' => 
              array (
                'title' => '顺序负载策略模式（抢占式、非抢占式）',
                'description' => '地址间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址；',
                'type' => 'string',
                'example' => 'preemptive',
              ),
              'EnableStatus' => 
              array (
                'title' => '启用状态',
                'description' => '地址池启用状态：

- enable：启用状态

- disable：禁用状态',
                'type' => 'string',
                'example' => 'enable',
              ),
              'HealthJudgement' => 
              array (
                'title' => '健康判定',
                'description' => '地址池健康状态判定条件：

- any_ok：地址池内至少1个地址是可用地址；

- p30_ok：地址池内至少30%地址是可用地址；

- p50_ok：地址池内至少50%地址是可用地址；

- p70_ok：地址池内至少70%地址是可用地址；

- all_ok：地址池内地址全部可用；',
                'type' => 'string',
                'example' => 'any_ok',
              ),
              'HealthStatus' => 
              array (
                'title' => '健康状态',
                'description' => '地址池健康状态：

- ok：正常，地址池引用的所有地址全部可用。

- ok_alert：警告，地址池引用的地址部分不可用，但是地址池状态判定为正常。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，地址池引用的地址部分或全部不可用，地址池状态判定为异常。',
                'type' => 'string',
                'example' => 'ok',
              ),
              'AvailableStatus' => 
              array (
                'title' => '可用性状态',
                'description' => '地址池可用性状态：

- available：可用

- unavailable：不可用',
                'type' => 'string',
                'example' => 'available',
              ),
              'Addresses' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Address' => 
                  array (
                    'description' => '地址列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '地址信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreateTime' => 
                        array (
                          'title' => '创建时间',
                          'description' => '地址创建时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z
',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '地址创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'UpdateTime' => 
                        array (
                          'title' => '修改时间',
                          'description' => '地址最后一次修改时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z
',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '地址的最后一次的修改时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'AddressId' => 
                        array (
                          'title' => '地址 ID',
                          'description' => '地址 ID，地址的唯一标识码。',
                          'type' => 'string',
                          'example' => 'addr-89518218114368**92
',
                        ),
                        'WeightValue' => 
                        array (
                          'title' => '权重',
                          'description' => '权重值（1-100内的整数，包括1和100），支持对每个地址设置不同的权重值，实现解析查询按照权重比例返回地址。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'SerialNumber' => 
                        array (
                          'title' => '序号',
                          'description' => '顺序号，标识地址返回的优先级，越小优先级越高。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'RequestSource' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'RequestSource' => 
                            array (
                              'description' => '解析请求来源列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '请求来源，是指解析请求的来源，GTM是根据终端所用LocalDNS的出口IP进行调度。若LocalDNS支持ECS (edns-client-subnet)，也可以根据访问终端的IP进行智能调度。',
                                'type' => 'string',
                                'example' => '["default"]',
                              ),
                            ),
                          ),
                        ),
                        'Name' => 
                        array (
                          'title' => '地址名称',
                          'description' => '地址名称。',
                          'type' => 'string',
                          'example' => 'Address-1',
                        ),
                        'Type' => 
                        array (
                          'title' => '地址类型',
                          'description' => '地址类型：

- IPv4：ipv4地址

- IPv6：ipv6地址

- domain：域名',
                          'type' => 'string',
                          'example' => 'IPv4',
                        ),
                        'Address' => 
                        array (
                          'description' => 'IP地址或域名。',
                          'type' => 'string',
                          'example' => '223.5.XX.XX',
                        ),
                        'AttributeInfo' => 
                        array (
                          'title' => '地址归属信息',
                          'description' => '地址归属信息，当前版本不支持返回此参数。',
                          'type' => 'string',
                          'example' => '当前版本不支持返回此参数。',
                        ),
                        'Remark' => 
                        array (
                          'title' => '备注',
                          'description' => '地址的备注。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'EnableStatus' => 
                        array (
                          'title' => '启用状态 enable： 可用， disable：不可用',
                          'description' => '地址启用状态，表示地址当前是否可用：

- enable：启用状态

- disable：禁用状态',
                          'type' => 'string',
                          'example' => 'enable',
                        ),
                        'AvailableMode' => 
                        array (
                          'title' => '可用状态设置模式',
                          'description' => '地址探测异常切换方式：

- auto：自动模式（根据健康检查探测结果确定，探测异常停止解析，探测正常恢复解析）

- manual：手动模式（异常状态下停止解析，健康检查正常也不会恢复解析；正常状态下恢复解析，健康检查异常也只是告警，但不会停止解析。）',
                          'type' => 'string',
                          'example' => 'auto',
                        ),
                        'ManualAvailableStatus' => 
                        array (
                          'title' => '手动设置的可用状态',
                          'description' => '当地址探测异常切换模式为manual时，地址设置的可用状态：

- available：正常，此状态下该地址正常解析，健康检查异常也只是告警，但不会停止解析；

- unavailable：异常，此状态下停止解析，健康检查正常也不会恢复解析；',
                          'type' => 'string',
                          'example' => 'available',
                        ),
                        'AvailableStatus' => 
                        array (
                          'title' => '地址可用状态',
                          'description' => '地址可用状态：

- available：地址可用

- unavailable：地址不可用',
                          'type' => 'string',
                          'example' => 'available',
                        ),
                        'HealthStatus' => 
                        array (
                          'title' => '地址的健康状态：',
                          'description' => '地址健康探测状态：

- ok：地址引用的健康探测模板探测任务全部正常；

- ok_alert：地址引用的健康探测模板探测任务部分异常，但地址判定为正常状态；

- ok_no_monitor：地址没有引用任何健康探测模板，状态正常；

- exceptional：地址引用的健康探测模板探测任务部分或全部异常，且地址判定为异常状态；',
                          'type' => 'string',
                          'example' => 'ok',
                        ),
                        'HealthJudgement' => 
                        array (
                          'title' => '地址健康状态判定为ok 的方式：',
                          'description' => '地址健康状态判定条件：

- any_ok：所有探测模板至少一个探测正常

- p30_ok：所有探测模板至少30%探测正常

- p50_ok：所有探测模板至少50%探测正常

- p70_ok：所有探测模板至少70%探测正常

- all_ok：所有探测模板全部探测正常',
                          'type' => 'string',
                          'example' => 'any_ok',
                        ),
                        'HealthTasks' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'HealthTask' => 
                            array (
                              'title' => '健康探测任务列表',
                              'description' => '健康探测任务列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '健康探测任务配置。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Port' => 
                                  array (
                                    'description' => '健康检查探测的目标地址服务端口，当健康检查选择Ping协议时，不支持服务端口的配置。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '80',
                                  ),
                                  'TemplateId' => 
                                  array (
                                    'description' => '地址关联的健康探测模板ID。',
                                    'type' => 'string',
                                    'example' => 'mtp-89518052425100**80
',
                                  ),
                                  'TemplateName' => 
                                  array (
                                    'description' => '健康探测模板名称。',
                                    'type' => 'string',
                                    'example' => 'IPv4-Ping',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'SeqNonPreemptiveSchedule' => 
                        array (
                          'description' => '是否是顺序（非抢占）模式调度对象，针对于融合云纳管场景：

- true：是

- false：不是',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Remark' => 
              array (
                'description' => '地址的备注。',
                'type' => 'string',
                'example' => 'test',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n  \\"CreateTimestamp\\": 1527690629357,\\n  \\"UpdateTime\\": \\"2024-03-15T01:46Z\\",\\n  \\"UpdateTimestamp\\": 1527690629357,\\n  \\"AddressPoolId\\": \\"pool-89564674533755**96\\",\\n  \\"AddressPoolName\\": \\"AddressPool-1\\",\\n  \\"AddressPoolType\\": \\"IPv4\\",\\n  \\"AddressLbStrategy\\": \\"round_robin\\",\\n  \\"SequenceLbStrategyMode\\": \\"preemptive\\",\\n  \\"EnableStatus\\": \\"enable\\",\\n  \\"HealthJudgement\\": \\"any_ok\\",\\n  \\"HealthStatus\\": \\"ok\\",\\n  \\"AvailableStatus\\": \\"available\\",\\n  \\"Addresses\\": {\\n    \\"Address\\": [\\n      {\\n        \\"CreateTime\\": \\"2024-03-15T01:46Z\\\\n\\",\\n        \\"CreateTimestamp\\": 1527690629357,\\n        \\"UpdateTime\\": \\"2024-03-15T01:46Z\\\\n\\",\\n        \\"UpdateTimestamp\\": 1527690629357,\\n        \\"AddressId\\": \\"addr-89518218114368**92\\\\n\\",\\n        \\"WeightValue\\": 1,\\n        \\"SerialNumber\\": 1,\\n        \\"RequestSource\\": {\\n          \\"RequestSource\\": [\\n            \\"[\\\\\\"default\\\\\\"]\\"\\n          ]\\n        },\\n        \\"Name\\": \\"Address-1\\",\\n        \\"Type\\": \\"IPv4\\",\\n        \\"Address\\": \\"223.5.XX.XX\\",\\n        \\"AttributeInfo\\": \\"当前版本不支持返回此参数。\\",\\n        \\"Remark\\": \\"test\\",\\n        \\"EnableStatus\\": \\"enable\\",\\n        \\"AvailableMode\\": \\"auto\\",\\n        \\"ManualAvailableStatus\\": \\"available\\",\\n        \\"AvailableStatus\\": \\"available\\",\\n        \\"HealthStatus\\": \\"ok\\",\\n        \\"HealthJudgement\\": \\"any_ok\\",\\n        \\"HealthTasks\\": {\\n          \\"HealthTask\\": [\\n            {\\n              \\"Port\\": 80,\\n              \\"TemplateId\\": \\"mtp-89518052425100**80\\\\n\\",\\n              \\"TemplateName\\": \\"IPv4-Ping\\"\\n            }\\n          ]\\n        },\\n        \\"SeqNonPreemptiveSchedule\\": false\\n      }\\n    ]\\n  },\\n  \\"Remark\\": \\"test\\"\\n}","type":"json"}]',
      'title' => '获取地址池',
    ),
    'DescribeCloudGtmAddressReference' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回信息的语言类型：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址id，唯一标识地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'addr-89518218114368**92',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'AddressId' => 
              array (
                'title' => '地址 ID',
                'description' => '地址id，唯一标识地址。',
                'type' => 'string',
                'example' => 'addr-89564584963974**40',
              ),
              'Name' => 
              array (
                'title' => '地址名称',
                'description' => '地址名称。',
                'type' => 'string',
                'example' => 'Address-1',
              ),
              'Address' => 
              array (
                'title' => '地址',
                'description' => 'IP地址或域名。',
                'type' => 'string',
                'example' => '223.5.XX.XX',
              ),
              'AddressPools' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AddressPool' => 
                  array (
                    'description' => '地址池列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '地址池信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AddressPoolId' => 
                        array (
                          'title' => '地址池Id',
                          'description' => '地址池Id。',
                          'type' => 'string',
                          'example' => 'pool-895280232254422016',
                        ),
                        'AddressPoolName' => 
                        array (
                          'title' => '地址池名称',
                          'description' => '地址池名称。',
                          'type' => 'string',
                          'example' => 'AddressPool-1',
                        ),
                        'InstanceConfigs' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'InstanceConfig' => 
                            array (
                              'description' => '引用地址池的实例列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '引用地址池的实例配置信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'InstanceId' => 
                                  array (
                                    'title' => '实例id',
                                    'description' => '全局流量管理3.0实例id。',
                                    'type' => 'string',
                                    'example' => 'gtm-cn-zz11t58**0k',
                                  ),
                                  'InstanceName' => 
                                  array (
                                    'title' => '调度实例名称',
                                    'description' => '实例名称。',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                  'ConfigId' => 
                                  array (
                                    'title' => '调度实例名称',
                                    'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。',
                                    'type' => 'string',
                                    'example' => 'config-00**01',
                                  ),
                                  'VersionCode' => 
                                  array (
                                    'title' => '调度实例名称',
                                    'description' => '全局流量管理3.0实例版本：

- standard：标准版

- ultimate：旗舰版',
                                    'type' => 'string',
                                    'example' => 'ultimate',
                                  ),
                                  'ScheduleZoneName' => 
                                  array (
                                    'title' => 'zone名称',
                                    'description' => 'zone名称，即GTM接入域名的父Zone。一般为GTM实例所在账号下，在云解析DNS控制台的托管域名，支持主域和子域。',
                                    'type' => 'string',
                                    'example' => 'example.com
',
                                  ),
                                  'ScheduleHostname' => 
                                  array (
                                    'title' => '主机记录',
                                    'description' => 'GTM接入域名的主机记录。',
                                    'type' => 'string',
                                    'example' => 'www',
                                  ),
                                  'ScheduleDomainName' => 
                                  array (
                                    'title' => '域名，主机记录+zoneNamne',
                                    'description' => 'GTM接入域名，ScheduleHostname+ScheduleZoneName。',
                                    'type' => 'string',
                                    'example' => 'www.example.com',
                                  ),
                                  'ScheduleRrType' => 
                                  array (
                                    'description' => '调度域名的解析记录类型：

- A：IPv4地址

- AAAA：IPv6地址

- CNAME：域名',
                                    'type' => 'string',
                                    'example' => 'A',
                                  ),
                                  'Ttl' => 
                                  array (
                                    'description' => '全局TTL（单位：秒），接入域名解析到地址池中地址的TTL值，影响解析记录在运营商LocalDNS中的缓存时间，支持自定义TTL值。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '30',
                                  ),
                                  'AddressPoolLbStrategy' => 
                                  array (
                                    'description' => '地址池之间的负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址池。并且每次对于所有地址池进行轮转排序；

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址池（顺序号标识地址池返回的优先级，越小优先级越高）。若顺序号较小的地址池不可用时，返回下一个序号较小的地址池；

- weight：权重，支持对每个地址池设置不同的权重值，实现解析查询按照权重比例返回地址池；

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址池，实现用户就近访问的效果；',
                                    'type' => 'string',
                                    'example' => 'round_robin',
                                  ),
                                  'SequenceLbStrategyMode' => 
                                  array (
                                    'description' => '地址池间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址池；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址池；',
                                    'type' => 'string',
                                    'example' => ' preemptive',
                                  ),
                                  'AvailableStatus' => 
                                  array (
                                    'description' => '域名实例服务可用状态：

- available：可用，域名“启用”且健康状态为“正常”，接入域名的服务可用状态为“可用”；

- unavailable：不可用，域名“禁用”或健康状态为“异常”，接入域名的服务可用状态为“不可用”；',
                                    'type' => 'string',
                                    'example' => 'available',
                                  ),
                                  'EnableStatus' => 
                                  array (
                                    'description' => '域名实例的启用状态：

- enable：启用状态，GTM实例智能调度策略生效；

- disable：禁用状态，GTM实例智能调度策略不可用；',
                                    'type' => 'string',
                                    'example' => 'enable',
                                  ),
                                  'HealthStatus' => 
                                  array (
                                    'description' => '域名实例健康状态：

- ok：正常，接入域名引用的所有地址池全部可用。

- ok_alert：警告，接入域名引用的所有地址池部分不可用。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，接入域名引用的所有地址池全部不可用。此时，使用实例所引用的顺序号较小的非空地址池中的地址进行兜底解析，尽可能帮助客户端获得解析结果。',
                                    'type' => 'string',
                                    'example' => 'ok',
                                  ),
                                  'Remark' => 
                                  array (
                                    'description' => '备注。',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'AddressPoolType' => 
                        array (
                          'description' => '地址池类型：

- IPv4

- IPv6

- domain',
                          'type' => 'string',
                          'example' => 'IPv4',
                        ),
                        'AddressLbStrategy' => 
                        array (
                          'description' => '地址池中地址间负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址。并且每次对于所有地址进行轮转排序。

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址（顺序号标识地址返回的优先级，越小优先级越高）。若顺序号较小的地址不可用时，返回下一个序号较小的地址。

- weight：权重，支持对每个地址设置不同的权重值，实现解析查询按照权重比例返回地址。

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址，实现用户就近访问的效果。',
                          'type' => 'string',
                          'example' => 'round_robin',
                        ),
                        'SequenceLbStrategyMode' => 
                        array (
                          'description' => '地址间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址；',
                          'type' => 'string',
                          'example' => 'preemptive',
                        ),
                        'EnableStatus' => 
                        array (
                          'description' => '地址池启用状态：

- enable：启用状态

- disable：禁用状态',
                          'type' => 'string',
                          'example' => 'enable',
                        ),
                        'HealthJudgement' => 
                        array (
                          'description' => '地址池健康状态判定条件：

- any_ok：地址池内至少1个地址是可用地址；

- p30_ok：地址池内至少30%地址是可用地址；

- p50_ok：地址池内至少50%地址是可用地址；

- p70_ok：地址池内至少70%地址是可用地址；

- all_ok：地址池内地址全部可用；',
                          'type' => 'string',
                          'example' => 'any_ok',
                        ),
                        'HealthStatus' => 
                        array (
                          'description' => '地址池健康状态：

- ok：正常，地址池引用的所有地址全部可用。

- ok_alert：警告，地址池引用的地址部分不可用，但是地址池状态判定为正常。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，地址池引用的地址部分或全部不可用，地址池状态判定为异常。',
                          'type' => 'string',
                          'example' => 'ok',
                        ),
                        'AvailableStatus' => 
                        array (
                          'description' => '地址池可用性状态：

- available：可用

- unavailable：不可用',
                          'type' => 'string',
                          'example' => 'available',
                        ),
                        'Remark' => 
                        array (
                          'description' => '地址池的备注。',
                          'type' => 'string',
                          'example' => 'pool-1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"AddressId\\": \\"addr-89564584963974**40\\",\\n  \\"Name\\": \\"Address-1\\",\\n  \\"Address\\": \\"223.5.XX.XX\\",\\n  \\"AddressPools\\": {\\n    \\"AddressPool\\": [\\n      {\\n        \\"AddressPoolId\\": \\"pool-895280232254422016\\",\\n        \\"AddressPoolName\\": \\"AddressPool-1\\",\\n        \\"InstanceConfigs\\": {\\n          \\"InstanceConfig\\": [\\n            {\\n              \\"InstanceId\\": \\"gtm-cn-zz11t58**0k\\",\\n              \\"InstanceName\\": \\"test\\",\\n              \\"ConfigId\\": \\"config-00**01\\",\\n              \\"VersionCode\\": \\"ultimate\\",\\n              \\"ScheduleZoneName\\": \\"example.com\\\\n\\",\\n              \\"ScheduleHostname\\": \\"www\\",\\n              \\"ScheduleDomainName\\": \\"www.example.com\\",\\n              \\"ScheduleRrType\\": \\"A\\",\\n              \\"Ttl\\": 30,\\n              \\"AddressPoolLbStrategy\\": \\"round_robin\\",\\n              \\"SequenceLbStrategyMode\\": \\" preemptive\\",\\n              \\"AvailableStatus\\": \\"available\\",\\n              \\"EnableStatus\\": \\"enable\\",\\n              \\"HealthStatus\\": \\"ok\\",\\n              \\"Remark\\": \\"test\\"\\n            }\\n          ]\\n        },\\n        \\"AddressPoolType\\": \\"IPv4\\",\\n        \\"AddressLbStrategy\\": \\"round_robin\\",\\n        \\"SequenceLbStrategyMode\\": \\"preemptive\\",\\n        \\"EnableStatus\\": \\"enable\\",\\n        \\"HealthJudgement\\": \\"any_ok\\",\\n        \\"HealthStatus\\": \\"ok\\",\\n        \\"AvailableStatus\\": \\"available\\",\\n        \\"Remark\\": \\"pool-1\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取地址被引用的信息',
    ),
    'SearchCloudGtmAddressPools' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保证请求幂等性。从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符，且不能超过64个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22
',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为1，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'AddressPoolName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池名称，支持对输入的地址池名称进行模糊搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'AddressPool-1',
          ),
        ),
        5 => 
        array (
          'name' => 'AddressPoolType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池类型，支持对地址池类型进行精确查询：

- IPv4

- IPv6

- domain',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        6 => 
        array (
          'name' => 'EnableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池启用状态，支持对地址池启用状态进行精确查询：

- enable：启用状态

- disable：禁用状态',
            'type' => 'string',
            'required' => false,
            'example' => 'enable',
          ),
        ),
        7 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池备注，支持对输入的备注进行模糊搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        8 => 
        array (
          'name' => 'HealthStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池健康状态，支持对地址池健康状态精确查询：

ok：正常，地址池引用的所有地址全部可用。

ok_alert：警告，地址池引用的地址部分不可用，但是地址池状态判定为正常。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

exceptional：异常，地址池引用的地址部分或全部不可用，地址池状态判定为异常。',
            'type' => 'string',
            'required' => false,
            'example' => 'ok',
          ),
        ),
        9 => 
        array (
          'name' => 'AvailableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址池可用状态，支持对地址池可用状态进行精确查询：

- available：可用

- unavailable：不可用',
            'type' => 'string',
            'required' => false,
            'example' => 'available',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为1，默认为1。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '符合查询条件的地址池总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '11',
              ),
              'AddressPools' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AddressPool' => 
                  array (
                    'description' => '地址池列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '地址池信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreateTime' => 
                        array (
                          'title' => '创建时间',
                          'description' => '地址池创建时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '地址池创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'UpdateTime' => 
                        array (
                          'title' => '修改时间',
                          'description' => '地址池最后一次修改时间。',
                          'type' => 'string',
                          'example' => '024-03-15T01:46Z',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '地址池最后一次修改时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'AddressPoolId' => 
                        array (
                          'title' => '地址池Id',
                          'description' => '地址池Id，地址池的唯一标识码。',
                          'type' => 'string',
                          'example' => 'pool-895280232254422016',
                        ),
                        'AddressPoolName' => 
                        array (
                          'title' => '地址池名称',
                          'description' => '地址池名称。',
                          'type' => 'string',
                          'example' => 'AddressPool-1',
                        ),
                        'AddressPoolType' => 
                        array (
                          'title' => '地址池类型ipv4、ipv6、domain',
                          'description' => '地址池类型：

- IPv4

- IPv6

- domain',
                          'type' => 'string',
                          'example' => 'IPv4',
                        ),
                        'AddressLbStrategy' => 
                        array (
                          'title' => '地址负载策略',
                          'description' => '地址池中地址间负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址。并且每次对于所有地址进行轮转排序。

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址（顺序号标识地址返回的优先级，越小优先级越高）。若顺序号较小的地址不可用时，返回下一个序号较小的地址。

- weight：权重，支持对每个地址设置不同的权重值，实现解析查询按照权重比例返回地址。

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址，实现用户就近访问的效果。',
                          'type' => 'string',
                          'example' => 'round_robin',
                        ),
                        'SequenceLbStrategyMode' => 
                        array (
                          'title' => '顺序负载策略模式（抢占式、非抢占式）',
                          'description' => '地址间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址；',
                          'type' => 'string',
                          'example' => 'preemptive',
                        ),
                        'EnableStatus' => 
                        array (
                          'title' => '启用状态',
                          'description' => '地址池启用状态：

- enable：启用状态

- disable：禁用状态',
                          'type' => 'string',
                          'example' => 'enable',
                        ),
                        'HealthJudgement' => 
                        array (
                          'title' => '健康判定',
                          'description' => '地址池健康状态判定条件：

- any_ok：地址池内至少1个地址是可用地址；

- p30_ok：地址池内至少30%地址是可用地址；

- p50_ok：地址池内至少50%地址是可用地址；

- p70_ok：地址池内至少70%地址是可用地址；

- all_ok：地址池内地址全部可用；',
                          'type' => 'string',
                          'example' => 'any_ok',
                        ),
                        'HealthStatus' => 
                        array (
                          'title' => '健康状态',
                          'description' => '地址池健康状态：

- ok：正常，地址池引用的所有地址全部可用。

- ok_alert：警告，地址池引用的地址部分不可用，但是地址池状态判定为正常。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，地址池引用的地址部分或全部不可用，地址池状态判定为异常。',
                          'type' => 'string',
                          'example' => 'ok',
                        ),
                        'AvailableStatus' => 
                        array (
                          'title' => '可用性状态',
                          'description' => '地址池可用性状态：

- available：可用

- unavailable：不可用',
                          'type' => 'string',
                          'example' => 'available',
                        ),
                        'Addresses' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Address' => 
                            array (
                              'description' => 'IP地址或者域名列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'IP地址或者域名信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'CreateTime' => 
                                  array (
                                    'title' => '创建时间',
                                    'description' => '地址创建时间。',
                                    'type' => 'string',
                                    'example' => '2024-03-15T01:46Z',
                                  ),
                                  'CreateTimestamp' => 
                                  array (
                                    'description' => '地址创建时间（时间戳）。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1527690629357',
                                  ),
                                  'UpdateTime' => 
                                  array (
                                    'title' => '修改时间',
                                    'description' => '地址最后一次修改时间。',
                                    'type' => 'string',
                                    'example' => '2024-03-15T01:46Z',
                                  ),
                                  'UpdateTimestamp' => 
                                  array (
                                    'description' => '地址的最后一次的修改时间（时间戳）。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1527690629357
',
                                  ),
                                  'AddressId' => 
                                  array (
                                    'title' => '地址 ID',
                                    'description' => '地址 ID，地址的唯一标识码。',
                                    'type' => 'string',
                                    'example' => 'addr-895182181143688192',
                                  ),
                                  'WeightValue' => 
                                  array (
                                    'title' => '权重',
                                    'description' => '权重值（1-100内的整数），支持对每个地址设置不同的权重值，实现解析查询按照权重比例返回地址。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'SerialNumber' => 
                                  array (
                                    'title' => '序号',
                                    'description' => '顺序号，标识地址返回的优先级，越小优先级越高。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'RequestSource' => 
                                  array (
                                    'title' => '请求来源',
                                    'description' => '请求来源，是指解析请求的来源，GTM是根据终端所用LocalDNS的出口IP进行调度。若LocalDNS支持ECS (edns-client-subnet)，也可以根据访问终端的IP进行智能调度。',
                                    'type' => 'string',
                                    'example' => 'default',
                                  ),
                                  'Name' => 
                                  array (
                                    'title' => '地址名称',
                                    'description' => '地址名称。',
                                    'type' => 'string',
                                    'example' => 'Address-1',
                                  ),
                                  'Type' => 
                                  array (
                                    'title' => '地址类型',
                                    'description' => '地址类型：

- IPv4：ipv4地址
- IPv6：ipv6地址
- domain：域名',
                                    'type' => 'string',
                                    'example' => 'IPv4',
                                  ),
                                  'Address' => 
                                  array (
                                    'title' => '地址',
                                    'description' => 'IP地址或者域名。',
                                    'type' => 'string',
                                    'example' => '223.5.XX.XX',
                                  ),
                                  'AttributeInfo' => 
                                  array (
                                    'title' => '地址归属信息',
                                    'description' => '地址归属信息，当前版本不支持返回此参数。',
                                    'type' => 'string',
                                    'example' => '当前版本不支持返回此参数。',
                                  ),
                                  'Remark' => 
                                  array (
                                    'title' => '备注',
                                    'description' => '备注。',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                  'EnableStatus' => 
                                  array (
                                    'title' => '启用状态 enable： 可用， disable：不可用',
                                    'description' => '地址启用状态，表示地址当前是否可用：

- enable：启用状态

- disable：禁用状态',
                                    'type' => 'string',
                                    'example' => 'enable',
                                  ),
                                  'AvailableMode' => 
                                  array (
                                    'title' => '可用状态设置模式',
                                    'description' => '地址探测异常切换方式：

- auto：自动模式（根据健康检查探测结果确定，探测异常停止解析，探测正常恢复解析）

- manual：手动模式（异常状态下停止解析，健康检查正常也不会恢复解析；正常状态下恢复解析，健康检查异常也只是告警，但不会停止解析。）',
                                    'type' => 'string',
                                    'example' => 'auto',
                                  ),
                                  'ManualAvailableStatus' => 
                                  array (
                                    'title' => '手动设置的可用状态',
                                    'description' => '当地址探测异常切换模式为manual时，地址设置的可用状态：

- available：正常，此状态下该地址正常解析，健康检查异常也只是告警，但不会停止解析；

- unavailable：异常，此状态下停止解析，健康检查正常也不会恢复解析；',
                                    'type' => 'string',
                                    'example' => 'available',
                                  ),
                                  'AvailableStatus' => 
                                  array (
                                    'title' => '地址可用状态',
                                    'description' => '地址可用状态：

- available：地址可用

- unavailable：地址不可用',
                                    'type' => 'string',
                                    'example' => 'available',
                                  ),
                                  'HealthStatus' => 
                                  array (
                                    'title' => '地址的健康状态：',
                                    'description' => '地址健康探测状态：

- ok：地址引用的健康探测模板探测任务全部正常；

- ok_alert：地址引用的健康探测模板探测任务部分异常，但地址判定为正常状态；

- ok_no_monitor：地址没有引用任何健康探测模板，状态正常；

- exceptional：地址引用的健康探测模板探测任务部分或全部异常，且地址判定为异常状态；',
                                    'type' => 'string',
                                    'example' => 'ok',
                                  ),
                                  'HealthJudgement' => 
                                  array (
                                    'title' => '地址健康状态判定为ok 的方式：',
                                    'description' => '地址健康状态判定条件：

- any_ok：所有探测模板至少一个探测正常

- p30_ok：所有探测模板至少30%探测正常

- p50_ok：所有探测模板至少50%探测正常

- p70_ok：所有探测模板至少70%探测正常

- all_ok：所有探测模板全部探测正常',
                                    'type' => 'string',
                                    'example' => 'any_ok',
                                  ),
                                  'HealthTasks' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'HealthTask' => 
                                      array (
                                        'title' => '健康探测任务列表',
                                        'description' => '健康探测任务列表。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '健康探测任务信息',
                                          'type' => 'object',
                                          'properties' => 
                                          array (
                                            'Port' => 
                                            array (
                                              'description' => '健康检查探测的目标地址服务端口，当健康检查选择Ping协议时，不支持服务端口的配置。',
                                              'type' => 'integer',
                                              'format' => 'int32',
                                              'example' => '80',
                                            ),
                                            'TemplateId' => 
                                            array (
                                              'description' => '地址关联的健康探测模板ID。',
                                              'type' => 'string',
                                              'example' => 'mtp-89518052425100**80',
                                            ),
                                            'TemplateName' => 
                                            array (
                                              'description' => '健康探测模板名称。',
                                              'type' => 'string',
                                              'example' => 'IPv4-Ping',
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Remark' => 
                        array (
                          'description' => '地址备注。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 20,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 11,\\n  \\"AddressPools\\": {\\n    \\"AddressPool\\": [\\n      {\\n        \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n        \\"CreateTimestamp\\": 1527690629357,\\n        \\"UpdateTime\\": \\"024-03-15T01:46Z\\",\\n        \\"UpdateTimestamp\\": 1527690629357,\\n        \\"AddressPoolId\\": \\"pool-895280232254422016\\",\\n        \\"AddressPoolName\\": \\"AddressPool-1\\",\\n        \\"AddressPoolType\\": \\"IPv4\\",\\n        \\"AddressLbStrategy\\": \\"round_robin\\",\\n        \\"SequenceLbStrategyMode\\": \\"preemptive\\",\\n        \\"EnableStatus\\": \\"enable\\",\\n        \\"HealthJudgement\\": \\"any_ok\\",\\n        \\"HealthStatus\\": \\"ok\\",\\n        \\"AvailableStatus\\": \\"available\\",\\n        \\"Addresses\\": {\\n          \\"Address\\": [\\n            {\\n              \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n              \\"CreateTimestamp\\": 1527690629357,\\n              \\"UpdateTime\\": \\"2024-03-15T01:46Z\\",\\n              \\"UpdateTimestamp\\": 1527690629357,\\n              \\"AddressId\\": \\"addr-895182181143688192\\",\\n              \\"WeightValue\\": 1,\\n              \\"SerialNumber\\": 1,\\n              \\"RequestSource\\": \\"default\\",\\n              \\"Name\\": \\"Address-1\\",\\n              \\"Type\\": \\"IPv4\\",\\n              \\"Address\\": \\"223.5.XX.XX\\",\\n              \\"AttributeInfo\\": \\"当前版本不支持返回此参数。\\",\\n              \\"Remark\\": \\"test\\",\\n              \\"EnableStatus\\": \\"enable\\",\\n              \\"AvailableMode\\": \\"auto\\",\\n              \\"ManualAvailableStatus\\": \\"available\\",\\n              \\"AvailableStatus\\": \\"available\\",\\n              \\"HealthStatus\\": \\"ok\\",\\n              \\"HealthJudgement\\": \\"any_ok\\",\\n              \\"HealthTasks\\": {\\n                \\"HealthTask\\": [\\n                  {\\n                    \\"Port\\": 80,\\n                    \\"TemplateId\\": \\"mtp-89518052425100**80\\",\\n                    \\"TemplateName\\": \\"IPv4-Ping\\"\\n                  }\\n                ]\\n              }\\n            }\\n          ]\\n        },\\n        \\"Remark\\": \\"test\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '搜索地址池列表',
    ),
    'ListCloudGtmAddresses' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址名称',
            'description' => '地址名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址类型',
            'description' => '地址类型：

- IPv4

- IPv6

- domain',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        4 => 
        array (
          'name' => 'Address',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址',
            'description' => 'IP地址或者域名。',
            'type' => 'string',
            'required' => false,
            'example' => '223.5.XX.XX',
          ),
        ),
        5 => 
        array (
          'name' => 'EnableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '启用状态 enable： 可用， disable：不可用',
            'description' => '表示地址当前是否可用：

- enable：启用状态

- disable：禁用状态',
            'type' => 'string',
            'required' => false,
            'example' => 'enable',
          ),
        ),
        6 => 
        array (
          'name' => 'HealthStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址探测结果： ok, ok_alert, ok_no_monitor, exceptional',
            'description' => '地址健康检查探测状态：

- ok：地址引用的健康探测模板探测任务全部正常；

 - ok_alert：地址引用的健康探测模板探测任务部分异常，但地址判定为正常状态；

 - ok_no_monitor：地址没有引用任何健康探测模板；

 - exceptional：地址引用的健康探测模板探测任务部分或全部异常，且地址判定为异常状态；',
            'type' => 'string',
            'required' => false,
            'example' => 'ok',
          ),
        ),
        7 => 
        array (
          'name' => 'MonitorTemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查模板ID，健康探测模板的唯一标识码。',
            'type' => 'string',
            'required' => false,
            'example' => 'mtp-89518052425100**80',
          ),
        ),
        8 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '20',
          ),
        ),
        10 => 
        array (
          'name' => 'AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址的ID，地址唯一标识码。',
            'type' => 'string',
            'required' => false,
            'example' => 'addr-89518218114368**92',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'TotalItems' => 
              array (
                'description' => '获取到地址列表中的地址总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '30',
              ),
              'Addresses' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Address' => 
                  array (
                    'description' => '地址列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '地址列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AddressId' => 
                        array (
                          'title' => '地址 ID',
                          'description' => '地址 ID，唯一标识该地址。',
                          'type' => 'string',
                          'example' => 'addr-89518218114368**92',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '创建时间',
                          'description' => '地址创建时间。',
                          'type' => 'string',
                          'example' => '2024-03-23T13:09Z',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'UpdateTime' => 
                        array (
                          'title' => '修改时间',
                          'description' => '地址修改时间。',
                          'type' => 'string',
                          'example' => '2024-03-29T13:20Z',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '更新时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690824357',
                        ),
                        'Name' => 
                        array (
                          'title' => '地址名称',
                          'description' => '地址名称。',
                          'type' => 'string',
                          'example' => 'Address-1',
                        ),
                        'Type' => 
                        array (
                          'title' => '地址类型',
                          'description' => '地址类型：

- IPv4

- IPv6

- domain',
                          'type' => 'string',
                          'example' => 'IPv4',
                        ),
                        'Address' => 
                        array (
                          'title' => '地址',
                          'description' => 'IP地址或者域名。',
                          'type' => 'string',
                          'example' => '223.5.XX.XX',
                        ),
                        'AttributeInfo' => 
                        array (
                          'title' => '地址归属信息',
                          'description' => '地址归属信息。',
                          'type' => 'string',
                          'example' => '当前版本不支持此参数，不会返回地址归属信息。',
                        ),
                        'Remark' => 
                        array (
                          'title' => '备注',
                          'description' => '备注。',
                          'type' => 'string',
                          'example' => 'app',
                        ),
                        'EnableStatus' => 
                        array (
                          'title' => '启用状态 enable： 可用， disable：不可用',
                          'description' => '表示地址当前是否可用：

- enable：启用状态

- disable：禁用状态',
                          'type' => 'string',
                          'example' => 'enable',
                        ),
                        'AvailableMode' => 
                        array (
                          'title' => '可用状态设置模式',
                          'description' => '地址探测异常切换方式：

auto：自动模式（根据健康检查探测结果确定，探测异常停止解析，探测正常恢复解析）

manual：手动模式（异常状态下停止解析，健康检查正常也不会恢复解析；正常状态下恢复解析，健康检查异常也只是告警，但不会停止解析。）',
                          'type' => 'string',
                          'example' => 'auto',
                        ),
                        'ManualAvailableStatus' => 
                        array (
                          'title' => '手动设置的可用状态',
                          'description' => '当地址探测异常切换模式为manual时，地址设置的可用状态：

available：正常，此状态下该地址正常解析，健康检查异常也只是告警，但不会停止解析；

unavailable：异常，此状态下停止解析，健康检查正常也不会恢复解析；',
                          'type' => 'string',
                          'example' => 'available',
                        ),
                        'AvailableStatus' => 
                        array (
                          'title' => '地址可用状态',
                          'description' => '地址可用状态：

- available：地址可用

- unavailable：地址不可用',
                          'type' => 'string',
                          'example' => 'available',
                        ),
                        'HealthStatus' => 
                        array (
                          'title' => '地址的健康状态：',
                          'description' => '地址健康检查探测状态：

- ok：地址引用的健康探测模板探测任务全部正常；

 - ok_alert：地址引用的健康探测模板探测任务部分异常，但地址判定为正常状态；

 - ok_no_monitor：地址没有引用任何健康探测模板；

 - exceptional：地址引用的健康探测模板探测任务部分或全部异常，且地址判定为异常状态；',
                          'type' => 'string',
                          'example' => 'ok',
                        ),
                        'HealthJudgement' => 
                        array (
                          'title' => '地址健康状态判定为ok 的方式：',
                          'description' => '地址健康状态判定条件：

- any_ok：所有探测模板至少一个探测正常

- p30_ok：所有探测模板至少30%探测正常

- p50_ok：所有探测模板至少50%探测正常

- p70_ok：所有探测模板至少70%探测正常

- all_ok：所有探测模板全部探测正常',
                          'type' => 'string',
                          'example' => 'p50_ok',
                        ),
                        'HealthTasks' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'HealthTask' => 
                            array (
                              'title' => '健康探测任务列表',
                              'description' => '健康探测任务列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '地址关联的健康探测任务列表。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Port' => 
                                  array (
                                    'description' => '健康检查探测的目标地址服务端口，当健康检查选择Ping协议时，不支持服务端口的配置。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '80',
                                  ),
                                  'TemplateId' => 
                                  array (
                                    'description' => '地址关联的健康探测模板ID。',
                                    'type' => 'string',
                                    'example' => 'mtp-89518052425100**80',
                                  ),
                                  'TemplateName' => 
                                  array (
                                    'description' => '健康探测模板名称。',
                                    'type' => 'string',
                                    'example' => 'Ping-IPv4',
                                  ),
                                  'MonitorStatus' => 
                                  array (
                                    'description' => '健康探测模板探测任务状态：
- ok：正常

- alert：告警

- no_data：无数据，一般是健康探测任务刚创建，探测任务数据暂未采集到',
                                    'type' => 'string',
                                    'example' => 'ok',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 20,\\n  \\"TotalPages\\": 2,\\n  \\"TotalItems\\": 30,\\n  \\"Addresses\\": {\\n    \\"Address\\": [\\n      {\\n        \\"AddressId\\": \\"addr-89518218114368**92\\",\\n        \\"CreateTime\\": \\"2024-03-23T13:09Z\\",\\n        \\"CreateTimestamp\\": 1527690629357,\\n        \\"UpdateTime\\": \\"2024-03-29T13:20Z\\",\\n        \\"UpdateTimestamp\\": 1527690824357,\\n        \\"Name\\": \\"Address-1\\",\\n        \\"Type\\": \\"IPv4\\",\\n        \\"Address\\": \\"223.5.XX.XX\\",\\n        \\"AttributeInfo\\": \\"当前版本不支持此参数，不会返回地址归属信息。\\",\\n        \\"Remark\\": \\"app\\",\\n        \\"EnableStatus\\": \\"enable\\",\\n        \\"AvailableMode\\": \\"auto\\",\\n        \\"ManualAvailableStatus\\": \\"available\\",\\n        \\"AvailableStatus\\": \\"available\\",\\n        \\"HealthStatus\\": \\"ok\\",\\n        \\"HealthJudgement\\": \\"p50_ok\\",\\n        \\"HealthTasks\\": {\\n          \\"HealthTask\\": [\\n            {\\n              \\"Port\\": 80,\\n              \\"TemplateId\\": \\"mtp-89518052425100**80\\",\\n              \\"TemplateName\\": \\"Ping-IPv4\\",\\n              \\"MonitorStatus\\": \\"ok\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取地址列表',
    ),
    'ListCloudGtmInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保证请求幂等性。从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符，且不能超过64个字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度实例id',
            'description' => 'GTM实例id。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-jmp3qnw**03',
          ),
        ),
        5 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度实例名称',
            'description' => '实例名称，方便区分实例的业务用途。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '实例总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '15',
              ),
              'Instances' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Instance' => 
                  array (
                    'description' => '实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '实例信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceId' => 
                        array (
                          'title' => '实例id',
                          'description' => 'GTM实例id。',
                          'type' => 'string',
                          'example' => 'gtm-cn-jmp3qnw**03',
                        ),
                        'InstanceName' => 
                        array (
                          'title' => '调度实例名称',
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '创建时间',
                          'description' => '实例创建时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '实例创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1231298343343',
                        ),
                        'UpdateTime' => 
                        array (
                          'title' => '修改时间',
                          'description' => '实例最后一次修改时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z
',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '实例最后一次修改时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1231298343343',
                        ),
                        'VersionCode' => 
                        array (
                          'title' => '版本code',
                          'description' => 'GTM实例版本：

- standard：标准版

- ultimate：旗舰版',
                          'type' => 'string',
                          'example' => 'ultimate',
                        ),
                        'CommodityCode' => 
                        array (
                          'title' => '商品code',
                          'description' => '商品编码：

- dns_gtm_public_cn：中国站商品编码；

- dns_gtm_public_intl：国际站商品编码；',
                          'type' => 'string',
                          'example' => 'dns_gtm_public_cn',
                        ),
                        'MonthlySmsQuota' => 
                        array (
                          'title' => '短消息配额',
                          'description' => '短息配额，仅中国站支持短消息，国际站不支持短消息。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1000',
                        ),
                        'MonitorTaskQuota' => 
                        array (
                          'title' => '监控任务配额',
                          'description' => '监控探测任务配额。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'ExpireTimestamp' => 
                        array (
                          'description' => '实例到期时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1231298343343',
                        ),
                        'ExpireTime' => 
                        array (
                          'title' => '到期日',
                          'description' => '实例到期时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z',
                        ),
                        'ScheduleDomainName' => 
                        array (
                          'description' => '接入域名，即GTM的CNAME接入域名。',
                          'type' => 'string',
                          'example' => 'www.example.com',
                        ),
                        'MonthlySmsUsed' => 
                        array (
                          'description' => '当月短信发送量，仅中国站支持短信，国际站不支持短信。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'MonthlyEmailUsed' => 
                        array (
                          'description' => '当月邮件发送量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '50',
                        ),
                        'MonthlyWebhookUsed' => 
                        array (
                          'description' => '当月 webhook 发送量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '80',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 20,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 15,\\n  \\"Instances\\": {\\n    \\"Instance\\": [\\n      {\\n        \\"InstanceId\\": \\"gtm-cn-jmp3qnw**03\\",\\n        \\"InstanceName\\": \\"test\\",\\n        \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n        \\"CreateTimestamp\\": 1231298343343,\\n        \\"UpdateTime\\": \\"2024-03-15T01:46Z\\\\n\\",\\n        \\"UpdateTimestamp\\": 1231298343343,\\n        \\"VersionCode\\": \\"ultimate\\",\\n        \\"CommodityCode\\": \\"dns_gtm_public_cn\\",\\n        \\"MonthlySmsQuota\\": 1000,\\n        \\"MonitorTaskQuota\\": 100,\\n        \\"ExpireTimestamp\\": 1231298343343,\\n        \\"ExpireTime\\": \\"2024-03-15T01:46Z\\",\\n        \\"ScheduleDomainName\\": \\"www.example.com\\",\\n        \\"MonthlySmsUsed\\": 100,\\n        \\"MonthlyEmailUsed\\": 50,\\n        \\"MonthlyWebhookUsed\\": 80\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取实例列表',
    ),
    'SearchCloudGtmInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值的语言，取值：

- **zh-CN**：中文。
- **en-US**：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保证请求幂等性。从您的客户端生成一个参数值，确保不同请求间该参数值唯一。只支持ASCII字符，且不能超过64个字符。更多信息，请参见如何保证幂等性。',
            'type' => 'string',
            'required' => false,
            'example' => '	
1ae05db4-10e7-11ef-b126-00163e24**22
',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为1，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度实例id',
            'description' => '全局流量管理3.0实例id。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        5 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度实例名称',
            'description' => '调度实例名称，支持模糊搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '搜索出来的实例总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'Instances' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Instance' => 
                  array (
                    'description' => '实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '实例信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceId' => 
                        array (
                          'title' => '实例id',
                          'description' => '全局流量管理3.0实例id。',
                          'type' => 'string',
                          'example' => 'gtm-cn-wwo3a3hbz**',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '创建时间',
                          'description' => '实例创建时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '实例创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1710467214858',
                        ),
                        'UpdateTime' => 
                        array (
                          'title' => '修改时间',
                          'description' => '实例最后一次修改时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '实例最后一次修改时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1710467214858',
                        ),
                        'VersionCode' => 
                        array (
                          'title' => '版本code',
                          'description' => '全局流量管理3.0实例版本：

- standard：标准版

- ultimate：旗舰版',
                          'type' => 'string',
                          'example' => 'ultimate',
                        ),
                        'CommodityCode' => 
                        array (
                          'title' => '商品code',
                          'description' => '商品编码：

- dns_gtm_public_cn：中国站商品编码；

- dns_gtm_public_intl：国际站商品编码',
                          'type' => 'string',
                          'example' => 'dns_gtm_public_cn',
                        ),
                        'MonthlySmsQuota' => 
                        array (
                          'title' => '短消息配额',
                          'description' => '短息配额，仅中国站支持短消息，国际站不支持短消息。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2000',
                        ),
                        'MonitorTaskQuota' => 
                        array (
                          'title' => '监控任务配额',
                          'description' => '监控探测任务配额。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                        'InstanceName' => 
                        array (
                          'title' => '调度实例名称',
                          'description' => '调度实例名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ExpireTime' => 
                        array (
                          'description' => '实例到期时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2024-09-05T16:00Z',
                        ),
                        'ExpireTimestamp' => 
                        array (
                          'title' => '到期日',
                          'description' => '实例到期时间（时间戳）。',
                          'type' => 'string',
                          'example' => '1725552000000',
                        ),
                        'ScheduleDomainName' => 
                        array (
                          'description' => '接入域名，即GTM的CNAME接入域名。',
                          'type' => 'string',
                          'example' => 'www.example.com',
                        ),
                        'MonthlySmsUsed' => 
                        array (
                          'description' => '当月短信发送量，仅中国站支持短信，国际站不支持短信。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '200',
                        ),
                        'MonthlyEmailUsed' => 
                        array (
                          'description' => '当月邮件发送量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '200',
                        ),
                        'MonthlyWebhookUsed' => 
                        array (
                          'description' => '当月 webhook 发送量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '100',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 20,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 10,\\n  \\"Instances\\": {\\n    \\"Instance\\": [\\n      {\\n        \\"InstanceId\\": \\"gtm-cn-wwo3a3hbz**\\",\\n        \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n        \\"CreateTimestamp\\": 1710467214858,\\n        \\"UpdateTime\\": \\"2024-03-15T01:46Z\\",\\n        \\"UpdateTimestamp\\": 1710467214858,\\n        \\"VersionCode\\": \\"ultimate\\",\\n        \\"CommodityCode\\": \\"dns_gtm_public_cn\\",\\n        \\"MonthlySmsQuota\\": 2000,\\n        \\"MonitorTaskQuota\\": 100,\\n        \\"InstanceName\\": \\"test\\",\\n        \\"ExpireTime\\": 0,\\n        \\"ExpireTimestamp\\": \\"1725552000000\\",\\n        \\"ScheduleDomainName\\": \\"www.example.com\\",\\n        \\"MonthlySmsUsed\\": 200,\\n        \\"MonthlyEmailUsed\\": 200,\\n        \\"MonthlyWebhookUsed\\": 100\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '搜索实例列表',
    ),
    'DescribeCloudGtmAddressPoolReference' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22
',
          ),
        ),
        2 => 
        array (
          'name' => 'AddressPoolId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '创建地址池的ID，地址池的唯一识别码。',
            'type' => 'string',
            'required' => false,
            'example' => 'pool-89528023225442**16',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '853805EA-3D47-47D5-9A1A-A45C24313ABD',
              ),
              'AddressPoolId' => 
              array (
                'title' => '地址池 ID',
                'description' => '地址池的ID，地址池的唯一识别码。',
                'type' => 'string',
                'example' => 'pool-89528023225442**16',
              ),
              'AddressPoolName' => 
              array (
                'title' => '地址池名称',
                'description' => '地址池名称。',
                'type' => 'string',
                'example' => 'app',
              ),
              'InstanceConfigs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceConfig' => 
                  array (
                    'description' => '引用地址池的实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '引用地址池的实例。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceId' => 
                        array (
                          'title' => '实例id',
                          'description' => '全局流量管理3.0实例id。',
                          'type' => 'string',
                          'example' => 'gtm-cn-jmp3qnw**03',
                        ),
                        'ConfigId' => 
                        array (
                          'title' => '实例id',
                          'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。',
                          'type' => 'string',
                          'example' => 'config-000**1',
                        ),
                        'VersionCode' => 
                        array (
                          'title' => '实例id',
                          'description' => '全局流量管理3.0实例版本：

- standard：标准版

- ultimate：旗舰版',
                          'type' => 'string',
                          'example' => 'ultimate',
                        ),
                        'InstanceName' => 
                        array (
                          'title' => '调度实例名称',
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ScheduleZoneName' => 
                        array (
                          'title' => 'zone名称',
                          'description' => 'zone名称，即GTM接入域名的父Zone。一般为GTM实例所在账号下，在云解析DNS控制台的托管域名，支持主域和子域。',
                          'type' => 'string',
                          'example' => 'example.com',
                        ),
                        'ScheduleHostname' => 
                        array (
                          'title' => '主机记录',
                          'description' => 'GTM接入域名的主机记录。',
                          'type' => 'string',
                          'example' => 'www',
                        ),
                        'ScheduleDomainName' => 
                        array (
                          'title' => '域名，主机记录+zoneNamne',
                          'description' => 'GTM接入域名，ScheduleHostname+ScheduleZoneName。',
                          'type' => 'string',
                          'example' => 'www.example.com',
                        ),
                        'ScheduleRrType' => 
                        array (
                          'description' => '调度域名的解析记录类型：

- A：IPv4地址

- AAAA：IPv6地址

- CNAME：域名',
                          'type' => 'string',
                          'example' => 'A',
                        ),
                        'Ttl' => 
                        array (
                          'description' => '全局TTL，接入域名解析到地址池中地址的TTL值，影响解析记录在运营商LocalDNS中的缓存时间，支持自定义TTL值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '30',
                        ),
                        'AddressPoolLbStrategy' => 
                        array (
                          'description' => '地址池之间的负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址池。并且每次对于所有地址池进行轮转排序；

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址池（顺序号标识地址池返回的优先级，越小优先级越高）。若顺序号较小的地址池不可用时，返回下一个序号较小的地址池；

- weight：权重，支持对每个地址池设置不同的权重值，实现解析查询按照权重比例返回地址池；

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址池，实现用户就近访问的效果；',
                          'type' => 'string',
                          'example' => 'round_robin',
                        ),
                        'SequenceLbStrategyMode' => 
                        array (
                          'description' => '地址池间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址池；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址池；',
                          'type' => 'string',
                          'example' => 'preemptive',
                        ),
                        'AvailableStatus' => 
                        array (
                          'description' => '域名实例服务可用状态：

- available：可用，域名“启用”且健康状态为“正常”，接入域名的服务可用状态为“可用”；

- unavailable：不可用，域名“禁用”或健康状态为“异常”，接入域名的服务可用状态为“不可用”；',
                          'type' => 'string',
                          'example' => 'available',
                        ),
                        'EnableStatus' => 
                        array (
                          'description' => '域名实例的启用状态：

- enable：启用状态，GTM实例智能调度策略生效；

- disable：禁用状态，GTM实例智能调度策略不可用；',
                          'type' => 'string',
                          'example' => 'enable',
                        ),
                        'HealthStatus' => 
                        array (
                          'description' => '域名实例健康状态：

- ok：正常，接入域名引用的所有地址池全部可用。

- ok_alert：警告，接入域名引用的所有地址池部分不可用。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，接入域名引用的所有地址池全部不可用。此时，使用实例所引用的顺序号较小的非空地址池中的地址进行兜底解析，尽可能帮助客户端获得解析结果。',
                          'type' => 'string',
                          'example' => 'ok',
                        ),
                        'Remark' => 
                        array (
                          'description' => '备注。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"853805EA-3D47-47D5-9A1A-A45C24313ABD\\",\\n  \\"AddressPoolId\\": \\"pool-89528023225442**16\\",\\n  \\"AddressPoolName\\": \\"app\\",\\n  \\"InstanceConfigs\\": {\\n    \\"InstanceConfig\\": [\\n      {\\n        \\"InstanceId\\": \\"gtm-cn-jmp3qnw**03\\",\\n        \\"ConfigId\\": \\"config-000**1\\",\\n        \\"VersionCode\\": \\"ultimate\\",\\n        \\"InstanceName\\": \\"test\\",\\n        \\"ScheduleZoneName\\": \\"example.com\\",\\n        \\"ScheduleHostname\\": \\"www\\",\\n        \\"ScheduleDomainName\\": \\"www.example.com\\",\\n        \\"ScheduleRrType\\": \\"A\\",\\n        \\"Ttl\\": 30,\\n        \\"AddressPoolLbStrategy\\": \\"round_robin\\",\\n        \\"SequenceLbStrategyMode\\": \\"preemptive\\",\\n        \\"AvailableStatus\\": \\"available\\",\\n        \\"EnableStatus\\": \\"enable\\",\\n        \\"HealthStatus\\": \\"ok\\",\\n        \\"Remark\\": \\"test\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取地址池被实例引用的信息',
    ),
    'SearchCloudGtmInstanceConfigs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。该参数值可自定义，但是要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为1，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度实例id',
            'description' => '调度实例id。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        5 => 
        array (
          'name' => 'ScheduleZoneName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'zone名称',
            'description' => 'zone名称，即GTM接入域名的父Zone。一般为GTM实例所在账号下，在云解析DNS控制台的托管域名，支持主域和子域。',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
        6 => 
        array (
          'name' => 'ScheduleDomainName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'zone名称',
            'description' => 'GTM接入域名，ScheduleHostname+ScheduleZoneName。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.example.com',
          ),
        ),
        7 => 
        array (
          'name' => 'EnableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '启用状态',
            'description' => '域名实例的启用状态：

- enable：启用状态，GTM实例智能调度策略生效；

- disable：禁用状态，GTM实例智能调度策略不可用；',
            'type' => 'string',
            'required' => false,
            'example' => 'enable',
          ),
        ),
        8 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名实例的备注。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        9 => 
        array (
          'name' => 'HealthStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名实例健康状态：

- ok：正常，接入域名引用的所有地址池全部可用。

- ok_alert：警告，接入域名引用的所有地址池部分不可用。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，接入域名引用的所有地址池全部不可用。此时，使用实例所引用的顺序号较小的非空地址池中的地址进行兜底解析，尽可能帮助客户端获得解析结果。',
            'type' => 'string',
            'required' => false,
            'example' => 'ok',
          ),
        ),
        10 => 
        array (
          'name' => 'AvailableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名实例服务可用状态：

- available：可用，域名“启用”且健康状态为“正常”，接入域名的服务可用状态为“可用”；

- unavailable：不可用，域名“禁用”或健康状态为“异常”，接入域名的服务可用状态为“不可用”；',
            'type' => 'string',
            'required' => false,
            'example' => 'available',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6AEC7A64-3CB1-4C49-8B35-0B901F1E26BF',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为1，默认为1。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '实例配置列表总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '15',
              ),
              'InstanceConfigs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceConfig' => 
                  array (
                    'description' => '实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '实例信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceId' => 
                        array (
                          'title' => '实例id',
                          'description' => '全局流量管理3.0实例id。',
                          'type' => 'string',
                          'example' => 'gtm-cn-x0r38e0**03',
                        ),
                        'ConfigId' => 
                        array (
                          'title' => '实例id',
                          'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。',
                          'type' => 'string',
                          'example' => 'Config-000**11
',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '创建时间',
                          'description' => '域名实例创建时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '域名实例创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'UpdateTime' => 
                        array (
                          'title' => '修改时间',
                          'description' => '域名实例最后一次修改时间。',
                          'type' => 'string',
                          'example' => '2024-03-15T01:46Z',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '域名实例最后一次修改时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357
',
                        ),
                        'VersionCode' => 
                        array (
                          'title' => '版本code',
                          'description' => '全局流量管理3.0实例版本：

- standard：标准版

- ultimate：旗舰版',
                          'type' => 'string',
                          'example' => 'ultimate',
                        ),
                        'CommodityCode' => 
                        array (
                          'title' => '商品code',
                          'description' => '商品编码：

- dns_gtm_public_cn：中国站商品编码；

- dns_gtm_public_intl：国际站商品编码；',
                          'type' => 'string',
                          'example' => 'dns_gtm_public_cn',
                        ),
                        'ScheduleZoneMode' => 
                        array (
                          'title' => '接入zone分配模式',
                          'description' => '接入域名分配模式：

- custom：自定义接入域名，用户自定义主机记录，并关联GTM实例所在账号下的Zone，生成接入域名

- sys_assign：系统默认分配接入域名，本功能已经不支持，请勿选择此模式',
                          'type' => 'string',
                          'example' => 'custom',
                        ),
                        'ScheduleZoneName' => 
                        array (
                          'title' => 'zone名称',
                          'description' => 'zone名称，即GTM接入域名的父Zone。一般为GTM实例所在账号下，在云解析DNS控制台的托管域名，支持主域和子域。',
                          'type' => 'string',
                          'example' => 'example.com',
                        ),
                        'ScheduleHostname' => 
                        array (
                          'title' => '主机记录',
                          'description' => 'GTM接入域名的主机记录。',
                          'type' => 'string',
                          'example' => 'www',
                        ),
                        'ScheduleDomainName' => 
                        array (
                          'title' => '域名，主机记录+zoneNamne',
                          'description' => 'GTM接入域名，ScheduleHostname+ScheduleZoneName。',
                          'type' => 'string',
                          'example' => 'www.example.com',
                        ),
                        'ScheduleRrType' => 
                        array (
                          'title' => '调度解析记录类型',
                          'description' => '调度域名的解析记录类型：

- A：IPv4地址

- AAAA：IPv6地址

- CNAME：域名',
                          'type' => 'string',
                          'example' => 'A',
                        ),
                        'Ttl' => 
                        array (
                          'title' => '调度调度实例的TTL',
                          'description' => '全局TTL（单位：秒），接入域名解析到地址池中地址的TTL值，影响解析记录在运营商LocalDNS中的缓存时间，支持自定义TTL值。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '60',
                        ),
                        'AddressPoolLbStrategy' => 
                        array (
                          'title' => '地址池的负载均衡策略',
                          'description' => '地址池之间的负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址池。并且每次对于所有地址池进行轮转排序；

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址池（顺序号标识地址池返回的优先级，越小优先级越高）。若顺序号较小的地址池不可用时，返回下一个序号较小的地址池；

- weight：权重，支持对每个地址池设置不同的权重值，实现解析查询按照权重比例返回地址池；

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址池，实现用户就近访问的效果；',
                          'type' => 'string',
                          'example' => 'round_robin',
                        ),
                        'SequenceLbStrategyMode' => 
                        array (
                          'title' => '顺序负载策略模式（抢占式、非抢占式）',
                          'description' => '地址池间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址池；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址池；',
                          'type' => 'string',
                          'example' => 'preemptive',
                        ),
                        'AvailableStatus' => 
                        array (
                          'description' => '域名实例服务可用状态：

- available：可用，域名“启用”且健康状态为“正常”，接入域名的服务可用状态为“可用”；

- unavailable：不可用，域名“禁用”或健康状态为“异常”，接入域名的服务可用状态为“不可用”；',
                          'type' => 'string',
                          'example' => 'available',
                        ),
                        'EnableStatus' => 
                        array (
                          'title' => '启用状态',
                          'description' => '域名实例的启用状态：

- enable：启用状态，GTM实例智能调度策略生效；

- disable：禁用状态，GTM实例智能调度策略不可用；',
                          'type' => 'string',
                          'example' => 'enable',
                        ),
                        'HealthStatus' => 
                        array (
                          'title' => '监控状态',
                          'description' => '域名实例健康状态：

- ok：正常，接入域名引用的所有地址池全部可用。

- ok_alert：警告，接入域名引用的所有地址池部分不可用。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，接入域名引用的所有地址池全部不可用。此时，使用实例所引用的顺序号较小的非空地址池中的地址进行兜底解析，尽可能帮助客户端获得解析结果。',
                          'type' => 'string',
                          'example' => 'ok',
                        ),
                        'Remark' => 
                        array (
                          'title' => '备注',
                          'description' => '域名实例的备注。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'AddressPools' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AddressPool' => 
                            array (
                              'description' => '地址池列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '地址池信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'CreateTime' => 
                                  array (
                                    'description' => '地址池创建时间。',
                                    'type' => 'string',
                                    'example' => '2024-03-15T01:46Z',
                                  ),
                                  'CreateTimestamp' => 
                                  array (
                                    'description' => '地址池创建时间（时间戳）。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1527690629357',
                                  ),
                                  'UpdateTime' => 
                                  array (
                                    'description' => '地址池最后一次修改时间。',
                                    'type' => 'string',
                                    'example' => '2024-03-15T01:46Z',
                                  ),
                                  'UpdateTimestamp' => 
                                  array (
                                    'description' => '更新时间（时间戳）。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1527690629357',
                                  ),
                                  'AddressPoolId' => 
                                  array (
                                    'title' => '地址池Id',
                                    'description' => '地址池ID，唯一标识地址池。',
                                    'type' => 'string',
                                    'example' => 'pool-89564504435014**60',
                                  ),
                                  'WeightValue' => 
                                  array (
                                    'title' => '权重值',
                                    'description' => '权重值（1-100之间的整数，包括1和100），支持对每个地址池设置不同的权重值，实现解析查询按照权重比例返回地址池。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'SerialNumber' => 
                                  array (
                                    'title' => '序号',
                                    'description' => '顺序号，对于任何来源的解析请求，返回顺序号较小的地址池（顺序号标识地址池返回的优先级，越小优先级越高）。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'RequestSource' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'RequestSource' => 
                                      array (
                                        'description' => '解析请求来源列表。',
                                        'type' => 'array',
                                        'items' => 
                                        array (
                                          'description' => '请求来源，是指解析请求的来源，GTM是根据终端所用LocalDNS的出口IP进行调度。若LocalDNS支持ECS (edns-client-subnet)，也可以根据访问终端的IP进行智能调度。',
                                          'type' => 'string',
                                          'example' => '["default"]',
                                        ),
                                      ),
                                    ),
                                  ),
                                  'AddressPoolName' => 
                                  array (
                                    'title' => '地址池名称',
                                    'description' => '地址池名称。',
                                    'type' => 'string',
                                    'example' => 'AddressPool-1',
                                  ),
                                  'AddressPoolType' => 
                                  array (
                                    'title' => '地址池类型ipv4、ipv6、domain',
                                    'description' => '地址池类型：

- IPv4

- IPv6

- domain',
                                    'type' => 'string',
                                    'example' => 'IPv4',
                                  ),
                                  'AddressLbStrategy' => 
                                  array (
                                    'title' => '地址负载策略',
                                    'description' => '地址池中地址间负载均衡策略：

- round_robin：轮询，对于任何来源的解析请求，返回所有地址。并且每次对于所有地址进行轮转排序。

- sequence：顺序，对于任何来源的解析请求，返回顺序号较小的地址（顺序号标识地址返回的优先级，越小优先级越高）。若顺序号较小的地址不可用时，返回下一个序号较小的地址。

- weight：权重，支持对每个地址设置不同的权重值，实现解析查询按照权重比例返回地址。

- source_nearest：来源就近，即智能解析功能，GTM可以根据不同的解析请求来源返回不同的地址，实现用户就近访问的效果。',
                                    'type' => 'string',
                                    'example' => 'round_robin',
                                  ),
                                  'SequenceLbStrategyMode' => 
                                  array (
                                    'title' => '顺序负载策略模式（抢占式、非抢占式）',
                                    'description' => '地址间负载均衡策略为顺序模式时，前序资源异常恢复服务模式：

- preemptive：抢占模式，前序资源恢复，优先使用顺序号较小的地址；

- non_preemptive：非抢占模式，前序资源恢复，仍然使用当前地址；',
                                    'type' => 'string',
                                    'example' => 'preemptive',
                                  ),
                                  'EnableStatus' => 
                                  array (
                                    'title' => '启用状态',
                                    'description' => '地址池启用状态：

- enable：启用状态

- disable：禁用状态',
                                    'type' => 'string',
                                    'example' => 'enable',
                                  ),
                                  'HealthJudgement' => 
                                  array (
                                    'title' => '健康判定',
                                    'description' => '地址池健康状态判定条件：

- any_ok：地址池内至少1个地址是可用地址；

- p30_ok：地址池内至少30%地址是可用地址；

- p50_ok：地址池内至少50%地址是可用地址；

- p70_ok：地址池内至少70%地址是可用地址；

- all_ok：地址池内地址全部可用；',
                                    'type' => 'string',
                                    'example' => 'any_ok',
                                  ),
                                  'HealthStatus' => 
                                  array (
                                    'title' => '健康状态',
                                    'description' => '地址池健康状态：

- ok：正常，地址池引用的所有地址全部可用。

- ok_alert：警告，地址池引用的地址部分不可用，但是地址池状态判定为正常。警告状态下，可用的地址池正常解析，不可用的地址池停止解析

- exceptional：异常，地址池引用的地址部分或全部不可用，地址池状态判定为异常。',
                                    'type' => 'string',
                                    'example' => 'ok',
                                  ),
                                  'AvailableStatus' => 
                                  array (
                                    'title' => '可用性状态',
                                    'description' => '地址池可用性状态：

- available：可用

- unavailable：不可用',
                                    'type' => 'string',
                                    'example' => ' available',
                                  ),
                                  'SeqNonPreemptiveSchedule' => 
                                  array (
                                    'description' => '是否是顺序（非抢占）模式调度对象，针对于融合云纳管场景：

- true：是

- false：不是',
                                    'type' => 'boolean',
                                    'example' => 'false',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6AEC7A64-3CB1-4C49-8B35-0B901F1E26BF\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 20,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 15,\\n  \\"InstanceConfigs\\": {\\n    \\"InstanceConfig\\": [\\n      {\\n        \\"InstanceId\\": \\"gtm-cn-x0r38e0**03\\",\\n        \\"ConfigId\\": \\"Config-000**11\\\\n\\",\\n        \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n        \\"CreateTimestamp\\": 1527690629357,\\n        \\"UpdateTime\\": \\"2024-03-15T01:46Z\\",\\n        \\"UpdateTimestamp\\": 1527690629357,\\n        \\"VersionCode\\": \\"ultimate\\",\\n        \\"CommodityCode\\": \\"dns_gtm_public_cn\\",\\n        \\"ScheduleZoneMode\\": \\"custom\\",\\n        \\"ScheduleZoneName\\": \\"example.com\\",\\n        \\"ScheduleHostname\\": \\"www\\",\\n        \\"ScheduleDomainName\\": \\"www.example.com\\",\\n        \\"ScheduleRrType\\": \\"A\\",\\n        \\"Ttl\\": 60,\\n        \\"AddressPoolLbStrategy\\": \\"round_robin\\",\\n        \\"SequenceLbStrategyMode\\": \\"preemptive\\",\\n        \\"AvailableStatus\\": \\"available\\",\\n        \\"EnableStatus\\": \\"enable\\",\\n        \\"HealthStatus\\": \\"ok\\",\\n        \\"Remark\\": \\"test\\",\\n        \\"AddressPools\\": {\\n          \\"AddressPool\\": [\\n            {\\n              \\"CreateTime\\": \\"2024-03-15T01:46Z\\",\\n              \\"CreateTimestamp\\": 1527690629357,\\n              \\"UpdateTime\\": \\"2024-03-15T01:46Z\\",\\n              \\"UpdateTimestamp\\": 1527690629357,\\n              \\"AddressPoolId\\": \\"pool-89564504435014**60\\",\\n              \\"WeightValue\\": 1,\\n              \\"SerialNumber\\": 1,\\n              \\"RequestSource\\": {\\n                \\"RequestSource\\": [\\n                  \\"[\\\\\\"default\\\\\\"]\\"\\n                ]\\n              },\\n              \\"AddressPoolName\\": \\"AddressPool-1\\",\\n              \\"AddressPoolType\\": \\"IPv4\\",\\n              \\"AddressLbStrategy\\": \\"round_robin\\",\\n              \\"SequenceLbStrategyMode\\": \\"preemptive\\",\\n              \\"EnableStatus\\": \\"enable\\",\\n              \\"HealthJudgement\\": \\"any_ok\\",\\n              \\"HealthStatus\\": \\"ok\\",\\n              \\"AvailableStatus\\": \\" available\\",\\n              \\"SeqNonPreemptiveSchedule\\": false\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '搜索实例配置列表',
    ),
    'SearchCloudGtmAddresses' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'Names',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '地址名称，一般为方便用户区分的名称。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '地址名称搜索条件，支持同时输入多个关键词进行查询。',
              'type' => 'string',
              'required' => false,
              'example' => '["address_1", "test"]',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        2 => 
        array (
          'name' => 'NameSearchCondition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按地址名称查询时的搜索逻辑（选择地址名称查询时必选参数）：

- and：展示输入的搜索条件全部命中的查询结果；

- or：展示输入的搜索条件部分或全部命中的查询结果；',
            'type' => 'string',
            'required' => false,
            'example' => 'or',
          ),
        ),
        3 => 
        array (
          'name' => 'AvailableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按照地址可用状态条件精确搜索：

- available：可用

- unavailable：不可用',
            'type' => 'string',
            'required' => false,
            'example' => 'available',
          ),
        ),
        4 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址类型',
            'description' => '按照地址类型条件精确搜索：

- IPv4

- IPv6

- domain',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        5 => 
        array (
          'name' => 'Address',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址',
            'description' => '按照服务地址条件精确查询，支持IP地址或者域名。',
            'type' => 'string',
            'required' => false,
            'example' => '223.5.XX.XX',
          ),
        ),
        6 => 
        array (
          'name' => 'MonitorTemplateName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康探测模板名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'Ping-IPv4',
          ),
        ),
        7 => 
        array (
          'name' => 'EnableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '启用状态 enable： 可用， disable：不可用',
            'description' => '按照地址启用状态进行精确查询：

- enable：启用状态

- disable：禁用状态',
            'type' => 'string',
            'required' => false,
            'example' => 'enable',
          ),
        ),
        8 => 
        array (
          'name' => 'HealthStatus',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址探测结果： ok, ok_alert, ok_no_monitor, exceptional',
            'description' => '按照地址健康状态进行精确查询：

- ok：地址引用的健康探测模板探测任务全部正常；

- ok_alert：地址引用的健康探测模板探测任务部分异常，地址判定为正常状态；

- ok_no_monitor：地址没有引用任何健康探测模板；

- exceptional：地址引用的健康探测模板探测任务部分或全部异常，但地址判定为异常状态；',
            'type' => 'string',
            'required' => false,
            'example' => 'ok',
          ),
        ),
        9 => 
        array (
          'name' => 'Remarks',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '地址的备注。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '地址备注搜索条件，支持同时输入多个关键词进行查询。',
              'type' => 'string',
              'required' => false,
              'example' => '["", "test"]',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        10 => 
        array (
          'name' => 'RemarkSearchCondition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '按地址备注查询时的搜索逻辑（选择地址备注查询时必选参数）：

and：展示输入的搜索条件全部命中的查询结果；

or：展示输入的搜索条件部分或全部命中的查询结果；',
            'type' => 'string',
            'required' => false,
            'example' => 'or',
          ),
        ),
        11 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为1，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        12 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '20',
          ),
        ),
        13 => 
        array (
          'name' => 'AddressId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地址的ID，地址唯一标识码。',
            'type' => 'string',
            'required' => false,
            'example' => 'addr-89518218114368**92',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '符合查询条件的地址总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '15',
              ),
              'Addresses' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Address' => 
                  array (
                    'description' => '地址列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '地址列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'AddressId' => 
                        array (
                          'title' => '地址 ID',
                          'description' => '地址的ID，地址唯一标识码。',
                          'type' => 'string',
                          'example' => 'addr-89518218114368**92',
                        ),
                        'CreateTime' => 
                        array (
                          'title' => '创建时间',
                          'description' => '地址的创建时间。',
                          'type' => 'string',
                          'example' => '2024-03-23T13:09Z',
                        ),
                        'CreateTimestamp' => 
                        array (
                          'description' => '地址的创建时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'UpdateTime' => 
                        array (
                          'title' => '修改时间',
                          'description' => '地址的最后一次的修改时间。',
                          'type' => 'string',
                          'example' => '2024-03-29T13:20Z',
                        ),
                        'UpdateTimestamp' => 
                        array (
                          'description' => '地址的最后一次的修改时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1527690629357',
                        ),
                        'Name' => 
                        array (
                          'title' => '地址名称',
                          'description' => '地址名称。',
                          'type' => 'string',
                          'example' => 'Address-1',
                        ),
                        'Type' => 
                        array (
                          'title' => '地址类型',
                          'description' => '地址类型：

- IPv4：ipv4地址
- IPv6：ipv6地址
- domain：域名',
                          'type' => 'string',
                          'example' => 'IPv4',
                        ),
                        'Address' => 
                        array (
                          'title' => '地址',
                          'description' => 'IP地址或者域名。',
                          'type' => 'string',
                          'example' => '223.5.XX.XX',
                        ),
                        'AttributeInfo' => 
                        array (
                          'title' => '地址归属信息',
                          'description' => '地址归属信息，当前版本不支持此参数。',
                          'type' => 'string',
                          'example' => '当前版本不返回此参数。',
                        ),
                        'Remark' => 
                        array (
                          'title' => '备注',
                          'description' => '备注。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'EnableStatus' => 
                        array (
                          'title' => '启用状态 enable： 可用， disable：不可用',
                          'description' => '地址当前启用状态：

- enable：启用状态

- disable：禁用状态',
                          'type' => 'string',
                          'example' => 'enable',
                        ),
                        'AvailableMode' => 
                        array (
                          'title' => '可用状态设置模式',
                          'description' => '地址探测异常切换方式：

- auto：自动模式（根据健康检查探测结果确定，探测异常停止解析，探测正常恢复解析）

- manual：手动模式（异常状态下停止解析，健康检查正常也不会恢复解析；正常状态下恢复解析，健康检查异常也只是告警，但不会停止解析。）',
                          'type' => 'string',
                          'example' => 'auto',
                        ),
                        'ManualAvailableStatus' => 
                        array (
                          'title' => '手动设置的可用状态',
                          'description' => '当地址探测异常切换模式为manual时，地址设置的可用状态：

- available：正常，此状态下该地址正常解析，健康检查异常也只是告警，但不会停止解析；

- unavailable：异常，此状态下停止解析，健康检查正常也不会恢复解析；',
                          'type' => 'string',
                          'example' => 'available',
                        ),
                        'AvailableStatus' => 
                        array (
                          'title' => '地址可用状态',
                          'description' => '当地址探测异常切换模式为manual时，地址设置的可用状态：

- available：正常，此状态下该地址正常解析，健康检查异常也只是告警，但不会停止解析；

- unavailable：异常，此状态下停止解析，健康检查正常也不会恢复解析；',
                          'type' => 'string',
                          'example' => 'available',
                        ),
                        'HealthStatus' => 
                        array (
                          'title' => '地址的健康状态：',
                          'description' => '地址健康检查探测结果：

- ok：地址引用的健康探测模板探测任务全部正常；

- ok_alert：地址引用的健康探测模板探测任务部分异常，地址判定为正常状态；

- ok_no_monitor：地址没有引用任何健康探测模板；

- exceptional：地址引用的健康探测模板探测任务部分或全部异常，但地址判定为异常状态；',
                          'type' => 'string',
                          'example' => 'ok',
                        ),
                        'HealthJudgement' => 
                        array (
                          'title' => '地址健康状态判定为ok 的方式：',
                          'description' => '地址健康状态判定条件：

- any_ok：所有探测模板至少一个探测正常

- p30_ok：所有探测模板至少30%探测正常

- p50_ok：所有探测模板至少50%探测正常

- p70_ok：所有探测模板至少70%探测正常

- all_ok：所有探测模板全部探测正常',
                          'type' => 'string',
                          'example' => 'p50_ok',
                        ),
                        'HealthTasks' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'HealthTask' => 
                            array (
                              'title' => '健康探测任务列表',
                              'description' => '健康探测任务列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '地址引用的健康探测任务信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Port' => 
                                  array (
                                    'description' => '健康检查探测的目标地址服务端口，当健康检查选择Ping协议时，不支持服务端口的配置。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '80',
                                  ),
                                  'TemplateId' => 
                                  array (
                                    'description' => '地址关联的健康探测模板ID。',
                                    'type' => 'string',
                                    'example' => 'mtp-895180524251002880',
                                  ),
                                  'TemplateName' => 
                                  array (
                                    'description' => '健康探测模板名称。',
                                    'type' => 'string',
                                    'example' => 'IPv4-Ping',
                                  ),
                                  'MonitorStatus' => 
                                  array (
                                    'description' => '健康探测模板探测任务状态：

- ok：正常

- alert：告警

- no_data：无数据，一般是健康探测任务刚创建，探测任务数据暂未采集到',
                                    'type' => 'string',
                                    'example' => 'ok',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 20,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 15,\\n  \\"Addresses\\": {\\n    \\"Address\\": [\\n      {\\n        \\"AddressId\\": \\"addr-89518218114368**92\\",\\n        \\"CreateTime\\": \\"2024-03-23T13:09Z\\",\\n        \\"CreateTimestamp\\": 1527690629357,\\n        \\"UpdateTime\\": \\"2024-03-29T13:20Z\\",\\n        \\"UpdateTimestamp\\": 1527690629357,\\n        \\"Name\\": \\"Address-1\\",\\n        \\"Type\\": \\"IPv4\\",\\n        \\"Address\\": \\"223.5.XX.XX\\",\\n        \\"AttributeInfo\\": \\"当前版本不返回此参数。\\",\\n        \\"Remark\\": \\"test\\",\\n        \\"EnableStatus\\": \\"enable\\",\\n        \\"AvailableMode\\": \\"auto\\",\\n        \\"ManualAvailableStatus\\": \\"available\\",\\n        \\"AvailableStatus\\": \\"available\\",\\n        \\"HealthStatus\\": \\"ok\\",\\n        \\"HealthJudgement\\": \\"p50_ok\\",\\n        \\"HealthTasks\\": {\\n          \\"HealthTask\\": [\\n            {\\n              \\"Port\\": 80,\\n              \\"TemplateId\\": \\"mtp-895180524251002880\\",\\n              \\"TemplateName\\": \\"IPv4-Ping\\",\\n              \\"MonitorStatus\\": \\"ok\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '搜索地址列表',
    ),
    'DescribeCloudGtmSystemLines' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SystemLines' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SystemLine' => 
                  array (
                    'description' => '系统线路列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '系统线路信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Code' => 
                        array (
                          'description' => '线路code。',
                          'type' => 'string',
                          'example' => 'aliyun_r_ap-south-1',
                        ),
                        'ParentCode' => 
                        array (
                          'description' => '线路父级code。',
                          'type' => 'string',
                          'example' => 'String	aliyun',
                        ),
                        'IsAvailable' => 
                        array (
                          'description' => '线路是否可以作为解析请求来源被选中：

- true：可被选中；

- false：不可被选中；',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'DisplayName' => 
                        array (
                          'description' => '线路展示名称。',
                          'type' => 'string',
                          'example' => '华北_河北',
                        ),
                        'Name' => 
                        array (
                          'description' => '线路名称。',
                          'type' => 'string',
                          'example' => '河北',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA',
              ),
              'SystemLinesTree' => 
              array (
                'description' => '系统线路树状结构数据，线路很多，此处不一一列举。',
                'type' => 'string',
                'example' => '"SystemLinesTree":"[{\\"displayName\\":\\"默认\\",\\"id\\":\\"default\\",\\"isAvailable\\":true,\\"name\\":\\"默认\\",\\"parentId\\":\\"\\"}',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"SystemLines\\": {\\n    \\"SystemLine\\": [\\n      {\\n        \\"Code\\": \\"aliyun_r_ap-south-1\\",\\n        \\"ParentCode\\": \\"String\\\\taliyun\\",\\n        \\"IsAvailable\\": true,\\n        \\"DisplayName\\": \\"华北_河北\\",\\n        \\"Name\\": \\"河北\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA\\",\\n  \\"SystemLinesTree\\": \\"\\\\\\"SystemLinesTree\\\\\\":\\\\\\"[{\\\\\\\\\\\\\\"displayName\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"默认\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"isAvailable\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"默认\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"parentId\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\"}\\"\\n}","type":"json"}]',
      'title' => '查询GTM支持的系统线路',
    ),
    'ListCloudGtmAlertLogs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回信息的语言类型：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
          ),
        ),
        1 => 
        array (
          'name' => 'ActionType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址名称',
            'description' => '告警类型：

- ALERT：告警

- RESUME：恢复',
            'type' => 'string',
            'required' => false,
            'example' => 'ALERT',
          ),
        ),
        2 => 
        array (
          'name' => 'EntityType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址类型',
            'description' => '告警对象：

- GTM_ADDRESS：地址

- GTM_ADDRESS_POOL：地址池

- GTM_INSTANCE：实例

- GTM_MONITOR_TEMPLATE：健康探测模板',
            'type' => 'string',
            'required' => false,
            'example' => 'GTM_ADDRESS',
          ),
        ),
        3 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址',
            'description' => '搜索关键词，一般为地址 ID、地址池 ID、域名信息等。',
            'type' => 'string',
            'required' => false,
            'example' => 'pool-895280232254422016',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTimestamp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间（时间戳）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1611328826977',
          ),
        ),
        5 => 
        array (
          'name' => 'EndTimestamp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的结束时间（时间戳）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1711328826977',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数，起始值为**1**，默认为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为1，默认为1。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值100，默认为20。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TotalPages' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '告警日志总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '15',
              ),
              'Logs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Log' => 
                  array (
                    'description' => '告警日志列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '告警日志信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ActionType' => 
                        array (
                          'title' => '地址 ID',
                          'description' => '告警类型：

- ALERT：告警

- RESUME：恢复',
                          'type' => 'string',
                          'example' => 'ALERT',
                        ),
                        'EntityType' => 
                        array (
                          'title' => '创建时间',
                          'description' => '告警对象：

- GTM_ADDRESS：地址

- GTM_ADDRESS_POOL：地址池

- GTM_INSTANCE：实例

- GTM_MONITOR_TEMPLATE：健康探测模板',
                          'type' => 'string',
                          'example' => 'GTM_ADDRESS',
                        ),
                        'Content' => 
                        array (
                          'title' => '修改时间',
                          'description' => '告警内容。',
                          'type' => 'string',
                          'example' => '"Pool name：华东\\nType：IPv4\\nReason: Normal health determination\\nNumber of addresses in the pool : 2\\nAbnormal address: --\\nDetermination conditions : Any address in the addresspool is available address\\nAffected domain names: www.cloud-example.com"',
                        ),
                        'Timestamp' => 
                        array (
                          'description' => '告警日志时间（时间戳）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1711328826977',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 20,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 15,\\n  \\"Logs\\": {\\n    \\"Log\\": [\\n      {\\n        \\"ActionType\\": \\"ALERT\\",\\n        \\"EntityType\\": \\"GTM_ADDRESS\\",\\n        \\"Content\\": \\"\\\\\\"Pool name：华东\\\\\\\\nType：IPv4\\\\\\\\nReason: Normal health determination\\\\\\\\nNumber of addresses in the pool : 2\\\\\\\\nAbnormal address: --\\\\\\\\nDetermination conditions : Any address in the addresspool is available address\\\\\\\\nAffected domain names: www.cloud-example.com\\\\\\"\\",\\n        \\"Timestamp\\": 1711328826977\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取告警日志列表',
    ),
    'DescribeCloudGtmInstanceConfigAlert' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值： 
          
- **zh-CN**：中文。

- **en-US**：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用于保证请求的幂等性。由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符，且该参数值中不能包含非ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局流量管理3.0实例id。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-wwo3a3hbz**',
          ),
        ),
        3 => 
        array (
          'name' => 'ConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'Config-000**11',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '0F32959D-417B-4D66-8463-68606605E3E2',
              ),
              'InstanceId' => 
              array (
                'title' => '实例id',
                'description' => '全局流量管理3.0实例id。',
                'type' => 'string',
                'example' => 'gtm-cn-wwo3a3hbz**',
              ),
              'ConfigId' => 
              array (
                'title' => '实例id',
                'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。',
                'type' => 'string',
                'example' => 'Config-000**11
',
              ),
              'AlertMode' => 
              array (
                'title' => '备注',
                'description' => '实例告警配置模式：

- global：继承全局报警配置，即实例采用全局告警配置

- instance_config：自定义报警配置',
                'type' => 'string',
                'example' => 'global',
              ),
              'AlertGroup' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AlertGroup' => 
                  array (
                    'description' => '告警通知组列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '告警通知组。',
                      'type' => 'string',
                      'example' => '[\\"云账号报警联系人\\"]',
                    ),
                  ),
                ),
              ),
              'AlertConfig' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AlertConfig' => 
                  array (
                    'description' => '报警配置列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '报警规则配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'NoticeType' => 
                        array (
                          'description' => '报警事件类型：

- addr_alert：地址不可用

- addr_resume：地址恢复可用

- addr_pool_unavailable：地址池不可用

- addr_pool_available：地址池恢复可用',
                          'type' => 'string',
                          'example' => 'addr_alert',
                        ),
                        'SmsNotice' => 
                        array (
                          'description' => '是否配置短信报警通知：

- true：已配置，当报警事情发生时，会发送短信通知

- false：未配置

仅中国站支持短信通知，国际站不支持短信通知。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'EmailNotice' => 
                        array (
                          'description' => '是否配置邮件报警通知：

- true：已配置，当报警事情发生时，会发送邮件通知

- false：未配置',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'DingtalkNotice' => 
                        array (
                          'description' => '是否配置钉钉报警通知：

- true：已配置，当报警事情发生时，会发送钉钉通知

- false：未配置',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0F32959D-417B-4D66-8463-68606605E3E2\\",\\n  \\"InstanceId\\": \\"gtm-cn-wwo3a3hbz**\\",\\n  \\"ConfigId\\": \\"Config-000**11\\\\n\\",\\n  \\"AlertMode\\": \\"global\\",\\n  \\"AlertGroup\\": {\\n    \\"AlertGroup\\": [\\n      \\"[\\\\\\\\\\\\\\"云账号报警联系人\\\\\\\\\\\\\\"]\\"\\n    ]\\n  },\\n  \\"AlertConfig\\": {\\n    \\"AlertConfig\\": [\\n      {\\n        \\"NoticeType\\": \\"addr_alert\\",\\n        \\"SmsNotice\\": true,\\n        \\"EmailNotice\\": true,\\n        \\"DingtalkNotice\\": true\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取实例配置的告警配置',
    ),
    'UpdateCloudGtmGlobalAlert' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。该参数值可自定义，但是要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22
',
          ),
        ),
        2 => 
        array (
          'name' => 'AlertGroup',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '告警通知组列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '告警通知组信息，读取云监控产品下的告警通知组配置。',
              'type' => 'string',
              'required' => false,
              'example' => '[\\"云账号报警联系人\\"]',
            ),
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'AlertConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '报警配置列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警配置。',
              'type' => 'object',
              'properties' => 
              array (
                'NoticeType' => 
                array (
                  'description' => '报警事件类型：

- addr_alert：地址不可用

- addr_resume：地址恢复可用

- addr_pool_unavailable：地址池不可用

- addr_pool_available：地址池恢复可用',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'addr_alert',
                ),
                'SmsNotice' => 
                array (
                  'description' => '是否配置短信报警通知：

- true：已配置，当报警事情发生时，会发送短信通知
- false｜null：未配置

仅中国站支持短信通知，国际站不支持短信通知。',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
                'EmailNotice' => 
                array (
                  'description' => '是否配置邮件报警通知：

- true：已配置，当报警事情发生时，会发送邮件通知

- false｜null：未配置',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
                'DingtalkNotice' => 
                array (
                  'description' => '是否配置钉钉报警通知：

- true：已配置，当报警事情发生时，会发送钉钉通知
- false：未配置',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'false',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-13E5A5044195',
              ),
              'Success' => 
              array (
                'description' => '本次修改全局告警配置操作是否成功：
- true：成功
- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-13E5A5044195\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '修改全局告警配置',
    ),
    'UpdateCloudGtmMonitorTemplateRemark' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '地址 ID',
            'description' => '健康探测模板ID，唯一标识健康探测模板。',
            'type' => 'string',
            'required' => true,
            'example' => 'mtp-89518052455928**00',
          ),
        ),
        3 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '备注',
            'description' => '填写更新后的备注，传空值则删除备注。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'Success' => 
              array (
                'description' => '修改健康探测模板备注操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '修改健康探测模板备注',
    ),
    'DescribeCloudGtmGlobalAlert' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回信息的语言类型：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => 'B57C121B-A45F-44D8-A9B2-13E5A5044195',
              ),
              'AlertGroup' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AlertGroup' => 
                  array (
                    'description' => '告警通知组列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '告警通知组。',
                      'type' => 'string',
                      'example' => '[\\"云账号报警联系人\\"]',
                    ),
                  ),
                ),
              ),
              'AlertConfig' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AlertConfig' => 
                  array (
                    'description' => '报警配置列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '报警规则配置信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'NoticeType' => 
                        array (
                          'description' => '报警事件类型：

- addr_alert：地址不可用

- addr_resume：地址恢复可用

- addr_pool_unavailable：地址池不可用

- addr_pool_available：地址池恢复可用',
                          'type' => 'string',
                          'example' => 'addr_alert',
                        ),
                        'SmsNotice' => 
                        array (
                          'description' => '是否配置短信报警通知：

- true：已配置，当报警事情发生时，会发送短信通知

- false：未配置

仅中国站支持短信通知，国际站不支持短信通知。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'EmailNotice' => 
                        array (
                          'description' => '是否配置邮件报警通知：

- true：已配置，当报警事情发生时，会发送邮件通知

- false：未配置',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'DingtalkNotice' => 
                        array (
                          'description' => '是否配置钉钉报警通知：

- true：已配置，当报警事情发生时，会发送钉钉通知

- false：未配置',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B57C121B-A45F-44D8-A9B2-13E5A5044195\\",\\n  \\"AlertGroup\\": {\\n    \\"AlertGroup\\": [\\n      \\"[\\\\\\\\\\\\\\"云账号报警联系人\\\\\\\\\\\\\\"]\\"\\n    ]\\n  },\\n  \\"AlertConfig\\": {\\n    \\"AlertConfig\\": [\\n      {\\n        \\"NoticeType\\": \\"addr_alert\\",\\n        \\"SmsNotice\\": true,\\n        \\"EmailNotice\\": true,\\n        \\"DingtalkNotice\\": false\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取全局告警配置',
    ),
    'CreateCloudGtmInstanceConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。该参数值可自定义，但是要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度实例id',
            'description' => '全局流量管理3.0实例ID，唯一标识产品实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-jmp3qnw**03',
          ),
        ),
        3 => 
        array (
          'name' => 'ScheduleZoneMode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '接入zone分配模式',
            'description' => '接入域名配置模式：

- sys_assign：系统分配（此模式已不支持）

- custom：自定义，用户需选择实例所在账号下的域名进行关联，并输入主机记录以生成接入域名',
            'type' => 'string',
            'required' => false,
            'example' => 'custom',
          ),
        ),
        4 => 
        array (
          'name' => 'ScheduleZoneName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'zone名称',
            'description' => 'zone名称，即GTM接入域名的父Zone。一般为GTM实例所在账号下，在云解析DNS控制台的托管域名，支持主域和子域。',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
        5 => 
        array (
          'name' => 'ScheduleHostname',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '主机记录',
            'description' => 'GTM接入域名的主机记录。',
            'type' => 'string',
            'required' => false,
            'example' => 'www',
          ),
        ),
        6 => 
        array (
          'name' => 'ScheduleRrType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度解析记录类型',
            'description' => '接入域名的解析记录类型：

- A：IPv4地址

- AAAA：IPv6地址

- CNAME：域名',
            'type' => 'string',
            'required' => false,
            'example' => 'A',
          ),
        ),
        7 => 
        array (
          'name' => 'Ttl',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '调度调度实例的TTL',
            'description' => '全局TTL，单位是秒。接入域名解析到地址池中地址的TTL值，影响解析记录在运营商LocalDNS中的缓存时间，支持自定义TTL值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '30',
          ),
        ),
        8 => 
        array (
          'name' => 'Remark',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备注。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        9 => 
        array (
          'name' => 'EnableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名实例的启用状态：

- enable：启用状态，GTM实例智能调度策略生效；

- disable：禁用状态，GTM实例智能调度策略不可用；',
            'type' => 'string',
            'required' => false,
            'example' => 'enable',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'Success' => 
              array (
                'description' => '本次操作是否成功：

- true：操作成功

- false：操作失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ConfigId' => 
              array (
                'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。',
                'type' => 'boolean',
                'example' => 'config-000**1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"Success\\": true,\\n  \\"ConfigId\\": true\\n}","type":"json"}]',
      'title' => '创建域名实例配置',
    ),
    'UpdateCloudGtmInstanceConfigAlert' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回信息的语言类型：

- zh-CN：中文
- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。注意  由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '全局流量管理3.0实例id。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-zz11t58**0s',
          ),
        ),
        3 => 
        array (
          'name' => 'ConfigId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名实例配置id，相同接入域名、相同的GTM实例可以同时配置A和AAAA记录，此情况下相同的GTM实例会出现2个域名实例配置，ConfigId可以唯一标识域名实例配置。',
            'type' => 'string',
            'required' => false,
            'example' => 'Config-000**11',
          ),
        ),
        4 => 
        array (
          'name' => 'AlertMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例告警配置模式：

- global：继承全局报警配置，即实例采用全局告警配置

- instance_config：自定义报警配置',
            'type' => 'string',
            'required' => false,
            'example' => 'global',
          ),
        ),
        5 => 
        array (
          'name' => 'AlertGroup',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '告警通知组列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '告警通知组信息。',
              'type' => 'string',
              'required' => false,
              'example' => '[\\"云账号报警联系人\\"]',
            ),
            'required' => false,
          ),
        ),
        6 => 
        array (
          'name' => 'AlertConfig',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '报警配置列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '报警规则配置信息。',
              'type' => 'object',
              'properties' => 
              array (
                'NoticeType' => 
                array (
                  'description' => '报警事件类型：

- addr_alert：地址不可用

- addr_resume：地址恢复可用

- addr_pool_unavailable：地址池不可用

- addr_pool_available：地址池恢复可用',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'addr_alert',
                ),
                'SmsNotice' => 
                array (
                  'description' => '是否配置短信报警通知：

- true：已配置，当报警事情发生时，会发送短信通知

- fals：未配置

仅中国站支持短信通知，国际站不支持短信通知。',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
                'EmailNotice' => 
                array (
                  'description' => '是否配置邮件报警通知：

- true：已配置，当报警事情发生时，会发送邮件通知

- false：未配置',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
                'DingtalkNotice' => 
                array (
                  'description' => '是否配置钉钉报警通知：

- true：已配置，当报警事情发生时，会发送钉钉通知

- false：未配置',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'Success' => 
              array (
                'description' => '本次操作是否成功：
- **true**：调用成功。
- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新实例的告警配置',
    ),
    'UpdateCloudGtmInstanceName' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回结果显示的语言。取值：

- zh-CN：中文

- en-US：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户生成的请求token。用于保证请求的幂等性。该参数值可自定义，但是要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '1ae05db4-10e7-11ef-b126-00163e24**22',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'GTM实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'gtm-cn-jmp3qnw**03',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例名称，不可传入空值。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '29D0F8F8-5499-4F6C-9FDC-1EE13BF55925',
              ),
              'Success' => 
              array (
                'description' => '本次修改实例名称操作是否成功：

- true：成功

- false：失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"29D0F8F8-5499-4F6C-9FDC-1EE13BF55925\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '修改实例名称',
    ),
    'ListCloudGtmAvailableAlertGroups' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- **zh-CN**：中文

- **en-US**：英文',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。

',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'AlertGroups' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AlertGroup' => 
                  array (
                    'description' => '报警通知组列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '报警通知组。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'GroupName' => 
                        array (
                          'title' => '地址 ID',
                          'description' => '报警通知组名称。',
                          'type' => 'string',
                          'example' => '云账号报警联系人',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"AlertGroups\\": {\\n    \\"AlertGroup\\": [\\n      {\\n        \\"GroupName\\": \\"云账号报警联系人\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取用户可用的告警组列表',
    ),
    'DescribeCloudGtmSummary' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言，取值：

- zh-CN：中文。

- en-US：英文。',
            'type' => 'string',
            'required' => false,
            'example' => 'en-US',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '199C3699-9A7B-41A1-BB5A-F1E862D3CB38',
              ),
              'InstanceTotalCount' => 
              array (
                'description' => '当前账户下实例总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'MonitorTaskTotalQuota' => 
              array (
                'description' => '用户已配置的探测任务总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'MonitorTaskTotalCount' => 
              array (
                'description' => '用户探测任务数配额。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '101',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"199C3699-9A7B-41A1-BB5A-F1E862D3CB38\\",\\n  \\"InstanceTotalCount\\": 10,\\n  \\"MonitorTaskTotalQuota\\": 20,\\n  \\"MonitorTaskTotalCount\\": 101\\n}","type":"json"}]',
      'title' => '获取实例概要信息',
    ),
    'ValidateDnsGtmCnameRrCanUse' => 
    array (
      'summary' => '检查实例主机名是否可添加',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'CnameRr',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'CnameType',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        4 => 
        array (
          'name' => 'CnameMode',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        5 => 
        array (
          'name' => 'CnameZone',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '',
    ),
    'CreatePdnsUdpIpSegment' => 
    array (
      'summary' => '创建公共DNS Udp Ip地址段',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Ip',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        2 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'ValidMessage' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribePdnsUdpIpSegments' => 
    array (
      'summary' => '获取公共DNS Udp IP段列表',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'PageSize' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'PageNumber' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'IpSegments' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'type' => 'string',
                    ),
                    'Ip' => 
                    array (
                      'type' => 'string',
                    ),
                    'Mask' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'State' => 
                    array (
                      'type' => 'string',
                    ),
                    'CreateDate' => 
                    array (
                      'type' => 'string',
                    ),
                    'UpdateDate' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'RemovePdnsUdpIpSegment' => 
    array (
      'summary' => '删除公共DNS Udp Ip地址段',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Ip',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        1 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribePdnsThreatStatistics' => 
    array (
      'summary' => '获取公共DNS 威胁统计列表',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        2 => 
        array (
          'name' => 'SubDomain',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        3 => 
        array (
          'name' => 'ThreatType',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        4 => 
        array (
          'name' => 'ThreatLevel',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        5 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        6 => 
        array (
          'name' => 'OrderBy',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        7 => 
        array (
          'name' => 'Direction',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        8 => 
        array (
          'name' => 'ThreatSourceIp',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        9 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        10 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        11 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
        12 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'PageSize' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'PageNumber' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'Data' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DomainName' => 
                    array (
                      'type' => 'string',
                    ),
                    'SubDomain' => 
                    array (
                      'type' => 'string',
                    ),
                    'LatestThreatTime' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'TotalCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'DohTotalCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'UdpTotalCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'MaxThreatLevel' => 
                    array (
                      'type' => 'string',
                    ),
                    'DomainCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'SourceIp' => 
                    array (
                      'type' => 'string',
                    ),
                    'ThreatType' => 
                    array (
                      'type' => 'string',
                    ),
                    'ThreatLevel' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribePdnsUserInfo' => 
    array (
      'summary' => '获取公共DNS用户信息',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'UserInfo' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PdnsId' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'State' => 
                  array (
                    'type' => 'string',
                  ),
                  'ServiceType' => 
                  array (
                    'type' => 'string',
                  ),
                  'StoppedService' => 
                  array (
                    'type' => 'string',
                  ),
                  'AvailableService' => 
                  array (
                    'type' => 'string',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribePdnsRequestStatistic' => 
    array (
      'summary' => '获取公共DNS 请求统计',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        2 => 
        array (
          'name' => 'SubDomain',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        3 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        4 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Data' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'V6HttpCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'V6HttpsCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'Timestamp' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'TotalCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'V4HttpCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'V4HttpsCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'V4Count' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'V6Count' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'HttpCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'HttpsCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'DohTotalCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'UdpTotalCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'IpCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'ValidatePdnsUdpIpSegment' => 
    array (
      'summary' => '验证公共DNS Udp Ip地址段',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Ip',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        1 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribePdnsThreatLogs' => 
    array (
      'summary' => '获取公共DNS 威胁日志列表',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'ThreatType',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        2 => 
        array (
          'name' => 'ThreatLevel',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        3 => 
        array (
          'name' => 'ThreatSourceIp',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        4 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        5 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        6 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        7 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
        8 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'PageSize' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'PageNumber' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'Logs' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ThreatTime' => 
                    array (
                      'type' => 'string',
                    ),
                    'ThreatType' => 
                    array (
                      'type' => 'string',
                    ),
                    'ThreatLevel' => 
                    array (
                      'type' => 'string',
                    ),
                    'SourceIp' => 
                    array (
                      'type' => 'string',
                    ),
                    'SubDomain' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribePdnsRequestStatistics' => 
    array (
      'summary' => '获取公共DNS 请求统计列表',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        2 => 
        array (
          'name' => 'SubDomain',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        3 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        4 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        5 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'PageSize' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'PageNumber' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'Data' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DomainName' => 
                    array (
                      'type' => 'string',
                    ),
                    'SubDomain' => 
                    array (
                      'type' => 'string',
                    ),
                    'V6HttpCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'V6HttpsCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'TotalCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'V4HttpCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'V4HttpsCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'V4Count' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'V6Count' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'HttpCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'HttpsCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'DohTotalCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'UdpTotalCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'IpCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'ThreatCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'MaxThreatLevel' => 
                    array (
                      'type' => 'string',
                    ),
                    'ThreatInfo' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'ThreatType' => 
                          array (
                            'type' => 'string',
                          ),
                          'ThreatLevel' => 
                          array (
                            'type' => 'string',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribePdnsOperateLogs' => 
    array (
      'summary' => '获取公共DNS 操作日志列表',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'ActionType',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        2 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        3 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        4 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'PageSize' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'PageNumber' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'Logs' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'OperateTime' => 
                    array (
                      'type' => 'string',
                    ),
                    'Type' => 
                    array (
                      'type' => 'string',
                    ),
                    'Action' => 
                    array (
                      'type' => 'string',
                    ),
                    'content' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'ResumePdnsService' => 
    array (
      'summary' => '恢复公共DNS服务',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceType',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribePdnsAccountSummary' => 
    array (
      'summary' => '获取公共DNS用户数据概览',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        2 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Data' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'UserId' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'DomainCount' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'SubDomainCount' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'HttpCount' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'HttpsCount' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'TotalCount' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                  'ThreatCount' => 
                  array (
                    'type' => 'integer',
                    'format' => 'int64',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'PausePdnsService' => 
    array (
      'summary' => '暂停公共DNS服务',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'ServiceType',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribePdnsThreatStatistic' => 
    array (
      'summary' => '获取公共DNS 威胁统计',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'ThreatSourceIp',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        2 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        3 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'Data' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TotalCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'Timestamp' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'ThreatType' => 
                    array (
                      'type' => 'string',
                    ),
                    'ThreatLevel' => 
                    array (
                      'type' => 'string',
                    ),
                    'DohTotalCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'UdpTotalCount' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '',
    ),
    'UpdateAppKeyState' => 
    array (
      'summary' => '修改 AppKey 状态',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'AppKeyId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        2 => 
        array (
          'name' => 'State',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
    ),
    'UpdateIspFlushCacheInstanceConfig' => 
    array (
      'summary' => '修改缓存刷新套餐包配置',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
    ),
    'SubmitIspFlushCacheTask' => 
    array (
      'summary' => '提交缓存刷新任务',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
              'required' => true,
            ),
            'required' => true,
            'maxItems' => 11,
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等token',
            'type' => 'string',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribeIspFlushCacheRemainQuota' => 
    array (
      'summary' => '获取剩余可缓存刷新次数',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TelecomRemainQuota' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribeIspFlushCacheInstances' => 
    array (
      'summary' => '获取缓存刷新套餐包列表',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '9999999',
            'minimum' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        5 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        6 => 
        array (
          'name' => 'OrderBy',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        7 => 
        array (
          'name' => 'Direction',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'PageNumber' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'IspFlushCacheInstances' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Isp' => 
                    array (
                      'type' => 'string',
                    ),
                    'ExpireTime' => 
                    array (
                      'type' => 'string',
                    ),
                    'InstanceId' => 
                    array (
                      'type' => 'string',
                    ),
                    'QuotaInfo' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceQuota' => 
                        array (
                          'type' => 'integer',
                          'format' => 'int32',
                        ),
                        'InstanceQuotaUsed' => 
                        array (
                          'type' => 'integer',
                          'format' => 'int32',
                        ),
                      ),
                    ),
                    'ExpireTimestamp' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                    'InstanceName' => 
                    array (
                      'type' => 'string',
                    ),
                    'VersionCode' => 
                    array (
                      'type' => 'string',
                    ),
                    'Status' => 
                    array (
                      'type' => 'string',
                    ),
                  ),
                ),
              ),
              'TotalPages' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'TotalItems' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribeIspFlushCacheTask' => 
    array (
      'summary' => '获取缓存刷新任务详情',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'TaskId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'TaskId' => 
              array (
                'type' => 'string',
              ),
              'DomainName' => 
              array (
                'type' => 'string',
              ),
              'InstanceId' => 
              array (
                'type' => 'string',
              ),
              'InstanceName' => 
              array (
                'type' => 'string',
              ),
              'Isp' => 
              array (
                'type' => 'string',
              ),
              'TaskStatus' => 
              array (
                'type' => 'string',
              ),
              'CreateTime' => 
              array (
                'type' => 'string',
              ),
              'CreateTimestamp' => 
              array (
                'type' => 'integer',
                'format' => 'int64',
              ),
              'FlushCacheResults' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Province' => 
                    array (
                      'type' => 'string',
                    ),
                    'DnsNodes' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'NodeIp' => 
                          array (
                            'type' => 'string',
                          ),
                          'Answers' => 
                          array (
                            'type' => 'array',
                            'items' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'Name' => 
                                array (
                                  'type' => 'string',
                                ),
                                'Type' => 
                                array (
                                  'type' => 'string',
                                ),
                                'Record' => 
                                array (
                                  'type' => 'string',
                                ),
                                'Ttl' => 
                                array (
                                  'type' => 'integer',
                                  'format' => 'int64',
                                ),
                              ),
                            ),
                          ),
                          'SpName' => 
                          array (
                            'type' => 'string',
                          ),
                          'Status' => 
                          array (
                            'type' => 'string',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribeIspFlushCacheTasks' => 
    array (
      'summary' => '获取缓存刷新任务列表',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
            'required' => false,
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '9999999',
            'minimum' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'Isp',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        4 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        5 => 
        array (
          'name' => 'OrderBy',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        6 => 
        array (
          'name' => 'Direction',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
        7 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'string',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'RequestId' => 
              array (
                'type' => 'string',
              ),
              'PageNumber' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'IspFlushCacheTasks' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TaskId' => 
                    array (
                      'type' => 'string',
                    ),
                    'DomainName' => 
                    array (
                      'type' => 'string',
                    ),
                    'InstanceId' => 
                    array (
                      'type' => 'string',
                    ),
                    'InstanceName' => 
                    array (
                      'type' => 'string',
                    ),
                    'Isp' => 
                    array (
                      'type' => 'string',
                    ),
                    'TaskStatus' => 
                    array (
                      'type' => 'string',
                    ),
                    'CreateTime' => 
                    array (
                      'type' => 'string',
                    ),
                    'CreateTimestamp' => 
                    array (
                      'type' => 'integer',
                      'format' => 'int64',
                    ),
                  ),
                ),
              ),
              'TotalPages' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
              'TotalItems' => 
              array (
                'type' => 'integer',
                'format' => 'int32',
              ),
            ),
          ),
        ),
      ),
    ),
    'DescribeRecordResolveStatisticsSummary' => 
    array (
      'summary' => '查询指定域名下的全部子域名的请求量统计。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '可选参数，传递具体域名时查询该域名下各子域名的解析量, 不传递时查询用户账号下所有付费域名的解析量列表',
            'description' => '域名名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'example.com',
          ),
        ),
        1 => 
        array (
          'name' => 'DomainType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '指定域名时需要传递
域名类型，大小写不敏感。取值: 

权威域名(默认): PUBLIC
缓存加速域名: CACHE',
            'description' => '域名类型，大小写不敏感。取值：

- PUBLIC：权威托管域名（默认值）

- CACHE：权威代理域名',
            'type' => 'string',
            'required' => false,
            'example' => 'PUBLIC',
          ),
        ),
        2 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '关键字，与SearchMode配合使用',
            'description' => '关键字，与SearchMode配合使用。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'SearchMode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '关键词的搜索模式。取值：

模糊搜索(默认): LIKE
精确搜索: EXACT',
            'description' => '关键词的搜索模式。取值：

- 模糊搜索（默认）：LIKE

- 精确搜索：EXACT',
            'type' => 'string',
            'required' => false,
            'example' => 'LIKE',
          ),
        ),
        4 => 
        array (
          'name' => 'Direction',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序方向。取值: 
递减（默认）: DESC
递增: ASC',
            'description' => '排序方向。取值：

- 递减（默认）：DESC

- 递增：ASC',
            'type' => 'string',
            'required' => false,
            'example' => 'DESC',
          ),
        ),
        5 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询总解析量阈值，也可查询相应的解析量不大于threshold的数据。例如，可查询出解析量小于100次的域名。
不传或者传小于0的值，查询所有数据
传0，查询无解析量的数据
传大于0的值，查询解析量不超过该值的域名
',
            'description' => '解析量查询条件，可用于查询不同解析量类别的子域名列表及子域名解析量数据。

不传：查询解析量非0的数据

传小于0的值：查询所有数据

传0：查询无解析量的数据

传大于0的值：查询解析量不超过该值的子域名',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '-1',
          ),
        ),
        6 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '开始时间，格式yyyy-MM-dd，如: 2023-03-01',
            'description' => '开始时间，格式yyyy-MM-dd，如: 2023-03-01。',
            'type' => 'string',
            'required' => true,
            'example' => '2023-03-29',
          ),
        ),
        7 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '结束时间，格式yyyy-MM-dd，如：2023-03-13',
            'description' => '结束时间，格式yyyy-MM-dd，如：2023-03-13。',
            'type' => 'string',
            'required' => false,
            'example' => '2023-03-29',
          ),
        ),
        8 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '当前页数，起始值为1，默认为1。',
            'description' => '当前页数，起始值为1，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页查询时设置的每页行数，最大值1000，最小值为1。',
            'description' => '分页查询时设置的每页行数，最大值1000，最小值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        10 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'lang，语言：zh、en、ja',
            'description' => 'lang，语言：zh、en、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
            'default' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PopResultDTO<PageResult<ResolveQueryStatisticsPopResult>>',
            'description' => 'PopResultDTO<PageResult<ResolveQueryStatisticsPopResult>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值**500**，默认为**20**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为1，默认为1。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPages' => 
              array (
                'description' => '数据分页后总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '总数据条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Statistics' => 
              array (
                'description' => '统计数据列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SubDomain' => 
                    array (
                      'title' => '子域名',
                      'description' => '子域。',
                      'type' => 'string',
                      'example' => 'test.example.com',
                    ),
                    'DomainName' => 
                    array (
                      'title' => '子域名',
                      'description' => '子域名。',
                      'type' => 'string',
                      'example' => 'test.example.com',
                    ),
                    'Count' => 
                    array (
                      'description' => '请求量（次）。',
                      'type' => 'string',
                      'example' => '330',
                    ),
                    'DomainType' => 
                    array (
                      'description' => '域名类型，大小写不敏感。取值：

- PUBLIC：权威托管域名（默认值）

- CACHE：权威代理域名',
                      'type' => 'string',
                      'example' => 'PUBLIC',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Statistics.TooManyResults',
            'errorMessage' => 'Your query has produced too many results.',
          ),
          1 => 
          array (
            'errorCode' => 'Statistics.InvalidDomainName',
            'errorMessage' => 'Your query param DomainName is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Statistics.InvalidStartDate',
            'errorMessage' => 'Your query param StartDate is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'Statistics.InvalidEndDate',
            'errorMessage' => 'Your query param EndDate is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'Statistics.InvalidSearchMode',
            'errorMessage' => 'Your query param SearchMode is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'Statistics.InvalidOrderDirection',
            'errorMessage' => 'Your query param OrderDirection is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'Statistics.InvalidDomainType',
            'errorMessage' => 'Your query param DomainType is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'Statistics.QuotaExceededTime',
            'errorMessage' => 'Your query time range exceeds 90 days.',
          ),
          8 => 
          array (
            'errorCode' => 'Sys.ParamsError',
            'errorMessage' => 'Your query param is invalid.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA\\",\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 1,\\n  \\"Statistics\\": [\\n    {\\n      \\"SubDomain\\": \\"test.example.com\\",\\n      \\"DomainName\\": \\"test.example.com\\",\\n      \\"Count\\": \\"330\\",\\n      \\"DomainType\\": \\"PUBLIC\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeRecordResolveStatisticsSummaryResponse>\\n    <RequestId>389DFFA3-77A5-4A9E-BF3D-147C6F98A5BA</RequestId>\\n    <PageSize>10</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <TotalPages>1</TotalPages>\\n    <TotalItems>1</TotalItems>\\n    <Statistics>\\n        <SubDomain>test.example.com</SubDomain>\\n        <Count>330</Count>\\n        <DomainType>PUBLIC</DomainType>\\n    </Statistics>\\n</DescribeRecordResolveStatisticsSummaryResponse>","errorExample":""}]',
      'title' => '获取子域名的请求量统计',
    ),
    'DescribeDomainResolveStatisticsSummary' => 
    array (
      'summary' => '查询用户账号下所有付费域名的请求量列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Keyword',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '关键字，与SearchMode配合使用',
            'description' => '关键字，与SearchMode配合使用。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'SearchMode',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '关键词的搜索模式。取值：

模糊搜索(默认): LIKE
精确搜索: EXACT',
            'description' => '关键词的搜索模式。取值：

- 模糊搜索（默认）：LIKE

- 精确搜索：EXACT',
            'type' => 'string',
            'required' => false,
            'example' => 'EXACT',
          ),
        ),
        2 => 
        array (
          'name' => 'Direction',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '排序方向。取值: 
递减: DESC
递增: ASC',
            'description' => '排序方向。取值：

- 递减：DESC

- 递增：ASC',
            'type' => 'string',
            'required' => false,
            'example' => 'DESC',
          ),
        ),
        3 => 
        array (
          'name' => 'Threshold',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '查询总解析量阈值，也可查询相应的解析量不大于threshold的数据。例如，可查询出解析量小于100次的域名。
不传或者传小于0的值，查询所有数据
传0，查询无解析量的数据
传大于0的值，查询解析量不超过该值的域名
',
            'description' => '解析量查询条件，可用于查询不同解析量类别的域名列表及域名解析量数据。

不传：查询解析量不为0的数据

传小于0的值：查询所有数据

传0：查询无解析量的数据

传大于0的值：查询解析量不超过该值的域名',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '-1',
          ),
        ),
        4 => 
        array (
          'name' => 'StartDate',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '开始时间，格式yyyy-MM-dd，如: 2023-03-01',
            'description' => '开始时间，格式yyyy-MM-dd，如: 2023-03-01',
            'type' => 'string',
            'required' => true,
            'example' => '2023-03-01',
          ),
        ),
        5 => 
        array (
          'name' => 'EndDate',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '结束时间，格式yyyy-MM-dd，如：2023-03-13',
            'description' => '结束时间，格式yyyy-MM-dd，如：2023-03-13',
            'type' => 'string',
            'required' => false,
            'example' => '2023-03-01',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '当前页数，起始值为1，默认为1。',
            'description' => '当前页数，起始值为1，默认为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分页查询时设置的每页行数，最大值1000，最小值为1。',
            'description' => '分页查询时设置的每页行数，最大值1000，最小值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        8 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'lang，语言：zh、en、ja',
            'description' => 'lang，语言：zh、en、ja。',
            'type' => 'string',
            'required' => false,
            'example' => 'zh',
            'default' => 'en',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PopResultDTO<PageResult<ResolveQueryStatisticsPopResult>>',
            'description' => 'PopResultDTO<PageResult<ResolveQueryStatisticsPopResult>>',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'RequestId',
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '6856BCF6-11D6-4D7E-AC53-FD579933522B',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，最大值**100**，默认为**20**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页数，起始值为**1**，默认为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPages' => 
              array (
                'description' => '数据分页后总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalItems' => 
              array (
                'description' => '总数据条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Statistics' => 
              array (
                'description' => '统计数据列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DomainName' => 
                    array (
                      'description' => '域名名称。',
                      'type' => 'string',
                      'example' => 'example.com',
                    ),
                    'Count' => 
                    array (
                      'description' => '请求量（次）。',
                      'type' => 'string',
                      'example' => '35509014',
                    ),
                    'DomainType' => 
                    array (
                      'description' => '域名类型。

- PUBLIC：权威托管域名

 - CACHE：权威代理域名',
                      'type' => 'string',
                      'example' => 'CACHE',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Statistics.TooManyResults',
            'errorMessage' => 'Your query has produced too many results.',
          ),
          1 => 
          array (
            'errorCode' => 'Statistics.InvalidDomainName',
            'errorMessage' => 'Your query param DomainName is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Statistics.InvalidStartDate',
            'errorMessage' => 'Your query param StartDate is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'Statistics.InvalidEndDate',
            'errorMessage' => 'Your query param EndDate is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'Statistics.InvalidSearchMode',
            'errorMessage' => 'Your query param SearchMode is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'Statistics.InvalidOrderDirection',
            'errorMessage' => 'Your query param OrderDirection is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'Statistics.InvalidDomainType',
            'errorMessage' => 'Your query param DomainType is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'Statistics.QuotaExceededTime',
            'errorMessage' => 'Your query time range exceeds 90 days.',
          ),
          8 => 
          array (
            'errorCode' => 'Sys.ParamsError',
            'errorMessage' => 'Your query param is invalid.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"6856BCF6-11D6-4D7E-AC53-FD579933522B\\",\\n  \\"PageSize\\": 20,\\n  \\"PageNumber\\": 1,\\n  \\"TotalPages\\": 1,\\n  \\"TotalItems\\": 1,\\n  \\"Statistics\\": [\\n    {\\n      \\"DomainName\\": \\"example.com\\",\\n      \\"Count\\": \\"35509014\\",\\n      \\"DomainType\\": \\"CACHE\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取域名的请求量统计列表',
    ),
    'DescribeInternetDnsLogs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Lang',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '语言。',
            'type' => 'string',
            'required' => false,
            'example' => 'en',
          ),
        ),
        1 => 
        array (
          'name' => 'StartTimestamp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的开始时间（时间戳）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1709192640000',
          ),
        ),
        2 => 
        array (
          'name' => 'EndTimestamp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询的结束时间（时间戳）。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1709196299999',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询大小。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，默认值为1。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'Module',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '模块类型
- AUTHORITY（默认值）：公网权威DNS
- RECURSION：公网递归DNS',
            'type' => 'string',
            'required' => false,
            'example' => 'AUTHORITY',
          ),
        ),
        6 => 
        array (
          'name' => 'QueryCondition',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询参数
- sourceIp：源IP地址
- queryNameFuzzy：域名（模糊值）
- queryType：记录类型
- value：解析结果
- status：状态
- serverIp：解析服务器IP',
            'type' => 'string',
            'required' => false,
            'example' => '{"sourceIp":"59.82.XX.XX","queryType":"A"}',
          ),
        ),
        7 => 
        array (
          'name' => 'DomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'example.com',
          ),
        ),
        8 => 
        array (
          'name' => 'AccountId',
          'in' => 'query',
          'schema' => 
          array (
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '唯一请求识别码。',
                'type' => 'string',
                'example' => '536E9CAD-DB30-4647-AC87-AA5CC38C5382',
              ),
              'Complete' => 
              array (
                'description' => '解析日志查询是否精确。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Logs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Log' => 
                  array (
                    'description' => '日志列表。

',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '日志对象。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DnsMsgId' => 
                        array (
                          'description' => '解析日志ID（会重复）。',
                          'type' => 'string',
                          'example' => '3583',
                        ),
                        'LogTime' => 
                        array (
                          'description' => '解析时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1709196249000',
                        ),
                        'ZoneName' => 
                        array (
                          'type' => 'string',
                        ),
                        'QueryName' => 
                        array (
                          'description' => '域名名称。',
                          'type' => 'string',
                          'example' => 'example.com',
                        ),
                        'QueryType' => 
                        array (
                          'description' => '记录类型。',
                          'type' => 'string',
                          'example' => 'A',
                        ),
                        'Rt' => 
                        array (
                          'description' => '解析响应时间。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ServerIp' => 
                        array (
                          'description' => '解析服务器IP。',
                          'type' => 'string',
                          'example' => '140.205.XX.XX',
                        ),
                        'SourceIp' => 
                        array (
                          'description' => '源IP地址。',
                          'type' => 'string',
                          'example' => '59.82.XX.XX',
                        ),
                        'Status' => 
                        array (
                          'description' => '响应状态。',
                          'type' => 'string',
                          'example' => 'NOERROR',
                        ),
                        'SubnetIp' => 
                        array (
                          'description' => 'edns-client-subnet 可选项设置的值。',
                          'type' => 'string',
                          'example' => '170.33.XX.XX',
                        ),
                        'Value' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Value' => 
                            array (
                              'description' => '解析结果数组。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '解析结果。',
                                'type' => 'string',
                                'example' => '172.64.XX.XX',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageSize' => 
              array (
                'description' => '分页查询大小。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'CurPage' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalPage' => 
              array (
                'description' => '总页数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'TotalSize' => 
              array (
                'description' => '总数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '48',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"536E9CAD-DB30-4647-AC87-AA5CC38C5382\\",\\n  \\"Complete\\": true,\\n  \\"Logs\\": {\\n    \\"Log\\": [\\n      {\\n        \\"DnsMsgId\\": \\"3583\\",\\n        \\"LogTime\\": 1709196249000,\\n        \\"ZoneName\\": \\"\\",\\n        \\"QueryName\\": \\"example.com\\",\\n        \\"QueryType\\": \\"A\\",\\n        \\"Rt\\": 0,\\n        \\"ServerIp\\": \\"140.205.XX.XX\\",\\n        \\"SourceIp\\": \\"59.82.XX.XX\\",\\n        \\"Status\\": \\"NOERROR\\",\\n        \\"SubnetIp\\": \\"170.33.XX.XX\\",\\n        \\"Value\\": {\\n          \\"Value\\": [\\n            \\"172.64.XX.XX\\"\\n          ]\\n        }\\n      }\\n    ]\\n  },\\n  \\"PageSize\\": 10,\\n  \\"CurPage\\": 1,\\n  \\"TotalPage\\": 5,\\n  \\"TotalSize\\": 48\\n}","type":"json"}]',
      'title' => '查询公网解析日志',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'alidns.cn-hangzhou.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'ap-southeast-1',
      'endpoint' => 'alidns.ap-southeast-1.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'ap-northeast-1',
      'endpoint' => 'alidns.ap-northeast-1.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'ap-northeast-2-pop',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    4 => 
    array (
      'regionId' => 'ap-south-1',
      'endpoint' => 'alidns.ap-south-1.aliyuncs.com',
    ),
    5 => 
    array (
      'regionId' => 'ap-southeast-2',
      'endpoint' => 'alidns.ap-southeast-2.aliyuncs.com',
    ),
    6 => 
    array (
      'regionId' => 'ap-southeast-3',
      'endpoint' => 'alidns.ap-southeast-3.aliyuncs.com',
    ),
    7 => 
    array (
      'regionId' => 'ap-southeast-5',
      'endpoint' => 'alidns.ap-southeast-5.aliyuncs.com',
    ),
    8 => 
    array (
      'regionId' => 'cn-beijing',
      'endpoint' => 'alidns.cn-beijing.aliyuncs.com',
    ),
    9 => 
    array (
      'regionId' => 'cn-beijing-finance-1',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    10 => 
    array (
      'regionId' => 'cn-beijing-finance-pop',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    11 => 
    array (
      'regionId' => 'cn-beijing-gov-1',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    12 => 
    array (
      'regionId' => 'cn-beijing-nu16-b01',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    13 => 
    array (
      'regionId' => 'cn-chengdu',
      'endpoint' => 'alidns.cn-chengdu.aliyuncs.com',
    ),
    14 => 
    array (
      'regionId' => 'cn-edge-1',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    15 => 
    array (
      'regionId' => 'cn-fujian',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    16 => 
    array (
      'regionId' => 'cn-haidian-cm12-c01',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    17 => 
    array (
      'regionId' => 'cn-hangzhou-bj-b01',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    18 => 
    array (
      'regionId' => 'cn-hangzhou-finance',
      'endpoint' => 'alidns.cn-hangzhou-finance.aliyuncs.com',
    ),
    19 => 
    array (
      'regionId' => 'cn-hangzhou-internal-prod-1',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    20 => 
    array (
      'regionId' => 'cn-hangzhou-internal-test-1',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    21 => 
    array (
      'regionId' => 'cn-hangzhou-internal-test-2',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    22 => 
    array (
      'regionId' => 'cn-hangzhou-internal-test-3',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    23 => 
    array (
      'regionId' => 'cn-hangzhou-test-306',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    24 => 
    array (
      'regionId' => 'cn-hongkong',
      'endpoint' => 'alidns.cn-hongkong.aliyuncs.com',
    ),
    25 => 
    array (
      'regionId' => 'cn-hongkong-finance-pop',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    26 => 
    array (
      'regionId' => 'cn-huhehaote',
      'endpoint' => 'alidns.cn-huhehaote.aliyuncs.com',
    ),
    27 => 
    array (
      'regionId' => 'cn-huhehaote-nebula-1',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    28 => 
    array (
      'regionId' => 'cn-north-2-gov-1',
      'endpoint' => 'alidns.cn-north-2-gov-1.aliyuncs.com',
    ),
    29 => 
    array (
      'regionId' => 'cn-qingdao',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    30 => 
    array (
      'regionId' => 'cn-qingdao-nebula',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    31 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'alidns.cn-shanghai.aliyuncs.com',
    ),
    32 => 
    array (
      'regionId' => 'cn-shanghai-et15-b01',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    33 => 
    array (
      'regionId' => 'cn-shanghai-et2-b01',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    34 => 
    array (
      'regionId' => 'cn-shanghai-finance-1',
      'endpoint' => 'alidns.cn-shanghai-finance-1.aliyuncs.com',
    ),
    35 => 
    array (
      'regionId' => 'cn-shanghai-inner',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    36 => 
    array (
      'regionId' => 'cn-shanghai-internal-test-1',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    37 => 
    array (
      'regionId' => 'cn-shenzhen',
      'endpoint' => 'alidns.cn-shenzhen.aliyuncs.com',
    ),
    38 => 
    array (
      'regionId' => 'cn-shenzhen-finance-1',
      'endpoint' => 'alidns.cn-shenzhen-finance-1.aliyuncs.com',
    ),
    39 => 
    array (
      'regionId' => 'cn-shenzhen-inner',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    40 => 
    array (
      'regionId' => 'cn-shenzhen-st4-d01',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    41 => 
    array (
      'regionId' => 'cn-shenzhen-su18-b01',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    42 => 
    array (
      'regionId' => 'cn-wuhan',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    43 => 
    array (
      'regionId' => 'cn-wulanchabu',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    44 => 
    array (
      'regionId' => 'cn-yushanfang',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    45 => 
    array (
      'regionId' => 'cn-zhangbei',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    46 => 
    array (
      'regionId' => 'cn-zhangbei-na61-b01',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    47 => 
    array (
      'regionId' => 'cn-zhangjiakou',
      'endpoint' => 'alidns.cn-zhangjiakou.aliyuncs.com',
    ),
    48 => 
    array (
      'regionId' => 'cn-zhangjiakou-na62-a01',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    49 => 
    array (
      'regionId' => 'cn-zhengzhou-nebula-1',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    50 => 
    array (
      'regionId' => 'eu-central-1',
      'endpoint' => 'alidns.eu-central-1.aliyuncs.com',
    ),
    51 => 
    array (
      'regionId' => 'eu-west-1',
      'endpoint' => 'alidns.eu-west-1.aliyuncs.com',
    ),
    52 => 
    array (
      'regionId' => 'eu-west-1-oxs',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    53 => 
    array (
      'regionId' => 'me-east-1',
      'endpoint' => 'alidns.me-east-1.aliyuncs.com',
    ),
    54 => 
    array (
      'regionId' => 'rus-west-1-pop',
      'endpoint' => 'dns.aliyuncs.com',
    ),
    55 => 
    array (
      'regionId' => 'us-east-1',
      'endpoint' => 'alidns.us-east-1.aliyuncs.com',
    ),
    56 => 
    array (
      'regionId' => 'us-west-1',
      'endpoint' => 'alidns.us-west-1.aliyuncs.com',
    ),
  ),
);