<?php

declare(strict_types=1);

namespace Dew\Acs\Pcdn;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result getAllAppVersions(array $arguments = [])
 * @method \Http\Promise\Promise getAllAppVersionsAsync($arguments = [])
 * @method \Dew\Acs\Result getShareRateData(array $arguments = [])
 * @method \Http\Promise\Promise getShareRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result getClientsRatio(array $arguments = [])
 * @method \Http\Promise\Promise getClientsRatioAsync($arguments = [])
 * @method \Dew\Acs\Result getConsumerStatus(array $arguments = [])
 * @method \Http\Promise\Promise getConsumerStatusAsync($arguments = [])
 * @method \Dew\Acs\Result getTokenList(array $arguments = [])
 * @method \Http\Promise\Promise getTokenListAsync($arguments = [])
 * @method \Dew\Acs\Result addConsumer(array $arguments = [])
 * @method \Http\Promise\Promise addConsumerAsync($arguments = [])
 * @method \Dew\Acs\Result getAllIsp(array $arguments = [])
 * @method \Http\Promise\Promise getAllIspAsync($arguments = [])
 * @method \Dew\Acs\Result getAllPlatformTypes(array $arguments = [])
 * @method \Http\Promise\Promise getAllPlatformTypesAsync($arguments = [])
 * @method \Dew\Acs\Result getAllRegions(array $arguments = [])
 * @method \Http\Promise\Promise getAllRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result getAllMarkets(array $arguments = [])
 * @method \Http\Promise\Promise getAllMarketsAsync($arguments = [])
 * @method \Dew\Acs\Result getBalanceBandwidthData(array $arguments = [])
 * @method \Http\Promise\Promise getBalanceBandwidthDataAsync($arguments = [])
 * @method \Dew\Acs\Result getBalanceTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise getBalanceTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result getFeeHistory(array $arguments = [])
 * @method \Http\Promise\Promise getFeeHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result getCurrentMode(array $arguments = [])
 * @method \Http\Promise\Promise getCurrentModeAsync($arguments = [])
 * @method \Dew\Acs\Result getExpenseSummary(array $arguments = [])
 * @method \Http\Promise\Promise getExpenseSummaryAsync($arguments = [])
 * @method \Dew\Acs\Result getTrafficByRegion(array $arguments = [])
 * @method \Http\Promise\Promise getTrafficByRegionAsync($arguments = [])
 * @method \Dew\Acs\Result getTrafficData(array $arguments = [])
 * @method \Http\Promise\Promise getTrafficDataAsync($arguments = [])
 * @method \Dew\Acs\Result getFluencyData(array $arguments = [])
 * @method \Http\Promise\Promise getFluencyDataAsync($arguments = [])
 * @method \Dew\Acs\Result getLogsList(array $arguments = [])
 * @method \Http\Promise\Promise getLogsListAsync($arguments = [])
 * @method \Dew\Acs\Result addPcdnControlRule(array $arguments = [])
 * @method \Http\Promise\Promise addPcdnControlRuleAsync($arguments = [])
 * @method \Dew\Acs\Result deletePcdnControlRule(array $arguments = [])
 * @method \Http\Promise\Promise deletePcdnControlRuleAsync($arguments = [])
 * @method \Dew\Acs\Result disablePcdnControlRule(array $arguments = [])
 * @method \Http\Promise\Promise disablePcdnControlRuleAsync($arguments = [])
 * @method \Dew\Acs\Result enablePcdnControlRule(array $arguments = [])
 * @method \Http\Promise\Promise enablePcdnControlRuleAsync($arguments = [])
 * @method \Dew\Acs\Result getControlRules(array $arguments = [])
 * @method \Http\Promise\Promise getControlRulesAsync($arguments = [])
 * @method \Dew\Acs\Result editPcdnControlRule(array $arguments = [])
 * @method \Http\Promise\Promise editPcdnControlRuleAsync($arguments = [])
 * @method \Dew\Acs\Result addDomain(array $arguments = [])
 * @method \Http\Promise\Promise addDomainAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDomain(array $arguments = [])
 * @method \Http\Promise\Promise deleteDomainAsync($arguments = [])
 * @method \Dew\Acs\Result startDomain(array $arguments = [])
 * @method \Http\Promise\Promise startDomainAsync($arguments = [])
 * @method \Dew\Acs\Result stopDomain(array $arguments = [])
 * @method \Http\Promise\Promise stopDomainAsync($arguments = [])
 * @method \Dew\Acs\Result getAccessData(array $arguments = [])
 * @method \Http\Promise\Promise getAccessDataAsync($arguments = [])
 * @method \Dew\Acs\Result getBandwidthData(array $arguments = [])
 * @method \Http\Promise\Promise getBandwidthDataAsync($arguments = [])
 * @method \Dew\Acs\Result getCoverRateData(array $arguments = [])
 * @method \Http\Promise\Promise getCoverRateDataAsync($arguments = [])
 * @method \Dew\Acs\Result getDomainCount(array $arguments = [])
 * @method \Http\Promise\Promise getDomainCountAsync($arguments = [])
 * @method \Dew\Acs\Result getDomains(array $arguments = [])
 * @method \Http\Promise\Promise getDomainsAsync($arguments = [])
 * @method \Dew\Acs\Result getFirstFrameDelayData(array $arguments = [])
 * @method \Http\Promise\Promise getFirstFrameDelayDataAsync($arguments = [])
 */
final class PcdnClient extends AcsClient
{
    //
}
