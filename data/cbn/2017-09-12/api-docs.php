<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'RPC',
    'product' => 'Cbn',
    'version' => '2017-09-12',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 58521,
      'title' => '云企业网实例',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateCen',
        1 => 'DeleteCen',
        2 => 'ModifyCenAttribute',
        3 => 'DescribeCens',
        4 => 'DescribeGrantRulesToResource',
        5 => 'MoveResourceGroup',
      ),
    ),
    1 => 
    array (
      'id' => 174108,
      'title' => '转发路由器实例',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateTransitRouter',
        1 => 'DeleteTransitRouter',
        2 => 'UpdateTransitRouter',
        3 => 'ListTransitRouters',
        4 => 'ListTransitRouterAvailableResource',
        5 => 'OpenTransitRouterService',
        6 => 'CheckTransitRouterService',
        7 => 'GrantInstanceToTransitRouter',
        8 => 'RevokeInstanceFromTransitRouter',
      ),
    ),
    2 => 
    array (
      'id' => 175780,
      'title' => '转发路由地址段',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateTransitRouterCidr',
        1 => 'DeleteTransitRouterCidr',
        2 => 'ModifyTransitRouterCidr',
        3 => 'ListTransitRouterCidr',
        4 => 'ListTransitRouterCidrAllocation',
      ),
    ),
    3 => 
    array (
      'id' => 174109,
      'title' => '网络实例连接',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 174110,
          'title' => '专有网络连接',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateTransitRouterVpcAttachment',
            1 => 'DeleteTransitRouterVpcAttachment',
            2 => 'UpdateTransitRouterVpcAttachmentAttribute',
            3 => 'UpdateTransitRouterVpcAttachmentZones',
            4 => 'ListTransitRouterVpcAttachments',
          ),
        ),
        1 => 
        array (
          'id' => 190414,
          'title' => '专线网关连接',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateTransitRouterEcrAttachment',
            1 => 'DeleteTransitRouterEcrAttachment',
            2 => 'UpdateTransitRouterEcrAttachmentAttribute',
            3 => 'ListTransitRouterEcrAttachments',
          ),
        ),
        2 => 
        array (
          'id' => 174112,
          'title' => 'VPN连接',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateTransitRouterVpnAttachment',
            1 => 'DeleteTransitRouterVpnAttachment',
            2 => 'UpdateTransitRouterVpnAttachmentAttribute',
            3 => 'ListTransitRouterVpnAttachments',
          ),
        ),
        3 => 
        array (
          'id' => 174111,
          'title' => '边界路由器连接',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateTransitRouterVbrAttachment',
            1 => 'DeleteTransitRouterVbrAttachment',
            2 => 'UpdateTransitRouterVbrAttachmentAttribute',
            3 => 'ListTransitRouterVbrAttachments',
          ),
        ),
        4 => 'AttachCenChildInstance',
        5 => 'DetachCenChildInstance',
        6 => 'DescribeCenAttachedChildInstanceAttribute',
        7 => 'DescribeCenAttachedChildInstances',
        8 => 'DescribeChildInstanceRegions',
        9 => 'DescribeGrantRulesToCen',
        10 => 'ListGrantVSwitchesToCen',
      ),
    ),
    4 => 
    array (
      'id' => 58532,
      'title' => '带宽包',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateCenBandwidthPackage',
        1 => 'DeleteCenBandwidthPackage',
        2 => 'ModifyCenBandwidthPackageAttribute',
        3 => 'ModifyCenBandwidthPackageSpec',
        4 => 'DescribeCenGeographicSpanRemainingBandwidth',
        5 => 'DescribeCenBandwidthPackages',
        6 => 'DescribeCenGeographicSpans',
        7 => 'DescribeGeographicRegionMembership',
        8 => 'TempUpgradeCenBandwidthPackageSpec',
        9 => 'UnassociateCenBandwidthPackage',
        10 => 'AssociateCenBandwidthPackage',
      ),
    ),
    5 => 
    array (
      'id' => 175781,
      'title' => '跨地域连接',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateTransitRouterPeerAttachment',
        1 => 'DeleteTransitRouterPeerAttachment',
        2 => 'SetCenInterRegionBandwidthLimit',
        3 => 'UpdateTransitRouterPeerAttachmentAttribute',
        4 => 'ListTransitRouterPeerAttachments',
        5 => 'DescribeCenInterRegionBandwidthLimits',
      ),
    ),
    6 => 
    array (
      'id' => 174005,
      'title' => '管理路由',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateCenChildInstanceRouteEntryToAttachment',
        1 => 'CreateCenChildInstanceRouteEntryToCen',
        2 => 'DeleteCenChildInstanceRouteEntryToAttachment',
        3 => 'DeleteCenChildInstanceRouteEntryToCen',
        4 => 'ListCenChildInstanceRouteEntriesToAttachment',
        5 => 'DescribeCenRegionDomainRouteEntries',
        6 => 'DescribeCenChildInstanceRouteEntries',
        7 => 'DescribePublishedRouteEntries',
        8 => 'DescribeRouteConflict',
        9 => 'PublishRouteEntries',
        10 => 'WithdrawPublishedRouteEntries',
      ),
    ),
    7 => 
    array (
      'id' => 58547,
      'title' => '转发路由器路由表',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateTransitRouterRouteTable',
        1 => 'DeleteTransitRouterRouteTable',
        2 => 'UpdateTransitRouterRouteTable',
        3 => 'ListTransitRouterRouteTables',
      ),
    ),
    8 => 
    array (
      'id' => 174010,
      'title' => '转发路由器路由条目',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateTransitRouterRouteEntry',
        1 => 'DeleteTransitRouterRouteEntry',
        2 => 'UpdateTransitRouterRouteEntry',
        3 => 'ListTransitRouterRouteEntries',
      ),
    ),
    9 => 
    array (
      'id' => 174015,
      'title' => '关联转发关系',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListTransitRouterRouteTableAssociations',
        1 => 'AssociateTransitRouterAttachmentWithRouteTable',
        2 => 'ReplaceTransitRouterRouteTableAssociation',
        3 => 'DissociateTransitRouterAttachmentFromRouteTable',
      ),
    ),
    10 => 
    array (
      'id' => 174020,
      'title' => '路由学习关系',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'EnableTransitRouterRouteTablePropagation',
        1 => 'DisableTransitRouterRouteTablePropagation',
        2 => 'ListTransitRouterRouteTablePropagations',
      ),
    ),
    11 => 
    array (
      'id' => 174025,
      'title' => '路由策略',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateCenRouteMap',
        1 => 'DeleteCenRouteMap',
        2 => 'ModifyCenRouteMap',
        3 => 'DescribeCenRouteMaps',
      ),
    ),
    12 => 
    array (
      'id' => 178435,
      'title' => '聚合路由',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateTransitRouteTableAggregation',
        1 => 'DeleteTransitRouteTableAggregation',
        2 => 'RefreshTransitRouteTableAggregation',
        3 => 'DescribeTransitRouteTableAggregationDetail',
        4 => 'DescribeTransitRouteTableAggregation',
      ),
    ),
    13 => 
    array (
      'id' => 58567,
      'title' => '前缀列表',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateTransitRouterPrefixListAssociation',
        1 => 'DeleteTransitRouterPrefixListAssociation',
        2 => 'ListTransitRouterPrefixListAssociation',
      ),
    ),
    14 => 
    array (
      'id' => 174029,
      'title' => '流量调度',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 174034,
          'title' => '流量标记策略',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddTraficMatchRuleToTrafficMarkingPolicy',
            1 => 'AddTrafficMatchRuleToTrafficMarkingPolicy',
            2 => 'CreateTrafficMarkingPolicy',
            3 => 'DeleteTrafficMarkingPolicy',
            4 => 'UpdateTrafficMarkingPolicyAttribute',
            5 => 'ListTrafficMarkingPolicies',
            6 => 'RemoveTraficMatchRuleFromTrafficMarkingPolicy',
            7 => 'RemoveTrafficMatchRuleFromTrafficMarkingPolicy',
          ),
        ),
        1 => 
        array (
          'id' => 174043,
          'title' => '流量调度策略',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateCenInterRegionTrafficQosQueue',
            1 => 'CreateCenInterRegionTrafficQosPolicy',
            2 => 'DeleteCenInterRegionTrafficQosQueue',
            3 => 'DeleteCenInterRegionTrafficQosPolicy',
            4 => 'UpdateCenInterRegionTrafficQosQueueAttribute',
            5 => 'UpdateCenInterRegionTrafficQosPolicyAttribute',
            6 => 'ListCenInterRegionTrafficQosPolicies',
            7 => 'ListCenInterRegionTrafficQosQueues',
          ),
        ),
      ),
    ),
    15 => 
    array (
      'id' => 174033,
      'title' => '云服务',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DeleteRouteServiceInCen',
        1 => 'DescribeRouteServicesInCen',
        2 => 'ResolveAndRouteServiceInCen',
      ),
    ),
    16 => 
    array (
      'id' => 58572,
      'title' => 'PrivateZone',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DescribeCenPrivateZoneRoutes',
        1 => 'UnroutePrivateZoneInCenToVpc',
        2 => 'RoutePrivateZoneInCenToVpc',
      ),
    ),
    17 => 
    array (
      'id' => 58576,
      'title' => '组播',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 175782,
          'title' => '组播域',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateTransitRouterMulticastDomain',
            1 => 'DeleteTransitRouterMulticastDomain',
            2 => 'ModifyTransitRouterMulticastDomain',
            3 => 'ListTransitRouterMulticastDomains',
            4 => 'ListTransitRouterMulticastDomainAssociations',
            5 => 'ListTransitRouterMulticastDomainVSwitches',
            6 => 'AssociateTransitRouterMulticastDomain',
            7 => 'DisassociateTransitRouterMulticastDomain',
          ),
        ),
        1 => 
        array (
          'id' => 175783,
          'title' => '组播源和组播成员',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ListTransitRouterMulticastGroups',
            1 => 'ListGrantVSwitchEnis',
            2 => 'DeregisterTransitRouterMulticastGroupMembers',
            3 => 'RegisterTransitRouterMulticastGroupSources',
            4 => 'DeregisterTransitRouterMulticastGroupSources',
            5 => 'RegisterTransitRouterMulticastGroupMembers',
          ),
        ),
      ),
    ),
    18 => 
    array (
      'id' => 174051,
      'title' => '健康检查',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DisableCenVbrHealthCheck',
        1 => 'EnableCenVbrHealthCheck',
        2 => 'DescribeCenVbrHealthCheck',
      ),
    ),
    19 => 
    array (
      'id' => 58556,
      'title' => '流日志',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateFlowlog',
        1 => 'DeleteFlowlog',
        2 => 'ModifyFlowLogAttribute',
        3 => 'DescribeFlowlogs',
        4 => 'ActiveFlowLog',
        5 => 'DeactiveFlowLog',
      ),
    ),
    20 => 
    array (
      'id' => 58560,
      'title' => '标签',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListTagResources',
        1 => 'TagResources',
        2 => 'UntagResources',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
    ),
  ),
  'apis' => 
  array (
    'CreateCen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        3 => 
        array (
          'name' => 'ProtectionLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置网段重叠的级别。

取值：**REDUCED**（默认值），表示网段可以有重叠，但是不能完全相同。
',
            'type' => 'string',
            'required' => false,
            'example' => 'REDUCED',
          ),
        ),
        4 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'CenId' => 
              array (
                'description' => '云企业网实例的ID。',
                'type' => 'string',
                'example' => 'cen-dc4vwznpwbobrl****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.ResourceGroupId',
            'errorMessage' => 'ResourceGroupId is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CenId\\": \\"cen-dc4vwznpwbobrl****\\",\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateCenResponse>\\n    <CenId>cen-dc4vwznpwbobrl****</CenId>\\n    <RequestId>0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50</RequestId>\\n</CreateCenResponse>","errorExample":""}]',
      'title' => '创建云企业网实例',
      'summary' => '云企业网实例是管理一体化网络的基础资源。一个云企业网实例管理一张网络，可覆盖一个或多个地域。在实现网络实例互通前，您需要先调用CreateCen接口创建一个云企业网实例。',
      'description' => '**CreateCen**接口属于异步接口，即系统会先返回一个云企业网实例ID，但该云企业网实例并未创建完成，系统后台的创建任务仍在进行。您可以调用**DescribeCens**接口查询云企业网实例的状态。 

- 当云企业网实例处于**Creating**状态时，表示云企业网实例正在创建中，在该状态下，您只能对云企业网实例执行查询操作，不能执行其他操作。
- 当云企业网实例处于**Active**状态时，表示云企业网实例创建完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteCen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5903EE99-D542-4E14-BC65-AAC1CB2D3D03',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.DeleteCenWithCustomRouteTable',
            'errorMessage' => 'Operation failed because you are not allowed to delete the CEN with the custom transit router route table.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.DeleteCenWithRouteEntry',
            'errorMessage' => 'Operation failed because you are not allowed to delete the CEN with the transit router route entry.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.MulticastDomainExist',
            'errorMessage' => 'Operation is invalid because multicast domain exists.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.PrefixListAssociationExist',
            'errorMessage' => 'Operation is invalid because prefixList association exists.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.AggregationRouteExist',
            'errorMessage' => 'Operation is invalid because transit router aggregation route exists.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.TrafficMarkingPolicyExist',
            'errorMessage' => 'Operation is invalid because transit router traffic marking policy exists.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          7 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5903EE99-D542-4E14-BC65-AAC1CB2D3D03\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteCenResponse>\\n    <RequestId>5903EE99-D542-4E14-BC65-AAC1CB2D3D03</RequestId>\\n</DeleteCenResponse>","errorExample":""}]',
      'title' => '删除指定的云企业网实例',
      'summary' => '调用DeleteCen接口删除云企业网实例。',
      'description' => '**DeleteCen**接口属于异步接口，即系统会先返回一个**RequestId**，但云企业网实例并未删除完成，系统后台的删除任务仍在进行。您可以调用**DescribeCens**接口查询云企业网实例的状态。 

- 当云企业网实例处于**Deleting**状态时，表示云企业网实例正在删除中，在该状态下，您只能对云企业网实例执行查询操作，不能执行其他操作。
- 当查询不到指定的云企业网实例时，表示云企业网实例删除完成。

## 前提条件

在删除云企业网实例前，请确保云企业网实例下不存在带宽包，且云企业网实例的转发路由器下不存在网络实例连接和自定义路由表：

- 删除网络实例连接，请参见：

    - [DeleteTransitRouterVpcAttachment](~~261220~~)
    - [DeleteTransitRouterVbrAttachment](~~261223~~)
    - [DeleteTransitRouterVpnAttachment](~~443992~~)
    - [DeleteTransitRouterPeerAttachment](~~261227~~)

    > 如果您要删除基础版转发路由器下的网络实例连接，请参见[DetachCenChildInstance](~~65915~~)。
- 删除企业版转发路由器的自定义路由表，请参见[DeleteTransitRouterRouteTable](~~261235~~)。
- 解绑云企业网实例的带宽包实例，请参见[UnassociateCenBandwidthPackage](~~65935~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyCenAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 云企业网实例的ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen',
          ),
        ),
        3 => 
        array (
          'name' => 'ProtectionLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置网段重叠的级别。

取值：**REDUCED**（默认值），表示网段可以有重叠，但是不能完全相同。',
            'type' => 'string',
            'required' => false,
            'example' => 'REDUCED',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '13526224-5780-4426-8BDF-BC8B08700F22',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.EnhanceProtectionLevel',
            'errorMessage' => 'Your request to enhance CBN protection level cannot be processed. Please contact customer support to continue this operation.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"13526224-5780-4426-8BDF-BC8B08700F22\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyCenAttributeResponse>\\n    <RequestId>13526224-5780-4426-8BDF-BC8B08700F22</RequestId>\\n</ModifyCenAttributeResponse>","errorExample":""}]',
      'title' => '编辑云企业网实例的名称和描述信息',
      'summary' => '调用ModifyCenAttribute接口修改云企业网实例的名称和描述信息。',
      'description' => '**ModifyCenAttribute**接口属于异步接口，即系统会先返回一个**RequestId**，但该云企业网实例并未修改完成，系统后台的修改任务仍在进行。您可以调用**DescribeCens**接口查询云企业网实例的状态。 

- 当云企业网实例处于**Modifying**状态时，表示云企业网实例正在修改中，在该状态下，您只能对云企业网实例执行查询操作，不能执行其他操作。
- 当云企业网实例处于**Active**状态时，表示云企业网实例修改完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCens' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待查询的页码。默认值：**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。取值范围：**1**~**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm3unpnuw****',
          ),
        ),
        3 => 
        array (
          'name' => 'Filter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '过滤条件的信息。

一次最多支持输入5个过滤条件。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '过滤条件。取值：

- **CenId**：云企业网实例ID。
- **Name**：云企业网实例名称。

多个过滤条件之间默认是**与**的关系，即必须符合所有过滤条件，才视为匹配过滤条件。

一次最多支持输入5个过滤条件。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'CenId',
                ),
                'Value' => 
                array (
                  'description' => '过滤条件的值。

根据**Key**指定过滤值。一个**Key**支持指定多个过滤值，多个过滤值之间是**或**的关系，即只要符合其中一个过滤值，则视为匹配该过滤条件。

一个过滤条件最多支持输入5个过滤值。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '过滤条件的值。

根据**Key**指定过滤值。一个**Key**支持指定多个过滤值，多个过滤值之间是**或**的关系，即只要符合其中一个过滤值，则视为匹配该过滤条件。

一个过滤条件最多支持输入5个过滤值。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'cen-44m0p68spvlrqq****',
                  ),
                  'required' => false,
                  'example' => 'cen-0xyeagctz5sfg9****',
                  'maxItems' => 5,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        4 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2BFA6822-240E-4E27-B4C8-AA400EF7474D',
              ),
              'PageNumber' => 
              array (
                'description' => '查询的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Cens' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Cen' => 
                  array (
                    'description' => '云企业网实例信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '云企业网实例的信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '云企业网实例的状态。

- **Creating**：创建中。

- **Active**：运行中。

- **Deleting**：删除中。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '云企业网实例的创建时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：`YYYY-MM-DDThh:mmZ`。',
                          'type' => 'string',
                          'example' => '2019-10-22T07:44Z',
                        ),
                        'Ipv6Level' => 
                        array (
                          'description' => '云企业网实例是否已开启IPv6功能。

- **ENABLE**：已开启。
- **DISABLED**：未开启。',
                          'type' => 'string',
                          'example' => 'DISABLED',
                        ),
                        'Description' => 
                        array (
                          'description' => '云企业网实例的描述信息。',
                          'type' => 'string',
                          'example' => 'desctest',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '云企业网实例所属的资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-acfm3unpnuw****',
                        ),
                        'CenId' => 
                        array (
                          'description' => '云企业网实例的ID。',
                          'type' => 'string',
                          'example' => 'cen-0xyeagctz5sfg9****',
                        ),
                        'ProtectionLevel' => 
                        array (
                          'description' => '网段重叠的级别。

**REDUCED**：表示网段可以有重叠，但是不能完全相同。',
                          'type' => 'string',
                          'example' => 'REDUCED',
                        ),
                        'Name' => 
                        array (
                          'description' => '云企业网实例的名称。',
                          'type' => 'string',
                          'example' => 'nametest',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '云企业网实例绑定的标签列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '云企业网实例绑定的标签信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'tagtest',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'tagtest',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'CenBandwidthPackageIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'CenBandwidthPackageId' => 
                            array (
                              'description' => '云企业网实例绑定的带宽包的列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '云企业网实例绑定的带宽包的列表。',
                                'type' => 'string',
                                'example' => 'cenbwp-4c2zaavbvh5f42****',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"2BFA6822-240E-4E27-B4C8-AA400EF7474D\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"Cens\\": {\\n    \\"Cen\\": [\\n      {\\n        \\"Status\\": \\"Active\\",\\n        \\"CreationTime\\": \\"2019-10-22T07:44Z\\",\\n        \\"Ipv6Level\\": \\"DISABLED\\",\\n        \\"Description\\": \\"desctest\\",\\n        \\"ResourceGroupId\\": \\"rg-acfm3unpnuw****\\",\\n        \\"CenId\\": \\"cen-0xyeagctz5sfg9****\\",\\n        \\"ProtectionLevel\\": \\"REDUCED\\",\\n        \\"Name\\": \\"nametest\\",\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"tagtest\\",\\n              \\"Value\\": \\"tagtest\\"\\n            }\\n          ]\\n        },\\n        \\"CenBandwidthPackageIds\\": {\\n          \\"CenBandwidthPackageId\\": [\\n            \\"cenbwp-4c2zaavbvh5f42****\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCensResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>2BFA6822-240E-4E27-B4C8-AA400EF7474D</RequestId>\\n    <PageSize>10</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <Cens>\\n        <Cen>\\n            <Status>Active</Status>\\n            <ProtectionLevel>REDUCED</ProtectionLevel>\\n            <ResourceGroupId>rg-acfm3unpnuw****</ResourceGroupId>\\n            <Ipv6Level>DISABLED</Ipv6Level>\\n            <CenId>cen-0xyeagctz5sfg9****</CenId>\\n            <CreationTime>2019-10-22T07:44Z</CreationTime>\\n            <CenBandwidthPackageIds>\\n            </CenBandwidthPackageIds>\\n            <Name>nametest</Name>\\n        </Cen>\\n    </Cens>\\n</DescribeCensResponse>","errorExample":""}]',
      'title' => '查看账户下所有云企业网实例的详细信息',
      'summary' => '调用DescribeCens接口查询当前阿里云账号下的云企业网实例的状态、是否已开启IPv6功能、实例绑定的带宽包的列表等信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGrantRulesToResource' => 
    array (
      'summary' => '调用DescribeGrantRulesToResource接口查询网络实例对跨账号云企业网实例的授权信息，包括云企业网实例所属阿里云账号（主账号）、网络实例的付费方等信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-p0wfut1iqauelpdpb****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例类型。取值：

- **VPC**：表示专有网络VPC（Virtual Private Cloud）实例。
- **ExpressConnect**：表示边界路由器VBR（Virtual border router）实例。
- **VPN**：表示IPsec连接。
- **ECR**：表示专线网关ECR（ExpressConnect Router）实例。',
            'type' => 'string',
            'required' => true,
            'example' => 'VPC',
            'enum' => 
            array (
              0 => 'ExpressConnect',
              1 => 'VPC',
              2 => 'VPN',
              3 => 'ECR',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 如果您不指定**MaxResults**参数的值，则表示您不需要分批次查询。调用该接口后返回参数**MaxResults**的值表示列表条目总数。
- 如果您指定**MaxResults**参数的值，则表示您需要分批次查询，**MaxResults**的值表示分批次查询时每次显示的条目数。取值范围：**1**~**100**。调用该接口后返回参数**MaxResults**的值表示当前查询批次下列表条目的数量。建议指定**MaxResults**参数的值为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '0',
            'example' => '20',
            'default' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C6E5992C-A57B-5A6C-9B26-568074DC68BA',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '- 如果您未指定请求参数**MaxResults**的值，则表示您不需要分批次查询。返回参数**MaxResults**的值表示列表条目总数。
- 如果您指定了请求参数**MaxResults**的值，则表示您需要分批次查询。返回参数**MaxResults**的值表示当前查询批次下列表条目的数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'GrantRules' => 
              array (
                'description' => '授权信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '授权信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CenOwnerId' => 
                    array (
                      'description' => '云企业网实例所属阿里云账号（主账号）ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1250123456123456',
                    ),
                    'OrderType' => 
                    array (
                      'description' => '网络实例的付费方。取值：

- **PayByCenOwner**：表示网络实例产生的转发路由器连接费、转发路由器流量处理费由云企业网实例所属的账号承担。
- **PayByResourceOwner**：表示网络实例产生的转发路由器连接费、转发路由器流量处理费由网络实例所属的账号承担。',
                      'type' => 'string',
                      'example' => 'PayByCenOwner',
                    ),
                    'CenId' => 
                    array (
                      'description' => '云企业网实例ID。',
                      'type' => 'string',
                      'example' => 'cen-44m0p68spvlrqq****',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建授权的时间。
时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mmZ。',
                      'type' => 'string',
                      'example' => '2024-01-24T16:46Z',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.	',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter	',
            'errorMessage' => 'Missing parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.RegionId',
            'errorMessage' => 'The specified Region Id is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"C6E5992C-A57B-5A6C-9B26-568074DC68BA\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 1,\\n  \\"GrantRules\\": [\\n    {\\n      \\"CenOwnerId\\": 1250123456123456,\\n      \\"OrderType\\": \\"PayByCenOwner\\",\\n      \\"CenId\\": \\"cen-44m0p68spvlrqq****\\",\\n      \\"CreateTime\\": \\"2024-01-24T16:46Z\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeGrantRulesToResourceResponse>\\n    <RequestId>C6E5992C-A57B-5A6C-9B26-568074DC68BA</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <MaxResults>1</MaxResults>\\n    <GrantRules>\\n        <CenOwnerId>1250123456123456</CenOwnerId>\\n        <OrderType>PayByCenOwner</OrderType>\\n        <CenId>cen-44m0p68spvlrqq****</CenId>\\n    </GrantRules>\\n</DescribeGrantRulesToResourceResponse>","errorExample":""}]',
      'title' => '查询网络实例对跨账号云企业网实例的授权信息',
    ),
    'MoveResourceGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e456****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会更改云企业网实例或带宽包实例所属的资源组。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后返回HTTP 2xx状态码并直接进行操作。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'NewResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新资源组ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rg-aekzqqurtfg****',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：

- **cen**：云企业网实例。
- **bandwidthpackage**：带宽包实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-nye53d7p3hzyu4****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1D169236-7C76-57CF-B6C8-B4CACE0BA1BB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1D169236-7C76-57CF-B6C8-B4CACE0BA1BB\\"\\n}","errorExample":""},{"type":"xml","example":"<MoveResourceGroupResponse>\\n    <RequestId>1D169236-7C76-57CF-B6C8-B4CACE0BA1BB</RequestId>\\n</MoveResourceGroupResponse>","errorExample":""}]',
      'title' => '修改云企业网实例或带宽包实例所属的资源组',
      'summary' => '调用MoveResourceGroup接口修改云企业网实例或带宽包实例所属的资源组。',
      'description' => '云企业网实例和带宽包实例默认归属于默认资源组，您可以通过`MoveResourceGroup`接口修改云企业网实例或带宽包实例所属的资源组。',
    ),
    'CreateTransitRouter' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-j3jzhw1zpau2km****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器实例所属地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-zhangjiakou',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器实例的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器实例的描述。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        5 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次创建请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接创建企业版转发路由器实例。
- **true**：发送检查请求，只进行校验，不会创建企业版转发路由器实例。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'SupportMulticast',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启企业版转发路由器的组播功能。取值：

- **false**（默认值）：不开启。
- **true**：开启。

仅部分地域的企业版转发路由器支持组播功能，您可以调用[ListTransitRouterAvailableResource](~~261356~~)接口查询支持组播功能的地域信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'TransitRouterCidrList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '转发路由器地址段列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '转发路由器地址段列表。

一次最多支持添加5个转发路由器地址段。关于转发路由器地址段的更多信息，请参见[转发路由器地址段](~~462635~~)。

>仅企业版转发路由器支持添加地址段。',
              'type' => 'object',
              'properties' => 
              array (
                'Cidr' => 
                array (
                  'description' => '转发路由器地址段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.10.0/24',
                ),
                'Name' => 
                array (
                  'description' => '转发路由器地址段的名称。

名称长度为1~128个字符。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'nametest',
                ),
                'Description' => 
                array (
                  'description' => '转发路由器地址段的描述信息。

描述长度为1~256个字符。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'desctest',
                ),
                'PublishCidrRoute' => 
                array (
                  'description' => '是否允许系统自动在转发路由器路由表中添加转发路由器地址段的路由。

- **true**（默认值）：允许。
       
     如果您选择了允许，则在您创建了私网网关类型的VPN连接，并为私网网关类型的VPN连接创建了路由学习关系后，系统自动在与VPN连接建立路由学习关系的转发路由器路由表中添加一条路由条目：

    目标网段为转发路由器地址段的黑洞路由，其中转发路由器地址段指已为IPsec连接分配网关IP地址的地址段。

     该黑洞路由仅会被传播至转发路由器下边界路由器VBR（Virtual Border Router）实例的路由表中。
- **false**：不允许。',
                  'type' => 'boolean',
                  'required' => false,
                  'example' => 'true',
                  'default' => 'True',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
        8 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息。

一次最多支持输入20个标签信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TransitRouterId' => 
              array (
                'description' => '企业版转发路由器实例ID。',
                'type' => 'string',
                'example' => 'tr-uf6llz2286805i44g****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '404DA7EC-F495-44B5-B543-6EDCDF90F3D1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationUnsupported.RegionId',
            'errorMessage' => 'The specified Region is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceExist.TransitRouterInstance',
            'errorMessage' => 'The instance already exists.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbbiden.TransitRouterServiceNotOpen',
            'errorMessage' => 'The user has not open transit router service.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationUnsupported.SupportMulticast',
            'errorMessage' => 'The multicast is not supported in the specified region.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationUnsupported.CenFullLevel',
            'errorMessage' => 'CEN full level does not support TransitRouter.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.Cidr',
            'errorMessage' => 'Cidr is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'Illegal.TrType',
            'errorMessage' => 'The TransitRouter type is  illegal.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterCidrList',
            'errorMessage' => 'The TransitRouterCidrList is not support in the specified Region.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.CidrConflict',
            'errorMessage' => 'Operation is invalid because the cidr conflict.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.Region',
            'errorMessage' => 'The specified region is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'OverLappingExist.Cidr',
            'errorMessage' => 'The cidr overlapping exist.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.ServiceMode',
            'errorMessage' => 'The specified ServiceMode is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'ParamExclusive.ServiceModeAndSupportMulticast',
            'errorMessage' => 'ServiceMode and SupportMulticast is mutually exclusive.',
          ),
          13 => 
          array (
            'errorCode' => 'ParamExclusive.ServiceModeAndTransitRouterCidrList',
            'errorMessage' => 'ServiceMode and TransitRouterCidrList is mutually exclusive.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationUnsupported.Tag',
            'errorMessage' => 'The Tag is not supported in the specified region.',
          ),
          15 => 
          array (
            'errorCode' => 'IllegalParam.SupportMulticast',
            'errorMessage' => 'Basic Transit router is not support multicast.',
          ),
          16 => 
          array (
            'errorCode' => 'ParamExclusive.BasicAndPrimaryStandby',
            'errorMessage' => 'Basic and PrimaryStandby is mutually exclusive.',
          ),
          17 => 
          array (
            'errorCode' => 'ParamExclusive.BasicAndMultiPrimary',
            'errorMessage' => 'Basic and MultiPrimary is mutually exclusive.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          19 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TransitRouterId\\": \\"tr-uf6llz2286805i44g****\\",\\n  \\"RequestId\\": \\"404DA7EC-F495-44B5-B543-6EDCDF90F3D1\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTransitRouterResponse>\\n    <TransitRouterId>tr-uf6llz2286805i44g****</TransitRouterId>\\n    <RequestId>404DA7EC-F495-44B5-B543-6EDCDF90F3D1</RequestId>\\n</CreateTransitRouterResponse>","errorExample":""}]',
      'title' => '创建企业版转发路由器实例',
      'summary' => '调用CreateTransitRouter接口创建企业版转发路由器实例。',
      'description' => '- 您可以通过调用**CreateTransitRouter**接口创建企业版转发路由器实例。当前企业版转发路由器只在部分地域开放，关于地域的详细信息，请参见[什么是云企业网](~~181681~~)。
- **CreateTransitRouter**接口属于异步接口，即系统会先返回一个企业版转发路由器实例ID，但该企业版转发路由器实例并未创建完成，系统后台的创建任务仍在进行。您可以调用[ListTransitRouters](~~261219~~)接口查询企业版转发路由器实例的状态。
    - 当企业版转发路由器实例处于**Creating**状态时，表示企业版转发路由器实例正在创建中，在该状态下，您只能对企业版转发路由器实例执行查询操作，不能执行其他操作。
    - 当企业版转发路由器实例处于**Active**状态时，表示企业版转发路由器实例创建完成。
- 在一个云企业网实例中一个地域仅支持创建一个转发路由器实例。',
    ),
    'DeleteTransitRouter' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'abilityTreeCode' => '72326',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREcbnY9DL3F',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次删除请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认）：发送正常请求，通过检查后直接删除转发路由器实例。
- **true**：发送检查请求，只进行校验，不会删除转发路由器实例。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-uf654ttymmljlvh2x****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6DE3EE92-39C8-4BBD-A3AD-F568D74741BB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.DeleteTransitRouter',
            'errorMessage' => 'Operation failed because TransitRouterRouteTable or TransitRouterRouteEntry or BandwidthTransitRegion exists.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterInstance',
            'errorMessage' => 'The status of TransitRouter is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.CCNAttached',
            'errorMessage' => 'Can not delete transit router because CCN still attached.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.BandwidthLimitExist',
            'errorMessage' => 'Operation is invalid because a bandwidth limit exist.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.CenInstance',
            'errorMessage' => 'The status of CenInstance is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.TrafficMarkingPolicyExist',
            'errorMessage' => 'Operation is invalid because traffic marking policy exists.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.MulticastDomainExist',
            'errorMessage' => 'Operation is invalid because multicast domain exists.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.PrefixListExist',
            'errorMessage' => 'Operation is invalid because prefix list exists.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.TrafficQosPolicyExist',
            'errorMessage' => 'Operation is invalid because traffic qos policy exists.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.CloudRouteExist',
            'errorMessage' => 'Operation is invalid because cloud route exists.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationFailed.FlowLogExistOrNisOpened',
            'errorMessage' => 'Operation failed because FlowLog exists or Nis opened.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          12 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6DE3EE92-39C8-4BBD-A3AD-F568D74741BB\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTransitRouterResponse>\\n    <RequestId>6DE3EE92-39C8-4BBD-A3AD-F568D74741BB</RequestId>\\n</DeleteTransitRouterResponse>","errorExample":""}]',
      'title' => '删除转发路由器实例',
      'summary' => '调用DeleteTransitRouter接口删除企业版转发路由器实例。',
      'description' => '**DeleteTransitRouter**接口属于异步接口，即系统会先返回一个**RequestId**，但该转发路由器实例并未删除完成，系统后台的删除任务仍在进行。您可以调用**ListTransitRouters**接口查询转发路由器实例的状态。 

- 当转发路由器实例处于**Deleting**状态时，表示转发路由器实例正在删除中，在该状态下，您只能对转发路由器实例执行查询操作，不能执行其他操作。
- 当查询不到指定的转发路由器实例时，表示转发路由器实例删除完成。

## 前提条件

删除转发路由器实例前，请确保满足以下条件：

- 转发路由器实例下不存在任何连接。
    - 删除专有网络VPC（Virtual Private Cloud）连接，请参见[DeleteTransitRouterVpcAttachment](~~261220~~)。
    - 删除边界路由器VBR（Virtual Border Router）连接，请参见[DeleteTransitRouterVbrAttachment](~~261223~~)。
    - 删除云连接网CCN（Cloud Connect Network）连接，请参见[DetachCenChildInstance](~~65915~~)。
    - 删除VPN连接，请参见[DeleteTransitRouterVpnAttachment](~~443992~~)。
    - 删除跨地域连接，请参见[DeleteTransitRouterPeerAttachment](~~261227~~)。
- 转发路由器实例下不存在自定义路由表。删除自定义路由器表，请参见[DeleteTransitRouterRouteTable](~~261235~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateTransitRouter' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次修改请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认）：发送正常请求，通过检查后直接修改转发路由器实例的信息。
- **true**：发送检查请求，只进行校验，不会修改转发路由器实例的信息。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-uf654ttymmljlvh2x****',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例的新名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例新的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E9963DD7-998B-4F92-892D-8293CB49EE81',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationUnsupported.RegionId',
            'errorMessage' => 'The specified region ID is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterInstance',
            'errorMessage' => 'The status of TransitRouter is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E9963DD7-998B-4F92-892D-8293CB49EE81\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateTransitRouterResponse>\\n    <RequestId>E9963DD7-998B-4F92-892D-8293CB49EE81</RequestId>\\n</UpdateTransitRouterResponse>","errorExample":""}]',
      'title' => '修改转发路由器实例信息',
      'summary' => '调用UpdateTransitRouter接口修改转发路由器实例的名称和描述信息。',
      'description' => '**UpdateTransitRouter**接口属于异步接口，即系统会先返回一个**RequestId**，但转发路由器实例的修改并未完成，系统后台的修改任务仍在进行。您可以调用**ListTransitRouters**接口查询转发路由器实例的状态。 

- 当转发路由器实例处于**Modifying**状态时，表示转发路由器实例正在修改中，在该状态下，您只能对转发路由器实例执行查询操作，不能执行其他操作。
- 当转发路由器实例处于**Active**状态时，表示转发路由器实例修改完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTransitRouters' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。取值范围：**1**~**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cen-j3jzhw1zpau2km****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-uf654ttymmljlvh2x****',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        6 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例的状态。

- **Creating**：创建中。
- **Active**：可用。
- **Modifying**：修改中。
-  **Deleting**：删除中。
-  **Upgrading**：升级中。',
            'type' => 'string',
            'required' => false,
            'example' => 'Active',
          ),
        ),
        7 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例的类型。

- **Enterprise**：企业版。
- **Basic**：基础版。',
            'type' => 'string',
            'required' => false,
            'example' => 'Enterprise',
          ),
        ),
        8 => 
        array (
          'name' => 'TransitRouterName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例的名称。

名称长度为1~128个字符不能以`http://`或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        9 => 
        array (
          'name' => 'FeatureFilter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '转发路由器功能筛选字段。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '转发路由器功能筛选字段。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '转发路由器功能筛选字段键值。
目前支持字段：
- **Multicast**：组播功能。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Multicast',
                ),
                'Value' => 
                array (
                  'description' => '转发路由器功能筛选字段值列表。
当键值为**Multicast**时，只支持填入1个字段，支持字段内容为：
- **Enabled**：支持组播。
- **Disabled**：不支持组播。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '转发路由器功能筛选字段值。
当键值为**Multicast**时支持字段为：
- **Enabled**：支持组播。
- **Disabled**：不支持组播。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'Enabled',
                  ),
                  'required' => false,
                  'maxItems' => 1,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 1,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '68521297-5FA6-46CB-B4EB-658F1C68C8CC',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TransitRouters' => 
              array (
                'description' => '转发路由器实例信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '转发路由器实例的信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreationTime' => 
                    array (
                      'description' => '转发路由器实例的创建时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：`YYYY-MM-DDThh:mmZ`。',
                      'type' => 'string',
                      'example' => '2021-03-15T09:39Z',
                    ),
                    'Type' => 
                    array (
                      'description' => '转发路由器实例的类型。

- **Enterprise**：企业版。
- **Basic**：基础版。',
                      'type' => 'string',
                      'example' => 'Enterprise',
                    ),
                    'Status' => 
                    array (
                      'description' => '转发路由器实例的状态。

- **Creating**：创建中。
- **Active**：可用。
- **Modifying**：修改中。
-  **Deleting**：删除中。
-  **Upgrading**：升级中。',
                      'type' => 'string',
                      'example' => 'Active',
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => '转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-bp1su1ytdxtataupl****',
                    ),
                    'TransitRouterDescription' => 
                    array (
                      'description' => '转发路由器实例的描述信息。',
                      'type' => 'string',
                      'example' => 'testdesc',
                    ),
                    'TransitRouterName' => 
                    array (
                      'description' => '转发路由器实例的名称。',
                      'type' => 'string',
                      'example' => 'testname',
                    ),
                    'CenId' => 
                    array (
                      'description' => '云企业网实例ID。',
                      'type' => 'string',
                      'example' => 'cen-j3jzhw1zpau2km****',
                    ),
                    'AliUid' => 
                    array (
                      'description' => '云企业网实例所属阿里云账号（主账号）ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1210123456123456',
                    ),
                    'RegionId' => 
                    array (
                      'description' => '转发路由器实例所属地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'SupportMulticast' => 
                    array (
                      'description' => '转发路由器实例是否开启了组播功能。

- **true**：已开启。
- **false**：未开启。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'TransitRouterCidrList' => 
                    array (
                      'description' => '转发路由器地址段列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '转发路由器地址段。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Cidr' => 
                          array (
                            'description' => '转发路由器地址段。',
                            'type' => 'string',
                            'example' => '192.168.1.0/24',
                          ),
                          'Name' => 
                          array (
                            'description' => '转发路由器地址段的名称。',
                            'type' => 'string',
                            'example' => 'CIDRname',
                          ),
                          'Description' => 
                          array (
                            'description' => '转发路由器地址段的描述信息。',
                            'type' => 'string',
                            'example' => 'CIDRdesc',
                          ),
                          'TransitRouterCidrId' => 
                          array (
                            'description' => '转发路由器地址段ID。',
                            'type' => 'string',
                            'example' => 'cidr-46p5ceg21e8152****',
                          ),
                          'PublishCidrRoute' => 
                          array (
                            'description' => '是否允许系统自动在转发路由器路由表中添加转发路由器地址段的路由。

- **true**：允许。

     如果当前参数返回值为**true**，则在您创建了私网网关类型的VPN连接，并为私网网关类型的VPN连接创建了路由学习关系后，系统自动在与VPN连接建立路由学习关系的转发路由器路由表中添加一条路由条目：

  目标网段为转发路由器地址段的黑洞路由，其中转发路由器地址段指已为IPsec连接分配网关IP地址的地址段。
      
  该黑洞路由仅会被传播至转发路由器下VBR实例的路由表中。
- **false**：不允许。',
                            'type' => 'boolean',
                            'example' => 'true',
                          ),
                        ),
                      ),
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '标签信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'TagKey',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'TagValue',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameterCombination.TransitRouter',
            'errorMessage' => 'Region ID is required if no TransitRouterId or CenId specified.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.UnsupportFilterValue',
            'errorMessage' => 'The specified FeatureFilter Value is not supported by this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOperation.UnsupportFilter',
            'errorMessage' => 'The specified FeatureFilter is not supported by this operation.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.TagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.TagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"68521297-5FA6-46CB-B4EB-658F1C68C8CC\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"TransitRouters\\": [\\n    {\\n      \\"CreationTime\\": \\"2021-03-15T09:39Z\\",\\n      \\"Type\\": \\"Enterprise\\",\\n      \\"Status\\": \\"Active\\",\\n      \\"TransitRouterId\\": \\"tr-bp1su1ytdxtataupl****\\",\\n      \\"TransitRouterDescription\\": \\"testdesc\\",\\n      \\"TransitRouterName\\": \\"testname\\",\\n      \\"CenId\\": \\"cen-j3jzhw1zpau2km****\\",\\n      \\"AliUid\\": 1210123456123456,\\n      \\"RegionId\\": \\"cn-hangzhou\\",\\n      \\"SupportMulticast\\": false,\\n      \\"TransitRouterCidrList\\": [\\n        {\\n          \\"Cidr\\": \\"192.168.1.0/24\\",\\n          \\"Name\\": \\"CIDRname\\",\\n          \\"Description\\": \\"CIDRdesc\\",\\n          \\"TransitRouterCidrId\\": \\"cidr-46p5ceg21e8152****\\",\\n          \\"PublishCidrRoute\\": true\\n        }\\n      ],\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"TagKey\\",\\n          \\"Value\\": \\"TagValue\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRoutersResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>68521297-5FA6-46CB-B4EB-658F1C68C8CC</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <TransitRouters>\\n        <CreationTime>2021-03-15T09:39Z</CreationTime>\\n        <Type>Enterprise</Type>\\n        <Status>Active</Status>\\n        <TransitRouterId>tr-bp1su1ytdxtataupl****</TransitRouterId>\\n        <TransitRouterDescription>testdesc</TransitRouterDescription>\\n        <TransitRouterName>testname</TransitRouterName>\\n        <CenId>cen-j3jzhw1zpau2km****</CenId>\\n        <AliUid>1210123456123456</AliUid>\\n        <RegionId>ap-southeast-2</RegionId>\\n        <SupportMulticast>false</SupportMulticast>\\n        <TransitRouterCidrList>\\n            <Cidr>192.168.1.0/24</Cidr>\\n            <Name>CIDRname</Name>\\n            <Description>CIDRdesc</Description>\\n            <TransitRouterCidrId>cidr-46p5ceg21e8152****</TransitRouterCidrId>\\n            <PublishCidrRoute>true</PublishCidrRoute>\\n        </TransitRouterCidrList>\\n    </TransitRouters>\\n</ListTransitRoutersResponse>","errorExample":""}]',
      'title' => '查询云企业网实例下转发路由器实例的信息',
      'summary' => '调用ListTransitRouters接口查询云企业网实例下转发路由器实例的实例类型、实例的状态、转发路由器实例ID、是否开启了组播功能等信息。',
      'description' => '在您调用本接口查询云企业网实例下转发路由器实例的信息时，您可以按需填写参数**RegionId**和**TransitRouterId**，关于这两个参数的关系，请参见以下说明：

- 如果您未输入**RegionId**和**TransitRouterId**的值，则表示您要查询云企业网实例下所有转发路由器实例的信息。
- 如果您只输入了**RegionId**的值，则表示您要查询云企业网实例指定地域下的转发路由器实例的信息。
- 如果您只输入了**TransitRouterId**的值，则表示您要查询云企业网实例中指定的转发路由器实例的信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTransitRouterAvailableResource' => 
    array (
      'summary' => '调用ListTransitRouterAvailableResource接口查询指定地域下企业版转发路由器支持的可用区信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SupportMulticast',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询支持组播功能的可用区的信息。

- **true**：是。

    开启查询功能后，如果**ListTransitRouterAvailableResource**接口返回结果为空，则表示当前地域的企业版转发路由器不支持组播功能。
- **false**（默认值）：否。

',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B4F480E0-4E76-5E43-9966-8322C28A158A',
              ),
              'SlaveZones' => 
              array (
                'description' => '备可用区ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '备可用区ID列表。

您可以调用[DescribeZones](~~36064~~)接口查询可用区ID对应的可用区的信息。',
                  'type' => 'string',
                  'example' => 'cn-hangzhou',
                ),
              ),
              'MasterZones' => 
              array (
                'description' => '主可用区ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '主可用区ID。',
                  'type' => 'string',
                  'example' => 'cn-hangzhou-h',
                ),
              ),
              'AvailableZones' => 
              array (
                'description' => '可用区ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '可用区ID。',
                  'type' => 'string',
                  'example' => 'cn-hangzhou-i',
                ),
              ),
              'SupportMulticast' => 
              array (
                'description' => '是否为支持组播功能的可用区信息。',
                'type' => 'boolean',
                'example' => 'false',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B4F480E0-4E76-5E43-9966-8322C28A158A\\",\\n  \\"SlaveZones\\": [\\n    \\"cn-hangzhou\\"\\n  ],\\n  \\"MasterZones\\": [\\n    \\"cn-hangzhou-h\\"\\n  ],\\n  \\"AvailableZones\\": [\\n    \\"cn-hangzhou-i\\"\\n  ],\\n  \\"SupportMulticast\\": false\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterAvailableResourceResponse>\\n    <SlaveZones>ap-southeast-2b</SlaveZones>\\n    <SlaveZones>ap-southeast-2a</SlaveZones>\\n    <RequestId>B4F480E0-4E76-5E43-9966-8322C28A158A</RequestId>\\n    <MasterZones>ap-southeast-2b</MasterZones>\\n    <AvailableZones>ap-southeast-2b</AvailableZones>\\n    <AvailableZones>ap-southeast-2a</AvailableZones>\\n</ListTransitRouterAvailableResourceResponse>","errorExample":""}]',
      'title' => '查询指定地域下企业版转发路由器支持的可用区信息',
      'description' => '- 您可以调用**ListTransitRouterAvailableResource**接口查询指定地域下企业版转发路由器支持的普通可用区的信息或者支持的组播功能的可用区的信息。
    - 如果您未指定**SupportMulticast**参数的值为**true**，则系统默认只查询企业版转发路由器支持的普通可用区的信息。
    - 如果您指定**SupportMulticast**参数的值为**true**，则系统只查询企业版转发路由器支持的组播功能的可用区的信息。
- 2022年05月31日云企业网对企业版转发路由器连接专有网络VPC（Virtual Private Cloud）的模式进行了优化升级，升级后的企业版转发路由器连接VPC实例时无需指定主备可用区，可任意指定一个或多个可用区。
    - 如果您的企业版转发路由器未经历过升级，在企业版转发路由器连接VPC实例时，您需要指定主备可用区。调用**ListTransitRouterAvailableResource**接口后可以通过**MasterZones**和**SlaveZones**参数获取主备可用区的信息。
    - 如果您的企业版转发路由器经历过升级，在企业版转发路由器连接VPC实例时，您可以指定任意的可用区。调用**ListTransitRouterAvailableResource**接口后可通过**AvailableZones**参数获取企业版转发路由器支持的可用区的信息。

关于企业版转发路由器升级的信息，请参见[企业版转发路由器连接VPC模式升级](~~434191~~)。',
    ),
    'OpenTransitRouterService' => 
    array (
      'summary' => '开通转发路由器服务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，需保证该参数在不同请求间唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'string',
                'example' => '21370700730****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '866DEBE1-6411-51EC-80D8-975349B9FB4A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Risk.RiskControlRejection',
            'errorMessage' => '为保护您的账户安全，下单被中止，详情请联系客服。',
          ),
          1 => 
          array (
            'errorCode' => 'Order.Opened',
            'errorMessage' => '您已开通本服务，请前往控制台使用。',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.NoAvailablePaymentMethod',
            'errorMessage' => 'No payment method is specified for your account. We recommend that you add a payment method.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.BasicInfoUncompleted',
            'errorMessage' => 'Your information is incomplete. Complete your information before the operation.',
          ),
          4 => 
          array (
            'errorCode' => 'PayFor.CreditPayInsufficientBalance',
            'errorMessage' => '额度不足,请联系您的渠道合作伙伴提升额度。',
          ),
          5 => 
          array (
            'errorCode' => 'NoPermission.AliyunServiceRoleForCEN',
            'errorMessage' => 'No permission to open AliyunServiceRole for CEN.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.PurchaseQuantityLimit',
            'errorMessage' => 'You have exceeded the maximum quantity you can purchase.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.QuotaNotEnough',
            'errorMessage' => 'The quota is not enough.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.ConcurrentOperation',
            'errorMessage' => 'The operation failed caused by concurrent operation.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.Risk',
            'errorMessage' => '系统检测到您的支付方式存在风险，请通过邮件或站内信中的链接完成验证。验证完成后重新下单。',
          ),
          10 => 
          array (
            'errorCode' => 'OperationFailed.UseStoredCardFailed',
            'errorMessage' => 'Operation failed because use stored card failed.',
          ),
          11 => 
          array (
            'errorCode' => 'PayFor.AccountMoneyValidateError',
            'errorMessage' => '账号可用金额不足.',
          ),
          12 => 
          array (
            'errorCode' => 'EntityNotExist.Account',
            'errorMessage' => 'The role not exists: AliyunServiceRoleForCEN.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          14 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"OrderId\\": \\"21370700730****\\",\\n  \\"RequestId\\": \\"866DEBE1-6411-51EC-80D8-975349B9FB4A\\"\\n}","type":"json"}]',
      'title' => '开通转发路由器服务',
      'description' => '您可以调用`OpenTransitRouterService`接口免费开通转发路由器服务。开通转发路由器服务后，系统自动生成一个订单，您可以通过`OpenTransitRouterService`接口返回的订单ID在<props="china">[阿里云控制台订单中心](https://usercenter2.aliyun.com/order/list?pageIndex=1&pageSize=20)</props><props="intl">[阿里云控制台订单中心](https://usercenter2-intl.aliyun.com/order/list)</props>查询订单信息。',
    ),
    'CheckTransitRouterService' => 
    array (
      'summary' => '查询当前阿里云账号是否已开通转发路由器服务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，需保证该参数在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Enabled' => 
              array (
                'description' => '当前阿里云账号是否已开通转发路由器服务。

- **true**：表示已开通。
- 如果系统未返回当前参数，则表示当前阿里云账号未开通转发路由器服务，系统会返回对应的提示信息。

        ',
                'type' => 'string',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5D93C8B9-C354-5C3E-BEFB-BA8A2C314D68',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'USER_NOT_OPEN_TR_SERVICE',
            'errorMessage' => 'The user has not open transit router service.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Enabled\\": \\"true\\",\\n  \\"RequestId\\": \\"5D93C8B9-C354-5C3E-BEFB-BA8A2C314D68\\"\\n}","errorExample":""},{"type":"xml","example":"<CheckTransitRouterServiceResponse>\\n    <Enabled>true</Enabled>\\n    <RequestId>5D93C8B9-C354-5C3E-BEFB-BA8A2C314D68</RequestId>\\n</CheckTransitRouterServiceResponse>","errorExample":""}]',
      'title' => '查询当前阿里云账号是否已开通转发路由器服务',
    ),
    'GrantInstanceToTransitRouter' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-44m0p68spvlrqq****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp1h8vbrbcgohcju5****',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的类型。取值：

- **VPC**：表示VPC实例。
- **ExpressConnect**：表示VBR实例。
- **VPN**：表示IPsec连接。
- **ECR**：表示ECR实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'CenOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例所属的阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1250123456123456',
          ),
        ),
        5 => 
        array (
          'name' => 'OrderType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的付费方。取值：

- **PayByCenOwner**：表示网络实例产生的费用由云企业网实例所属的账号承担。
- **PayByResourceOwner**：表示网络实例产生的费用由网络实例所属的账号承担。',
            'type' => 'string',
            'required' => false,
            'example' => 'PayByCenOwner',
            'default' => 'PayByCenOwner',
            'enum' => 
            array (
              0 => 'PayByCenOwner',
              1 => 'PayByResourceOwner',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C6E5992C-A57B-5A6C-9B26-568074DC68BA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.TransitRouterServiceNotOpen',
            'errorMessage' => 'The user has not open transit router service.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission.AliyunServiceRoleForCEN',
            'errorMessage' => 'You are not authorized to create the service linked role. Role Name: AliyunServiceRoleForCEN. Service Name: cen.aliyuncs.com. Make sure that the user has been granted the ram:CreateServiceLinkedRole permission.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.CenId',
            'errorMessage' => 'The specified CenId is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.TaskConflict',
            'errorMessage' => 'The operation is too frequent, please wait a moment and try again.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidVbr.NotFound',
            'errorMessage' => 'vbr is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidInstanceId.NotFound	',
            'errorMessage' => 'InstanceId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C6E5992C-A57B-5A6C-9B26-568074DC68BA\\"\\n}","type":"json"}]',
      'title' => '为转发路由器实例授予连接跨账号网络实例的权限',
      'summary' => '在转发路由器实例连接其他账号的网络实例前，需要其他账号的网络实例对转发路由器实例进行授权。调用GrantInstanceToTransitRouter接口为转发路由器实例进行授权。',
      'description' => '- `GrantInstanceToTransitRouter`接口仅支持为转发路由器实例授予连接跨账号专有网络VPC（Virtual Private Cloud）实例、边界路由器VBR（Virtual Border Router）实例、IPsec连接和专线网关ECR（ExpressConnect Router）实例的权限。
        
    如果需要为转发路由器实例授予连接云连接网CCN（Cloud Connect Network）实例的权限，请调用[GrantInstanceToCbn](~~126141~~)接口。

- 调用`GrantInstanceToTransitRouter`接口前，请确保您已经了解转发路由器的计费规则、授权操作的使用限制以及授权操作的前提条件。更多信息，请参见[跨账号网络实例授权](~~181553~~)。

- 在进行网络实例授权前，请确保完成以下操作：

  已确认网络实例所属账号和转发路由器实例所属账号为同一类型。

  已获取转发路由器实例所属的阿里云账号（主账号）ID。

  已获取转发路由器实例所属的云企业网实例ID。

  在操作VBR实例授权前，请您联系客户经理申请开通VBR实例授权功能。

  在操作IPsec连接授权前，请确保IPsec连接未绑定任何资源：

  如果IPsec连接已绑定VPN网关实例，则不再支持绑定同账号或者跨账号的转发路由器实例。

  如果IPsec连接已绑定转发路由器实例，则需先解除绑定关系。具体操作，请参见[删除网络实例连接](~~181554~~)。',
    ),
    'RevokeInstanceFromTransitRouter' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-44m0p68spvlrqq****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp1h8vbrbcgohcju5****',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的类型。取值：

- **VPC**：表示VPC实例。
- **ExpressConnect**：表示VBR实例。
- **VPN**：表示IPsec连接。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'CenOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例所属的阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1250123456123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AA4BFFD1-5090-5896-935F-4B353557F1A8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.Cen',
            'errorMessage' => 'The status of Cen is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AA4BFFD1-5090-5896-935F-4B353557F1A8\\"\\n}","errorExample":""},{"type":"xml","example":"<RevokeInstanceFromTransitRouterResponse>\\n    <RequestId>AA4BFFD1-5090-5896-935F-4B353557F1A8</RequestId>\\n</RevokeInstanceFromTransitRouterResponse>","errorExample":""}]',
      'title' => '取消转发路由器实例连接跨账号网络实例的权限',
      'summary' => '调用RevokeInstanceFromTransitRouter接口取消转发路由器实例连接跨账号网络实例的权限。',
      'description' => '`RevokeInstanceFromTransitRouter`接口仅支持取消转发路由器实例连接跨账号专有网络VPC（Virtual Private Cloud）实例、边界路由器VBR（Virtual border router）实例和IPsec连接的权限。

如果需要取消转发路由器实例连接跨账号云连接网CCN（Cloud Connect Network）实例的权限，请调用[RevokeInstanceFromCbn](~~126142~~)接口。

## 前提条件

调用`RevokeInstanceFromTransitRouter`接口前，请确保已解除转发路由器实例和网络实例的连接关系。

- 解除企业版转发路由器实例与VPC实例的连接关系，请参见[DeleteTransitRouterVpcAttachment](~~261220~~)。
- 解除企业版转发路由器实例与VBR实例的连接关系，请参见[DeleteTransitRouterVbrAttachment](~~261223~~)。
- 解除企业版转发路由器实例与IPsec连接的连接关系，请参见[DeleteTransitRouterVpnAttachment](~~443992~~)。
- 解除基础版转发路由器实例与网络实例的连接关系，请参见[DetachCenChildInstance](~~65915~~)。',
    ),
    'CreateTransitRouterCidr' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-p0w3x8c9em72a40nw****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器地址段的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器地址段的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        5 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会创建转发路由器地址段。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接创建转发路由器地址段。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'Cidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器地址段。',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.10.0/24',
          ),
        ),
        7 => 
        array (
          'name' => 'PublishCidrRoute',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => '是否允许系统自动在转发路由器路由表中添加转发路由器地址段的路由。

- **true**（默认值）：允许。
       
     如果您选择了允许，则在您创建了私网网关类型的VPN连接，并为私网网关类型的VPN连接创建了路由学习关系后，系统自动在与VPN连接建立路由学习关系的转发路由器路由表中添加一条路由条目：
   
  目标网段为转发路由器地址段的黑洞路由，其中转发路由器地址段指已为IPsec连接分配网关IP地址的地址段。该黑洞路由仅会被传播至转发路由器下VBR实例的路由表中。
- **false**：不允许。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
            'default' => 'True',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TransitRouterCidrId' => 
              array (
                'description' => '转发路由器地址段ID。',
                'type' => 'string',
                'example' => 'cidr-0zv0q9crqpntzz****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0876E54E-3E36-5C31-89F0-9EE8A9266F9A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OverLappingExist.Cidr',
            'errorMessage' => 'The cidr overlapping exist.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterCidr',
            'errorMessage' => 'Transit region does not support the operation.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.Cidr',
            'errorMessage' => 'The specified cidr is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'The specified RegionId is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'InstanceNotExist',
            'errorMessage' => 'The instance is not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TransitRouterCidrId\\": \\"cidr-0zv0q9crqpntzz****\\",\\n  \\"RequestId\\": \\"0876E54E-3E36-5C31-89F0-9EE8A9266F9A\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTransitRouterCidrResponse>\\n    <TransitRouterCidrId>cidr-0zv0q9crqpntzz****</TransitRouterCidrId>\\n    <RequestId>0876E54E-3E36-5C31-89F0-9EE8A9266F9A</RequestId>\\n</CreateTransitRouterCidrResponse>","errorExample":""}]',
      'title' => '创建转发路由器下CIDR地址段',
      'summary' => '转发路由器地址段是您为转发路由器自定义的一个地址段，该地址段类似于为路由器环回口（Loopback接口）分配IP地址的地址段。您可以调用CreateTransitRouterCidr接口创建转发路由器下CIDR地址段。',
      'description' => '转发路由器地址段是您为转发路由器自定义的一个地址段，该地址段类似于为路由器环回口（Loopback接口）分配IP地址的地址段。转发路由器地址段被用于为网络实例连接分配地址。更多信息，请参见[转发路由器地址段](~~462635~~)。

**CreateTransitRouterCidr**接口仅适用于在您创建转发路由器后，为转发路由器添加地址段。

在您创建转发路由器地址段前，请了解以下信息：
- 仅企业版转发路由器支持配置转发路由器地址段。
- 转发路由器地址段功能使用限制，请参见[转发路由器地址段使用限制](~~462635~~)。
- 一个转发路由器最多支持配置5个地址段。每个地址段的子网掩码位数不能少于16位，且不能超过24位。
- 不支持创建100.64.0.0/10、224.0.0.0/4、127.0.0.0/8、169.254.0.0/16及其子网的地址段。
- 每个地址段不能与云企业网实例下所有待互通的网段冲突。
- 同一个云企业网实例下，每个地址段需确保唯一。
- 为转发路由器添加地址段后，您在转发路由器下创建第一个VPN连接时，系统将自动从地址段中划分出三个网段作为系统保留网段，用于系统后台创建VPN连接，且系统将从地址段剩余的网段中为IPsec连接分配IP地址。

    您可以调用[ListTransitRouterCidrAllocation](~~464173~~)接口查询系统已保留或者已分配IP地址的网段信息。',
    ),
    'DeleteTransitRouterCidr' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-p0w3x8c9em72a40nw****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterCidrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器地址段ID。

您可以通过调用[ListTransitRouterCidr](~~462772~~)接口查询转发路由器地址段ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cidr-0zv0q9crqpntzz****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会删除转发路由器地址段。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接删除转发路由器地址段。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0876E54E-3E36-5C31-89F0-9EE8A9266F9A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.CidrBlockAllocated',
            'errorMessage' => 'Cidr blocks are allocated from the cidr, which should be released first.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.CidrNotExist',
            'errorMessage' => 'cidr is not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0876E54E-3E36-5C31-89F0-9EE8A9266F9A\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTransitRouterCidrResponse>\\n    <RequestId>0876E54E-3E36-5C31-89F0-9EE8A9266F9A</RequestId>\\n</DeleteTransitRouterCidrResponse>","errorExample":""}]',
      'title' => '删除转发路由器下CIDR地址段',
      'summary' => '删除转发路由器下CIDR地址段。',
      'description' => '已经分配地址的转发路由器地址段不支持删除。',
    ),
    'ModifyTransitRouterCidr' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-gw8ergozrv77rtbjd****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterCidrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器地址段ID。

您可以通过调用[ListTransitRouterCidr](~~462772~~)接口查询转发路由器地址段ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cidr-0zv0q9crqpntzz****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器地址段的新名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        5 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器地址段新的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        6 => 
        array (
          'name' => 'Cidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新的转发路由器地址段。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.10.0/24',
          ),
        ),
        7 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会修改转发路由器地址段。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接修改转发路由器地址段。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'PublishCidrRoute',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否允许系统自动在转发路由器路由表中添加转发路由器地址段的路由。

- **true**：允许。
       
     如果您选择了允许，则在您创建了私网网关类型的VPN连接，并为私网网关类型的VPN连接创建了路由学习关系后，系统自动在与VPN连接建立路由学习关系的转发路由器路由表中添加一条路由条目：目标网段为转发路由器地址段的黑洞路由，其中转发路由器地址段指已为IPsec连接分配网关IP地址的地址段。
        该黑洞路由仅会被传播至转发路由器下VBR实例的路由表中。
- **false**：不允许。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0876E54E-3E36-5C31-89F0-9EE8A9266F9A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.Cidr',
            'errorMessage' => 'Cidr is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.CidrBlockAllocated',
            'errorMessage' => 'Cidr blocks are allocated from the cidr, which should be released first.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.CidrNotExist',
            'errorMessage' => 'cidr is not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0876E54E-3E36-5C31-89F0-9EE8A9266F9A\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyTransitRouterCidrResponse>\\n    <RequestId>0876E54E-3E36-5C31-89F0-9EE8A9266F9A</RequestId>\\n</ModifyTransitRouterCidrResponse>","errorExample":""}]',
      'title' => '修改转发路由器下的CIDR地址段',
      'summary' => '调用ModifyTransitRouterCidr接口修改转发路由器下的CIDR地址段。',
      'description' => '- 在您修改转发路由器地址段前，建议您先了解[转发路由器地址段使用限制](~~462635~~)。
- 已经分配地址的转发路由器地址段不支持修改。
- 调用**ModifyTransitRouterCidr**接口时如果不涉及**PublishCidrRoute**参数修改，当前接口为同步接口，修改后立即生效。
- 调用**ModifyTransitRouterCidr**接口时如果涉及**PublishCidrRoute**参数修改，当前接口为异步接口，即系统会先返回一个**RequestId**，但转发路由器地址段并未修改完成，系统后台的修改任务仍在进行。您可以调用**ListTransitRouterCidr**接口查询转发路由器地址段的修改状态。
    - 如果转发路由器地址段依旧为修改前的信息，则表示转发路由器地址段在修改中。
    - 如果转发路由器地址段为修改后的信息，则表示转发路由器地址段已修改成功。',
    ),
    'ListTransitRouterCidr' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-p0w3x8c9em72a40nw****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterCidrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器地址段ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cidr-0zv0q9crqpntzz****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会查询转发路由器已添加的地址段。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接查询转发路由器下已添加的地址段。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0876E54E-3E36-5C31-89F0-9EE8A9266F9A',
              ),
              'CidrLists' => 
              array (
                'description' => '转发路由器地址段列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '转发路由器地址段信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TransitRouterCidrId' => 
                    array (
                      'description' => '转发路由器地址段ID。',
                      'type' => 'string',
                      'example' => 'cidr-0zv0q9crqpntzz****',
                    ),
                    'Family' => 
                    array (
                      'description' => '转发路由器地址段类型。

仅取值：**IPv4**，表示转发路由器地址段为IPv4类型的地址段。',
                      'type' => 'string',
                      'example' => 'IPv4',
                    ),
                    'Name' => 
                    array (
                      'description' => '转发路由器地址段的名称。',
                      'type' => 'string',
                      'example' => 'nametest',
                    ),
                    'Description' => 
                    array (
                      'description' => '转发路由器地址段的描述信息。',
                      'type' => 'string',
                      'example' => 'desctest',
                    ),
                    'Cidr' => 
                    array (
                      'description' => '转发路由器地址段。',
                      'type' => 'string',
                      'example' => '192.168.10.0/24',
                    ),
                    'PublishCidrRoute' => 
                    array (
                      'description' => '是否允许系统自动在转发路由器路由表中添加转发路由器地址段的路由。

- **true**：允许。
       
    如果当前参数的返回值为**true**，则在您创建了私网网关类型的VPN连接，并为私网网关类型的VPN连接创建了路由学习关系后，系统自动在与VPN连接建立路由学习关系的转发路由器路由表中添加一条路由条目：
   
  目标网段为转发路由器地址段的黑洞路由，其中转发路由器地址段指已为IPsec连接分配网关IP地址的地址段。
        
  该黑洞路由仅会被传播至转发路由器下VBR实例的路由表中。
- **false**：不允许。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => '转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-p0w3x8c9em72a40nw****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0876E54E-3E36-5C31-89F0-9EE8A9266F9A\\",\\n  \\"CidrLists\\": [\\n    {\\n      \\"TransitRouterCidrId\\": \\"cidr-0zv0q9crqpntzz****\\",\\n      \\"Family\\": \\"IPv4\\",\\n      \\"Name\\": \\"nametest\\",\\n      \\"Description\\": \\"desctest\\",\\n      \\"Cidr\\": \\"192.168.10.0/24\\",\\n      \\"PublishCidrRoute\\": true,\\n      \\"TransitRouterId\\": \\"tr-p0w3x8c9em72a40nw****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterCidrResponse>\\n    <RequestId>0876E54E-3E36-5C31-89F0-9EE8A9266F9A</RequestId>\\n    <CidrLists>\\n        <TransitRouterCidrId>cidr-0zv0q9crqpntzz****</TransitRouterCidrId>\\n        <Family>IPv4</Family>\\n        <Name>nametest</Name>\\n        <Description>desctest</Description>\\n        <Cidr>192.168.10.0/24</Cidr>\\n        <PublishCidrRoute>true</PublishCidrRoute>\\n        <TransitRouterId>tr-p0w3x8c9em72a40nw****</TransitRouterId>\\n    </CidrLists>\\n</ListTransitRouterCidrResponse>","errorExample":""}]',
      'title' => '查询转发路由器下CIDR地址段',
      'summary' => '调用ListTransitRouterCidr接口查询转发路由器下CIDR地址段的信息。',
    ),
    'ListTransitRouterCidrAllocation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-p0w3x8c9em72a40nw****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterCidrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器地址段ID。

您可以通过调用[ListTransitRouterCidr](~~462772~~)接口查询转发路由器地址段ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cidr-0zv0q9crqpntzz****',
          ),
        ),
        4 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器地址段下已分配地址的网段。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.10.0/28',
          ),
        ),
        5 => 
        array (
          'name' => 'Cidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器地址段。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.10.0/24',
          ),
        ),
        6 => 
        array (
          'name' => 'DedicatedOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专用网段。

仅取值：**VPN**，表示您要查询系统保留的用于系统后台创建VPN连接的网段。',
            'type' => 'string',
            'required' => false,
            'example' => 'VPN',
          ),
        ),
        7 => 
        array (
          'name' => 'AttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-2nalp6yksc805w****',
          ),
        ),
        8 => 
        array (
          'name' => 'AttachmentName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        9 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会开始查询转发路由器地址段分配详情。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接查询转发路由器地址段分配详情。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        10 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。

- 如果您不指定**MaxResults**参数的值，则表示您不需要分批次查询。调用该接口后返回参数**MaxResults**的值表示列表条目总数。
- 如果您指定**MaxResults**参数的值，则表示您需要分批次查询。取值范围：**1**~**100**。建议指定**MaxResults**参数的值为**20**。      

  调用该接口后返回参数**MaxResults**的值表示当前查询批次下列表条目的数量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '5',
            'example' => '20',
          ),
        ),
        11 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0876E54E-3E36-5C31-89F0-9EE8A9266F9A',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。

- 如果您未指定请求参数**MaxResults**的值，则表示您不需要分批次查询。返回参数**MaxResults**的值表示列表条目总数。
- 如果您指定了请求参数**MaxResults**的值，则表示您需要分批次查询。返回参数**MaxResults**的值表示当前查询批次下列表条目的数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TransitRouterCidrAllocations' => 
              array (
                'description' => '转发路由器地址段分配详情。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '转发路由器地址段分配详情。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TransitRouterCidrId' => 
                    array (
                      'description' => '转发路由器地址段ID。',
                      'type' => 'string',
                      'example' => 'cidr-0zv0q9crqpntzz****',
                    ),
                    'AllocatedCidrBlock' => 
                    array (
                      'description' => '转发路由器地址段下已分配地址的网段。',
                      'type' => 'string',
                      'example' => '192.168.10.0/28',
                    ),
                    'AttachmentId' => 
                    array (
                      'description' => '网络实例连接ID。',
                      'type' => 'string',
                      'example' => 'tr-attach-2nalp6yksc805w****',
                    ),
                    'Cidr' => 
                    array (
                      'description' => '转发路由器地址段。',
                      'type' => 'string',
                      'example' => '192.168.10.0/24',
                    ),
                    'AttachmentName' => 
                    array (
                      'description' => '网络实例连接的名称。',
                      'type' => 'string',
                      'example' => 'nametest',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The parameter NextToken is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterId',
            'errorMessage' => 'The parameter TransitRouterId or RegionId is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"0876E54E-3E36-5C31-89F0-9EE8A9266F9A\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 1,\\n  \\"TransitRouterCidrAllocations\\": [\\n    {\\n      \\"TransitRouterCidrId\\": \\"cidr-0zv0q9crqpntzz****\\",\\n      \\"AllocatedCidrBlock\\": \\"192.168.10.0/28\\",\\n      \\"AttachmentId\\": \\"tr-attach-2nalp6yksc805w****\\",\\n      \\"Cidr\\": \\"192.168.10.0/24\\",\\n      \\"AttachmentName\\": \\"nametest\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterCidrAllocationResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>0876E54E-3E36-5C31-89F0-9EE8A9266F9A</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <MaxResults>1</MaxResults>\\n    <TransitRouterCidrAllocations>\\n        <TransitRouterCidrId>cidr-0zv0q9crqpntzz****</TransitRouterCidrId>\\n        <AllocatedCidrBlock>192.168.10.0/28</AllocatedCidrBlock>\\n        <AttachmentId>tr-attach-2nalp6yksc805w****</AttachmentId>\\n        <Cidr>192.168.10.0/24</Cidr>\\n        <AttachmentName>nametest</AttachmentName>\\n    </TransitRouterCidrAllocations>\\n</ListTransitRouterCidrAllocationResponse>","errorExample":""}]',
      'title' => '查询CIDR地址段的分配信息',
      'summary' => '调用ListTransitRouterCidrAllocation接口查询CIDR地址段的分配信息。',
    ),
    'CreateTransitRouterVpcAttachment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

>若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-j3jzhw1zpau2km****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-bp1su1ytdxtataupl****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC实例所属地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterAttachmentName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC连接的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterAttachmentDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC连接的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        6 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp1kbjcre9vtsebo1****',
          ),
        ),
        7 => 
        array (
          'name' => 'VpcOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC实例所属阿里云账号（主账号）ID。默认值为当前登录的阿里云账号ID。

> 如果您要加载跨账号的网络实例，本参数必填。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1250123456123456',
          ),
        ),
        8 => 
        array (
          'name' => 'ChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '付费方式。默认值：**POSTPAY**，表示按量付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'POSTPAY',
          ),
        ),
        9 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接创建VPC连接。
- **true**：发送检查请求，只进行校验，不会创建VPC连接。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        10 => 
        array (
          'name' => 'ZoneMappings',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '请在企业版转发路由器的可用区中选择一个交换机实例。

一次最多支持添加10组信息。

',
            'type' => 'array',
            'items' => 
            array (
              'description' => '企业版转发路由器支持的可用区及其对应的交换机实例的信息。',
              'type' => 'object',
              'properties' => 
              array (
                'VSwitchId' => 
                array (
                  'description' => '在企业版转发路由器支持的可用区中选择一个交换机实例。

一次最多支持为10个可用区选择交换机实例。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'vsw-bp1a214sbus8z3b54****',
                ),
                'ZoneId' => 
                array (
                  'description' => '企业版转发路由器支持的可用区的ID。

您可以通过[DescribeZones](~~36064~~)接口查询可用区的ID。

一次最多支持选择10个可用区。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'cn-hangzhou-h',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 10,
          ),
        ),
        11 => 
        array (
          'name' => 'AutoPublishRouteEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否使企业版转发路由器自动发布路由到VPC实例。

- **false**（默认值）：否。
- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        12 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TransitRouterAttachmentId' => 
              array (
                'description' => 'VPC连接ID。',
                'type' => 'string',
                'example' => 'tr-attach-ia340z7xis7t5s****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C087A369-82B9-43EF-91F4-4B63A9C6E6B6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterRegionId',
            'errorMessage' => 'The specified TransitRouterRegion does not support the operation.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission.AliyunServiceRoleForCEN',
            'errorMessage' => 'You are not authorized to create the service linked role. Role Name: AliyunServiceRoleForCEN. Service Name: cen.aliyuncs.com. Make sure that the user has been granted the ram:CreateServiceLinkedRole permission.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'The Specified Parameter RegionId is illegal',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.CenIdOrRegionId',
            'errorMessage' => 'Either CenId or RegionId must be specified.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.ZoneId',
            'errorMessage' => 'The specified ZoneId is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.ChargeType',
            'errorMessage' => 'The specified ChargeType is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidTransitRouterId.NotFound',
            'errorMessage' => 'The specified  TransitRouterId is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcResource',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectStatus.Vpc',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          9 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcOrVswitch',
            'errorMessage' => 'The Vpc Or Vswith is not in a valid state for the attachment operation.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationNotSupport.VpcAutoRoutesPublish',
            'errorMessage' => 'Auto publish vpc routes is not supported in this region.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidOperation.VpnAssociated',
            'errorMessage' => 'The operation is not supported because the VPC is associated with VPN.',
          ),
          12 => 
          array (
            'errorCode' => 'Forbbiden.TransitRouterServiceNotOpen',
            'errorMessage' => 'The user has not open transit router service.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.ZoneMappings',
            'errorMessage' => 'The Specified Parameter ZoneMappings is illegal',
          ),
          14 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The specified TransitRouterType does not support the operation.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidCenId.NotFound',
            'errorMessage' => 'CenId is not found.',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.VSwitchId',
            'errorMessage' => 'VSwitchId is illegal.',
          ),
          17 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterInstance',
            'errorMessage' => 'The status of TransitRouter is incorrect.',
          ),
          18 => 
          array (
            'errorCode' => 'OperationUnsupported.CenFullLevel',
            'errorMessage' => 'CEN full level does not support TransitRouter',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.ServiceMode',
            'errorMessage' => 'ServiceMode is illegal.',
          ),
          20 => 
          array (
            'errorCode' => 'QuotaFull.ChildInstanceRelatedCen',
            'errorMessage' => 'The childinstance has exceed the quota of the times that a childinstance can be attached as an attachment.',
          ),
          21 => 
          array (
            'errorCode' => 'OperationUnsupported.CloudBoxVswNotSupport',
            'errorMessage' => 'Cloud Box vsw does not support.',
          ),
          22 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouter',
            'errorMessage' => 'The status of TransitRouter is incorrect.',
          ),
          23 => 
          array (
            'errorCode' => 'Duplicated.ZoneMapping',
            'errorMessage' => 'The parameter ZoneMapping is duplicated.',
          ),
          24 => 
          array (
            'errorCode' => 'QuotaExceeded.CenQuotaVpcAttachPerTransitRouter',
            'errorMessage' => 'The maximum number of VPC attachment per Transit Router is exceeded.',
          ),
          25 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcRouteTable',
            'errorMessage' => 'The VPC route table is not in a desired state.',
          ),
          26 => 
          array (
            'errorCode' => 'InvalidStatus.VpcAttachedFullModeCen',
            'errorMessage' => 'The VPC has been attached to another CEN instance whose protection level is FULL.',
          ),
          27 => 
          array (
            'errorCode' => 'Forbbiden.AttachChildInstanceAcrossBid',
            'errorMessage' => 'VPCs that belong to another BID cannot be associated. You need to apply for cross-BID attaching.',
          ),
          28 => 
          array (
            'errorCode' => 'InvalidOperation.VpcAutoRoutesPublishInOtherCEN',
            'errorMessage' => 'The specified VPC already has its routes synchronized with another CEN instance.',
          ),
          29 => 
          array (
            'errorCode' => 'QuotaExceeded.VpcAutoRoutesPublishPerTransitRouter',
            'errorMessage' => 'The number of VPCs that have route synchronization enabled has reached the upper limit.',
          ),
          30 => 
          array (
            'errorCode' => 'InsufficientIpAddr.vsw',
            'errorMessage' => 'Insufficient available IP addresses in the vSwitch.',
          ),
          31 => 
          array (
            'errorCode' => 'Forbidden.ResourceOwnerTransitRouterServiceNotOpen',
            'errorMessage' => 'The resource owner user has not opened transit router service.',
          ),
          32 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRegionId',
            'errorMessage' => 'TransitRouterRegionId is illegal.',
          ),
          33 => 
          array (
            'errorCode' => 'InvalidTransitRouterMode.NeedUpgrade',
            'errorMessage' => 'TransitRouter need to upgrade.',
          ),
          34 => 
          array (
            'errorCode' => 'IllegalParam.Ipv6Support',
            'errorMessage' => 'Ipv6Support is illegal. Valid Values are [enable, disable].',
          ),
          35 => 
          array (
            'errorCode' => 'OperationFailed.VSwitchNotFound',
            'errorMessage' => 'The specified vswitch not found.',
          ),
          36 => 
          array (
            'errorCode' => 'OperationFailed.VSwitchIpv6CidrNotAllocated',
            'errorMessage' => 'The specified vswitch does not have IPv6 address allocated.',
          ),
          37 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          38 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'The specified VSwitchId is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.CenInstanceStatus',
            'errorMessage' => 'The CEN instance is not in a valid state for the operation.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcSwitch',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TransitRouterAttachmentId\\": \\"tr-attach-ia340z7xis7t5s****\\",\\n  \\"RequestId\\": \\"C087A369-82B9-43EF-91F4-4B63A9C6E6B6\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTransitRouterVpcAttachmentResponse>\\n    <TransitRouterAttachmentId>tr-attach-ia340z7xis7t5s****</TransitRouterAttachmentId>\\n    <RequestId>C087A369-82B9-43EF-91F4-4B63A9C6E6B6</RequestId>\\n</CreateTransitRouterVpcAttachmentResponse>","errorExample":""}]',
      'title' => '在企业版转发路由器下创建专有网络VPC连接',
      'summary' => '调用CreateTransitRouterVpcAttachment接口将要互通的专有网络VPC（Virtual Private Cloud）实例连接至转发路由器实例。连接后，转发路由器实例可以帮助您实现私网互通。',
      'description' => '- 您可以通过以下两种方式在企业版转发路由器下创建VPC连接：
    - 如果您已经在目标地域创建了企业版转发路由器实例，您可以通过指定**VpcId**、**ZoneMappings.N.VSwitchId**、**ZoneMappings.N.ZoneId**和**TransitRouterId**、**RegionId**创建VPC连接。
    - 如果您在目标地域没有企业版转发路由器实例，您可以通过指定**VpcId**、**ZoneMappings.N.VSwitchId**、**ZoneMappings.N.ZoneId**、**CenId**和**RegionId**创建VPC连接。创建VPC连接时系统为您自动创建企业版转发路由器实例。

- **CreateTransitRouterVpcAttachment**接口属于异步接口，即系统会先返回一个VPC连接ID，但该VPC连接并未创建完成，系统后台的创建任务仍在进行。您可以调用[ListTransitRouterVpcAttachments](~~261222~~)接口查询VPC连接的状态。
    - 当VPC连接处于**Attaching**状态时，表示VPC连接正在创建中，在该状态下，您只能对VPC连接执行查询操作，不能执行其他操作。
    - 当VPC连接处于**Attached**状态时，表示VPC连接创建完成。
- 创建VPC连接后，VPC连接默认不与任何转发路由器路由表建立路由学习关系和关联转发关系。

## 前提条件

在调用本接口创建VPC连接前，请确保满足以下条件：

- VPC实例在企业版转发路由器支持的可用区拥有至少一个交换机实例，且该交换机实例拥有至少一个空闲的IP地址。关于企业版转发路由器支持的地域和可用区信息，请参见[企业版转发路由器支持的地域和可用区](~~181681~~)。
- 如果您要连接跨账号的网络实例，请先获得跨账号网络实例授权。具体操作，请参见[跨账号网络实例授权](~~181553~~)。
- VPC连接创建后会产生费用，请确保您已经了解相关计费规则。更多信息，请参见[计费说明](~~189836~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteTransitRouterVpcAttachment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-ia340z7xis7t5s****',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接删除VPC连接。
- **true**：发送检查请求，只进行校验，不会删除VPC连接。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'Force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制删除VPC连接，取值：
- **false**（默认值）：删除VPC连接前校验是否存在相关资源依赖，如关联转发、路由学习等。如果存在相关依赖，则不允许删除，返回对应错误。
- **true**：删除VPC连接时，默认删除所有相关依赖。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7E61D334-4025-41EF-9145-FC327B35301D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.AttachmentReferencedVpcRouteEntryExisted',
            'errorMessage' => 'Operation is failed because there is at least one route entry which next hop is the specified attachment.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.RouteTablePropagationExist',
            'errorMessage' => 'The specified TransitRouterAttachment has configured RouteTablePropagation. Please remove the configuration first.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.MulticastDomainAssociationExist',
            'errorMessage' => 'The specified TransitRouterAttachment has configured MulticastDomainAssociation. Please remove the configuration first.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The specified TransitRouterType does not support the operation.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.PrefixListExist',
            'errorMessage' => 'Operation failed because PrefixList exists.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidTransitRouterAttachmentId.NotFound',
            'errorMessage' => 'TransitRouterAttachmentId is not found.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcRouteEntry',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcSwitch',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectStatus.Vpc',
            'errorMessage' => 'The resource is not in a valid state for the operation.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.NotSupportForceDelete',
            'errorMessage' => 'Not support force delete attachment.',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcRouteTable',
            'errorMessage' => 'The VPC route table is not in a desired state.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationFailed.RouteEntryExist',
            'errorMessage' => 'Failed to delete the instance because a route table entry points to the instance.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationFailed.RouteTableAssociationExist',
            'errorMessage' => 'Operation failed because there is associated routing table.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          14 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7E61D334-4025-41EF-9145-FC327B35301D\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTransitRouterVpcAttachmentResponse> \\r\\n<RequestId>7E61D334-4025-41EF-9145-FC327B35301D</RequestId>\\r\\n</DeleteTransitRouterVpcAttachmentResponse> ","errorExample":""}]',
      'title' => '删除企业版转发路由器下的专有网络VPC连接',
      'summary' => '调用DeleteTransitRouterVpcAttachment接口删除企业版转发路由器下的专有网络VPC（Virtual Private Cloud）连接。',
      'description' => '**DeleteTransitRouterVpcAttachment**接口属于异步接口，即系统会先返回一个**RequestId**，但该VPC连接并未删除完成，系统后台的删除任务仍在进行。您可以调用**ListTransitRouterVpcAttachments**接口查询VPC连接的状态。 

- 当VPC连接处于**Detaching**状态时，表示VPC连接正在删除中，在该状态下，您只能对VPC连接执行查询操作，不能执行其他操作。
- 当查询不到指定的VPC连接时，表示VPC连接删除完成。

在调用**DeleteTransitRouterVpcAttachment**接口过程时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回**RequestId**，但不会删除企业版转发路由器下的专有网络VPC连接。

### 前提条件
删除VPC连接前，请确保您未使用该VPC实例配置访问PrivateZone的路由。删除访问PrivateZone的路由，请参见[UnroutePrivateZoneInCenToVpc ](~~468375~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateTransitRouterVpcAttachmentAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-nls9fzkfat8934****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC连接的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterAttachmentDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC连接的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接修改VPC连接的名称和描述信息。
- **true**：发送检查请求，只进行校验，不会修改VPC连接的名称和描述信息。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'AutoPublishRouteEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否允许企业版转发路由器自动发布路由到VPC实例。

- **false**：否。
- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7E61D334-4025-41EF-9145-FC327B35301D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterAttachmentId',
            'errorMessage' => 'TransitRouterAttachmentId status is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTransitRouterAttachmentId.NotFound',
            'errorMessage' => 'TransitRouterAttachmentId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOperation.RegionNotSupport',
            'errorMessage' => 'The operation is not supported in this region.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidOperation.VpcAutoRoutesPublishInOtherCEN',
            'errorMessage' => 'The operation is not supported because the VPC is already set autoRoutesPublish in other CEN.',
          ),
          4 => 
          array (
            'errorCode' => 'QuotaExceeded.VpcAutoRoutesPublishPerTransitRouter',
            'errorMessage' => 'The count of VPC instance which set autoRoutesPublish in transitRouter is over limit.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidOperation.VpnAssociated',
            'errorMessage' => 'The operation is not supported because the VPC is associated with VPN.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.Ipv6Support',
            'errorMessage' => 'Ipv6Support is illegal. Valid Values are [enable, disable].',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.VSwitchNotFound',
            'errorMessage' => 'The specified vswitch not found.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.VSwitchIpv6CidrNotAllocated',
            'errorMessage' => 'The specified vswitch does not have IPv6 address allocated.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationInvalid.AttachmentReferencedIPv6RouteEntryExisted',
            'errorMessage' => 'Operation is failed because there is at least one route entry(IPv6) which next hop is the specified attachment.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationInvalid.AttachmentReferencedVpcIPv6RouteEntryExisted',
            'errorMessage' => 'The specified attachment is referenced by vpc route entry(IPv6).',
          ),
          11 => 
          array (
            'errorCode' => 'OperationInvalid.EniReferencedIPv6RouteEntryExisted',
            'errorMessage' => 'Operation is failed because there is at least one route entry(IPv6) which next hop is network interface that the specified attachment referenced.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          13 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7E61D334-4025-41EF-9145-FC327B35301D\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateTransitRouterVpcAttachmentAttributeResponse>\\n    <RequestId>7E61D334-4025-41EF-9145-FC327B35301D</RequestId>\\n</UpdateTransitRouterVpcAttachmentAttributeResponse>","errorExample":""}]',
      'title' => '修改转发路由器下VPC连接信息',
      'summary' => '调用UpdateTransitRouterVpcAttachmentAttribute接口修改企业版转发路由器下VPC连接的名称和描述信息以及是否需要使企业版转发路由器自动发布路由到 VPC 实例。',
      'description' => '**UpdateTransitRouterVpcAttachmentAttribute**接口属于异步接口，即系统会先返回一个**RequestId**，但该VPC连接并未修改完成，系统后台的修改任务仍在进行。您可以调用**ListTransitRouterVpcAttachments**接口查询VPC连接的状态。 

- 当VPC连接处于**Modifying**状态时，表示VPC连接正在修改中，在该状态下，您只能对VPC连接执行查询操作，不能执行其他操作。
- 当VPC连接处于**Attached**状态时，表示VPC连接修改完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateTransitRouterVpcAttachmentZones' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会修改VPC连接的可用区和交换机。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接修改VPC连接的可用区和交换机。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-attach-9bbqyygouv4cpn****',
          ),
        ),
        3 => 
        array (
          'name' => 'AddZoneMappings',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待为VPC连接添加的可用区和交换机列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '待VPC连接添加的交换机ID。

一次最多支持添加10个交换机。',
              'type' => 'object',
              'properties' => 
              array (
                'VSwitchId' => 
                array (
                  'description' => '待为VPC连接添加的交换机ID。

一次最多支持添加10个交换机。

- 如果您当前登录的阿里云账号和VPC实例属于同一个账号，您可以调用[DescribeVSwitches](~~35748~~)接口查询VPC实例下交换机ID及其所属可用区的ID。
- 如果您当前登录的阿里云账号和VPC实例属于不同的账号，您可以调用[ListGrantVSwitchesToCen](~~427599~~)接口查询VPC实例下交换机ID及其所属可用区的ID。

当填写**VSwitchId**后**ZoneId**为必填。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'vsw-wz988dda8ldm4uvmx****',
                ),
                'ZoneId' => 
                array (
                  'description' => '待为VPC连接添加的交换机所属的可用区ID。

一次最多支持添加10个交换机。

当填写**ZoneId**后**VSwitchId**为必填。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cn-hangzhou-h',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
        4 => 
        array (
          'name' => 'RemoveZoneMappings',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '待为VPC连接删除的可用区和交换机列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '待为VPC连接删除的可用区和交换机列表。

一次最多支持输入10组可用区和交换机信息。',
              'type' => 'object',
              'properties' => 
              array (
                'VSwitchId' => 
                array (
                  'description' => '待为VPC连接删除的交换机ID。

一次最多支持删除10个交换机。

当填写**VSwitchId**后**ZoneId**为必填。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'vsw-wz9f5izl6wshndmta****',
                ),
                'ZoneId' => 
                array (
                  'description' => '待为VPC连接删除的交换机所属的可用区ID。

一次最多支持删除10个交换机。

当填写**ZoneId**后**VSwitchId**为必填。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'cn-hangzhou-i',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '595AE52F-49FF-5788-A677-0DD1467941A1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.ZoneId',
            'errorMessage' => 'The specified ZoneId is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterAttachment',
            'errorMessage' => 'The status of TransitRouterAttachment is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.VSwitchId',
            'errorMessage' => 'VSwitchId is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidTransitRouterAttachmentId.NotFound',
            'errorMessage' => 'TransitRouterAttachmentId is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationUnsupported.ServiceMode',
            'errorMessage' => 'The specified TransitRouter does not support the operation.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.AddOrRemoveZoneMappings',
            'errorMessage' => 'The specified AddZoneMappings or RemoveZoneMappings are illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.Vpc',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationDenied.RouteEntryOnEni',
            'errorMessage' => 'Operation is failed because there is at least one route entry which next hop is the specified eni.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcRouteEntry',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          9 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcSwitch',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The specified TransitRouterType does not support the operation.',
          ),
          11 => 
          array (
            'errorCode' => 'InsufficientIpAddr.vsw',
            'errorMessage' => 'Insufficient available IP addresses in the vSwitch.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationFailed.VSwitchIpv6CidrNotAllocated',
            'errorMessage' => 'The specified vswitch does not have IPv6 address allocated.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidTransitRouterMode.NeedUpgrade',
            'errorMessage' => 'TransitRouter need to upgrade.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationInvalid.EniReferencedIPv6RouteEntryExisted',
            'errorMessage' => 'Operation is failed because there is at least one route entry(IPv6) which next hop is network interface that the specified attachment referenced.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          16 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.ZoneId',
            'errorMessage' => 'The specified ZoneId is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVSwitchId.NotFound',
            'errorMessage' => 'The specified VSwitchId is not found.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcSwitch',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"595AE52F-49FF-5788-A677-0DD1467941A1\\"\\n}","type":"json"}]',
      'title' => '修改专有网络VPC连接关联的可用区和交换机',
      'summary' => '调用UpdateTransitRouterVpcAttachmentZones接口修改专有网络VPC（Virtual Private Cloud）连接关联的可用区和交换机。',
      'description' => '- 在为VPC连接添加可用区和交换机时，请确保交换机中拥有一个空闲的IP地址，在修改过程中，企业版转发路由器将在交换机中创建一个弹性网卡ENI（Elastic Network Interface）（该ENI将占用交换机下的一个IP地址），作为VPC实例与企业版转发路由器流量互通的接口。
- **UpdateTransitRouterVpcAttachmentZones**接口属于异步接口，即系统会先返回一个**RequestId**，但该VPC连接并未修改完成，系统后台的修改任务仍在进行。您可以调用**ListTransitRouterVpcAttachments**接口查询VPC连接的状态。

    - 当VPC连接处于**Modifying**状态时，表示VPC连接正在修改中，在该状态下，您只能对VPC连接执行查询操作，不能执行其他操作。
    - 当VPC连接处于**Attached**状态时，表示VPC连接修改完成。

- **VPC连接ID**下至少有一个VPC 连接的可用区和交换机不能全部删除。',
    ),
    'ListTransitRouterVpcAttachments' => 
    array (
      'summary' => '调用ListTransitRouterVpcAttachments接口查询企业版转发路由器下专有网络VPC（Virtual Private Cloud）VPC连接的状态、VPC连接的付费类型、VPC连接的可用区信息及其关联的VPC实例的交换机和弹性网卡信息等。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-j3jzhw1zpau2km****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC连接ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-nls9fzkfat8934****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-bp1su1ytdxtataupl****',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。默认值为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        6 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        7 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp1kbjcre9vtsebo1****',
          ),
        ),
        8 => 
        array (
          'name' => 'OrderType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的付费方。取值：

- **PayByCenOwner**：表示网络实例产生的费用由云企业网实例所属的账号承担。
- **PayByResourceOwner**：表示网络实例产生的费用由网络实例所属的账号承担。',
            'type' => 'string',
            'required' => false,
            'example' => 'PayByCenOwner',
          ),
        ),
        9 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的加载状态。

- **Attaching**：加载中。
- **Attached**：已加载。
- **Detaching**：卸载中。',
            'type' => 'string',
            'required' => false,
            'example' => 'Attached',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C97FF53F-3EF8-4883-B459-60E171924B23',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TransitRouterAttachments' => 
              array (
                'description' => 'VPC连接信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'VPC连接信息列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreationTime' => 
                    array (
                      'description' => 'VPC连接的创建时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mmZ。',
                      'type' => 'string',
                      'example' => '2021-06-15T02:14Z',
                    ),
                    'Status' => 
                    array (
                      'description' => 'VPC连接的状态。

- **Attached**：已加载。
- **Attaching**：加载中。
- **Detaching**：卸载中。',
                      'type' => 'string',
                      'example' => 'Attached',
                    ),
                    'VpcId' => 
                    array (
                      'description' => 'VPC实例ID。',
                      'type' => 'string',
                      'example' => 'vpc-bp1h8vbrbcgohcju5****',
                    ),
                    'TransitRouterAttachmentId' => 
                    array (
                      'description' => 'VPC连接ID。',
                      'type' => 'string',
                      'example' => 'tr-attach-nls9fzkfat8934****',
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => '企业版转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-bp1su1ytdxtataupl****',
                    ),
                    'ResourceType' => 
                    array (
                      'description' => '连接所属的资源类型。

仅取值：**VPC**，表示专有网络实例。
',
                      'type' => 'string',
                      'example' => 'VPC',
                    ),
                    'TransitRouterAttachmentDescription' => 
                    array (
                      'description' => 'VPC连接的描述信息。',
                      'type' => 'string',
                      'example' => 'testdesc',
                    ),
                    'VpcOwnerId' => 
                    array (
                      'description' => 'VPC实例所属账号ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1250123456123456',
                    ),
                    'VpcRegionId' => 
                    array (
                      'description' => 'VPC实例所属地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'TransitRouterAttachmentName' => 
                    array (
                      'description' => 'VPC连接的名称。',
                      'type' => 'string',
                      'example' => 'testname',
                    ),
                    'ZoneMappings' => 
                    array (
                      'description' => 'VPC连接的可用区信息及其关联的VPC实例的交换机和弹性网卡的信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'ZoneId' => 
                          array (
                            'description' => '可用区ID。',
                            'type' => 'string',
                            'example' => 'cn-hangzhou-h',
                          ),
                          'VSwitchId' => 
                          array (
                            'description' => '交换机ID。',
                            'type' => 'string',
                            'example' => 'vsw-bp1a214sbus8z3b54****',
                          ),
                          'NetworkInterfaceId' => 
                          array (
                            'description' => '企业版转发路由器在交换机中创建的弹性网卡的ID。',
                            'type' => 'string',
                            'example' => 'eni-bp149hmyaqegerml****',
                          ),
                        ),
                      ),
                    ),
                    'AutoPublishRouteEnabled' => 
                    array (
                      'description' => '企业版转发路由器是否自动发布路由到VPC实例。

- **false**：否。
- **true**：是。',
                      'type' => 'boolean',
                      'required' => false,
                      'example' => 'true',
                    ),
                    'ChargeType' => 
                    array (
                      'description' => 'VPC连接的付费类型。

仅取值：**POSTPAY**，表示按使用量后付费。',
                      'type' => 'string',
                      'example' => 'POSTPAY',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                        ),
                      ),
                    ),
                    'OrderType' => 
                    array (
                      'description' => '网络实例的付费方。取值：

- **PayByCenOwner**：表示网络实例产生的费用由云企业网实例所属的账号承担。
- **PayByResourceOwner**：表示网络实例产生的费用由网络实例所属的账号承担。',
                      'type' => 'string',
                      'example' => 'PayByCenOwner',
                    ),
                    'CenId' => 
                    array (
                      'description' => '云企业网实例ID。',
                      'type' => 'string',
                      'example' => 'cen-j3jzhw1zpau2km****
',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TrInstance',
            'errorMessage' => 'The specified TransitRouter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.Region',
            'errorMessage' => 'The specified Region is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.CenId',
            'errorMessage' => 'The specified CenId is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterId',
            'errorMessage' => 'The specified TransitRouterId is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.CenIdOrRegionId',
            'errorMessage' => 'The specified CenId or RegionId is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.MaxResults',
            'errorMessage' => 'The specified MaxResults is illegal.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          8 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"C97FF53F-3EF8-4883-B459-60E171924B23\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 20,\\n  \\"TransitRouterAttachments\\": [\\n    {\\n      \\"CreationTime\\": \\"2021-06-15T02:14Z\\",\\n      \\"Status\\": \\"Attached\\",\\n      \\"VpcId\\": \\"vpc-bp1h8vbrbcgohcju5****\\",\\n      \\"TransitRouterAttachmentId\\": \\"tr-attach-nls9fzkfat8934****\\",\\n      \\"TransitRouterId\\": \\"tr-bp1su1ytdxtataupl****\\",\\n      \\"ResourceType\\": \\"VPC\\",\\n      \\"TransitRouterAttachmentDescription\\": \\"testdesc\\",\\n      \\"VpcOwnerId\\": 1250123456123456,\\n      \\"VpcRegionId\\": \\"cn-hangzhou\\",\\n      \\"TransitRouterAttachmentName\\": \\"testname\\",\\n      \\"ZoneMappings\\": [\\n        {\\n          \\"ZoneId\\": \\"cn-hangzhou-h\\",\\n          \\"VSwitchId\\": \\"vsw-bp1a214sbus8z3b54****\\",\\n          \\"NetworkInterfaceId\\": \\"eni-bp149hmyaqegerml****\\"\\n        }\\n      ],\\n      \\"AutoPublishRouteEnabled\\": true,\\n      \\"ChargeType\\": \\"POSTPAY\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"test\\",\\n          \\"Value\\": \\"test\\"\\n        }\\n      ],\\n      \\"OrderType\\": \\"PayByCenOwner\\",\\n      \\"CenId\\": \\"cen-j3jzhw1zpau2km****\\\\n\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterVpcAttachmentsResponse>\\n    <RequestId>C97FF53F-3EF8-4883-B459-60E171924B23</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <MaxResults>20</MaxResults>\\n    <TransitRouterAttachments>\\n        <CreationTime>2021-06-15T02:14Z</CreationTime>\\n        <Status>Attached</Status>\\n        <VpcId>vpc-bp1h8vbrbcgohcju5****</VpcId>\\n        <TransitRouterAttachmentId>tr-attach-nls9fzkfat8934****</TransitRouterAttachmentId>\\n        <TransitRouterId>tr-bp1su1ytdxtataupl****</TransitRouterId>\\n        <ResourceType>VPC</ResourceType>\\n        <TransitRouterAttachmentDescription>testdesc</TransitRouterAttachmentDescription>\\n        <VpcOwnerId>1250123456123456</VpcOwnerId>\\n        <VpcRegionId>cn-hangzhou</VpcRegionId>\\n        <TransitRouterAttachmentName>testname</TransitRouterAttachmentName>\\n        <ZoneMappings>\\n            <ZoneId>cn-hangzhou-h</ZoneId>\\n            <VSwitchId>vsw-bp1a214sbus8z3b54****</VSwitchId>\\n            <NetworkInterfaceId>eni-bp149hmyaqegerml****</NetworkInterfaceId>\\n        </ZoneMappings>\\n        <ChargeType>POSTPAY</ChargeType>\\n    </TransitRouterAttachments>\\n</ListTransitRouterVpcAttachmentsResponse>","errorExample":""}]',
      'title' => '查询企业版转发路由器下专有网络VPC连接的信息',
      'description' => '您可以通过以下三种方式查询企业版转发路由器下VPC连接的信息：

- 通过企业版转发路由器实例ID查询该实例下所有VPC连接的信息。
- 通过云企业网实例ID和企业版转发路由器实例所属地域ID查询该企业版转发路由器实例下所有VPC连接的信息。
- 通过企业版转发路由器实例所属地域ID查询该地域下所有VPC连接的信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateTransitRouterEcrAttachment' => 
    array (
      'summary' => '您可以调用CreateTransitRouterEcrAttachment接口将要互通的专线网关ECR（ExpressConnect Router）网络实例连接到同地域的转发路由器实例中。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'paid',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-bp1su1ytdxtataupl****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'eu-central-1',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterAttachmentName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECR连接的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterAttachmentDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECR连接描述。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        6 => 
        array (
          'name' => 'EcrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联的专线网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ecr-upyc0viial107r****',
          ),
        ),
        7 => 
        array (
          'name' => 'EcrOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECR实例所属阿里云账号（主账号）ID。默认值为当前登录的阿里云账号ID。

> 如果您要加载跨账号的网络实例，本参数必填。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1250123456123456',
          ),
        ),
        8 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会修改VPN连接的配置。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接修改VPN连接的配置。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        9 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息列表。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TransitRouterAttachmentId' => 
              array (
                'description' => 'ECR连接ID。',
                'type' => 'string',
                'example' => 'tr-attach-qieks13jnt1cchy***',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0245BEF-52AC-44A8-A776-EF96FD26A5CA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission.AliyunServiceRolePolicyForCEN',
            'errorMessage' => 'You are not authorized to create the service linked role. Role Name: AliyunServiceRolePolicyForCEN. Service Name: cen.aliyuncs.com. Make sure that the user has been granted the ram:CreateServiceLinkedRole permission.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterRegionId',
            'errorMessage' => 'The specified TransitRouterRegion does not support the operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidCenId.NotFound',
            'errorMessage' => 'CenId is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidStatus.ResourceStatus',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidTransitRouterId.NotFound',
            'errorMessage' => 'TransitRouterId is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbbiden.TransitRouterServiceNotOpen',
            'errorMessage' => 'The user has not open transit router service.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The specified TransitRouterType does not support the operation.',
          ),
          7 => 
          array (
            'errorCode' => 'MissingParam.CenIdOrRegionId',
            'errorMessage' => 'Either CenId or RegionId must be specified.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.AssociateRouteTableId',
            'errorMessage' => 'The specified AssociateRouteTableId is illegal.',
          ),
          9 => 
          array (
            'errorCode' => 'Forbbiden.AttachChildInstanceAcrossBid',
            'errorMessage' => 'Operation is invalid, please apply for cross-bid attaching.',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'RegionId is illegal.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationUnsupported.CenFullLevel',
            'errorMessage' => 'CEN full level does not support TransitRouter',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidOperation.CenInstanceStatus',
            'errorMessage' => 'The CEN instance is not in a valid state for the operation.	',
          ),
          13 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouter',
            'errorMessage' => 'The status of TransitRouter is incorrect.',
          ),
          14 => 
          array (
            'errorCode' => 'QuotaFull.ChildInstanceRelatedCen',
            'errorMessage' => 'The childinstance has exceed the quota of the times that a childinstance can be attached as an attachment.',
          ),
          15 => 
          array (
            'errorCode' => 'Forbidden.ResourceOwnerTransitRouterServiceNotOpen',
            'errorMessage' => 'The resource owner user has not opened transit router service.',
          ),
          16 => 
          array (
            'errorCode' => 'OperationUnsupported.BandwidthType',
            'errorMessage' => 'The specified BandwidthType does not support the operation.',
          ),
          17 => 
          array (
            'errorCode' => 'IllegalParam.BandwidthType',
            'errorMessage' => 'BandwidthType is illegal.',
          ),
          18 => 
          array (
            'errorCode' => 'IncorrectStatus.EcrResource',
            'errorMessage' => 'The ECR resource is not in a valid state for the attachment operation.',
          ),
          19 => 
          array (
            'errorCode' => 'QuotaExceeded.CenQuotaEcrAttachPerTransitRouter',
            'errorMessage' => 'The maximum number of ECR attachment per Transit Router is exceeded.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          21 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"TransitRouterAttachmentId\\": \\"tr-attach-qieks13jnt1cchy***\\",\\n  \\"RequestId\\": \\"C0245BEF-52AC-44A8-A776-EF96FD26A5CA\\"\\n}","type":"json"}]',
      'title' => '在企业版转发路由器下创建专线网关ECR连接',
      'description' => '- 仅企业版转发路由器支持创建ECR连接。
- 您可以通过以下两种方式在企业版转发路由器下创建ECR连接： 

  - 如果您已经在目标地域创建了企业版转发路由器实例，您可以通过指定**EcrId**、**RegionId**和**TransitRouterId**创建ECR连接。 
  - 如果您在目标地域没有企业版转发路由器实例，您可以通过指定**EcrId**、**CenId**和**RegionId**创建ECR连接。创建ECR连接时系统为您自动创建企业版转发路由器实例。 

- CreateTransitRouterEcrAttachment接口属于异步接口，即系统会先返回一个ECR连接ID，但该ECR连接并未创建完成，系统后台的创建任务仍在进行。您可以调用ListTransitRouterEcrAttachments接口查询ECR连接的状态。 

  - 当ECR连接处于**Attaching**状态时，表示ECR连接正在创建中，在该状态下，您只能对ECR连接执行查询操作，不能执行其他操作。 
  - 当ECR连接处于**Attached**状态时，表示ECR连接创建完成。 
- 创建ECR连接后，ECR连接默认不与任何企业版转发路由器路由表建立路由学习关系和关联转发关系。 

  当ECR连接与企业版转发路由器路由表建立[路由学习关系](~~468300~~)后，系统会自动将ECR实例的路由传播至企业版转发路由器路由表中。
- 创建ECR连接后，系统自动将ECR连接关联的企业版转发路由器路由表中的路由传播到ECR实例的路由表中。 

### 前提条件 
- 企业版转发路由器所属的阿里云账号和ECR实例所属的阿里云账号属于同一家企业。 
- 企业版转发路由器支持连接同账号和跨账号的ECR实例。在创建跨账号的ECR连接前，请先获得跨账号ECR实例的授权。具体操作，请参见[跨账号网络实例授权](~~181553~~)。
- **调用本接口创建ECR连接前，请先调用[CreateExpressConnectRouterAssociation](~~2712082~~)接口为ECR实例和企业版转发路由器实例创建关联关系。**

  **当您调用DeleteTransitRouterEcrAttachment接口强制删除ECR连接时，系统将会一并删除ECR实例和企业版转发路由器实例间的关联关系，无需再额外删除。**',
    ),
    'DeleteTransitRouterEcrAttachment' => 
    array (
      'summary' => '调用DeleteTransitRouterEcrAttachment接口删除企业版转发路由器下的专线网关ECR（ExpressConnect Router）连接。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECR连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-r6g0m3epjehw57****',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接修改跨地域连接的配置。
- **true**：发送检查请求，只进行校验，不会修改跨地域连接的配置。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'Force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制删除ECR连接，取值：
- **false**（默认值）：删除ECR连接前校验是否存在相关资源依赖，如关联转发、路由学习等。如果存在相关依赖，则不允许删除，返回对应错误。
- **true**：删除ECR连接时，默认删除所有相关依赖。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.RouteTableAssociationExist',
            'errorMessage' => 'Operation failed because TransitRouterRouteTable exists',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.RouteEntryExist',
            'errorMessage' => 'Operation failed because the TransitRouterAttachment exists in RouteTable.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.RouteTablePropagationExist',
            'errorMessage' => 'The specified TransitRouterAttachment has configured RouteTablePropagation. Please remove the configuration first.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.FlowLogExistOrNisOpened',
            'errorMessage' => 'Operation failed because FlowLog exists or Nis opened.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The specified TransitRouterType does not support the operation.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.NotSupportForceDelete',
            'errorMessage' => 'Not support force delete attachment.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidTransitRouterAttachmentId.NotFound',
            'errorMessage' => 'The TransitRouterAttachmentId is not found.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.PrefixListExist',
            'errorMessage' => 'Operation failed because PrefixList exists.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          9 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectStatus.EcrResource',
            'errorMessage' => 'The ECR resource is not in a valid state for the attachment operation.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1\\"\\n}","type":"json"}]',
      'title' => '删除企业版转发路由器下的专线网关ECR连接',
      'description' => 'DeleteTransitRouterEcrAttachment接口属于异步接口，即系统会先返回一个RequestId，但该ECR连接并未删除完成，系统后台的删除任务仍在进行。您可以调用ListTransitRouterEcrAttachments接口查询ECR连接的状态。

当ECR连接处于Detaching状态时，表示ECR连接正在删除中，在该状态下，您只能对ECR连接执行查询操作，不能执行其他操作。
当查询不到指定的ECR连接时，表示ECR连接删除完成。
在调用DeleteTransitRouterEcrAttachment接口过程时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回RequestId，但不会删除企业版转发路由器下的专线网关ECR连接。',
    ),
    'UpdateTransitRouterEcrAttachmentAttribute' => 
    array (
      'summary' => '调用UpdateTransitRouterEcrAttachmentAttribute接口修改企业版转发路由器下ECR连接的名称、描述信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECR连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-r6g0m3epjehw57****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECR连接的新名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterAttachmentDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECR连接新的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次修改请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认）：发送正常请求，通过检查后直接修改转发路由器实例的信息。
- **true**：发送检查请求，只进行校验，不会修改转发路由器实例的信息。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B457',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTransitRouterAttachmentId.NotFound',
            'errorMessage' => 'TransitRouterAttachmentId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterAttachment',
            'errorMessage' => 'The status of TransitRouterAttachment is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B457\\"\\n}","type":"json"}]',
      'title' => '修改转发路由器下ECR连接信息',
      'description' => 'UpdateTransitRouterEcrAttachmentAttribute接口属于异步接口，即系统会先返回一个RequestId，但该ECR连接并未修改完成，系统后台的修改任务仍在进行。您可以调用ListTransitRouterEcrAttachments接口查询ECR连接的状态。

当ECR连接处于Modifying状态时，表示ECR连接正在修改中，在该状态下，您只能对ECR连接执行查询操作，不能执行其他操作。
当ECR连接处于Attached状态时，表示ECR连接修改完成。',
    ),
    'ListTransitRouterEcrAttachments' => 
    array (
      'summary' => '调用ListTransitRouterEcrAttachments接口查询企业版转发路由器下的专线网关ECR总条目数、连接的状态、连接 ID、网络实例的付费方等连接信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECR实例连接ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-nls9fzkfat8934****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-6ehx7q2jze8ch5ji0****',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时，每次显示的条目数。默认值为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值： 
- 如果**NextToken**为空表示没有下一次查询。 
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        6 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '分批次查询时，下一次查询的Token。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '461EC1B5-04A8-4706-8764-8F5BCEF48A6F',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TransitRouterAttachments' => 
              array (
                'description' => 'ECR实例连接信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreationTime' => 
                    array (
                      'description' => 'ECR实例连接的创建时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mmZ。',
                      'type' => 'string',
                      'example' => '2021-06-15T02:14Z',
                    ),
                    'Status' => 
                    array (
                      'description' => 'ECR连接的状态。

- **Attached**：已加载。
- **Attaching**：加载中。
- **Detaching**：卸载中。',
                      'type' => 'string',
                      'example' => 'Attached',
                    ),
                    'TransitRouterAttachmentId' => 
                    array (
                      'description' => 'ECR实例连接ID。',
                      'type' => 'string',
                      'example' => 'tr-attach-nls9fzkfat8934****',
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => '企业版转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-bp1su1ytdxtataupl****',
                    ),
                    'ResourceType' => 
                    array (
                      'description' => '连接所属的资源类型。

仅取值：**ECR**，表示专线网关实例。',
                      'type' => 'string',
                      'example' => 'ECR',
                    ),
                    'TransitRouterRegionId' => 
                    array (
                      'description' => '转发路由器所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID代表的地域信息。',
                      'type' => 'string',
                      'example' => 'cn-shanghai',
                    ),
                    'TransitRouterAttachmentDescription' => 
                    array (
                      'description' => 'ECR连接的描述信息。',
                      'type' => 'string',
                      'example' => 'desctest',
                    ),
                    'EcrOwnerId' => 
                    array (
                      'description' => 'ECR实例所属阿里云账号（主账号）ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1210123456123456',
                    ),
                    'AutoPublishRouteEnabled' => 
                    array (
                      'description' => '企业版转发路由器是否自动发布路由到ECR实例。

仅取值： **true**，表示自动发布路由。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'EcrId' => 
                    array (
                      'description' => '关联的专线网关实例ID。',
                      'type' => 'string',
                      'example' => 'ecr-n78omt2qsko06y****',
                    ),
                    'TransitRouterAttachmentName' => 
                    array (
                      'description' => 'ECR连接的名称。',
                      'type' => 'string',
                      'example' => 'testname',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                        ),
                      ),
                    ),
                    'CenId' => 
                    array (
                      'description' => '云企业网实例ID。',
                      'type' => 'string',
                      'example' => 'cen-j3jzhw1zpau2km****
',
                    ),
                    'OrderType' => 
                    array (
                      'description' => '网络实例的付费方。取值：

- **PayByCenOwner**：表示ECR实例的连接费和流量处理费由转发路由器实例所属的账号承担。
- **PayByResourceOwner**：表示ECR实例的连接费和流量处理费由ECR实例所属的账号承担。',
                      'type' => 'string',
                      'example' => 'PayByCenOwner',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TrInstance',
            'errorMessage' => 'The specified TransitRouter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.Region',
            'errorMessage' => 'The specified Region is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.CenId',
            'errorMessage' => 'The specified CenId is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterId',
            'errorMessage' => 'The specified TransitRouterId is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.CenIdOrRegionId',
            'errorMessage' => 'The specified CenId or RegionId is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.MaxResults',
            'errorMessage' => 'The specified MaxResults is illegal.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          8 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"461EC1B5-04A8-4706-8764-8F5BCEF48A6F\\",\\n  \\"TotalCount\\": 4,\\n  \\"MaxResults\\": 20,\\n  \\"TransitRouterAttachments\\": [\\n    {\\n      \\"CreationTime\\": \\"2021-06-15T02:14Z\\",\\n      \\"Status\\": \\"Attached\\",\\n      \\"TransitRouterAttachmentId\\": \\"tr-attach-nls9fzkfat8934****\\",\\n      \\"TransitRouterId\\": \\"tr-bp1su1ytdxtataupl****\\",\\n      \\"ResourceType\\": \\"ECR\\",\\n      \\"TransitRouterRegionId\\": \\"cn-shanghai\\",\\n      \\"TransitRouterAttachmentDescription\\": \\"desctest\\",\\n      \\"EcrOwnerId\\": 1210123456123456,\\n      \\"AutoPublishRouteEnabled\\": true,\\n      \\"EcrId\\": \\"ecr-n78omt2qsko06y****\\",\\n      \\"TransitRouterAttachmentName\\": \\"testname\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"test\\",\\n          \\"Value\\": \\"test\\"\\n        }\\n      ],\\n      \\"CenId\\": \\"cen-j3jzhw1zpau2km****\\\\n\\",\\n      \\"OrderType\\": \\"PayByCenOwner\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询企业版转发路由器下的专线网关ECR连接信息',
      'description' => '您可以通过以下三种方式查询企业版转发路由器下ECR连接的信息： 
- 通过企业版转发路由器实例ID查询该实例下所有ECR连接的信息。 
- 通过云企业网实例ID和企业版转发路由器实例所属地域ID查询该实例下所有ECR连接的信息。 
- 单独通过**TransitRouterAttachmentId**参数查询指定ECR连接信息。',
    ),
    'CreateTransitRouterVpnAttachment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会创建VPN连接。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接创建VPN连接。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-rsgxs8ng2awen2****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-p0wm740vjnbaprv0m****',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterAttachmentName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN连接的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        6 => 
        array (
          'name' => 'TransitRouterAttachmentDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN连接的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        7 => 
        array (
          'name' => 'VpnId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vco-p0w042cqwvlhl4zyw****',
          ),
        ),
        8 => 
        array (
          'name' => 'VpnOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IPsec连接所属的阿里云账号（主账号）ID。

- 如果不输入本参数，默认使用当前登录的阿里云账号ID。
- 如果您要连接跨账号的IPsec连接时，本参数必填。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1210123456123456',
          ),
        ),
        9 => 
        array (
          'name' => 'AutoPublishRouteEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否允许转发路由器实例自动向IPsec连接发布路由条目。取值：

- **true**（默认值）：允许。
- **false**：不允许。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        10 => 
        array (
          'name' => 'ChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '计费方式。

仅取值：**POSTPAY**（默认值），表示按使用量付费。',
            'type' => 'string',
            'required' => false,
            'example' => 'POSTPAY',
          ),
        ),
        11 => 
        array (
          'name' => 'Zone',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '当前地域下的可用区ID。

系统将在您指定的可用区下创建资源。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '可用区ID。',
              'type' => 'object',
              'properties' => 
              array (
                'ZoneId' => 
                array (
                  'description' => '可用区ID。

您可以通过调用[ListTransitRouterAvailableResource](~~261356~~)接口获取地域ID。  ',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'cn-hangzhou-h',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'maxItems' => 1,
          ),
        ),
        12 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息列表。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TransitRouterAttachmentId' => 
              array (
                'description' => 'VPN连接ID。',
                'type' => 'string',
                'example' => 'tr-attach-y5dup2qwfyh9lu****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8B5DD40A-3A29-5AC0-B8DA-05FD10D5C893',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission.AliyunServiceRolePolicyForCEN',
            'errorMessage' => 'You are not authorized to create the service linked role. Role Name: AliyunServiceRolePolicyForCEN. Service Name: cen.aliyuncs.com. Make sure that the user has been granted the ram:CreateServiceLinkedRole permission.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterRegionId',
            'errorMessage' => 'The specified TransitRouterRegion does not support the operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidCenId.NotFound',
            'errorMessage' => 'CenId is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidStatus.ResourceStatus',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidTransitRouterId.NotFound',
            'errorMessage' => 'TransitRouterId is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbbiden.TransitRouterServiceNotOpen',
            'errorMessage' => 'The user has not open transit router service.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidTransitRouterMode.NeedUpgrade',
            'errorMessage' => 'TransitRouter need to upgrade.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidAvailable.NoResource',
            'errorMessage' => 'No resource in the available zone.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationUnsupported.VpnAttachment',
            'errorMessage' => 'The specified region does not support the operation.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The specified TransitRouterType does not support the operation.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationFailed.AllocateCidrFailed',
            'errorMessage' => 'Operation failed because vpn allocate cidr failed.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationUnsupported.ZoneId',
            'errorMessage' => 'The specified ZoneId does not support the operation.',
          ),
          12 => 
          array (
            'errorCode' => 'MissingParam.CenIdOrRegionId',
            'errorMessage' => 'Either CenId or RegionId must be specified.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'RegionId is illegal.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationUnsupported.CenFullLevel',
            'errorMessage' => 'CEN full level does not support TransitRouter',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidOperation.CenInstanceStatus',
            'errorMessage' => 'The CEN instance is not in a valid state for the operation.	',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.ZoneMappings',
            'errorMessage' => 'The Specified Parameter ZoneMappings is illegal',
          ),
          17 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouter',
            'errorMessage' => 'The status of TransitRouter is incorrect.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidOperation.VpnNetworkTypeInvalid',
            'errorMessage' => 'The network type of child-instance is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'QuotaExceeded.CenQuotaVpnAttachPerTransitRouter',
            'errorMessage' => 'The maximum number of VPN attachment per Transit Router is exceeded.',
          ),
          20 => 
          array (
            'errorCode' => 'QuotaFull.ChildInstanceRelatedCen',
            'errorMessage' => 'The childinstance has exceed the quota of the times that a childinstance can be attached as an attachment.',
          ),
          21 => 
          array (
            'errorCode' => 'Forbidden.ResourceOwnerTransitRouterServiceNotOpen',
            'errorMessage' => 'The resource owner user has not opened transit router service.',
          ),
          22 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          23 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TransitRouterAttachmentId\\": \\"tr-attach-y5dup2qwfyh9lu****\\",\\n  \\"RequestId\\": \\"8B5DD40A-3A29-5AC0-B8DA-05FD10D5C893\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTransitRouterVpnAttachmentResponse>\\n    <TransitRouterAttachmentId>tr-attach-y5dup2qwfyh9lu****</TransitRouterAttachmentId>\\n    <RequestId>8B5DD40A-3A29-5AC0-B8DA-05FD10D5C893</RequestId>\\n</CreateTransitRouterVpnAttachmentResponse>","errorExample":""}]',
      'title' => '创建VPN连接',
      'summary' => '转发路由器支持连接VPN网关的IPsec连接。本地数据中心可以通过IPsec连接直接连接至转发路由器，然后通过转发路由器实现与其他网络的互通，调用CreateTransitRouterVpnAttachment接口创建VPN连接。',
      'description' => '- 创建VPN连接后，VPN连接默认不与任何转发路由器路由表建立路由学习关系和关联转发关系。
- 在调用`CreateTransitRouterVpnAttachment`接口的过程中，如果您指定了**CenId**、**RegionId**参数的值，则无需指定**TransitRouterId**参数的值；如果您指定了**TransitRouterId**、**RegionId**参数的值，则无需指定**CenId**参数的值。

### 前提条件

- 在创建VPN连接前，请确保您已经在转发路由器实例所在的地域创建了一个IPsec连接，且IPsec连接未绑定任何资源。具体操作，请参见[CreateVpnAttachment](~~442455~~)。
- 如果转发路由器实例需要连接跨账号的IPsec连接，则需确保IPsec连接已对转发路由器实例授权。具体操作，请参见[GrantInstanceToTransitRouter](~~417520~~)。
- 在创建VPN连接之前，请确保您已设置转发路由器的TR地址段。具体操作，请参见[CreateTransitRouterCidr](~~468230~~)。',
    ),
    'DeleteTransitRouterVpnAttachment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会删除VPN连接。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接删除VPN连接。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-attach-b9xj1dv69600kj****',
          ),
        ),
        3 => 
        array (
          'name' => 'Force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制删除VPN连接，取值：
- **false**（默认值）：删除VPN连接前校验是否存在相关资源依赖，如关联转发、路由学习等。如果存在相关依赖，则不允许删除，返回对应错误。
- **true**：删除VPN连接时，默认删除所有相关依赖。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FA43C571-E88B-56C0-8FF8-5646D9B96297',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.RouteTableAssociationExist',
            'errorMessage' => 'Operation failed because TransitRouterRouteTable exists.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.RouteEntryExist',
            'errorMessage' => 'Operation failed because the TransitRouterAttachment exists in RouteTable.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidTransitRouterAttachmentId.NotFound',
            'errorMessage' => 'The TransitRouterAttachmentId is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.NotSupportForceDelete',
            'errorMessage' => 'Not support force delete attachment.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The operation is not supported because of the wrong transitRouter type.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectStatus.ResourceStatus',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.RouteTablePropagationExist',
            'errorMessage' => 'Operation failed because You are not allowed to delete TransitAttachment with TransitRouter RouteTable Associated.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.PrefixListExist',
            'errorMessage' => 'Operation failed because PrefixList exists.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          9 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FA43C571-E88B-56C0-8FF8-5646D9B96297\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTransitRouterVpnAttachmentResponse>\\n    <RequestId>FA43C571-E88B-56C0-8FF8-5646D9B96297</RequestId>\\n</DeleteTransitRouterVpnAttachmentResponse>","errorExample":""}]',
      'title' => '删除VPN连接',
      'summary' => '调用DeleteTransitRouterVpnAttachment接口删除VPN连接。',
      'description' => '在调用**DeleteTransitRouterVpnAttachment**接口过程时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回**RequestId**，但不会删除VPN连接。',
    ),
    'UpdateTransitRouterVpnAttachmentAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会修改VPN连接的配置。检查项包括是否填写了必需参数、请求格式、业务限制。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接修改VPN连接的配置。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-attach-a6p8voaodog5c0****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterAttachmentName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN连接的新名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterAttachmentDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN连接新的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        5 => 
        array (
          'name' => 'AutoPublishRouteEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否允许转发路由器实例自动向IPsec连接发布路由条目。取值：

- **true**：允许。
- **false**：不允许。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1AB038F2-96E5-560B-9F6E-734311D466FA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTransitRouterAttachmentId.NotFound',
            'errorMessage' => 'TransitRouterAttachmentId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterAttachmentId',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1AB038F2-96E5-560B-9F6E-734311D466FA\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateTransitRouterVpnAttachmentAttributeResponse>\\n    <RequestId>1AB038F2-96E5-560B-9F6E-734311D466FA</RequestId>\\n</UpdateTransitRouterVpnAttachmentAttributeResponse>","errorExample":""}]',
      'title' => '修改VPN连接的配置',
      'summary' => '调用UpdateTransitRouterVpnAttachmentAttribute接口修改企业版转发路由器下VPN连接的名称、描述信息、是否允许自动发布路由。',
    ),
    'ListTransitRouterVpnAttachments' => 
    array (
      'summary' => '调用ListTransitRouterVpnAttachment接口查询VPN连接的状态、IPsec连接ID、VPN连接的付费类型等信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '138540',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREcbnY9DL3F',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-rsgxs8ng2awen2****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPN连接ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-a6p8voaodog5c0****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-p0wm740vjnbaprv0m****',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值：**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        6 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '云企业网实例的标签信息。

一次最多支持查询20个标签。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value_A1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3D5530D2-3BBB-524E-8E98-59AB06A250E4',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TransitRouterAttachments' => 
              array (
                'description' => 'VPN连接信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'VPN连接的信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreationTime' => 
                    array (
                      'description' => '创建VPN连接的时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mmZ。',
                      'type' => 'string',
                      'example' => '2022-07-08T08:45Z',
                    ),
                    'Status' => 
                    array (
                      'description' => 'VPN连接的状态。

- **Attached**：已加载。
- **Attaching**：加载中。
- **Detaching**：卸载中。',
                      'type' => 'string',
                      'example' => 'Attached',
                    ),
                    'TransitRouterAttachmentId' => 
                    array (
                      'description' => 'VPN连接ID。',
                      'type' => 'string',
                      'example' => 'tr-attach-a6p8voaodog5c0****',
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => '转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-p0wm740vjnbaprv0m****',
                    ),
                    'ResourceType' => 
                    array (
                      'description' => 'VPN连接所属的资源类型。

仅取值：**VPN**，表示转发路由器连接了IPsec连接。',
                      'type' => 'string',
                      'example' => 'VPN',
                    ),
                    'VpnOwnerId' => 
                    array (
                      'description' => 'IPsec连接所属的阿里云账号（主账号）ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1210123456123456',
                    ),
                    'VpnId' => 
                    array (
                      'description' => 'IPsec连接ID。',
                      'type' => 'string',
                      'example' => 'vco-p0wtu1xgd0l7fjo7k****',
                    ),
                    'TransitRouterAttachmentDescription' => 
                    array (
                      'description' => 'VPN连接的描述信息。',
                      'type' => 'string',
                      'example' => 'desctest',
                    ),
                    'VpnRegionId' => 
                    array (
                      'description' => 'IPsec连接所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'AutoPublishRouteEnabled' => 
                    array (
                      'description' => '是否允许转发路由器实例自动向IPsec连接发布路由条目。取值：

- **true**：允许。
- **false**：不允许。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'TransitRouterAttachmentName' => 
                    array (
                      'description' => 'VPN连接的名称。',
                      'type' => 'string',
                      'example' => 'nametest',
                    ),
                    'Zones' => 
                    array (
                      'description' => '部署VPN连接的可用区列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '部署VPN连接的可用区。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'ZoneId' => 
                          array (
                            'description' => '可用区ID。

您可以通过调用[DescribeZones](~~36064~~)接口查询可用区ID对应的可用区的信息。',
                            'type' => 'string',
                            'example' => 'cn-hangzhou-h',
                          ),
                        ),
                      ),
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签的值。',
                            'type' => 'string',
                            'example' => 'value_A1',
                          ),
                        ),
                      ),
                    ),
                    'ChargeType' => 
                    array (
                      'description' => 'VPN连接的付费类型。

仅取值：POSTPAY，表示按使用量后付费。',
                      'type' => 'string',
                      'example' => 'POSTPAY',
                    ),
                    'CenId' => 
                    array (
                      'description' => '云企业网实例ID。',
                      'type' => 'string',
                      'example' => 'cen-j3jzhw1zpau2km****
',
                    ),
                    'OrderType' => 
                    array (
                      'description' => '网络实例的付费方。取值：

- **PayByCenOwner**：表示网络实例产生的费用由云企业网实例所属的账号承担。
- **PayByResourceOwner**：表示网络实例产生的费用由网络实例所属的账号承担。',
                      'type' => 'string',
                      'example' => 'PayByCenOwner',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TrInstance',
            'errorMessage' => 'The specified TransitRouter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.Region',
            'errorMessage' => 'The specified Region is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.CenId',
            'errorMessage' => 'The specified CenId is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.CenIdOrRegionId',
            'errorMessage' => 'The specified CenId or RegionId is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterId',
            'errorMessage' => 'The specified TransitRouterId is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.MaxResults',
            'errorMessage' => 'The specified MaxResults is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          8 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"3D5530D2-3BBB-524E-8E98-59AB06A250E4\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 20,\\n  \\"TransitRouterAttachments\\": [\\n    {\\n      \\"CreationTime\\": \\"2022-07-08T08:45Z\\",\\n      \\"Status\\": \\"Attached\\",\\n      \\"TransitRouterAttachmentId\\": \\"tr-attach-a6p8voaodog5c0****\\",\\n      \\"TransitRouterId\\": \\"tr-p0wm740vjnbaprv0m****\\",\\n      \\"ResourceType\\": \\"VPN\\",\\n      \\"VpnOwnerId\\": 1210123456123456,\\n      \\"VpnId\\": \\"vco-p0wtu1xgd0l7fjo7k****\\",\\n      \\"TransitRouterAttachmentDescription\\": \\"desctest\\",\\n      \\"VpnRegionId\\": \\"cn-hangzhou\\",\\n      \\"AutoPublishRouteEnabled\\": true,\\n      \\"TransitRouterAttachmentName\\": \\"nametest\\",\\n      \\"Zones\\": [\\n        {\\n          \\"ZoneId\\": \\"cn-hangzhou-h\\"\\n        }\\n      ],\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"test\\",\\n          \\"Value\\": \\"value_A1\\"\\n        }\\n      ],\\n      \\"ChargeType\\": \\"POSTPAY\\",\\n      \\"CenId\\": \\"cen-j3jzhw1zpau2km****\\\\n\\",\\n      \\"OrderType\\": \\"PayByCenOwner\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询VPN连接的信息',
      'description' => '在您调用ListTransitRouterVpnAttachments接口的过程中支持以下三种查询方式：
- 支持单独输入**TransitRouterAttachmentId**查询则查询指定 VPN 连接的信息。
- 支持单独输入**TransitRouterId**查询当前转发路由器下关联的所有 VPN 连接的信息。
- 支持**CenId**、**RegionId**查询当前云企业网中指定地域下的 VPN 连接的信息。

在调用**ListTransitRouterVpnAttachments**接口过程时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回**RequestId**等信息，但不会显示目标查询VPN连接的信息。',
    ),
    'CreateTransitRouterVbrAttachment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-j3jzhw1zpau2km****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-bp1su1ytdxtataupl****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterAttachmentName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR连接名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterAttachmentDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR连接描述。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        6 => 
        array (
          'name' => 'VbrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-bp1svadp4lq38janc****',
          ),
        ),
        7 => 
        array (
          'name' => 'VbrOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例所属阿里云账号（主账号）ID。默认值为当前登录的阿里云账号ID。

> 如果您要加载跨账号的网络实例，本参数必填。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1250123456123456',
          ),
        ),
        8 => 
        array (
          'name' => 'AutoPublishRouteEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否使企业版转发路由器自动发布路由到VBR实例。

- **false**（默认值）：否。
- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        9 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接创建VBR连接。
- **true**：发送检查请求，只进行校验，不会创建VBR连接。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        10 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TransitRouterAttachmentId' => 
              array (
                'description' => 'VBR连接ID。',
                'type' => 'string',
                'example' => 'tr-attach-ia340z7xis7t5s****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C087A369-82B9-43EF-91F4-4B63A9C6E6B6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission.AliyunServiceRolePolicyForCEN',
            'errorMessage' => 'You are not authorized to create the service linked role. Role Name: AliyunServiceRolePolicyForCEN. Service Name: cen.aliyuncs.com. Make sure that the user has been granted the ram:CreateServiceLinkedRole permission.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterRegionId',
            'errorMessage' => 'The specified TransitRouterRegion does not support the operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidCenId.NotFound',
            'errorMessage' => 'CenId is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidStatus.ResourceStatus',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidTransitRouterId.NotFound',
            'errorMessage' => 'TransitRouterId is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'Forbbiden.TransitRouterServiceNotOpen',
            'errorMessage' => 'The user has not open transit router service.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The specified TransitRouterType does not support the operation.',
          ),
          7 => 
          array (
            'errorCode' => 'MissingParam.CenIdOrRegionId',
            'errorMessage' => 'Either CenId or RegionId must be specified.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectStatus.Vpc',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          9 => 
          array (
            'errorCode' => 'Forbidden.VbrDeviceModel',
            'errorMessage' => 'Attach VBR on some access device models are forbidden.',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.AssociateRouteTableId',
            'errorMessage' => 'The specified AssociateRouteTableId is illegal.',
          ),
          11 => 
          array (
            'errorCode' => 'Forbbiden.AttachChildInstanceAcrossBid',
            'errorMessage' => 'Operation is invalid, please apply for cross-bid attaching.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'RegionId is illegal.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationUnsupported.CenFullLevel',
            'errorMessage' => 'CEN full level does not support TransitRouter',
          ),
          14 => 
          array (
            'errorCode' => 'OperationUnsupported.VbrAttachment',
            'errorMessage' => 'This region not support vbr attachment.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidOperation.CenInstanceStatus',
            'errorMessage' => 'The CEN instance is not in a valid state for the operation.	',
          ),
          16 => 
          array (
            'errorCode' => 'OperationUnsupported.CloudBoxVbrNotSupport',
            'errorMessage' => 'Cloud Box Vbr does not support.',
          ),
          17 => 
          array (
            'errorCode' => 'IncorrectStatus.VbrResource',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          18 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouter',
            'errorMessage' => 'The status of TransitRouter is incorrect.',
          ),
          19 => 
          array (
            'errorCode' => 'QuotaExceeded.CenQuotaVbrAttachPerTransitRouter',
            'errorMessage' => 'The maximum number of VBR attachment per Transit Router is exceeded.',
          ),
          20 => 
          array (
            'errorCode' => 'QuotaFull.ChildInstanceRelatedCen',
            'errorMessage' => 'The childinstance has exceed the quota of the times that a childinstance can be attached as an attachment.',
          ),
          21 => 
          array (
            'errorCode' => 'Forbidden.ResourceOwnerTransitRouterServiceNotOpen',
            'errorMessage' => 'The resource owner user has not opened transit router service.',
          ),
          22 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          23 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.VbrDeviceModel',
            'errorMessage' => 'The attached VBR on some access device models are not supported. Please submit a ticket to continue using this VBR on CEN.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TransitRouterAttachmentId\\": \\"tr-attach-ia340z7xis7t5s****\\",\\n  \\"RequestId\\": \\"C087A369-82B9-43EF-91F4-4B63A9C6E6B6\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTransitRouterVbrAttachmentResponse>\\n    <TransitRouterAttachmentId>tr-attach-ia340z7xis7t5s****</TransitRouterAttachmentId>\\n    <RequestId>C087A369-82B9-43EF-91F4-4B63A9C6E6B6</RequestId>\\n</CreateTransitRouterVbrAttachmentResponse>","errorExample":""}]',
      'title' => '在企业版转发路由器下创建边界路由器VBR连接',
      'summary' => '您可以调用CreateTransitRouterVbrAttachment接口将要互通的边界路由器VBR（Virtual Border Router）网络实例连接到同地域的转发路由器实例中。连接后，转发路由器可帮您实现私网互通。',
      'description' => '- 企业版转发路由器支持的地域和可用区信息，请参见[什么是云企业网](~~181681~~)。
- 您可以通过以下两种方式在企业版转发路由器下创建VBR连接：

    - 如果您已经在目标地域创建了企业版转发路由器实例，您可以通过指定**VbrId**、**RegionId**和**TransitRouterId**创建VBR连接。
    - 如果您在目标地域没有企业版转发路由器实例，您可以通过指定**VbrId**、**CenId**和**RegionId**创建VBR连接。创建VBR连接时系统为您自动创建企业版转发路由器实例。

- **CreateTransitRouterVbrAttachment**接口属于异步接口，即系统会先返回一个VBR连接ID，但该VBR连接并未创建完成，系统后台的创建任务仍在进行。您可以调用**ListTransitRouterVbrAttachments**接口查询VBR连接的状态。 

    - 当VBR连接处于**Attaching**状态时，表示VBR连接正在创建中，在该状态下，您只能对VBR连接执行查询操作，不能执行其他操作。
    - 当VBR连接处于**Attached**状态时，表示VBR连接创建完成。

- 转发路由器所属的阿里云账号和VBR实例所属的阿里云账号属于同一家企业。
- 转发路由器支持连接同账号和跨账号的VBR实例。在创建跨账号的VBR连接前，请先获得跨账号VBR实例的授权。具体操作，请参见[跨账号网络实例授权](~~181553~~)。
- 创建VBR连接后，VBR连接默认不与任何转发路由器路由表建立路由学习关系和关联转发关系。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteTransitRouterVbrAttachment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-9nlnjv7by7n7a****',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接删除VBR连接。
- **true**：发送检查请求，只进行校验，不会删除VBR连接。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'Force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制删除VBR连接，取值：
- **false**（默认值）：删除VBR连接前校验是否存在相关资源依赖，如关联转发、路由学习等。如果存在相关依赖，则不允许删除，返回对应错误。
- **true**：删除VBR连接时，默认删除所有相关依赖。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3EDA94DE-0AE5-41FC-A91E-7170E408E0FD',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.RouteTableAssociationExist',
            'errorMessage' => 'Operation failed because TransitRouterRouteTable exists',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.RouteEntryExist',
            'errorMessage' => 'Operation failed because the TransitRouterAttachment exists in RouteTable.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.RouteTablePropagationExist',
            'errorMessage' => 'The specified TransitRouterAttachment has configured RouteTablePropagation. Please remove the configuration first.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.VbrAttachedVbrHa',
            'errorMessage' => ' The operation is failed because of VbrAttachedVbrHa.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.FlowLogExistOrNisOpened',
            'errorMessage' => 'Operation failed because FlowLog exists or Nis opened.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The specified TransitRouterType does not support the operation.',
          ),
          6 => 
          array (
            'errorCode' => 'InstanceReferenced.VpcRouteEntry',
            'errorMessage' => 'The specified attachment is referenced by vpc route entry.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.NotSupportForceDelete',
            'errorMessage' => 'Not support force delete attachment.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidTransitRouterAttachmentId.NotFound',
            'errorMessage' => 'The TransitRouterAttachmentId is not found.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.PrefixListExist',
            'errorMessage' => 'Operation failed because PrefixList exists.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationFailed.VbrWithAllowPrefixes',
            'errorMessage' => 'Operation failed because allow prefixes referenced by vbr exists.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          12 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3EDA94DE-0AE5-41FC-A91E-7170E408E0FD\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTransitRouterVbrAttachmentResponse> \\r\\n<RequestId>3EDA94DE-0AE5-41FC-A91E-7170E408E0FD</RequestId>\\r\\n</DeleteTransitRouterVbrAttachmentResponse> ","errorExample":""}]',
      'title' => '删除企业版转发路由器下的边界路由器VBR连接',
      'summary' => '调用DeleteTransitRouterVbrAttachment接口删除企业版转发路由器下的边界路由器VBR（Virtual border router）连接。',
      'description' => '**DeleteTransitRouterVbrAttachment**接口属于异步接口，即系统会先返回一个**RequestId**，但该VBR连接并未删除完成，系统后台的删除任务仍在进行。您可以调用**ListTransitRouterVbrAttachments**接口查询VBR连接的状态。 

- 当VBR连接处于**Detaching**状态时，表示VBR连接正在删除中，在该状态下，您只能对VBR连接执行查询操作，不能执行其他操作。
- 当查询不到指定的VBR连接时，表示VBR连接删除完成。

在调用DeleteTransitRouterVbrAttachment接口过程时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回RequestId，但不会删除企业版转发路由器下的边界路由器VBR连接。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateTransitRouterVbrAttachmentAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-oyf70wfuorwx87****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR连接的新名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterAttachmentDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR连接新的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        4 => 
        array (
          'name' => 'AutoPublishRouteEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否允许企业版转发路由器向VBR实例中自动发布路由。取值：

- **true**：允许。
- **false**：禁止。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接修改VBR连接的名称和描述信息。
- **true**：发送检查请求，只进行校验，不会修改VBR连接的配置信息。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '91B36DC3-FF8A-45C3-AC1E-456B1789136D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTransitRouterAttachmentId.NotFound',
            'errorMessage' => 'TransitRouterAttachmentId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterAttachment',
            'errorMessage' => 'The status of TransitRouterAttachment is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"91B36DC3-FF8A-45C3-AC1E-456B1789136D\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateTransitRouterVbrAttachmentAttributeResponse>\\n    <RequestId>91B36DC3-FF8A-45C3-AC1E-456B1789136D</RequestId>\\n</UpdateTransitRouterVbrAttachmentAttributeResponse>","errorExample":""}]',
      'title' => '修改转发路由器下VBR连接信息',
      'summary' => '调用UpdateTransitRouterVbrAttachmentAttribute接口修改企业版转发路由器下VBR连接的名称、描述信息、是否允许自动发布路由。',
      'description' => '**UpdateTransitRouterVbrAttachmentAttribute**接口属于异步接口，即系统会先返回一个**RequestId**，但该VBR连接并未修改完成，系统后台的修改任务仍在进行。您可以调用**ListTransitRouterVbrAttachments**接口查询VBR连接的状态。 

- 当VBR连接处于**Modifying**状态时，表示VBR连接正在修改中，在该状态下，您只能对VBR连接执行查询操作，不能执行其他操作。
- 当VBR连接处于**Attached**状态时，表示VBR连接修改完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTransitRouterVbrAttachments' => 
    array (
      'summary' => '调用ListTransitRouterVbrAttachments接口查询企业版转发路由器下的边界路由器VBR总条目数、连接的状态、连接 ID、网络实例的付费方等连接信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-j3jzhw1zpau2km****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR连接ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-oyf70wfuorwx87****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-bp1su1ytdxtataupl****',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时，每次显示的最大条目数。默认值为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'dd20****',
          ),
        ),
        6 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
                'type' => 'string',
                'example' => 'dd20****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F42D9616-29EB-4E75-8CA8-9654D4E07501',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时，每次显示的最大条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TransitRouterAttachments' => 
              array (
                'description' => 'VBR连接信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreationTime' => 
                    array (
                      'description' => 'VBR连接的创建时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mmZ。',
                      'type' => 'string',
                      'example' => '2021-06-15T15:20Z',
                    ),
                    'Status' => 
                    array (
                      'description' => 'VBR连接的状态。

- **Attached**：已加载。
- **Attaching**：加载中。
- **Detaching**：卸载中。',
                      'type' => 'string',
                      'example' => 'Attached',
                    ),
                    'TransitRouterAttachmentId' => 
                    array (
                      'description' => 'VBR连接ID。',
                      'type' => 'string',
                      'example' => 'tr-attach-oyf70wfuorwx87****',
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => '企业版转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-bp1su1ytdxtataupl****',
                    ),
                    'ResourceType' => 
                    array (
                      'description' => '连接所属的资源类型。

仅取值：**VBR**，表示边界路由器实例。',
                      'type' => 'string',
                      'example' => 'VBR',
                    ),
                    'VbrRegionId' => 
                    array (
                      'description' => 'VBR实例所属地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'TransitRouterAttachmentDescription' => 
                    array (
                      'description' => 'VBR连接的描述信息。',
                      'type' => 'string',
                      'example' => 'testdesc',
                    ),
                    'VbrOwnerId' => 
                    array (
                      'description' => 'VBR实例所属账号ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1688111111111111',
                    ),
                    'AutoPublishRouteEnabled' => 
                    array (
                      'description' => '企业版转发路由器是否自动发布路由到VBR实例。

- **false**：否。
- **true**：是。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'VbrId' => 
                    array (
                      'description' => 'VBR实例ID。',
                      'type' => 'string',
                      'example' => 'vbr-bp1svadp4lq38janc****',
                    ),
                    'TransitRouterAttachmentName' => 
                    array (
                      'description' => 'VBR连接的名称。',
                      'type' => 'string',
                      'example' => 'testa',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'value_A1',
                          ),
                        ),
                      ),
                    ),
                    'CenId' => 
                    array (
                      'description' => '云企业网实例ID。',
                      'type' => 'string',
                      'example' => 'cen-j3jzhw1zpau2km****
',
                    ),
                    'OrderType' => 
                    array (
                      'description' => '网络实例的付费方。取值：

- **PayByCenOwner**：表示VBR实例的连接费和流量处理费由转发路由器实例所属的账号承担。
- **PayByResourceOwner**：表示VBR实例的连接费和流量处理费由VBR实例所属的账号承担。',
                      'type' => 'string',
                      'example' => 'PayByCenOwner',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TrInstance',
            'errorMessage' => 'The specified TransitRouter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.Region',
            'errorMessage' => 'The specified Region is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.CenId',
            'errorMessage' => 'The specified CenId is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterId',
            'errorMessage' => 'The specified TransitRouterId is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.CenIdOrRegionId',
            'errorMessage' => 'The specified CenId or RegionId is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.MaxResults',
            'errorMessage' => 'The specified MaxResults is illegal.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          8 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"dd20****\\",\\n  \\"RequestId\\": \\"F42D9616-29EB-4E75-8CA8-9654D4E07501\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 20,\\n  \\"TransitRouterAttachments\\": [\\n    {\\n      \\"CreationTime\\": \\"2021-06-15T15:20Z\\",\\n      \\"Status\\": \\"Attached\\",\\n      \\"TransitRouterAttachmentId\\": \\"tr-attach-oyf70wfuorwx87****\\",\\n      \\"TransitRouterId\\": \\"tr-bp1su1ytdxtataupl****\\",\\n      \\"ResourceType\\": \\"VBR\\",\\n      \\"VbrRegionId\\": \\"cn-hangzhou\\",\\n      \\"TransitRouterAttachmentDescription\\": \\"testdesc\\",\\n      \\"VbrOwnerId\\": 1688111111111111,\\n      \\"AutoPublishRouteEnabled\\": false,\\n      \\"VbrId\\": \\"vbr-bp1svadp4lq38janc****\\",\\n      \\"TransitRouterAttachmentName\\": \\"testa\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"test\\",\\n          \\"Value\\": \\"value_A1\\"\\n        }\\n      ],\\n      \\"CenId\\": \\"cen-j3jzhw1zpau2km****\\\\n\\",\\n      \\"OrderType\\": \\"PayByCenOwner\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterVbrAttachmentsResponse> \\n<TotalCount>1</TotalCount>\\n<RequestId>F42D9616-29EB-4E75-8CA8-9654D4E07501</RequestId>\\n<MaxResults>20</MaxResults>\\n<TransitRouterAttachments>\\n    <TransitRouterAttachmentId>tr-attach-oyf70wfuorwx87****</TransitRouterAttachmentId>\\n    <Status>Attached</Status>\\n    <AutoPublishRouteEnabled>false</AutoPublishRouteEnabled>\\n    <VbrOwnerId>1688111111111111</VbrOwnerId>\\n    <CreationTime>2021-06-15T15:20Z</CreationTime>\\n    <TransitRouterAttachmentName>testa</TransitRouterAttachmentName>\\n    <VbrRegionId>cn-hangzhou</VbrRegionId>\\n    <ResourceType>VBR</ResourceType>\\n    <VbrId>vbr-bp1svadp4lq38janc****</VbrId>\\n</TransitRouterAttachments>\\n</ListTransitRouterVbrAttachmentsResponse> ","errorExample":""}]',
      'title' => '查询企业版转发路由器下的边界路由器VBR连接信息',
      'description' => '您可以通过以下三种方式查询企业版转发路由器下VBR连接的信息：

- 通过企业版转发路由器实例ID查询该实例下所有VBR连接的信息。
- 通过云企业网实例ID和企业版转发路由器实例所属地域ID查询该实例下所有VBR连接的信息。
- 可以单独通过 TransitRouterAttachmentId 参数查询VBR连接信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AttachCenChildInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        1 => 
        array (
          'name' => 'ChildInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定待加载的网络实例的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp18sth14qii3pnvx****',
          ),
        ),
        2 => 
        array (
          'name' => 'ChildInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的类型，取值：

- **VPC**：专有网络。

- **VBR**：边界路由器。

- **CCN**：云连接网。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所在的地域。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'ChildInstanceOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属的阿里云账号ID（主账号）。

>如果您要加载跨账号的网络实例，本参数必填。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1688000000000000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A278B8A6-A5B8-4FDE-9F70-95F0F6A1D68A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.AttachChildInstanceAcrossBid',
            'errorMessage' => 'Operation is invalid, please apply for cross-bid attaching.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcSwitch',
            'errorMessage' => 'Operation is failed because some virtual switch is modifying within the same VPC.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbbiden.CloudBoxVSwitchExist',
            'errorMessage' => 'The operation is not allowed because of cloud box vswitch existed.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.InvalidVpcStatus',
            'errorMessage' => 'Operation is failed because the child-instance is configuring.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.InvalidTransitRouter',
            'errorMessage' => 'Operation failed because the transit router is not supported.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.CenFullLevel',
            'errorMessage' => 'CEN full level does not support vpn bgp.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcRouteTable',
            'errorMessage' => 'The VPC route table is not in a desired state.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          8 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.AttachChildInstance',
            'errorMessage' => 'The attached VBR on some access device models are not supported. Please submit a ticket to continue using this VBR on CEN.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'Bid.NotFound',
            'errorMessage' => 'Not found childInstance Bid by specified AliUid.',
          ),
          1 => 
          array (
            'errorCode' => 'Operation.FailedAndTryAgain',
            'errorMessage' => 'Fail to get customer label by the specified aliUid.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.ChildInstanceRIAlreadyExist',
            'errorMessage' => 'Operation is invalid because the child-instance has already been attached to Express Connect.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbbiden.AttachChildInstanceAcrossUid',
            'errorMessage' => 'Operation is invalid because the child-instance is not authorized to CEN.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOperation.ChildInstanceAlreadyAttached',
            'errorMessage' => 'Operation is invalid because the child-instance has already been attached to another CEN.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidOperation.CenAlreadyAutoPubilshRouteToInstance',
            'errorMessage' => 'Operation is invalid because other cen has already auto published route to this instance.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A278B8A6-A5B8-4FDE-9F70-95F0F6A1D68A\\"\\n}","errorExample":""},{"type":"xml","example":"<AttachCenChildInstanceResponse>\\n    <RequestId>A278B8A6-A5B8-4FDE-9F70-95F0F6A1D68A</RequestId>\\n</AttachCenChildInstanceResponse>","errorExample":""}]',
      'title' => '将网络实例加载到云企业网实例中',
      'summary' => '调用AttachCenChildInstance接口将网络实例加载到云企业网实例中。',
      'description' => '云企业网支持加载跨账号的网络实例，在加载跨账号的网络实例前，云企业网实例需要先获得跨账号的网络实例授权：

- 跨账号专有网络实例授权，请参见[GrantInstanceToCen](~~126224~~)。
- 跨账号云连接网实例授权，请参见[GrantInstanceToCbn](~~126141~~)。
- 跨账号边界路由器实例授权功能默认不开放，如需使用，请联系客户经理申请。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DetachCenChildInstance' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmx****',
          ),
        ),
        1 => 
        array (
          'name' => 'ChildInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待卸载的网络实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp18sth14qii3pnvx****',
          ),
        ),
        2 => 
        array (
          'name' => 'ChildInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的类型。取值：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'ChildInstanceOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1699000000000000',
          ),
        ),
        5 => 
        array (
          'name' => 'CenOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例所属阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1688000000000000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.AttachmentReferencedVpcRouteEntryExisted',
            'errorMessage' => 'Operation is failed because there is at least one route entry which next hop is the specified attachment.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.OptimizationCCNExisted',
            'errorMessage' => 'Operation Forbidden. CCN with optimization is on, please turn it off firstly.',
          ),
          2 => 
          array (
            'errorCode' => 'Forbidden.PrivatezoneRouteExisted',
            'errorMessage' => 'Operation Forbidden. There is a Privatezone Route associated with the instance, please dessociate it firstly.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden.TypeInvalid',
            'errorMessage' => 'The specified ChildInstanceType or TransitRouterType is not supported by this operation.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.Vpc',
            'errorMessage' => 'The resource is not in a valid state for the operation.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.VbrAttachedVbrHa',
            'errorMessage' => ' The operation is failed because of VbrAttachedVbrHa.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.RIInstanceExist',
            'errorMessage' => 'Operation is failed because RI exists.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcRouteTable',
            'errorMessage' => 'The VPC route table is not in a desired state.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.CenReferencedVpcRouteEntryExisted',
            'errorMessage' => 'Operation is failed because there is at least one route entry which next hop is the specified cen.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          10 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'Bid.NotFound',
            'errorMessage' => 'Not found Bid by specified AliUid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}","errorExample":"{\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}"},{"type":"xml","example":"<DetachCenChildInstanceResponse>\\r\\n<RequestId>0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50</RequestId>\\r\\n</DetachCenChildInstanceResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DetachCenChildInstanceResponse>\\n     <RequestId>5903EE99-D542-4E14-BC65-AAC1CB2D3D03</RequestId>\\n</DetachCenChildInstanceResponse>"}]',
      'title' => '从云企业网实例中解绑指定的网络实例',
      'summary' => '调用DetachCenChildInstance接口卸载云企业网实例中的网络实例。',
      'description' => '**DetachCenChildInstance**接口仅支持解绑基础版转发路由器下指定的网络实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCenAttachedChildInstanceAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。    ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-5mv960yjhja0dh****',
          ),
        ),
        1 => 
        array (
          'name' => 'ChildInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例已加载的网络实例ID。           ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-2zebdboka7d7t37vo****',
          ),
        ),
        2 => 
        array (
          'name' => 'ChildInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的类型，取值：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属地域ID。                   

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。          ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-beijing',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => '网络实例的加载状态。

- **Attaching**：加载中。
- **Attached**：已加载。
- **Detaching**：卸载中。',
                'type' => 'string',
                'example' => 'Attached',
              ),
              'ChildInstanceType' => 
              array (
                'description' => '网络实例的类型。

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。',
                'type' => 'string',
                'example' => 'VPC',
              ),
              'ChildInstanceRegionId' => 
              array (
                'description' => '网络实例所属地域ID。',
                'type' => 'string',
                'example' => 'cn-beijing',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'ADD98358-D265-4060-87CB-A2427F5A8944',
              ),
              'ChildInstanceOwnerId' => 
              array (
                'description' => '网络实例所属阿里云账号（主账号）ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1688000000000000',
              ),
              'ChildInstanceId' => 
              array (
                'description' => '网络实例ID。',
                'type' => 'string',
                'example' => 'vpc-2zebdboka7d7t37vo****',
              ),
              'CenId' => 
              array (
                'description' => '云企业网实例ID。 ',
                'type' => 'string',
                'example' => 'cen-5mv960yjhja0dh****',
              ),
              'ChildInstanceName' => 
              array (
                'description' => '网络实例的名称。',
                'type' => 'string',
                'example' => 'defaultvpc',
              ),
              'ChildInstanceAttachTime' => 
              array (
                'description' => '网络实例的加载时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mmZ。',
                'type' => 'string',
                'example' => '2018-07-30T07:53Z',
              ),
              'ChildInstanceRouteTables' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                ),
              ),
              'ChildInstanceAttributes' => 
              array (
                'description' => '网络实例的详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'CidrBlock' => 
                  array (
                    'description' => 'VPC的IPv4网段。',
                    'type' => 'string',
                    'example' => '192.168.0.0/16',
                  ),
                  'SecondaryCidrBlocks' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'secondaryCidrBlock' => 
                      array (
                        'description' => 'VPC附加网段信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => 'VPC附加IPv4网段。',
                          'type' => 'string',
                          'example' => '192.168.20.0/24',
                        ),
                      ),
                    ),
                  ),
                  'Ipv6CidrBlock' => 
                  array (
                    'description' => 'VPC的IPv6网段。',
                    'type' => 'string',
                    'example' => '2408:XXXX:0:a600::/56',
                  ),
                  'Ipv6CidrBlocks' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ipv6CidrBlock' => 
                      array (
                        'description' => 'VPC的IPv6网段信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => 'VPC的IPv6网段信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Ipv6Isp' => 
                            array (
                              'description' => 'VPC的IPv6地址段类型。取值：
- BGP（默认值）：阿里云BGP IPv6。
- ChinaMobile：中国移动（单线）。
- ChinaUnicom：中国联通（单线）。
- ChinaTelecom：中国电信（单线）。

> 
> 如果是开通了单线带宽白名单的用户，该字段可以为ChinaTelecom（中国电信）、ChinaUnicom（中国联通）和ChinaMobile（中国移动）。',
                              'type' => 'string',
                              'example' => 'BGP',
                            ),
                            'Ipv6CidrBlock' => 
                            array (
                              'description' => 'VPC的IPv6网段。',
                              'type' => 'string',
                              'example' => '2408:XXXX:0:6a::/56',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SystemBusy',
            'errorMessage' => 'The system is busy. Please try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterError',
            'errorMessage' => 'The parameter is error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Status\\": \\"Attached\\",\\n  \\"ChildInstanceType\\": \\"VPC\\",\\n  \\"ChildInstanceRegionId\\": \\"cn-beijing\\",\\n  \\"RequestId\\": \\"ADD98358-D265-4060-87CB-A2427F5A8944\\",\\n  \\"ChildInstanceOwnerId\\": 1688000000000000,\\n  \\"ChildInstanceId\\": \\"vpc-2zebdboka7d7t37vo****\\",\\n  \\"CenId\\": \\"cen-5mv960yjhja0dh****\\",\\n  \\"ChildInstanceName\\": \\"defaultvpc\\",\\n  \\"ChildInstanceAttachTime\\": \\"2018-07-30T07:53Z\\",\\n  \\"ChildInstanceAttributes\\": {\\n    \\"CidrBlock\\": \\"192.168.0.0/16\\",\\n    \\"SecondaryCidrBlocks\\": {\\n      \\"secondaryCidrBlock\\": [\\n        \\"192.168.20.0/24\\"\\n      ]\\n    },\\n    \\"Ipv6CidrBlock\\": \\"2408:XXXX:0:a600::/56\\",\\n    \\"Ipv6CidrBlocks\\": {\\n      \\"ipv6CidrBlock\\": [\\n        {\\n          \\"Ipv6Isp\\": \\"BGP\\",\\n          \\"Ipv6CidrBlock\\": \\"2408:XXXX:0:6a::/56\\"\\n        }\\n      ]\\n    }\\n  }\\n}","errorExample":"{\\n    \\"Status\\": \\"Attached\\", \\n    \\"ChildInstanceOwnerId\\": \\"1196226963299553\\", \\n    \\"ChildInstanceId\\": \\"vpc-2zebdboka7d7t37vo2i7n\\", \\n    \\"RequestId\\": \\"ADD98358-D265-4060-87CB-A2427F5A8944\\", \\n    \\"ChildInstanceName\\": \\"defaultvpc\\", \\n    \\"ChildInstanceRegionId\\": \\"cn-beijing\\", \\n    \\"CenId\\": \\"cen-5mv960yjhja0dh7qsb\\", \\n    \\"ChildInstanceAttachTime\\": \\"2018-07-30T07:53Z\\", \\n    \\"ChildInstanceType\\": \\"VPC\\"\\n}}\\n"},{"type":"xml","example":"<DescribeCenAttachedChildInstanceAttributeResponse>\\n  <Status>Attached</Status>\\n  <ChildInstanceOwnerId>1688000000000000</ChildInstanceOwnerId>\\n  <ChildInstanceId>vpc-2zebdboka7d7t37vo****</ChildInstanceId>\\n  <RequestId>ADD98358-D265-4060-87CB-A2427F5A8944</RequestId>\\n  <ChildInstanceName>defaultvpc</ChildInstanceName>\\n  <ChildInstanceRegionId>cn-beijing</ChildInstanceRegionId>\\n  <CenId>cen-5mv960yjhja0dh****</CenId>\\n  <ChildInstanceAttachTime>2018-07-30T07:53Z</ChildInstanceAttachTime>\\n  <ChildInstanceType>VPC</ChildInstanceType>\\n</DescribeCenAttachedChildInstanceAttributeResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<DescribeCenAttachedChildInstanceAttribute>\\n  <Status>Attached</Status>\\n  <ChildInstanceOwnerId>1196226963299553</ChildInstanceOwnerId>\\n  <ChildInstanceId>vpc-2zebdboka7d7t37vo2i7n</ChildInstanceId>\\n  <RequestId>ADD98358-D265-4060-87CB-A2427F5A8944</RequestId>\\n  <ChildInstanceName>defaultvpc</ChildInstanceName>\\n  <ChildInstanceRegionId>cn-beijing</ChildInstanceRegionId>\\n  <CenId>cen-5mv960yjhja0dh7qsb</CenId>\\n  <ChildInstanceAttachTime>2018-07-30T07:53Z</ChildInstanceAttachTime>\\n  <ChildInstanceType>VPC</ChildInstanceType>\\n</DescribeCenAttachedChildInstanceAttribute>\\n"}]',
      'title' => '查看网络实例（VPC、VBR、CCN）详细信息',
      'summary' => '调用DescribeCenAttachedChildInstanceAttribute接口查看加载到CEN中的网络实例（VPC、VBR、CCN）的网络实例的加载状态、网络实例的类型等详细信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCenAttachedChildInstances' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值为**10**，取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-j3jzhw1zpau2km****',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的类型，取值：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
          ),
        ),
        4 => 
        array (
          'name' => 'ChildInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属地域ID。                   

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。          ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-zhangjiakou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B2063B16-852B-5B66-B73D-4ED4D1A5E5C2',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'ChildInstances' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ChildInstance' => 
                  array (
                    'description' => '云企业网实例加载的网络实例信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ChildInstanceType' => 
                        array (
                          'description' => '网络实例的类型，取值：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。',
                          'type' => 'string',
                          'example' => 'VPC',
                        ),
                        'Status' => 
                        array (
                          'description' => '网络实例的状态，取值：

- **Attaching**：加载中。

- **Attached**：已加载。

- **Detaching**：卸载中。',
                          'type' => 'string',
                          'example' => 'Attached',
                        ),
                        'ChildInstanceRegionId' => 
                        array (
                          'description' => '网络实例所属地域ID。',
                          'type' => 'string',
                          'example' => 'cn-zhangjiakou',
                        ),
                        'ChildInstanceOwnerId' => 
                        array (
                          'description' => '网络实例所属阿里云账号（主账号）ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1688000000000000',
                        ),
                        'ChildInstanceId' => 
                        array (
                          'description' => '网络实例ID。',
                          'type' => 'string',
                          'example' => 'vpc-8vb1lu55yt9rlwgxl****',
                        ),
                        'CenId' => 
                        array (
                          'description' => '云企业网实例ID。',
                          'type' => 'string',
                          'example' => 'cen-j3jzhw1zpau2km****',
                        ),
                        'ChildInstanceAttachTime' => 
                        array (
                          'description' => '网络实例的加载时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mmZ。',
                          'type' => 'string',
                          'example' => '2021-08-10T06:27Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"B2063B16-852B-5B66-B73D-4ED4D1A5E5C2\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"ChildInstances\\": {\\n    \\"ChildInstance\\": [\\n      {\\n        \\"ChildInstanceType\\": \\"VPC\\",\\n        \\"Status\\": \\"Attached\\",\\n        \\"ChildInstanceRegionId\\": \\"cn-zhangjiakou\\",\\n        \\"ChildInstanceOwnerId\\": 1688000000000000,\\n        \\"ChildInstanceId\\": \\"vpc-8vb1lu55yt9rlwgxl****\\",\\n        \\"CenId\\": \\"cen-j3jzhw1zpau2km****\\",\\n        \\"ChildInstanceAttachTime\\": \\"2021-08-10T06:27Z\\"\\n      }\\n    ]\\n  }\\n}","errorExample":"{\\n   \\"PageNumber\\":1,\\n   \\"ChildInstances\\":{\\n      \\"ChildInstance\\":[\\n         {\\n            \\"Status\\":\\"Attached\\",\\n            \\"ChildInstanceOwnerId\\":\\"1894573272823690\\",\\n            \\"ChildInstanceId\\":\\"vpc-hp3kz27b1uv9hsmm9vqiv\\",\\n            \\"ChildInstanceRegionId\\":\\"cn-huhehaote\\",\\n            \\"CenId\\":\\"cen-kojok19x3j0q6kx5qf\\",\\n            \\"ChildInstanceType\\":\\"VPC\\"\\n         },\\n         {\\n            \\"Status\\":\\"Attached\\",\\n            \\"ChildInstanceOwnerId\\":\\"1894573272823690\\",\\n            \\"ChildInstanceId\\":\\"vpc-gw85r5kr8urw957szm455\\",\\n            \\"ChildInstanceRegionId\\":\\"eu-central-1\\",\\n            \\"CenId\\":\\"cen-kojok19x3j0q6kx5qf\\",\\n            \\"ChildInstanceType\\":\\"VPC\\"\\n         }\\n      ]\\n   },\\n   \\"TotalCount\\":3,\\n   \\"PageSize\\":10,\\n   \\"RequestId\\":\\"50F8E0AB-A225-41C0-AC88-FFB51A4F5C72\\"\\n}"},{"type":"xml","example":"<DescribeCenAttachedChildInstancesResponse>\\n<TotalCount>1</TotalCount>\\n<PageSize>10</PageSize>\\n<RequestId>B2063B16-852B-5B66-B73D-4ED4D1A5E5C2</RequestId>\\n<PageNumber>1</PageNumber>\\n<ChildInstances>\\n    <ChildInstance>\\n        <Status>Attached</Status>\\n        <ChildInstanceType>VPC</ChildInstanceType>\\n        <CenId>cen-j3jzhw1zpau2kmscxd</CenId>\\n        <ChildInstanceAttachTime>2021-08-10T06:27Z</ChildInstanceAttachTime>\\n        <ChildInstanceOwnerId>1688401595963306</ChildInstanceOwnerId>\\n        <ChildInstanceId>vpc-8vb1lu55yt9rlwgxlu83b</ChildInstanceId>\\n        <ChildInstanceRegionId>cn-zhangjiakou</ChildInstanceRegionId>\\n    </ChildInstance>\\n</ChildInstances>\\n</DescribeCenAttachedChildInstancesResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DescribeCenAttachedChildInstancesResponse>\\n   <ChildInstances        <ChildInstance>\\n            <CenId>cen-kojok19x3j0q6kx5qf</CenId>\\n            <ChildInstanceId>vpc-hp3kz27b1uv9hsmm9vqiv</ChildInstanceId>\\n            <ChildInstanceOwnerId>1894573272823690</ChildInstanceOwnerId>\\n            <ChildInstanceRegionId>cn-huhehaote</ChildInstanceRegionId>\\n            <ChildInstanceType>VPC</ChildInstanceType>\\n            <Status>Attached</Satus>\\n        </ChildIntance>\\n        <ChildInstance>\\n            <CenId>cen-kojok19x3j0q6kx5qf</CenId>\\n            <ChildInstanceId>vpc-gw85r5kr8urw957szm455</ChildInstanceId>\\n            <ChildInstanceOwnerId>1894573272823690</ChildInstanceOwnerId>\\n            <ChildInstanceRegionId>eu-central-1</ChildInstanceRegionId>\\n            <ChildInstanceType>VPC</ChildInstanceType>\\n            <Status>Attched</Status>\\n    e>\\n      </ChildInstance>\\n   </ChildInstances>\\n   <PageNumber>1</PageNumber>\\n   <PageSize>10</PageSize>\\n   <RequestId>50F8E0AB-A225-41C0-AC88-FFB51A4F5C72</RequestId>\\n   <TotalCount>3</TotalCount>\\n</DescribeCenAttachedChildInstancesResponse>"}]',
      'title' => '查询云企业网实例下已加载的网络实例信息',
      'summary' => '调用DescribeCenAttachedChildInstances接口查询云企业网实例下已加载的网络实例信息。',
      'description' => '通过本接口您可以使用以下三种方式查询云企业网实例已加载的网络实例的信息：

- 通过指定查询`CenId`，查询云企业网实例下已加载的所有网络实例的信息。
- 通过指定`CenId`和`ChildInstanceRegionId`，查询云企业网实例在某一个地域下已加载的网络实例的信息。
- 通过指定`CenId`和`ChildInstanceType`，查询云企业网实例已加载的某一类型的网络实例的信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeChildInstanceRegions' => 
    array (
      'summary' => '调用DescribeChildInstanceRegions接口查询云企业网支持加载网络实例的地域信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的类型，取值：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
          ),
        ),
        1 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '支持的语言。包括以下取值：中文：zh-CN（默认值）                                 英文：en-US                                 日文：ja',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D5CEED59-36AA-47CC-9D81-16F71C46BD80',
              ),
              'Regions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Region' => 
                  array (
                    'description' => '地域信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'LocalName' => 
                        array (
                          'description' => '地域名称',
                          'type' => 'string',
                          'example' => '华东 1',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter.OwnerIdOrOwnerAccount',
            'errorMessage' => 'The input parameter OwnerAccount or OwnerId that is mandatory for processing this request is not supplied',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D5CEED59-36AA-47CC-9D81-16F71C46BD80\\",\\n  \\"Regions\\": {\\n    \\"Region\\": [\\n      {\\n        \\"LocalName\\": \\"华东 1\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeChildInstanceRegionsResponse>\\n<RequestId>D5CEED59-36AA-47CC-9D81-16F71C46BD80</RequestId>\\n<Regions>\\n    <Region>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <LocalName>华东 1</LocalName>\\n    </Region>\\n</Regions>\\n</DescribeChildInstanceRegionsResponse>","errorExample":""}]',
      'title' => '查询云企业网支持加载网络实例的地域信息',
      'description' => '对于不同的网络实例类型，云企业网支持的地域不同。您可以通过指定`ProductType`参数，查询不同网络实例类型下云企业网支持的地域信息。如果您不指定`ProductType`参数，则系统默认查询所有网络实例类型下云企业网支持的地域信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGrantRulesToCen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属地域ID。                   

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-nye53d7p3hzyu4****',
          ),
        ),
        2 => 
        array (
          'name' => 'ProductType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的类型，取值：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：IPsec连接。

- **ECR**：专线网关实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 如果您不指定**MaxResults**参数的值，则表示您不需要分批次查询。调用接口后返回参数**MaxResults**的值表示列表条目总数。
- 如果您指定**MaxResults**参数的值，则表示您需要分批次查询，**MaxResults**的值表示分批次查询时每次显示的条目数。取值范围：**1**~**100**。调用接口后返回参数**MaxResults**的值表示当前查询批次下列表条目的数量。建议指定**MaxResults**参数的值为**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '100',
            'minimum' => '0',
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        5 => 
        array (
          'name' => 'ChildInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的网络实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-rj9gt5nll27onu7****',
          ),
        ),
        6 => 
        array (
          'name' => 'ChildInstanceOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1250123456123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4906B209-8613-5C19-9CC9-B7A3FFDA731C',
              ),
              'GrantRules' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'GrantRule' => 
                  array (
                    'description' => '授权信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '网络实例信息列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ChildInstanceType' => 
                        array (
                          'description' => '网络实例的类型。

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：IPsec连接。

- **ECR**：专线网关实例。',
                          'type' => 'string',
                          'example' => 'VPC',
                        ),
                        'ChildInstanceRegionId' => 
                        array (
                          'description' => '网络实例所属地域ID。    ',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'ChildInstanceOwnerId' => 
                        array (
                          'description' => '网络实例所属阿里云账号（主账号）ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1250123456123456',
                        ),
                        'ChildInstanceId' => 
                        array (
                          'description' => '网络实例ID。',
                          'type' => 'string',
                          'example' => 'vpc-bp1rgeww9mdstuuar****',
                        ),
                        'CenId' => 
                        array (
                          'description' => '云企业网实例ID。',
                          'type' => 'string',
                          'example' => 'cen-nye53d7p3hzyu4****',
                        ),
                        'OrderType' => 
                        array (
                          'description' => '网络实例的付费方。取值：

- **PayByCenOwner**：表示网络实例产生的转发路由器连接费、转发路由器流量处理费由云企业网实例所属的账号承担。
- **PayByResourceOwner**：表示网络实例产生的转发路由器连接费、转发路由器流量处理费由网络实例所属的账号承担。
',
                          'type' => 'string',
                          'example' => 'PayByCenOwner',
                        ),
                        'CenOwnerId' => 
                        array (
                          'description' => '云企业网实例所属的阿里云账号（主账号）ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1210123456123456',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '授权创建的时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mmZ。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2024-01-24T16:27Z',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '- 如果您未指定请求参数**MaxResults**的值，则表示您不需要分批次查询。返回参数**MaxResults**的值表示列表条目总数。
- 如果您指定了请求参数**MaxResults**的值，则表示您需要分批次查询。返回参数**MaxResults**的值表示当前查询批次下列表条目的数量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'Missing parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter.RegionId',
            'errorMessage' => 'The specified Region Id is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4906B209-8613-5C19-9CC9-B7A3FFDA731C\\",\\n  \\"GrantRules\\": {\\n    \\"GrantRule\\": [\\n      {\\n        \\"ChildInstanceType\\": \\"VPC\\",\\n        \\"ChildInstanceRegionId\\": \\"cn-hangzhou\\",\\n        \\"ChildInstanceOwnerId\\": 1250123456123456,\\n        \\"ChildInstanceId\\": \\"vpc-bp1rgeww9mdstuuar****\\",\\n        \\"CenId\\": \\"cen-nye53d7p3hzyu4****\\",\\n        \\"OrderType\\": \\"PayByCenOwner\\",\\n        \\"CenOwnerId\\": 1210123456123456,\\n        \\"CreateTime\\": 0\\n      }\\n    ]\\n  },\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 20,\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeGrantRulesToCenResponse>\\n    <RequestId>4906B209-8613-5C19-9CC9-B7A3FFDA731C</RequestId>\\n    <GrantRules>\\n        <ChildInstanceType>VPC</ChildInstanceType>\\n        <ChildInstanceRegionId>cn-hangzhou</ChildInstanceRegionId>\\n        <ChildInstanceOwnerId>1250123456123456</ChildInstanceOwnerId>\\n        <ChildInstanceId>vpc-bp1rgeww9mdstuuar****</ChildInstanceId>\\n        <CenId>cen-nye53d7p3hzyu4****</CenId>\\n        <OrderType>PayByCenOwner</OrderType>\\n        <CenOwnerId>1210123456123456</CenOwnerId>\\n    </GrantRules>\\n    <TotalCount>1</TotalCount>\\n    <MaxResults>20</MaxResults>\\n</DescribeGrantRulesToCenResponse>","errorExample":""}]',
      'title' => '查看网络实例对云企业网实例的授权关系',
      'summary' => '调用DescribeGrantRulesToCen接口查询云企业网实例已获得授权的跨账号的网络实例的信息。',
      'description' => '在调用**DescribeGrantRulesToCen**接口过程时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回**RequestId**，但不会显示云企业网实例已获得授权的跨账号的网络实例的信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListGrantVSwitchesToCen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC实例所属地域ID。

您可以调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-44m0p68spvlrqq****',
          ),
        ),
        2 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp12ge2tq5gzdc915****',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '1000',
            'minimum' => '0',
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。取值范围：**1**~**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'ZoneId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可用区ID。

- 如果您指定可用区ID，则系统只查询VPC实例位于当前可用区的交换机的信息。
- 如果您不指定可用区ID，则系统默认查询该VPC实例位于所有可用区的交换机的信息。

您可以调用[DescribeZones](~~36064~~)接口获取可用区ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou-h',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A9288C78-881A-5D30-A8A9-68E05EE0A086',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'VSwitches' => 
              array (
                'description' => '交换机信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '交换机的信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'VpcId' => 
                    array (
                      'description' => '交换机所属的VPC实例ID。',
                      'type' => 'string',
                      'example' => 'vpc-bp12ge2tq5gzdc915****',
                    ),
                    'ZoneId' => 
                    array (
                      'description' => '交换机所属的可用区ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou-h',
                    ),
                    'VSwitchId' => 
                    array (
                      'description' => '交换机实例ID。',
                      'type' => 'string',
                      'example' => 'vsw-bp1194lh263wx1gsk****',
                    ),
                    'VSwitchName' => 
                    array (
                      'description' => '交换机实例的名称。',
                      'type' => 'string',
                      'example' => 'nametest',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"A9288C78-881A-5D30-A8A9-68E05EE0A086\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 2,\\n  \\"VSwitches\\": [\\n    {\\n      \\"VpcId\\": \\"vpc-bp12ge2tq5gzdc915****\\",\\n      \\"ZoneId\\": \\"cn-hangzhou-h\\",\\n      \\"VSwitchId\\": \\"vsw-bp1194lh263wx1gsk****\\",\\n      \\"VSwitchName\\": \\"nametest\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListGrantVSwitchesToCenResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>A9288C78-881A-5D30-A8A9-68E05EE0A086</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>2</TotalCount>\\n    <VSwitches>\\n        <VpcId>vpc-bp12ge2tq5gzdc915****</VpcId>\\n        <ZoneId>cn-hangzhou-h</ZoneId>\\n        <VSwitchId>vsw-bp1194lh263wx1gsk****</VSwitchId>\\n        <VSwitchName>nametest</VSwitchName>\\n    </VSwitches>\\n</ListGrantVSwitchesToCenResponse>","errorExample":""}]',
      'title' => '查询云企业网实例已连接的跨账号专有网络VPC下交换机的信息',
      'summary' => '调用ListGrantVSwitchesToCen接口查询云企业网实例已连接的跨账号专有网络VPC（Virtual Private Cloud）下交换机的信息。',
      'description' => '在调用`ListGrantVSwitchesToCen`接口前，请确保云企业网实例已获得跨账号VPC实例的授权。具体操作，请参见[GrantInstanceToCen](~~126224~~)。',
    ),
    'CreateCenBandwidthPackage' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，需保证该参数在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'namedesc',
          ),
        ),
        3 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例的带宽峰值。单位：Mbps。取值范围：**2**~**10000**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '2',
          ),
        ),
        4 => 
        array (
          'name' => 'GeographicRegionAId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属的区域。取值：

- **China**：中国内地。
- **North-America**：北美。
- **Asia-Pacific**：亚太。
- **Europe**：欧洲。
- **Australia**：澳洲。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'China',
          ),
        ),
        5 => 
        array (
          'name' => 'GeographicRegionBId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '另一个网络实例所属的区域。取值：

- **China**：中国内地。
- **North-America**：北美。
- **Asia-Pacific**：亚太。
- **Europe**：欧洲。
- **Australia**：澳洲。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'China',
          ),
        ),
        6 => 
        array (
          'name' => 'BandwidthPackageChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例的付费类型。取值： **PREPAY**，表示先付费后使用的付费方式。',
            'type' => 'string',
            'required' => false,
            'example' => 'PREPAY',
          ),
        ),
        7 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例的购买时长。默认值：1。

- 当**PricingCycle**取值为**Month**时，**Period**取值范围为**1**~**3**和**6**。
- 当**PricingCycle**取值为**Year**时，**Period**取值范围为**1**~**3**。

> 当**BandwidthPackageChargeType**为**PREPAY**时本参数必填。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'PricingCycle',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例的计费周期。取值：

- **Month**（默认值）：按月计费。

- **Year**：按年计费。',
            'type' => 'string',
            'required' => false,
            'example' => 'Month',
          ),
        ),
        9 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动支付带宽包实例的账单。取值：

- **true**：是。

- **false**（默认值）：否。

如果您选择不自动支付账单，在您调用本接口后，请前往控制台的订单中心完成支付，实例才能创建成功。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        10 => 
        array (
          'name' => 'AutoRenew',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启自动续费功能。取值：

- **true**：是。
- **false**（默认值）：否。

> 目前仅预付费带宽包支持自动续费。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        11 => 
        array (
          'name' => 'AutoRenewDuration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自动续费时长。单位：月。取值范围：**0**~**2147483647**。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        12 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'CenBandwidthPackageId' => 
              array (
                'description' => '新建的带宽包实例ID。',
                'type' => 'string',
                'example' => 'cenbwp-4c2zaavbvh5fx****',
              ),
              'CenBandwidthPackageOrderId' => 
              array (
                'description' => '带宽包实例的订单ID。',
                'type' => 'string',
                'example' => '20156420004****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E4B345CD-2CBA-4881-AF6D-E5D9BAE1CA7B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnSupported.ChargeType',
            'errorMessage' => 'The charge type is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterIllegal.BandwidthPackage',
            'errorMessage' => 'The parameter of bandwidth packaged is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationInvalid.UserCanNotBuyCrossBorderBwp',
            'errorMessage' => 'According to the laws and regulations of the operator and mainland China, you are currently not eligible to purchase or renew a cross-border bandwidth package. Please contact online customer service or your business manager for consultation.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationInvalid.UserCanNotBuyBwp',
            'errorMessage' => 'The user can not buy Cen bandwidthPackage.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'PayFor.AccountMoneyValidateError',
            'errorMessage' => 'Your channel merchant quota is insufficient. Please contact the channel merchant.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CenBandwidthPackageId\\": \\"cenbwp-4c2zaavbvh5fx****\\",\\n  \\"CenBandwidthPackageOrderId\\": \\"20156420004****\\",\\n  \\"RequestId\\": \\"E4B345CD-2CBA-4881-AF6D-E5D9BAE1CA7B\\"\\n}","errorExample":"{\\n    \\"RequestId\\":\\"E4B345CD-2CBA-4881-AF6D-E5D9BAE1CA7B\\",\\n    \\"CenBandwidthPackageId\\":\\"Cenbwp-stb2axpqzzko2jagd7\\"\\n}"},{"type":"xml","example":"<CreateCenBandwidthPackageResponse>\\n    <RequestId>E4B345CD-2CBA-4881-AF6D-E5D9BAE1CA7B</RequestId>\\n    <CenBandwidthPackageOrderId>20156420004****</CenBandwidthPackageOrderId>\\n    <CenBandwidthPackageId> cenbwp-4c2zaavbvh5fx****</CenBandwidthPackageId>\\n</CreateCenBandwidthPackageResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<CreateCenBandwidthPackageResponse>\\n    <RequestId>E4B345CD-2CBA-4881-AF6D-E5D9BAE1CA7B</RequestId>\\n    <CenBandwidthPackageId> Cenbwp-stb2axpqzzko2jagd7</CenBandwidthPackageId>\\n</CreateCenBandwidthPackageResponse>"}]',
      'title' => '创建带宽包',
      'summary' => '要实现跨地域网络实例互通，您必须购买带宽包，您可以调用CreateCenBandwidthPackage接口创建带宽包。',
      'description' => '- 在创建带宽包实例时需要指定互通区域。带宽包的区域是地域的集合，每个区域包含一个或多个阿里云地域，您可以根据要互通的地域来选择带宽包的互通区域。关于区域和地域的关系，请参见[购买带宽包](~~181560~~)。

- 带宽包的计费详情，请参见[计费说明](~~189836~~)。

- **CreateCenBandwidthPackage**接口属于异步接口，即系统会先返回一个带宽包实例ID，但该带宽包并未创建完成，系统后台的创建任务仍在进行。您可以调用**DescribeCenBandwidthPackages**接口查询带宽包的状态，当带宽包处于**Idle**或**InUse**状态时，表示带宽包创建完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteCenBandwidthPackage' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenBandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除的带宽包实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cenbwp-4c2zaavbvh5f42****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0245BEF-52AC-44A8-A776-EF96FD26A5CA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.Release',
            'errorMessage' => 'Forbidden to release a PREPAY bandwidth instance within validity period.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.BwpInstanceStatus',
            'errorMessage' => 'The CBN bandwidth package is not in a valid state for the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C0245BEF-52AC-44A8-A776-EF96FD26A5CA\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteCenBandwidthPackageResponse>\\r\\n     <RequestId>C0245BEF-52AC-44A8-A776-EF96FD26A5CA</RequestId>\\r\\n</DeleteCenBandwidthPackageResponse>","errorExample":""}]',
      'title' => '删除带宽包',
      'summary' => '调用DeleteCenBandwidthPackage接口删除带宽包实例。',
      'description' => '<props="china"> 

- 在您删除带宽包实例前，请确保目标带宽包实例已经和云企业网实例解绑。具体操作，请参见[UnassociateCenBandwidthPackage](~~65935~~)。
- 如果要删除付费模式为PREPAY（预付费）模式的带宽包实例，您需要前往[订单中心](https://usercenter2.aliyun.com/refund/refund)退订，如对退订有疑问请查看[退订规则说明](https://help.aliyun.com/zh/user-center/user-guide/unsubscription-rules#p-1qo-3ce-m7z)，此接口暂不支持删除预付费模式的带宽包实例。

</props>
<props="intl">在您删除带宽包实例前，请确保目标带宽包实例已经和云企业网实例解绑。具体操作，请参见[UnassociateCenBandwidthPackage](~~65935~~)。</props>',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyCenBandwidthPackageAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例的新名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例新的描述信息。  

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => '带宽包',
          ),
        ),
        2 => 
        array (
          'name' => 'CenBandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 带宽包实例ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cenbwp-4c2zaavbvh5fx****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '13526224-5780-4426-8ADF-BC8B08700F23',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"13526224-5780-4426-8ADF-BC8B08700F23\\"\\n}","errorExample":"{\\n    \\"RequestId\\":\\"13526224-5780-4426-8ADF-BC8B08700F23\\"\\n}"},{"type":"xml","example":"<ModifyCenBandwidthPackageAttributeResponse>\\n     <RequestId>13526224-5780-4426-8ADF-BC8B08700F23</RequestId>\\n</ModifyCenBandwidthPackageAttributeResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\n<ModifyCenBandwidthPackageAttributeResponse>\\n     <RequestId>5903EE99-D542-4E14-BC65-AAC1CB2D3D03</RequestId>\\n</ModifyCenBandwidthPackageAttributeResponse>"}]',
      'title' => '修改带宽包实例的名称和描述信息',
      'summary' => '调用ModifyCenBandwidthPackageAttribute接口修改带宽包实例的名称和描述信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyCenBandwidthPackageSpec' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenBandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cenbwp-4c2zaavbvh5x****',
          ),
        ),
        1 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例新的带宽峰值。单位：Mbps。

取值范围：**2**~**10000**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Operation.Failed',
            'errorMessage' => 'Spec of the specified bandwidth package is not changed, please check again.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidStatus.Resource',
            'errorMessage' => 'The status of the specified resource is invalid. The resource cannot be renewed.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.InsufficientBalance',
            'errorMessage' => 'Your account does not have enough balance.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.OperationIsProcessing',
            'errorMessage' => 'The operation failed because another operation is being processed.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.OrderIsProcessing',
            'errorMessage' => 'The operation failed because the order is being processed.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.UpDownRadeConfigNoChange',
            'errorMessage' => 'The operation failed because the config not change.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          7 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}","errorExample":"{\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}"},{"type":"xml","example":"<ModifyCenBandwidthPackageSpecResponse>\\n     <RequestId>0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50</RequestId>\\n</ModifyCenBandwidthPackageSpecResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<ModifyCenBandwidthPackageSpecResponse>\\n     <RequestId>5903EE99-D542-4E14-BC65-AAC1CB2D3D03</RequestId>\\n</ModifyCenBandwidthPackageSpecResponse>"}]',
      'title' => '修改带宽包实例的带宽峰值',
      'summary' => '调用ModifyCenBandwidthPackageSpec接口修改带宽包实例的带宽峰值。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCenGeographicSpanRemainingBandwidth' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值为**10**，取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例绑定的云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-nh98vzx8gfhlwn****',
          ),
        ),
        3 => 
        array (
          'name' => 'GeographicRegionAId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例的一个互通区域ID，取值：

- **China**：中国内地。
- **North-America**：北美。
- **Asia-Pacific**：亚太。
- **Europe**：欧洲。
- **Australia**：澳洲。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'China',
          ),
        ),
        4 => 
        array (
          'name' => 'GeographicRegionBId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例的另一个互通区域ID。取值：

- **China**：中国内地。
- **North-America**：北美。
- **Asia-Pacific**：亚太。
- **Europe**：欧洲。
- **Australia**：澳洲。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'North-America',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RemainingBandwidth' => 
              array (
                'description' => '带宽包实例的剩余带宽值。单位：Mbps。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E4B345CD-2CBA-4881-AF6D-E5D9BAE1CA7B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RemainingBandwidth\\": 2,\\n  \\"RequestId\\": \\"E4B345CD-2CBA-4881-AF6D-E5D9BAE1CA7B\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeCenGeographicSpanRemainingBandwidthResponse>\\r\\n    <RequestId>E4B345CD-2CBA-4881-AF6D-E5D9BAE1CA7B</RequestId>\\r\\n    <RemainingBandwidth>2</RemainingBandwidth>\\r\\n</DescribeCenGeographicSpanRemainingBandwidthResponse>","errorExample":""}]',
      'title' => '查询指定带宽包的剩余可用带宽值',
      'summary' => '查询指定带宽包实例的剩余带宽值。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCenBandwidthPackages' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'IncludeReservationData',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否包含续费数据，取值：

- **true**：包含续费数据。

- **false**：不包含续费数据。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数，最大值为**50**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'IsOrKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件之间的关系，取值：

- **false**（默认）：过滤条件之间是**与**的关系。即必须符合所有过滤条件，才视为匹配过滤条件。

- **true**：过滤条件之间是**或**的关系。即只要符合其中一个过滤条件，则视为匹配过滤条件。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfnwjeo4tv****',
          ),
        ),
        5 => 
        array (
          'name' => 'Filter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '过滤信息',
            'type' => 'array',
            'items' => 
            array (
              'description' => '过滤信息',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '过滤条件。
您可以通过过滤条件筛选要查看的带宽包实例。系统支持以下过滤条件：

- **CenId**：云企业网实例的ID。

- **Status**：带宽包实例的状态，取值：

    - **Idle**：未绑定。
    - **InUse**：已绑定。

- **CenBandwidthPackageId**：带宽包的ID。

- **Name**：带宽包的名称。
支持输入一个或多个过滤条件，**N**的最大值为**5**。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'CenId',
                ),
                'Value' => 
                array (
                  'description' => '根据**Key**指定过滤值。一个**Key**支持指定多个过滤值，每个过滤值之间是**或**的关系，即只要符合其中一个过滤值，则视为匹配该过滤条件。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '根据**Key**指定过滤值。
一个**Key**支持指定多个过滤值，每个过滤值之间是**或**的关系，即只要符合其中一个过滤值，则视为匹配该过滤条件。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'cen-xxjsjfkffkfkfjkf****',
                  ),
                  'required' => false,
                  'example' => 'Idle',
                  'maxItems' => 5,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        6 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息列表。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息。

一次最多支持输入20个标签信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9D7E2400-2755-4AF5-9B73-12565E4F73A0',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'CenBandwidthPackages' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CenBandwidthPackage' => 
                  array (
                    'description' => '带宽包的详细信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ReservationActiveTime' => 
                        array (
                          'description' => '临时升配到期时间。',
                          'type' => 'string',
                          'example' => '2021-08-30T16:00Z',
                        ),
                        'Status' => 
                        array (
                          'description' => '带宽包是否已绑定云企业网实例。

- **Idle**：未绑定。

- **InUse**：已绑定。',
                          'type' => 'string',
                          'example' => 'InUse',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '带宽包的创建时间，采用ISO8601格式表示，格式为：YYYY-MM-DDThh:mmZ。',
                          'type' => 'string',
                          'example' => '2021-02-01T11:14Z',
                        ),
                        'ReservationOrderType' => 
                        array (
                          'description' => '续费变配方式。

- **TEMP_UPGRADE**：短时升配。

- **UPGRADE**：升配。',
                          'type' => 'string',
                          'example' => 'UPGRADE',
                        ),
                        'BandwidthPackageChargeType' => 
                        array (
                          'description' => '带宽包的计费方式。
                           ',
                          'type' => 'string',
                          'example' => 'PREPAY',
                        ),
                        'CenBandwidthPackageId' => 
                        array (
                          'description' => '带宽包的ID。',
                          'type' => 'string',
                          'example' => 'cenbwp-4c2zaavbvh5x****',
                        ),
                        'ReservationInternetChargeType' => 
                        array (
                          'description' => '变配之后的计费方式。',
                          'type' => 'string',
                          'example' => 'PREPAY',
                        ),
                        'GeographicRegionAId' => 
                        array (
                          'description' => '要查询的区域ID。取值： 

- **china**：中国内地。
- **asia-pacific**：亚太。
- **europe**：欧洲。
- **australia**：澳洲。
- **north-america**：北美。',
                          'type' => 'string',
                          'example' => 'china',
                        ),
                        'Bandwidth' => 
                        array (
                          'description' => '带宽包的峰值带宽。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'Description' => 
                        array (
                          'description' => '带宽包描述。',
                          'type' => 'string',
                          'example' => 'cen',
                        ),
                        'ExpiredTime' => 
                        array (
                          'description' => '带宽包超时时间。',
                          'type' => 'string',
                          'example' => '2021-09-08T16:00Z',
                        ),
                        'ReservationBandwidth' => 
                        array (
                          'description' => '临时升配结束后恢复的带宽。',
                          'type' => 'string',
                          'example' => '10',
                        ),
                        'GeographicSpanId' => 
                        array (
                          'description' => '区域对应的ID。',
                          'type' => 'string',
                          'example' => 'north-america_china',
                        ),
                        'GeographicRegionBId' => 
                        array (
                          'description' => '带宽包实例的另一个互通区域ID。取值：

- **china**：中国内地。
- **asia-pacific**：亚太。
- **europe**：欧洲。
- **australia**：澳洲。
- **north-america**：北美。',
                          'type' => 'string',
                          'example' => 'north-america',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-aekzoyr5k36****',
                        ),
                        'IsCrossBorder' => 
                        array (
                          'description' => '是否是跨境带宽包。

- **false**：不是跨境带宽包。

- **true**：是跨境带宽包。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'BusinessStatus' => 
                        array (
                          'description' => '带宽包的状态。

- **Normal**：正常。

- **FinancialLocked**：欠费锁定。

- **SecurityLocked**：安全风控锁定。',
                          'type' => 'string',
                          'example' => 'Normal',
                        ),
                        'Name' => 
                        array (
                          'description' => '带宽包的名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'HasReservationData' => 
                        array (
                          'description' => '是否有续费数据。

- **true**：有续费数据。

- **false**：没有续费数据。

>仅入参**IncludeReservationData**取值为**true**，且有未生效订购数据时才会为**true**。',
                          'type' => 'string',
                          'example' => 'false',
                        ),
                        'OrginInterRegionBandwidthLimits' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OrginInterRegionBandwidthLimit' => 
                            array (
                              'description' => '互通地域的详细信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'BandwidthLimit' => 
                                  array (
                                    'description' => '互通地域间的带宽峰值。',
                                    'type' => 'string',
                                    'example' => '1',
                                  ),
                                  'OppositeRegionId' => 
                                  array (
                                    'description' => '对端地域ID。',
                                    'type' => 'string',
                                    'example' => 'us-west-1',
                                  ),
                                  'GeographicSpanId' => 
                                  array (
                                    'description' => '互通地域。',
                                    'type' => 'string',
                                    'example' => 'north-america_china',
                                  ),
                                  'LocalRegionId' => 
                                  array (
                                    'description' => '本端地域ID。',
                                    'type' => 'string',
                                    'example' => 'cn-hangzhou',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '带宽包的标签信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签列表。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'TagKey',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'TagValue',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'CenIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'CenId' => 
                            array (
                              'description' => '带宽包对应的云企业网实例的列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '带宽包对应的云企业网实例ID。',
                                'type' => 'string',
                                'example' => 'cen-xxjsjfkffkfkfjkf****',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.TagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 2,\\n  \\"RequestId\\": \\"9D7E2400-2755-4AF5-9B73-12565E4F73A0\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 2,\\n  \\"CenBandwidthPackages\\": {\\n    \\"CenBandwidthPackage\\": [\\n      {\\n        \\"ReservationActiveTime\\": \\"2021-08-30T16:00Z\\",\\n        \\"Status\\": \\"InUse\\",\\n        \\"CreationTime\\": \\"2021-02-01T11:14Z\\",\\n        \\"ReservationOrderType\\": \\"UPGRADE\\",\\n        \\"BandwidthPackageChargeType\\": \\"PREPAY\\",\\n        \\"CenBandwidthPackageId\\": \\"cenbwp-4c2zaavbvh5x****\\",\\n        \\"ReservationInternetChargeType\\": \\"PREPAY\\",\\n        \\"GeographicRegionAId\\": \\"china\\",\\n        \\"Bandwidth\\": 2,\\n        \\"Description\\": \\"cen\\",\\n        \\"ExpiredTime\\": \\"2021-09-08T16:00Z\\",\\n        \\"ReservationBandwidth\\": \\"10\\",\\n        \\"GeographicSpanId\\": \\"north-america_china\\",\\n        \\"GeographicRegionBId\\": \\"north-america\\",\\n        \\"ResourceGroupId\\": \\"rg-aekzoyr5k36****\\",\\n        \\"IsCrossBorder\\": false,\\n        \\"BusinessStatus\\": \\"Normal\\",\\n        \\"Name\\": \\"test\\",\\n        \\"HasReservationData\\": \\"false\\",\\n        \\"OrginInterRegionBandwidthLimits\\": {\\n          \\"OrginInterRegionBandwidthLimit\\": [\\n            {\\n              \\"BandwidthLimit\\": \\"1\\",\\n              \\"OppositeRegionId\\": \\"us-west-1\\",\\n              \\"GeographicSpanId\\": \\"north-america_china\\",\\n              \\"LocalRegionId\\": \\"cn-hangzhou\\"\\n            }\\n          ]\\n        },\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"TagKey\\",\\n              \\"Value\\": \\"TagValue\\"\\n            }\\n          ]\\n        },\\n        \\"CenIds\\": {\\n          \\"CenId\\": [\\n            \\"cen-xxjsjfkffkfkfjkf****\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCenBandwidthPackagesResponse>\\n    <PageSize>2</PageSize>\\n    <RequestId>9D7E2400-2755-4AF5-9B73-12565E4F73A0</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>2</TotalCount>\\n    <CenBandwidthPackages>\\n        <ReservationActiveTime>2021-08-30T16:00Z</ReservationActiveTime>\\n        <Status>InUse</Status>\\n        <CreationTime>2021-02-01T11:14Z</CreationTime>\\n        <ReservationOrderType>UPGRADE</ReservationOrderType>\\n        <BandwidthPackageChargeType>PREPAY</BandwidthPackageChargeType>\\n        <CenBandwidthPackageId>cenbwp-4c2zaavbvh5x****</CenBandwidthPackageId>\\n        <ReservationInternetChargeType>PREPAY</ReservationInternetChargeType>\\n        <GeographicRegionAId>china</GeographicRegionAId>\\n        <Bandwidth>2</Bandwidth>\\n        <Description>cen</Description>\\n        <ExpiredTime>2021-09-08T16:00Z</ExpiredTime>\\n        <ReservationBandwidth>10</ReservationBandwidth>\\n        <GeographicSpanId>north-america_china</GeographicSpanId>\\n        <GeographicRegionBId>north-america</GeographicRegionBId>\\n        <IsCrossBorder>false</IsCrossBorder>\\n        <BusinessStatus>Normal</BusinessStatus>\\n        <Name>test</Name>\\n        <HasReservationData>false</HasReservationData>\\n        <OrginInterRegionBandwidthLimits>\\n            <BandwidthLimit>1</BandwidthLimit>\\n            <OppositeRegionId>us-west-1</OppositeRegionId>\\n            <GeographicSpanId>north-america_china</GeographicSpanId>\\n            <LocalRegionId>cn-hangzhou</LocalRegionId>\\n        </OrginInterRegionBandwidthLimits>\\n        <CenIds>cen-xxjsjfkffkfkfjkf****</CenIds>\\n    </CenBandwidthPackages>\\n</DescribeCenBandwidthPackagesResponse>","errorExample":""}]',
      'title' => '查询账户下所有带宽包的详细信息',
      'summary' => '调用DescribeCenBandwidthPackages接口查询带宽包实例的信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCenGeographicSpans' => 
    array (
      'summary' => '调用DescribeCenGeographicSpans接口查询云企业网支持的互通区域的信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值为**10**，取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'GeographicSpanId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '互通区域ID。

> 如果您不输入本参数，系统默认会帮您查询云企业网支持的所有互通区域信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'china_asia-pacific',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '09780287-BC24-4164-8334-773432E32696',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'GeographicSpanModels' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'GeographicSpanModel' => 
                  array (
                    'description' => '互通区域信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'LocalGeoRegionId' => 
                        array (
                          'description' => '本端区域ID。',
                          'type' => 'string',
                          'example' => 'asia-pacific',
                        ),
                        'GeographicSpanId' => 
                        array (
                          'description' => '互通区域ID。',
                          'type' => 'string',
                          'example' => 'china_asia-pacific',
                        ),
                        'OppositeGeoRegionId' => 
                        array (
                          'description' => '对端区域ID。',
                          'type' => 'string',
                          'example' => 'china',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"09780287-BC24-4164-8334-773432E32696\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"GeographicSpanModels\\": {\\n    \\"GeographicSpanModel\\": [\\n      {\\n        \\"LocalGeoRegionId\\": \\"asia-pacific\\",\\n        \\"GeographicSpanId\\": \\"china_asia-pacific\\",\\n        \\"OppositeGeoRegionId\\": \\"china\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCenGeographicSpansResponse>\\r\\n\\t<PageNumber>1</PageNumber>\\r\\n\\t<TotalCount>1</TotalCount>\\r\\n\\t<PageSize>10</PageSize>\\r\\n\\t<RequestId>09780287-BC24-4164-8334-773432E32696</RequestId>\\r\\n\\t<GeographicSpanModels>\\r\\n\\t\\t<GeographicSpanModel>\\r\\n\\t\\t\\t<OppositeGeoRegionId>china</OppositeGeoRegionId>\\r\\n\\t\\t\\t<LocalGeoRegionId>asia-pacific</LocalGeoRegionId>\\r\\n\\t\\t\\t<GeographicSpanId>china_asia-pacific</GeographicSpanId>\\r\\n\\t\\t</GeographicSpanModel>\\r\\n\\t</GeographicSpanModels>\\r\\n</DescribeCenGeographicSpansResponse>","errorExample":""}]',
      'title' => '查询云企业网支持的互通区域的信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGeographicRegionMembership' => 
    array (
      'summary' => '查询指定区域内的地域信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值为**10**，取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'GeographicRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的区域ID。取值： 

- **china**：中国内地。

- **asia-pacific**：亚太。

- **europe**：欧洲。

- **australia**：澳洲。

- **north-america**：北美。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'china ',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DC9EB0C9-60AF-4A09-A36C-608F70130274',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'RegionIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RegionId' => 
                  array (
                    'description' => '地域信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'RegionId' => 
                        array (
                          'description' => '地域ID。

您可以调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID对应的地域信息。',
                          'type' => 'string',
                          'example' => 'us-west-1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 2,\\n  \\"RequestId\\": \\"DC9EB0C9-60AF-4A09-A36C-608F70130274\\",\\n  \\"PageNumber\\": 10,\\n  \\"TotalCount\\": 2,\\n  \\"RegionIds\\": {\\n    \\"RegionId\\": [\\n      {\\n        \\"RegionId\\": \\"us-west-1\\"\\n      }\\n    ]\\n  }\\n}","errorExample":"{\\n   \\"RegionIds\\":{\\n      \\"RegionId\\":[\\n         {\\n            \\"RegionId\\":\\"us-west-1\\"\\n         },\\n         {\\n            \\"RegionId\\":\\"us-east-1\\"\\n         }\\n      ]\\n   },\\n   \\"PageNumber\\":1,\\n   \\"TotalCount\\":2,\\n   \\"PageSize\\":10,\\n   \\"RequestId\\":\\"DC9EB0C9-60AF-4A09-A36C-608F70130274\\"\\n}"},{"type":"xml","example":"<DescribeGeographicRegionMembershipResponse>\\n   <PageNumber>1</PageNumber>\\n   <PageSize>10</PageSize>\\n   <RegionIds>\\n      <RegionId>\\n            <RegionId>us-west-1</RegionId>\\n         </RegionId>\\n         <RegionId>\\n            <RegionId>us-east-1</RegionId>\\n         </RegionId>\\n   </RegionIds>\\n   <RequestId>DC9EB0C9-60AF-4A09-A36C-608F70130274</RequestId>\\n   <TotalCount>2</TotalCount>\\n</DescribeGeographicRegionMembershipResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DescribeGeographicRegionMembershipResponse>\\n   <PageNumber>1</PageNumber>\\n   <PageSize>10</PageSize>\\n   <RegionIds>\\n      <RegionId>\\n            <RegionId>us-west-1</RegionId>\\n         </RegionId>\\n         <RegionId>\\n            <RegionId>us-east-1</RegionId>\\n         </RegionId>\\n   </RegionIds>\\n   <RequestId>DC9EB0C9-60AF-4A09-A36C-608F70130274</RequestId>\\n   <TotalCount>2</TotalCount>\\n   <TotalCount>6</TotalCount>\\n</DescribeGeographicRegionMembershipResponse>"}]',
      'title' => '查看指定区域内所有的地域',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TempUpgradeCenBandwidthPackageSpec' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenBandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cenbwp-y08yosedeqlpua****',
          ),
        ),
        1 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '临时提升的带宽峰值。单位：Mbps。

取值范围：**2**~**10000**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '20',
          ),
        ),
        2 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '临时提升带宽的到期时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-07-24T13:00:52Z',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DB0A026C-A8E5-40AB-977E-3A87DD78F694',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DB0A026C-A8E5-40AB-977E-3A87DD78F694\\"\\n}","errorExample":""},{"type":"xml","example":"<TempUpgradeCenBandwidthPackageSpecResponse>\\n    <RequestId>DB0A026C-A8E5-40AB-977E-3A87DD78F694</RequestId>\\n</TempUpgradeCenBandwidthPackageSpecResponse>","errorExample":""}]',
      'title' => '进行云企业网预付费带宽包临时升配',
      'summary' => '调用TempUpgradeCenBandwidthPackageSpec接口对云企业网预付费带宽包实例临时升配。',
      'description' => '预付费带宽包支持临时升配功能。通过临时升配功能，您可以在指定时间内提高带宽包的带宽值，灵活应对业务带宽波动。

临时升配支持的最短升级间隔为3小时，支付完成后带宽立刻升级成功，升级过程不中断业务。

> 预付费带宽包实例在临时升配到期后恢复到原有带宽峰值时，如果实例上的业务流量超过了原有带宽峰值的限制，那么业务流量可能会因限速而被丢弃，请合理规划临时升配的到期时间，并确保带宽峰值和业务需求匹配。


- 目前，临时升配功能默认不开放。如需使用，请联系客户经理申请。
- 后付费带宽包和已到期的预付费带宽包不支持临时升配功能。
- **TempUpgradeCenBandwidthPackageSpec**接口属于异步接口，即系统会先返回一个**RequestId**，但带宽包并未升配完成，系统后台的升配任务仍在进行。您可以调用**DescribeCenBandwidthPackages**接口查询带宽包的规格。当带宽包的规格符合预期，表示带宽包升配完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnassociateCenBandwidthPackage' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6j****',
          ),
        ),
        1 => 
        array (
          'name' => 'CenBandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cenbwp-4c2zaavbvh5****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.SetPostPay95BandwidthLimitError',
            'errorMessage' => 'Operation failed because set postpay 95 bandwidth limit error.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}","errorExample":"{\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}"},{"type":"xml","example":"<UnassociateCenBandwidthPackageResponse>\\n    <RequestId>0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50</RequestId>\\n</UnassociateCenBandwidthPackageResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<UnassociateCenBandwidthPackageResponse>\\n    <RequestId>5903EE99-D542-4E14-BC65-AAC1CB2D3D03</RequestId>\\n</UnassociateCenBandwidthPackageResponse>"}]',
      'title' => '解绑带宽包与云企业网实例',
      'summary' => '调用UnassociateCenBandwidthPackage接口解绑带宽包与云企业网实例之间的绑定，解绑后该带宽包可以绑定至其他云企业网实例。',
      'description' => '确保目标带宽包实例下不存在跨地域带宽。您可以删除已设置的跨地域带宽，具体操作，请参见[SetCenInterRegionBandwidthLimit](~~65942~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociateCenBandwidthPackage' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        1 => 
        array (
          'name' => 'CenBandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽包实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cenbwp-4c2zaavbvh5fx****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouter',
            'errorMessage' => 'The status of TransitRouter is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.SetPostPay95BandwidthLimitError',
            'errorMessage' => 'Operation failed because set postpay 95 bandwidth limit error.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationInvalid.UserCanNotUseBwp',
            'errorMessage' => 'The user can not use Cen bandwidthPackage.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}","type":"json"}]',
      'title' => '将带宽包绑定到指定的云企业网实例',
      'summary' => '将带宽包实例绑定至云企业网实例。',
      'description' => '一个云企业网实例支持绑定多个带宽包，但不支持绑定多个相同互通区域的带宽包。

例如，云企业网实例中已绑定中国内地至中国内地互通区域的带宽包，则您不能再绑定中国内地到中国内地互通区域的带宽包，但可以绑定中国内地到北美互通区域的带宽包。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateTransitRouterPeerAttachment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '72307',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREcbnFWWHEY',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-j3jzhw1zpau2km****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本端企业版转发路由器实例ID。

',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-bp1su1ytdxtataupl****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本端企业版转发路由器实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterAttachmentName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterAttachmentDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        6 => 
        array (
          'name' => 'PeerTransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对端转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-m5eq27g6bndum7e88****',
          ),
        ),
        7 => 
        array (
          'name' => 'PeerTransitRouterRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对端转发路由器实例所属地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-qingdao',
          ),
        ),
        8 => 
        array (
          'name' => 'AutoPublishRouteEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否使企业版转发路由器自动发布跨地域连接的路由到对端地域。

- **false**（默认值）：否。
- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        9 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接的带宽值。单位：Mbps。

- 当**BandwidthType**取值为**BandwidthPackage**时，该参数表示跨地域连接可使用的带宽值。

- 当**BandwidthType**取值为**DataTransfer**时，该参数表示跨地域连接的限速带宽值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100000000',
            'minimum' => '0',
            'example' => '2',
          ),
        ),
        10 => 
        array (
          'name' => 'CenBandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接要绑定的带宽包ID。

> 当**BandwidthType**取值为**DataTransfer**时，无需配置该项。',
            'type' => 'string',
            'required' => false,
            'example' => 'cenbwp-3xrxupouolw5ou****',
          ),
        ),
        11 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接创建跨地域连接。
- **true**：发送检查请求，只进行校验，不会创建跨地域连接。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        12 => 
        array (
          'name' => 'BandwidthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接的带宽分配方式。取值：

- **BandwidthPackage**：从带宽包中分配带宽。

- **DataTransfer**：不为跨地域连接分配带宽，按使用流量计费。',
            'type' => 'string',
            'required' => false,
            'example' => 'BandwidthPackage',
          ),
        ),
        13 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tag_A1',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'value_A1',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        14 => 
        array (
          'name' => 'DefaultLinkType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '默认链路类型。

可选值为Platinum（铂金），Gold（金），默认为Gold（金）。

且仅在带宽分配方式是按流量计费时，才可以配置为Platinum（铂金）。',
            'type' => 'string',
            'required' => false,
            'example' => 'Gold',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TransitRouterAttachmentId' => 
              array (
                'description' => '跨地域连接ID。',
                'type' => 'string',
                'example' => 'tr-attach-nwkiqfvw22qesz****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '59422BF5-BAAD-4CFD-9019-9557BD3ACFA3',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterRegionId',
            'errorMessage' => 'The specified TransitRouterRegion does not support the operation.',
          ),
          1 => 
          array (
            'errorCode' => 'NoPermission.AliyunServiceRolePolicyForCEN',
            'errorMessage' => 'You are not authorized to create the service linked role. Role Name: AliyunServiceRolePolicyForCEN. Service Name: cen.aliyuncs.com. Make sure that the user has been granted the ram:CreateServiceLinkedRole permission.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidTransitRouterId.NotFound',
            'errorMessage' => 'TransitRouterId is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.PeerTransitRouterId',
            'errorMessage' => 'PeerTransitRouterId is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterId',
            'errorMessage' => 'TransitRouterId is unsupported.',
          ),
          5 => 
          array (
            'errorCode' => 'MissingParam.Bandwidth',
            'errorMessage' => 'The parameter Bandwidth is mandatory.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'Bandwidth is illegal.',
          ),
          7 => 
          array (
            'errorCode' => 'Forbbiden.TransitRouterServiceNotOpen',
            'errorMessage' => 'The user has not open transit router service.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The specified TransitRouterType does not support the operation.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationUnsupported.BandwidthType',
            'errorMessage' => 'The specified BandwidthType does not support the operation.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidCenId.NotFound',
            'errorMessage' => 'CenId is not found.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.BandwidthType',
            'errorMessage' => 'BandwidthType is illegal.',
          ),
          12 => 
          array (
            'errorCode' => 'MissingParam.CenIdOrRegionId',
            'errorMessage' => 'Either CenId or RegionId must be specified.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationUnsupported.BandwidthHS',
            'errorMessage' => 'This bandwidth limit can only be set in China-AsiaPacific-HS',
          ),
          14 => 
          array (
            'errorCode' => 'OperationUnsupported.CenFullLevel',
            'errorMessage' => 'CEN full level does not support TransitRouter',
          ),
          15 => 
          array (
            'errorCode' => 'OperationUnsupported.CloudDataTransferService',
            'errorMessage' => 'CCN region not support cloud data transfer service.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidPeerTransitRouterId.NotFound',
            'errorMessage' => 'The specified PeerTransitRouterId is not found.',
          ),
          17 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'RegionId is illegal.',
          ),
          18 => 
          array (
            'errorCode' => 'IllegalParam.PeerRegionId',
            'errorMessage' => 'PeerRegionId is illegal.',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRegionId',
            'errorMessage' => 'TransitRouterRegionId is illegal.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidOperation.CenInstanceStatus',
            'errorMessage' => 'The CEN instance is not in a valid state for the operation.	',
          ),
          21 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouter',
            'errorMessage' => 'The status of TransitRouter is incorrect.',
          ),
          22 => 
          array (
            'errorCode' => 'InvalidOperation.BwpNotAssociated',
            'errorMessage' => 'Operation is invalid because a bandwidth package corresponding to the geographic span is not associated.',
          ),
          23 => 
          array (
            'errorCode' => 'InvalidOperation.BwpBusinessStatus',
            'errorMessage' => 'The CBN bandwidth package is not in a valid business state for the operation.',
          ),
          24 => 
          array (
            'errorCode' => 'IllegalParam.CenBandwidthPackageId',
            'errorMessage' => 'Parameter CenBandwidthPackageId is illegal.',
          ),
          25 => 
          array (
            'errorCode' => 'InvalidOperation.BwpBandwidthExceeded',
            'errorMessage' => 'Operation is invalid because the total bandwidth limit has exceeded that of the bandwidth package.',
          ),
          26 => 
          array (
            'errorCode' => 'ParameterIllegal.CdtDefaultLinkTypeOnlySupportPlatinumOrGold',
            'errorMessage' => 'DataTransfer only support Platinum and Gold.',
          ),
          27 => 
          array (
            'errorCode' => 'ParameterIllegal.BandwidthPackageDefaultLinkTypeOnlySupportGold',
            'errorMessage' => 'Cen bandwidthPackage only support Gold.',
          ),
          28 => 
          array (
            'errorCode' => 'ParameterIllegal.CdtDefaultLinkTypeOnlySupportGold',
            'errorMessage' => 'CDT only support Gold when both transitrouters for cross regional connections are not all enterprise version.',
          ),
          29 => 
          array (
            'errorCode' => 'OperationNotAllowed.DefaultLinkTypeOnlySupportGold',
            'errorMessage' => 'Operation is not allowed because this user can only set default link type to Gold.',
          ),
          30 => 
          array (
            'errorCode' => 'OperationInvalid.UserCanNotBuyCrossBorderBwp',
            'errorMessage' => 'According to the laws and regulations of the operator and mainland China, you are currently not eligible to purchase or renew a cross-border bandwidth package. Please contact online customer service or your business manager for consultation.',
          ),
          31 => 
          array (
            'errorCode' => 'OperationInvalid.IdentityRegistrationStatusNotSupport',
            'errorMessage' => 'Real name registration of enterprises required.',
          ),
          32 => 
          array (
            'errorCode' => 'InvalidOperation.OnlyOneRegionSupportIpv6',
            'errorMessage' => 'Peer Attachment is only allowed when both regions support IPv6 or do not support IPv6 at all.',
          ),
          33 => 
          array (
            'errorCode' => 'InvalidOperation',
            'errorMessage' => 'Operation is invalid.',
          ),
          34 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          35 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TransitRouterAttachmentId\\": \\"tr-attach-nwkiqfvw22qesz****\\",\\n  \\"RequestId\\": \\"59422BF5-BAAD-4CFD-9019-9557BD3ACFA3\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTransitRouterPeerAttachmentResponse>\\n    <TransitRouterAttachmentId>tr-attach-nwkiqfvw22qesz****</TransitRouterAttachmentId>\\n    <RequestId>59422BF5-BAAD-4CFD-9019-9557BD3ACFA3</RequestId>\\n</CreateTransitRouterPeerAttachmentResponse>","errorExample":""}]',
      'title' => '为企业版转发路由器实例创建跨地域连接',
      'summary' => '网络实例（VPC、VBR、IPsec连接）被连接至转发路由器后，如果要实现不同地域网络实例的互通，需要在网络实例连接的转发路由器下创建跨地域连接，您可以调用CreateTransitRouterPeerAttachment接口为企业版转发路由器实例创建跨地域连接。',
      'description' => '- 企业版转发路由器支持以下两种带宽分配方式：

  - **从带宽包分配**：

    使用此种分配方式，您需要先购买带宽包，从带宽包中为跨地域连接分配带宽。购买带宽包具体操作，请参见[CreateCenBandwidthPackage](~~65919~~)。
  - **按流量付费**：

    使用此种分配方式，您需要为跨地域连接设置限速带宽，系统会按照跨地域连接实际使用的流量计费。具体计费信息，请参见[跨地域流量](~~337827~~)。

- **CreateTransitRouterPeerAttachment**接口属于异步接口，即系统会先返回一个跨地域连接ID，但该跨地域连接并未创建完成，系统后台的创建任务仍在进行。您可以调用**ListTransitRouterPeerAttachments**接口查询跨地域连接的状态。 

  - 当跨地域连接处于**Attaching**状态时，表示跨地域连接正在创建中，在该状态下，您只能对跨地域连接执行查询操作，不能执行其他操作。
  - 当跨地域连接处于**Attached**状态时，表示跨地域连接创建完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteTransitRouterPeerAttachment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-gyjhtx9sjsxhm6****',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次删除请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接删除跨地域连接。
- **true**：发送检查请求，只进行校验，不会删除跨地域连接。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'Force',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否强制删除跨地域连接，取值：
- **false**（默认值）：删除跨地域连接前校验是否存在相关资源依赖，如关联转发、路由学习等。如果存在相关依赖，则不允许删除，返回对应错误。
- **true**：删除跨地域连接时，默认删除所有相关依赖。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A01FEDD7-7D69-4EB3-996D-CF79F6F885CA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.RouteTablePropagationExist',
            'errorMessage' => 'Operation failed because You are not allowed to delete TransitAttachment with TransitRouter RouteTable Associated.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.RouteEntryExist',
            'errorMessage' => 'Operation failed because the TransitRouterAttachment exists in RouteTable.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.RouteTableAssociationExist',
            'errorMessage' => 'Operation failed because TransitRouterRouteTable exists',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.TrafficQosExist',
            'errorMessage' => 'Operation failed because TrafficQos exists',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidValue.PrefixlistCidr',
            'errorMessage' => 'Invalid cidr exist in the specified prefixlist.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.FlowLogExistOrNisOpened',
            'errorMessage' => 'Operation failed because FlowLog exists or Nis opened.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.NotSupportForceDelete',
            'errorMessage' => 'Not support force delete attachment.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidTransitRouterAttachmentId.NotFound',
            'errorMessage' => 'TransitRouterAttachmentId is not found.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The operation is not supported because of the wrong transitRouter type.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationFailed.MulticastGroupExist',
            'errorMessage' => 'Operation is failed because attachment exists in multicast groups.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterAttachment',
            'errorMessage' => 'The specified TransitRouterAttachment has configured TransitRegion. Please remove the configuration first.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationFailed.PrefixListExist',
            'errorMessage' => 'Operation failed because PrefixList exists.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationFailed.InterRegionCloudRouteEntryExist',
            'errorMessage' => 'Operation failed because inter region cloud route associated with specified attachment exist.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          14 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A01FEDD7-7D69-4EB3-996D-CF79F6F885CA\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTransitRouterPeerAttachmentResponse>\\n    <RequestId>A01FEDD7-7D69-4EB3-996D-CF79F6F885CA</RequestId>\\n</DeleteTransitRouterPeerAttachmentResponse>","errorExample":""}]',
      'title' => '删除企业版转发路由器下的跨地域连接',
      'summary' => '调用DeleteTransitRouterPeerAttachment接口删除企业版转发路由器下的跨地域连接。',
      'description' => '**DeleteTransitRouterPeerAttachment**接口属于异步接口，即系统会先返回一个**RequestId**，但该跨地域连接并未删除完成，系统后台的删除任务仍在进行。您可以调用**ListTransitRouterPeerAttachments**接口查询跨地域连接的状态。

- 当跨地域连接处于**Detaching**状态时，表示跨地域连接正在删除中，在该状态下，您只能对跨地域连接执行查询操作，不能执行其他操作。
- 当查询不到指定的跨地域连接时，表示跨地域连接删除完成。

在调用**DeleteTransitRouterPeerAttachment**接口过程时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回**RequestId**，但不会删除企业版转发路由器下的跨地域连接。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SetCenInterRegionBandwidthLimit' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '72421',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREcbn7IORX8',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmx****',
          ),
        ),
        1 => 
        array (
          'name' => 'LocalRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '本端地域ID。

您可以调用[DescribeChildInstanceRegions](~~132080~~)接口获取云企业网支持加载的网络实例的地域信息。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'OppositeRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对端地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'us-west-1',
          ),
        ),
        3 => 
        array (
          'name' => 'BandwidthLimit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '两个地域之间的跨地域互通带宽。单位：Mbps。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '8',
          ),
        ),
        4 => 
        array (
          'name' => 'BandwidthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽的分配方式。取值：

- **BandwidthPackage**：从带宽包中分配带宽。',
            'type' => 'string',
            'required' => false,
            'example' => '默认为BandwidthPackage',
            'default' => 'BandwidthPackage',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '530BC816-F575-412A-AAB2-435125D26328',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParam.CbnBandwidthPackageId',
            'errorMessage' => 'There are more than one suitable cen bandwidth package',
          ),
          1 => 
          array (
            'errorCode' => 'AttrMismatching.CbnBandwidthPackageId',
            'errorMessage' => '%s',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.InvalidOperation',
            'errorMessage' => 'The operation is failed because the operation is not support.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationUnsupported.Attachment',
            'errorMessage' => 'The cross region connection contains an existing bandwidth. The operation is not supported.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOperation.UnsupportChargeType',
            'errorMessage' => 'The charge type is not supported by this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.TrafficQosPolicyExist',
            'errorMessage' => 'Operation unsupported because traffic qos policy exists.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationUnsupported.BandwidthType',
            'errorMessage' => 'The specified BandwidthType does not support the operation.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.BandwidthType',
            'errorMessage' => 'BandwidthType is illegal.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'Bandwidth is illegal.',
          ),
          9 => 
          array (
            'errorCode' => 'ParamExclusive.BandwidthTypeAndCenBandwidthPackageId',
            'errorMessage' => 'DataTransfer and CenBandwidthPackageId is mutually exclusive.',
          ),
          10 => 
          array (
            'errorCode' => 'IdentityRegistrationStatusNotSupport',
            'errorMessage' => 'Real name registration of enterprises required.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          12 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"530BC816-F575-412A-AAB2-435125D26328\\"\\n}","errorExample":""},{"type":"xml","example":"<SetCenInterRegionBandwidthLimitResponse>\\n    <RequestId>530BC816-F575-412A-AAB2-435125D26328</RequestId>\\n</SetCenInterRegionBandwidthLimitResponse>","errorExample":""}]',
      'title' => '设置带宽包中两个地域间的跨地域互通带宽',
      'summary' => '调用SetCenInterRegionBandwidthLimit接口设置、修改或删除基础版转发路由器带宽包中两个地域间的跨地域互通带宽。',
      'description' => '此接口仅支持设置基础版转发路由器带宽包中两个地域间的跨地域互通带宽。
## 前提条件

目标云企业网实例已经绑定了带宽包实例。具体操作，请参见[CreateCenBandwidthPackage](~~65919~~)和[AssociateCenBandwidthPackage](~~65934~~)。


您可以调用**SetCenInterRegionBandwidthLimit**接口设置、修改或删除跨地域互通带宽：

- **BandwidthLimit**不为0 ，表示设置或修改跨地域互通带宽。
- **BandwidthLimit**为0 ，表示删除跨地域互通带宽。

## 使用限制

- 跨地域互通带宽的最大值不能超过其所属的带宽包实例的带宽峰值。
- 一个带宽包实例下的所有跨地域互通带宽之和不能超过该带宽包实例的带宽峰值。
- 如果跨地域连接开启了带宽复用功能，则不支持修改跨地域互通带宽。
- **SetCenInterRegionBandwidthLimit**接口仅支持为基础版转发路由器设置、修改或删除跨地域互通带宽。

    如果您需要为企业版转发路由器设置、修改或删除跨地域互通带宽，请参见[CreateTransitRouterPeerAttachment](~~261363~~)、[UpdateTransitRouterPeerAttachmentAttribute](~~261229~~)和[DeleteTransitRouterPeerAttachment](~~261227~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateTransitRouterPeerAttachmentAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-ft94dcrbc3e5taun3x',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接的新名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterAttachmentDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接新的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        4 => 
        array (
          'name' => 'AutoPublishRouteEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否允许企业版转发路由器自动发布跨地域连接的路由到对端地域。

- **false**（默认值）：否。
- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接修改跨地域连接的配置。
- **true**：发送检查请求，只进行校验，不会修改跨地域连接的配置。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接的带宽值。单位：Mbps。

- 当**BandwidthType**取值为**BandwidthPackage**时，该参数表示跨地域连接可使用的带宽值。
- 当**BandwidthType**取值为**DataTransfer**时，该参数表示跨地域连接的限速带宽值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100000000',
            'minimum' => '0',
            'example' => '2',
          ),
        ),
        7 => 
        array (
          'name' => 'CenBandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接要绑定的带宽包ID。

<props="china">如果不输入带宽包ID，则表示您要使用测试带宽。系统默认测试带宽为1 Kbps，仅供您测试（IPv4）网络连通性。</props>
>当**BandwidthType**取值为**DataTransfer**时，无需配置该项。',
            'type' => 'string',
            'required' => false,
            'example' => 'cenbwp-3xrxupouolw5ou****',
          ),
        ),
        8 => 
        array (
          'name' => 'BandwidthType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽的分配方式。取值：

- **BandwidthPackage**：从带宽包中分配带宽。
- **DataTransfer**：不为跨地域连接分配带宽，按使用流量计费。',
            'type' => 'string',
            'required' => false,
            'example' => 'BandwidthPackage',
          ),
        ),
        9 => 
        array (
          'name' => 'DefaultLinkType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '默认链路类型。

可选值为Platinum（铂金），Gold（金），默认为Gold（金）。

且仅在带宽分配方式是按流量计费时，才可以配置为Platinum（铂金）。',
            'type' => 'string',
            'required' => false,
            'example' => 'Gold',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A01FEDD7-7D69-4EB3-996D-CF79F6F885CA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTransitRouterAttachmentId.NotFound',
            'errorMessage' => 'TransitRouterAttachmentId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationUnsupported.BandwidthType',
            'errorMessage' => 'The specified BandwidthType does not support the operation.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam.Bandwidth',
            'errorMessage' => 'The parameter Bandwidth is mandatory.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.Attachment',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.BandwidthType',
            'errorMessage' => 'BandwidthType is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.Bandwidth',
            'errorMessage' => 'Bandwidth is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'ParameterIllegal.BandwidthPackageDefaultLinkTypeOnlySupportGold',
            'errorMessage' => 'Cen bandwidthPackage only support Gold.',
          ),
          7 => 
          array (
            'errorCode' => 'ParameterIllegal.CdtDefaultLinkTypeOnlySupportPlatinumOrGold',
            'errorMessage' => 'DataTransfer only support Platinum and Gold.',
          ),
          8 => 
          array (
            'errorCode' => 'ParameterIllegal.CdtDefaultLinkTypeOnlySupportGold',
            'errorMessage' => 'CDT only support Gold when both transitrouters for cross regional connections are not all enterprise version.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationNotAllowed.DefaultLinkTypeOnlySupportGold',
            'errorMessage' => 'Operation is not allowed because this user can only set default link type to Gold.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          11 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A01FEDD7-7D69-4EB3-996D-CF79F6F885CA\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateTransitRouterPeerAttachmentAttributeResponse>\\n    <RequestId>A01FEDD7-7D69-4EB3-996D-CF79F6F885CA</RequestId>\\n</UpdateTransitRouterPeerAttachmentAttributeResponse>","errorExample":""}]',
      'title' => '修改企业版转发路由器下跨地域连接的配置',
      'summary' => '调用UpdateTransitRouterPeerAttachmentAttribute接口修改企业版转发路由器下跨地域连接的配置。',
      'description' => '**UpdateTransitRouterPeerAttachmentAttribute**接口属于异步接口，即系统会先返回一个**RequestId**，但该跨地域连接并未修改完成，系统后台的修改任务仍在进行。您可以调用**ListTransitRouterPeerAttachments**接口查询跨地域连接的状态。

- 当跨地域连接处于**Modifying**状态时，表示跨地域连接正在修改中，在该状态下，您只能对跨地域连接执行查询操作，不能执行其他操作。
- 当跨地域连接处于**Attached**状态时，表示跨地域连接修改完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTransitRouterPeerAttachments' => 
    array (
      'summary' => '调用ListTransitRouterPeerAttachments接口查询企业版转发路由器下的跨地域连接的详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '72394',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREcbnFWWHEY',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-j3jzhw1zpau2km****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器实例所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-5u4qbayfv2io5v****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-bp1su1ytdxtataupl****',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。默认值为**20**，最大值为**100**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '0',
            'example' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'dd20****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AA97AFA3-8E48-4BD7-9F3E-A9F6176018A0',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TransitRouterAttachments' => 
              array (
                'description' => '跨地域连接信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '跨地域连接信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CreationTime' => 
                    array (
                      'description' => '跨地域连接的创建时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：`YYYY-MM-DDThh:mmZ`。',
                      'type' => 'string',
                      'example' => '2021-06-16T02:50Z',
                    ),
                    'Status' => 
                    array (
                      'description' => '跨地域连接的状态。

- **Attached**：已加载。
- **Attaching**：加载中。
- **Detaching**：卸载中。
- **Detached**：已卸载。',
                      'type' => 'string',
                      'example' => 'Attached',
                    ),
                    'TransitRouterAttachmentId' => 
                    array (
                      'description' => '跨地域连接ID。',
                      'type' => 'string',
                      'example' => 'tr-attach-5u4qbayfv2io5v****',
                    ),
                    'BandwidthType' => 
                    array (
                      'description' => '带宽的分配方式。取值：

- **BandwidthPackage**：从带宽包中分配带宽。

- **DataTransfer**：不为跨地域连接分配带宽，按使用流量计费。',
                      'type' => 'string',
                      'example' => 'BandwidthPackage',
                    ),
                    'CenBandwidthPackageId' => 
                    array (
                      'description' => '跨地域连接绑定的带宽包ID。',
                      'type' => 'string',
                      'example' => 'cenbwp-3xrxupouolw5ou****',
                    ),
                    'TransitRouterAttachmentDescription' => 
                    array (
                      'description' => '跨地域连接的描述信息。',
                      'type' => 'string',
                      'example' => 'testdesc',
                    ),
                    'RegionId' => 
                    array (
                      'description' => '企业版转发路由器所属地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'PeerTransitRouterId' => 
                    array (
                      'description' => '对端转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-m5eq27g6bndum7e88****',
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => '企业版转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-bp1su1ytdxtataupl****',
                    ),
                    'PeerTransitRouterRegionId' => 
                    array (
                      'description' => '对端转发路由器实例所属地域ID。',
                      'type' => 'string',
                      'example' => 'cn-qingdao',
                    ),
                    'ResourceType' => 
                    array (
                      'description' => '连接所关联的资源类型。

- **VPC**：专有网络实例。
- **CCN**：云连接网实例。
- **VBR**：边界路由器实例。
- **TR**：转发路由器实例。',
                      'type' => 'string',
                      'example' => 'TR',
                    ),
                    'Bandwidth' => 
                    array (
                      'description' => '跨地域连接的带宽值。单位：Mbps。


- 当**BandwidthType**取值为**BandwidthPackage**时，该参数表示跨地域连接可使用的带宽值。
- 当**BandwidthType**取值为**DataTransfer**时，该参数表示跨地域连接的限速带宽值。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '2',
                    ),
                    'GeographicSpanId' => 
                    array (
                      'description' => '带宽包的互通区域。',
                      'type' => 'string',
                      'example' => 'china_china',
                    ),
                    'PeerTransitRouterOwnerId' => 
                    array (
                      'description' => '对端转发路由器实例所属账号ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '253460731706911258',
                    ),
                    'AutoPublishRouteEnabled' => 
                    array (
                      'description' => '企业版转发路由器实例是否自动发布跨地域连接的路由到对端地域。

- **false**（默认值）：否。
- **true**：是。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'TransitRouterAttachmentName' => 
                    array (
                      'description' => '跨地域连接的名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'tag_A1',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                        ),
                      ),
                    ),
                    'CenId' => 
                    array (
                      'description' => '云企业网实例ID。',
                      'type' => 'string',
                      'example' => 'cen-j3jzhw1zpau2km****
',
                    ),
                    'DefaultLinkType' => 
                    array (
                      'description' => '默认链路类型。

- **Gold**（默认值）：金。
- **Platinum**：铂金。',
                      'type' => 'string',
                      'example' => 'Gold',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TrInstance',
            'errorMessage' => 'The specified TransitRouter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.Region',
            'errorMessage' => 'The specified Region is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.CenId',
            'errorMessage' => 'The specified CenId is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterId',
            'errorMessage' => 'The specified TransitRouterId is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.RegionIdOrTransitRouterId',
            'errorMessage' => 'The specified TransitRouterId or RegionId is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.CenIdOrRegionId',
            'errorMessage' => 'The specified CenId or RegionId is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.TagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.TagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.MaxResults',
            'errorMessage' => 'The specified MaxResults is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          11 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"dd20****\\",\\n  \\"RequestId\\": \\"AA97AFA3-8E48-4BD7-9F3E-A9F6176018A0\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 20,\\n  \\"TransitRouterAttachments\\": [\\n    {\\n      \\"CreationTime\\": \\"2021-06-16T02:50Z\\",\\n      \\"Status\\": \\"Attached\\",\\n      \\"TransitRouterAttachmentId\\": \\"tr-attach-5u4qbayfv2io5v****\\",\\n      \\"BandwidthType\\": \\"BandwidthPackage\\",\\n      \\"CenBandwidthPackageId\\": \\"cenbwp-3xrxupouolw5ou****\\",\\n      \\"TransitRouterAttachmentDescription\\": \\"testdesc\\",\\n      \\"RegionId\\": \\"cn-hangzhou\\",\\n      \\"PeerTransitRouterId\\": \\"tr-m5eq27g6bndum7e88****\\",\\n      \\"TransitRouterId\\": \\"tr-bp1su1ytdxtataupl****\\",\\n      \\"PeerTransitRouterRegionId\\": \\"cn-qingdao\\",\\n      \\"ResourceType\\": \\"TR\\",\\n      \\"Bandwidth\\": 2,\\n      \\"GeographicSpanId\\": \\"china_china\\",\\n      \\"PeerTransitRouterOwnerId\\": 253460731706911260,\\n      \\"AutoPublishRouteEnabled\\": false,\\n      \\"TransitRouterAttachmentName\\": \\"test\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"tag_A1\\",\\n          \\"Value\\": \\"test\\"\\n        }\\n      ],\\n      \\"CenId\\": \\"cen-j3jzhw1zpau2km****\\\\n\\",\\n      \\"DefaultLinkType\\": \\"Gold\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterPeerAttachmentsResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>AA97AFA3-8E48-4BD7-9F3E-A9F6176018A0</RequestId>\\n    <MaxResults>20</MaxResults>\\n    <TransitRouterAttachments>\\n        <TransitRouterAttachmentId>tr-attach-5u4qbayfv2io5v****</TransitRouterAttachmentId>\\n        <Status>Attached</Status>\\n        <GeographicSpanId>china_china</GeographicSpanId>\\n        <PeerTransitRouterOwnerId>253460731706911258</PeerTransitRouterOwnerId>\\n        <TransitRouterAttachmentName>test</TransitRouterAttachmentName>\\n        <ResourceType>TR</ResourceType>\\n        <BandwidthType>BandwidthPackage</BandwidthType>\\n        <AutoPublishRouteEnabled>false</AutoPublishRouteEnabled>\\n        <Bandwidth>0</Bandwidth>\\n        <CreationTime>2021-06-16T02:50Z</CreationTime>\\n        <BandwidthPackageId/>\\n        <PeerTransitRouterId>tr-m5eq27g6bndum7e88****</PeerTransitRouterId>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <CenBandwidthPackageId/>\\n        <PeerTransitRouterRegionId>cn-qingdao</PeerTransitRouterRegionId>\\n        <TransitRouterId>tr-bp1su1ytdxtataupl****</TransitRouterId>\\n    </TransitRouterAttachments>\\n</ListTransitRouterPeerAttachmentsResponse>","errorExample":""}]',
      'title' => '查询企业版转发路由器下的跨地域连接信息',
      'description' => '您可以通过以下两种方式查询企业版转发路由器下跨地域连接的信息：

- 通过企业版转发路由器实例ID查询该实例下所有跨地域连接的信息。
- 通过云企业网实例ID和企业版转发路由器实例所属地域ID查询该企业版转发路由器实例下所有跨地域连接的信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCenInterRegionBandwidthLimits' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。  ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值为**10**，取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-pfa6ugf3xl0qsd****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器的地域ID。

您可以调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID对应的地域信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'ccn-cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7A30C665-8766-5AAA-9274-C97380E2D850',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'CenInterRegionBandwidthLimits' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CenInterRegionBandwidthLimit' => 
                  array (
                    'description' => '跨地域互通带宽信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '跨地域互通带宽的状态。取值：

- **Active**：运行中。

- **Modifying**：修改中。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'BandwidthPackageId' => 
                        array (
                          'description' => '带宽包实例ID。',
                          'type' => 'string',
                          'example' => 'cenbwp-uenczwb592fnvv****',
                        ),
                        'OppositeRegionId' => 
                        array (
                          'description' => '对端地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'GeographicSpanId' => 
                        array (
                          'description' => '互通地域ID。',
                          'type' => 'string',
                          'example' => 'china_china',
                        ),
                        'CenId' => 
                        array (
                          'description' => '云企业网实例ID。',
                          'type' => 'string',
                          'example' => 'cen-pfa6ugf3xl0qsd****',
                        ),
                        'LocalRegionId' => 
                        array (
                          'description' => '本端地域ID。

您可以调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID对应的地域信息。',
                          'type' => 'string',
                          'example' => 'ccn-cn-shanghai',
                        ),
                        'BandwidthLimit' => 
                        array (
                          'description' => '两个地域间的跨地域互通带宽。单位：Mbps。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'BandwidthType' => 
                        array (
                          'description' => '带宽的分配方式。取值：

- **BandwidthPackage**：从带宽包中分配带宽。

- **DataTransfer**：不为跨地域连接分配带宽，按使用流量计费。',
                          'type' => 'string',
                          'example' => 'BandwidthPackage',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"7A30C665-8766-5AAA-9274-C97380E2D850\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"CenInterRegionBandwidthLimits\\": {\\n    \\"CenInterRegionBandwidthLimit\\": [\\n      {\\n        \\"Status\\": \\"Active\\",\\n        \\"BandwidthPackageId\\": \\"cenbwp-uenczwb592fnvv****\\",\\n        \\"OppositeRegionId\\": \\"cn-hangzhou\\",\\n        \\"GeographicSpanId\\": \\"china_china\\",\\n        \\"CenId\\": \\"cen-pfa6ugf3xl0qsd****\\",\\n        \\"LocalRegionId\\": \\"ccn-cn-shanghai\\",\\n        \\"BandwidthLimit\\": 1,\\n        \\"BandwidthType\\": \\"BandwidthPackage\\"\\n      }\\n    ]\\n  }\\n}","errorExample":"{\\n    \\"CenInterRegionBandwidthLimits\\":{\\n        \\"CenInterRegionBandwidthLimit\\":[\\n            {\\"\\n                Status\\":\\" Active \\",\\n                \\"LocalRegionId\\":\\"cn-hangzhou-667\\",\\n                \\"CenId\\":\\"Cen-to55jjgdqd4pfvby3d\\",\\n                \\"OppositeRegionId\\":\\"cn-hangzhou-668\\",\\n                \\"BandwidthLimit\\":1000\\n            }\\n         ]\\n    },\\n    \\"PageNumber\\":1,\\n    \\"TotalCount\\":1,\\n    \\"PageSize\\":10,\\n    \\"RequestId\\":\\"187507F9-D955-41A5-98EB-7E4471F9D8E7\\"\\n}"},{"type":"xml","example":"<DescribeCenInterRegionBandwidthLimitsResponse>\\n\\n<CenInterRegionBandwidthLimits>\\n    <CenInterRegionBandwidthLimit>\\n        <Status>Active</Status>\\n        <GeographicSpanId>china_china</GeographicSpanId>\\n        <OppositeRegionId>cn-hangzhou</OppositeRegionId>\\n        <CenId>cen-pfa6ugf3xl0qsd****</CenId>\\n        <BandwidthPackageId>cenbwp-uenczwb592fnvv****</BandwidthPackageId>\\n        <BandwidthLimit>1</BandwidthLimit>\\n        <LocalRegionId>ccn-cn-shanghai</LocalRegionId>\\n    </CenInterRegionBandwidthLimit>\\n</CenInterRegionBandwidthLimits>\\n<TotalCount>1</TotalCount>\\n<RequestId>7A30C665-8766-5AAA-9274-C97380E2D850</RequestId>\\n<PageSize>10</PageSize>\\n<PageNumber>1</PageNumber>\\n</DescribeCenInterRegionBandwidthLimitsResponse>\\n","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DescribeCenInterRegionBandwidthLimitsResponse>\\n        <CenInterRegionBandwidthLimits>\\n            <CenInterRegionBandwidthLimit>\\n            <Status> Active </Status>\\n                <LocalRegionId>cn-hangzhou-667</LocalRegionId>\\n                    <CenId>Cen-to55jjgdqd4pfvby3d</CenId>\\n                    <OppositeRegionId>cn-hangzhou-668</OppositeRegionId>\\n                    <BandwidthLimit>1000</BandwidthLimit>\\n                </CenInterRegionBandwidthLimit>\\n            </CenInterRegionBandwidthLimits>\\n        <PageNumber>1</PageNumber>\\n        <TotalCount>1</TotalCount>\\n        <PageSize>10</PageSize>\\n    <RequestId>C4CF2E97-5C04-4A9E-B908-BE95FF68C7B2</RequestId>\\n</DescribeCenInterRegionBandwidthLimitsResponse>"}]',
      'title' => '查询各个地域之间的跨地域互通带宽',
      'summary' => '调用DescribeCenInterRegionBandwidthLimits接口查询各个地域之间的跨地域互通带宽的信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateCenChildInstanceRouteEntryToAttachment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接为网络实例添加路由条目。
- **true**：发送检查请求，只进行校验，不会为网络实例添加路由条目。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

>当前参数暂不生效。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-bp1n6cbxcszp55vxo****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-r1qhupkc19iadz****',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vrt-bp1msipdczo9lejup****',
          ),
        ),
        5 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.0.0.0/24',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A95A100B-3F3A-56F4-A5DE-19DB7E994807',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.VpcAsInternetGateway',
            'errorMessage' => 'It’s forbidden that using Vpc as internet gateway for your private IDC.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidCIDRBlock.Duplicate',
            'errorMessage' => 'Specified CIDR block is already exists.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Malformed',
            'errorMessage' => 'Specified CIDR block is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.RouteConflict',
            'errorMessage' => 'Route conflict exists in routing table.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOperation.UnsupportnexthopType',
            'errorMessage' => 'The specified next hop type is not supported by this operation.',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcRouteEntry',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationDenied.RouteTableTypeNotPermitted',
            'errorMessage' => 'The operation is not allowed because of RouteTableTypeNotPermitted.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          8 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAttachmentId.NotFound',
            'errorMessage' => 'The specified AttachmentId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A95A100B-3F3A-56F4-A5DE-19DB7E994807\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateCenChildInstanceRouteEntryToAttachmentResponse>\\n    <RequestId>A95A100B-3F3A-56F4-A5DE-19DB7E994807</RequestId>\\n</CreateCenChildInstanceRouteEntryToAttachmentResponse>","errorExample":""}]',
      'title' => '为企业版转发路由器连接的网络实例添加路由条目',
      'summary' => '在企业版转发路由器中，您可以调用CreateCenChildInstanceRouteEntryToAttachment接口为网络实例添加路由条目，目标网段的下一跳指向当前地域的转发路由器。',
      'description' => '- 仅支持为企业版转发路由器连接的专有网络VPC（Virtual Private Cloud）实例和边界路由器VBR（Virtual Border Router）实例添加路由条目。
- 路由条目的下一跳默认为**转发路由器连接**（即网络实例连接）且不支持修改。
- **CreateCenChildInstanceRouteEntryToAttachment**接口属于异步接口，即系统会先返回一个**RequestId**，但该路由条目并未创建完成，系统后台的创建任务仍在进行。您可以调用专有网络的**DescribeRouteEntryList**接口查询路由条目的状态。 
    - 当路由条目处于**Pending**状态时，表示路由条目正在创建中。在该状态下，您只能对路由条目执行查询操作，不能执行其他操作。
    - 当路由条目处于**Available**状态时，表示路由条目创建完成。',
    ),
    'CreateCenChildInstanceRouteEntryToCen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7febra5nqj7jjh****',
          ),
        ),
        1 => 
        array (
          'name' => 'ChildInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-k1alm2jbuwibhxtx2****',
          ),
        ),
        2 => 
        array (
          'name' => 'ChildInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例类型。取值：

- **VPC**：表示专有网络实例。
- **VBR**：表示边界路由器实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-5',
          ),
        ),
        4 => 
        array (
          'name' => 'ChildInstanceAliUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属阿里云账号（主账号）ID。

> 如果您当前的网络实例为跨账号的网络实例，本参数必填。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1787100000000000',
          ),
        ),
        5 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-k1aa8ulqs39f86op8****',
          ),
        ),
        6 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的目标网段。

目标网段为CIDR格式。例如：192.168.10.0/24。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.22.0/24',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '437ED236-BE47-5370-8695-15C58C7A8014',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.TransitRouterType',
            'errorMessage' => 'The specified TransitRouterType does not support the operation.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"437ED236-BE47-5370-8695-15C58C7A8014\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateCenChildInstanceRouteEntryToCenResponse>\\r\\n<RequestId>437ED236-BE47-5370-8695-15C58C7A8014</RequestId>\\r\\n</CreateCenChildInstanceRouteEntryToCenResponse>","errorExample":""}]',
      'title' => '为网络实例添加路由条目',
      'summary' => '调用CreateCenChildInstanceRouteEntryToCen接口为网络实例添加路由条目。',
      'description' => '- CreateCenChildInstanceRouteEntryToCen接口默认不开放，如需使用，请<props="china">[提交工单](https://selfservice.console.aliyun.com/ticket/category/cbn/today)</props><props="intl">[提交工单](https://workorder-intl.console.aliyun.com/#/ticket/createIndex)</props>申请。
- CreateCenChildInstanceRouteEntryToCen接口不支持为企业版转发路由器中的网络实例添加路由条目。
- 路由条目的下一跳默认为云企业网的地域网关且不支持修改。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteCenChildInstanceRouteEntryToAttachment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接删除网络实例的路由条目。
- **true**：发送检查请求，只进行校验，不会删除网络实例的路由条目。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。

> 当前参数暂不生效。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-wgcl0ik5o8jakq****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-r1qhupkc19iadz****',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp1osd9opvegfpowc****',
          ),
        ),
        5 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.0.1.0/24',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '250E717B-9823-5FD8-A1C6-5714234FB825',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRouteEntry.NotFound',
            'errorMessage' => 'Route entry not exists.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.VpcRouteEntry',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidTransitRouterAttachmentId.NotFound',
            'errorMessage' => 'TransitRouterAttachmentId is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.Vpc',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidCidrBlock.Malformed',
            'errorMessage' => 'The specified CIDR block is not valid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"250E717B-9823-5FD8-A1C6-5714234FB825\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteCenChildInstanceRouteEntryToAttachmentResponse>\\n    <RequestId>250E717B-9823-5FD8-A1C6-5714234FB825</RequestId>\\n</DeleteCenChildInstanceRouteEntryToAttachmentResponse>","errorExample":""}]',
      'title' => '删除企业版转发路由器连接的网络实例的路由条目',
      'summary' => '调用DeleteCenChildInstanceRouteEntryToAttachment接口删除企业版转发路由器连接的网络实例的路由条目。',
      'description' => '- 仅支持删除专有网络VPC（Virtual Private Cloud）实例和边界路由器VBR（Virtual Border Router）实例中下一跳为**转发路由器连接**（即网络实例连接）的路由条目。
- **DeleteCenChildInstanceRouteEntryToAttachment**接口属于异步接口，即系统会先返回一个**RequestId**，但该路由条目并未删除完成，系统后台的删除任务仍在进行。您可以调用专有网络的**DescribeRouteEntryList**接口查询路由条目的状态。 
    - 当路由条目处于**Deleting**状态时，表示路由条目正在删除中。在该状态下，您只能对路由条目执行查询操作，不能执行其他操作。
    - 当查询不到指定的路由条目时，表示路由条目删除完成。',
    ),
    'DeleteCenChildInstanceRouteEntryToCen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7febra5nqj7jjh****',
          ),
        ),
        1 => 
        array (
          'name' => 'ChildInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-k1alm2jbuwibhxtx2****',
          ),
        ),
        2 => 
        array (
          'name' => 'ChildInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例类型。取值：

- **VPC**：表示专有网络实例。
- **VBR**：表示边界路由器实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-5',
          ),
        ),
        4 => 
        array (
          'name' => 'ChildInstanceAliUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属阿里云账号（主账号）ID。

> 如果当前网络实例为跨账号网络实例，本参数必填。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1787100000000000',
          ),
        ),
        5 => 
        array (
          'name' => 'RouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-k1aa8ulqs39f86op8****',
          ),
        ),
        6 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的目标网段。

目标网段为CIDR格式。例如：192.168.10.0/24。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.22.0/24',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C05000A4-2FC5-5B2C-9527-954044DE2CF3',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.VpcNotAttachedToCen',
            'errorMessage' => 'Operation failed because vpc not attached to cen.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.InvalidChildInstanceType',
            'errorMessage' => 'Child instance type is invalid for this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C05000A4-2FC5-5B2C-9527-954044DE2CF3\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteCenChildInstanceRouteEntryToCenResponse>\\r\\n<RequestId>C05000A4-2FC5-5B2C-9527-954044DE2CF3</RequestId>\\r\\n</DeleteCenChildInstanceRouteEntryToCenResponse>","errorExample":""}]',
      'title' => '删除网络实例下的路由条目',
      'summary' => '调用DeleteCenChildInstanceRouteEntryToCen接口删除网络实例下的路由条目。',
      'description' => '- DeleteCenChildInstanceRouteEntryToCen接口默认不开放，如需使用，请<props="china">[提交工单](https://selfservice.console.aliyun.com/ticket/category/cbn/today)</props><props="intl">[提交工单](https://workorder-intl.console.aliyun.com/#/ticket/createIndex)</props>申请。
- DeleteCenChildInstanceRouteEntryToCen接口不支持删除企业版转发路由器下网络实例的路由条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListCenChildInstanceRouteEntriesToAttachment' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时，每次显示的条目数。默认值为**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
            'default' => '50',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        2 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-dc4vwznpwbobrl****',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildInstanceRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => false,
            'example' => 'vtb-bp174d1gje79u1g4t****',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => false,
            'example' => 'tr-attach-r6g0m3epjehw57****',
          ),
        ),
        5 => 
        array (
          'name' => 'RouteFilter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '目标网段过滤。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '路由匹配值模式。
- **prefix-exact-match**：完全匹配',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'prefix-exact-match',
                  'enum' => 
                  array (
                    0 => 'prefix-exact-match',
                  ),
                ),
                'Value' => 
                array (
                  'description' => '目标网段列表。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '目标网段。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '10.0.0.0/8',
                  ),
                  'required' => false,
                  'maxItems' => 5,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 5,
          ),
        ),
        6 => 
        array (
          'name' => 'ServiceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由托管的类型。如果该字段为空，即表示该路由没有被托管。取值：TR，表示托管类型为转发路由器类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'TR',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '530BC816-F575-412A-AAB2-435125D26328',
              ),
              'RouteEntry' => 
              array (
                'description' => '路由条目的详细信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '路由条目的详细信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CenId' => 
                    array (
                      'description' => '云企业网实例ID。',
                      'type' => 'string',
                      'example' => 'cen-9adwg6ghpq8oq4dp7q',
                    ),
                    'TransitRouterAttachmentId' => 
                    array (
                      'description' => '网络实例连接ID。',
                      'type' => 'string',
                      'example' => 'tr-attach-y463sghkkv1loe****',
                    ),
                    'Status' => 
                    array (
                      'description' => '路由条目的状态。取值：
- **Available**：可用。
- **Pending**：配置中。
- **Modifying**：修改中。',
                      'type' => 'string',
                      'example' => 'Available',
                    ),
                    'ServiceType' => 
                    array (
                      'description' => '路由托管的类型。如果该字段为空，即表示该路由没有被托管。取值：TR，表示托管类型为转发路由器类型。',
                      'type' => 'string',
                      'example' => 'TR',
                    ),
                    'DestinationCidrBlock' => 
                    array (
                      'description' => '路由条目的目标网段。',
                      'type' => 'string',
                      'example' => '10.0.0.0/8',
                    ),
                    'ChildInstanceRouteTableId' => 
                    array (
                      'description' => '网络实例的路由表ID。',
                      'type' => 'string',
                      'example' => 'vtb-bp1tlaj1c4nxr2t3e****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The parameter NextToken is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParam.TransitRouterAttachmentId',
            'errorMessage' => 'The parameter TransitRouterAttachmentId is Missing.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam.ChildInstanceRouteTableId',
            'errorMessage' => 'The parameter ChildInstanceRouteTableId is Missing.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParam.RouteFilter',
            'errorMessage' => 'The parameter RouteFilter is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'ResourceNotFound.TransitRouterAttachment',
            'errorMessage' => 'The specified TransitRouterAttachment does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParam.RoutFilterKey',
            'errorMessage' => 'The specified Key of RouteFilter is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParam.CenId',
            'errorMessage' => 'The specified CEN does not exist.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.CenInstanceStatus',
            'errorMessage' => 'The CEN instance is not in a valid state for the operation.',
          ),
          8 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"530BC816-F575-412A-AAB2-435125D26328\\",\\n  \\"RouteEntry\\": [\\n    {\\n      \\"CenId\\": \\"cen-9adwg6ghpq8oq4dp7q\\",\\n      \\"TransitRouterAttachmentId\\": \\"tr-attach-y463sghkkv1loe****\\",\\n      \\"Status\\": \\"Available\\",\\n      \\"ServiceType\\": \\"TR\\",\\n      \\"DestinationCidrBlock\\": \\"10.0.0.0/8\\",\\n      \\"ChildInstanceRouteTableId\\": \\"vtb-bp1tlaj1c4nxr2t3e****\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询企业版转发路由器连接的网络实例的路由条目',
      'summary' => '调用ListCenChildInstanceRouteEntriesToAttachment接口查询企业版转发路由器下网络实例路由表中指向网络实例连接的路由条目。',
    ),
    'DescribeCenRegionDomainRouteEntries' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6j****',
          ),
        ),
        1 => 
        array (
          'name' => 'CenRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值为**10**，取值范围：**1**~**500**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的状态。取值：

- **Active**（默认值）：可用。

- **Candidate**：备份。

- **Rejected**：拒绝。

- **Prohibited**：禁用。

- **All**：表示查询当前地域下所有状态的路由条目信息。

',
            'type' => 'string',
            'required' => false,
            'example' => 'Active',
            'default' => 'Active',
            'enum' => 
            array (
              0 => 'Active',
              1 => 'Rejected',
              2 => 'Prohibited',
              3 => 'Candidate',
              4 => 'Standby',
              5 => 'All',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '004E99FB-E996-5777-888E-BA1D8F215407',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'CenRouteEntries' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CenRouteEntry' => 
                  array (
                    'description' => '路由条目信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ToOtherRegionStatus' => 
                        array (
                          'description' => '路由条目去往其他地域的状态。

- **Active**：可用。
- **Prohibited**：禁用。
',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'Type' => 
                        array (
                          'description' => '路由条目的类型。

- **CEN**：表示通过云企业网传递的路由。
- **Custom**：表示自定义路由。
- **System**：表示系统路由。',
                          'type' => 'string',
                          'example' => 'CEN',
                        ),
                        'Status' => 
                        array (
                          'description' => '路由条目的状态。

- **Active**：可用。

- **Candidate**：备份。

- **Rejected**：拒绝。

- **Prohibited**：禁用。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'NextHopType' => 
                        array (
                          'description' => '路由条目下一跳类型。

- **VPC**：专有网络。
- **VBR**：边界路由器。
- **CCN**：云连接网。
- **local_service**：表示当前路由条目为云服务系统路由，没有下一跳。',
                          'type' => 'string',
                          'example' => 'VPC',
                        ),
                        'NextHopInstanceId' => 
                        array (
                          'description' => '路由条目下一跳关联的网络实例ID。',
                          'type' => 'string',
                          'example' => 'vpc-bp1j8728mm6pweeod****',
                        ),
                        'NextHopRegionId' => 
                        array (
                          'description' => '路由条目下一跳关联的网络实例所属的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'DestinationCidrBlock' => 
                        array (
                          'description' => '路由条目的目标网段。',
                          'type' => 'string',
                          'example' => '192.168.1.0/24',
                        ),
                        'Preference' => 
                        array (
                          'description' => '路由条目的优先级。

优先级数字越小，表示优先级越高。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '50',
                        ),
                        'CenRouteMapRecords' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'CenRouteMapRecord' => 
                            array (
                              'description' => '路由条目匹配到的入地域网关方向的路由策略。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'RouteMapId' => 
                                  array (
                                    'description' => '路由策略ID。',
                                    'type' => 'string',
                                    'example' => 'cenrmap-cz5axczdxb7yfu****',
                                  ),
                                  'RegionId' => 
                                  array (
                                    'description' => '路由策略应用的地域ID。',
                                    'type' => 'string',
                                    'example' => 'cn-hangzhou',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'CenOutRouteMapRecords' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'CenOutRouteMapRecord' => 
                            array (
                              'description' => '路由条目匹配到的出地域网关方向的路由策略。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'RouteMapId' => 
                                  array (
                                    'description' => '路由策略ID。',
                                    'type' => 'string',
                                    'example' => 'cenrmap-dbarzidzp7ek4k****',
                                  ),
                                  'RegionId' => 
                                  array (
                                    'description' => '路由策略应用的地域ID。',
                                    'type' => 'string',
                                    'example' => 'ccn-cn-shanghai',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Communities' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Community' => 
                            array (
                              'description' => '路由条目的Community属性值列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由条目的Community属性值。',
                                'type' => 'string',
                                'example' => '65501:1',
                              ),
                            ),
                          ),
                        ),
                        'AsPaths' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AsPath' => 
                            array (
                              'description' => '路由条目的AS Path属性值列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由条目的AS Path属性值。',
                                'type' => 'string',
                                'example' => '65501',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"004E99FB-E996-5777-888E-BA1D8F215407\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 4,\\n  \\"CenRouteEntries\\": {\\n    \\"CenRouteEntry\\": [\\n      {\\n        \\"ToOtherRegionStatus\\": \\"Active\\",\\n        \\"Type\\": \\"CEN\\",\\n        \\"Status\\": \\"Active\\",\\n        \\"NextHopType\\": \\"VPC\\",\\n        \\"NextHopInstanceId\\": \\"vpc-bp1j8728mm6pweeod****\\",\\n        \\"NextHopRegionId\\": \\"cn-hangzhou\\",\\n        \\"DestinationCidrBlock\\": \\"192.168.1.0/24\\",\\n        \\"Preference\\": 50,\\n        \\"CenRouteMapRecords\\": {\\n          \\"CenRouteMapRecord\\": [\\n            {\\n              \\"RouteMapId\\": \\"cenrmap-cz5axczdxb7yfu****\\",\\n              \\"RegionId\\": \\"cn-hangzhou\\"\\n            }\\n          ]\\n        },\\n        \\"CenOutRouteMapRecords\\": {\\n          \\"CenOutRouteMapRecord\\": [\\n            {\\n              \\"RouteMapId\\": \\"cenrmap-dbarzidzp7ek4k****\\",\\n              \\"RegionId\\": \\"ccn-cn-shanghai\\"\\n            }\\n          ]\\n        },\\n        \\"Communities\\": {\\n          \\"Community\\": [\\n            \\"65501:1\\"\\n          ]\\n        },\\n        \\"AsPaths\\": {\\n          \\"AsPath\\": [\\n            \\"65501\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCenRegionDomainRouteEntriesResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>004E99FB-E996-5777-888E-BA1D8F215407</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>4</TotalCount>\\n    <CenRouteEntries>\\n        <ToOtherRegionStatus>Active</ToOtherRegionStatus>\\n        <Type>CEN</Type>\\n        <Status>Active</Status>\\n        <NextHopType>VPC</NextHopType>\\n        <NextHopInstanceId>vpc-bp1j8728mm6pweeod****</NextHopInstanceId>\\n        <NextHopRegionId>cn-hangzhou</NextHopRegionId>\\n        <DestinationCidrBlock>192.168.1.0/24</DestinationCidrBlock>\\n        <Preference>50</Preference>\\n        <CenRouteMapRecords>\\n            <RouteMapId>cenrmap-cz5axczdxb7yfu****</RouteMapId>\\n            <RegionId>cn-hangzhou</RegionId>\\n        </CenRouteMapRecords>\\n        <CenOutRouteMapRecords>\\n            <RouteMapId>cenrmap-dbarzidzp7ek4k****</RouteMapId>\\n            <RegionId>ccn-cn-shanghai</RegionId>\\n        </CenOutRouteMapRecords>\\n        <Communities>65501:1</Communities>\\n        <AsPaths>65501</AsPaths>\\n    </CenRouteEntries>\\n</DescribeCenRegionDomainRouteEntriesResponse>","errorExample":""}]',
      'title' => '查询实例路由条目详细信息',
      'summary' => '调用DescribeCenRegionDomainRouteEntries接口查询云企业网实例中具体地域内路由条目的详细信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCenChildInstanceRouteEntries' => 
    array (
      'summary' => '调用DescribeCenChildInstanceRouteEntries接口查询云企业网中网络实例的路由条目信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        1 => 
        array (
          'name' => 'ChildInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp18sth14qii3pnvo****',
          ),
        ),
        2 => 
        array (
          'name' => 'ChildInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的类型。取值：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **ECR**：专线网关实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
            'enum' => 
            array (
              0 => 'VPC',
              1 => 'VBR',
              2 => 'CCN',
              3 => 'VPN',
              4 => 'ECR',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的状态。取值：

- **Active**：可用。

- **Candidate**：备份。

- **Rejected**：拒绝。

- **Prohibited**：禁止。

- **All**（默认值）：表示查询网络实例下所有状态的路由条目信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'Active',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值为**10**，取值范围：**1**~**500**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'ChildInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所在的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        7 => 
        array (
          'name' => 'ChildInstanceRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的路由表ID。
在您查询VPC实例路由表下的路由条目信息时，如果您不指定路由表ID，系统默认查询VPC实例系统路由表下的路由条目信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'vtb-p0wxx3apzgn6uqp3r****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '17A57456-EF48-419D-9AE6-9B03D9996018',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'CenRouteEntries' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CenRouteEntry' => 
                  array (
                    'description' => '路由条目信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '路由条目的状态。取值：

- **Active**：可用。

- **Candidate**：备份。

- **Rejected**：拒绝。

- **Prohibited**：禁止。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'Type' => 
                        array (
                          'description' => '路由条目的类型。取值：

- **CEN**：表示通过云企业网传递的路由。
- **System**：表示系统路由。
- **Custom**：表示自定义路由。',
                          'type' => 'string',
                          'example' => 'CEN',
                        ),
                        'PublishStatus' => 
                        array (
                          'description' => '路由条目在云企业网中的发布状态。取值：

- **Published**：已发布。

- **NonPublished**：未发布。
',
                          'type' => 'string',
                          'example' => 'Published',
                        ),
                        'NextHopType' => 
                        array (
                          'description' => '路由条目下一跳类型。取值：

- **Instance**：ECS实例。
- **HaVip**：高可用虚拟IP。
- **RouterInterface**：路由器接口。
- **NetworkInterface**：弹性网卡。
- **VpnGateway**：VPN网关。
- **IPv6Gateway**：IPv6网关。
- **Ipv4Gateway**：IPv4网关。
- **NatGateway**：NAT网关。
- **Attachment**：网络实例连接。
- **service**：云服务。
- **VBR**：边界路由器。
- **CCN**：云连接网。
- **VPC**：专有网络。
- **local**：表示当前路由条目为网络实例的系统路由，没有下一跳。
- **TR**：转发路由器。
- **BlackHole**：表示当前路由条目为黑洞路由，没有下一跳。
- **EcRouterInterface**：高速通道路由器接口。
- **HealthCheck**：健康检查。
- **AS**：云连接网接入网关。
- **classicLink**：经典网络实例。
- **GatewayEndpoint**：网关终端节点。
- **CPE**：边界路由器连接的本地数据中心。',
                          'type' => 'string',
                          'example' => 'VBR',
                        ),
                        'OperationalMode' => 
                        array (
                          'description' => '是否允许发布或撤销该路由到云企业网。取值：
- **true**：允许发布或撤销。

- **false**：不允许发布或撤销。
',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'NextHopRegionId' => 
                        array (
                          'description' => '路由条目下一跳关联的实例所属的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'NextHopInstanceId' => 
                        array (
                          'description' => '路由条目下一跳关联的实例ID。',
                          'type' => 'string',
                          'example' => 'vbr-bp13gtbhdp0pfqg6s****',
                        ),
                        'DestinationCidrBlock' => 
                        array (
                          'description' => '路由条目的目标网段。',
                          'type' => 'string',
                          'example' => '10.0.0.0/24',
                        ),
                        'RouteTableId' => 
                        array (
                          'description' => '路由表ID。',
                          'type' => 'string',
                          'example' => 'vtb-bp1r9pvl4xen8s9ju****',
                        ),
                        'CenRouteMapRecords' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'CenRouteMapRecord' => 
                            array (
                              'description' => '路由条目匹配到的路由策略信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'RouteMapId' => 
                                  array (
                                    'description' => '路由策略ID。',
                                    'type' => 'string',
                                    'example' => 'cenrmap-w4yf7toozfol3q****',
                                  ),
                                  'RegionId' => 
                                  array (
                                    'description' => '路由策略应用的地域ID。',
                                    'type' => 'string',
                                    'example' => 'cn-hangzhou',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Conflicts' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Conflict' => 
                            array (
                              'description' => '产生冲突的路由条目信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Status' => 
                                  array (
                                    'description' => '路由条目产生冲突的原因。取值：

- **conflict**：路由条目的目标网段相同造成的冲突。  
         
- **overflow**：其他网络实例路由表的路由条目数量超出限制造成的冲突。  
',
                                    'type' => 'string',
                                    'example' => 'conflict',
                                  ),
                                  'DestinationCidrBlock' => 
                                  array (
                                    'description' => '产生冲突的路由条目的目标网段。',
                                    'type' => 'string',
                                    'example' => '192.168.1.0/24',
                                  ),
                                  'InstanceId' => 
                                  array (
                                    'description' => '产生路由条目冲突的对端的网络实例ID。',
                                    'type' => 'string',
                                    'example' => 'ccn-0q3b7oviikmm9h****',
                                  ),
                                  'InstanceType' => 
                                  array (
                                    'description' => '产生路由条目冲突的对端的网络实例类型。取值：

- **VPC**：专有网络。
- **VBR**：边界路由器。
- **CCN**：云连接网。
- **ECR**：专线网关。',
                                    'type' => 'string',
                                    'example' => 'CCN',
                                  ),
                                  'RegionId' => 
                                  array (
                                    'description' => '产生路由条目冲突的对端的网络实例所属地域ID。',
                                    'type' => 'string',
                                    'example' => 'ccn-cn-shanghai',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Communities' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Community' => 
                            array (
                              'description' => '路由条目的Community属性值列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由条目的Community属性值。',
                                'type' => 'string',
                                'example' => '65501:1',
                              ),
                            ),
                          ),
                        ),
                        'AsPaths' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AsPath' => 
                            array (
                              'description' => '路由条目的AS Path属性值列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由条目的AS Path属性值。',
                                'type' => 'string',
                                'example' => '65501',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'The specified RouteTableId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"17A57456-EF48-419D-9AE6-9B03D9996018\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 4,\\n  \\"CenRouteEntries\\": {\\n    \\"CenRouteEntry\\": [\\n      {\\n        \\"Status\\": \\"Active\\",\\n        \\"Type\\": \\"CEN\\",\\n        \\"PublishStatus\\": \\"Published\\",\\n        \\"NextHopType\\": \\"VBR\\",\\n        \\"OperationalMode\\": true,\\n        \\"NextHopRegionId\\": \\"cn-hangzhou\\",\\n        \\"NextHopInstanceId\\": \\"vbr-bp13gtbhdp0pfqg6s****\\",\\n        \\"DestinationCidrBlock\\": \\"10.0.0.0/24\\",\\n        \\"RouteTableId\\": \\"vtb-bp1r9pvl4xen8s9ju****\\",\\n        \\"CenRouteMapRecords\\": {\\n          \\"CenRouteMapRecord\\": [\\n            {\\n              \\"RouteMapId\\": \\"cenrmap-w4yf7toozfol3q****\\",\\n              \\"RegionId\\": \\"cn-hangzhou\\"\\n            }\\n          ]\\n        },\\n        \\"Conflicts\\": {\\n          \\"Conflict\\": [\\n            {\\n              \\"Status\\": \\"conflict\\",\\n              \\"DestinationCidrBlock\\": \\"192.168.1.0/24\\",\\n              \\"InstanceId\\": \\"ccn-0q3b7oviikmm9h****\\",\\n              \\"InstanceType\\": \\"CCN\\",\\n              \\"RegionId\\": \\"ccn-cn-shanghai\\"\\n            }\\n          ]\\n        },\\n        \\"Communities\\": {\\n          \\"Community\\": [\\n            \\"65501:1\\"\\n          ]\\n        },\\n        \\"AsPaths\\": {\\n          \\"AsPath\\": [\\n            \\"65501\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCenChildInstanceRouteEntriesResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>17A57456-EF48-419D-9AE6-9B03D9996018</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>4</TotalCount>\\n    <CenRouteEntries>\\n        <Status>Active</Status>\\n        <Type>CEN</Type>\\n        <PublishStatus>Published</PublishStatus>\\n        <NextHopType>VBR</NextHopType>\\n        <OperationalMode>true</OperationalMode>\\n        <NextHopRegionId>cn-hangzhou</NextHopRegionId>\\n        <NextHopInstanceId>vbr-bp13gtbhdp0pfqg6s****</NextHopInstanceId>\\n        <DestinationCidrBlock>10.0.0.0/24</DestinationCidrBlock>\\n        <RouteTableId>vtb-bp1r9pvl4xen8s9ju****</RouteTableId>\\n        <CenRouteMapRecords>\\n            <RouteMapId>cenrmap-w4yf7toozfol3q****</RouteMapId>\\n            <RegionId>cn-hangzhou</RegionId>\\n        </CenRouteMapRecords>\\n        <Conflicts>\\n            <Status>conflict</Status>\\n            <DestinationCidrBlock>192.168.1.0/24</DestinationCidrBlock>\\n            <InstanceId>ccn-0q3b7oviikmm9h****</InstanceId>\\n            <InstanceType>CCN</InstanceType>\\n            <RegionId>ccn-cn-shanghai</RegionId>\\n        </Conflicts>\\n        <Communities>65501:1</Communities>\\n        <AsPaths>65501</AsPaths>\\n    </CenRouteEntries>\\n</DescribeCenChildInstanceRouteEntriesResponse>","errorExample":""}]',
      'title' => '查询云企业网的网络实例路由条目',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribePublishedRouteEntries' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值为**10**，取值范围：**1**~**500**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jm****',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp18sth14qii3pnv****',
          ),
        ),
        4 => 
        array (
          'name' => 'ChildInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例类型。取值： 

- **VPC**：专有网络。

- **VBR**：边界路由器。

- **CCN**：云连接网。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        5 => 
        array (
          'name' => 'ChildInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        6 => 
        array (
          'name' => 'ChildInstanceRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的路由表ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vtb-bp174d1gje79u1g4****',
          ),
        ),
        7 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的路由条目的目标网段。',
            'type' => 'string',
            'required' => false,
            'example' => '172.16.0.0/16',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FF1A7B2A-677F-4F71-96EA-6002B329F437',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PublishedRouteEntries' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PublishedRouteEntry' => 
                  array (
                    'description' => '路由条目信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'NextHopId' => 
                        array (
                          'description' => '路由条目下一跳关联的实例ID。',
                          'type' => 'string',
                          'example' => ' ecs-bp18sth14qii3pn****',
                        ),
                        'PublishStatus' => 
                        array (
                          'description' => '在云企业网中的发布状态：

- **Published**：已发布。

- **NonPublished**：未发布。',
                          'type' => 'string',
                          'example' => 'Published',
                        ),
                        'ChildInstanceRouteTableId' => 
                        array (
                          'description' => '网络实例的路由表ID。',
                          'type' => 'string',
                          'example' => 'vtb-il7qut3mjgtlcbpk2****',
                        ),
                        'NextHopType' => 
                        array (
                          'description' => '路由条目下一跳关联的实例类型。

- **Instance**：ECS实例。
- **HaVip**：高可用虚拟IP。
- **RouterInterface**：路由器接口。
- **NetworkInterface**：弹性网卡。
- **VpnGateway**：VPN网关。
- **IPv6Gateway**：IPv6网关。
- **Ipv4Gateway**：IPv4网关。
- **NatGateway**：NAT网关。
- **Attachment**：网络实例连接。
- **service**：云服务。
- **VBR**：边界路由器。
- **CCN**：云连接网。
- **VPC**：专有网络。
- **local**：表示当前路由条目为网络实例的系统路由，没有下一跳。
- **TR**：转发路由器。
- **BlackHole**：表示当前路由条目为黑洞路由，没有下一跳。
- **EcRouterInterface**：高速通道路由器接口。
- **HealthCheck**：健康检查。
- **AS**：云连接网接入网关。
- **classicLink**：经典网络实例。
- **GatewayEndpoint**：网关终端节点。
- **CPE**：边界路由器连接的本地数据中心。',
                          'type' => 'string',
                          'example' => 'Instance',
                        ),
                        'OperationalMode' => 
                        array (
                          'description' => '是否允许发布或撤销该路由到云企业网。

- **true**：允许发布或撤销。

- **false**：不允许发布或撤销。
',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'DestinationCidrBlock' => 
                        array (
                          'description' => '路由条目的目标网段。',
                          'type' => 'string',
                          'example' => '172.16.0.0/16',
                        ),
                        'RouteType' => 
                        array (
                          'description' => '路由条目的类型。

- **CEN**：表示通过云企业网传递的路由。
- **System**：表示系统路由。
- **Custom**：表示自定义路由。',
                          'type' => 'string',
                          'example' => 'System',
                        ),
                        'Conflicts' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Conflict' => 
                            array (
                              'description' => '产生冲突的路由条目信息列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Status' => 
                                  array (
                                    'description' => '路由条目产生冲突的原因。

- **conflict**：路由条目的目标网段相同造成的冲突。  
         
- **overflow**：其他网络实例路由表的路由条目数量超出限制造成的冲突。  ',
                                    'type' => 'string',
                                    'example' => 'conflict',
                                  ),
                                  'DestinationCidrBlock' => 
                                  array (
                                    'description' => '产生冲突的路由条目的目标网段。',
                                    'type' => 'string',
                                    'example' => '192.168.20.0/24',
                                  ),
                                  'InstanceId' => 
                                  array (
                                    'description' => '产生路由冲突的对端的网络实例ID。',
                                    'type' => 'string',
                                    'example' => 'ccn-0q3b7oviikmm9h****',
                                  ),
                                  'InstanceType' => 
                                  array (
                                    'description' => '产生路由条目冲突的对端的网络实例类型。

- **VPC**：专有网络。
- **VBR**：边界路由器。
- **CCN**：云连接网。',
                                    'type' => 'string',
                                    'example' => 'CCN',
                                  ),
                                  'RegionId' => 
                                  array (
                                    'description' => '产生路由条目冲突的对端的网络实例所属地域ID。
',
                                    'type' => 'string',
                                    'example' => 'ccn-cn-shanghai',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterIllegal.CenInstanceId',
            'errorMessage' => 'The parameter of CEN instance id is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterIllegal.ChildInstanceRegionId',
            'errorMessage' => 'The parameter of child instance region id is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'VRC_ERROR',
            'errorMessage' => 'VRC error',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterIllegal.ChildInstanceType',
            'errorMessage' => 'The parameter of child instance type is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterIllegal',
            'errorMessage' => 'The parameter is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'Instance.NotExist',
            'errorMessage' => 'The instance is not exist.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.ChildInstanceStatus',
            'errorMessage' => 'The child-instance is not in a valid state for the operation.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.CenInstanceStatus',
            'errorMessage' => 'The CEN instance is not in a valid state for the operation.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Internal error.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"FF1A7B2A-677F-4F71-96EA-6002B329F437\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 2,\\n  \\"PublishedRouteEntries\\": {\\n    \\"PublishedRouteEntry\\": [\\n      {\\n        \\"NextHopId\\": \\" ecs-bp18sth14qii3pn****\\",\\n        \\"PublishStatus\\": \\"Published\\",\\n        \\"ChildInstanceRouteTableId\\": \\"vtb-il7qut3mjgtlcbpk2****\\",\\n        \\"NextHopType\\": \\"Instance\\",\\n        \\"OperationalMode\\": true,\\n        \\"DestinationCidrBlock\\": \\"172.16.0.0/16\\",\\n        \\"RouteType\\": \\"System\\",\\n        \\"Conflicts\\": {\\n          \\"Conflict\\": [\\n            {\\n              \\"Status\\": \\"conflict\\",\\n              \\"DestinationCidrBlock\\": \\"192.168.20.0/24\\",\\n              \\"InstanceId\\": \\"ccn-0q3b7oviikmm9h****\\",\\n              \\"InstanceType\\": \\"CCN\\",\\n              \\"RegionId\\": \\"ccn-cn-shanghai\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":"{\\n  \\"TotalCount\\": 2, \\n  \\"PublishRouteEntries\\": {\\n    \\"PublishRouteEntries\\": [\\n      {\\n        \\"DestinationCidrBlock\\": \\"100.64.0.0/10\\", \\n        \\"NextHopId\\": \\"\\", \\n        \\"NextHopType\\": \\"service\\", \\n        \\"ChildInstanceRouteTableId\\": \\"vtb-il7qut3mjgtlcbpk2ie31\\", \\n        \\"PublishStatus\\": \\"NonPublished\\", \\n        \\"RouteConflicts\\": {\\n          \\"RouteConflicts\\": []\\n        }, \\n        \\"RouteType\\": \\"System\\"\\n      }, \\n      {\\n        \\"DestinationCidrBlock\\": \\"192.168.10.0/24\\", \\n        \\"NextHopId\\": \\"\\", \\n        \\"NextHopType\\": \\"local\\", \\n        \\"ChildInstanceRouteTableId\\": \\"vtb-il7qut3mjgtlcbpk2ie31\\", \\n        \\"PublishStatus\\": \\"Published\\", \\n        \\"RouteConflicts\\": {\\n          \\"RouteConflicts\\": []\\n        }, \\n        \\"RouteType\\": \\"System\\"\\n      }\\n    ]\\n  }, \\n  \\"PageNumber\\": 1, \\n  \\"RequestId\\": \\"FF1A7B2A-677F-4F71-96EA-6002B329F437\\", \\n  \\"PageSize\\": 10\\n}"},{"type":"xml","example":"<DescribeRouteConflictResponse>\\n\\t<TotalCount>2</TotalCount>\\n\\t<PublishRouteEntries>\\n\\t\\t<PublishRouteEntries>\\n\\t\\t\\t<DestinationCidrBlock>100.64.0.0/10</DestinationCidrBlock>\\n\\t\\t\\t<NextHopId></NextHopId>\\n\\t\\t\\t<NextHopType>service</NextHopType>\\n\\t\\t\\t<ChildInstanceRouteTableId>vtb-il7qut3mjgtlcbpk2****</ChildInstanceRouteTableId>\\n\\t\\t\\t<PublishStatus>NonPublished</PublishStatus>\\n\\t\\t\\t<RouteConflicts></RouteConflicts>\\n\\t\\t\\t<RouteType>System</RouteType>\\n\\t\\t</PublishRouteEntries>\\n\\t\\t<PublishRouteEntries>\\n\\t\\t\\t<DestinationCidrBlock>192.168.10.0/24</DestinationCidrBlock>\\n\\t\\t\\t<NextHopId></NextHopId>\\n\\t\\t\\t<NextHopType>local</NextHopType>\\n\\t\\t\\t<ChildInstanceRouteTableId>vtb-il7qut3mjgtlcbpk2****</ChildInstanceRouteTableId>\\n\\t\\t\\t<PublishStatus>Published</PublishStatus>\\n\\t\\t\\t<RouteConflicts></RouteConflicts>\\n\\t\\t\\t<RouteType>System</RouteType>\\n\\t\\t</PublishRouteEntries>\\n\\t</PublishRouteEntries>\\n\\t<PageNumber>1</PageNumber>\\n\\t<RequestId>FF1A7B2A-677F-4F71-96EA-6002B329F437</RequestId>\\n\\t<PageSize>10</PageSize>\\n</DescribeRouteConflictResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DescribeRouteConflictResponse>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <RequestId>B6C11547-2D56-4EEC-A8D5-FDC5A53E53D0</RequestId>\\n    <RouteConflicts>\\n        <RouteConflict/>\\n    </RouteConflicts>\\n    <TotalCount>0</TotalCount>\\n</DescribeRouteConflictResponse>"}]',
      'title' => '查询路由在CEN中的发布情况',
      'summary' => '您可以调用DescribePublishedRouteEntries接口查询已加载到CEN网络实例（VPC和VBR）的各条路由在CEN中的发布状态、路由条目下一跳关联的实例类型、是否允许发布或撤销该路由到云企业网等信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeRouteConflict' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值为**10**，取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'ChildInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的网络实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ccn-0q3b7oviikmm9h****',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的类型。取值：

- **VPC**：专有网络。

- **VBR**：边界路由器。

- **CCN**：云连接网。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'CCN',
          ),
        ),
        4 => 
        array (
          'name' => 'ChildInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ccn-cn-shanghai',
          ),
        ),
        5 => 
        array (
          'name' => 'ChildInstanceRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的网络实例的路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp174d1gje79u1g4t****',
          ),
        ),
        6 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '产生冲突的路由条目的目标网段。',
            'type' => 'string',
            'required' => false,
            'example' => '172.16.0.0/16',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EE3A2CC7-41F1-58DB-8306-CFC99D9C747B',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RouteConflicts' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RouteConflict' => 
                  array (
                    'description' => '产生冲突的路由条目的信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '路由条目产生冲突的原因。

- **conflict**：路由条目的目标网段相同造成的冲突。  
         
- **overflow**：其他网络实例路由表的路由条目数量超出限制造成的冲突。  
',
                          'type' => 'string',
                          'example' => 'conflict',
                        ),
                        'DestinationCidrBlock' => 
                        array (
                          'description' => '产生冲突的路由条目的目标网段。',
                          'type' => 'string',
                          'example' => '172.16.0.0/16',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '产生路由条目冲突的对端的网络实例ID。',
                          'type' => 'string',
                          'example' => 'ccn-0q3b7oviikmm9h****',
                        ),
                        'InstanceType' => 
                        array (
                          'description' => '产生路由条目冲突的对端的网络实例类型。

- **VPC**：专有网络。

- **VBR**：边界路由器。

- **CCN**：云连接网。',
                          'type' => 'string',
                          'example' => 'CCN',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '产生路由条目冲突的对端的网络实例所属地域ID。',
                          'type' => 'string',
                          'example' => 'ccn-cn-shanghai',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidChildInstanceId.NotFound',
            'errorMessage' => 'The specified ChildInstanceId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"EE3A2CC7-41F1-58DB-8306-CFC99D9C747B\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"RouteConflicts\\": {\\n    \\"RouteConflict\\": [\\n      {\\n        \\"Status\\": \\"conflict\\",\\n        \\"DestinationCidrBlock\\": \\"172.16.0.0/16\\",\\n        \\"InstanceId\\": \\"ccn-0q3b7oviikmm9h****\\",\\n        \\"InstanceType\\": \\"CCN\\",\\n        \\"RegionId\\": \\"ccn-cn-shanghai\\"\\n      }\\n    ]\\n  }\\n}","errorExample":"{\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 0,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"B6C11547-2D56-4EEC-A8D5-FDC5A53E53D0\\",\\n  \\"RouteConflicts\\": {\\n    \\"RouteConflict\\": []\\n  }\\n}"},{"type":"xml","example":"<DescribeRouteConflictResponse>\\n<TotalCount>1</TotalCount>\\n<RequestId>EE3A2CC7-41F1-58DB-8306-CFC99D9C747B</RequestId>\\n<PageSize>10</PageSize>\\n<PageNumber>1</PageNumber>\\n<RouteConflicts>\\n    <RouteConflict>\\n        <InstanceId>ccn-0q3b7oviikmm9h****</InstanceId>\\n        <DestinationCidrBlock>172.16.0.0/16</DestinationCidrBlock>\\n        <RegionId>ccn-cn-shanghai</RegionId>\\n        <InstanceType>CCN</InstanceType>\\n    </RouteConflict>\\n</RouteConflicts>\\n</DescribeRouteConflictResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DescribeRouteConflictResponse>\\n    <PageNumber>1</PageNumber>\\n    <PageSize>10</PageSize>\\n    <RequestId>B6C11547-2D56-4EEC-A8D5-FDC5A53E53D0</RequestId>\\n    <RouteConflicts>\\n        <RouteConflict/>\\n    </RouteConflicts>\\n    <TotalCount>0</TotalCount>\\n</DescribeRouteConflictResponse>"}]',
      'title' => '查询网络实例中存在冲突的路由条目信息',
      'summary' => '调用DescribeRouteConflict接口查询网络实例中存在冲突的路由条目信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'PublishRouteEntries' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        1 => 
        array (
          'name' => 'ChildInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-rj9gt5nll27onu****',
          ),
        ),
        2 => 
        array (
          'name' => 'ChildInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例类型。取值：

- **VPC**：专有网络。
- **VBR**：边界路由器。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'us-west-1',
          ),
        ),
        4 => 
        array (
          'name' => 'ChildInstanceRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp174d1gje7****',
          ),
        ),
        5 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要发布的路由条目的目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '172.16.1.0/24',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FBDB18D8-E91E-4978-8D6C-6E2E3EE10133',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterIllegal.AliUid',
            'errorMessage' => 'The parameter of aliUid is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.UnsupportnexthopType',
            'errorMessage' => 'The nexthop type is unsupported',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOperation.NotFoundRoute',
            'errorMessage' => 'The specified route does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterIllegal.CenInstanceId',
            'errorMessage' => 'The parameter of CEN instance id is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterIllegal.ChildInstanceRegionId',
            'errorMessage' => 'The parameter of child instance region id is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'ParameterIllegal.ChildInstanceType',
            'errorMessage' => 'The parameter of child instance type is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidOperation.UnsupportRouteTableType',
            'errorMessage' => 'The route table type is unsupported',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          8 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'Instance.NotExist',
            'errorMessage' => 'The instance is not exist.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.ChildInstanceStatus',
            'errorMessage' => 'The child-instance is not in a valid state for the operation.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.CenInstanceStatus',
            'errorMessage' => 'The CEN instance is not in a valid state for the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FBDB18D8-E91E-4978-8D6C-6E2E3EE10133\\"\\n}","errorExample":"\\n{\\n    \\"RequestId\\": \\"FBDB18D8-E91E-4978-8D6C-6E2E3EE10133\\"\\n}\\n\\n"},{"type":"xml","example":"<PublishRouteEntriesResponse>\\n    <RequestId>FBDB18D8-E91E-4978-8D6C-6E2E3EE101330</RequestId>\\n</PublishRouteEntriesResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<PublishRouteEntriesResponse>\\n    <RequestId>FBDB18D8-E91E-4978-8D6C-6E2E3EE101330</RequestId>\\n</PublishRouteEntriesResponse>"}]',
      'title' => '将路由条目发布到CEN',
      'summary' => '云企业网支持发布路由的功能。您可以将加载到云企业网中的VPC或VBR中的路由通过调用PublishRouteEntries接口发布到云企业网中，在没有路由冲突的情况下，云企业网中的其他网络实例可以学习到该路由。',
      'description' => '下表为您列举了各个类型的路由条目在云企业网中的默认发布状态。您可以通过调用PublishRouteEntries接口将未发布至云企业网的路由条目发布至云企业网。

| 路由条目        | 路由条目所属实例         |是否默认发布到云企业网
|------------- |-----------------------|--------------------|
|指向ECS实例的路由条目      |VPC       |否 |
|指向VPN网关的路由条目      |VPC       |否 |
|指向高可用虚拟IP的路由条目    |VPC    |否 |
|指向路由器接口的路由条目    |VPC    |否 |
|指向弹性网卡的路由条目    |VPC    |否 |
|指向IPv6网关的路由条目    |VPC    |否 |
|指向NAT网关的路由条目    |VPC    |否 |
|VPC系统路由      | VPC       | 是 |
|指向本地数据中心的路由条目      |VBR      |是 |
|BGP路由    |VBR    |是 |',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'WithdrawPublishedRouteEntries' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-sxjfjkjfkjfiein****',
          ),
        ),
        1 => 
        array (
          'name' => 'ChildInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-rj9gt5nll27onu7****',
          ),
        ),
        2 => 
        array (
          'name' => 'ChildInstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例类型。取值：

- **VPC**：专有网络。
- **VBR**：边界路由器。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        3 => 
        array (
          'name' => 'ChildInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例所属地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'ChildInstanceRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例的路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp174d1gje79u1g4t****',
          ),
        ),
        5 => 
        array (
          'name' => 'DestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要撤回的路由条目的目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '172.16.1.0/24',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FBDB18D8-E91E-4978-8D6C-6E2E3EE10133',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.UnsupportnexthopType',
            'errorMessage' => 'The specified next hop type is not supported by this operation.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.NotFoundRoute',
            'errorMessage' => 'You cannot query the system routing information of the specified instance.',
          ),
          2 => 
          array (
            'errorCode' => 'ParameterIllegal.CenInstanceId',
            'errorMessage' => 'The parameter of CEN instance id is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterIllegal.ChildInstanceRegionId',
            'errorMessage' => 'The parameter of child instance region id is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterIllegal.ChildInstanceType',
            'errorMessage' => 'The parameter of child instance type is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'Instance.NotExist',
            'errorMessage' => 'The instance is not exist.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.ChildInstanceStatus',
            'errorMessage' => 'The child-instance is not in a valid state for the operation.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.CenInstanceStatus',
            'errorMessage' => 'The CEN instance is not in a valid state for the operation.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FBDB18D8-E91E-4978-8D6C-6E2E3EE10133\\"\\n}","errorExample":"\\n{\\n    \\"RequestId\\": \\"FBDB18D8-E91E-4978-8D6C-6E2E3EE10133\\"\\n}\\n\\n"},{"type":"xml","example":"<WithdrawPublishedRouteEntriesResponse>\\n    <RequestId>FBDB18D8-E91E-4978-8D6C-6E2E3EE101330</RequestId>\\n</WithdrawPublishedRouteEntriesResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<PublishRouteEntriesResponse>\\n    <RequestId>FBDB18D8-E91E-4978-8D6C-6E2E3EE101330</RequestId>\\n</PublishRouteEntriesResponse>"}]',
      'title' => '撤回已发布至云企业网的路由条目',
      'summary' => '调用WithdrawPublishedRouteEntries接口撤回专有网络VPC（Virtual Private Cloud）或边界路由器VBR（Virtual border router）实例已发布至云企业网的路由条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateTransitRouterRouteTable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterRouteTableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义路由表名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterRouteTableDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义路由表的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-bp1su1ytdxtataupl****',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次创建请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认）：发送正常请求，只进行校验，通过检查后直接创建自定义路由表。
- **true**：发送检查请求，只进行校验，不会创建自定义路由表。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'tagtest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        6 => 
        array (
          'name' => 'RouteTableOptions',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '路由表功能选项。',
            'type' => 'object',
            'properties' => 
            array (
              'MultiRegionECMP' => 
              array (
                'description' => '多地域等价路由，取值：
- **disable**（默认）：关闭多地域等价路由。关闭多地域等价路由后，从不同地域学到的相同前缀的路由在其他路由属性一致的情况下将会优选Region ID最小的TR作为下一跳（按字母排序），此时流量的时延和不同地域间消耗的带宽会发生变化。请确保充分评估后再关闭。
- **enable**：开启多地域等价路由。开启多地域等价路由后，从不同地域学到的相同前缀的路由在其他路由属性一致的情况下将会形成等价路由，此时流量的时延和不同地域间消耗的带宽会发生变化。请确保充分评估后再开启。',
                'type' => 'string',
                'required' => false,
                'example' => 'disable',
                'default' => 'disable',
                'enum' => 
                array (
                  0 => 'enable',
                  1 => 'disable',
                ),
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TransitRouterRouteTableId' => 
              array (
                'description' => '自定义路由表ID。',
                'type' => 'string',
                'example' => 'vtb-bp1xbcgpgcz9axl9m****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '599904C8-A3DA-4E5F-83B6-D5364E664247',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTransitRouterId.NotFound',
            'errorMessage' => 'TransitRouterId is not found',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.CCNTrNotSupport',
            'errorMessage' => 'Operation failed because the CCN transit router does not support route table.',
          ),
          2 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.TransitRouterId',
            'errorMessage' => 'The parameter TransitrouterId is mandatory.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.BasicTrNotSupport',
            'errorMessage' => 'Operation failed because the Basic TransitRouter does not support RouteTable',
          ),
          5 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouter',
            'errorMessage' => 'TransitRouter status is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.TransitRouterRoutTable',
            'errorMessage' => 'TransitRouterRoutTable quota exceeded.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationUnsupported.MultiRegionEcmp',
            'errorMessage' => 'This region does not support MultiRegionEcmp.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          9 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TransitRouterRouteTableId\\": \\"vtb-bp1xbcgpgcz9axl9m****\\",\\n  \\"RequestId\\": \\"599904C8-A3DA-4E5F-83B6-D5364E664247\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTransitRouterRouteTableResponse>\\n    <TransitRouterRouteTableId>vtb-bp1xbcgpgcz9axl9m****</TransitRouterRouteTableId>\\n    <RequestId>599904C8-A3DA-4E5F-83B6-D5364E664247</RequestId>\\n</CreateTransitRouterRouteTableResponse>","errorExample":""}]',
      'title' => '为企业版转发路由器创建自定义路由表',
      'summary' => '调用CreateTransitRouterRouteTable接口为企业版转发路由器创建自定义路由表。',
      'description' => '- 当前仅企业版转发路由器支持创建自定义路由表。关于企业版转发路由器支持的地域和可用区信息，请参见[什么是云企业网](~~181681~~)。
- **CreateTransitRouterRouteTable**接口属于异步接口，即系统会先返回一个路由表ID，但该路由表并未创建完成，系统后台的创建任务仍在进行。您可以调用**ListTransitRouterRouteTables**接口查询路由表的状态。

    - 当路由表处于**Creating**状态时，表示路由表正在创建中。在该状态下，您只能执行查询操作，不能执行其他操作。
    - 当路由表处于**Active**状态时，表示路由表创建完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteTransitRouterRouteTable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次删除请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认）：发送正常请求，通过检查后直接删除自定义路由表。
- **true**：发送检查请求，只进行校验，不会删除自定义路由表。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '自定义路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp1xbcgpgcz9axl9m****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EAB2F133-8556-4D7C-9E91-7EE4FE9CC7D2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationFailed.DeleteSystemRouteTable',
            'errorMessage' => 'Operation failed because You are not allowed to Delete System Transit Route Table.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTransitRouterRouteTableId.NotFound',
            'errorMessage' => 'TransitRouterRouteTableId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.TransitRouterRouteTableId',
            'errorMessage' => 'The parameter TransitRouterRouteTableId is mandatory.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterRouteTable',
            'errorMessage' => 'TransitRouterRouteTable status is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.DeleteRouteTableWithAssociation',
            'errorMessage' => 'Operation failed because you are not allowed to delete  TransitRouterRouteTable with association',
          ),
          6 => 
          array (
            'errorCode' => 'OperationFailed.DeleteRouteTableWithPropagation',
            'errorMessage' => 'Operation failed because you are not allowed to delete  transit router route table with propagation',
          ),
          7 => 
          array (
            'errorCode' => 'OperationFailed.DeleteRouteTableWithRouteEntry',
            'errorMessage' => 'Operation failed because you are not allowed to delete  transit touter route table with route entry',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.DeleteRouteTableWithRouteAggregation',
            'errorMessage' => 'Operation is invalid because delete route table with route aggregation.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          10 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"EAB2F133-8556-4D7C-9E91-7EE4FE9CC7D2\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTransitRouterRouteTableResponse>\\n    <RequestId>EAB2F133-8556-4D7C-9E91-7EE4FE9CC7D2</RequestId>\\n</DeleteTransitRouterRouteTableResponse>","errorExample":""}]',
      'title' => '删除企业版转发路由器的自定义路由表',
      'summary' => '调用DeleteTransitRouterRouteTable接口删除企业版转发路由器的自定义路由表。',
      'description' => '- 企业版转发路由器的默认路由表不支持删除。
- **DeleteTransitRouterRouteTable**接口属于异步接口，即系统会先返回一个**RequestId**，但自定义路由表并未删除完成，系统后台的删除任务仍在进行。您可以调用**ListTransitRouterRouteTables**接口查询自定义路由表的状态。 

    - 当自定义路由表处于Deleting状态时，表示自定义路由表正在删除中。在该状态下，您只能对自定义路由表执行查询操作，不能执行其他操作。
    - 当查询不到指定自定义路由表时，表示该自定义路由表删除完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateTransitRouterRouteTable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp1dudbh2d5na6b50****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterRouteTableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterRouteTableDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接修改路由表的名称和描述信息。
- **true**：发送检查请求，只进行校验，不会路由表的名称和描述信息。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'RouteTableOptions',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '路由表功能选项。',
            'type' => 'object',
            'properties' => 
            array (
              'MultiRegionECMP' => 
              array (
                'description' => '多地域等价路由，取值：
- **disable**：关闭多地域等价路由。关闭多地域等价路由后，从不同地域学到的相同前缀的路由在其他路由属性一致的情况下将会优选Region ID最小的TR作为下一跳（按字母排序），此时流量的时延和不同地域间消耗的带宽会发生变化。请确保充分评估后再关闭。
- **enable**：开启多地域等价路由。开启多地域等价路由后，从不同地域学到的相同前缀的路由在其他路由属性一致的情况下将会形成等价路由，此时流量的时延和不同地域间消耗的带宽会发生变化。请确保充分评估后再开启。',
                'type' => 'string',
                'required' => false,
                'example' => 'disable',
                'enum' => 
                array (
                  0 => 'enable',
                  1 => 'disable',
                ),
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9D6D5548-F271-41C4-AA9F-A62F5599085B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTransitRouterRouteTableId.NotFound',
            'errorMessage' => 'TransitRouterRouteTableId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'Description is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationUnsupported.MultiRegionEcmp',
            'errorMessage' => 'This region does not support MultiRegionEcmp.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9D6D5548-F271-41C4-AA9F-A62F5599085B\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateTransitRouterRouteTableResponse>\\n    <RequestId>9D6D5548-F271-41C4-AA9F-A62F5599085B</RequestId>\\n</UpdateTransitRouterRouteTableResponse>","errorExample":""}]',
      'title' => '修改企业版转发路由器路由表的名称和描述信息',
      'summary' => '调用UpdateTransitRouterRouteTable接口修改企业版转发路由器路由表的名称、描述信息和开启或关闭多地域等价路由。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTransitRouterRouteTables' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时，每次显示的条目数。取值范围：**1**~**100**，默认值：**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'dd20****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterRouteTableType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表的类型。取值：

- **Custom**：自定义路由表。
- **System**：系统默认路由表。',
            'type' => 'string',
            'required' => false,
            'example' => 'Custom',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'tr-uf654ttymmljlvh2x****',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterRouteTableStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由表的状态。取值：

- **Creating**：创建中。
- **Deleting**：删除中。
- **Active**：可用。',
            'type' => 'string',
            'required' => false,
            'example' => 'Active',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterRouteTableNames',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由表的名称。

您可以一次查询多个路由表的信息，**N**的最大值为**20**。

> 如果您同时通过**TransitRouterRouteTableNames.N**和**TransitRouterRouteTableIds.N**查询路由表的信息时，路由表的名称和路由表的ID需保持一致。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由表的名称。

您可以一次查询多个路由表的信息，**N**的最大值为**20**。

> 如果您同时通过**TransitRouterRouteTableNames.N**和**TransitRouterRouteTableIds.N**查询路由表的信息时，路由表的名称和路由表的ID需保持一致。',
              'type' => 'string',
              'required' => false,
              'example' => 'testname',
            ),
            'required' => false,
            'example' => 'testname',
            'maxItems' => 20,
          ),
        ),
        6 => 
        array (
          'name' => 'TransitRouterRouteTableIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由表的ID。

您可以一次查询多个路由表的信息，**N**的最大值为**20**。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由表的ID。

您可以一次查询多个路由表的信息，**N**的最大值为**20**。',
              'type' => 'string',
              'required' => false,
              'example' => 'vtb-bp1dudbh2d5na6b50****',
            ),
            'required' => false,
            'example' => 'vtb-bp1l8awdb4iuo9uwu****',
            'maxItems' => 20,
          ),
        ),
        7 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        8 => 
        array (
          'name' => 'RouteTableOptions',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '路由表功能选项。',
            'type' => 'object',
            'properties' => 
            array (
              'MultiRegionECMP' => 
              array (
                'description' => '多地域等价路由，取值：
- **disable**：关闭多地域等价路由。关闭多地域等价路由后，从不同地域学到的相同前缀的路由在其他路由属性一致的情况下将会优选Region ID最小的TR作为下一跳（按字母排序），此时流量的时延和不同地域间消耗的带宽会发生变化。请确保充分评估后再关闭。
- **enable**：开启多地域等价路由。开启多地域等价路由后，从不同地域学到的相同前缀的路由在其他路由属性一致的情况下将会形成等价路由，此时流量的时延和不同地域间消耗的带宽会发生变化。请确保充分评估后再开启。',
                'type' => 'string',
                'required' => false,
                'enumValueTitles' => 
                array (
                  'disable' => 'disable',
                  'enable' => 'enable',
                ),
                'example' => 'disable',
              ),
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'dd20****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '82678F4A-C9F7-4CC1-8BF0-D619A63BFC57',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时，每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TransitRouterRouteTables' => 
              array (
                'description' => '路由表信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TransitRouterRouteTableStatus' => 
                    array (
                      'description' => '路由表的状态。

- **Creating**：创建中。
- **Deleting**：删除中。
- **Active**：可用。',
                      'type' => 'string',
                      'example' => 'Active',
                    ),
                    'TransitRouterRouteTableType' => 
                    array (
                      'description' => '路由表的类型。

- **Custom**：自定义路由表。
- **System**：系统默认路由表。',
                      'type' => 'string',
                      'example' => 'System',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '路由表的创建时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mmZ。',
                      'type' => 'string',
                      'example' => '2021-03-15T09:39Z',
                    ),
                    'TransitRouterRouteTableId' => 
                    array (
                      'description' => '路由表ID。',
                      'type' => 'string',
                      'example' => 'vtb-bp1dudbh2d5na6b50****',
                    ),
                    'TransitRouterRouteTableName' => 
                    array (
                      'description' => '路由表的名称。',
                      'type' => 'string',
                      'example' => 'testname',
                    ),
                    'TransitRouterRouteTableDescription' => 
                    array (
                      'description' => '路由表的描述信息。',
                      'type' => 'string',
                      'example' => 'testdesc',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                        ),
                      ),
                    ),
                    'RouteTableOptions' => 
                    array (
                      'description' => '路由表功能选项。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MultiRegionECMP' => 
                        array (
                          'description' => '多地域等价路由，取值：
- **disable**：关闭多地域等价路由。关闭多地域等价路由后，从不同地域学到的相同前缀的路由在其他路由属性一致的情况下将会优选Region ID最小的TR作为下一跳（按字母排序），此时流量的时延和不同地域间消耗的带宽会发生变化。请确保充分评估后再关闭。
- **enable**：开启多地域等价路由。开启多地域等价路由后，从不同地域学到的相同前缀的路由在其他路由属性一致的情况下将会形成等价路由，此时流量的时延和不同地域间消耗的带宽会发生变化。请确保充分评估后再开启。',
                          'type' => 'string',
                          'enumValueTitles' => 
                          array (
                            'disable' => 'disable',
                            'enable' => 'enable',
                          ),
                          'example' => 'disable',
                        ),
                      ),
                    ),
                    'RegionId' => 
                    array (
                      'description' => '企业版转发路由器实例所属的地域ID。',
                      'type' => 'string',
                      'example' => 'cn-beijing',
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => '转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-8vb8bie2koduo5awz****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'NextToken is illegal',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTransitRouterId.NotFound',
            'errorMessage' => 'TransitRouterId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.TagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.TagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'MissingParam.TransitRouterIdOrTransitRouterRouteTables',
            'errorMessage' => 'Either TransitRouterId or TransitRouterRouteTables must be specified.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          7 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"dd20****\\",\\n  \\"RequestId\\": \\"82678F4A-C9F7-4CC1-8BF0-D619A63BFC57\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 20,\\n  \\"TransitRouterRouteTables\\": [\\n    {\\n      \\"TransitRouterRouteTableStatus\\": \\"Active\\",\\n      \\"TransitRouterRouteTableType\\": \\"System\\",\\n      \\"CreateTime\\": \\"2021-03-15T09:39Z\\",\\n      \\"TransitRouterRouteTableId\\": \\"vtb-bp1dudbh2d5na6b50****\\",\\n      \\"TransitRouterRouteTableName\\": \\"testname\\",\\n      \\"TransitRouterRouteTableDescription\\": \\"testdesc\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"test\\",\\n          \\"Value\\": \\"test\\"\\n        }\\n      ],\\n      \\"RouteTableOptions\\": {\\n        \\"MultiRegionECMP\\": \\"disable\\"\\n      },\\n      \\"RegionId\\": \\"cn-beijing\\",\\n      \\"TransitRouterId\\": \\"tr-8vb8bie2koduo5awz****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterRouteTablesResponse>\\n    <NextToken>dd20****</NextToken>\\n    <RequestId>82678F4A-C9F7-4CC1-8BF0-D619A63BFC57</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <MaxResults>1</MaxResults>\\n    <TransitRouterRouteTables>\\n        <TransitRouterRouteTableStatus>Active</TransitRouterRouteTableStatus>\\n        <TransitRouterRouteTableType>System</TransitRouterRouteTableType>\\n        <CreateTime>2021-03-15T09:39Z</CreateTime>\\n        <TransitRouterRouteTableId>vtb-bp1dudbh2d5na6b50****</TransitRouterRouteTableId>\\n        <TransitRouterRouteTableName>testname</TransitRouterRouteTableName>\\n        <TransitRouterRouteTableDescription>testdesc</TransitRouterRouteTableDescription>\\n    </TransitRouterRouteTables>\\n</ListTransitRouterRouteTablesResponse>","errorExample":""}]',
      'title' => '查询企业版转发路由器的路由表信息',
      'summary' => '调用ListTransitRouterRouteTables接口查询企业版转发路由器的路由表的详细信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateTransitRouterRouteEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterRouteEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterRouteEntryDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的描述。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器的路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp1dudbh2d5na6b50****',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterRouteEntryNextHopType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳类型。取值：

- **BlackHole**：表示指定该路由条目为黑洞路由。所有去往目标网段的路由均会被丢弃，无需指定具体的下一跳信息。
- **Attachment**：表示指定该路由条目的下一跳为网络实例连接，且需要指定具体的网络实例连接ID。所有去往目标网段的路由均会被转发至指定的网络实例连接。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'BlackHole',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterRouteEntryDestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.0.0/24',
          ),
        ),
        6 => 
        array (
          'name' => 'TransitRouterRouteEntryNextHopId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的下一跳所关联的网络实例连接ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-nls9fzkfat8934****',
          ),
        ),
        7 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认）：发送正常请求，通过检查后直接创建路由条目。
- **true**：发送检查请求，只进行校验，不会创建路由条目。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TransitRouterRouteEntryId' => 
              array (
                'description' => '路由条目ID。',
                'type' => 'string',
                'example' => 'rte-75eg4jprkvk0pw****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '835E7F4B-B380-4E0F-96A5-6EA572388047',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTransitRouterRouteTableId.NotFound',
            'errorMessage' => 'TransitRouterRouteTableId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'TransitRouterRouteEntryNextHopId.NotFound',
            'errorMessage' => 'TransitRouterRouteEntryNextHopId is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.CreateRouteEntryWithCCNAttachment',
            'errorMessage' => 'Operation failed because Create RouteEntry to CCN Attachment does not support.',
          ),
          4 => 
          array (
            'errorCode' => 'QuotaExceeded.TransitRouterRoutEntry',
            'errorMessage' => 'TransitRouterRoutEntry quota exceeded.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterDestinationCidrBlock',
            'errorMessage' => 'TransitRouterDestinationCidrBlock is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'InstanceExist.TransitRouterRouteEntry',
            'errorMessage' => 'The instance TransitRouterRouteEntry already exists.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterRouteTable',
            'errorMessage' => 'TransitRouterRouteTable status is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'ParamExclusive.RouteEntryIdAndRouteTableIdOrDestCidrBlock',
            'errorMessage' => 'RouteEntryId and TransitRouterRouteTableIdOrDestCidrBlock is mutually exclusive.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'Description is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.NextHopType',
            'errorMessage' => 'The NextHopType is illegal.',
          ),
          12 => 
          array (
            'errorCode' => 'MissingParam.TransitRouterRouteEntryNextHopId',
            'errorMessage' => 'The parameter TransitRouterRouteEntryNextHopId is mandatory',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidTransitRouterRouteEntryNextHopId.NotFound',
            'errorMessage' => 'TransitRouterRouteEntryNextHopId is not found',
          ),
          14 => 
          array (
            'errorCode' => 'OperationFailed.CreateRouteEntryWithSameDestinationCidrBlock',
            'errorMessage' => 'Operation failed because Create RouteEntry with same destination cidrblock does not support.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidDestinationCidrBlock.NotFound',
            'errorMessage' => 'DestinationCidrBlock is not found.',
          ),
          16 => 
          array (
            'errorCode' => 'OperationFailed.CreateRouteEntryWithConnectAttachment',
            'errorMessage' => 'Operation failed because Create RouteEntry to connect Attachment does not support.',
          ),
          17 => 
          array (
            'errorCode' => 'ParamExclusive.NextHopTypeBlackHoleAndNextHopId',
            'errorMessage' => 'TransitRouterRouteEntryNextHopType(BlackHole) and TransitRouterRouteEntryNextHopId is mutually exclusive.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidTransitRouterMode.NeedUpgrade',
            'errorMessage' => 'TransitRouter need to upgrade.',
          ),
          19 => 
          array (
            'errorCode' => 'OperationFailed.CreateTransitRouterRouteEntryWithVPCAttachment',
            'errorMessage' => 'The specified VPC Attachment has not enable IPv6.',
          ),
          20 => 
          array (
            'errorCode' => 'OperationFailed.CreateTransitRouterRouteEntryWithVPNAttachment',
            'errorMessage' => 'Create RouteEntry to VPN Attachment does not support IPv6.',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          22 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TransitRouterRouteEntryId\\": \\"rte-75eg4jprkvk0pw****\\",\\n  \\"RequestId\\": \\"835E7F4B-B380-4E0F-96A5-6EA572388047\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTransitRouterRouteEntryResponse>\\n    <TransitRouterRouteEntryId>rte-75eg4jprkvk0pw****</TransitRouterRouteEntryId>\\n    <RequestId>835E7F4B-B380-4E0F-96A5-6EA572388047</RequestId>\\n</CreateTransitRouterRouteEntryResponse>","errorExample":""}]',
      'title' => '在企业版转发路由器的路由表中添加路由条目',
      'summary' => '在企业版转发路由器的路由表中添加路由条目。',
      'description' => '**CreateTransitRouterRouteEntry**接口属于异步接口，即系统会先返回一个路由条目ID，但该路由条目并未创建完成，系统后台的创建任务仍在进行。您可以调用**ListTransitRouterRouteEntries**接口查询路由条目的状态。 

- 当路由条目处于**Creating**状态时，表示路由条目正在创建中。在该状态下，您只能对该路由条目执行查询操作，不能执行其他操作。
- 当路由条目处于**Active**状态时，表示路由条目创建完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteTransitRouterRouteEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认）：发送正常请求，通过检查后直接删除路由条目。
- **true**：发送检查请求，只进行校验，不会删除路由条目。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterRouteEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rte-75eg4jprkvk0pw****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterRouteEntryNextHopType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳类型。取值：

- **BlackHole**：表示该路由条目为黑洞路由，无需指定具体的下一跳信息。
- **Attachment**：表示该路由条目的下一跳为网络实例连接，且需要指定下一跳的网络实例连接ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'BlackHole',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterRouteEntryDestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的网段。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.0.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterRouteEntryNextHopId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的下一跳所关联的网络实例连接ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-nls9fzkfat8934****',
          ),
        ),
        6 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'vtb-bp1dudbh2d5na6b50****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2D69CCEA-42D0-48B2-8C9A-9BB207F76D6E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRouteEntryId',
            'errorMessage' => 'TransitRouterRouteEntryId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'ParamExclusive.RouteEntryIdAndRouteTableIdOrDestCidrBlock',
            'errorMessage' => 'RouteEntryId and TransitRouterRouteTableIdOrDestCidrBlock is mutually exclusive.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidTransitRouterRouteTableId.NotFound',
            'errorMessage' => 'TransitRouterRouteTableId is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidDestinationCidrBlock.NotFound',
            'errorMessage' => 'DestinationCidrBlock is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.DeleteTransitRouterRouteEntry',
            'errorMessage' => 'Operation failed because this route entry is created automatically.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          7 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2D69CCEA-42D0-48B2-8C9A-9BB207F76D6E\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTransitRouterRouteEntryResponse>\\n    <RequestId>2D69CCEA-42D0-48B2-8C9A-9BB207F76D6E</RequestId>\\n</DeleteTransitRouterRouteEntryResponse>","errorExample":""}]',
      'title' => '删除企业版转发路由器路由表中静态配置的路由条目',
      'summary' => '调用DeleteTransitRouterRouteEntry接口删除企业版转发路由器路由表中黑洞、连接实例类型的静态配置路由条目。',
      'description' => '在您调用本接口删除路由条目前，请先了解以下信息：

- 如果您通过**TransitRouterRouteEntryId**删除指定的路由条目，则您无需填写**TransitRouterRouteTableId**和**TransitRouterRouteEntryDestinationCidrBlock**参数的值，否则会产生参数互斥。
- 如果您未通过**TransitRouterRouteEntryId**删除指定的路由条目，则您需依据路由条目的下一跳类型，填写相应参数：
    - 如果您要删除黑洞路由，则您需要填写**TransitRouterRouteTableId**、**TransitRouterRouteEntryDestinationCidrBlock**、**TransitRouterRouteEntryNextHopType**参数的值。
    - 如果您要删除非黑洞路由，则您需要填写**TransitRouterRouteTableId**、**TransitRouterRouteEntryDestinationCidrBlock**、**TransitRouterRouteEntryNextHopType**、**TransitRouterRouteEntryNextHopId**参数的值。

- **DeleteTransitRouterRouteEntry**接口属于异步接口，即系统会先返回一个**RequestId**，但路由条目并未删除完成，系统后台的删除任务仍在进行。您可以调用**ListTransitRouterRouteEntries**接口查询路由条目的状态。 

    - 当路由条目处于**Deleting**状态时，表示路由条目正在删除中。在该状态下，您只能对该路由条目执行查询操作，不能执行其他操作。
    - 当查询不到指定的路由条目时，表示该路由条目删除完成。

## 使用限制

本接口只能删除静态配置的路由条目，不支持删除自动学习的路由条目。您可以通过调用[ListTransitRouterRouteEntries](~~260941~~)接口查询路由条目的类型。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateTransitRouterRouteEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouterRouteEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rte-ksssq7kto4wfdx****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterRouteEntryName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目修改后的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterRouteEntryDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目修改后的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接修改路由条目的名称和描述信息。
- **true**：发送检查请求，只进行校验，不会修改路由条目的名称和描述信息。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2D69CCEA-42D0-48B2-8C9A-9BB207F76D6E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRouteEntryId',
            'errorMessage' => 'TransitRouterRouteEntryId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'Description is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2D69CCEA-42D0-48B2-8C9A-9BB207F76D6E\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateTransitRouterRouteEntryResponse>\\n    <RequestId>2D69CCEA-42D0-48B2-8C9A-9BB207F76D6E</RequestId>\\n</UpdateTransitRouterRouteEntryResponse>","errorExample":""}]',
      'title' => '修改企业版转发路由器路由表中路由条目的名称和描述信息',
      'summary' => '修改企业版转发路由器路由表中路由条目的名称和描述信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTransitRouterRouteEntries' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时，每次显示的条目数。取值范围：**1**~**100**。默认值：**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterRouteEntryDestinationCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的目标网段（**本参数即将废弃，建议使用RouteFilter参数**）。',
            'type' => 'string',
            'deprecated' => true,
            'required' => false,
            'docRequired' => false,
            'example' => '192.168.0.0/24',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterRouteEntryStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的状态。取值：

- **All**：表示查询全部状态的路由条目。
- **Active（默认值）**：表示仅查询生效状态的路由条目。
- **Rejected**：表示仅查询因路由冲突而被拒绝的路由条目。
- **Prohibited**：表示仅查询因匹配到路由策略而被禁止的路由条目。
- **Standby**：表示仅查询作为备份的路由条目。
- **Candidate**：表示仅查询作为候选的路由条目。

如果您未指定本参数的值，系统默认仅查询生效状态的路由条目。',
            'type' => 'string',
            'required' => false,
            'example' => 'Active',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp1dudbh2d5na6b50****',
          ),
        ),
        4 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'fce19****',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterRouteEntryNames',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由条目的名称。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由条目的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。

>系统仅支持通过本参数查询当前路由表上静态配置的路由，且与TransitRouterRouteEntryIds之外的其他查询条件不兼容。',
              'type' => 'string',
              'required' => false,
              'example' => 'testname',
            ),
            'required' => false,
            'example' => 'testname',
            'maxItems' => 20,
          ),
        ),
        6 => 
        array (
          'name' => 'TransitRouterRouteEntryIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由条目ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由条目ID。

> 系统仅支持通过本参数查询当前路由表上静态配置的路由，且与TransitRouterRouteEntryNames之外的其他查询条件不兼容。',
              'type' => 'string',
              'required' => false,
              'example' => 'rte-oklkgwmj97z6dn****',
            ),
            'required' => false,
            'example' => 'rte-oklkgwmj97z6dn****',
            'maxItems' => 20,
          ),
        ),
        7 => 
        array (
          'name' => 'TransitRouterRouteEntryType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的类型。取值：

- **Propagated**：当前路由表自动学习产生。
- **Static**：当前路由表静态配置产生。',
            'type' => 'string',
            'required' => false,
            'example' => 'Propagated',
          ),
        ),
        8 => 
        array (
          'name' => 'TransitRouterRouteEntryNextHopType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳类型。取值：

- **BlackHole**：表示指定该路由条目为黑洞路由。
- **Attachment**：表示指定该路由条目的下一跳为网络实例连接。',
            'type' => 'string',
            'required' => false,
            'example' => 'Attachment',
          ),
        ),
        9 => 
        array (
          'name' => 'TransitRouterRouteEntryNextHopId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的下一跳所关联的网络实例连接ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-nls9fzkfat8934****',
          ),
        ),
        10 => 
        array (
          'name' => 'TransitRouterRouteEntryNextHopResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的下一跳实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-m5ent6du8deaq5*****',
          ),
        ),
        11 => 
        array (
          'name' => 'TransitRouterRouteEntryNextHopResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的下一跳实例类型。取值：

- **VPC**：专有网络VPC（Virtual Private Cloud）实例。
- **VBR**：边界路由器VBR（Virtual Border Router）实例。
- **TR**：转发路由器实例。
- **VPN**：IPsec连接实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
          ),
        ),
        12 => 
        array (
          'name' => 'TransitRouterRouteEntryOriginResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的起源实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-m5ent6du8deaq5*****',
          ),
        ),
        13 => 
        array (
          'name' => 'TransitRouterRouteEntryOriginResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由条目的起源实例类型。取值：

- **VPC**：专有网络VPC（Virtual Private Cloud）实例。
- **VBR**：边界路由器VBR（Virtual Border Router）实例。
- **TR**：转发路由器实例。
- **VPN**：IPsec连接实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
          ),
        ),
        14 => 
        array (
          'name' => 'PrefixListId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'pl-6ehtn5kqxgeyy08fi****',
          ),
        ),
        15 => 
        array (
          'name' => 'RouteFilter',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由条目网段过滤的条件信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由条目网段过滤条件信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '过滤条件。取值：

- **PrefixExactMatchCidrs**：精确匹配。
- **LongestPrefixMatchCidrs**：最长前缀匹配，支持传入IP和CIDR。
- **SubnetOfMatchCidrs**：子网匹配，匹配传入的CIDR的子网，含传入的CIDR。
- **SupernetOfMatchCidrs**：超网匹配，匹配传入的CIDR的超网，含传入的CIDR。

多个过滤条件之间默认是**与**的关系，即必须符合所有过滤条件，才视为匹配过滤条件。不能重复传入相同的过滤条件。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'PrefixExactMatchCidrs',
                ),
                'Value' => 
                array (
                  'description' => '过滤条件值的列表。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '根据**Key**指定过滤值。一个**Key**支持指定多个过滤值，多个过滤值之间是或的关系，即只要符合其中一个过滤值，则视为匹配该过滤条件。
一个过滤条件最多支持输入500个过滤值。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '192.168.1.0/24',
                  ),
                  'required' => false,
                  'maxItems' => 500,
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'fce19****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C3835E5E-1504-4344-B1BB-98A4110F1079',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '6',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时，每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TransitRouterRouteEntries' => 
              array (
                'description' => '路由条目信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '路由条目信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TransitRouterRouteEntryId' => 
                    array (
                      'description' => '路由条目ID。

>只有静态配置的路由才会返回该参数值。',
                      'type' => 'string',
                      'example' => 'rte-oklkgwmj97z6dn****',
                    ),
                    'TransitRouterRouteEntryDestinationCidrBlock' => 
                    array (
                      'description' => '路由条目的目标网段。',
                      'type' => 'string',
                      'example' => '192.168.0.0/24',
                    ),
                    'TransitRouterRouteEntryType' => 
                    array (
                      'description' => '路由条目的类型。

- **Static**：表示该路由条目为静态配置的路由。
- **Propagated**：表示该路由条目为自动学习到的路由。',
                      'type' => 'string',
                      'example' => 'Static',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '路由条目的创建时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mmZ。

>只有静态配置的路由才会返回该参数值。',
                      'type' => 'string',
                      'example' => '2021-06-15T07:01Z',
                    ),
                    'TransitRouterRouteEntryName' => 
                    array (
                      'description' => '路由条目的名称。

>只有静态配置的路由才会返回该参数值。',
                      'type' => 'string',
                      'example' => 'testname',
                    ),
                    'TransitRouterRouteEntryStatus' => 
                    array (
                      'description' => '路由条目的生效状态。

- **Active**：生效。
- **Rejected**：路由冲突拒绝。
- **Prohibited**：路由策略禁止。
- **Standby**：备份。
- **Candidate**：候选。
- **Creating**：添加中。
- **Deleting**：删除中。',
                      'type' => 'string',
                      'example' => 'Active',
                    ),
                    'TransitRouterRouteEntryNextHopType' => 
                    array (
                      'description' => '路由条目的下一跳类型。

- **BlackHole**：表示该路由条目为黑洞路由，所有去往目标网段的路由均会被丢弃。
- **Attachment**：表示该路由条目的下一跳为网络实例连接，所有去往目标网段的路由均会被转发至指定的网络实例连接。',
                      'type' => 'string',
                      'example' => 'BlackHole',
                    ),
                    'TransitRouterRouteEntryNextHopId' => 
                    array (
                      'description' => '路由条目的下一跳ID。黑洞路由不会返回该参数值。',
                      'type' => 'string',
                      'example' => 'tr-attach-vx6iwhjr1x1j78****',
                    ),
                    'TransitRouterRouteEntryDescription' => 
                    array (
                      'description' => '路由条目的描述信息。

>只有静态配置的路由才会返回该参数值。',
                      'type' => 'string',
                      'example' => 'CidrRoute',
                    ),
                    'OperationalMode' => 
                    array (
                      'description' => '当前路由条目是否可操作。

- **true**：可操作，表示您可以对当前路由条目执行删除操作。
- **false**：不可操作，表示当前路由条目为系统自动生成，不支持编辑。
',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'Tag' => 
                    array (
                      'description' => '路由条目的标签。

仅取值：**PermitVbr**，表示当前路由条目仅会被传播至转发路由器实例下VBR实例的路由表中。

> 仅系统自动生成的转发路由器地址段的路由会返回当前参数。',
                      'type' => 'string',
                      'example' => 'PermitVbr',
                    ),
                    'TransitRouterRouteEntryNextHopResourceId' => 
                    array (
                      'description' => '路由条目的下一跳实例ID。',
                      'type' => 'string',
                      'example' => 'vpc-m5ent6du8deaq5*****',
                    ),
                    'TransitRouterRouteEntryNextHopResourceType' => 
                    array (
                      'description' => '路由条目的下一跳实例类型。

- **VPC**：专有网络VPC（Virtual Private Cloud）实例。
- **VBR**：边界路由器VBR（Virtual Border Router）实例。
- **TR**：转发路由器实例。
- **VPN**：IPsec连接实例。',
                      'type' => 'string',
                      'example' => 'VPC',
                    ),
                    'TransitRouterRouteEntryOriginResourceType' => 
                    array (
                      'description' => '路由条目的起源实例类型。

- **VPC**：专有网络VPC（Virtual Private Cloud）实例。
- **VBR**：边界路由器VBR（Virtual Border Router）实例。
- **TR**：转发路由器实例。
- **VPN**：IPsec连接实例。',
                      'type' => 'string',
                      'example' => 'VPC',
                    ),
                    'TransitRouterRouteEntryOriginResourceId' => 
                    array (
                      'description' => '路由条目的起源实例ID。',
                      'type' => 'string',
                      'example' => 'vpc-m5ent6du8deaq5*****',
                    ),
                    'PrefixListId' => 
                    array (
                      'description' => '前缀列表ID。',
                      'type' => 'string',
                      'example' => 'pl-k1ainl66z3527773d****',
                    ),
                    'PathAttributes' => 
                    array (
                      'description' => '路由路径属性。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Communities' => 
                        array (
                          'description' => '路由条目的Community属性列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '路由条目的Community属性值。',
                            'type' => 'string',
                            'example' => '65501:1',
                          ),
                        ),
                        'AsPaths' => 
                        array (
                          'description' => '路由条目的AS Path属性列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '路由条目的AS Path属性值。',
                            'type' => 'string',
                            'example' => '65501',
                          ),
                        ),
                        'OriginInstanceId' => 
                        array (
                          'description' => '路由产生的原始实例ID。',
                          'type' => 'string',
                          'example' => 'vbr-m5ent6du8deaq5*****
',
                        ),
                        'OriginInstanceType' => 
                        array (
                          'description' => '路由产生的原始实例类型。

- **VPC**：专有网络VPC（Virtual Private Cloud）实例。
- **VBR**：边界路由器VBR（Virtual Border Router）实例。
- **TR**：转发路由器实例。
- **VPN**：IPsec连接实例。
- **CCN**：云连接网（Cloud Connect Network）实例。',
                          'type' => 'string',
                          'example' => 'VBR',
                        ),
                        'OriginRouteType' => 
                        array (
                          'description' => '路由产生时候的路由类型。

- **System**：系统路由。
- **Custom**：自定义路由。
- **Static**：静态路由。
- **BGP**：BGP路由。
- **BlackHole**：黑洞路由。',
                          'type' => 'string',
                          'example' => 'BGP',
                        ),
                        'Preference' => 
                        array (
                          'description' => '路由条目的优先级。

优先级数字越小，表示优先级越高。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '50',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRouteTableId',
            'errorMessage' => 'TransitRouterRouteTableId is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRouteEntryStatus',
            'errorMessage' => 'TransitRouterRouteEntryStatus is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'NextToken is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'ParamExclusive.RouteEntryIdsAndStatus',
            'errorMessage' => 'TransitRouterRouteEntryIds and TransitRouterRouteEntryStatus is mutually exclusive.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidTransitRouterRouteTableId.NotFound',
            'errorMessage' => 'TransitRouterRouteTableId is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'FilterKeyDuplicated.RouteFilter',
            'errorMessage' => 'The keys in RouteFilter are duplicated.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidFilterKey',
            'errorMessage' => 'The key in filter is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRouteEntryNextHopType',
            'errorMessage' => 'TransitRouterRouteEntryNextHopType is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRouteEntryNextHopAttachmentId',
            'errorMessage' => 'TransitRouterRouteEntryNextHopAttachmentId is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRouteEntryNextHopResourceId',
            'errorMessage' => 'TransitRouterRouteEntryNextHopResourceId is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRouteEntryNextHopResourceType',
            'errorMessage' => 'TransitRouterRouteEntryNextHopResourceType is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRouteEntryOriginResourceId',
            'errorMessage' => 'TransitRouterRouteEntryOriginResourceId is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRouteEntryOriginResourceType',
            'errorMessage' => 'TransitRouterRouteEntryOriginResourceType is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRouteEntryType',
            'errorMessage' => 'TransitRouterRouteEntryType is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'IllegalParam.PrefixExactMatchCidr',
            'errorMessage' => 'PrefixExactMatchCidr is invalid.',
          ),
          15 => 
          array (
            'errorCode' => 'IllegalParam.LongestPrefixMatchCidr',
            'errorMessage' => 'LongestPrefixMatchCidr is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.SubnetOfMatchCidr',
            'errorMessage' => 'SubnetOfMatchCidr is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'IllegalParam.SupernetOfMatchCidr',
            'errorMessage' => 'SupernetOfMatchCidr is invalid.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          20 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'The specified RouteTableId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"fce19****\\",\\n  \\"RequestId\\": \\"C3835E5E-1504-4344-B1BB-98A4110F1079\\",\\n  \\"TotalCount\\": 6,\\n  \\"MaxResults\\": 20,\\n  \\"TransitRouterRouteEntries\\": [\\n    {\\n      \\"TransitRouterRouteEntryId\\": \\"rte-oklkgwmj97z6dn****\\",\\n      \\"TransitRouterRouteEntryDestinationCidrBlock\\": \\"192.168.0.0/24\\",\\n      \\"TransitRouterRouteEntryType\\": \\"Static\\",\\n      \\"CreateTime\\": \\"2021-06-15T07:01Z\\",\\n      \\"TransitRouterRouteEntryName\\": \\"testname\\",\\n      \\"TransitRouterRouteEntryStatus\\": \\"Active\\",\\n      \\"TransitRouterRouteEntryNextHopType\\": \\"BlackHole\\",\\n      \\"TransitRouterRouteEntryNextHopId\\": \\"tr-attach-vx6iwhjr1x1j78****\\",\\n      \\"TransitRouterRouteEntryDescription\\": \\"CidrRoute\\",\\n      \\"OperationalMode\\": false,\\n      \\"Tag\\": \\"PermitVbr\\",\\n      \\"TransitRouterRouteEntryNextHopResourceId\\": \\"vpc-m5ent6du8deaq5*****\\",\\n      \\"TransitRouterRouteEntryNextHopResourceType\\": \\"VPC\\",\\n      \\"TransitRouterRouteEntryOriginResourceType\\": \\"VPC\\",\\n      \\"TransitRouterRouteEntryOriginResourceId\\": \\"vpc-m5ent6du8deaq5*****\\",\\n      \\"PrefixListId\\": \\"pl-k1ainl66z3527773d****\\",\\n      \\"PathAttributes\\": {\\n        \\"Communities\\": [\\n          \\"65501:1\\"\\n        ],\\n        \\"AsPaths\\": [\\n          \\"65501\\"\\n        ],\\n        \\"OriginInstanceId\\": \\"vbr-m5ent6du8deaq5*****\\\\n\\",\\n        \\"OriginInstanceType\\": \\"VBR\\",\\n        \\"OriginRouteType\\": \\"BGP\\",\\n        \\"Preference\\": 50\\n      }\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterRouteEntriesResponse>\\n    <NextToken>fce19****</NextToken>\\n    <RequestId>C3835E5E-1504-4344-B1BB-98A4110F1079</RequestId>\\n    <TotalCount>6</TotalCount>\\n    <MaxResults>20</MaxResults>\\n    <TransitRouterRouteEntries>\\n        <TransitRouterRouteEntryId>rte-oklkgwmj97z6dn****</TransitRouterRouteEntryId>\\n        <TransitRouterRouteEntryDestinationCidrBlock>192.168.0.0/24</TransitRouterRouteEntryDestinationCidrBlock>\\n        <TransitRouterRouteEntryType>Static</TransitRouterRouteEntryType>\\n        <CreateTime>2021-06-15T07:01Z</CreateTime>\\n        <TransitRouterRouteEntryName>testname</TransitRouterRouteEntryName>\\n        <TransitRouterRouteEntryStatus>Active</TransitRouterRouteEntryStatus>\\n        <TransitRouterRouteEntryNextHopType>BlackHole</TransitRouterRouteEntryNextHopType>\\n        <TransitRouterRouteEntryNextHopId>tr-attach-vx6iwhjr1x1j78****</TransitRouterRouteEntryNextHopId>\\n        <TransitRouterRouteEntryDescription>CidrRoute</TransitRouterRouteEntryDescription>\\n        <OperationalMode>false</OperationalMode>\\n        <Tag>PermitVbr</Tag>\\n        <TransitRouterRouteEntryNextHopResourceId>vpc-m5ent6du8deaq5*****</TransitRouterRouteEntryNextHopResourceId>\\n        <TransitRouterRouteEntryNextHopResourceType>VPC</TransitRouterRouteEntryNextHopResourceType>\\n        <TransitRouterRouteEntryOriginResourceType>VPC</TransitRouterRouteEntryOriginResourceType>\\n        <TransitRouterRouteEntryOriginResourceId>vpc-m5ent6du8deaq5*****</TransitRouterRouteEntryOriginResourceId>\\n        <PrefixListId>pl-k1ainl66z3527773d****</PrefixListId>\\n        <Preference>50</Preference>\\n    </TransitRouterRouteEntries>\\n</ListTransitRouterRouteEntriesResponse>","errorExample":""}]',
      'title' => '查询企业版转发路由器路由表中的路由条目信息',
      'summary' => '调用ListTransitRouterRouteEntries接口查询企业版转发路由器路由表中的路由条目的详细信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTransitRouterRouteTableAssociations' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。默认值：**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '50',
            'default' => '50',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'a415****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'vtb-bp1dudbh2d5na6b50****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'tr-attach-nls9fzkfat8934****',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterAttachmentResourceId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => '下一跳资源ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp1h8vbrbcgohcju5****',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterAttachmentResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳资源类型。

- **VPC**：专有网络实例。
- **VBR**：边界路由器实例。
- **TR**：转发路由器实例。
- **VPN**：VPN连接。',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
          ),
        ),
        6 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联转发的状态。
- **Active**：可用。
- **Associating**：加载中。
- **Dissociating**：卸载中。',
            'type' => 'string',
            'required' => false,
            'example' => 'Active',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'a415****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F6B1D9AB-176D-4399-801D-8BC576F4EB0D',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '50',
              ),
              'TransitRouterAssociations' => 
              array (
                'description' => '关联转发关系信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '关联转发关系信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TransitRouterAttachmentId' => 
                    array (
                      'description' => '网络实例连接ID。',
                      'type' => 'string',
                      'example' => 'tr-attach-nls9fzkfat8934****',
                    ),
                    'Status' => 
                    array (
                      'description' => '关联转发的状态。

- **Active**：可用。
- **Associating**：加载中。
- **Dissociating**：卸载中。
- **Deleted**：已卸载。',
                      'type' => 'string',
                      'example' => 'Associating',
                    ),
                    'ResourceType' => 
                    array (
                      'description' => '下一跳资源类型。

- **VPC**：专有网络实例。
- **VBR**：边界路由器实例。
- **TR**：转发路由器实例。
- **VPN**：VPN连接。',
                      'type' => 'string',
                      'example' => 'VPC',
                    ),
                    'ResourceId' => 
                    array (
                      'description' => '下一跳资源ID。',
                      'type' => 'string',
                      'example' => 'vpc-bp1h8vbrbcgohcju5****',
                    ),
                    'TransitRouterRouteTableId' => 
                    array (
                      'description' => '企业版转发路由器路由表ID。',
                      'type' => 'string',
                      'example' => 'vtb-bp1dudbh2d5na6b50****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The parameter NextToken is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.MaxResults',
            'errorMessage' => 'The specified MaxResults is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"a415****\\",\\n  \\"RequestId\\": \\"F6B1D9AB-176D-4399-801D-8BC576F4EB0D\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 50,\\n  \\"TransitRouterAssociations\\": [\\n    {\\n      \\"TransitRouterAttachmentId\\": \\"tr-attach-nls9fzkfat8934****\\",\\n      \\"Status\\": \\"Associating\\",\\n      \\"ResourceType\\": \\"VPC\\",\\n      \\"ResourceId\\": \\"vpc-bp1h8vbrbcgohcju5****\\",\\n      \\"TransitRouterRouteTableId\\": \\"vtb-bp1dudbh2d5na6b50****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterRouteTableAssociationsResponse>\\n    <RequestId>F6B1D9AB-176D-4399-801D-8BC576F4EB0D</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <MaxResults>50</MaxResults>\\n    <TransitRouterAssociations>\\n        <TransitRouterAttachmentId>tr-attach-nls9fzkfat8934****</TransitRouterAttachmentId>\\n        <Status>Associating</Status>\\n        <ResourceType>VPC</ResourceType>\\n        <ResourceId>vpc-bp1h8vbrbcgohcju5****</ResourceId>\\n        <TransitRouterRouteTableId>vtb-bp1dudbh2d5na6b50****</TransitRouterRouteTableId>\\n    </TransitRouterAssociations>\\n</ListTransitRouterRouteTableAssociationsResponse>","errorExample":""}]',
      'title' => '查询企业版转发路由器路由表或网络实例连接已创建的关联转发关系',
      'summary' => '调用ListTransitRouterRouteTableAssociations接口查询企业版转发路由器路由表或网络实例连接已创建的关联转发关系。',
      'description' => '调用**ListTransitRouterRouteTableAssociations**接口时，请求参数**TransitRouterRouteTableId**和**TransitRouterAttachmentId**需至少输入一个：

- 如果仅指定了**TransitRouterRouteTableId**参数的值，则表示您要查询与企业版转发路由器路由表创建关联转发关系的网络实例连接的信息。
- 如果仅指定了**TransitRouterAttachmentId**参数的值，则表示您要查询与网络实例连接创建关联转发关系的企业版转发路由器路由表的信息。
- 如果同时指定了**TransitRouterRouteTableId**和**TransitRouterAttachmentId**参数的值，则表示您要查询网络实例连接与企业版转发路由器路由表之间的关联转发关系。
    - 如果网络实例连接和企业版转发路由器路由表之间存在关联转发关系，则系统正常返回关联转发关系的信息。
    - 如果网络实例连接和企业版转发路由器路由表之间不存在关联转发关系，则**TransitRouterAssociations**数组返回为空值。

在调用**ListTransitRouterRouteTableAssociations**接口过程时请确保输入的参数值无误。
如果您输入的参数有误调用接口后仍然会返回**RequestId**信息，但不会企业版转发路由器路由表或网络实例连接已创建的关联转发关系。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociateTransitRouterAttachmentWithRouteTable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-nls9fzkfat8934****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp1dudbh2d5na6b50****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认）：发送正常请求，通过检查后直接创建关联转发关系。
- **true**：发送检查请求，只进行校验，不会创建关联转发关系。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'AssociationExist.TransitRouterTable',
            'errorMessage' => 'The specified association already exists.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterTableType',
            'errorMessage' => 'When peer attachment is associated with a custom routeTable, the Transit Router in both regions must be enterprise.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.TransitRouterType',
            'errorMessage' => 'Operation failed because transit router type not support this operation.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.AttachmentOrRouteTable',
            'errorMessage' => 'The resource is not in a valid state for the operation.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterTableId',
            'errorMessage' => 'The specified TransitRouterTableId is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.Associate',
            'errorMessage' => 'The specified attachment or routeTable  is not supported by this operation.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          7 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'The specified RouteTableId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidAttachmentId.NotFound',
            'errorMessage' => 'The specified AttachmentId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociateTransitRouterAttachmentWithRouteTableResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</AssociateTransitRouterAttachmentWithRouteTableResponse>","errorExample":""}]',
      'title' => '创建关联转发关系',
      'summary' => '创建关联转发关系。',
      'description' => '创建网络实例连接后，您需要为其设置关联转发关系，将网络实例连接关联到企业版转发路由器路由表。关联后，企业版转发路由器将依据该路由表中的路由条目信息转发网络实例的流量。在调用本接口创建关联转发关系前，请先了解以下信息：

- 仅企业版转发路由器路由表支持创建关联转发关系。关于企业版转发路由器支持的地域和可用区信息，请参见[什么是云企业网](~~181681~~)。
- 一个网络实例连接仅支持与一个企业版转发路由器路由表建立关联转发关系。
- **AssociateTransitRouterAttachmentWithRouteTable**接口属于异步接口，即系统会先返回一个**RequestId**，但网络实例连接和路由表并未完全建立关联转发关系，系统后台的关联任务仍在进行。您可以调用**ListTransitRouterRouteTableAssociations**接口查询网络实例连接和路由表的关联转发状态。

    - 当关联转发状态为**Associating**时，表示网络实例连接和路由表正在建立关联转发关系。在该状态下，您只能对网络实例连接和路由表之间的关联转发关系执行查询操作，不能执行其他操作。
    - 当关联转发状态为**Active**时，表示网络实例连接和路由表已成功建立关联转发关系。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ReplaceTransitRouterRouteTableAssociation' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会更换网络实例连接关联的转发路由器路由表。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接更换网络实例连接关联的转发路由器路由表。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-attach-071g5j5tefg4x6****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接待关联的转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vtb-bp1cprmc6xmzjd66i****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '160BD7D3-3D1E-5702-9AF0-56E4B15FCB65',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAttachmentId.NotFound',
            'errorMessage' => 'The specified AttachmentId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'The specified RouteTableId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitAttachment',
            'errorMessage' => 'The specified TransitAttachment does not support the operation.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterTableType',
            'errorMessage' => 'TransitRouterTableType is illegal.	',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.Status',
            'errorMessage' => 'The TransitRouterRouteTable or TransitRouterAttachment Status is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"160BD7D3-3D1E-5702-9AF0-56E4B15FCB65\\"\\n}","errorExample":""},{"type":"xml","example":"<ReplaceTransitRouterRouteTableAssociationResponse>\\n    <RequestId>160BD7D3-3D1E-5702-9AF0-56E4B15FCB65</RequestId>\\n</ReplaceTransitRouterRouteTableAssociationResponse>","errorExample":""}]',
      'title' => '更换网络实例连接关联的转发路由器路由表',
      'summary' => '更换网络实例连接关联的转发路由器路由表。',
      'description' => '- 仅企业版转发路由器下的网络实例连接支持变更关联的转发路由器路由表。
- **ReplaceTransitRouterRouteTableAssociation**接口属于异步接口，即系统会先返回一个**RequestId**，但网络实例连接关联的转发路由器路由表并未变更成功。系统后台的变更任务仍在进行。您可以调用**ListTransitRouterRouteTableAssociations**接口查询网络实例连接和新的转发路由器路由表之间的关联转发状态。

    - 当关联转发状态为**Replacing**时，表示网络实例连接正在变更关联的转发路由器路由表。在该状态下，您只能对网络实例连接和转发路由器路由表之间的关联转发关系执行查询操作，不能执行其他操作。
    - 当关联转发状态为**Active**时，表示网络实例连接已成功变更关联的转发路由器路由表。',
    ),
    'DissociateTransitRouterAttachmentFromRouteTable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-nls9fzkfat8934****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp1dudbh2d5na6b50****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认）：发送正常请求，通过检查后直接解除关联转发关系。
- **true**：发送检查请求，只进行校验，不会解除关联转发关系。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回对应请求ID。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.AttachmentOrRouteTable',
            'errorMessage' => 'The resource is not in a valid state for the operation.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationUnsupported.dissociateRouteTable',
            'errorMessage' => 'The specified attachment or routeTable  is not supported by this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterConnectPeer',
            'errorMessage' => 'The resource is not in a valid state for the operation.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAttachmentId.NotFound',
            'errorMessage' => 'The specified AttachmentId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'The specified RouteTableId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<DissociateTransitRouterAttachmentFromRouteTableResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</DissociateTransitRouterAttachmentFromRouteTableResponse>","errorExample":""}]',
      'title' => '解除关联转发关系',
      'summary' => '解除关联转发关系。',
      'description' => '**DissociateTransitRouterAttachmentFromRouteTable**接口属于异步接口，即系统会先返回一个**RequestId**，但网络实例连接和路由表并未完全解除关联转发关系，系统后台的解除任务仍在进行。您可以调用**ListTransitRouterRouteTableAssociations**接口查询网络实例连接和路由表的关联转发状态。 

- 当关联转发状态为**Dissociating**时，表示网络实例连接和路由表正在解除关联转发关系。在该状态下，您只能对网络实例连接和路由表之间的关联转发关系执行查询操作，不能执行其他操作。
- 当**ListTransitRouterRouteTableAssociations**接口无法查询到网络实例连接和路由表的关联转发关系时，表示网络实例连接和路由表已成功解除关联转发关系。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableTransitRouterRouteTablePropagation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-nls9fzkfat8934****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp1dudbh2d5na6b50****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认）：发送正常请求，通过检查后直接创建路由学习关系。
- **true**：发送检查请求，只进行校验，不会创建路由学习关系。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '59CF8BF9-DE61-421E-B903-D56AF46A303C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterTableId',
            'errorMessage' => 'The specified TransitRouterTableId is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationFailed.TransitRouterType',
            'errorMessage' => 'The specified TransitRouterType does not support the operation.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.AttachmentOrRouteTable',
            'errorMessage' => 'The resource is not in a valid state for the operation.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationUnsupported.EnablePropagation',
            'errorMessage' => 'The specified attachment or routeTable  is not supported by this operation.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'The specified RouteTableId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidAttachmentId.NotFound',
            'errorMessage' => 'The specified AttachmentId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"59CF8BF9-DE61-421E-B903-D56AF46A303C\\"\\n}","errorExample":""},{"type":"xml","example":"<EnableTransitRouterRouteTablePropagationResponse>\\n    <RequestId>59CF8BF9-DE61-421E-B903-D56AF46A303C</RequestId>\\n</EnableTransitRouterRouteTablePropagationResponse>","errorExample":""}]',
      'title' => '创建路由学习关系',
      'summary' => '创建路由学习关系。',
      'description' => '在您创建网络实例连接后，您可以为其设置路由学习关系。设置后，网络实例连接自动传播网络实例的路由至其关联的路由表中。在调用本接口创建路由学习关系前，请先了解以下信息：

- 仅企业版转发路由器支持创建路由学习关系。关于企业版转发路由器支持的地域和可用区信息，请参见[什么是云企业网](~~181681~~)。
- **EnableTransitRouterRouteTablePropagation**接口属于异步接口，即系统会先返回一个**RequestId**，但网络实例连接和路由表并未完全建立路由学习关系，系统后台的创建任务仍在进行。您可以调用**ListTransitRouterRouteTablePropagations**接口查询网络实例连接和路由表之间的路由学习关系。 

    - 当路由学习关系处于为**Enabling**状态时，表示网络实例连接和路由表正在建立路由学习关系。在该状态下，您只能对网络实例连接和路由表之间的路由学习关系执行查询操作，不能执行其他操作。
    - 当路由学习关系处于**Active**状态时，表示网络实例连接和路由表已成功建立路由学习关系。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableTransitRouterRouteTablePropagation' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-vx6iwhjr1x1j78****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp1dudbh2d5na6b50****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认）：发送正常请求，通过检查后直接解除路由学习关系。
- **true**：发送检查请求，只进行校验，不会解除路由学习关系。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A7C43F99-B1E5-4A53-AB64-4BAE8AF4484E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidAttachmentId.NotFound',
            'errorMessage' => 'The specified AttachmentId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.AttachmentOrRouteTable',
            'errorMessage' => 'The resource is not in a valid state for the operation.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationUnsupported.DisablePropagation',
            'errorMessage' => 'The specified attachment or routeTable  is not supported by this operation.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'The specified RouteTableId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A7C43F99-B1E5-4A53-AB64-4BAE8AF4484E\\"\\n}","errorExample":""},{"type":"xml","example":"<DisableTransitRouterRouteTablePropagationResponse>\\n    <RequestId>A7C43F99-B1E5-4A53-AB64-4BAE8AF4484E</RequestId>\\n</DisableTransitRouterRouteTablePropagationResponse>","errorExample":""}]',
      'title' => '解除路由学习关系',
      'summary' => '解除路由学习关系。',
      'description' => '**DisableTransitRouterRouteTablePropagation**接口属于异步接口，即系统会先返回一个**RequestId**，但网络实例连接和路由表并未完全解除路由学习关系，系统后台的解除任务仍在进行。您可以调用**ListTransitRouterRouteTablePropagations**接口查询网络实例连接和路由表之间的路由学习关系。 

- 当路由学习关系处于**Disabling**状态时，表示网络实例连接和路由表正在解除路由学习关系。在该状态下，您只能对网络实例连接和路由表之间的路由学习关系执行查询操作，不能执行其他操作。
- 当**ListTransitRouterRouteTableAssociations**接口无法查询到网络实例连接和路由表的路由学习关系时，表示网络实例连接和路由表已成功解除路由学习关系。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTransitRouterRouteTablePropagations' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时，每次显示的条目数。默认值为**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '50',
            'default' => '50',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时，下一次查询的Token。',
            'type' => 'string',
            'required' => false,
            'example' => 'dd20****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-bp1dudbh2d5na6b50****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'tr-attach-vx6iwhjr1x1j78****',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterAttachmentResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp1h8vbrbcgohcju5****',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterAttachmentResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例类型。

- **VPC**：专有网络实例。
- **VBR**：边界路由器实例。
- **TR**：转发路由器实例。
- **VPN**：VPN连接。',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
          ),
        ),
        6 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由学习关系状态。
- **Active**：可用。
- **Enabling**：加载中。
- **Disabling**：卸载中。',
            'type' => 'string',
            'required' => false,
            'example' => 'Active',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '分批次查询时，下一次查询的Token。',
                'type' => 'string',
                'example' => 'dd20****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '04C81E0D-945E-4D61-A561-3DEA322F243B',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时，每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '50',
              ),
              'TransitRouterPropagations' => 
              array (
                'description' => '路由学习关系信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TransitRouterAttachmentId' => 
                    array (
                      'description' => '网络实例连接ID。',
                      'type' => 'string',
                      'example' => 'tr-attach-vx6iwhjr1x1j78****',
                    ),
                    'Status' => 
                    array (
                      'description' => '路由学习关系状态。

- **Enabling**：加载中。
- **Disabling**：卸载中。
- **Active**：可用。',
                      'type' => 'string',
                      'example' => 'Active',
                    ),
                    'ResourceType' => 
                    array (
                      'description' => '网络实例类型。

- **VPC**：专有网络实例。
- **VBR**：边界路由器实例。
- **TR**：转发路由器实例。
- **VPN**：VPN连接。',
                      'type' => 'string',
                      'example' => 'VPC',
                    ),
                    'ResourceId' => 
                    array (
                      'description' => '网络实例ID。',
                      'type' => 'string',
                      'example' => 'vpc-bp1h8vbrbcgohcju5****',
                    ),
                    'TransitRouterRouteTableId' => 
                    array (
                      'description' => '企业版转发路由器路由表ID。',
                      'type' => 'string',
                      'example' => 'vtb-bp1dudbh2d5na6b50****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The parameter NextToken is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.MaxResults',
            'errorMessage' => 'The specified MaxResults is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"dd20****\\",\\n  \\"RequestId\\": \\"04C81E0D-945E-4D61-A561-3DEA322F243B\\",\\n  \\"TotalCount\\": 2,\\n  \\"MaxResults\\": 50,\\n  \\"TransitRouterPropagations\\": [\\n    {\\n      \\"TransitRouterAttachmentId\\": \\"tr-attach-vx6iwhjr1x1j78****\\",\\n      \\"Status\\": \\"Active\\",\\n      \\"ResourceType\\": \\"VPC\\",\\n      \\"ResourceId\\": \\"vpc-bp1h8vbrbcgohcju5****\\",\\n      \\"TransitRouterRouteTableId\\": \\"vtb-bp1dudbh2d5na6b50****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterRouteTablePropagationsResponse> \\n<TotalCount>2</TotalCount>\\n<RequestId>04C81E0D-945E-4D61-A561-3DEA322F243B</RequestId>\\n<MaxResults>50</MaxResults>\\n<TransitRouterPropagations>\\n    <Status>Active</Status>\\n    <TransitRouterAttachmentId>tr-attach-nls9fzkfat8934****</TransitRouterAttachmentId>\\n    <TransitRouterRouteTableId>vtb-bp1dudbh2d5na6b50****</TransitRouterRouteTableId>\\n    <ResourceId>vpc-bp1h8vbrbcgohcju5****</ResourceId>\\n    <ResourceType>VPC</ResourceType>\\n</TransitRouterPropagations>\\n<TransitRouterPropagations>\\n    <Status>Active</Status>\\n    <TransitRouterAttachmentId>tr-attach-vx6iwhjr1x1j78****</TransitRouterAttachmentId>\\n    <TransitRouterRouteTableId>vtb-bp1dudbh2d5na6b50****</TransitRouterRouteTableId>\\n    <ResourceId>vpc-bp1kbjcre9vtsebo1****</ResourceId>\\n    <ResourceType>VPC</ResourceType>\\n</TransitRouterPropagations>\\n</ListTransitRouterRouteTablePropagationsResponse> ","errorExample":""}]',
      'title' => '查询企业版转发路由器路由表的路由学习关系',
      'summary' => '查询企业版转发路由器路由表的路由学习关系。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateCenRouteMap' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        1 => 
        array (
          'name' => 'CenRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略应用的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'TransmitDirection',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略的应用方向。取值：

- **RegionIn**：入地域网关方向，表示路由传入云企业网地域网关的方向。

 例如：路由从本地域的网络实例发布到本地域网关，或其他地域的路由发布到本地域网关。

- **RegionOut**：出地域网关方向，表示路由传出云企业网地域网关的方向。

 例如：路由从本地域网关发布到本地域下的网络实例，或发布到其他地域的地域网关。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RegionIn',
            'enum' => 
            array (
              0 => 'RegionIn',
              1 => 'RegionOut',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        4 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略的优先级。取值范围：**1**~**100**。优先级数字越小，表示优先级越高。

> 同地域、同应用方向的路由策略优先级唯一。执行路由策略时，系统从优先级数字最小的路由策略开始匹配条件语句，因此在指定路由策略优先级时，要注意符合期望的匹配顺序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '2999',
            'minimum' => '1',
            'example' => '3',
          ),
        ),
        5 => 
        array (
          'name' => 'MapResult',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '所有条件都匹配后的策略行为。取值：

- **Permit**：允许匹配的路由通过。

- **Deny**：拒绝匹配的路由通过。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Permit',
            'enum' => 
            array (
              0 => 'Permit',
              1 => 'Deny',
            ),
          ),
        ),
        6 => 
        array (
          'name' => 'NextPriority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联的下一条路由策略的优先级。

- 仅**MapResult**取值为**Permit**时，才支持设置关联策略优先级，且被允许通过的路由才会继续匹配关联的下一条路由策略。
- 要关联的下一条路由策略必须和当前路由策略拥有相同的地域和应用方向。
- 关联的下一条路由策略的优先级必须低于当前路由策略的优先级。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '1000',
            'minimum' => '1',
            'example' => '20',
          ),
        ),
        7 => 
        array (
          'name' => 'CidrMatchMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表的匹配模式。取值：

- **Include**：模糊匹配。匹配条件中的路由前缀包含被匹配路由的路由前缀即判定为匹配成功。

 例如：定义10.10.0.0/16的策略可以模糊匹配到10.10.1.0/24的路由。

- **Complete**：精确匹配。匹配条件中的路由前缀必须与被匹配路由的路由前缀一致，才判定为匹配成功。 

 例如：定义10.10.0.0/16的策略仅可以精确匹配到10.10.0.0/16的路由。',
            'type' => 'string',
            'required' => false,
            'example' => 'Include ',
            'enum' => 
            array (
              0 => 'Include',
              1 => 'Complete',
            ),
          ),
        ),
        8 => 
        array (
          'name' => 'AsPathMatchMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'AS Path列表的匹配模式。取值：

- **Include**：模糊匹配，匹配条件中的AS Path与被匹配路由的AS Path有重叠即判定为匹配成功。 

- **Complete**：精确匹配，匹配条件中的AS Path必须与被匹配路由的AS Path一致，才判定为匹配成功。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'Include',
            'enum' => 
            array (
              0 => 'Include',
              1 => 'Complete',
            ),
          ),
        ),
        9 => 
        array (
          'name' => 'CommunityMatchMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Community的匹配模式。取值：

- **Include**：模糊匹配，匹配条件中的Community与被匹配路由的Community有重叠即判定为匹配成功。 

- **Complete**：精确匹配，匹配条件中的Community必须与被匹配路由的Community一致，才判定为匹配成功。',
            'type' => 'string',
            'required' => false,
            'example' => 'Include',
            'enum' => 
            array (
              0 => 'Include',
              1 => 'Complete',
              2 => 'Contain',
            ),
          ),
        ),
        10 => 
        array (
          'name' => 'CommunityOperateMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Community的执行模式。取值：

- **Additive**：添加，表示为路由添加Community。

- **Replace**：替换，表示替换路由原有的Community。

本参数表示路由通过匹配条件后，要执行的操作。',
            'type' => 'string',
            'required' => false,
            'example' => 'Additive',
            'enum' => 
            array (
              0 => 'Additive',
              1 => 'Replace',
            ),
          ),
        ),
        11 => 
        array (
          'name' => 'Preference',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改路由的优先级。

取值范围：**1**~**100**。路由的优先级默认为**50**，取值越小优先级越高。

本参数表示路由通过匹配条件后，要执行的操作。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '50',
          ),
        ),
        12 => 
        array (
          'name' => 'SourceInstanceIdsReverseMatch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否使用源实例ID列表的排除匹配模式。取值：

- **false**（默认值）：否，即路由传递的源实例ID在**SourceInstanceIds.N**中时，匹配通过。

- **true**：是，即路由传递的源实例ID不在**SourceInstanceIds.N**中时，匹配通过。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        13 => 
        array (
          'name' => 'DestinationInstanceIdsReverseMatch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否使用目的实例ID列表的排除匹配模式。取值：

- **false**（默认值）：否，即路由传递的目的实例ID在**DestinationInstanceIds.N**中时，匹配通过。

- **true**：是，即路由传递的目的实例ID不在**DestinationInstanceIds.N**中时，匹配通过。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        14 => 
        array (
          'name' => 'MatchAddressType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由需匹配的IP地址类型。取值：

- **IPv4**：表示只匹配IPv4路由。
- **IPv6**：表示只匹配IPv6路由。

本参数可以为空，表示匹配所有类型的路由。',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        15 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器的路由表ID。

如果您不输入路由表ID，则路由策略自动关联至转发路由器的默认路由表。',
            'type' => 'string',
            'required' => false,
            'example' => 'vtb-gw8nx3515m1mbd1z1****',
          ),
        ),
        16 => 
        array (
          'name' => 'SourceInstanceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的源实例ID列表。支持输入以下类型的实例ID：

- 专有网络VPC（Virtual Private Cloud）实例ID
- 边界路由器VBR（Virtual Border Router）实例ID
- 云连接网CCN（Cloud Connect Network）实例ID
- 智能接入网关（Smart Access Gateway）实例ID
- IPsec连接ID

最多支持输入32个实例ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的源实例ID列表。支持输入以下类型的实例ID：

- 专有网络VPC（Virtual Private Cloud）实例ID
- 边界路由器VBR（Virtual Border Router）实例ID
- 云连接网CCN（Cloud Connect Network）实例ID
- 智能接入网关（Smart Access Gateway）实例ID
- IPsec连接ID

最多支持输入32个实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'vpc-adeg3544fdf34vf****',
            ),
            'required' => false,
            'example' => 'vpc-adeg3544fdf34vf****',
            'maxItems' => 32,
          ),
        ),
        17 => 
        array (
          'name' => 'DestinationInstanceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的目的实例ID列表。支持输入以下类型的实例ID：

- 专有网络VPC（Virtual Private Cloud）实例ID
- 边界路由器VBR（Virtual Border Router）实例ID
- 云连接网CCN（Cloud Connect Network）实例ID
- 智能接入网关（Smart Access Gateway）实例ID
- IPsec连接ID

最多支持输入32个实例ID。

>仅路由策略的应用方向为出地域网关方向，且目的实例ID为本地域下的实例ID时，目的实例ID列表才会生效。

',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的目的实例ID列表。支持输入以下类型的实例ID：

- 专有网络VPC（Virtual Private Cloud）实例ID
- 边界路由器VBR（Virtual Border Router）实例ID
- 云连接网CCN（Cloud Connect Network）实例ID
- 智能接入网关（Smart Access Gateway）实例ID
- IPsec连接ID

最多支持输入32个实例ID。

>仅路由策略的应用方向为出地域网关方向，且目的实例ID为本地域下的实例ID时，目的实例ID列表才会生效。',
              'type' => 'string',
              'required' => false,
              'example' => 'vpc-afrfs434465fdf****',
            ),
            'required' => false,
            'example' => 'vpc-afrfs434465fdf****',
            'maxItems' => 32,
          ),
        ),
        18 => 
        array (
          'name' => 'SourceRouteTableIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的源路由表ID列表。最多支持输入32个路由表ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的源路由表ID列表。最多支持输入32个路由表ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'vtb-adfr233vf34rvd4****',
            ),
            'required' => false,
            'example' => 'vtb-adfr233vf34rvd4****',
            'maxItems' => 32,
          ),
        ),
        19 => 
        array (
          'name' => 'DestinationRouteTableIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的目的路由表ID列表。最多支持输入32个路由表ID。

>仅路由策略的应用方向为出地域网关方向，且目的路由表ID为本地域下网络实例的路由表ID时，目的路由表ID列表才会生效。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的目的路由表ID列表。最多支持输入32个路由表ID。

>仅路由策略的应用方向为出地域网关方向，且目的路由表ID为本地域下网络实例的路由表ID时，目的路由表ID列表才会生效。
',
              'type' => 'string',
              'required' => false,
              'example' => 'vtb-adefrgtr144vf****',
            ),
            'required' => false,
            'example' => 'vtb-adefrgtr144vf****',
            'maxItems' => 32,
          ),
        ),
        20 => 
        array (
          'name' => 'SourceRegionIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的源地域ID列表。最多支持输入32个地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的源地域ID列表。最多支持输入32个地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'cn-beijing',
            ),
            'required' => false,
            'example' => 'cn-beijing',
            'maxItems' => 32,
          ),
        ),
        21 => 
        array (
          'name' => 'SourceChildInstanceTypes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的源实例类型列表。支持以下实例类型：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：VPN网关实例或者IPsec连接。

    - 如果IPsec连接或SSL服务端绑定了VPN网关实例，则VPN网关实例关联的VPC必须连接至转发路由器实例，且VPN网关实例必须运行BGP动态路由协议，本参数才能生效。
    - 如果IPsec连接直接绑定了转发路由器实例，则本参数生效。

支持输入多种实例类型。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的源实例类型列表。支持以下实例类型：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：VPN网关实例或IPsec连接。
    
    - 如果IPsec连接或SSL服务端绑定了VPN网关实例，则VPN网关实例关联的VPC必须连接至转发路由器实例，且VPN网关实例必须运行BGP动态路由协议，本参数才能生效。
    - 如果IPsec连接直接绑定了转发路由器实例，则本参数生效。


支持输入多种实例类型。',
              'type' => 'string',
              'required' => false,
              'example' => 'VPC',
            ),
            'required' => false,
            'example' => 'VPC',
            'maxItems' => 32,
          ),
        ),
        22 => 
        array (
          'name' => 'DestinationChildInstanceTypes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的目的实例类型列表。支持以下实例类型：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：IPsec连接。

    > 如果IPsec连接或者SSL服务端绑定了VPN网关实例，并通过VPN网关实例关联的VPC连接至了转发路由器实例，则本参数不生效。本参数仅当IPsec连接直接绑定转发路由器实例时才生效。

支持输入多种实例类型。

>仅路由策略的应用方向为出地域网关方向，且目的实例类型为本地域下的实例类型时，目的实例类型列表才会生效。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的目的实例类型列表。支持以下实例类型：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：IPsec连接。

    > 如果IPsec连接或者SSL服务端绑定了VPN网关实例，并通过VPN网关实例关联的VPC连接至了转发路由器实例，则本参数不生效。本参数仅当IPsec连接直接绑定转发路由器实例时才生效。

支持输入多种实例类型。

>仅路由策略的应用方向为出地域网关方向，且目的实例类型为本地域下的实例类型时，目的实例类型列表才会生效。
',
              'type' => 'string',
              'required' => false,
              'example' => 'VPC',
            ),
            'required' => false,
            'example' => 'VPC',
            'maxItems' => 32,
          ),
        ),
        23 => 
        array (
          'name' => 'DestinationCidrBlocks',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的前缀列表。

前缀列表中的IP地址段使用CIDR格式，最多支持输入32个IP地址段。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的前缀列表。

前缀列表中的IP地址段使用CIDR格式，最多支持输入32个IP地址段。
',
              'type' => 'string',
              'required' => false,
              'example' => '10.10.10.0/24',
            ),
            'required' => false,
            'example' => '10.10.10.0/24',
            'maxItems' => 32,
          ),
        ),
        24 => 
        array (
          'name' => 'RouteTypes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的路由类型列表。支持以下路由类型：

- **System**：系统路由，由系统自动生成的路由。

- **Custom**：自定义路由，由用户手动添加的路由。

- **BGP**：BGP路由，通过BGP路由协议传播的路由。

支持输入多种路由类型。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的路由类型列表。支持以下路由类型：

- **System**：系统路由，由系统自动生成的路由。

- **Custom**：自定义路由，由用户手动添加的路由。

- **BGP**：BGP路由，通过BGP路由协议传播的路由。

支持输入多种路由类型。
',
              'type' => 'string',
              'required' => false,
              'example' => 'System',
            ),
            'required' => false,
            'example' => 'System',
            'maxItems' => 32,
          ),
        ),
        25 => 
        array (
          'name' => 'MatchAsns',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的AS Path列表。

最多支持输入32个AS号码。

> 仅支持AS SEQUENCE，不支持AS SET、AS CONFED SEQUENCE和AS CONFED SET，即只能是AS号列表，不支持集合和子列表。

',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的AS Path列表。

最多支持输入32个AS号码。

> 仅支持AS SEQUENCE，不支持AS SET、AS CONFED SEQUENCE和AS CONFED SET，即只能是AS号列表，不支持集合和子列表。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '65501',
            ),
            'required' => false,
            'example' => '65501',
            'maxItems' => 32,
          ),
        ),
        26 => 
        array (
          'name' => 'MatchCommunitySet',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的Community集合。

每个Community格式为n:m，n、m的取值范围为**1**~**65535**。Community需要符合RFC 1997，不支持Large Community（RFC 8092）。

最多支持输入32个Community。

> Community配置错误可能会导致路由不能发布到本地数据中心。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的Community集合。

每个Community格式为n:m，n、m的取值范围为**1**~**65535**。Community需要符合RFC 1997，不支持Large Community（RFC 8092）。

最多支持输入32个Community。

> Community配置错误可能会导致路由不能发布到本地数据中心。
',
              'type' => 'string',
              'required' => false,
              'example' => '65501:1',
            ),
            'required' => false,
            'example' => '65501:1',
            'maxItems' => 32,
          ),
        ),
        27 => 
        array (
          'name' => 'OperateCommunitySet',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要执行的Community集合。

每个Community格式为n:m，n、m的取值范围为**1**~**65535**。Community需要符合RFC 1997，不支持Large Communities（RFC 8092）。

最多支持输入32个Community。

> Community配置错误可能会导致路由不能发布到本地数据中心。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要执行的Community集合。

每个Community格式为n:m，n、m的取值范围为**1**~**65535**。Community需要符合RFC 1997，不支持Large Communities（RFC 8092）。

最多支持输入32个Community。

> Community配置错误可能会导致路由不能发布到本地数据中心。
',
              'type' => 'string',
              'required' => false,
              'example' => '65501:1',
            ),
            'required' => false,
            'example' => '65501:1',
            'maxItems' => 32,
          ),
        ),
        28 => 
        array (
          'name' => 'PrependAsPath',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '地域网关接收或发布路由时附加的AS Path。

路由策略应用方向不同，配置附加AS Path的要求也不同，具体如下：

- 入地域网关方向配置附加AS Path时，匹配条件中必须配置源实例ID列表和源地域，且源地域必须与路由策略应用的地域一致。

- 出地域网关方向配置附加AS Path时，匹配条件中必须配置目的实例ID列表。


本参数表示路由通过匹配条件后，要执行的操作。最多支持输入32个AS号码。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '地域网关接收或发布路由时附加的AS Path。

路由策略应用方向不同，配置附加AS Path的要求也不同，具体如下：

- 入地域网关方向配置附加AS Path时，匹配条件中必须配置源实例ID列表和源地域，且源地域必须与路由策略应用的地域一致。

- 出地域网关方向配置附加AS Path时，匹配条件中必须配置目的实例ID列表。


本参数表示路由通过匹配条件后，要执行的操作。最多支持输入32个AS号码。
',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '65501',
            ),
            'required' => false,
            'example' => '65501',
            'maxItems' => 32,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RouteMapId' => 
              array (
                'description' => '路由策略的ID。',
                'type' => 'string',
                'example' => 'cenrmap-w4yf7toozfol3q****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '62172DD5-6BAC-45DF-8D44-56SDF467BAC',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.CenRouteMapExist',
            'errorMessage' => 'The specified CEN route map ID already exists.',
          ),
          1 => 
          array (
            'errorCode' => 'Invid.Parameter',
            'errorMessage' => 'When using  PrependAsPath in the RegionIn, SourceRegionId must be local region Id.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOperation.NoEffictiveAction',
            'errorMessage' => 'No effective action be configured.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterInstance',
            'errorMessage' => 'The status of TransitRouter is incorrect.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'Description is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.ZoneId',
            'errorMessage' => 'The specified ZoneId is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          7 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RouteMapId\\": \\"cenrmap-w4yf7toozfol3q****\\",\\n  \\"RequestId\\": \\"62172DD5-6BAC-45DF-8D44-56SDF467BAC\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateCenRouteMapResponse>\\n    <RouteMapId>cenrmap-w4yf7toozfol3q****</RouteMapId>\\n    <RequestId>62172DD5-6BAC-45DF-8D44-56SDF467BAC</RequestId>\\n</CreateCenRouteMapResponse>","errorExample":""}]',
      'title' => '创建路由策略',
      'summary' => '通过路由策略功能，可以过滤路由信息，帮助您自定义管理云上网络互通能力，您可以调用CreateCenRouteMap接口创建路由策略。',
      'description' => '路由策略按照优先级进行排列，优先级数字越小，优先级越高。每条路由策略都是条件语句和执行语句的集合。执行路由策略时，路由从优先级最高的路由策略开始匹配条件语句，对于符合全部匹配条件的路由，路由策略将按照策略行为允许路由通过或拒绝路由通过，允许通过的路由支持修改路由属性；对于不符合全部匹配条件的路由，系统默认允许路由通过。更多信息，请参见[路由策略概述](~~124157~~)。

`CreateCenRouteMap`接口属于异步接口，即系统会先返回一个路由策略ID，但该路由策略并未创建完成，系统后台的创建任务仍在进行。您可以调用`DescribeCenRouteMaps`接口查询路由策略的状态。
- 当路由策略处于**Creating**状态时，表示路由策略正在创建中，在该状态下，您只能执行查询操作，不能执行其他操作。
- 当路由策略处于**Active**状态时，表示路由策略创建完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteCenRouteMap' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jm****',
          ),
        ),
        1 => 
        array (
          'name' => 'CenRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略应用的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteMapId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cenrmap-abcdedfghij****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5903EE99-D542-4E14-BC65-AAC1CB2D3D03',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.RouteMap',
            'errorMessage' => 'Operation Failed. The specified route map is configuring, please try again later.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.TransitRouterNotExist',
            'errorMessage' => 'Operation is invalid because the transit router not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5903EE99-D542-4E14-BC65-AAC1CB2D3D03\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteCenRouteMapResponse>\\n    <RequestId>5903EE99-D542-4E14-BC65-AAC1CB2D3D03</RequestId>\\n</DeleteCenRouteMapResponse>","errorExample":""}]',
      'title' => '删除路由策略',
      'summary' => '调用DeleteCenRouteMap接口删除指定的路由策略。',
      'description' => '`DeleteCenRouteMap`接口属于异步接口，即系统会先返回一个**RequestId**，但该路由策略并未被完全删除，系统后台的删除任务仍在进行。您可以调用`DescribeCenRouteMaps`接口查询路由策略的状态。

- 当路由策略处于**Deleting**状态时，表示路由策略正在被删除，在该状态下，您只能执行查询操作，不能执行其他操作。
- 当`DescribeCenRouteMaps`接口无法查询到该路由策略时，表示路由策略已被完全删除。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyCenRouteMap' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        1 => 
        array (
          'name' => 'CenRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略应用的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteMapId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cenrmap-abcdedfghij****',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        4 => 
        array (
          'name' => 'MapResult',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '所有条件都匹配后的策略行为。取值：

- **Permit**：允许匹配的路由通过。

- **Deny**：拒绝匹配的路由通过。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Permit',
            'enum' => 
            array (
              0 => 'Permit',
              1 => 'Deny',
            ),
          ),
        ),
        5 => 
        array (
          'name' => 'NextPriority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关联的下一条路由策略的优先级。

- 仅**MapResult**取值为**Permit**时，才支持设置关联策略优先级，且被允许通过的路由才会继续匹配关联的下一条路由策略。
- 要关联的下一条路由策略必须和当前路由策略拥有相同的地域和应用方向。
- 关联的下一条路由策略的优先级必须低于（数字大于）当前路由策略的优先级。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '1000',
            'minimum' => '1',
            'example' => '20',
          ),
        ),
        6 => 
        array (
          'name' => 'CidrMatchMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表的匹配模式。取值：

- **Include**：模糊匹配。匹配条件中的路由前缀包含被匹配路由的路由前缀即判定为匹配成功。

 例如：定义10.10.0.0/16的策略可以模糊匹配到10.10.1.0/24的路由。

- **Complete**：精确匹配。匹配条件中的路由前缀必须与被匹配路由的路由前缀一致，才判定为匹配成功。 

 例如：定义10.10.0.0/16的策略仅可以精确匹配到10.10.0.0/16的路由。',
            'type' => 'string',
            'required' => false,
            'example' => 'Include ',
            'enum' => 
            array (
              0 => 'Include',
              1 => 'Complete',
            ),
          ),
        ),
        7 => 
        array (
          'name' => 'AsPathMatchMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'AS Path列表的匹配模式。取值：

- **Include**：模糊匹配，匹配条件中的AS Path与被匹配路由的AS Path有重叠即判定为匹配成功。 

- **Complete**：精确匹配，匹配条件中的AS Path必须与被匹配路由的AS Path一致，才判定为匹配成功。 ',
            'type' => 'string',
            'required' => false,
            'example' => 'Include',
            'enum' => 
            array (
              0 => 'Include',
              1 => 'Complete',
            ),
          ),
        ),
        8 => 
        array (
          'name' => 'CommunityMatchMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Community的匹配模式。取值：

- **Include**：模糊匹配，匹配条件中的Community与被匹配路由的Community有重叠即判定为匹配成功。 

- **Complete**：精确匹配，匹配条件中的Community必须与被匹配路由的Community一致，才判定为匹配成功。',
            'type' => 'string',
            'required' => false,
            'example' => 'Include',
            'enum' => 
            array (
              0 => 'Include',
              1 => 'Complete',
              2 => 'Contain',
            ),
          ),
        ),
        9 => 
        array (
          'name' => 'CommunityOperateMode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Community的执行模式。取值：

- **Additive**：添加，表示为路由添加Community。

- **Replace**：替换，表示替换路由原有的Community。

本参数表示路由通过匹配条件后，要执行的操作。',
            'type' => 'string',
            'required' => false,
            'example' => 'Additive',
            'enum' => 
            array (
              0 => 'Additive',
              1 => 'Replace',
            ),
          ),
        ),
        10 => 
        array (
          'name' => 'Preference',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改路由的优先级。

取值范围：**1**~**100**。路由的优先级默认为**50**，取值越小优先级越高。

本参数表示路由通过匹配条件后，要执行的操作。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '22',
          ),
        ),
        11 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略的优先级。取值范围：**1**~**100**。优先级数字越小，表示优先级越高。

> 同地域、同应用方向的路由策略优先级唯一。执行路由策略时，系统从优先级数字最小的路由策略开始匹配条件语句，因此在指定路由策略优先级时，要注意符合期望的匹配顺序。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '1000',
            'minimum' => '1',
            'example' => '10',
          ),
        ),
        12 => 
        array (
          'name' => 'SourceInstanceIdsReverseMatch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否使用源实例ID列表的排除匹配模式。取值：

- **false**（默认值）：否，即路由传递的源实例ID在**SourceInstanceIds.N**中时，匹配通过。

- **true**：是，即路由传递的源实例ID不在**SourceInstanceIds.N**中时，匹配通过。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        13 => 
        array (
          'name' => 'DestinationInstanceIdsReverseMatch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否使用目的实例ID列表的排除匹配模式。取值：

- **false**（默认值）：否，即路由传递的目的实例ID在**DestinationInstanceIds.N**中时，匹配通过。

- **true**：是，即路由传递的目的实例ID不在**DestinationInstanceIds.N**中时，匹配通过。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        14 => 
        array (
          'name' => 'MatchAddressType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由需匹配的IP地址类型。取值：

- **IPv4**：表示只匹配IPv4路由。
- **IPv6**：表示只匹配IPv6路由。

本参数可以为空，表示匹配所有类型的路由。',
            'type' => 'string',
            'required' => false,
            'example' => 'IPv4',
          ),
        ),
        15 => 
        array (
          'name' => 'SourceInstanceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的源实例ID列表。支持输入以下类型的实例ID：

- 专有网络VPC（Virtual Private Cloud）实例ID
- 边界路由器VBR（Virtual Border Router）实例ID
- 云连接网CCN（Cloud Connect Network）实例ID
- 智能接入网关（Smart Access Gateway）实例ID
- IPsec连接ID

最多支持输入32个实例ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的源实例ID列表。支持输入以下类型的实例ID：

- 专有网络VPC（Virtual Private Cloud）实例ID
- 边界路由器VBR（Virtual Border Router）实例ID
- 云连接网CCN（Cloud Connect Network）实例ID
- 智能接入网关（Smart Access Gateway）实例ID
- IPsec连接ID

最多支持输入32个实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'vpc-afsfdf5435vcvc****',
            ),
            'required' => false,
            'example' => 'vpc-afsfdf5435vcvc****',
            'maxItems' => 32,
          ),
        ),
        16 => 
        array (
          'name' => 'DestinationInstanceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的目的实例ID列表。支持输入以下类型的实例ID：

- 专有网络VPC（Virtual Private Cloud）实例ID
- 边界路由器VBR（Virtual Border Router）实例ID
- 云连接网CCN（Cloud Connect Network）实例ID
- 智能接入网关（Smart Access Gateway）实例ID
- IPsec连接ID

最多支持输入32个实例ID。

>仅路由策略的应用方向为出地域网关方向，且目的实例ID为本地域下的实例ID时，目的实例ID列表才会生效。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的目的实例ID列表。支持输入以下类型的实例ID：

- 专有网络VPC（Virtual Private Cloud）实例ID
- 边界路由器VBR（Virtual Border Router）实例ID
- 云连接网CCN（Cloud Connect Network）实例ID
- 智能接入网关（Smart Access Gateway）实例ID
- IPsec连接ID

最多支持输入32个实例ID。

>仅路由策略的应用方向为出地域网关方向，且目的实例ID为本地域下的实例ID时，目的实例ID列表才会生效。',
              'type' => 'string',
              'required' => false,
              'example' => 'vpc-avcdsg34ds****',
            ),
            'required' => false,
            'example' => 'vpc-avcdsg34ds****',
            'maxItems' => 32,
          ),
        ),
        17 => 
        array (
          'name' => 'SourceRouteTableIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的源路由表ID列表。最多支持输入32个路由表ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的源路由表ID列表。最多支持输入32个路由表ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'vtb-acdbvtbr342cd****',
            ),
            'required' => false,
            'example' => 'vtb-acdbvtbr342cd****',
            'maxItems' => 32,
          ),
        ),
        18 => 
        array (
          'name' => 'DestinationRouteTableIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的目的路由表ID列表。最多支持输入32个路由表ID。

>仅路由策略的应用方向为出地域网关方向，且目的路由表ID为本地域下网络实例的路由表ID时，目的路由表ID列表才会生效。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的目的路由表ID列表。最多支持输入32个路由表ID。

>仅路由策略的应用方向为出地域网关方向，且目的路由表ID为本地域下网络实例的路由表ID时，目的路由表ID列表才会生效。',
              'type' => 'string',
              'required' => false,
              'example' => 'vtb-adfg53c322v****',
            ),
            'required' => false,
            'example' => 'vtb-adfg53c322v****',
            'maxItems' => 32,
          ),
        ),
        19 => 
        array (
          'name' => 'SourceRegionIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的源地域ID列表。最多支持输入32个地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的源地域ID列表。最多支持输入32个地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'cn-beijing',
            ),
            'required' => false,
            'example' => 'cn-beijing',
            'maxItems' => 32,
          ),
        ),
        20 => 
        array (
          'name' => 'SourceChildInstanceTypes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的源实例类型列表。支持以下实例类型：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：VPN网关实例或IPsec连接。
    
    - 如果IPsec连接或SSL服务端绑定了VPN网关实例，则VPN网关实例关联的VPC必须连接至转发路由器实例，且VPN网关实例必须运行BGP动态路由协议，本参数才能生效。
    - 如果IPsec连接直接绑定了转发路由器实例，则本参数生效。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的源实例类型列表。支持以下实例类型：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：VPN网关实例或IPsec连接。
    
    - 如果IPsec连接或SSL服务端绑定了VPN网关实例，则VPN网关实例关联的VPC必须连接至转发路由器实例，且VPN网关实例必须运行BGP动态路由协议，本参数才能生效。
    - 如果IPsec连接直接绑定了转发路由器实例，则本参数生效。
',
              'type' => 'string',
              'required' => false,
              'example' => 'VPC',
            ),
            'required' => false,
            'example' => 'VPC',
            'maxItems' => 32,
          ),
        ),
        21 => 
        array (
          'name' => 'DestinationChildInstanceTypes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的目的实例类型列表。支持以下实例类型：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：IPsec连接。

    > 如果IPsec连接或者SSL服务端绑定了VPN网关实例，并通过VPN网关实例关联的VPC连接至了转发路由器实例，则本参数不生效。本参数仅当IPsec连接直接绑定转发路由器实例时才生效。

仅路由策略的应用方向为出地域网关方向，且目的实例类型为本地域下的实例类型时，目的实例类型列表才会生效。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的目的实例类型列表。支持以下实例类型：

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：IPsec连接。

    > 如果IPsec连接或者SSL服务端绑定了VPN网关实例，并通过VPN网关实例关联的VPC连接至了转发路由器实例，则本参数不生效。本参数仅当IPsec连接直接绑定转发路由器实例时才生效。

仅路由策略的应用方向为出地域网关方向，且目的实例类型为本地域下的实例类型时，目的实例类型列表才会生效。
',
              'type' => 'string',
              'required' => false,
              'example' => 'VPC',
            ),
            'required' => false,
            'example' => 'VPC',
            'maxItems' => 32,
          ),
        ),
        22 => 
        array (
          'name' => 'DestinationCidrBlocks',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的前缀列表。

前缀列表中的IP地址段使用CIDR格式，最多支持输入32个IP地址段。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的前缀列表。

前缀列表中的IP地址段使用CIDR格式，最多支持输入32个IP地址段。',
              'type' => 'string',
              'required' => false,
              'example' => '10.10.10.0/24',
            ),
            'required' => false,
            'example' => '10.10.10.0/24',
            'maxItems' => 32,
          ),
        ),
        23 => 
        array (
          'name' => 'RouteTypes',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的路由类型列表。支持以下路由类型：

- **System**：系统路由，由系统自动生成的路由。

- **Custom**：自定义路由，由用户手动添加的路由。

- **BGP**：BGP路由，通过BGP路由协议传播的路由。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的路由类型列表。支持以下路由类型：

- **System**：系统路由，由系统自动生成的路由。

- **Custom**：自定义路由，由用户手动添加的路由。

- **BGP**：BGP路由，通过BGP路由协议传播的路由。',
              'type' => 'string',
              'required' => false,
              'example' => 'System',
            ),
            'required' => false,
            'example' => 'System',
            'maxItems' => 32,
          ),
        ),
        24 => 
        array (
          'name' => 'MatchAsns',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的AS Path列表。

> 仅支持AS SEQUENCE，不支持AS SET、AS CONFED SEQUENCE和AS CONFED SET，即只能是AS号列表，不支持集合和子列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的AS Path列表。

> 仅支持AS SEQUENCE，不支持AS SET、AS CONFED SEQUENCE和AS CONFED SET，即只能是AS号列表，不支持集合和子列表。',
              'type' => 'integer',
              'format' => 'int32',
              'required' => false,
              'example' => '65501',
            ),
            'required' => false,
            'example' => '65501',
            'maxItems' => 32,
          ),
        ),
        25 => 
        array (
          'name' => 'MatchCommunitySet',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '路由需匹配的Community集合。

每个Community格式为n:m，n、m的取值范围为**1**~**65535**。Community需要符合RFC 1997，不支持Large Community（RFC 8092）。

最多支持输入32个Community。

> Community配置错误可能会导致路由不能发布到本地数据中心。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '路由需匹配的Community集合。

每个Community格式为n:m，n、m的取值范围为**1**~**65535**。Community需要符合RFC 1997，不支持Large Community（RFC 8092）。

最多支持输入32个Community。

> Community配置错误可能会导致路由不能发布到本地数据中心。',
              'type' => 'string',
              'required' => false,
              'example' => '65501:1',
            ),
            'required' => false,
            'example' => '65501:1',
            'maxItems' => 32,
          ),
        ),
        26 => 
        array (
          'name' => 'OperateCommunitySet',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '要执行的Community集合。

每个Community格式为n:m，n、m的取值范围为**1**~**65535**。Community需要符合RFC 1997，不支持Large Communities（RFC 8092）。

最多支持输入32个Community。

> Community配置错误可能会导致路由不能发布到本地数据中心。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '要执行的Community集合。

每个Community格式为n:m，n、m的取值范围为**1**~**65535**。Community需要符合RFC 1997，不支持Large Communities（RFC 8092）。

最多支持输入32个Community。

> Community配置错误可能会导致路由不能发布到本地数据中心。',
              'type' => 'string',
              'required' => false,
              'example' => '65501:1',
            ),
            'required' => false,
            'example' => '65501:1',
            'maxItems' => 32,
          ),
        ),
        27 => 
        array (
          'name' => 'PrependAsPath',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '地域网关接收或发布路由时附加的AS Path。

路由策略应用方向不同，配置附加AS Path的要求也不同，具体如下：

- 入地域网关方向配置附加AS Path时，匹配条件中必须配置源实例ID列表和源地域，且源地域必须与路由策略应用的地域一致。

- 出地域网关方向配置附加AS Path时，匹配条件中必须配置目的实例ID列表。


本参数表示路由通过匹配条件后，要执行的操作。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '地域网关接收或发布路由时附加的AS Path。

路由策略应用方向不同，配置附加AS Path的要求也不同，具体如下：

- 入地域网关方向配置附加AS Path时，匹配条件中必须配置源实例ID列表和源地域，且源地域必须与路由策略应用的地域一致。

- 出地域网关方向配置附加AS Path时，匹配条件中必须配置目的实例ID列表。


本参数表示路由通过匹配条件后，要执行的操作。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '65501',
            ),
            'required' => false,
            'example' => '65501',
            'maxItems' => 32,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B457	',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.NoEffictiveAction',
            'errorMessage' => 'No effective action be configured.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.CenRouteMapExist',
            'errorMessage' => 'Operation is invalid because an route map config exist.',
          ),
          2 => 
          array (
            'errorCode' => 'Invid.Parameter',
            'errorMessage' => 'When using GatewayRegionId, SourceRegionId must not be null',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'Description is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B457\\\\t\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyCenRouteMapResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B457\\t</RequestId>\\n</ModifyCenRouteMapResponse>","errorExample":""}]',
      'title' => '修改路由策略',
      'summary' => '调用ModifyCenRouteMap接口修改路由策略。',
      'description' => '`ModifyCenRouteMap`接口属于异步接口，即系统会先返回一个**RequestId**，但该路由策略并未修改完成，系统后台的修改任务仍在进行。您可以调用`DescribeCenRouteMaps`接口查询路由策略的状态。

- 当路由策略处于**Modifying**状态时，表示路由策略正在修改中，在该状态下，您只能执行查询操作，不能执行其他操作。
- 当路由策略处于**Active**状态时，表示路由策略修改完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCenRouteMaps' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-wx12mmlt17ld82****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteMapId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cenrmap-y40mxdvf7joc12****',
          ),
        ),
        4 => 
        array (
          'name' => 'CenRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略应用的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'TransmitDirection',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略的应用方向。取值：

- **RegionIn**：入地域网关方向，表示路由传入云企业网地域网关的方向。

 例如：路由从本地域的网络实例发布到本地域网关，或其他地域的路由发布到本地域网关。

- **RegionOut**：出地域网关方向，表示路由传出云企业网地域网关的方向。

 例如：路由从本地域网关发布到本地域下的网络实例，或发布到其他地域的地域网关。',
            'type' => 'string',
            'required' => false,
            'example' => 'RegionOut',
          ),
        ),
        6 => 
        array (
          'name' => 'TransitRouterRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由策略关联的转发路由器路由表ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vtb-gw8nx3515m1mbd1z1****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '24CE1987-D1D1-5324-9BAD-2750B60E6ABB',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RouteMaps' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RouteMap' => 
                  array (
                    'description' => '路由策略信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '路由策略的信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'RouteMapId' => 
                        array (
                          'description' => '路由策略ID。',
                          'type' => 'string',
                          'example' => 'cenrmap-y40mxdvf7joc12****',
                        ),
                        'Status' => 
                        array (
                          'description' => '路由策略的状态。

- **Creating**：创建中。
- **Active**：可用。
- **Deleting**：删除中。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'TransmitDirection' => 
                        array (
                          'description' => '路由策略的应用方向。
',
                          'type' => 'string',
                          'example' => 'RegionOut',
                        ),
                        'SourceInstanceIdsReverseMatch' => 
                        array (
                          'description' => '是否使用了源实例ID列表的排除匹配模式。

- **false**：否，即路由传递的源实例ID在**SourceInstanceIds.N**中时，匹配通过。

- **true**：是，即路由传递的源实例ID不在**SourceInstanceIds.N**中时，匹配通过。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'CenRegionId' => 
                        array (
                          'description' => '路由策略应用的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'CenId' => 
                        array (
                          'description' => '云企业网实例ID。',
                          'type' => 'string',
                          'example' => 'cen-wx12mmlt17ld82****',
                        ),
                        'Priority' => 
                        array (
                          'description' => '路由策略的优先级。优先级数字越小，代表优先级越高。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '5000',
                        ),
                        'TransitRouterRouteTableId' => 
                        array (
                          'description' => '路由策略关联的转发路由器路由表ID。',
                          'type' => 'string',
                          'example' => 'vtb-gw8nx3515m1mbd1z1****',
                        ),
                        'CommunityOperateMode' => 
                        array (
                          'description' => 'Community的执行模式。

- **Additive**：添加，表示为路由添加Community。

- **Replace**：替换，表示替换路由原有的Community。

本参数表示路由通过匹配条件后，要执行的操作。',
                          'type' => 'string',
                          'example' => 'Additive',
                        ),
                        'MapResult' => 
                        array (
                          'description' => '所有匹配条件都通过后的策略行为。

- **Permit**：允许被匹配的路由通过。

- **Deny**：拒绝被匹配的路由通过。',
                          'type' => 'string',
                          'example' => 'Deny',
                        ),
                        'CommunityMatchMode' => 
                        array (
                          'description' => 'Community的匹配模式。

- **Include**：模糊匹配，匹配条件中的Community与被匹配路由的Community有重叠即判定为匹配成功。 

- **Complete**：精确匹配，匹配条件中的Community必须与被匹配路由的Community一致，才判定为匹配成功。',
                          'type' => 'string',
                          'example' => 'Include',
                        ),
                        'Description' => 
                        array (
                          'description' => '路由策略的描述信息。',
                          'type' => 'string',
                          'example' => 'desctest',
                        ),
                        'AsPathMatchMode' => 
                        array (
                          'description' => 'AS Path列表的匹配模式。

- **Include**：模糊匹配，匹配条件中的AS Path与被匹配路由的AS Path有重叠即判定为匹配成功。 

- **Complete**：精确匹配，匹配条件中的AS Path必须与被匹配路由的AS Path一致，才判定为匹配成功。 ',
                          'type' => 'string',
                          'example' => 'Include',
                        ),
                        'Preference' => 
                        array (
                          'description' => '要修改的路由的优先级。

优先级数字越小表示优先级越高。

本参数表示路由通过匹配条件后，要执行的操作。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'DestinationInstanceIdsReverseMatch' => 
                        array (
                          'description' => '是否使用了目的实例ID列表的排除匹配模式。

- **false**：否，即路由传递的目的实例ID在**DestinationInstanceIds.N**中时，匹配通过。

- **true**：是，即路由传递的目的实例ID不在**DestinationInstanceIds.N**中时，匹配通过。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'CidrMatchMode' => 
                        array (
                          'description' => '前缀列表的匹配模式。取值：

- **Include**：模糊匹配。匹配条件中的路由前缀包含被匹配路由的路由前缀即判定为匹配成功。

 例如：定义10.10.0.0/16的策略可以模糊匹配到10.10.1.0/24的路由。

- **Complete**：精确匹配。匹配条件中的路由前缀必须与被匹配路由的路由前缀一致，才判定为匹配成功。 

 例如：定义10.10.0.0/16的策略仅可以精确匹配到10.10.0.0/16的路由。',
                          'type' => 'string',
                          'example' => 'Include',
                        ),
                        'NextPriority' => 
                        array (
                          'description' => '关联的下一条路由策略的优先级。
',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '33',
                        ),
                        'MatchAddressType' => 
                        array (
                          'description' => '路由需匹配的IP地址类型。

- **IPv4**：表示只匹配IPv4路由。
- **IPv6**：表示只匹配IPv6路由。
- 如果系统未返回该值，则表示同时匹配IPv4和IPv6的路由。
',
                          'type' => 'string',
                          'example' => 'IPv4',
                        ),
                        'SourceRegionIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SourceRegionId' => 
                            array (
                              'description' => '路由需匹配的源地域ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由需匹配的源地域ID列表。',
                                'type' => 'string',
                                'example' => 'cn-hangzhou',
                              ),
                            ),
                          ),
                        ),
                        'SourceChildInstanceTypes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SourceChildInstanceType' => 
                            array (
                              'description' => '路由需匹配的源实例类型列表。

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：IPsec连接。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由需匹配的源实例类型列表。

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：IPsec连接。',
                                'type' => 'string',
                                'example' => 'VPC',
                              ),
                            ),
                          ),
                        ),
                        'DestinationRouteTableIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DestinationRouteTableId' => 
                            array (
                              'description' => '路由需匹配的目的路由表ID列表。最多支持输入32个路由表ID。

>仅路由策略的应用方向为出地域网关方向，且目的路由表ID为本地域下网络实例的路由表ID时，目的路由表ID列表才会生效。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由需匹配的目的路由表ID列表。最多支持输入32个路由表ID。

>仅路由策略的应用方向为出地域网关方向，且目的路由表ID为本地域下网络实例的路由表ID时，目的路由表ID列表才会生效。
',
                                'type' => 'string',
                                'example' => 'vtb-adefrgtr144vf****',
                              ),
                            ),
                          ),
                        ),
                        'SourceInstanceIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SourceInstanceId' => 
                            array (
                              'description' => '路由需匹配的源实例ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由需匹配的源实例ID列表。',
                                'type' => 'string',
                                'example' => 'vpc-adeg3544fdf34vf****',
                              ),
                            ),
                          ),
                        ),
                        'DestinationCidrBlocks' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DestinationCidrBlock' => 
                            array (
                              'description' => '路由需匹配的前缀列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由需匹配的前缀列表。',
                                'type' => 'string',
                                'example' => '10.10.10.0/24',
                              ),
                            ),
                          ),
                        ),
                        'DestinationRegionIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                          ),
                        ),
                        'SourceRouteTableIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SourceRouteTableId' => 
                            array (
                              'description' => '路由需匹配的源路由表ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由需匹配的源路由表ID列表。',
                                'type' => 'string',
                                'example' => 'vtb-adfr233vf34rvd4****',
                              ),
                            ),
                          ),
                        ),
                        'MatchCommunitySet' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'MatchCommunity' => 
                            array (
                              'description' => '路由需匹配的Community集合。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由需匹配的Community集合。',
                                'type' => 'string',
                                'example' => '65501:1',
                              ),
                            ),
                          ),
                        ),
                        'PrependAsPath' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AsPath' => 
                            array (
                              'description' => '地域网关接收或发布路由时附加的AS Path。

本参数表示路由通过匹配条件后，要执行的操作。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '地域网关接收或发布路由时附加的AS Path。

本参数表示路由通过匹配条件后，要执行的操作。',
                                'type' => 'string',
                                'example' => '65501',
                              ),
                            ),
                          ),
                        ),
                        'RouteTypes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'RouteType' => 
                            array (
                              'description' => '路由需匹配的路由类型列表。

- **System**：系统路由，由系统自动生成的路由。

- **Custom**：自定义路由，由用户手动添加的路由。

- **BGP**：BGP路由，通过BGP路由协议传播的路由。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由需匹配的路由类型列表。

- **System**：系统路由，由系统自动生成的路由。

- **Custom**：自定义路由，由用户手动添加的路由。

- **BGP**：BGP路由，通过BGP路由协议传播的路由。',
                                'type' => 'string',
                                'example' => 'System',
                              ),
                            ),
                          ),
                        ),
                        'OriginalRouteTableIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                          ),
                        ),
                        'DestinationChildInstanceTypes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DestinationChildInstanceType' => 
                            array (
                              'description' => '路由需匹配的目的实例类型列表。

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：IPsec连接。

>仅路由策略的应用方向为出地域网关方向，且目的实例类型为本地域下的实例类型时，目的实例类型列表才会生效。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由需匹配的目的实例类型列表。

- **VPC**：专有网络实例。

- **VBR**：边界路由器实例。

- **CCN**：云连接网实例。

- **VPN**：IPsec连接。

>仅路由策略的应用方向为出地域网关方向，且目的实例类型为本地域下的实例类型时，目的实例类型列表才会生效。',
                                'type' => 'string',
                                'example' => 'VPC',
                              ),
                            ),
                          ),
                        ),
                        'DestinationInstanceIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DestinationInstanceId' => 
                            array (
                              'description' => '路由需匹配的目的实例ID列表。

>仅路由策略的应用方向为出地域网关方向，且目的实例ID为本地域下的实例ID时，目的实例ID列表才会生效。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由需匹配的目的实例ID列表。

>仅路由策略的应用方向为出地域网关方向，且目的实例ID为本地域下的实例ID时，目的实例ID列表才会生效。
',
                                'type' => 'string',
                                'example' => 'vpc-afrfs434465fdf****',
                              ),
                            ),
                          ),
                        ),
                        'MatchAsns' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'MatchAsn' => 
                            array (
                              'description' => '路由需匹配的AS Path列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '路由需匹配的AS Path列表。',
                                'type' => 'string',
                                'example' => '65501',
                              ),
                            ),
                          ),
                        ),
                        'OperateCommunitySet' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OperateCommunity' => 
                            array (
                              'description' => '要执行的Community集合。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '要执行的Community集合。',
                                'type' => 'string',
                                'example' => '65501:1',
                              ),
                            ),
                          ),
                        ),
                        'SrcZoneIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"24CE1987-D1D1-5324-9BAD-2750B60E6ABB\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"RouteMaps\\": {\\n    \\"RouteMap\\": [\\n      {\\n        \\"RouteMapId\\": \\"cenrmap-y40mxdvf7joc12****\\",\\n        \\"Status\\": \\"Active\\",\\n        \\"TransmitDirection\\": \\"RegionOut\\",\\n        \\"SourceInstanceIdsReverseMatch\\": false,\\n        \\"CenRegionId\\": \\"cn-hangzhou\\",\\n        \\"CenId\\": \\"cen-wx12mmlt17ld82****\\",\\n        \\"Priority\\": 5000,\\n        \\"TransitRouterRouteTableId\\": \\"vtb-gw8nx3515m1mbd1z1****\\",\\n        \\"CommunityOperateMode\\": \\"Additive\\",\\n        \\"MapResult\\": \\"Deny\\",\\n        \\"CommunityMatchMode\\": \\"Include\\",\\n        \\"Description\\": \\"desctest\\",\\n        \\"AsPathMatchMode\\": \\"Include\\",\\n        \\"Preference\\": 20,\\n        \\"DestinationInstanceIdsReverseMatch\\": false,\\n        \\"CidrMatchMode\\": \\"Include\\",\\n        \\"NextPriority\\": 33,\\n        \\"MatchAddressType\\": \\"IPv4\\",\\n        \\"SourceRegionIds\\": {\\n          \\"SourceRegionId\\": [\\n            \\"cn-hangzhou\\"\\n          ]\\n        },\\n        \\"SourceChildInstanceTypes\\": {\\n          \\"SourceChildInstanceType\\": [\\n            \\"VPC\\"\\n          ]\\n        },\\n        \\"DestinationRouteTableIds\\": {\\n          \\"DestinationRouteTableId\\": [\\n            \\"vtb-adefrgtr144vf****\\"\\n          ]\\n        },\\n        \\"SourceInstanceIds\\": {\\n          \\"SourceInstanceId\\": [\\n            \\"vpc-adeg3544fdf34vf****\\"\\n          ]\\n        },\\n        \\"DestinationCidrBlocks\\": {\\n          \\"DestinationCidrBlock\\": [\\n            \\"10.10.10.0/24\\"\\n          ]\\n        },\\n        \\"SourceRouteTableIds\\": {\\n          \\"SourceRouteTableId\\": [\\n            \\"vtb-adfr233vf34rvd4****\\"\\n          ]\\n        },\\n        \\"MatchCommunitySet\\": {\\n          \\"MatchCommunity\\": [\\n            \\"65501:1\\"\\n          ]\\n        },\\n        \\"PrependAsPath\\": {\\n          \\"AsPath\\": [\\n            \\"65501\\"\\n          ]\\n        },\\n        \\"RouteTypes\\": {\\n          \\"RouteType\\": [\\n            \\"System\\"\\n          ]\\n        },\\n        \\"DestinationChildInstanceTypes\\": {\\n          \\"DestinationChildInstanceType\\": [\\n            \\"VPC\\"\\n          ]\\n        },\\n        \\"DestinationInstanceIds\\": {\\n          \\"DestinationInstanceId\\": [\\n            \\"vpc-afrfs434465fdf****\\"\\n          ]\\n        },\\n        \\"MatchAsns\\": {\\n          \\"MatchAsn\\": [\\n            \\"65501\\"\\n          ]\\n        },\\n        \\"OperateCommunitySet\\": {\\n          \\"OperateCommunity\\": [\\n            \\"65501:1\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCenRouteMapsResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>24CE1987-D1D1-5324-9BAD-2750B60E6ABB</RequestId>\\n    <PageSize>10</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <RouteMaps>\\n        <RouteMap>\\n            <Status>Active</Status>\\n            <TransitRouterRouteTableId>vtb-gw8nx3515m1mbd1z1****</TransitRouterRouteTableId>\\n            <Priority>5000</Priority>\\n            <SourceChildInstanceTypes>\\n                <SourceChildInstanceType>VBR</SourceChildInstanceType>\\n                <SourceChildInstanceType>CCN</SourceChildInstanceType>\\n            </SourceChildInstanceTypes>\\n            <CenId>cen-wx12mmlt17ld82****</CenId>\\n            <TransmitDirection>RegionOut</TransmitDirection>\\n            <CenRegionId>cn-hangzhou</CenRegionId>\\n            <RouteMapId>cenrmap-y40mxdvf7joc12****</RouteMapId>\\n            <MapResult>Deny</MapResult>\\n            <DestinationChildInstanceTypes>\\n                <DestinationChildInstanceType>VBR</DestinationChildInstanceType>\\n                <DestinationChildInstanceType>CCN</DestinationChildInstanceType>\\n            </DestinationChildInstanceTypes>\\n        </RouteMap>\\n    </RouteMaps>\\n</DescribeCenRouteMapsResponse>","errorExample":""}]',
      'title' => '查询路由策略',
      'summary' => '调用DescribeCenRouteMaps接口查询路由策略中已配置信息。',
      'description' => '
',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateTransitRouteTableAggregation' => 
    array (
      'summary' => '创建聚合路由。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vtb-iq8qgruq1ry8jc7vt****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouteTableAggregationName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '聚合路由的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouteTableAggregationCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '聚合路由的目标网段。

> 不支持添加以下网段：
- 以“0”或者“100.64”开头的网段
- 组播地址（224.0.0.1~239.255.255.254）',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.10.0/24',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouteTableAggregationScope',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '聚合路由的传播范围。

仅取值：**VPC**，表示向已与当前企业版转发路由器路由表创建关联转发关系并已开启路由同步功能的所有VPC实例传播聚合路由。',
            'type' => 'string',
            'required' => true,
            'example' => 'VPC',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouteTableAggregationDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '聚合路由的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        5 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

>若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        6 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次创建请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认）：发送正常请求，通过检查后直接创建聚合路由。
- **true**：发送检查请求，只进行校验，不会创建聚合路由。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.RegionNotSupport',
            'errorMessage' => 'The Operation is not Support in this region.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceExist.AggregationRoute',
            'errorMessage' => 'This aggregation route is already created.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExist.TransitRouteTable',
            'errorMessage' => 'The transitRouter route table is not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouteTable',
            'errorMessage' => 'The transitRouter route table is not in a valid state for the operation.',
          ),
          4 => 
          array (
            'errorCode' => 'QuotaExceeded.AggregationRoute',
            'errorMessage' => 'The aggregation route count is over limit.',
          ),
          5 => 
          array (
            'errorCode' => 'InstanceNotExist.TransitRouter',
            'errorMessage' => 'The aggregation route  is not exist.',
          ),
          6 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The operation is not supported because of the wrong transitRouter type.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouter',
            'errorMessage' => 'The status of transitRouter is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationUnsupported.ServiceMode',
            'errorMessage' => 'The operation is not supported because of the wrong transitRouter service mode.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidCidrBlock',
            'errorMessage' => 'The cidr block is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'RouteConflict',
            'errorMessage' => 'The specified route already exists.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidOperation.InstanceNotSupportIPv6Route',
            'errorMessage' => 'The cen dose not support Ipv6 route.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouteTableAggregationCidr',
            'errorMessage' => 'The param TransitRouteTableAggregationCidr is illegal.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          14 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTransitRouteTableAggregationResponse>\\n    <RequestId>0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50</RequestId>\\n</CreateTransitRouteTableAggregationResponse>","errorExample":""}]',
      'title' => '创建聚合路由',
      'description' => '您在企业版转发路由器路由表下添加聚合路由后，企业版转发路由器仅会向已关联至当前企业版转发路由器路由表，且已开启路由同步功能的VPC实例的路由表中传播聚合路由。

因此在创建聚合路由前，请确保完成以下操作，否则在您添加聚合路由后，企业版转发路由器不会向VPC实例路由表内传播聚合路由：
- VPC实例已经与企业版转发路由器路由表创建了关联转发关系。具体操作，请参见[AssociateTransitRouterAttachmentWithRouteTable](~~261242~~)。
- VPC实例已经开启路由同步功能。具体操作，请参见[CreateTransitRouterVpcAttachment](~~261358~~)。',
    ),
    'DeleteTransitRouteTableAggregation' => 
    array (
      'summary' => '删除聚合路由。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vtb-6ehgc262hr170qgyc****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouteTableAggregationCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '聚合路由的目标网段。',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.10.0/24',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

>若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次删除请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认）：发送正常请求，通过检查后直接删除聚合路由。
- **true**：发送检查请求，只进行校验，不会删除聚合路由。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceNotExist.AggregationRoute',
            'errorMessage' => 'This aggregation route is not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotExist.TransitRouteTable',
            'errorMessage' => 'The transitRouter route table is not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouteTable',
            'errorMessage' => 'The status of transitRouter route table is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InstanceNotExist.TransitRouter',
            'errorMessage' => 'The transitRouter is not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouter',
            'errorMessage' => 'The status of transitRouter is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouteTableAggregationCidr',
            'errorMessage' => 'The param TransitRouteTableAggregationCidr is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          7 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTransitRouteTableAggregationResponse>\\n    <RequestId>0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50</RequestId>\\n</DeleteTransitRouteTableAggregationResponse>","errorExample":""}]',
      'title' => '删除聚合路由',
      'description' => '- 删除聚合路由前，请确保当前网络下存在冗余路由，否则可能会导致业务中断。
- 删除聚合路由后，系统会自动撤销已向专有网络VPC（Virtual Private Cloud）实例传播的聚合路由，重新向VPC实例传播位于聚合路由目标网段范围内下的明细路由。',
    ),
    'RefreshTransitRouteTableAggregation' => 
    array (
      'summary' => '重新发布聚合路由。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vtb-iq8qgruq1ry8jc7vt****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouteTableAggregationCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '聚合路由的目标网段。',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.53.0/24',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

>若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'PlainResponse',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceNotExist.TransitRouteTable',
            'errorMessage' => 'The transitRouter route table is not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouteTable',
            'errorMessage' => 'The status of transitRouter route table is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExist.AggregationRoute',
            'errorMessage' => 'The aggregation route is not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InstanceNotExist.TransitRouter',
            'errorMessage' => 'The transitRouter is not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouteTableAggregationCidr',
            'errorMessage' => 'The param TransitRouteTableAggregationCidr is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}","errorExample":""},{"type":"xml","example":"<RefreshTransitRouteTableAggregationResponse>\\n    <RequestId>0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50</RequestId>\\n</RefreshTransitRouteTableAggregationResponse>","errorExample":""}]',
      'title' => '重新发布聚合路由',
      'description' => '对于下发失败或部分失败的聚合路由，在您处理完路由问题后，您可以调用**RefreshTransitRouteTableAggregation**接口重新向专有网络VPC（Virtual Private Cloud）实例传播聚合路由。
如果您通过以下方式解决了有问题的路由，则系统会自动重新发布聚合路由，无需您再手动发布：
- 删除关联转发关系
- 关闭路由同步功能
- 删除VPC路由表
- 删除聚合路由

您可以调用**DescribeTransitRouteTableAggregationDetail**接口查看聚合路由的传播状态。',
    ),
    'DescribeTransitRouteTableAggregationDetail' => 
    array (
      'summary' => '查询指定聚合路由的配置详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vtb-6ehgc262hr170qgyc****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouteTableAggregationCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '聚合路由的目标网段。',
            'type' => 'string',
            'required' => true,
            'example' => '192.168.10.0/24',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

>若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'ListTokenResult<CbnTrRouteTableAggregationDetailModel>',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Data' => 
              array (
                'description' => '聚合路由的配置详情。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '聚合路由的配置详情。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'InstanceId' => 
                    array (
                      'description' => '被配置聚合路由的VPC实例ID。',
                      'type' => 'string',
                      'example' => 'vpc-6eh7fp9hdqa2wv85t****',
                    ),
                    'Description' => 
                    array (
                      'description' => '聚合路由配置失败后的返回信息。',
                      'type' => 'string',
                      'example' => 'desctest',
                    ),
                    'Status' => 
                    array (
                      'description' => '聚合路由的配置状态。

- **Configured**：聚合路由已下发至VPC实例。
- **Configuring**：聚合路由下发中。
- **ConfigFailed**：聚合路由下发失败。
- **PartialConfigured**：聚合路由部分下发失败。
- **Deleting**：聚合路由删除中。',
                      'type' => 'string',
                      'example' => 'Configured',
                    ),
                  ),
                ),
              ),
              'Count' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'Total' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterRouteTableId',
            'errorMessage' => 'The transitRouter route table id is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.AggregationRouteCidr',
            'errorMessage' => 'The aggregation route cidr is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExist.TransitRouterRouteTable',
            'errorMessage' => 'The transitRouter route table is not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Data\\": [\\n    {\\n      \\"InstanceId\\": \\"vpc-6eh7fp9hdqa2wv85t****\\",\\n      \\"Description\\": \\"desctest\\",\\n      \\"Status\\": \\"Configured\\"\\n    }\\n  ],\\n  \\"Count\\": 20,\\n  \\"Total\\": 1,\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeTransitRouteTableAggregationDetailResponse>\\n    <Data>\\n        <InstanceId>vpc-6eh7fp9hdqa2wv85t****</InstanceId>\\n        <Description>desctest</Description>\\n        <Status>AllConfigured</Status>\\n    </Data>\\n    <Count>10</Count>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <Total>1</Total>\\n    <RequestId>0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50</RequestId>\\n</DescribeTransitRouteTableAggregationDetailResponse>","errorExample":""}]',
      'title' => '查询指定聚合路由的配置详情',
    ),
    'DescribeTransitRouteTableAggregation' => 
    array (
      'summary' => '查询企业版转发路由器路由表下的聚合路由。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouteTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业版转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vtb-6ehgc262hr170qgyc****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouteTableAggregationCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '聚合路由的目标网段。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.10.0/24',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

>若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        3 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。默认值：**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'minimum' => '0',
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'ListTokenResult<CbnTrRouteTableAggregationModel>',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Data' => 
              array (
                'description' => '聚合路由信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '聚合路由信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'description' => '聚合路由的名称。',
                      'type' => 'string',
                      'example' => 'nametest',
                    ),
                    'TransitRouteTableAggregationCidr' => 
                    array (
                      'description' => '聚合路由的目标网段。',
                      'type' => 'string',
                      'example' => '192.168.10.0/24',
                    ),
                    'Scope' => 
                    array (
                      'description' => '聚合路由的传播范围。

仅取值：**VPC**，表示向已与当前企业版转发路由器路由表创建关联转发关系并已开启路由同步功能的所有VPC实例传播聚合路由。',
                      'type' => 'string',
                      'example' => 'VPC',
                    ),
                    'RouteType' => 
                    array (
                      'description' => '聚合路由的路由类型。

仅取值：**Static**，表示静态路由。聚合路由被传播至VPC实例后，默认为自定义路由条目。',
                      'type' => 'string',
                      'example' => 'Static',
                      'default' => 'Static',
                    ),
                    'Description' => 
                    array (
                      'description' => '聚合路由的描述信息。',
                      'type' => 'string',
                      'example' => 'desctest',
                    ),
                    'TrRouteTableId' => 
                    array (
                      'description' => '企业版转发路由器路由表ID。',
                      'type' => 'string',
                      'example' => 'vtb-6ehgc262hr170qgyc****',
                    ),
                    'Status' => 
                    array (
                      'description' => '聚合路由的传播状态。

- **AllConfigured**：聚合路由已下发至全部VPC实例。
- **Configuring**：聚合路由下发中。
- **ConfigFailed**：聚合路由下发失败。
- **PartialConfigured**：部分VPC没有被成功下发聚合路由。
- **Deleting**：聚合路由删除中。',
                      'type' => 'string',
                      'example' => 'AllConfigured',
                    ),
                  ),
                ),
              ),
              'Count' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'Total' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParam.transitRouterRouteTableId',
            'errorMessage' => 'Missing the parameter transitRouter route table id.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The nextToken is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExist.TransitRouterRouteTable',
            'errorMessage' => 'The transitRouter route table is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidCidrBlock',
            'errorMessage' => 'The transitRouteTableAggregationCidr is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Data\\": [\\n    {\\n      \\"Name\\": \\"nametest\\",\\n      \\"TransitRouteTableAggregationCidr\\": \\"192.168.10.0/24\\",\\n      \\"Scope\\": \\"VPC\\",\\n      \\"RouteType\\": \\"Static\\",\\n      \\"Description\\": \\"desctest\\",\\n      \\"TrRouteTableId\\": \\"vtb-6ehgc262hr170qgyc****\\",\\n      \\"Status\\": \\"AllConfigured\\"\\n    }\\n  ],\\n  \\"Count\\": 20,\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"Total\\": 1,\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeTransitRouteTableAggregationResponse>\\n    <Data>\\n        <Name>nametest</Name>\\n        <TransitRouteTableAggregationCidr>192.168.10.0/24</TransitRouteTableAggregationCidr>\\n        <Scope>VPC</Scope>\\n        <RouteType>Static</RouteType>\\n        <Description>desctest</Description>\\n        <TrRouteTableId>vtb-6ehgc262hr170qgyc****</TrRouteTableId>\\n        <Status>AllConfigured</Status>\\n    </Data>\\n    <Count>20</Count>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <Total>1</Total>\\n    <RequestId>0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50</RequestId>\\n</DescribeTransitRouteTableAggregationResponse>","errorExample":""}]',
      'title' => '查询企业版转发路由器路由表下的聚合路由',
      'description' => '您可以通过指定**TransitRouteTableId**参数和**TransitRouteTableAggregationCidr**参数的值，查询指定聚合路由的信息。如果您仅指定了**TransitRouteTableId**参数的值，则系统默认查询该企业版转发路由器路由表下所有聚合路由的信息。',
    ),
    'CreateTransitRouterPrefixListAssociation' => 
    array (
      'summary' => '为企业版转发路由器路由表绑定前缀列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-6ehx7q2jze8ch5ji0****',
          ),
        ),
        3 => 
        array (
          'name' => 'NextHopType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳类型。取值：

- **BlackHole**：表示指定前缀列表下的网段均为黑洞路由，所有去往前缀列表下网段的流量均会被丢弃。
- **VPC**：表示指定前缀列表下网段的下一跳为专有网络VPC（Virtual Private Cloud）连接。
- **VBR**：表示指定前缀列表下网段的下一跳为边界路由器VBR（Virtual Border Router）连接。
- **TR**：表示指定前缀列表下网段的下一跳为跨地域连接。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'VPC',
          ),
        ),
        4 => 
        array (
          'name' => 'PrefixListId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pl-6ehtn5kqxgeyy08fi****',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-6ehgc262hr170qgyc****',
          ),
        ),
        6 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳连接ID。

> 如果**NextHopType**的取值为**BlackHole**，本参数需输入**BlackHole**。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-attach-flbq507rg2ckrj****',
          ),
        ),
        7 => 
        array (
          'name' => 'OwnerUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表所属的阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '1210123456123456',
          ),
        ),
        8 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会创建绑定关系。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接创建绑定关系。',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission.AliyunServiceRolePolicyForCEN',
            'errorMessage' => 'You are not authorized to create the service linked role. Role Name: AliyunServiceRolePolicyForCEN. Service Name: cen.aliyuncs.com. Make sure that the user has been granted the ram:CreateServiceLinkedRole permission.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotSupport.CCN',
            'errorMessage' => 'CCN not support prefix list.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.PrefixlistCidrs',
            'errorMessage' => 'Can not find any cidr of specified prefix list.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.Nexthop',
            'errorMessage' => 'The specified nexthop instance is not exsit.',
          ),
          4 => 
          array (
            'errorCode' => 'ResourceExisted.PrefixlistAssociation',
            'errorMessage' => 'The prefix list has been already associated with this route table.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceNotFound.PrefixlistAssociation',
            'errorMessage' => 'The prefix list is not associated with this route table. ',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceConflict.Route',
            'errorMessage' => 'Some of the prefixes of the prefix list are conflicted with exsited routes. ',
          ),
          7 => 
          array (
            'errorCode' => 'MultipleFound.PrefixlistAssociation',
            'errorMessage' => 'multiple same prefix association record found.',
          ),
          8 => 
          array (
            'errorCode' => 'QuotaReached.Route',
            'errorMessage' => 'The quota of the route table is not enough for the request prefix list. ',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidStatus.PrefixlistAssociation',
            'errorMessage' => 'The prefix list association is not in a valid state for the operation.',
          ),
          10 => 
          array (
            'errorCode' => 'NotSupport.TrType',
            'errorMessage' => 'The basic tr type is not support for this operation.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidValue.PrefixlistCidr',
            'errorMessage' => 'Invalid cidr exist in the specified prefixlist.',
          ),
          12 => 
          array (
            'errorCode' => 'ResourceNotSupport.Nexthop',
            'errorMessage' => 'The specified nexthop instance type is not support for the operation.',
          ),
          13 => 
          array (
            'errorCode' => 'ResourceMismatch.Nexthop',
            'errorMessage' => 'The specified nexthop and nexthop type mismatched.',
          ),
          14 => 
          array (
            'errorCode' => 'ResourceNotFound.PrefixList',
            'errorMessage' => 'The specified prefixlist does not found.',
          ),
          15 => 
          array (
            'errorCode' => 'OperationDenied.SystemPrefixList',
            'errorMessage' => 'SystemPrefixList can not be operated.',
          ),
          16 => 
          array (
            'errorCode' => 'OperationFailed.OperateShareResource',
            'errorMessage' => 'Operate share prefixlist failed.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidStatus.Prefixlist',
            'errorMessage' => 'Prefixlist is not in a operate status.',
          ),
          18 => 
          array (
            'errorCode' => 'RegionNotSupport.Prefixlist',
            'errorMessage' => 'Prefixlist association are not supported in this region.',
          ),
          19 => 
          array (
            'errorCode' => 'OperationFailed.TransitRouterNotExist',
            'errorMessage' => 'Operation failed because transit router not exist.',
          ),
          20 => 
          array (
            'errorCode' => 'IncorrectStatus.RouteTable',
            'errorMessage' => 'RouteTable status is invalid.',
          ),
          21 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterTableId',
            'errorMessage' => 'The specified Route Table ID is invalid.',
          ),
          22 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          23 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'The specified RouteTableId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTransitRouterPrefixListAssociationResponse>\\n    <RequestId>0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50</RequestId>\\n</CreateTransitRouterPrefixListAssociationResponse>","errorExample":""}]',
      'title' => '为企业版转发路由器路由表绑定前缀列表',
      'description' => '- 仅企业版转发路由器的路由表支持绑定前缀列表。
- 一个前缀列表只支持绑定至一个企业版转发路由器路由表。
- 待绑定的前缀列表下的网段不能和企业版转发路由器路由表中已有的路由条目的网段有重叠，否则会绑定失败。
- 如果企业版转发路由器路由表需要绑定多个前缀列表，请确保多个前缀列表之间的网段没有重叠，否则会绑定失败。

# 前提条件

- 您已经创建了前缀列表。具体操作，请参见[CreateVpcPrefixList](~~437367~~)。
- 如果企业版转发路由器路由表需要绑定跨账号的前缀列表，请确保待绑定的前缀列表已被共享给企业版转发路由器路由表所属的阿里云账号（主账号）。关于如何共享前缀列表资源，请参见[资源共享概述](~~160622~~)和[API参考（资源共享）](~~193445~~)。',
    ),
    'DeleteTransitRouterPrefixListAssociation' => 
    array (
      'summary' => '解除企业版转发路由器路由表与前缀列表的绑定关系。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-6ehx7q2jze8ch5ji0****',
          ),
        ),
        3 => 
        array (
          'name' => 'PrefixListId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'pl-6ehtn5kqxgeyy08fi****',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器路由表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vtb-6ehgc262hr170qgyc****',
          ),
        ),
        5 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳连接ID。

> 如果**NextHopType**的取值为**BlackHole**，本参数需输入**BlackHole**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-flbq507rg2ckrj****',
          ),
        ),
        6 => 
        array (
          'name' => 'NextHopType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳类型。取值：

- **BlackHole**：表示前缀列表下的网段均为黑洞路由，所有去往前缀列表下网段的流量均会被丢弃。
- **VPC**：表示前缀列表下网段的下一跳为专有网络VPC（Virtual Private Cloud）连接。
- **VBR**：表示前缀列表下网段的下一跳为边界路由器VBR（Virtual Border Router）连接。
- **TR**：表示前缀列表下网段的下一跳为跨地域连接。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'VPC',
          ),
        ),
        7 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会解除绑定关系。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接解除绑定关系。',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '835E7F4B-B380-4E0F-96A5-6EA572388047',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission.AliyunServiceRolePolicyForCEN',
            'errorMessage' => 'You are not authorized to create the service linked role. Role Name: AliyunServiceRolePolicyForCEN. Service Name: cen.aliyuncs.com. Make sure that the user has been granted the ram:CreateServiceLinkedRole permission.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.PrefixlistCidrs',
            'errorMessage' => 'Can not find any cidr of specified prefix list.',
          ),
          2 => 
          array (
            'errorCode' => 'ResourceNotFound.Nexthop',
            'errorMessage' => 'The specified nexthop instance is not exsit.',
          ),
          3 => 
          array (
            'errorCode' => 'ResourceNotFound.PrefixlistAssociation',
            'errorMessage' => 'The prefix list is not associated with this route table. ',
          ),
          4 => 
          array (
            'errorCode' => 'MultipleFound.PrefixlistAssociation',
            'errorMessage' => 'multiple same prefix association record found.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidStatus.PrefixlistAssociation',
            'errorMessage' => 'The prefix list association is not in a valid state for the operation.',
          ),
          6 => 
          array (
            'errorCode' => 'ResourceNotFound.PrefixList',
            'errorMessage' => 'The specified prefixlist does not found.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationDenied.SystemPrefixList',
            'errorMessage' => 'SystemPrefixList can not be operated.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationFailed.OperateShareResource',
            'errorMessage' => 'Operate share prefixlist failed.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidStatus.Prefixlist',
            'errorMessage' => 'Prefixlist is not in a operate status.',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectStatus.RouteTable',
            'errorMessage' => 'RouteTable status is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationFailed.TransitRouterNotExist',
            'errorMessage' => 'Operation failed because transit router not exist.',
          ),
          12 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouter',
            'errorMessage' => 'TransitRouter status is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterTableId',
            'errorMessage' => 'The specified Route Table ID is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          15 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRouteTableId.NotFound',
            'errorMessage' => 'The specified RouteTableId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"835E7F4B-B380-4E0F-96A5-6EA572388047\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTransitRouterPrefixListAssociationResponse>\\n    <RequestId>835E7F4B-B380-4E0F-96A5-6EA572388047</RequestId>\\n</DeleteTransitRouterPrefixListAssociationResponse>","errorExample":""}]',
      'title' => '解除企业版转发路由器路由表与前缀列表的绑定关系',
      'description' => '# 注意事项

企业版转发路由器路由表与前缀列表解除绑定后，系统将自动撤销已添加在企业版转发路由器路由表中前缀列表相关的所有路由条目。因此解绑前，请确保您已经迁移业务流量，否则会造成网络中断。',
    ),
    'ListTransitRouterPrefixListAssociation' => 
    array (
      'summary' => '查询企业版转发路由器路由表绑定的前缀列表的信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-6ehx7q2jze8ch5ji0****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterTableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器路由表ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'vtb-6ehgc262hr170qgyc****',
          ),
        ),
        3 => 
        array (
          'name' => 'PrefixListId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'pl-6ehtn5kqxgeyy08fi****',
          ),
        ),
        4 => 
        array (
          'name' => 'OwnerUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表所属的阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '1210123456123456',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待查询的列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。最大值：**100**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳连接ID。

> 如果您需要查询生成黑洞路由的前缀列表的信息，本参数需输入**BlackHole**。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-flbq507rg2ckrj****',
          ),
        ),
        8 => 
        array (
          'name' => 'NextHopType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳类型。取值：

- **BlackHole**：表示查询生成黑洞路由的前缀列表的信息。
- **VPC**：表示查询下一跳为专有网络VPC（Virtual Private Cloud）连接的前缀列表的信息。
- **VBR**：表示查询下一跳为边界路由器VBR（Virtual Border Router）连接的前缀列表的信息。
- **TR**：表示查询下一跳为跨地域连接的前缀列表的信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
          ),
        ),
        9 => 
        array (
          'name' => 'NextHopInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳连接关联的网络实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-6eh7fp9hdqa2wv85t****',
          ),
        ),
        10 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '前缀列表的状态。

- **Active**：已生效。
- **Updating**：更新中。',
            'type' => 'string',
            'required' => false,
            'example' => 'Active',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6005CA94-676E-1FEE-985E-7602EFAADD6A',
              ),
              'TotalCount' => 
              array (
                'description' => '符合查询条件的列表总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '查询的列表页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PrefixLists' => 
              array (
                'description' => '前缀列表的信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '前缀列表的信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'PrefixListId' => 
                    array (
                      'description' => '前缀列表ID。',
                      'type' => 'string',
                      'example' => 'pl-6ehtn5kqxgeyy08fi****',
                    ),
                    'OwnerUid' => 
                    array (
                      'description' => '前缀列表所属的阿里云账号（主账号）ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1210123456123456',
                    ),
                    'Status' => 
                    array (
                      'description' => '前缀列表的状态。

- **Active**：已生效。
- **Updating**：更新中。',
                      'type' => 'string',
                      'example' => 'Active',
                    ),
                    'NextHop' => 
                    array (
                      'description' => '下一跳连接ID。

> 如果返回值为**BlackHole**，则表示前缀列表下的所有网段均为黑洞路由，所有去往前缀列表下网段的流量均会被丢弃。',
                      'type' => 'string',
                      'example' => 'tr-attach-flbq507rg2ckrj****',
                    ),
                    'NextHopInstanceId' => 
                    array (
                      'description' => '下一跳连接关联的网络实例ID。',
                      'type' => 'string',
                      'example' => 'vpc-6eh7fp9hdqa2wv85t****',
                    ),
                    'NextHopType' => 
                    array (
                      'description' => '下一跳类型。

- **BlackHole**：表示前缀列表下的网段均为黑洞路由，所有去往前缀列表下网段的流量均会被丢弃。
- **VPC**：表示前缀列表下网段的下一跳为专有网络VPC（Virtual Private Cloud）连接。
- **VBR**：表示前缀列表下网段的下一跳为边界路由器VBR（Virtual Border Router）连接。
- **TR**：表示前缀列表下网段的下一跳为跨地域连接。',
                      'type' => 'string',
                      'example' => 'VPC',
                    ),
                    'TransitRouterTableId' => 
                    array (
                      'description' => '转发路由器路由表ID。',
                      'type' => 'string',
                      'example' => 'vtb-6ehgc262hr170qgyc****',
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => '转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-6ehx7q2jze8ch5ji0****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        201 => 
        array (
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.Region',
            'errorMessage' => 'The specified Region is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6005CA94-676E-1FEE-985E-7602EFAADD6A\\",\\n  \\"TotalCount\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"PrefixLists\\": [\\n    {\\n      \\"PrefixListId\\": \\"pl-6ehtn5kqxgeyy08fi****\\",\\n      \\"OwnerUid\\": 1210123456123456,\\n      \\"Status\\": \\"Active\\",\\n      \\"NextHop\\": \\"tr-attach-flbq507rg2ckrj****\\",\\n      \\"NextHopInstanceId\\": \\"vpc-6eh7fp9hdqa2wv85t****\\",\\n      \\"NextHopType\\": \\"VPC\\",\\n      \\"TransitRouterTableId\\": \\"vtb-6ehgc262hr170qgyc****\\",\\n      \\"TransitRouterId\\": \\"tr-6ehx7q2jze8ch5ji0****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterPrefixListAssociationResponse>\\n    <RequestId>6005CA94-676E-1FEE-985E-7602EFAADD6A</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <PageSize>10</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <PrefixLists>\\n        <PrefixListId>pl-6ehtn5kqxgeyy08fi****</PrefixListId>\\n        <OwnerUid>1210123456123456</OwnerUid>\\n        <Status>Active</Status>\\n        <NextHop>tr-attach-flbq507rg2ckrj****</NextHop>\\n        <NextHopInstanceId>vpc-6eh7fp9hdqa2wv85t****</NextHopInstanceId>\\n        <NextHopType>VPC</NextHopType>\\n        <TransitRouterTableId>vtb-6ehgc262hr170qgyc****</TransitRouterTableId>\\n        <TransitRouterId>tr-6ehx7q2jze8ch5ji0****</TransitRouterId>\\n    </PrefixLists>\\n</ListTransitRouterPrefixListAssociationResponse>","errorExample":""}]',
      'title' => '查询企业版转发路由器路由表绑定的前缀列表的信息',
    ),
    'AddTraficMatchRuleToTrafficMarkingPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会为流量标记策略添加流分类规则。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接为流量标记策略添加流分类规则。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficMarkingPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tm-u9nxup5kww5po8****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficMatchRules',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '流分类规则列表。

一次最多支持添加50个流分类规则。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '流分类规则的信息。',
              'type' => 'object',
              'properties' => 
              array (
                'MatchDscp' => 
                array (
                  'description' => '流量报文的DSCP值。取值范围：**0**~**63**。

流分类规则匹配包含指定DSCP值的流量，如果不设置则代表使流分类规则匹配任意DSCP值的流量。

> 当前DSCP值是指流量报文进入跨地域连接前已携带的DSCP值。

一次最多支持添加50个流分类规则。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '5',
                ),
                'DstCidr' => 
                array (
                  'description' => '流量报文的目的网段。

流分类匹配目的IP地址在目的网段中的流量，如果不设置则代表使流分类规则匹配任意目的IP地址的流量。

一次最多支持添加50个流分类规则。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.10.10.0/24',
                ),
                'TrafficMatchRuleDescription' => 
                array (
                  'description' => '流分类规则的描述信息。

一次最多支持添加50个流分类规则。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'desctest',
                ),
                'Protocol' => 
                array (
                  'description' => '流量报文的协议类型。

流分类规则支持匹配**HTTP**、**HTTPS**、**TCP**、**UDP**、**SSH**、**Telnet**等多种协议类型的流量。更多协议类型，请登录[云企业网管理控制台](https://cen.console.aliyun.com/cen/list)查看。

一次最多支持添加50个流分类规则。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'HTTP',
                ),
                'DstPortRange' => 
                array (
                  'description' => '流量报文的目的端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配目的端口号在目的端口范围中的流量，如果不设置则代表使流分类规则匹配任意目的端口号的流量。

当前参数最多支持输入2个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配目的端口为1的流量。
- 如果您输入了2个端口号，例如1和200，则系统默认匹配目的端口处于1至200范围内的流量。
- 如果您输入了2个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意目的端口。

一次最多支持添加50个流分类规则。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '流量报文的目的端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配目的端口号在目的端口范围中的流量，如果不设置则代表使流分类规则匹配任意目的端口号的流量。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配目的端口为1的流量。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配目的端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意目的端口。

一次最多支持添加50个流分类规则。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '80',
                  ),
                  'required' => false,
                  'maxItems' => 2,
                ),
                'SrcCidr' => 
                array (
                  'description' => '流量报文的源网段。

流分类规则匹配源IP地址在源网段中的流量，如果不设置则代表使流分类规则匹配任意源IP地址的流量。

一次最多支持添加50个流分类规则。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.10.0/24',
                ),
                'SrcPortRange' => 
                array (
                  'description' => '流量报文的源端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配源端口号在源端口范围中的流量，如果不设置则代表使流分类规则匹配任意源端口号的流量。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配源端口为1的流量。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配源端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意源端口。

一次最多支持添加50个流分类规则。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '流量报文的源端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配源端口号在源端口范围中的流量，如果不设置则代表使流分类规则匹配任意源端口。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配源端口为1的流量。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配源端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意源端口。

一次最多支持添加50个流分类规则。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '200',
                  ),
                  'required' => false,
                  'maxItems' => 2,
                ),
                'TrafficMatchRuleName' => 
                array (
                  'description' => '流分类分则的名称。

一次最多支持添加50个流分类规则。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'nametest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0876E54E-3E36-5C31-89F0-9EE8A9266F9A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTrafficMarkingPolicyId.NotFound',
            'errorMessage' => 'Operation is failed because traffic marking policy id is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceExist.TrafficMatchRules',
            'errorMessage' => 'The instance already exists.',
          ),
          2 => 
          array (
            'errorCode' => 'Duplicated.TrafficMatchRules',
            'errorMessage' => 'The parameter TrafficMatchRules are duplicated.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.SrcCidr',
            'errorMessage' => 'SrcCidr is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMarkingPolicy',
            'errorMessage' => 'The status of TrafficMarkingPolicy is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.DstCidr',
            'errorMessage' => 'DstCidr is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.Protocol',
            'errorMessage' => 'Protocol is illegal.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          8 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'substitutions' => 
        array (
          0 => 'Cbn::2017-09-12::AddTrafficMatchRuleToTrafficMarkingPolicy',
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0876E54E-3E36-5C31-89F0-9EE8A9266F9A\\"\\n}","errorExample":""},{"type":"xml","example":"<AddTraficMatchRuleToTrafficMarkingPolicyResponse>\\n    <RequestId>0876E54E-3E36-5C31-89F0-9EE8A9266F9A</RequestId>\\n</AddTraficMatchRuleToTrafficMarkingPolicyResponse>","errorExample":""}]',
      'title' => '为流量标记策略添加流分类规则',
      'summary' => '为流量标记策略添加流分类规则。',
      'description' => '# 注意事项

当前**AddTraficMatchRuleToTrafficMarkingPolicy**接口已废弃并即将下线。如果您需要为流量标记策略添加流分类规则，请使用[AddTrafficMatchRuleToTrafficMarkingPolicy](~~427602~~)接口。本接口文档已停止维护。',
    ),
    'AddTrafficMatchRuleToTrafficMarkingPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会为流量标记策略添加流分类规则。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接为流量标记策略添加流分类规则。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficMarkingPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tm-u9nxup5kww5po8****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficMatchRules',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '流分类规则列表。

一次最多支持添加50个流分类规则。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '流分类规则的信息。',
              'type' => 'object',
              'properties' => 
              array (
                'MatchDscp' => 
                array (
                  'description' => '流量报文的DSCP值。取值范围：**0**~**63**。

流分类规则匹配包含指定DSCP值的流量，如果不设置则代表使流分类规则匹配任意DSCP值的流量。

> 当前DSCP值是指流量报文进入跨地域连接前已携带的DSCP值。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '5',
                ),
                'DstCidr' => 
                array (
                  'description' => '流量报文的目的网段。

流分类匹配目的IP地址在目的网段中的流量，如果不设置则代表使流分类规则匹配任意目的IP地址的流量。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.10.10.0/24',
                ),
                'TrafficMatchRuleDescription' => 
                array (
                  'description' => '流分类规则的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'desctest',
                ),
                'Protocol' => 
                array (
                  'description' => '流量报文的协议类型。

流分类规则支持匹配**HTTP**、**HTTPS**、**TCP**、**UDP**、**SSH**、**Telnet**等多种协议类型的流量。更多协议类型，请登录[云企业网管理控制台](https://cen.console.aliyun.com/cen/list)查看。

<details>
<summary>部分协议拥有固定的端口。单击查看端口详情。</summary>

- 协议类型为**ICMP**时，目的端口号需指定为-**1**。
- 协议类型为**GRE**时，目的端口号需指定为-**1**。
- 协议类型为**SSH**时，目的端口号需指定为**22**。
- 协议类型为**Telnet**时，目的端口号需指定为**23**。
- 协议类型为**HTTP**时，目的端口号需指定为**80**。
- 协议类型为**HTTPS**时，目的端口号需指定为**443**。
- 协议类型为**MS SQL** 时，目的端口号需指定为**1443**。
- 协议类型为**Oracle**时，目的端口号需指定为**1521**。
- 协议类型为**Mysql**时，目的端口号需指定为**3306**。
- 协议类型为**RDP**时，目的端口号需指定为**3389**。
- 协议类型为**Postgre SQL**时，目的端口号需指定为**5432**。
- 协议类型为**Redis**时，目的端口号需指定为**6379**。

</details>',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'HTTP',
                ),
                'DstPortRange' => 
                array (
                  'description' => '流量报文的目的端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配目的端口号在目的端口范围中的流量，如果不设置则代表使流分类规则匹配任意目的端口号的流量。

当前参数最多支持输入2个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配目的端口为1的流量。如果为-1，则表示匹配任意目的端口。
- 如果您输入了2个端口号，例如1和200，则系统默认匹配目的端口处于1至200范围内的流量。
- 如果您输入了2个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意目的端口。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '流量报文的目的端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配目的端口号在目的端口范围中的流量，如果不设置则代表使流分类规则匹配任意目的端口号的流量。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配目的端口为1的流量。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配目的端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意目的端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '80',
                  ),
                  'required' => false,
                  'maxItems' => 2,
                ),
                'SrcCidr' => 
                array (
                  'description' => '流量报文的源网段。

流分类规则匹配源IP地址在源网段中的流量，如果不设置则代表使流分类规则匹配任意源IP地址的流量。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.10.0/24',
                ),
                'SrcPortRange' => 
                array (
                  'description' => '流量报文的源端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配源端口号在源端口范围中的流量，如果不设置则代表使流分类规则匹配任意源端口号的流量。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配源端口为1的流量。如果为-1，则表示匹配任意源端口。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配源端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意源端口。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '流量报文的源端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配源端口号在源端口范围中的流量，如果不设置则代表使流分类规则匹配任意源端口。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配源端口为1的流量。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配源端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意源端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '200',
                  ),
                  'required' => false,
                  'maxItems' => 2,
                ),
                'TrafficMatchRuleName' => 
                array (
                  'description' => '流分类分则的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'nametest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0876E54E-3E36-5C31-89F0-9EE8A9266F9A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTrafficMarkingPolicyId.NotFound',
            'errorMessage' => 'Operation is failed because traffic marking policy id is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.SrcCidr',
            'errorMessage' => 'The specified SrcCidr is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMarkingPolicy',
            'errorMessage' => 'The status of TrafficMarkingPolicy is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.DstCidr',
            'errorMessage' => 'The specified DstCidr is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.Protocol',
            'errorMessage' => 'The specified Protocol is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'Duplicated.TrafficMatchRules',
            'errorMessage' => 'The parameter AddTrafficMatchRules are duplicated.',
          ),
          6 => 
          array (
            'errorCode' => 'InstanceExist.TrafficMatchRules',
            'errorMessage' => 'The instance already exists.',
          ),
          7 => 
          array (
            'errorCode' => 'MissingParam.TrafficMatchRules',
            'errorMessage' => 'The parameter TrafficMatchRules is empty.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.SrcPortRange',
            'errorMessage' => 'The specified SrcPortRange is illegal.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.DstPortRange',
            'errorMessage' => 'The specified DstPortRange is illegal.',
          ),
          10 => 
          array (
            'errorCode' => 'AttrMismatching.CidrAddressFamily',
            'errorMessage' => 'Attribute SrcCidr or DstCidr of TrafficMarkRule does not match AddressFamily.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.AddressFamily',
            'errorMessage' => 'AddressFamily is illegal.',
          ),
          12 => 
          array (
            'errorCode' => 'AttrMismatching.SrcCidrDstCidr',
            'errorMessage' => 'Attribute SrcCidr of TrafficMarkRule does not match DstCidr.',
          ),
          13 => 
          array (
            'errorCode' => 'AttrMismatching.CidrProtocol',
            'errorMessage' => 'Attribute SrcCidr or DstCidr of TrafficMarkRule does not match Protocol.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidTransitRouterMode.NeedUpgrade',
            'errorMessage' => 'TransitRouter need to upgrade.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          16 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0876E54E-3E36-5C31-89F0-9EE8A9266F9A\\"\\n}","errorExample":""},{"type":"xml","example":"<AddTraficMatchRuleToTrafficMarkingPolicyResponse>\\n    <RequestId>0876E54E-3E36-5C31-89F0-9EE8A9266F9A</RequestId>\\n</AddTraficMatchRuleToTrafficMarkingPolicyResponse>","errorExample":""}]',
      'title' => '为流量标记策略添加流分类规则',
      'summary' => '调用AddTrafficMatchRuleToTrafficMarkingPolicy接口为流量标记策略添加流分类规则。',
      'description' => '**AddTrafficMatchRuleToTrafficMarkingPolicy**接口属于异步接口，即系统会先返回一个**RequestId**，但该流分类规则并未创建完成，系统后台的创建任务仍在进行。您可以调用**ListTrafficMarkingPolicies**接口查询流分类规则的状态。 

- 当流分类规则处于**Creating**状态时，表示流分类规则正在创建中，在该状态下，您只能对流分类规则执行查询操作，不能执行其他操作。
- 当流分类规则处于**Active**状态时，表示流分类规则创建完成。',
    ),
    'CreateTrafficMarkingPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会创建流量标记策略。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接创建流量标记策略。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-8vbuqeo5h5pu3m01d****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficMarkingPolicyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        4 => 
        array (
          'name' => 'TrafficMarkingPolicyDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        5 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略的优先级。取值范围：**1**~**100**。

一个转发路由器实例下，每个流量标记策略的优先级需保证唯一。数字越小，优先级越高。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
        6 => 
        array (
          'name' => 'MarkingDscp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '为符合流分类规则的流量报文添加DSCP（Differentiated Services Code Point）值。取值范围：**0**~**63**。

一个转发路由器实例下，每个流量标记策略的DCSP值需保证唯一。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
        7 => 
        array (
          'name' => 'TrafficMatchRules',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '流量标记策略的流分类规则列表。

符合流分类规则的流量报文将被添加流量策略的DSCP值。

一次最多支持创建50个流分类规则。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '流分类规则信息。',
              'type' => 'object',
              'properties' => 
              array (
                'MatchDscp' => 
                array (
                  'description' => '流量报文的DSCP值。取值范围：**0**~**63**。

流分类规则匹配包含指定DSCP值的流量，如果不设置则代表使流分类规则匹配任意DSCP值的流量。

> 当前DSCP值是指流量报文进入跨地域连接前已携带的DSCP值。

一次最多支持创建50个流分类规则，每个流分类规则可指定匹配一个DSCP值。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '6',
                ),
                'DstCidr' => 
                array (
                  'description' => '流量报文的目的网段。

流分类匹配目的IP地址在目的网段中的流量，如果不设置则代表使流分类规则匹配任意目的IP地址的流量。

一次最多支持创建50个流分类规则，每个流分类规则可指定一个目的网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.10.10.0/24',
                ),
                'TrafficMatchRuleDescription' => 
                array (
                  'description' => '流分类规则的描述信息。

一次最多支持创建50个流分类规则，每个流分类规则可添加一个描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'desctest',
                ),
                'Protocol' => 
                array (
                  'description' => '流量报文的协议类型。

流量标记策略支持匹配**HTTP**、**HTTPS**、**TCP**、**UDP**、**SSH**、**Telnet**等多种协议类型的流量。更多协议类型，请登录[云企业网管理控制台](https://cen.console.aliyun.com/cen/list)查看。
<details>
<summary>部分协议拥有固定的端口。单击查看端口详情。</summary>

- 协议类型为**ICMP**时，目的端口号需指定为-**1**。
- 协议类型为**GRE**时，目的端口号需指定为-**1**。
- 协议类型为**SSH**时，目的端口号需指定为**22**。
- 协议类型为**Telnet**时，目的端口号需指定为**23**。
- 协议类型为**HTTP**时，目的端口号需指定为**80**。
- 协议类型为**HTTPS**时，目的端口号需指定为**443**。
- 协议类型为**MS SQL** 时，目的端口号需指定为**1443**。
- 协议类型为**Oracle**时，目的端口号需指定为**1521**。
- 协议类型为**Mysql**时，目的端口号需指定为**3306**。
- 协议类型为**RDP**时，目的端口号需指定为**3389**。
- 协议类型为**Postgre SQL**时，目的端口号需指定为**5432**。
- 协议类型为**Redis**时，目的端口号需指定为**6379**。

</details>

一次最多支持创建50个流分类规则，每个流分类规则可指定匹配一个协议类型。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'HTTP',
                ),
                'DstPortRange' => 
                array (
                  'description' => '流量报文的目的端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配目的端口号在目的端口范围中的流量，如果不设置则代表使流分类规则匹配任意目的端口号的流量。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配目的端口为1的流量。如果为-1，则表示匹配任意目的端口。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配目的端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意目的端口。

一次最多支持创建50个流分类规则，每个流分类规则可指定一个目的端口范围。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '流量报文的目的端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配目的端口号在目的端口范围中的流量，如果不设置则代表使流分类规则匹配任意目的端口号的流量。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配目的端口为1的流量。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配目的端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意目的端口。

一次最多支持创建50个流分类规则，每个流分类规则可指定一个目的端口范围。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '80',
                  ),
                  'required' => false,
                  'maxItems' => 2,
                ),
                'SrcCidr' => 
                array (
                  'description' => '流量报文的源网段。

流分类规则匹配源IP地址在源网段中的流量，如果不设置则代表使流分类规则匹配任意源IP地址的流量。

一次最多支持创建50个流分类规则，每个流分类规则可指定匹配一个源网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.10.0/24',
                ),
                'SrcPortRange' => 
                array (
                  'description' => '流量报文的源端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配源端口号在源端口范围中的流量，如果不设置则代表使流分类规则匹配任意源端口。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配源端口为1的流量。如果为-1，则表示匹配任意源端口。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配源端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意源端口。

一次最多支持创建50个流分类规则，每个流分类规则可指定一个源端口范围。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '流量报文的源端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配源端口号在源端口范围中的流量，如果不设置则代表使流分类规则匹配任意源端口。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配源端口为1的流量。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配源端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意源端口。

一次最多支持创建50个流分类规则，每个流分类规则可指定一个源端口范围。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '1',
                  ),
                  'required' => false,
                  'maxItems' => 2,
                ),
                'TrafficMatchRuleName' => 
                array (
                  'description' => '流分类规则的名称。

一次最多支持创建50个流分类规则，每个流分类规则可添加一个名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'nametest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TrafficMarkingPolicyId' => 
              array (
                'description' => '流量标记策略ID。',
                'type' => 'string',
                'example' => 'tm-u9nxup5kww5po8****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0876E54E-3E36-5C31-89F0-9EE8A9266F9A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTransitRouterId.NotFound',
            'errorMessage' => 'TransitRouterId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.Protocol',
            'errorMessage' => 'Protocol is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.TransitRouterType',
            'errorMessage' => 'Operation failed because The Basic TransitRouter does not support this action.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.Priority',
            'errorMessage' => 'Priority is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.MarkingDscp',
            'errorMessage' => 'MarkingDscp is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.SrcCidr',
            'errorMessage' => 'SrcCidr is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.DstCidr',
            'errorMessage' => 'DstCidr is illegal.',
          ),
          7 => 
          array (
            'errorCode' => 'Duplicated.Priority',
            'errorMessage' => 'The parameter Priority is duplicated.',
          ),
          8 => 
          array (
            'errorCode' => 'Duplicated.MarkingDscp',
            'errorMessage' => 'The parameter MarkingDscp is duplicated.',
          ),
          9 => 
          array (
            'errorCode' => 'Duplicated.TrafficMatchRules',
            'errorMessage' => 'The parameter TrafficMatchRules are duplicated.',
          ),
          10 => 
          array (
            'errorCode' => 'QuotaExceeded.TrafficMatchRule',
            'errorMessage' => 'The maximum number of TrafficMatchRule per Transit Router is exceeded.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.MatchDscp',
            'errorMessage' => 'MarkingDscp is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.SrcPortRange',
            'errorMessage' => 'The specified SrcPortRange is illegal.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.DstPortRange',
            'errorMessage' => 'The specified DstPortRange is illegal.',
          ),
          14 => 
          array (
            'errorCode' => 'AttrMismatching.CidrAddressFamily',
            'errorMessage' => 'Attribute SrcCidr or DstCidr of TrafficMarkRule does not match AddressFamily.',
          ),
          15 => 
          array (
            'errorCode' => 'IllegalParam.AddressFamily',
            'errorMessage' => 'AddressFamily is illegal.',
          ),
          16 => 
          array (
            'errorCode' => 'AttrMismatching.SrcCidrDstCidr',
            'errorMessage' => 'Attribute SrcCidr of TrafficMarkRule does not match DstCidr.',
          ),
          17 => 
          array (
            'errorCode' => 'AttrMismatching.CidrProtocol',
            'errorMessage' => 'Attribute SrcCidr or DstCidr of TrafficMarkRule does not match Protocol.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidTransitRouterMode.NeedUpgrade',
            'errorMessage' => 'TransitRouter need to upgrade.',
          ),
          19 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          20 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TrafficMarkingPolicyId\\": \\"tm-u9nxup5kww5po8****\\",\\n  \\"RequestId\\": \\"0876E54E-3E36-5C31-89F0-9EE8A9266F9A\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateTrafficMarkingPolicyResponse>\\n    <TrafficMarkingPolicyId>tm-u9nxup5kww5po8****</TrafficMarkingPolicyId>\\n    <RequestId>0876E54E-3E36-5C31-89F0-9EE8A9266F9A</RequestId>\\n</CreateTrafficMarkingPolicyResponse>","errorExample":""}]',
      'title' => '创建流量标记策略',
      'summary' => '流量标记策略通过流分类规则捕获符合规则的流量，捕获后，您可以为流量添加DSCP（Differentiated Services Code Point）值作为标记。您可以通过调用CreateTrafficMarkingPolicy创建流量标记策略。',
      'description' => '- 仅企业版转发路由器支持创建流量标记策略。
- **CreateTrafficMarkingPolicy**接口属于异步接口，即系统会先返回一个流量标记策略ID，但该流量标记策略并未创建完成，系统后台的创建任务仍在进行。您可以调用**ListTrafficMarkingPolicies**接口查询流量标记策略的状态。 

    - 当流量标记策略处于**Creating**状态时，表示流量标记策略正在创建中，在该状态下，您只能对流量标记策略执行查询操作，不能执行其他操作。
    - 当流量标记策略处于**Active**状态时，表示流量标记策略创建完成。',
    ),
    'DeleteTrafficMarkingPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会删除流量标记策略。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码DryRunOperation。
- **false**（默认值）：发送正常请求，通过检查后直接删除流量标记策略。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficMarkingPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tm-u9nxup5kww5po8****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5F1F3A57-A753-572B-8F71-4F964398C566',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'AssociationExist.TransitQosRuleExist',
            'errorMessage' => 'The rule with the specified TrafficMarkingPolicy already exists.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMarkingPolicy',
            'errorMessage' => 'The status of TrafficMarkingPolicy is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidTrafficMarkingPolicyId.NotFound',
            'errorMessage' => 'The specified TrafficMarkingPolicyId is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5F1F3A57-A753-572B-8F71-4F964398C566\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTrafficMarkingPolicyResponse>\\n    <RequestId>5F1F3A57-A753-572B-8F71-4F964398C566</RequestId>\\n</DeleteTrafficMarkingPolicyResponse>","errorExample":""}]',
      'title' => '删除流量标记策略',
      'summary' => '调用DeleteTrafficMarkingPolicy接口删除流量标记策略。',
      'description' => '- **DeleteTrafficMarkingPolicy**接口属于异步接口，即系统会先返回一个**RequestId**，但该流量标记策略并未删除完成，系统后台的删除任务仍在进行。您可以调用**ListTrafficMarkingPolicies**接口查询流量标记策略的状态。 

    - 当流量标记策略处于**Deleting**状态时，表示流量标记策略正在删除中，在该状态下，您只能对流量标记策略执行查询操作，不能执行其他操作。
    - 当查询不到指定的流量标记策略时，表示流量标记策略删除完成。
- 删除流量标记策略前，请先删除流量标记策略下的流分类规则。具体操作，请参见[RemoveTrafficMatchRuleFromTrafficMarkingPolicy](~~468330~~)。',
    ),
    'UpdateTrafficMarkingPolicyAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会修改流量标记策略的名称，描述信息以及流分类规则。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接修改流量标记策略的名称，描述信息以及流分类规则',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficMarkingPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tm-u9nxup5kww5po8****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficMarkingPolicyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略的新名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        4 => 
        array (
          'name' => 'TrafficMarkingPolicyDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略新的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        5 => 
        array (
          'name' => 'AddTrafficMatchRules',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '增加的流分类规则列表。

一次最多支持添加50个流分类规则。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '增加的流分类规则列表。',
              'type' => 'object',
              'properties' => 
              array (
                'MatchDscp' => 
                array (
                  'description' => '流量报文的DSCP值。取值范围：**0**~**63**。

流分类规则匹配包含指定DSCP值的流量，如果不设置则代表使流分类规则匹配任意DSCP值的流量。

> 当前DSCP值是指流量报文进入跨地域连接前已携带的DSCP值。

一次最多支持创建50个流分类规则，每个流分类规则可指定匹配一个DSCP值。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '1',
                ),
                'DstCidr' => 
                array (
                  'description' => '流量报文的目的网段。

流分类匹配目的IP地址在目的网段中的流量，如果不设置则代表使流分类规则匹配任意目的IP地址的流量。

一次最多支持创建50个流分类规则，每个流分类规则可指定一个目的网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '172.30.0.0/24',
                ),
                'TrafficMatchRuleDescription' => 
                array (
                  'description' => '流分类规则的描述信息。

一次最多支持创建50个流分类规则，每个流分类规则可添加一个描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test1',
                ),
                'Protocol' => 
                array (
                  'description' => '流量报文的协议类型。

流量标记策略支持匹配**HTTP**、**HTTPS**、**TCP**、**UDP**、**SSH**、**Telnet**等多种协议类型的流量。更多协议类型，请登录[云企业网管理控制台](https://cen.console.aliyun.com/cen/list)查看。
<details>
<summary>部分协议拥有固定的端口。单击查看端口详情。</summary>

- 协议类型为**ICMP**时，目的端口号需指定为-**1**。
- 协议类型为**GRE**时，目的端口号需指定为-**1**。
- 协议类型为**SSH**时，目的端口号需指定为**22**。
- 协议类型为**Telnet**时，目的端口号需指定为**23**。
- 协议类型为**HTTP**时，目的端口号需指定为**80**。
- 协议类型为**HTTPS**时，目的端口号需指定为**443**。
- 协议类型为**MS SQL** 时，目的端口号需指定为**1443**。
- 协议类型为**Oracle**时，目的端口号需指定为**1521**。
- 协议类型为**Mysql**时，目的端口号需指定为**3306**。
- 协议类型为**RDP**时，目的端口号需指定为**3389**。
- 协议类型为**Postgre SQL**时，目的端口号需指定为**5432**。
- 协议类型为**Redis**时，目的端口号需指定为**6379**。

</details>

一次最多支持创建50个流分类规则，每个流分类规则可指定匹配一个协议类型。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'UDP',
                ),
                'DstPortRange' => 
                array (
                  'description' => '流量报文的目的端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配目的端口号在目的端口范围中的流量，如果不设置则代表使流分类规则匹配任意目的端口号的流量。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配目的端口为1的流量。如果为-1，则表示匹配任意目的端口。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配目的端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意目的端口。

一次最多支持创建50个流分类规则，每个流分类规则可指定一个目的端口范围。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '流量报文的目的端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配目的端口号在目的端口范围中的流量，如果不设置则代表使流分类规则匹配任意目的端口号的流量。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配目的端口为1的流量。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配目的端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意目的端口。

一次最多支持创建50个流分类规则，每个流分类规则可指定一个目的端口范围。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '77',
                  ),
                  'required' => false,
                  'maxItems' => 2,
                ),
                'SrcCidr' => 
                array (
                  'description' => '流量报文的源网段。

流分类规则匹配源IP地址在源网段中的流量，如果不设置则代表使流分类规则匹配任意源IP地址的流量。

一次最多支持创建50个流分类规则，每个流分类规则可指定匹配一个源网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.128.32.0/19',
                ),
                'SrcPortRange' => 
                array (
                  'description' => '流量报文的源端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配源端口号在源端口范围中的流量，如果不设置则代表使流分类规则匹配任意源端口。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配源端口为1的流量。如果为-1，则表示匹配任意源端口。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配源端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意源端口。

一次最多支持创建50个流分类规则，每个流分类规则可指定一个源端口范围。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '流量报文的源端口。取值范围：**-1**、**1**~**65535**。

流分类规则匹配源端口号在源端口范围中的流量，如果不设置则代表使流分类规则匹配任意源端口。

当前参数最多支持输入两个端口号。输入格式说明如下：

- 如果您只输入一个端口号，例如1，则系统默认匹配源端口为1的流量。
- 如果您输入了两个端口号，例如1和200，则系统默认匹配源端口处于1至200范围内的流量。
- 如果您输入了两个端口号且其中一个端口号为-1，则另一个端口也必须为-1，表示匹配任意源端口。

一次最多支持创建50个流分类规则，每个流分类规则可指定一个源端口范围。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '22',
                  ),
                  'required' => false,
                  'maxItems' => 2,
                ),
                'TrafficMatchRuleName' => 
                array (
                  'description' => '流分类规则的名称。

一次最多支持创建50个流分类规则，每个流分类规则可添加一个名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '广州测试',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
        6 => 
        array (
          'name' => 'DeleteTrafficMatchRules',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '删除的流分类规则列表。
>请您要尽可能添加完整的流分类规则信息比如源网段、目标网段、源端口、目标端口、DSCP值等，否则系统可能定位不到要删除的流分类规则，则不会删除目标流分类规则列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '删除的流分类规则列表。',
              'type' => 'object',
              'properties' => 
              array (
                'MatchDscp' => 
                array (
                  'description' => '流量报文的DSCP值。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => false,
                  'example' => '3',
                ),
                'DstCidr' => 
                array (
                  'description' => '流量报文的目标网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '192.168.200.3/32',
                ),
                'TrafficMatchRuleDescription' => 
                array (
                  'description' => '流分类规则的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '杭州区连青岛区CAT',
                ),
                'Protocol' => 
                array (
                  'description' => '流量报文的协议类型。

您可以调用[ListTrafficMarkingPolicies](~~468322~~)接口查询要删除的流分类规则的详细信息。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TCP',
                ),
                'DstPortRange' => 
                array (
                  'description' => '流量报文的目的端口。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '流量报文的目的端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '22',
                  ),
                  'required' => false,
                  'maxItems' => 2,
                ),
                'SrcCidr' => 
                array (
                  'description' => '流量报文的源网段。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '10.72.0.0/16',
                ),
                'SrcPortRange' => 
                array (
                  'description' => '流量报文的源端口。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '流量报文的源端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '23',
                  ),
                  'required' => false,
                  'maxItems' => 2,
                ),
                'TrafficMatchRuleName' => 
                array (
                  'description' => '流分类规则的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '60BB11B2-7BF4-54DC-BCC9-F706E1EB02AC',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTrafficMarkingPolicyId.NotFound',
            'errorMessage' => 'TrafficMarkingPolicyId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMarkingPolicy',
            'errorMessage' => 'The status of TrafficMarkingPolicy is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'Duplicated.AddTrafficMatchRules',
            'errorMessage' => 'The parameter AddTrafficMatchRules are duplicated.	',
          ),
          3 => 
          array (
            'errorCode' => 'Duplicated.DeleteTrafficMatchRulese',
            'errorMessage' => 'The parameter DeleteTrafficMatchRules are duplicated.	',
          ),
          4 => 
          array (
            'errorCode' => 'InstanceExist.AddTrafficMatchRules',
            'errorMessage' => 'The instance already exists.',
          ),
          5 => 
          array (
            'errorCode' => 'Duplicated.AddTrafficMatchRulesAndDeleteTrafficMatchRules',
            'errorMessage' => 'The same rule in AddTrafficMatchRules and DeleteTrafficMatchRules is not supported..',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.DstPortRange',
            'errorMessage' => 'The specified DstPortRange is illegal.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.SrcPortRange',
            'errorMessage' => 'The specified SrcPortRange is illegal.',
          ),
          8 => 
          array (
            'errorCode' => 'AttrMismatching.CidrAddressFamily',
            'errorMessage' => 'Attribute SrcCidr or DstCidr of TrafficMarkRule does not match AddressFamily.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.AddressFamily',
            'errorMessage' => 'AddressFamily is illegal.',
          ),
          10 => 
          array (
            'errorCode' => 'AttrMismatching.SrcCidrDstCidr',
            'errorMessage' => 'Attribute SrcCidr of TrafficMarkRule does not match DstCidr.',
          ),
          11 => 
          array (
            'errorCode' => 'AttrMismatching.CidrProtocol',
            'errorMessage' => 'Attribute SrcCidr or DstCidr of TrafficMarkRule does not match Protocol.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidTransitRouterMode.NeedUpgrade',
            'errorMessage' => 'TransitRouter need to upgrade.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          14 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidDeleteTrafficMatchRules.NotFound',
            'errorMessage' => 'The specified DeleteTrafficMatchRules are not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"60BB11B2-7BF4-54DC-BCC9-F706E1EB02AC\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateTrafficMarkingPolicyAttributeResponse>\\n    <RequestId>60BB11B2-7BF4-54DC-BCC9-F706E1EB02AC</RequestId>\\n</UpdateTrafficMarkingPolicyAttributeResponse>","errorExample":""}]',
      'title' => '修改流量标记策略的名称，描述信息以及流分类规则',
      'summary' => '调用UpdateTrafficMarkingPolicyAttribute接口修改流量标记策略的名称，描述信息以及流分类规则。',
    ),
    'ListTrafficMarkingPolicies' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'tr-bp1rmwxnk221e3fas****',
          ),
        ),
        1 => 
        array (
          'name' => 'TrafficMarkingPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tm-iz5egnyitxiroq****',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficMarkingPolicyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficMarkingPolicyDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**，默认值：**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。

- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '699989E4-64A0-5F78-8B93-CDB32D98971F',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TrafficMarkingPolicies' => 
              array (
                'description' => '流量标记策略列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '流量标记策略的信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TrafficMarkingPolicyStatus' => 
                    array (
                      'description' => '流量标记策略的状态。

- **Creating**：创建中。
- **Active**：可用。
- **Modifying**：修改中。
- **Deleting**：删除中。',
                      'type' => 'string',
                      'example' => 'Creating',
                    ),
                    'TrafficMarkingPolicyId' => 
                    array (
                      'description' => '流量标记策略ID。',
                      'type' => 'string',
                      'example' => 'tm-iz5egnyitxiroq****',
                    ),
                    'MarkingDscp' => 
                    array (
                      'description' => '流量标记策略的DSCP值。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '5',
                    ),
                    'TrafficMarkingPolicyName' => 
                    array (
                      'description' => '流量标记策略的名称。',
                      'type' => 'string',
                      'example' => 'nametest',
                    ),
                    'Priority' => 
                    array (
                      'description' => '流量标记策略的优先级。

数字越小，优先级越高。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '5',
                    ),
                    'TrafficMarkingPolicyDescription' => 
                    array (
                      'description' => '流量标记策略的描述信息。',
                      'type' => 'string',
                      'example' => 'desctest',
                    ),
                    'TrafficMatchRules' => 
                    array (
                      'description' => '流分类规则列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '流分类规则信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'MatchDscp' => 
                          array (
                            'description' => '流量报文的DSCP值。

>如果**MatchDscp**返回值为-1则表示匹配任意的DSCP值。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '6',
                          ),
                          'DstCidr' => 
                          array (
                            'description' => '流量报文的目标网段。',
                            'type' => 'string',
                            'example' => '192.168.120.0/24',
                          ),
                          'TrafficMatchRuleDescription' => 
                          array (
                            'description' => '流分类规则的描述信息。',
                            'type' => 'string',
                            'example' => 'desctest',
                          ),
                          'Protocol' => 
                          array (
                            'description' => '流量报文的协议类型。

> 流量标记策略支持匹配多种协议类型，各个协议类型详情请自行查阅文档。',
                            'type' => 'string',
                            'example' => 'HTTP',
                          ),
                          'TrafficMatchRuleId' => 
                          array (
                            'description' => '流分类规则ID。',
                            'type' => 'string',
                            'example' => 'tm-rule-fa9kgq1e90rmhc****',
                          ),
                          'SrcCidr' => 
                          array (
                            'description' => '流量报文的源网段。',
                            'type' => 'string',
                            'example' => '192.168.10.0/24',
                          ),
                          'TrafficMatchRuleName' => 
                          array (
                            'description' => '流分类规则的名称。',
                            'type' => 'string',
                            'example' => 'nametest',
                          ),
                          'TrafficMatchRuleStatus' => 
                          array (
                            'description' => '流分类规则的状态。

- **Creating**：创建中。
- **Active**：可用。
- **Deleting**：删除中。',
                            'type' => 'string',
                            'example' => 'Creating',
                          ),
                          'DstPortRange' => 
                          array (
                            'description' => '流分类规则待匹配的目的端口范围。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '流分类规则待匹配的目的端口范围。

接口会返回两个目的端口号：

- 如果两个目的端口号相同，例如80和80，则表示流分类规则匹配目的端口号为80的流量。

        如果两个目的端口号均为-1，则表示流分类规则匹配任意目的端口号的流量。
- 如果两个目的端口号不相同，例如1和200，则表示流分类规则匹配目的端口号在1至200范围内的流量。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '80,80',
                            ),
                          ),
                          'SrcPortRange' => 
                          array (
                            'description' => '流分类规则待匹配的源端口范围。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '流分类规则待匹配的源端口范围。

接口会返回两个源端口号：

- 如果两个源端口号相同，例如80和80，则表示流分类规则匹配源端口号为80的流量。

        如果两个源端口号均为-1，则表示流分类规则匹配任意源端口号的流量。
- 如果两个源端口号不相同，例如1和200，则表示流分类规则匹配源端口号在1至200范围内的流量。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1,200',
                            ),
                          ),
                        ),
                      ),
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => '转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-ccni***',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParam.TransitRouterIdOrTrafficMarkingPolicyId',
            'errorMessage' => 'Either TransitRouterId or TrafficMarkingPolicyId must be specified.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'Description is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"699989E4-64A0-5F78-8B93-CDB32D98971F\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 20,\\n  \\"TrafficMarkingPolicies\\": [\\n    {\\n      \\"TrafficMarkingPolicyStatus\\": \\"Creating\\",\\n      \\"TrafficMarkingPolicyId\\": \\"tm-iz5egnyitxiroq****\\",\\n      \\"MarkingDscp\\": 5,\\n      \\"TrafficMarkingPolicyName\\": \\"nametest\\",\\n      \\"Priority\\": 5,\\n      \\"TrafficMarkingPolicyDescription\\": \\"desctest\\",\\n      \\"TrafficMatchRules\\": [\\n        {\\n          \\"MatchDscp\\": 6,\\n          \\"DstCidr\\": \\"192.168.120.0/24\\",\\n          \\"TrafficMatchRuleDescription\\": \\"desctest\\",\\n          \\"Protocol\\": \\"HTTP\\",\\n          \\"TrafficMatchRuleId\\": \\"tm-rule-fa9kgq1e90rmhc****\\",\\n          \\"SrcCidr\\": \\"192.168.10.0/24\\",\\n          \\"TrafficMatchRuleName\\": \\"nametest\\",\\n          \\"TrafficMatchRuleStatus\\": \\"Creating\\",\\n          \\"DstPortRange\\": [\\n            0\\n          ],\\n          \\"SrcPortRange\\": [\\n            0\\n          ]\\n        }\\n      ],\\n      \\"TransitRouterId\\": \\"tr-ccni***\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTrafficMarkingPoliciesResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>699989E4-64A0-5F78-8B93-CDB32D98971F</RequestId>\\n    <TotalCount>6</TotalCount>\\n    <MaxResults>20</MaxResults>\\n    <TrafficMarkingPolicies>\\n        <TrafficMarkingPolicyStatus>Creating</TrafficMarkingPolicyStatus>\\n        <TrafficMarkingPolicyId>tm-iz5egnyitxiroq****</TrafficMarkingPolicyId>\\n        <MarkingDscp>5</MarkingDscp>\\n        <TrafficMarkingPolicyName>nametest</TrafficMarkingPolicyName>\\n        <Priority>5</Priority>\\n        <TrafficMarkingPolicyDescription>desctest</TrafficMarkingPolicyDescription>\\n        <TrafficMatchRules>\\n            <MatchDscp>6</MatchDscp>\\n            <DstCidr>192.168.120.0/24</DstCidr>\\n            <TrafficMatchRuleDescription>desctest</TrafficMatchRuleDescription>\\n            <Protocol>HTTP</Protocol>\\n            <TrafficMatchRuleId>tm-rule-fa9kgq1e90rmhc****</TrafficMatchRuleId>\\n            <SrcCidr>192.168.10.0/24</SrcCidr>\\n            <TrafficMatchRuleName>nametest</TrafficMatchRuleName>\\n            <TrafficMatchRuleStatus>Creating</TrafficMatchRuleStatus>\\n            <DstPortRange>80</DstPortRange>\\n            <DstPortRange>80</DstPortRange>\\n            <SrcPortRange>1</SrcPortRange>\\n            <SrcPortRange>200</SrcPortRange>\\n        </TrafficMatchRules>\\n    </TrafficMarkingPolicies>\\n</ListTrafficMarkingPoliciesResponse>","errorExample":""}]',
      'title' => '查询流量标记策略的信息',
      'summary' => '调用ListTrafficMarkingPolicies接口查询流量标记策略的状态、流量标记策略的优先级等详细信息。',
      'description' => '在调用**ListTrafficMarkingPolicies**接口过程中：
- **TransitRouterId** 和**TrafficMarkingPolicyId**参数需至少输入一个。
- 如果您未输入流量标记策略ID（即未指定**TrafficMarkingPolicyId**参数的值），则接口会根据**TransitRouterId**、**TrafficMarkingPolicyName**和**TrafficMarkingPolicyDescription**参数的值仅返回流量标记策略的信息，并不会返回流量标记策略下流分类规则的信息（即响应中不包含**TrafficMatchRules**字段）。
- 如果您输入了流量标记策略ID（即指定了**TrafficMarkingPolicyId**参数的值），则接口会为您返回该流量标记策略的信息以及该流量标记策略下流分类规则的信息（即响应中包含**TrafficMatchRules**字段）。
如果**TrafficMatchRules**字段为空数组，则表示当前流量标记策略下并不存在流分类规则。',
    ),
    'RemoveTraficMatchRuleFromTrafficMarkingPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => true,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会删除流量标记策略下的流分类规则。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接删除流量标记策略下的流分类规则。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficMarkingPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tm-d33hdczo3qo8ta****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficMarkRuleIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '流分类规则ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '流分类规则ID。

一次最多支持删除20个流分类规则。

您可以通过调用[ListTrafficMarkingPolicies](~~419013~~)接口查询流量标记策略下的流分类规则ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'tm-rule-15jtgapsat62r9****',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6DF9A765-BCD2-5C7E-8C32-C35C8A361A39',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMarkingPolicy',
            'errorMessage' => 'TrafficMarkingPolicy status is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTrafficMarkingPolicyId.NotFound',
            'errorMessage' => 'The specified TrafficMarkingPolicyId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.TrafficMarkingRuleIds',
            'errorMessage' => 'The specified TrafficMarkingRuleIds is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'substitutions' => 
        array (
          0 => 'Cbn::2017-09-12::RemoveTrafficMatchRuleFromTrafficMarkingPolicy',
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6DF9A765-BCD2-5C7E-8C32-C35C8A361A39\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveTraficMatchRuleFromTrafficMarkingPolicyResponse>\\n    <RequestId>6DF9A765-BCD2-5C7E-8C32-C35C8A361A39</RequestId>\\n</RemoveTraficMatchRuleFromTrafficMarkingPolicyResponse>","errorExample":""}]',
      'title' => '删除流量标记策略下的流分类规则',
      'summary' => '删除流量标记策略下的流分类规则。',
      'description' => '# 注意事项

当前**RemoveTraficMatchRuleFromTrafficMarkingPolicy**接口已废弃并即将下线。如果您需要删除流量标记策略下的流分类规则，请使用[RemoveTrafficMatchRuleFromTrafficMarkingPolicy](~~452726~~)接口。本接口文档已停止维护。',
    ),
    'RemoveTrafficMatchRuleFromTrafficMarkingPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会删除流量标记策略下的流分类规则。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接删除流量标记策略下的流分类规则。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficMarkingPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量标记策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tm-d33hdczo3qo8ta****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficMarkRuleIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '流分类规则ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '流分类规则ID。

一次最多支持删除20个流分类规则。

您可以通过调用[ListTrafficMarkingPolicies](~~419013~~)接口查询流量标记策略下的流分类规则ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'tm-rule-15jtgapsat62r9****',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6DF9A765-BCD2-5C7E-8C32-C35C8A361A39',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficMarkingPolicy',
            'errorMessage' => 'TrafficMarkingPolicy status is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TrafficMarkingRuleIds',
            'errorMessage' => 'The specified TrafficMarkingRuleIds is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidTrafficMarkingPolicyId.NotFound',
            'errorMessage' => 'The specified TrafficMarkingPolicyId is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6DF9A765-BCD2-5C7E-8C32-C35C8A361A39\\"\\n}","errorExample":""},{"type":"xml","example":"<RemoveTrafficMatchRuleFromTrafficMarkingPolicyResponse>\\n    <RequestId>6DF9A765-BCD2-5C7E-8C32-C35C8A361A39</RequestId>\\n</RemoveTrafficMatchRuleFromTrafficMarkingPolicyResponse>","errorExample":""}]',
      'title' => '删除流量标记策略下的流分类规则',
      'summary' => '调用RemoveTrafficMatchRuleFromTrafficMarkingPolicy接口删除流量标记策略下的流分类规则。',
      'description' => '- 调用**RemoveTrafficMatchRuleFromTrafficMarkingPolicy**接口时：

    - 如果您输入了流分类规则ID（即指定了**TrafficMarkRuleIds**参数的值），则当前接口被调用后会帮您删除该流分类规则。
    - 如果您未输入流分类规则ID（即未指定**TrafficMarkRuleIds**参数的值），则当前接口被调用后不执行任何操作。

    如果您需要删除指定的流分类规则，在调用接口前请确保您已输入指定流分类规则的ID。
- **RemoveTrafficMatchRuleFromTrafficMarkingPolicy**接口属于异步接口，即系统会先返回一个**RequestId**，但该流分类规则并未删除完成，系统后台的删除任务仍在进行。您可以调用**ListTrafficMarkingPolicies**接口查询流分类规则的状态。 
    - 当流分类规则处于**Deleting**状态时，表示流分类规则正在删除中，在该状态下，您只能对流分类规则执行查询操作，不能执行其他操作。
    - 当查询不到指定的流分类规则时，表示流分类规则删除完成。',
    ),
    'CreateCenInterRegionTrafficQosQueue' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

>若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会创建队列。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接创建队列。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'QosQueueName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '队列的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        3 => 
        array (
          'name' => 'QosQueueDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '队列的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        4 => 
        array (
          'name' => 'RemainBandwidthPercent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '队列可以使用的最大跨地域带宽。

- 带宽值以百分比计算。例如您输入20，则表示队列最多可以使用20%的跨地域带宽。

- 一个跨地域连接实例下所有队列的带宽占比之和不能超过100%。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'TrafficQosPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-qdvybn468kaoxx****',
          ),
        ),
        6 => 
        array (
          'name' => 'Dscps',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '队列待匹配的DSCP值。

一次最多支持输入20个DSCP值，DSCP值之间使用半角逗号（,）分隔。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '队列待匹配的DSCP值。

一次最多支持输入20个DSCP值，DSCP值之间使用半角逗号（,）分隔。',
              'type' => 'integer',
              'format' => 'int32',
              'required' => false,
              'example' => '5',
            ),
            'required' => true,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'QosQueueId' => 
              array (
                'description' => '队列ID。',
                'type' => 'string',
                'example' => 'qos-queue-irqhi8k5fdyuu5****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '845F66F6-5C27-53A1-9428-B859086237B2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.RemainBandwidthPercent',
            'errorMessage' => 'The specified RemainBandwidthPercent is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficQosPolicy',
            'errorMessage' => 'The status of TrafficQosPolicy is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'Duplicated.Dscps',
            'errorMessage' => 'The parameter Dscps are duplicated.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'Description is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTrafficQosPolicyId.NotFound',
            'errorMessage' => 'The specified TrafficQosPolicyId is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"QosQueueId\\": \\"qos-queue-irqhi8k5fdyuu5****\\",\\n  \\"RequestId\\": \\"845F66F6-5C27-53A1-9428-B859086237B2\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateCenInterRegionTrafficQosQueueResponse>\\n    <QosQueueId>qos-queue-irqhi8k5fdyuu5****</QosQueueId>\\n    <RequestId>845F66F6-5C27-53A1-9428-B859086237B2</RequestId>\\n</CreateCenInterRegionTrafficQosQueueResponse>","errorExample":""}]',
      'title' => '创建流量调度策略下队列的配置',
      'summary' => '如果您需要对不同类型和优先级的网络流量进行细致管理，以确保关键业务流量的性能并遵守服务级别协议，您可以调用CreateCenInterRegionTrafficQosQueue接口创建流量调度策略下队列的配置。',
      'description' => '**CreateCenInterRegionTrafficQosQueue**接口属于异步接口，即系统会先返回一个队列ID，但该队列并未创建完成，系统后台的创建任务仍在进行。您可以通过调用**ListCenInterRegionTrafficQosPolicies**接口查询流量调度策略的状态来确定队列的创建状态（查询时，需要传入**TrafficQosPolicyId**参数）：
    
- 当流量调度策略处于**Modifying**状态时，表示队列正在创建中，在该状态下，您只能对流量调度策略和队列执行查询操作，不能执行其他操作。
- 当流量调度策略处于**Active**状态时，表示队列创建完成。',
    ),
    'CreateCenInterRegionTrafficQosPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会创建流量调度策略。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接创建流量调度策略。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-8vbuqeo5h5pu3m01d****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-attach-r6g0m3epjehw57****',
          ),
        ),
        4 => 
        array (
          'name' => 'TrafficQosPolicyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        5 => 
        array (
          'name' => 'TrafficQosPolicyDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        6 => 
        array (
          'name' => 'TrafficQosQueues',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '流量调度策略包含的队列信息。

最多支持创建3个队列，更多队列需要用CreateCenInterRegionTrafficQosQueue 创建。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '队列信息。',
              'type' => 'object',
              'properties' => 
              array (
                'QosQueueName' => 
                array (
                  'description' => '当前队列的名称。

一个流量调度策略最多支持创建3个队列，每个队列可以被指定一个队列名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'nametest',
                ),
                'RemainBandwidthPercent' => 
                array (
                  'description' => '当前队列可使用的跨地域带宽的百分比。

一个流量调度策略最多支持创建3个队列，每个队列可以被指定允许使用的跨地域带宽百分比。

例如，您输入**1**，则表示符合当前队列的流量报文最多只能使用1%的跨地域带宽。

> 一个流量调度策略下，所有队列的跨地域带宽百分比之和不能超过100%。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '1',
                ),
                'Dscps' => 
                array (
                  'description' => '当前队列匹配的DSCP值。

一个流量调度策略最多支持创建3个队列，每个队列最多支持匹配60个DSCP值，DSCP值之间使用半角逗号（,）分隔。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '当前队列匹配的DSCP值。

一个流量调度策略最多支持创建3个队列，每个队列最多支持匹配60个DSCP值，DSCP值之间使用半角逗号（,）分隔。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '5',
                  ),
                  'required' => false,
                  'maxItems' => 60,
                ),
                'QosQueueDescription' => 
                array (
                  'description' => '当前队列的描述信息。

一个流量调度策略最多支持创建3个队列，每个队列可以被添加一个队列描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'desctest',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 4,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TrafficQosPolicyId' => 
              array (
                'description' => '流量调度策略ID。',
                'type' => 'string',
                'example' => 'qos-eczzew0v1kzrb5****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6DF9A765-BCD2-5C7E-8C32-C35C8A361A39',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'AssociationExist.TrafficQos',
            'errorMessage' => 'The traffic qos with the specified attachment already exists.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTransitRouterId.NotFound',
            'errorMessage' => 'The specified  TransitRouterId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterAttachmentId',
            'errorMessage' => 'TransitRouterAttachmentId is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"TrafficQosPolicyId\\": \\"qos-eczzew0v1kzrb5****\\",\\n  \\"RequestId\\": \\"6DF9A765-BCD2-5C7E-8C32-C35C8A361A39\\"\\n}","type":"json"}]',
      'title' => '创建跨地域流量调度策略',
      'summary' => '如果您需要优化和控制跨区域的网络流量，您可以调用CreateCenInterRegionTrafficQosPolicy接口创建企业版转发路由器下的跨地域流量调度策略。',
      'description' => '- 仅企业版转发路由器下的跨地域连接支持创建跨地域流量调度策略。

- 流量调度功能仅作用在企业版转发路由器的出方向。

     例如，您创建了华东1（杭州）与华北1（青岛）地域的跨地域连接，您在华东1（杭州）地域的转发路由器下配置流量调度功能后，在流量从华东1（杭州）地域去往华北1（青岛）地域的过程中，流量调度功能可以帮您保证各类业务的使用带宽。在流量从华北1（青岛）地域去往华东1（杭州）地域的过程中，流量调度功能不帮您保证业务带宽。

- **CreateCenInterRegionTrafficQosPolicy**接口属于异步接口，即系统会先返回一个流量调度策略ID，但该流量调度策略并未创建完成，系统后台的创建任务仍在进行。您可以调用**ListCenInterRegionTrafficQosPolicies**接口查询流量调度策略的状态。 
    - 当流量调度策略处于**Creating**状态时，表示流量调度策略正在创建中，在该状态下，您只能对流量调度策略执行查询操作，不能执行其他操作。
    - 当流量调度策略处于**Active**状态时，表示流量调度策略创建完成。

## 前提条件

在调用**CreateCenInterRegionTrafficQosPolicy**接口前，确保已满足以下条件：

- 已创建跨地域连接。具体操作，请参见[CreateTransitRouterPeerAttachment](~~261363~~)。
- 已创建流量标记策略。具体操作，请参见[CreateTrafficMarkingPolicy](~~419025~~)。',
    ),
    'DeleteCenInterRegionTrafficQosQueue' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会删除流量调度策略下的队列。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接删除流量调度策略下的队列。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'QosQueueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '队列ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-queue-nv2vfzqkewhk4t****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6DF9A765-BCD2-5C7E-8C32-C35C8A361A39',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTrafficQosQueueId.NotFound',
            'errorMessage' => 'The specified TrafficQosQueueId is not found.	',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficQosPolicy',
            'errorMessage' => 'The status of TrafficQosPolicy is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6DF9A765-BCD2-5C7E-8C32-C35C8A361A39\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteCenInterRegionTrafficQosQueueResponse>\\n    <RequestId>6DF9A765-BCD2-5C7E-8C32-C35C8A361A39</RequestId>\\n</DeleteCenInterRegionTrafficQosQueueResponse>","errorExample":""}]',
      'title' => '删除流量调度策略下的队列',
      'summary' => '调用DeleteCenInterRegionTrafficQosQueue接口删除流量调度策略下的队列。',
      'description' => '- 默认队列不支持删除。
- **DeleteCenInterRegionTrafficQosQueue**接口属于异步接口，即系统会先返回一个**RequestId**，但该队列并未删除完成，系统后台的删除任务仍在进行。您可以调用**ListCenInterRegionTrafficQosPolicies**接口查询队列的信息，当查询不到指定队列时，表示队列删除完成。',
    ),
    'DeleteCenInterRegionTrafficQosPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会删除流量调度策略。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码DryRunOperation。
- **false**（默认值）：发送正常请求，通过检查后直接删除流量调度策略。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficQosPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-eczzew0v1kzrb5****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6DF9A765-BCD2-5C7E-8C32-C35C8A361A39',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'AssociationExist.TransitQosQueueExist',
            'errorMessage' => 'The qos queue with the specified TrafficQosPolicyId exists.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTransitQosId.NotFound',
            'errorMessage' => 'The specified TrafficQosPolicyId is not found.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6DF9A765-BCD2-5C7E-8C32-C35C8A361A39\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteCenInterRegionTrafficQosPolicyResponse>\\n    <RequestId>6DF9A765-BCD2-5C7E-8C32-C35C8A361A39</RequestId>\\n</DeleteCenInterRegionTrafficQosPolicyResponse>","errorExample":""}]',
      'title' => '删除流量调度策略',
      'summary' => '调用DeleteCenInterRegionTrafficQosPolicy接口删除流量调度策略。',
      'description' => '- 删除流量调度策略前，需要删除流量调度策略下除默认队列以外的所有队列。具体操作，请参见[DeleteCenInterRegionTrafficQosQueue](~~419062~~)。
- **DeleteCenInterRegionTrafficQosPolicy**接口属于异步接口，即系统会先返回一个**RequestId**，但该流量调度策略并未删除完成，系统后台的删除任务仍在进行。您可以调用**ListCenInterRegionTrafficQosPolicies**接口查询流量调度策略的状态。 

    - 当流量调度策略处于**Deleting**状态时，表示流量调度策略正在删除中，在该状态下，您只能对流量调度策略执行查询操作，不能执行其他操作。
    - 当查询不到指定流量调度策略时，表示流量调度策略删除完成。',
    ),
    'UpdateCenInterRegionTrafficQosQueueAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：
- **true**：发送检查请求，不会修改队列的配置。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接修改队列的配置。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'QosQueueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '队列ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-queue-nv2vfzqkewhk4t****',
          ),
        ),
        3 => 
        array (
          'name' => 'QosQueueName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '队列的新名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        4 => 
        array (
          'name' => 'QosQueueDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '队列新的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        5 => 
        array (
          'name' => 'RemainBandwidthPercent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前队列可使用的跨地域带宽的百分比。

输入数字即可，无需输入百分号（%）。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'Dscps',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '当前队列待匹配的流量报文的DSCP值。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '当前队列待匹配的流量报文的DSCP值。取值范围：**0**~**63**。

一次最多支持输入20个DSCP值。',
              'type' => 'integer',
              'format' => 'int32',
              'required' => false,
              'example' => '5',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6DF9A765-BCD2-5C7E-8C32-C35C8A361A39',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.TrafficQosPolicy',
            'errorMessage' => 'The status of TrafficQosPolicy is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTrafficQosQueueId.NotFound',
            'errorMessage' => 'The instance of TrafficQosQueueId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6DF9A765-BCD2-5C7E-8C32-C35C8A361A39\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateCenInterRegionTrafficQosQueueAttributeResponse>\\n    <RequestId>6DF9A765-BCD2-5C7E-8C32-C35C8A361A39</RequestId>\\n</UpdateCenInterRegionTrafficQosQueueAttributeResponse>","errorExample":""}]',
      'title' => '修改流量调度策略下队列的配置',
      'summary' => '调用UpdateCenInterRegionTrafficQosQueueAttribute接口修改流量调度策略下队列的名称、描述、跨地域带宽、DSCP值的配置。',
    ),
    'UpdateCenInterRegionTrafficQosPolicyAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655****',
          ),
        ),
        1 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会修改流量调度策略的名称和描述信息。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。

- **false**（默认值）：发送正常请求，通过检查后直接修改流量调度策略的名称和描述信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficQosPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-eczzew0v1kzrb5****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficQosPolicyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略的新名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        4 => 
        array (
          'name' => 'TrafficQosPolicyDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略新的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5B8465FF-E697-5D3D-AAD5-0B4EEADFDB27',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTrafficQosPolicyId.NotFound',
            'errorMessage' => 'The specified TrafficQosPolicyId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5B8465FF-E697-5D3D-AAD5-0B4EEADFDB27\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateCenInterRegionTrafficQosPolicyAttributeResponse>\\n    <RequestId>5B8465FF-E697-5D3D-AAD5-0B4EEADFDB27</RequestId>\\n</UpdateCenInterRegionTrafficQosPolicyAttributeResponse>","errorExample":""}]',
      'title' => '修改流量调度策略的名称和描述信息',
      'summary' => '调用UpdateCenInterRegionTrafficQosPolicyAttribute接口修改流量调度策略的名称和描述信息。',
    ),
    'ListCenInterRegionTrafficQosPolicies' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'tr-bp1rmwxnk221e3fas****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'tr-attach-r6g0m3epjehw57****',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficQosPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-rnghap5gc8155x****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficQosPolicyName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        4 => 
        array (
          'name' => 'TrafficQosPolicyDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        5 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：**1**~**100**。默认值：**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        6 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。

- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '113BFD47-63DF-5D9D-972C-033FB9C360CD',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'TrafficQosPolicies' => 
              array (
                'description' => '流量调度策略列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '流量策略的信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TrafficQosPolicyName' => 
                    array (
                      'description' => '流量调度策略的名称。',
                      'type' => 'string',
                      'example' => 'nametest',
                    ),
                    'TrafficQosPolicyStatus' => 
                    array (
                      'description' => '流量调度策略的状态。

- **Creating**：创建中。
- **Active**：可用。
- **Modifying**：修改中。
- **Deleting**：删除中。',
                      'type' => 'string',
                      'example' => 'Creating',
                    ),
                    'TrafficQosPolicyId' => 
                    array (
                      'description' => '流量调度策略ID。',
                      'type' => 'string',
                      'example' => 'qos-rnghap5gc8155x****',
                    ),
                    'TrafficQosPolicyDescription' => 
                    array (
                      'description' => '流量调度策略的描述信息。',
                      'type' => 'string',
                      'example' => 'desctest',
                    ),
                    'TrafficQosQueues' => 
                    array (
                      'description' => '队列信息列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '队列的信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'QosQueueName' => 
                          array (
                            'description' => '队列的名称。',
                            'type' => 'string',
                            'example' => 'namtest',
                          ),
                          'RemainBandwidthPercent' => 
                          array (
                            'description' => '当前队列占用的跨地域带宽的百分比。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '1',
                          ),
                          'QosQueueId' => 
                          array (
                            'description' => '队列ID。',
                            'type' => 'string',
                            'example' => 'qos-queue-njcrmr9fiu1jii****',
                          ),
                          'QosQueueDescription' => 
                          array (
                            'description' => '队列的描述信息。',
                            'type' => 'string',
                            'example' => 'desctest',
                          ),
                          'Dscps' => 
                          array (
                            'description' => '当前队列待匹配的流量报文的DSCP值。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '当前队列待匹配的流量报文的DSCP值。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5',
                            ),
                          ),
                        ),
                      ),
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => '转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-2ze4ta4v32umj0rb***',
                    ),
                    'TransitRouterAttachmentId' => 
                    array (
                      'description' => '网络实例连接ID。',
                      'type' => 'string',
                      'example' => 'tr-attach-q7ct7c06jpw***',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParam.TransitRouterIdOrTrafficQosPolicyId',
            'errorMessage' => 'Either TransitRouterId or TrafficQosPolicyId must be specified.	',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'Description is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"113BFD47-63DF-5D9D-972C-033FB9C360CD\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 20,\\n  \\"TrafficQosPolicies\\": [\\n    {\\n      \\"TrafficQosPolicyName\\": \\"nametest\\",\\n      \\"TrafficQosPolicyStatus\\": \\"Creating\\",\\n      \\"TrafficQosPolicyId\\": \\"qos-rnghap5gc8155x****\\",\\n      \\"TrafficQosPolicyDescription\\": \\"desctest\\",\\n      \\"TrafficQosQueues\\": [\\n        {\\n          \\"QosQueueName\\": \\"namtest\\",\\n          \\"RemainBandwidthPercent\\": 1,\\n          \\"QosQueueId\\": \\"qos-queue-njcrmr9fiu1jii****\\",\\n          \\"QosQueueDescription\\": \\"desctest\\",\\n          \\"Dscps\\": [\\n            5\\n          ]\\n        }\\n      ],\\n      \\"TransitRouterId\\": \\"tr-2ze4ta4v32umj0rb***\\",\\n      \\"TransitRouterAttachmentId\\": \\"tr-attach-q7ct7c06jpw***\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListCenInterRegionTrafficQosPoliciesResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>113BFD47-63DF-5D9D-972C-033FB9C360CD</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <MaxResults>20</MaxResults>\\n    <TrafficQosPolicies>\\n        <TrafficQosPolicyName>nametest</TrafficQosPolicyName>\\n        <TrafficQosPolicyStatus>Creating</TrafficQosPolicyStatus>\\n        <TrafficQosPolicyId>qos-rnghap5gc8155x****</TrafficQosPolicyId>\\n        <TrafficQosPolicyDescription>desctest</TrafficQosPolicyDescription>\\n        <TrafficQosQueues>\\n            <QosQueueName>namtest</QosQueueName>\\n            <RemainBandwidthPercent>1</RemainBandwidthPercent>\\n            <QosQueueId>qos-queue-njcrmr9fiu1jii****</QosQueueId>\\n            <QosQueueDescription>desctest</QosQueueDescription>\\n            <Dscps>5</Dscps>\\n        </TrafficQosQueues>\\n    </TrafficQosPolicies>\\n</ListCenInterRegionTrafficQosPoliciesResponse>","errorExample":""}]',
      'title' => '查询流量调度策略的信息',
      'summary' => '调用ListCenInterRegionTrafficQosPolicies接口查询流量调度策略的信息。',
      'description' => '在调用**ListCenInterRegionTrafficQosPolicies**接口过程中：

- **TransitRouterId**或**TrafficQosPolicyId**参数至少输入一个。

- 如果您未输入流量调度策略ID（即未指定**TrafficQosPolicyId**参数的值），则接口会根据**TransitRouterId**、**TransitRouterAttachmentId**、**TrafficQosPolicyName**和**TrafficQosPolicyDescription**参数的值仅返回流量调度策略的信息，并不会查询流量调度策略下队列的信息（即响应中不包含**TrafficQosQueues**字段）。
- 如果您输入了流量调度策略ID（即指定了**TrafficQosPolicyId**参数的值），则接口会为您返回该流量调度策略的信息以及该流量调度策略下队列的信息（即响应中包含**TrafficQosQueues**字段）。如果**TrafficQosQueues**字段为空数组，则表示当前流量调度策略下仅存在默认队列
- 调用接口时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回RequestId，但不会显示流量调度策略的信息。',
    ),
    'ListCenInterRegionTrafficQosQueues' => 
    array (
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-bp1rmwxnk221e3fas****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-a6p8voaodog5c0****',
          ),
        ),
        2 => 
        array (
          'name' => 'TrafficQosPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-rnghap5gc8155x****',
          ),
        ),
        3 => 
        array (
          'name' => 'TrafficQosQueueId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略队列ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-queue-siakjb2nn9gz5z****',
          ),
        ),
        4 => 
        array (
          'name' => 'TrafficQosQueueName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略队列名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qosQueueName',
          ),
        ),
        5 => 
        array (
          'name' => 'TrafficQosQueueDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流量调度策略队列描述。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'qosQueueDescription',
          ),
        ),
        6 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。取值范围：1~100。默认值：20。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        7 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。

- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
            'type' => 'string',
            'required' => false,
            'example' => '2ca1ed1573cb****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => '0151fa6aa1ed****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1D1E15D2-416D-54F3-BDD9-BC27DE4C6352',
              ),
              'TrafficQosQueues' => 
              array (
                'description' => '流量调度策略包含的队列信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '流量调度策略包含的队列信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TransitRouterAttachmentId' => 
                    array (
                      'description' => '跨地域连接ID。',
                      'type' => 'string',
                      'example' => 'tr-attach-nzrcv25d7ezt23****',
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => '转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-p0wwagjv6fvxt4b7y****',
                    ),
                    'TrafficQosQueueName' => 
                    array (
                      'description' => '流量调度策略队列名称。',
                      'type' => 'string',
                      'example' => 'qosQueueName',
                    ),
                    'RemainBandwidthPercent' => 
                    array (
                      'description' => '当前队列可使用的跨地域带宽的百分比。

例如，**1**表示符合当前队列的流量报文最多只能使用1%的跨地域带宽。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'TrafficQosPolicyId' => 
                    array (
                      'description' => '流量调度策略ID。',
                      'type' => 'string',
                      'example' => 'qos-fv2qq9yqrsjowp****',
                    ),
                    'TrafficQosQueueId' => 
                    array (
                      'description' => '流量调度策略队列ID。',
                      'type' => 'string',
                      'example' => 'qos-queue-siakjb2nn9gz5z****
',
                    ),
                    'TrafficQosQueueDescription' => 
                    array (
                      'description' => '流量调度策略队列描述。',
                      'type' => 'string',
                      'example' => 'qosQueueDescription
',
                    ),
                    'Dscps' => 
                    array (
                      'description' => '当前队列匹配的DSCP值。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '当前队列匹配的DSCP值。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                    ),
                    'Status' => 
                    array (
                      'description' => '队列的状态。

- **Creating**：创建中。
- **Active**：运行中。
- **Deleting**：删除中。',
                      'type' => 'string',
                      'example' => 'Active',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParam.TransitRouterIdOrTrafficQosPolicyIdOrTrafficQosQueueId',
            'errorMessage' => 'Either TransitRouterId or TrafficQosPolicyId or TrafficQosQueueId must be specified.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter.MaxResults',
            'errorMessage' => 'The specified MaxResults is invalid.	',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'Description is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"NextToken\\": \\"0151fa6aa1ed****\\",\\n  \\"RequestId\\": \\"1D1E15D2-416D-54F3-BDD9-BC27DE4C6352\\",\\n  \\"TrafficQosQueues\\": [\\n    {\\n      \\"TransitRouterAttachmentId\\": \\"tr-attach-nzrcv25d7ezt23****\\",\\n      \\"TransitRouterId\\": \\"tr-p0wwagjv6fvxt4b7y****\\",\\n      \\"TrafficQosQueueName\\": \\"qosQueueName\\",\\n      \\"RemainBandwidthPercent\\": 1,\\n      \\"TrafficQosPolicyId\\": \\"qos-fv2qq9yqrsjowp****\\",\\n      \\"TrafficQosQueueId\\": \\"qos-queue-siakjb2nn9gz5z****\\\\n\\",\\n      \\"TrafficQosQueueDescription\\": \\"qosQueueDescription\\\\n\\",\\n      \\"Dscps\\": [\\n        1\\n      ],\\n      \\"Status\\": \\"Active\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询流量调度策略队列的信息',
      'summary' => '调用ListCenInterRegionTrafficQosQueues接口查询流量调度策略队列的信息。',
      'description' => '调用接口时请确保**TransitRouterId**或**TrafficQosPolicyId**或**TrafficQosQueueId**参数至少输入一个。

调用接口时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回**RequestId**，但不会显示流量调度策略的信息。',
    ),
    'DeleteRouteServiceInCen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        1 => 
        array (
          'name' => 'Host',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务IP地址或地址段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '100.118.28.0/24',
          ),
        ),
        2 => 
        array (
          'name' => 'HostRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务所在的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口查询地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'AccessRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问云服务的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'HostVpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务关联的VPC实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp1t36rn9l53iwbsf****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2315DEB7-5E92-423A-91F7-4C1EC9AD97C3',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.CloudRouteNumberInvalid',
            'errorMessage' => 'Cloud route number is invalid',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.CloudRouteStatusNotAllow',
            'errorMessage' => 'Operation is prohibited because status of cloud route is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2315DEB7-5E92-423A-91F7-4C1EC9AD97C3\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteRouteServiceInCenResponse>\\n    <RequestId>2315DEB7-5E92-423A-91F7-4C1EC9AD97C3</RequestId>\\n</DeleteRouteServiceInCenResponse>","errorExample":""}]',
      'title' => '删除云服务',
      'summary' => '调用DeleteRouteServiceInCen接口删除基础版转发路由器云服务配置。',
      'description' => '**DeleteRouteServiceInCen**接口属于异步接口，即系统会先返回一个**RequestId**，但云服务配置并未删除完成，系统后台的删除任务仍在进行，如果您输入的参数值有误，调用接口后仍会正常返回RequestId，但云服务配置尚未被删除。您可以调用**DescribeRouteServicesInCen**接口查询云服务的状态。 

-    当云服务处于**Deleting**状态时，表示云服务配置正在删除中，在该状态下，您只能对云服务配置执行查询操作，不能执行其他操作。
-    当查询不到指定的云服务配置时，表示云服务配置删除完成。',
    ),
    'DescribeRouteServicesInCen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值为**10**，取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-pfa6ugf3xl0qsd****',
          ),
        ),
        3 => 
        array (
          'name' => 'Host',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务的服务地址。

支持输入域名、IP地址或IP地址段。',
            'type' => 'string',
            'required' => false,
            'example' => '100.118.28.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'HostRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务所在的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'AccessRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问云服务的地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        6 => 
        array (
          'name' => 'HostVpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务关联的VPC实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp1h8vbrbcgohcju5****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '196C99CA-6997-5951-9721-AE89720DF856',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'RouteServiceEntries' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RouteServiceEntry' => 
                  array (
                    'description' => '云服务信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '云服务配置。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '云服务的状态。

- **Creating**：创建中。
- **Active**：可用。
- **Deleting**：删除中。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'Host' => 
                        array (
                          'description' => '云服务的服务地址。',
                          'type' => 'string',
                          'example' => '100.118.28.0/24',
                        ),
                        'Description' => 
                        array (
                          'description' => '云服务的描述信息。',
                          'type' => 'string',
                          'example' => 'descname',
                        ),
                        'HostVpcId' => 
                        array (
                          'description' => '云服务关联的VPC实例ID。',
                          'type' => 'string',
                          'example' => 'vpc-bp1h8vbrbcgohcju5****',
                        ),
                        'CenId' => 
                        array (
                          'description' => '云企业网实例ID。',
                          'type' => 'string',
                          'example' => 'cen-pfa6ugf3xl0qsd****',
                        ),
                        'AccessRegionId' => 
                        array (
                          'description' => '访问云服务的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'HostRegionId' => 
                        array (
                          'description' => '云服务所在的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'Cidrs' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Cidr' => 
                            array (
                              'description' => '云服务的服务地址列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '云服务的服务地址。

- 如果请求参数**Host**是IP地址或IP地址段，则**Cidrs**为IP地址或IP地址段。
- 如果请求参数**Host**是域名，则**Cidrs**为域名解析后的IP地址。',
                                'type' => 'string',
                                'example' => '100.118.28.0/24',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"196C99CA-6997-5951-9721-AE89720DF856\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 2,\\n  \\"RouteServiceEntries\\": {\\n    \\"RouteServiceEntry\\": [\\n      {\\n        \\"Status\\": \\"Active\\",\\n        \\"Host\\": \\"100.118.28.0/24\\",\\n        \\"Description\\": \\"descname\\",\\n        \\"HostVpcId\\": \\"vpc-bp1h8vbrbcgohcju5****\\",\\n        \\"CenId\\": \\"cen-pfa6ugf3xl0qsd****\\",\\n        \\"AccessRegionId\\": \\"cn-hangzhou\\",\\n        \\"HostRegionId\\": \\"cn-hangzhou\\",\\n        \\"Cidrs\\": {\\n          \\"Cidr\\": [\\n            \\"100.118.28.0/24\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeRouteServicesInCenResponse>\\n<TotalCount>2</TotalCount>\\n<RequestId>196C99CA-6997-5951-9721-AE89720DF856</RequestId>\\n<PageSize>10</PageSize>\\n<PageNumber>1</PageNumber>\\n<RouteServiceEntries>\\n    <RouteServiceEntry>\\n        <Status>Active</Status>\\n        <HostRegionId>cn-hangzhou</HostRegionId>\\n        <CenId>cen-pfa6ugf3xl0qsd****</CenId>\\n        <Host>100.118.28.0/24</Host>\\n        <AccessRegionId>ccn-cn-shanghai</AccessRegionId>\\n        <HostVpcId>vpc-bp1h8vbrbcgohcju5****</HostVpcId>\\n        <Cidrs>\\n            <Cidr>100.118.28.0/24</Cidr>\\n        </Cidrs>\\n    </RouteServiceEntry>\\n    <RouteServiceEntry>\\n        <Status>Active</Status>\\n        <HostRegionId>cn-hangzhou</HostRegionId>\\n        <CenId>cen-pfa6ugf3xl0qsd****</CenId>\\n        <Host>100.118.28.0/24</Host>\\n        <AccessRegionId>cn-hangzhou</AccessRegionId>\\n        <HostVpcId>vpc-bp1h8vbrbcgohcju5****</HostVpcId>\\n        <Cidrs>\\n            <Cidr>100.118.28.0/24</Cidr>\\n        </Cidrs>\\n    </RouteServiceEntry>\\n</RouteServiceEntries>\\n</DescribeRouteServicesInCenResponse>","errorExample":""}]',
      'title' => '查询云服务配置',
      'summary' => '调用DescribeRouteServicesInCen接口查询基础版转发路由器下的云服务配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ResolveAndRouteServiceInCen' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4****',
          ),
        ),
        1 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-ckwa2hhmuislse****',
          ),
        ),
        2 => 
        array (
          'name' => 'Host',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务IP地址或地址段。

> 通常云服务会使用多个地址或地址段，建议您重复调用本接口，添加该云服务所有地址或地址段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '100.118.28.0/24',
          ),
        ),
        3 => 
        array (
          'name' => 'HostRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务所在的地域ID。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'HostVpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务关联的VPC实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-o6woh5s494zueq40v****',
          ),
        ),
        5 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云服务的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'descname',
          ),
        ),
        6 => 
        array (
          'name' => 'AccessRegionIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '访问云服务的地域ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '访问云服务的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'cn-hangzhou',
            ),
            'required' => true,
            'example' => 'cn-hangzhou',
            'maxItems' => 32,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0245BEF-52AC-44A8-A776-EF96FD26A5CA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ParameterIllegal.Ipv6CloudRouteCidrNotAllow',
            'errorMessage' => 'Parameter Host not in valid ipv6 cidr.',
          ),
          1 => 
          array (
            'errorCode' => 'ParameterIllegal.AccessRegionId',
            'errorMessage' => 'Parameter Access RegionId illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'ParameterIllegal.CloudRouteHost',
            'errorMessage' => 'Parameter Host is not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'ParameterIllegal.ClouteRouteNotSupportIpv6',
            'errorMessage' => 'Parameter Host not support IPv6',
          ),
          4 => 
          array (
            'errorCode' => 'ParameterIllegal.ClouteRouteCidrNotAllow',
            'errorMessage' => 'Parameter Host not in 100.64.0.0/10',
          ),
          5 => 
          array (
            'errorCode' => 'CloudRoute.Exist',
            'errorMessage' => 'The Specified Cloud Route already Exists',
          ),
          6 => 
          array (
            'errorCode' => 'ParameterIllegal.Host',
            'errorMessage' => ' Parameter Host does not support domain.',
          ),
          7 => 
          array (
            'errorCode' => 'CloudRoute.Conflict',
            'errorMessage' => 'The Specified Cloud Route Conflicts.',
          ),
          8 => 
          array (
            'errorCode' => 'CloudRoute.VpcNotAttached',
            'errorMessage' => 'The Specified Vpc instance is not attached to CEN. ',
          ),
          9 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The specified TransitRouterType does not support the operation.',
          ),
          10 => 
          array (
            'errorCode' => 'ParameterIllegal.AccessRegionIdNoCCN',
            'errorMessage' => 'Parameter Access RegionId illegal.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          12 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C0245BEF-52AC-44A8-A776-EF96FD26A5CA\\"\\n}","errorExample":""},{"type":"xml","example":"<ResolveAndRouteServiceInCenResponse>\\r\\n       <RequestId>C0245BEF-52AC-44A8-A776-EF96FD26A5CA</RequestId>\\r\\n</ResolveAndRouteServiceInCenResponse>","errorExample":""}]',
      'title' => '设置云服务',
      'summary' => '您可以通过调用ResolveAndRouteServiceInCen接口设置云服务，为本地网络添加访问云服务的配置。',
      'description' => '云服务指使用阿里云云服务地址段100.64.0.0/10提供服务的云产品，例如对象存储OSS（Object Storage Service）、日志服务SLS（Log Service）、数据传输服务DTS（Data Transmission Service）等。如果您的本地网络需要访问云服务，您需要将本地网络关联的边界路由器VBR（Virtual Border Router）实例或云连接网CCN（Cloud Connect Network）实例加载至云企业网，并且将云服务所在地域的一个专有网络VPC（Virtual Private Cloud）实例加载至该云企业网。加载后，您的本地网络可通过云企业网访问云服务所在地域的VPC实例，并通过该VPC访问云服务。

- 使用限制，该接口仅适用于基础版转发路由器。VBR实例关联的本地网络只能通过云企业网访问和其同地域的云服务。

    例如：云服务所在地域为华北2（北京），那么只有华北2（北京）地域下的VBR实例关联的本地网络可以访问云服务。

- **ResolveAndRouteServiceInCen**接口属于异步接口，即系统会先返回一个**RequestId**，但云服务配置并未添加完成，系统后台的添加任务仍在进行。您可以调用**DescribeRouteServicesInCen**接口查询云服务的状态。 
    - 当云服务处于**Creating**状态时，表示云服务配置正在添加中，在该状态下，您只能对云服务配置执行查询操作，不能执行其他操作。
    - 当云服务处于**Active**状态时，表示云服务配置添加完成。
    - 当云服务处于**Failed**状态时，表示云服务配置添加失败。
# 前提条件

在调用ResolveAndRouteServiceInCen接口前，确保满足以下条件：

- 您本地网络连接的VBR或CCN实例已经加载到云企业网。
- 云服务所在地域已有VPC实例加载至云企业网。具体操作，请参见[AttachCenChildInstance](~~65902~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCenPrivateZoneRoutes' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值为**10**，取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****	',
          ),
        ),
        3 => 
        array (
          'name' => 'AccessRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问PrivateZone服务的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'HostRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'PrivateZone服务所在的地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '461EC1B5-04A8-4706-8764-8F5BCEF48A6F',
              ),
              'PrivateZoneDnsServers' => 
              array (
                'description' => 'PrivateZone服务的DNS服务器IP地址。',
                'type' => 'string',
                'example' => '100.100.XX.XX/32,100.100.XX.XX/32',
              ),
              'CenId' => 
              array (
                'description' => '云企业网实例ID。',
                'type' => 'string',
                'example' => 'cen-7qthudw0ll6jmc****	',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PrivateZoneInfos' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'PrivateZoneInfo' => 
                  array (
                    'description' => 'PrivateZone服务的详细配置信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => 'PrivateZone服务的状态。

- **Creating**：创建中。
- **Active**：可用。
- **Deleting**：删除中。
',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'AccessRegionId' => 
                        array (
                          'description' => '访问PrivateZone服务的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'HostRegionId' => 
                        array (
                          'description' => 'PrivateZone服务所在的地域ID。
',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'HostVpcId' => 
                        array (
                          'description' => 'PrivateZone服务关联的VPC实例ID。',
                          'type' => 'string',
                          'example' => 'vpc-bp18sth14qii3pnvo****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"461EC1B5-04A8-4706-8764-8F5BCEF48A6F\\",\\n  \\"PrivateZoneDnsServers\\": \\"100.100.XX.XX/32,100.100.XX.XX/32\\",\\n  \\"CenId\\": \\"cen-7qthudw0ll6jmc****\\\\t\\",\\n  \\"PageNumber\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"TotalCount\\": 2,\\n  \\"PrivateZoneInfos\\": {\\n    \\"PrivateZoneInfo\\": [\\n      {\\n        \\"Status\\": \\"Active\\",\\n        \\"AccessRegionId\\": \\"cn-hangzhou\\",\\n        \\"HostRegionId\\": \\"cn-hangzhou\\",\\n        \\"HostVpcId\\": \\"vpc-bp18sth14qii3pnvo****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCenPrivateZoneRoutesResponse>\\r\\n\\t<PrivateZoneInfos>\\r\\n\\t\\t<PrivateZoneInfo>\\r\\n\\t\\t\\t<Status>Active</Status>\\r\\n\\t\\t\\t<HostVpcId>vpc-bp18sth14qii3pnvo****</HostVpcId>\\r\\n\\t\\t\\t<AccessRegionId>ccn-cn-shanghai</AccessRegionId>\\r\\n\\t\\t\\t<HostRegionId>cn-hangzhou</HostRegionId>\\r\\n\\t\\t</PrivateZoneInfo>\\r\\n\\t\\t<PrivateZoneInfo>\\r\\n\\t\\t\\t<Status>Active</Status>\\r\\n\\t\\t\\t<HostVpcId>vpc-bp18sth14qii3pnvo****</HostVpcId>\\r\\n\\t\\t\\t<AccessRegionId>cn-hangzhou</AccessRegionId>\\r\\n\\t\\t\\t<HostRegionId>cn-hangzhou</HostRegionId>\\r\\n\\t\\t</PrivateZoneInfo>\\r\\n\\t</PrivateZoneInfos>\\r\\n\\t<PageNumber>1</PageNumber>\\r\\n\\t<TotalCount>2</TotalCount>\\r\\n\\t<PageSize>10</PageSize>\\r\\n\\t<PrivateZoneDnsServers>100.100.XX.XX/32,100.100.XX.XX/32</PrivateZoneDnsServers>\\r\\n\\t<RequestId>461EC1B5-04A8-4706-8764-8F5BCEF48A6F</RequestId>\\r\\n</DescribeCenPrivateZoneRoutesResponse>\\t","errorExample":""}]',
      'title' => '查询PrivateZone',
      'summary' => '调用DescribeCenPrivateZoneRoutes接口查询云企业网实例的PrivateZone服务配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnroutePrivateZoneInCenToVpc' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        1 => 
        array (
          'name' => 'AccessRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问PrivateZone服务的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0245BEF-52AC-44A8-A776-EF96FD26A5CA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.PrivatezoneRouteExisted',
            'errorMessage' => 'Privatezone routes already existed.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C0245BEF-52AC-44A8-A776-EF96FD26A5CA\\"\\n}","errorExample":""},{"type":"xml","example":"<UnroutePrivateZoneInCenToVpcResponse>\\r\\n    <RequestId>C0245BEF-52AC-44A8-A776-EF96FD26A5CA</RequestId>\\r\\n</UnroutePrivateZoneInCenToVpcResponse>","errorExample":""}]',
      'title' => '删除PrivateZone',
      'summary' => '调用UnroutePrivateZoneInCenToVpc接口删除PrivateZone服务配置。',
      'description' => '**UnroutePrivateZoneInCenToVpc**接口属于异步接口，即系统会先返回一个**RequestId**，但PrivateZone服务配置并未删除完成，系统后台的删除任务仍在进行。您可以调用**DescribeCenPrivateZoneRoutes**接口查询PrivateZone服务的状态。 

- 当PrivateZone服务处于**Deleting**状态时，表示PrivateZone服务配置正在删除中，在该状态下，您只能对PrivateZone服务配置执行查询操作，不能执行其他操作。
- 当查询不到指定的PrivateZone服务配置时，表示PrivateZone服务配置删除完成。

如果存在访问地域为云连接网地域的PrivateZone配置，需先删除云连接网地域的PrivateZone配置，在删除其他访问地域的PrivateZone配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RoutePrivateZoneInCenToVpc' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        1 => 
        array (
          'name' => 'AccessRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问PrivateZone服务的地域ID。

访问所在地是指访问PrivateZone服务的地域。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'HostRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'PrivateZone服务所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'HostVpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'PrivateZone服务关联的VPC实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vpc-bp1h8vbrbcgohcju5****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C0245BEF-52AC-44A8-A776-EF96FD26A5CA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationUnsupported.CrossRegionNotSupport',
            'errorMessage' => 'Operation Failed. Host region Id is not equal to access region Id, VPC or VBR not support cross region privatezone service.',
          ),
          1 => 
          array (
            'errorCode' => 'Forbidden.PrivatezoneServiceNotAuthorize',
            'errorMessage' => 'Privatezone service not to grant authorization.',
          ),
          2 => 
          array (
            'errorCode' => 'ParameterIllegal.AccessRegionIdNoCCN	',
            'errorMessage' => 'Parameter Access RegionId illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.PvtzNotAssociatedWithVpc',
            'errorMessage' => 'Privatezone not associated with the specified vpc.',
          ),
        ),
        409 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.PrivatezoneRouteExisted',
            'errorMessage' => 'Privatezone routes already existed.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.VpcNotAttachedToCen',
            'errorMessage' => 'Vpc not attached to cen.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOperation.UnmatchRouteInVpcRegion',
            'errorMessage' => 'Operation Failed.Unmatch route in vpc region.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C0245BEF-52AC-44A8-A776-EF96FD26A5CA\\"\\n}","errorExample":""},{"type":"xml","example":"<RoutePrivateZoneInCenToVpcResponse>\\n    <RequestId>C0245BEF-52AC-44A8-A776-EF96FD26A5CA\\t</RequestId>\\n</RoutePrivateZoneInCenToVpcResponse>","errorExample":""}]',
      'title' => '设置PrivateZone',
      'summary' => '调用RoutePrivateZoneInCenToVpc接口设置PrivateZone服务。',
      'description' => 'PrivateZone是基于阿里云专有网络VPC（Virtual Private Cloud）环境的私有DNS域名解析和管理服务。边界路由器VBR（Virtual Border Router）实例、云连接网CCN（Cloud Connect Network）实例加载到云企业网中后，其关联的本地网络可以通过云企业网访问PrivateZone服务。


- VBR实例和CCN实例关联的本地网络只能访问和其同地域的PrivateZone服务。

    例如：PrivateZone服务所在地为华北2（北京），那么只有华北2（北京）地域下的VBR实例和中国内地CCN实例关联的本地网络可以访问PrivateZone服务。
- **RoutePrivateZoneInCenToVpc**接口属于异步接口，即系统会先返回一个**RequestId**，但PrivateZone服务配置并未添加完成，系统后台的添加任务仍在进行。您可以调用**DescribeCenPrivateZoneRoutes**接口查询PrivateZone服务的状态。 

    - 当PrivateZone服务处于**Creating**状态时，表示PrivateZone服务配置正在添加中，在该状态下，您只能对PrivateZone服务配置执行查询操作，不能执行其他操作。
    - 当PrivateZone服务处于**Active**状态时，表示PrivateZone服务配置添加完成。
    - 当PrivateZone服务处于**Failed**状态时，表示PrivateZone服务配置添加失败。

#### 前提条件

在调用**RoutePrivateZoneInCenToVpc**接口前，确保满足以下条件：

- 您已部署好PrivateZone服务。具体操作，请参见[云解析PrivateZone快速入门](~~64627~~)。
- 确保PrivateZone服务关联的VPC实例、访问所在地的VBR实例或CCN实例已加载至同一个云企业网实例。具体操作，请参见[AttachCenChildInstance](~~65902~~)。
- 如果您本地网络使用CCN实例接入阿里云，且CCN实例所属账号与VPC实例所属账号、云企业网实例所属账号不同，那么您需要先完成对CCN实例的授权。具体操作，请参见[云连接网授权](~~106674~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateTransitRouterMulticastDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
        1 => 'http',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
        1 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-a7syd349kne38g****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-p0wr9p28r92d598y6****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'TransitRouterMulticastDomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播域的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        5 => 
        array (
          'name' => 'TransitRouterMulticastDomainDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播域的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        6 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会创建组播域。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接创建组播域。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'PlainResponse<String>',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TransitRouterMulticastDomainId' => 
              array (
                'description' => '组播域ID。',
                'type' => 'string',
                'example' => 'tr-mcast-domain-40cwj0rgzgdtam****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '94E19C6F-206F-5223-9A63-64B85851BC04',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTransitRouterId.NotFound',
            'errorMessage' => 'The specified TransitRouterId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterId',
            'errorMessage' => 'The specified TransitRouterId is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.CenId',
            'errorMessage' => 'The specified CenId is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'The specified RegionId is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidCenId.NotFound',
            'errorMessage' => 'The specified CenId is not found.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidOperation.TransitRouterNotExist',
            'errorMessage' => 'Operation is invalid because the transit router not exist.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidOperation.CENInstanceStatus',
            'errorMessage' => 'The CEN instance is not in a valid state for the operation.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterInstance',
            'errorMessage' => 'The status of TransitRouter is incorrect.',
          ),
          8 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterType',
            'errorMessage' => 'The specified TransitRouterType does not support the operation.',
          ),
          9 => 
          array (
            'errorCode' => 'OperationUnsupported.ServiceMode',
            'errorMessage' => 'The specified ServiceMode does not support the operation.',
          ),
          10 => 
          array (
            'errorCode' => 'OperationUnsupported.TransitRouterSupportMulticast',
            'errorMessage' => 'The specified TransitRouterSupportMulticast does not support the operation.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationUnsupported.RegionId',
            'errorMessage' => 'The specified RegionId does not support the operation.',
          ),
          12 => 
          array (
            'errorCode' => 'IncorrectStatus.Cen',
            'errorMessage' => 'The status of Cen is incorrect.',
          ),
          13 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouter',
            'errorMessage' => 'The status of TransitRouter is incorrect.',
          ),
          14 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          15 => 
          array (
            'errorCode' => 'QuotaExceeded.MulticastDomain',
            'errorMessage' => 'The MulticastDomain quota is exceeded.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          17 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"TransitRouterMulticastDomainId\\": \\"tr-mcast-domain-40cwj0rgzgdtam****\\",\\n  \\"RequestId\\": \\"94E19C6F-206F-5223-9A63-64B85851BC04\\"\\n}","type":"json"}]',
      'title' => '创建组播域',
      'summary' => '组播域是在地域范围内定义一个组播网络的范围，只有组播域之内的资源可以发送和接收组播流量，组播域之外的资源无法发送和接收组播流量，您可以调用CreateTransitRouterMulticastDomain接口创建组播域。',
      'description' => '在调用本接口前，请先了解以下信息：

- 请确保您已经在待建立组播网络的地域创建了企业版转发路由器，并开启了企业版转发路由器的组播功能。具体操作，请参见[CreateTransitRouter](~~261169~~)。

    如果您在申请组播资源前已创建了企业版转发路由器实例，则该企业版转发路由器实例不支持开启组播功能，您可以删除当前企业版转发路由器实例，重新创建。如何删除企业版转发路由器实例，请参见[DeleteTransitRouter](~~261218~~)。
- 在调用**CreateTransitRouterMulticastDomain**接口的过程中，如果您指定了**CenId**、**RegionId**参数的值，则无需指定**TransitRouterId**参数的值；如果您指定了**TransitRouterId**参数的值，则无需指定**CenId**和**RegionId**参数的值。',
    ),
    'DeleteTransitRouterMulticastDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterMulticastDomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-mcast-domain-40cwj0rgzgdtam****',
          ),
        ),
        2 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会删除组播域。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接删除组播域。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '40194E53-2484-5831-BB53-E11D123C1A32',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IncorrectStatus.MulticastDomain',
            'errorMessage' => 'The status of MulticastDomain is incorrect.',
          ),
          1 => 
          array (
            'errorCode' => 'InstanceNotExist',
            'errorMessage' => 'The instance is not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.Cen',
            'errorMessage' => 'The status of Cen is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouter',
            'errorMessage' => 'The status of TransitRouter is incorrect.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidOperation.MulticastDomainAssociationExist',
            'errorMessage' => 'Operation is invalid because multicast domain associations exist.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidOperation.MulticastGroupExist',
            'errorMessage' => 'Operation is invalid because multicast groups exist.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidOperation.MulticastDomainInGroup',
            'errorMessage' => 'Operation is invalid because multicast domain has registered as multicast group member.',
          ),
          7 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          9 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"40194E53-2484-5831-BB53-E11D123C1A32\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteTransitRouterMulticastDomainResponse>\\n    <RequestId>40194E53-2484-5831-BB53-E11D123C1A32</RequestId>\\n</DeleteTransitRouterMulticastDomainResponse>","errorExample":""}]',
      'title' => '删除组播域',
      'summary' => '调用DeleteTransitRouterMulticastDomain接口删除组播域。',
      'description' => '删除组播域前，请确保满足以下条件：

- 组播域未绑定任何交换机。具体操作，请参见[DisassociateTransitRouterMulticastDomain](~~429774~~)。
- 组播域下不存在组播源和组播成员。具体操作，请参见[DeregisterTransitRouterMulticastGroupSources](~~429776~~)和[DeregisterTransitRouterMulticastGroupMembers](~~429779~~)。
- 组播域未作为组播成员被关联至其他组播域。您可以在其他组播域中删除组播成员，解除其他组播域和当前组播域的关联关系。具体操作，请参见[DeregisterTransitRouterMulticastGroupMembers](~~429779~~)。
- 调用接口时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回RequestId，但不会删除组播域。',
    ),
    'ModifyTransitRouterMulticastDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterMulticastDomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tr-mcast-domain-40cwj0rgzgdtam****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterMulticastDomainName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播域的新名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterMulticastDomainDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播域新的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会修改组播域的名称和描述信息。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接修改组播域的名称和描述信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '26273D23-5CB0-5EFC-AF5F-78A5448084C9',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Illegal.Name',
            'errorMessage' => 'Name is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'Illegal.Description',
            'errorMessage' => 'Description is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidMulticastDomainId.NotFound',
            'errorMessage' => 'The specified MulticastDomainId is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"26273D23-5CB0-5EFC-AF5F-78A5448084C9\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyTransitRouterMulticastDomainResponse>\\n    <RequestId>26273D23-5CB0-5EFC-AF5F-78A5448084C9</RequestId>\\n</ModifyTransitRouterMulticastDomainResponse>","errorExample":""}]',
      'title' => '修改组播域的名称和描述信息',
      'summary' => '调用ModifyTransitRouterMulticastDomain接口修改组播域的名称和描述信息。',
    ),
    'ListTransitRouterMulticastDomains' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'cen-a7syd349kne38g****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-p0wr9p28r92d598y6****',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterMulticastDomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-mcast-domain-3r3bvbypxqheej****',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发路由器实例所属地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。默认值：**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        6 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        7 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https://`。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https://`。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8A0F93D1-FD6C-56FC-B6D2-668FC92D12D2',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'TransitRouterMulticastDomains' => 
              array (
                'description' => '组播域信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '组播域的信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TransitRouterMulticastDomainId' => 
                    array (
                      'description' => '组播域ID。',
                      'type' => 'string',
                      'example' => 'tr-mcast-domain-3r3bvbypxqheej****',
                    ),
                    'TransitRouterMulticastDomainName' => 
                    array (
                      'description' => '组播域的名称。',
                      'type' => 'string',
                      'example' => 'nametest',
                    ),
                    'TransitRouterMulticastDomainDescription' => 
                    array (
                      'description' => '组播域的描述信息。',
                      'type' => 'string',
                      'example' => 'desctest',
                    ),
                    'Status' => 
                    array (
                      'description' => '组播域的状态。

仅取值：**Active**，表示组播域当前可用。',
                      'type' => 'string',
                      'example' => 'Active',
                    ),
                    'Tags' => 
                    array (
                      'description' => '标签列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Key' => 
                          array (
                            'description' => '标签键。',
                            'type' => 'string',
                            'example' => 'TagKey',
                          ),
                          'Value' => 
                          array (
                            'description' => '标签值。',
                            'type' => 'string',
                            'example' => 'TagValue',
                          ),
                        ),
                      ),
                    ),
                    'TransitRouterId' => 
                    array (
                      'description' => '转发路由器实例ID。',
                      'type' => 'string',
                      'example' => 'tr-bp1c23ijrl6d6c226h***',
                    ),
                    'RegionId' => 
                    array (
                      'description' => '转发路由器实例所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                    'CenId' => 
                    array (
                      'description' => '云企业网实例ID。',
                      'type' => 'string',
                      'example' => 'cen-h19xdb0qy2b3irka8z',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TrInstance',
            'errorMessage' => 'The specified TrInstance is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.CenId',
            'errorMessage' => 'The specified CenId is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.MaxResults',
            'errorMessage' => 'The specified MaxResults is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8A0F93D1-FD6C-56FC-B6D2-668FC92D12D2\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 20,\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"TransitRouterMulticastDomains\\": [\\n    {\\n      \\"TransitRouterMulticastDomainId\\": \\"tr-mcast-domain-3r3bvbypxqheej****\\",\\n      \\"TransitRouterMulticastDomainName\\": \\"nametest\\",\\n      \\"TransitRouterMulticastDomainDescription\\": \\"desctest\\",\\n      \\"Status\\": \\"Active\\",\\n      \\"Tags\\": [\\n        {\\n          \\"Key\\": \\"TagKey\\",\\n          \\"Value\\": \\"TagValue\\"\\n        }\\n      ],\\n      \\"TransitRouterId\\": \\"tr-bp1c23ijrl6d6c226h***\\",\\n      \\"RegionId\\": \\"cn-hangzhou\\",\\n      \\"CenId\\": \\"cen-h19xdb0qy2b3irka8z\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterMulticastDomainsResponse>\\n    <RequestId>8A0F93D1-FD6C-56FC-B6D2-668FC92D12D2</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <MaxResults>20</MaxResults>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <TransitRouterMulticastDomains>\\n        <TransitRouterMulticastDomainId>tr-mcast-domain-3r3bvbypxqheej****</TransitRouterMulticastDomainId>\\n        <TransitRouterMulticastDomainName>nametest</TransitRouterMulticastDomainName>\\n        <TransitRouterMulticastDomainDescription>desctest</TransitRouterMulticastDomainDescription>\\n        <Status>Active</Status>\\n        <Tags>\\n            <Key>TagKey</Key>\\n            <Value>TagValue</Value>\\n        </Tags>\\n    </TransitRouterMulticastDomains>\\n</ListTransitRouterMulticastDomainsResponse>","errorExample":""}]',
      'title' => '查询组播域的信息',
      'summary' => '调用ListTransitRouterMulticastDomains接口查询组播域的状态、组播域ID、组播域的描述等信息。',
      'description' => '- RegionId必须和CenId组合使用，不能单独使用，否则将不会显示组播域的信息。 但TransitRouterId和TransitRouterMulticastDomainId可以单独使用。
- 调用接口时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回**RequestId**，但不会显示组播域的详细信息。',
    ),
    'ListTransitRouterMulticastDomainAssociations' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterMulticastDomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-mcast-domain-91wpg6wbhchjeq****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-p90y3ymbbwuvy5****',
          ),
        ),
        3 => 
        array (
          'name' => 'VSwitchIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '交换机ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '交换机ID。

最多支持输入20个交换机ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'vsw-p0w9s2ig1jnwgrbzl****',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播域关联的资源类型。

仅取值：**VPC**。',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播域关联的资源的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-p0w9alkte4w2htrqe****',
          ),
        ),
        6 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。默认值：**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        7 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1CD0969B-A605-5D2D-BFF0-699FD182FB7F',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'TransitRouterMulticastAssociations' => 
              array (
                'description' => '关联信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '关联信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TransitRouterMulticastDomainId' => 
                    array (
                      'description' => '组播域ID。',
                      'type' => 'string',
                      'example' => 'tr-mcast-domain-91wpg6wbhchjeq****',
                    ),
                    'TransitRouterAttachmentId' => 
                    array (
                      'description' => '网络实例连接ID。',
                      'type' => 'string',
                      'example' => 'tr-attach-p90y3ymbbwuvy5****',
                    ),
                    'VSwitchId' => 
                    array (
                      'description' => '交换机ID。',
                      'type' => 'string',
                      'example' => 'vsw-p0wxk12u6okfkr8xy****',
                    ),
                    'Status' => 
                    array (
                      'description' => '关联状态。

- **Associated**：已关联。
- **Associating**：关联中。
- **Dissociating**：解除关联中。',
                      'type' => 'string',
                      'example' => 'Dissociating',
                    ),
                    'ResourceType' => 
                    array (
                      'description' => '组播域关联的资源类型。

仅取值：**VPC**。',
                      'type' => 'string',
                      'example' => 'VPC',
                    ),
                    'ResourceOwnerId' => 
                    array (
                      'description' => '组播域关联的资源所属的阿里云账号（主账号）ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1210123456123456',
                    ),
                    'ResourceId' => 
                    array (
                      'description' => '组播域关联的资源的ID。',
                      'type' => 'string',
                      'example' => 'vpc-p0w9b7g9l90yofr0n****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterMulticastDomainId',
            'errorMessage' => 'The specified TransitRouterMulticastDomainId is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.MaxResults',
            'errorMessage' => 'The specified MaxResults is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"1CD0969B-A605-5D2D-BFF0-699FD182FB7F\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 20,\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"TransitRouterMulticastAssociations\\": [\\n    {\\n      \\"TransitRouterMulticastDomainId\\": \\"tr-mcast-domain-91wpg6wbhchjeq****\\",\\n      \\"TransitRouterAttachmentId\\": \\"tr-attach-p90y3ymbbwuvy5****\\",\\n      \\"VSwitchId\\": \\"vsw-p0wxk12u6okfkr8xy****\\",\\n      \\"Status\\": \\"Dissociating\\",\\n      \\"ResourceType\\": \\"VPC\\",\\n      \\"ResourceOwnerId\\": 1210123456123456,\\n      \\"ResourceId\\": \\"vpc-p0w9b7g9l90yofr0n****\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询组播域的关联信息',
      'summary' => '您可以调用ListTransitRouterMulticastDomainAssociations接口查询组播域和交换机的关联关系。',
      'description' => '- 调用接口时请求参数**TransitRouterMulticastDomainId** 和 **TransitRouterAttachmentId**必须输入一个。输入**TransitRouterAttachmentId**表示查询VPC实例下已绑定组播域的交换机的信息。输入**TransitRouterMulticastDomainId**表示查询组播域下已绑定的交换机的信息。

- 在调用**ListTransitRouterMulticastDomainAssociations**接口过程时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回**RequestId**，但不会显示组播域和交换机的关联关系。',
    ),
    'ListTransitRouterMulticastDomainVSwitches' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cen-44m0p68spvlrqq****',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-p0wr1cd4fcuxy3ui0****',
          ),
        ),
        2 => 
        array (
          'name' => 'VSwitchIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '交换机ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '交换机ID。

一次最多支持输入50个交换机ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'vsw-p0w5ejr9bzfsttiza****',
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
        3 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。最小值：**0**。默认值：**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的**NextToken**值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：
- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B0E7E43C-979A-5130-AA0D-B3ADA69E0827',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'VSwitchIds' => 
              array (
                'description' => '交换机ID列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '交换机ID。',
                  'type' => 'string',
                  'example' => 'vsw-p0w5ejr9bzfsttiza****',
                ),
                'maxItems' => 50,
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TrInstance',
            'errorMessage' => 'The specified TransitRouter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.Region',
            'errorMessage' => 'The specified Region is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidCenId.NotFound',
            'errorMessage' => 'CenId is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.MaxResults',
            'errorMessage' => 'The specified MaxResults is illegal.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          6 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"B0E7E43C-979A-5130-AA0D-B3ADA69E0827\\",\\n  \\"TotalCount\\": 2,\\n  \\"MaxResults\\": 20,\\n  \\"VSwitchIds\\": [\\n    \\"vsw-p0w5ejr9bzfsttiza****\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterMulticastDomainVSwitchesResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>B0E7E43C-979A-5130-AA0D-B3ADA69E0827</RequestId>\\n    <TotalCount>2</TotalCount>\\n    <MaxResults>20</MaxResults>\\n    <VSwitchIds>vsw-p0w5ejr9bzfsttiza****</VSwitchIds>\\n</ListTransitRouterMulticastDomainVSwitchesResponse>","errorExample":""}]',
      'title' => '查询专有网络VPC实例下已关联组播域的交换机的信息',
      'summary' => 'VPC实例连接至企业版转发路由器后，您可以调用ListTransitRouterMulticastDomainVSwitches接口查询VPC实例下已绑定组播域的交换机的信息。',
      'description' => '在调用ListTransitRouterMulticastDomainVSwitches接口过程时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回RequestId，但不会显示专有网络VPC实例下已关联组播域的交换机的信息。',
    ),
    'AssociateTransitRouterMulticastDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterMulticastDomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-mcast-domain-91wpg6wbhchjeq****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC连接ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-attach-g3kz2k3u76amsk****',
          ),
        ),
        3 => 
        array (
          'name' => 'VSwitchIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '交换机ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '交换机ID。

一次最多支持关联5个交换机，一个组播域最多支持关联10个交换机。',
              'type' => 'string',
              'required' => false,
              'example' => 'vsw-p0wxk12u6okfkr8xy****',
            ),
            'required' => false,
            'maxItems' => 1000,
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会将交换机关联至组播域。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接将交换机关联至组播域。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse<String>',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F88AC12C-943B-50E9-A344-4F8820BB07A7',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidMulticastDomain.NotFound',
            'errorMessage' => 'The specified MulticastDomain is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.MulticastDomain',
            'errorMessage' => 'The status of MulticastDomain is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidAttachmentId.NotFound',
            'errorMessage' => 'The specified AttachmentId is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.AttachmentId',
            'errorMessage' => 'The specified AttachmentId is illegal.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.Attachment',
            'errorMessage' => 'The status of Attachment is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'MissingParam.VSwitchIds',
            'errorMessage' => 'The parameter VSwitchIds is mandatory.',
          ),
          6 => 
          array (
            'errorCode' => 'InstanceNotExist',
            'errorMessage' => 'The instance is not exist.',
          ),
          7 => 
          array (
            'errorCode' => 'OperationUnsupported.CloudBoxVpc',
            'errorMessage' => 'The specified CloudBoxVpc does not support the operation.',
          ),
          8 => 
          array (
            'errorCode' => 'AssociationExist.VSwitchIds',
            'errorMessage' => 'The association already exists.',
          ),
          9 => 
          array (
            'errorCode' => 'QuotaFull.VswitchPerMulticastDomain',
            'errorMessage' => 'The number of vswitch associated with multicast domain has exceed the maximum value that can be created.',
          ),
          10 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          11 => 
          array (
            'errorCode' => 'OperationUnsupported.VpcRegion',
            'errorMessage' => 'The specified Region is not support for this operation.',
          ),
          12 => 
          array (
            'errorCode' => 'OperationUnsupported.AdvancedFeature',
            'errorMessage' => 'The specified vpc does not support the operation.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          14 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F88AC12C-943B-50E9-A344-4F8820BB07A7\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociateTransitRouterMulticastDomainResponse>\\n    <RequestId>F88AC12C-943B-50E9-A344-4F8820BB07A7</RequestId>\\n</AssociateTransitRouterMulticastDomainResponse>","errorExample":""}]',
      'title' => '将专有网络VPC下的交换机关联至组播域',
      'summary' => '为了VPC下的资源可以实现组播通信，调用AssociateTransitRouterMulticastDomain接口将专有网络（VPC）下的交换机（VSwitch）关联到组播域中。',
      'description' => '- 一个交换机只支持关联至一个组播域。请确保待关联的交换机未与其他组播域建立关联关系。解除交换机与组播域的关联关系，请参见[DisassociateTransitRouterMulticastDomain](~~429774~~)。
- **AssociateTransitRouterMulticastDomain**接口属于异步接口，即系统会先返回一个**RequestId**，但交换机和组播域并未完全建立关联关系，系统后台的关联任务仍在进行。您可以调用**ListTransitRouterMulticastDomainAssociations**接口查询交换机和组播域的关联状态。

    - 当关联状态为**Associating**时，表示交换机和组播域正在建立关联关系，在该状态下，您只能对交换机执行查询操作，不能执行其他操作。
    - 当关联状态为**Associated**时，表示交换机和组播域已成功建立关联关系。

- 交换机所属的VPC必须已经连接到企业版转发路由器。创建VPC连接，请参见[CreateTransitRouterVpcAttachment](~~468237~~)。',
    ),
    'DisassociateTransitRouterMulticastDomain' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterMulticastDomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-mcast-domain-91wpg6wbhchjeq****',
          ),
        ),
        2 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC连接ID。

本参数为交换机所属的专有网络VPC（Virtual Private Cloud）被连接至转发路由器实例后生成的VPC连接的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-attach-g3kz2k3u76amsk****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会解除交换机和组播域的关联关系。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接解除交换机和组播域的关联关系。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'VSwitchIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '交换机ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '交换机ID。

一次最多支持与5个交换机解除关联关系。
>当前参数为必填参数。',
              'type' => 'string',
              'required' => false,
              'example' => 'vsw-p0w9s2ig1jnwgrbzl****',
            ),
            'required' => false,
            'maxItems' => 1000,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6F6B3FF0-45D1-5416-B189-C45A42A0222B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidMulticastDomainId.NotFound',
            'errorMessage' => 'The specified MulticastDomainId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.MulticastDomain',
            'errorMessage' => 'The status of MulticastDomain is incorrect.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceStatusNotSupport',
            'errorMessage' => 'The status of instance not support the operation.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidAttachmentId.NotFound',
            'errorMessage' => 'The specified AttachmentId is not found.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.Attachment',
            'errorMessage' => 'The status of Attachment is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.AttachmentId',
            'errorMessage' => 'The specified AttachmentId is illegal.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidOperation.MulticastGroupExist',
            'errorMessage' => 'Operation is invalid because multicast groups exist.',
          ),
          7 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          9 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6F6B3FF0-45D1-5416-B189-C45A42A0222B\\"\\n}","errorExample":""},{"type":"xml","example":"<DisassociateTransitRouterMulticastDomainResponse>\\n    <RequestId>6F6B3FF0-45D1-5416-B189-C45A42A0222B</RequestId>\\n</DisassociateTransitRouterMulticastDomainResponse>","errorExample":""}]',
      'title' => '解除交换机与组播域的关联关系',
      'summary' => '调用DisassociateTransitRouterMulticastDomain接口解除交换机与组播域的关联关系。',
      'description' => '- 交换机和组播域解除关联前，请确保交换机下不存在组播源和组播成员。删除组播源和删除组播成员的操作，请参见[DeregisterTransitRouterMulticastGroupSources](~~468416~~)和[DeregisterTransitRouterMulticastGroupMembers](~~468409~~)。
- 如果您输入的参数有误调用接口后仍然会返回RequestId，但不会解除交换机与组播域的关联关系。
- **DisassociateTransitRouterMulticastDomain**接口属于异步接口，即系统会先返回一个**RequestId**，但交换机和组播域并未完全解除关联关系，系统后台的解除任务仍在进行。您可以调用**ListTransitRouterMulticastDomainAssociations**接口查询交换机和组播域的关联状态。 

    - 当关联状态为**Dissociating**时，表示交换机和组播域正在解除关联关系，在该状态下，您只能对交换机执行查询操作，不能执行其他操作。
    - 当在组播域下查询不到该交换机的信息时，表示交换机和组播域已成功解除关联关系。',
    ),
    'ListTransitRouterMulticastGroups' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterMulticastDomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播域ID。

TransitRouterMulticastDomainId或TransitRouterAttachmentId参数必须输入其中一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-mcast-domain-5mjb5gjb6dgu98****',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播组的IP地址。

每个组播组通过一个组播IP地址进行标识。',
            'type' => 'string',
            'required' => false,
            'example' => '239.XX.XX.2',
          ),
        ),
        3 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。

TransitRouterMulticastDomainId或TransitRouterAttachmentId参数必须输入其中一个。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-g3kz2k3u76amsk****',
          ),
        ),
        4 => 
        array (
          'name' => 'VSwitchIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '交换机ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '交换机ID。

最多支持输入20个交换机ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'vsw-p0w9s2ig1jnwgrbzl****',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        5 => 
        array (
          'name' => 'PeerTransitRouterMulticastDomains',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '跨地域组播域ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '跨地域组播域ID。

最多支持输入20个跨地域组播域ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'tr-mcast-domain-91wpg6wbhchjeq****',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播资源的类型。

- **VPC**：表示查询专有网络VPC（Virtual Private Cloud）下的组播资源信息。
- **TR**：表示查询跨地域的组播资源的信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
          ),
        ),
        7 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播资源关联的资源ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-p0w9alkte4w2htrqe****',
          ),
        ),
        8 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。默认值：**20**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        9 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        10 => 
        array (
          'name' => 'IsGroupSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否查询组播源。

- **false**：否。
- **true**：是。

>和IsGroupMember配合使用。
> - 若两者均不配置，则默认查询组播源和成员。
> - 若只配置其一或两者均配置，则以配置参数为准。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        11 => 
        array (
          'name' => 'IsGroupMember',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否查询组播成员。

- **false**：否。
- **true**：是。

>和IsGroupMember配合使用。
> - 若两者均不配置，则默认查询组播源和成员。
> - 若只配置其一或两者均配置，则以配置参数为准。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        12 => 
        array (
          'name' => 'NetworkInterfaceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '弹性网卡ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '弹性网卡ID。

最多支持输入20个弹性网卡ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'eni-p0weuda3lszwzjly****',
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FB3C4A16-0933-5850-9D43-0C3EA37BCBFB',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 如果**NextToken**为空表示没有下一次查询。
- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'TransitRouterMulticastGroups' => 
              array (
                'description' => '组播组信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '组播组的信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'GroupIpAddress' => 
                    array (
                      'description' => '组播资源所属的组播组的IP地址。',
                      'type' => 'string',
                      'example' => '239.XX.XX.2',
                    ),
                    'TransitRouterAttachmentId' => 
                    array (
                      'description' => '网络实例连接ID。',
                      'type' => 'string',
                      'example' => 'tr-attach-g3kz2k3u76amsk****',
                    ),
                    'VSwitchId' => 
                    array (
                      'description' => '组播资源所属交换机的ID。',
                      'type' => 'string',
                      'example' => 'vsw-p0w9s2ig1jnwgrbzl****',
                    ),
                    'NetworkInterfaceId' => 
                    array (
                      'description' => '弹性网卡ID（即组播资源ID）。',
                      'type' => 'string',
                      'example' => 'eni-p0weuda3lszwzjly****',
                    ),
                    'PeerTransitRouterMulticastDomainId' => 
                    array (
                      'description' => '跨地域的组播资源关联的组播域的ID。',
                      'type' => 'string',
                      'example' => 'tr-mcast-domain-91wpg6wbhchjeq****',
                    ),
                    'Status' => 
                    array (
                      'description' => '组播资源的状态。

- **Registering**：创建中。
- **Registered**：可用。
- **Deregistering**：删除中。',
                      'type' => 'string',
                      'example' => 'Registered',
                    ),
                    'GroupSource' => 
                    array (
                      'description' => '当前组播资源是否是组播源。

- **true**：是组播源。
- **false**：不是组播源。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'GroupMember' => 
                    array (
                      'description' => '当前组播资源是否是组播成员。

- **true**：是组播成员。
- **false**：不是组播成员。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'MemberType' => 
                    array (
                      'description' => '组播源的类型。

仅返回：**Static**，表示当前组播源是通过手动方式指定的。',
                      'type' => 'string',
                      'example' => 'Static',
                    ),
                    'SourceType' => 
                    array (
                      'description' => '组播成员的类型。

仅返回：**Static**，表示当前组播成员是通过手动方式指定的。',
                      'type' => 'string',
                      'example' => 'Static',
                    ),
                    'ResourceType' => 
                    array (
                      'description' => '组播资源的类型。

- **VPC**：表示当前组播资源为VPC下的资源。
- **TR**：表示当前组播资源为跨地域的资源。',
                      'type' => 'string',
                      'example' => 'VPC',
                    ),
                    'ResourceOwnerId' => 
                    array (
                      'description' => '组播资源所属的阿里云账号（主账号）ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '253460731706911258',
                    ),
                    'ResourceId' => 
                    array (
                      'description' => '组播资源关联的资源ID。',
                      'type' => 'string',
                      'example' => 'vpc-p0w9alkte4w2htrqe****',
                    ),
                    'TransitRouterMulticastDomainId' => 
                    array (
                      'description' => '组播域ID。',
                      'type' => 'string',
                      'example' => 'tr-mcast-domain-kx0vk0v7fz8kx4****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The specified NextToken is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterMulticastDomainId',
            'errorMessage' => 'The specified TransitRouterMulticastDomainId is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.MaxResults',
            'errorMessage' => 'The specified MaxResults is illegal.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FB3C4A16-0933-5850-9D43-0C3EA37BCBFB\\",\\n  \\"TotalCount\\": 1,\\n  \\"MaxResults\\": 20,\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"TransitRouterMulticastGroups\\": [\\n    {\\n      \\"GroupIpAddress\\": \\"239.XX.XX.2\\",\\n      \\"TransitRouterAttachmentId\\": \\"tr-attach-g3kz2k3u76amsk****\\",\\n      \\"VSwitchId\\": \\"vsw-p0w9s2ig1jnwgrbzl****\\",\\n      \\"NetworkInterfaceId\\": \\"eni-p0weuda3lszwzjly****\\",\\n      \\"PeerTransitRouterMulticastDomainId\\": \\"tr-mcast-domain-91wpg6wbhchjeq****\\",\\n      \\"Status\\": \\"Registered\\",\\n      \\"GroupSource\\": false,\\n      \\"GroupMember\\": true,\\n      \\"MemberType\\": \\"Static\\",\\n      \\"SourceType\\": \\"Static\\",\\n      \\"ResourceType\\": \\"VPC\\",\\n      \\"ResourceOwnerId\\": 253460731706911260,\\n      \\"ResourceId\\": \\"vpc-p0w9alkte4w2htrqe****\\",\\n      \\"TransitRouterMulticastDomainId\\": \\"tr-mcast-domain-kx0vk0v7fz8kx4****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListTransitRouterMulticastGroupsResponse>\\n    <RequestId>FB3C4A16-0933-5850-9D43-0C3EA37BCBFB</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <MaxResults>20</MaxResults>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <TransitRouterMulticastGroups>\\n        <GroupIpAddress>239.XX.XX.2</GroupIpAddress>\\n        <TransitRouterAttachmentId>tr-attach-g3kz2k3u76amsk****</TransitRouterAttachmentId>\\n        <VSwitchId>vsw-p0w9s2ig1jnwgrbzl****</VSwitchId>\\n        <NetworkInterfaceId>eni-p0weuda3lszwzjly****</NetworkInterfaceId>\\n        <PeerTransitRouterMulticastDomainId>tr-mcast-domain-91wpg6wbhchjeq****</PeerTransitRouterMulticastDomainId>\\n        <Status>Registered</Status>\\n        <GroupSource>false</GroupSource>\\n        <GroupMember>true</GroupMember>\\n        <MemberType>Static</MemberType>\\n        <SourceType>Static</SourceType>\\n        <ResourceType>VPC</ResourceType>\\n        <ResourceOwnerId>253460731706911260</ResourceOwnerId>\\n        <ResourceId>vpc-p0w9alkte4w2htrqe****</ResourceId>\\n    </TransitRouterMulticastGroups>\\n</ListTransitRouterMulticastGroupsResponse>","errorExample":""}]',
      'title' => '查询组播域下组播成员和组播源的信息',
      'summary' => '调用ListTransitRouterMulticastGroups接口查询组播域下组播成员和组播源的详细信息。',
      'description' => '您可以调用`ListTransitRouterMulticastGroups`接口查询组播域下组播成员和组播源（以下简称为组播资源）的信息。

- 如果您指定**GroupIpAddress**参数的值，则您可以查询组播域下指定组播组下的组播资源的信息。
- 如果您指定**VSwitchIds**参数的值，则您可以查询组播域下指定交换机下的组播资源的信息。
- 如果您指定**PeerTransitRouterMulticastDomains**参数的值，则您可以查询组播域下跨地域组播资源的信息。
- 如果您指定**ResourceType**参数的值，则您可以查询组播域下属于某一资源类型的组播资源的信息。
- 如果您指定**ResourceId**参数的值，则您可以查询某一资源下组播资源的信息。
- 如果您仅指定**TransitRouterMulticastDomainId**参数的值，则您可以查询组播域下所有组播资源的信息。',
    ),
    'ListGrantVSwitchEnis' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC实例连接的云企业网实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cen-a7syd349kne38g****',
          ),
        ),
        1 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC实例的ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'vpc-p0w9alkte4w2htrqe****',
          ),
        ),
        2 => 
        array (
          'name' => 'VSwitchId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC实例下的一个交换机ID。

一次仅支持查询一个交换机下的弹性网卡的信息。',
            'type' => 'string',
            'required' => true,
            'example' => 'vsw-p0w9s2ig1jnwgrbzl****',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。
- 如果有下一次查询，取值为上一次 API 调用返回的 NextToken 值。',
            'type' => 'string',
            'required' => false,
            'example' => 'AAAAAdDWBF2****',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的最大条目数。取值范围：10~500。

默认值：
- 当不设置值时，默认值为20。
- 当设置的值大于500时，默认值为500。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
            'default' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'NetworkInterfaceId',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '弹性网卡ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '弹性网卡的ID。

当前系统仅支持ECS实例关联的ENI作为组播源。系统将以该ENI的主私网IP地址向组播组发送组播流量。',
              'type' => 'string',
              'required' => false,
              'example' => 'eni-wz9a2sgsskvw69v2****',
            ),
            'required' => false,
          ),
        ),
        6 => 
        array (
          'name' => 'NetworkInterfaceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡的名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-eni-name',
          ),
        ),
        7 => 
        array (
          'name' => 'PrimaryIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡主私网IPv4地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.**.**',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DBFE1736-2F33-5309-9954-875B11E9519D',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。
><notice>使用MaxResults和NextToken参数进行分页查询时，返回的Total参数值无意义。></notice>',
                'type' => 'string',
                'example' => '6',
              ),
              'GrantVSwitchEnis' => 
              array (
                'description' => '弹性网卡信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '弹性网卡信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'VpcId' => 
                    array (
                      'description' => 'VPC实例ID。',
                      'type' => 'string',
                      'example' => 'vpc-p0w9alkte4w2htrqe****',
                    ),
                    'VSwitchId' => 
                    array (
                      'description' => '交换机ID。',
                      'type' => 'string',
                      'example' => 'vsw-p0w9s2ig1jnwgrbzl****',
                    ),
                    'NetworkInterfaceId' => 
                    array (
                      'description' => '弹性网卡ID。',
                      'type' => 'string',
                      'example' => 'eni-p0w172vv82kxzb49****',
                    ),
                    'Description' => 
                    array (
                      'description' => '弹性网卡的描述信息。',
                      'type' => 'string',
                      'example' => 'created by CBN',
                    ),
                    'TransitRouterFlag' => 
                    array (
                      'description' => '当前弹性网卡是否是转发路由器创建的。

- **true**：是。
- **false**：否。

转发路由器创建的弹性网卡不支持成为组播源或者组播成员。',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'NetworkInterfaceName' => 
                    array (
                      'description' => '弹性网卡的名称。',
                      'type' => 'string',
                      'example' => 'my-eni-name',
                    ),
                    'PrimaryIpAddress' => 
                    array (
                      'description' => '弹性网卡主私网IPv4地址。',
                      'type' => 'string',
                      'example' => '192.168.**.**',
                    ),
                  ),
                ),
              ),
              'NextToken' => 
              array (
                'description' => '本次调用返回的查询凭证值。',
                'type' => 'string',
                'example' => 'AAAAAdDWBF2****',
              ),
              'MaxResults' => 
              array (
                'description' => '本次读取的最大数据量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '20',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidCenId.NotFound',
            'errorMessage' => 'The specified CenId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidVpcId.NotFound',
            'errorMessage' => 'The specified VpcId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidOperation.MulticastDomainAssociationNotExist',
            'errorMessage' => 'Operation is invalid because multicast association domain association not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DBFE1736-2F33-5309-9954-875B11E9519D\\",\\n  \\"TotalCount\\": \\"6\\",\\n  \\"GrantVSwitchEnis\\": [\\n    {\\n      \\"VpcId\\": \\"vpc-p0w9alkte4w2htrqe****\\",\\n      \\"VSwitchId\\": \\"vsw-p0w9s2ig1jnwgrbzl****\\",\\n      \\"NetworkInterfaceId\\": \\"eni-p0w172vv82kxzb49****\\",\\n      \\"Description\\": \\"created by CBN\\",\\n      \\"TransitRouterFlag\\": false,\\n      \\"NetworkInterfaceName\\": \\"my-eni-name\\",\\n      \\"PrimaryIpAddress\\": \\"192.168.**.**\\"\\n    }\\n  ],\\n  \\"NextToken\\": \\"AAAAAdDWBF2****\\",\\n  \\"MaxResults\\": 20\\n}","errorExample":""},{"type":"xml","example":"<ListGrantVSwitchEnisResponse>\\n    <RequestId>DBFE1736-2F33-5309-9954-875B11E9519D</RequestId>\\n    <GrantVSwitchEnis>\\n        <TransitRouterFlag>false</TransitRouterFlag>\\n        <VpcId>vpc-p0w9alkte4w2htrqe****</VpcId>\\n        <VSwitchId>vsw-p0w9s2ig1jnwgrbzl****</VSwitchId>\\n        <NetworkInterfaceId>eni-p0w172vv82kxzb49****</NetworkInterfaceId>\\n    </GrantVSwitchEnis>\\n    <GrantVSwitchEnis>\\n        <TransitRouterFlag>false</TransitRouterFlag>\\n        <VpcId>vpc-p0w9alkte4w2htrqe****</VpcId>\\n        <VSwitchId>vsw-p0w9s2ig1jnwgrbzl****</VSwitchId>\\n        <NetworkInterfaceId>eni-p0weuda3lszwzjly****</NetworkInterfaceId>\\n    </GrantVSwitchEnis>\\n    <GrantVSwitchEnis>\\n        <Description>created by CBN</Description>\\n        <TransitRouterFlag>true</TransitRouterFlag>\\n        <VpcId>vpc-p0w9alkte4w2htrqe****</VpcId>\\n        <VSwitchId>vsw-p0w9s2ig1jnwgrbzl****</VSwitchId>\\n        <NetworkInterfaceId>eni-p0wa06n9uz70ge2f****</NetworkInterfaceId>\\n    </GrantVSwitchEnis>\\n    <GrantVSwitchEnis>\\n        <Description>created by CBN</Description>\\n        <TransitRouterFlag>true</TransitRouterFlag>\\n        <VpcId>vpc-p0w9alkte4w2htrqe****</VpcId>\\n        <VSwitchId>vsw-p0w9s2ig1jnwgrbzl****</VSwitchId>\\n        <NetworkInterfaceId>eni-p0wa06n9uz70ge2f****</NetworkInterfaceId>\\n    </GrantVSwitchEnis>\\n    <GrantVSwitchEnis>\\n        <Description>created by CBN</Description>\\n        <TransitRouterFlag>true</TransitRouterFlag>\\n        <VpcId>vpc-p0w9alkte4w2htrqe****</VpcId>\\n        <VSwitchId>vsw-p0w9s2ig1jnwgrbzl****</VSwitchId>\\n        <NetworkInterfaceId>eni-p0wcaxqogaswq4d****</NetworkInterfaceId>\\n    </GrantVSwitchEnis>\\n    <GrantVSwitchEnis>\\n        <Description>created by CBN</Description>\\n        <TransitRouterFlag>true</TransitRouterFlag>\\n        <VpcId>vpc-p0w9alkte4w2htrqe****</VpcId>\\n        <VSwitchId>vsw-p0w9s2ig1jnwgrbzl****</VSwitchId>\\n        <NetworkInterfaceId>eni-p0we87l7rv6e5m8k****</NetworkInterfaceId>\\n    </GrantVSwitchEnis>\\n</ListGrantVSwitchEnisResponse>","errorExample":""}]',
      'title' => '查询专有网络VPC（Virtual Private Cloud）下可以成为组播源或者组播成员的弹性网卡的信息',
      'summary' => '调用ListGrantVSwitchEnis接口查询在一个专有网络内部，哪些弹性网卡的配置可以成为组播源或者组播成员用来进行组播通信。',
      'description' => '调用`ListGrantVSwitchEnis`接口前，请确保VPC实例已被连接至云企业网。具体操作，请参见[CreateTransitRouterVpcAttachment](~~261358~~)。',
    ),
    'DeregisterTransitRouterMulticastGroupMembers' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterMulticastDomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播成员所属的组播域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-mcast-domain-91wpg6wbhchjeq****',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播成员所属的组播组的IP地址。',
            'type' => 'string',
            'required' => true,
            'example' => '239.XX.XX.2',
          ),
        ),
        3 => 
        array (
          'name' => 'NetworkInterfaceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '弹性网卡ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '弹性网卡ID。

一次支持删除多个弹性网卡。请确保您指定的弹性网卡个数与跨地域组播域的个数之和小于或等于5。',
              'type' => 'string',
              'required' => false,
              'example' => 'eni-p0weuda3lszwzjly****',
            ),
            'required' => false,
            'maxItems' => 1000,
          ),
        ),
        4 => 
        array (
          'name' => 'PeerTransitRouterMulticastDomains',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '跨地域的组播域ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '跨地域的组播域ID。

一次支持删除多个跨地域组播域。请确保您指定的弹性网卡个数与跨地域组播域的个数之和小于或等于5。',
              'type' => 'string',
              'required' => false,
              'example' => 'tr-mcast-domain-5mjb5gjb6dgu98****',
            ),
            'required' => false,
            'maxItems' => 1000,
          ),
        ),
        5 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会删除组播成员。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接删除组播成员。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse<String>',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '61D0A553-5E4E-53B5-9DA3-01CBA076A286',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTransitRouterMulticastDomainId.NotFound',
            'errorMessage' => 'The specified TransitRouterMulticastDomainId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.MulticastDomainStatus',
            'errorMessage' => 'Operation is invalid, due to multicast domain not Active.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.MulticastGroup',
            'errorMessage' => 'The status of MulticastGroup is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"61D0A553-5E4E-53B5-9DA3-01CBA076A286\\"\\n}","errorExample":""},{"type":"xml","example":"<DeregisterTransitRouterMulticastGroupMembersResponse>\\n    <RequestId>61D0A553-5E4E-53B5-9DA3-01CBA076A286</RequestId>\\n</DeregisterTransitRouterMulticastGroupMembersResponse>","errorExample":""}]',
      'title' => '删除组播成员',
      'summary' => '如果您不需要某个组播成员再接收组播流量，您可以调用DeregisterTransitRouterMulticastGroupMembers接口将该组播成员从组播组中删除。',
      'description' => '`DeregisterTransitRouterMulticastGroupMembers`接口属于异步接口，即系统会先返回一个**RequestId**，但组播成员未被完全删除，系统后台的删除任务仍在进行。您可以调用`ListTransitRouterMulticastGroups`接口查询组播成员的状态。 

- 当组播成员处于**Deregistering**状态时，表示组播成员正在被删除，在该状态下，您只能对组播成员执行查询操作，不能执行其他操作。
- 当`ListTransitRouterMulticastGroups`接口无法在组播域下查询到该组播成员的信息时，表示组播成员已被成功删除。

在调用DeregisterTransitRouterMulticastGroupMembers接口过程时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回RequestId，但不会删除组播成员。',
    ),
    'RegisterTransitRouterMulticastGroupSources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterMulticastDomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播源所属的组播域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-mcast-domain-5mjb5gjb6dgu98****',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播源所属的组播组的IP地址。取值范围：**224.0.0.1**~**239.255.255.254**。

如果当前组播域下不存在您指定的组播组，系统将自动为您创建新的组播组。',
            'type' => 'string',
            'required' => true,
            'example' => '239.XX.XX.2',
          ),
        ),
        3 => 
        array (
          'name' => 'NetworkInterfaceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '弹性网卡ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '弹性网卡ID。（即组播源）

当前一个组播组最多一次支持创建五个组播源。

> 当前本参数为必填参数。',
              'type' => 'string',
              'required' => false,
              'example' => 'eni-p0w92o2wupc3c05t****',
            ),
            'required' => false,
            'maxItems' => 1000,
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会创建组播源。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接创建组播源。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡所属的VPC实例ID。

- 如果弹性网卡所属阿里云账号和您当前登录的阿里云账号为相同账号，本参数可不填。
- 如果弹性网卡所属阿里云账号和您当前登录的阿里云账号为不同账号，本参数必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-wz9fusm6zq8uy7cfa****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse<String>',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9C5D5D70-0AFF-5E5C-8D8A-E92C90C8FB08',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidOperation.PeerMulticastDomainSource',
            'errorMessage' => 'Operation is invalid because peer multicast domain can not be group source.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.GroupIpAddress',
            'errorMessage' => 'The specified GroupIpAddress is illegal.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidMulticastDomainId.NotFound',
            'errorMessage' => 'The specified AttachmentId is not found.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.MulticastDomainId',
            'errorMessage' => 'The status of MulticastDomainId is incorrect.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectStatus.Cen',
            'errorMessage' => 'The status of Cen is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'InstanceExist',
            'errorMessage' => 'The instance already exists.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidOperation.NetworkInterfaceNotExist',
            'errorMessage' => 'Operation is invalid bacause network interface not exist.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidOperation.NTRNetworkInterfaceNotSupport',
            'errorMessage' => 'Operation is invalid, due to ntr eni not support.',
          ),
          8 => 
          array (
            'errorCode' => 'InstanceNotExist',
            'errorMessage' => 'The instance is not exist.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidOperation.MulticastDomainAssociationNotExist',
            'errorMessage' => 'Operation is invalid because multicast association domain association not exist.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidOperation.MulticastDomainAssociationStatus',
            'errorMessage' => 'Operation is invalid, due to multicast domain association not Active.',
          ),
          11 => 
          array (
            'errorCode' => 'QuotaFull.MulticastGroupPerDomain',
            'errorMessage' => 'The number of multicast group has exceed the maximum value that can be created.',
          ),
          12 => 
          array (
            'errorCode' => 'QuotaFull.MulticastSourcePerGroup',
            'errorMessage' => 'The number of multicast group source has exceed the maximum value that can be created.',
          ),
          13 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          14 => 
          array (
            'errorCode' => 'IncorrectStatus.ConnectPeerIds',
            'errorMessage' => 'Connect Peer statuses are incorrect.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidConnectPeerIds.NotFound',
            'errorMessage' => 'The Connect Peer Ids are invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          17 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9C5D5D70-0AFF-5E5C-8D8A-E92C90C8FB08\\"\\n}","errorExample":""},{"type":"xml","example":"<RegisterTransitRouterMulticastGroupSourcesResponse>\\n    <RequestId>9C5D5D70-0AFF-5E5C-8D8A-E92C90C8FB08</RequestId>\\n</RegisterTransitRouterMulticastGroupSourcesResponse>","errorExample":""}]',
      'title' => '创建组播源',
      'summary' => '为了实现一对多的组播通信，调用RegisterTransitRouterMulticastGroupSources接口创建组播源。',
      'description' => '- 当前仅支持将弹性网卡ENI（Elastic Network Interface）指定为组播源。
- `RegisterTransitRouterMulticastGroupSources`接口属于异步接口，即系统会先返回一个**RequestId**，但组播源未完全创建成功，系统后台的创建任务仍在进行。您可以调用`ListTransitRouterMulticastGroups`接口查询组播源的状态。 
   
    - 当组播源处于**Registering**状态时，表示组播源正在被创建，在该状态下，您只能对组播源执行查询操作，不能执行其他操作。
    - 当组播源处于**Registered**状态时，表示组播源已被成功创建。

## 前提条件

在调用`RegisterTransitRouterMulticastGroupSources`接口创建组播源前，请确保弹性网卡所在的交换机已被关联至组播域。具体操作，请参见[AssociateTransitRouterMulticastDomain](~~429778~~)。',
    ),
    'DeregisterTransitRouterMulticastGroupSources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-4266****',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterMulticastDomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播源所属的组播域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-mcast-domain-91wpg6wbhchjeq****',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播源所属的组播组的IP地址。',
            'type' => 'string',
            'required' => true,
            'example' => '239.XX.XX.2',
          ),
        ),
        3 => 
        array (
          'name' => 'NetworkInterfaceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '组播源ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '组播源ID。

当前一个组播组一次最多支持删除五个组播源。

>当前本参数为必填参数。',
              'type' => 'string',
              'required' => false,
              'example' => 'eni-p0weuda3lszwzjly****',
            ),
            'required' => false,
            'maxItems' => 1000,
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会删除组播源。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接删除组播源。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse<String>',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '53E7E8BE-7F4E-5458-ACCA-9B5C1D6A642D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTransitRouterMulticastDomainId.NotFound',
            'errorMessage' => 'The specified TransitRouterMulticastDomainId is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidOperation.MulticastDomainStatus',
            'errorMessage' => 'Operation is invalid, due to multicast domain not Active.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.MulticastGroup',
            'errorMessage' => 'The status of MulticastGroup is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          5 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"53E7E8BE-7F4E-5458-ACCA-9B5C1D6A642D\\"\\n}","errorExample":""},{"type":"xml","example":"<DeregisterTransitRouterMulticastGroupSourcesResponse>\\n    <RequestId>53E7E8BE-7F4E-5458-ACCA-9B5C1D6A642D</RequestId>\\n</DeregisterTransitRouterMulticastGroupSourcesResponse>","errorExample":""}]',
      'title' => '删除组播源',
      'summary' => '如果您不需要某个组播源再发送组播流量，您可以调用DeregisterTransitRouterMulticastGroupSources接口将该组播源从组播组中删除。',
      'description' => '`DeregisterTransitRouterMulticastGroupSources`接口属于异步接口，即系统会先返回一个**RequestId**，但组播源未被完全删除，系统后台的删除任务仍在进行。您可以调用`ListTransitRouterMulticastGroups`接口查询组播源的状态。 

- 当组播源处于**Deregistering**状态时，表示组播源正在被删除，在该状态下，您只能对组播源执行查询操作，不能执行其他操作。
- 当`ListTransitRouterMulticastGroups`接口无法在组播域下查询到该组播源的信息时，表示组播源已被成功删除。

在调用DeregisterTransitRouterMulticastGroupSources接口过程时请确保输入的参数值无误。如果您输入的参数有误调用接口后仍然会返回RequestId，但不会删除组播源。',
    ),
    'RegisterTransitRouterMulticastGroupMembers' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

>若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-426655440000',
          ),
        ),
        1 => 
        array (
          'name' => 'TransitRouterMulticastDomainId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播成员所属的组播域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'tr-mcast-domain-91wpg6wbhchjeq****',
          ),
        ),
        2 => 
        array (
          'name' => 'GroupIpAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '组播成员所属的组播组的IP地址。取值范围：**224.0.0.1**~**239.255.255.254**。

如果当前组播域下不存在您指定的组播组，系统将自动在当前组播域下为您创建新的组播组。',
            'type' => 'string',
            'required' => true,
            'example' => '239.XX.XX.2',
          ),
        ),
        3 => 
        array (
          'name' => 'NetworkInterfaceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '弹性网卡ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '弹性网卡ID。

一次支持关联多个弹性网卡。请确保您指定的弹性网卡个数与跨地域组播域的个数之和小于或等于5。',
              'type' => 'string',
              'required' => false,
              'example' => 'eni-p0weuda3lszwzjly****',
            ),
            'required' => false,
            'maxItems' => 1000,
          ),
        ),
        4 => 
        array (
          'name' => 'PeerTransitRouterMulticastDomains',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '跨地域的组播域ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '跨地域的组播域ID。

一次支持关联多个跨地域的组播域。请确保您指定的弹性网卡个数与跨地域组播域的个数之和小于或等于5。',
              'type' => 'string',
              'required' => false,
              'example' => 'tr-mcast-domain-5mjb5gjb6dgu98****',
            ),
            'required' => false,
            'maxItems' => 1000,
          ),
        ),
        5 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：发送检查请求，不会创建组播成员。检查项包括是否填写了必需参数、请求格式、业务限制等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。
- **false**（默认值）：发送正常请求，通过检查后直接创建组播成员。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '弹性网卡所属的VPC实例ID。

- 如果弹性网卡所属阿里云账号和您当前登录的阿里云账号为相同账号，本参数可不填。
- 如果弹性网卡所属阿里云账号和您当前登录的阿里云账号为不同账号，本参数必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-wz9fusm6zq8uy7cfa****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'PlainResponse<String>',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EB985B7E-2CF8-5EC9-A7DB-F7C82ABD3ACE',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.GroupIpAddress',
            'errorMessage' => 'The specified GroupIpAddress is illegal.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidMulticastDomainId.NotFound',
            'errorMessage' => 'The specified AttachmentId is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus.MulticastDomainId',
            'errorMessage' => 'The status of MulticastDomainId is incorrect.',
          ),
          3 => 
          array (
            'errorCode' => 'IncorrectStatus.Cen',
            'errorMessage' => 'The status of Cen is incorrect.',
          ),
          4 => 
          array (
            'errorCode' => 'InstanceNotExist',
            'errorMessage' => 'The instance is not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidOperation.PeerMulticastDomainRegion',
            'errorMessage' => 'Operation is invalid because to peer multicast domain in the same region with multicast domain.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidOperation.MulticastDomainStatus',
            'errorMessage' => 'Operation is invalid, due to multicast domain not Active.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidOperation.BandwidthLimitNotExist',
            'errorMessage' => 'Operation is invalid because a bandwidth limit not exist.',
          ),
          8 => 
          array (
            'errorCode' => 'AttachmentNotFound',
            'errorMessage' => '"The attachment does not exist.',
          ),
          9 => 
          array (
            'errorCode' => 'IncorrectStatus.AttachmentId',
            'errorMessage' => 'The status of AttachmentId is incorrect.',
          ),
          10 => 
          array (
            'errorCode' => 'InstanceExist',
            'errorMessage' => 'The instance already exists.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidOperation.NetworkInterfaceNotExist',
            'errorMessage' => 'Operation is invalid bacause network interface not exist.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidOperation.NTRNetworkInterfaceNotSupport',
            'errorMessage' => 'Operation is invalid, due to ntr eni not support.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidOperation.MulticastDomainAssociationNotExist',
            'errorMessage' => 'Operation is invalid because multicast association domain association not exist.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidOperation.MulticastDomainAssociationStatus',
            'errorMessage' => 'Operation is invalid, due to multicast domain association not Active.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidPeerTrMulticastDomainId.NotFound',
            'errorMessage' => 'The specified PeerTrMulticastDomainId is not found.',
          ),
          16 => 
          array (
            'errorCode' => 'IncorrectStatus.PeerTrMulticastDomainId',
            'errorMessage' => 'The status of PeerTrMulticastDomainId is incorrect.',
          ),
          17 => 
          array (
            'errorCode' => 'IllegalParam.PeerTrMulticastDomainId',
            'errorMessage' => 'The specified PeerTrMulticastDomainId is illegal.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidOperation',
            'errorMessage' => 'Operation is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'QuotaFull.MulticastGroupPerDomain',
            'errorMessage' => 'The number of multicast group has exceed the maximum value that can be created.',
          ),
          20 => 
          array (
            'errorCode' => 'QuotaFull.MulticastMemberPerGroup',
            'errorMessage' => 'The number of multicast group member has exceed the maximum value that can be created.',
          ),
          21 => 
          array (
            'errorCode' => 'QuotaFull.MulticastPeerMemberPerGroup',
            'errorMessage' => 'The number of multicast group member peer domain has exceed the maximum value that can be created.',
          ),
          22 => 
          array (
            'errorCode' => 'DryRunOperation',
            'errorMessage' => 'Request validation has been passed with DryRun flag set.',
          ),
          23 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          24 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"EB985B7E-2CF8-5EC9-A7DB-F7C82ABD3ACE\\"\\n}","errorExample":""},{"type":"xml","example":"<RegisterTransitRouterMulticastGroupMembersResponse>\\n    <RequestId>EB985B7E-2CF8-5EC9-A7DB-F7C82ABD3ACE</RequestId>\\n</RegisterTransitRouterMulticastGroupMembersResponse>","errorExample":""}]',
      'title' => '创建组播成员',
      'summary' => '调用RegisterTransitRouterMulticastGroupMembers接口创建或添加组播成员。',
      'description' => '当前企业版转发路由器仅支持将弹性网卡ENI（Elastic Network Interface）指定为组播成员。您可以通过调用`RegisterTransitRouterMulticastGroupMembers`接口将同地域的ENI和跨地域的ENI指定为组播成员。

- 如果您指定**NetworkInterfaceIds**参数的值，则表明您需要将当前地域下的ENI指定为组播成员。请确保ENI所属的交换机已被关联至组播域。具体操作，请参见[AssociateTransitRouterMulticastDomain](~~429778~~)。
- 如果您指定**PeerTransitRouterMulticastDomains**参数的值，则表明您需要将跨地域相同组播IP地址的组播组下的组播成员指定为您当前组播组的组播成员。请确保您已经创建了跨地域连接，具体操作，请参见[CreateTransitRouterPeerAttachment](~~261363~~)。

  例如：您在华东1（杭州）地域拥有一个组播域1，组播域1下拥有一个组播组1，在华东2（上海）地域拥有一个组播域2，组播域2下拥有组播组2，组播组1和组播组2拥有相同的组播IP地址，且华东2（上海）地域的组播组2下拥有一个组播成员2。在您调用`RegisterTransitRouterMulticastGroupMembers`接口为华东1（杭州）地域的组播组1创建组播成员时，如果您指定**PeerTransitRouterMulticastDomains**参数的值为华东2（上海）地域组播域2的ID，则华东2（上海）地域组播组2下的组播成员2，也将是华东1（杭州）地域组播组1下的组播成员。
- `RegisterTransitRouterMulticastGroupMembers`接口属于异步接口，即系统会先返回一个**RequestId**，但组播成员未完全创建成功，系统后台的创建任务仍在进行。您可以调用`ListTransitRouterMulticastGroups`接口查询组播成员的状态。

	- 当组播成员处于**Registering**状态时，表示组播成员正在被创建，在该状态下，您只能对组播成员执行查询操作，不能执行其他操作。
	- 当组播成员处于**Registered**状态时，表示组播成员已被成功创建。',
    ),
    'DisableCenVbrHealthCheck' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-sjfoejfghhjgghjghkg****',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例所在的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'VbrInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-wz95o9aylj181n5****',
          ),
        ),
        3 => 
        array (
          'name' => 'VbrInstanceOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例所属的阿里云账号（主账号）ID。

> 如果VBR实例和云企业网实例不属于同一个账号，本参数必填。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1250123456123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A278B8A6-A5B8-4FDE-9F70-95F0F6A1D68A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A278B8A6-A5B8-4FDE-9F70-95F0F6A1D68A\\"\\n}","errorExample":""},{"type":"xml","example":"<DisableCenVbrHealthCheckResponse>\\n    <RequestId>A278B8A6-A5B8-4FDE-9F70-95F0F6A1D68A</RequestId>\\n</DisableCenVbrHealthCheckResponse>","errorExample":""}]',
      'title' => '关闭边界路由器（VBR）健康检查',
      'summary' => '关闭指定边界路由器（VBR）的健康检查。',
      'description' => '**DisableCenVbrHealthCheck**接口属于异步接口，即系统会先返回一个**RequestId**，但健康检查配置并未删除完成，系统后台的删除任务仍在进行。您可以调用**DescribeCenVbrHealthCheck**接口查询健康检查的配置信息，当查询不到指定的健康检查配置时，则表示健康检查配置删除完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableCenVbrHealthCheck' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-hahhfskfkseig****',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例所在的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shenzhen',
          ),
        ),
        2 => 
        array (
          'name' => 'VbrInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-wz95o9aylj181n5mzk****',
          ),
        ),
        3 => 
        array (
          'name' => 'HealthCheckSourceIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定健康检查源IP地址。支持以下两种配置方式：

- **自动生成源IP**（推荐）：系统将自动分配100.96.0.0/16网段内的IP地址。

- **自定义源IP**：源IP地址可以是10.0.0.0/8、192.168.0.0/16、172.16.0.0/12三个网段内任意一个没有被使用的IP地址。但不能与云企业网中要互通的地址冲突，也不能与VBR实例的阿里云侧、客户侧IP地址冲突。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '192.XX.XX.1',
          ),
        ),
        4 => 
        array (
          'name' => 'HealthCheckTargetIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定健康检查的目标IP地址。

目标IP地址为VBR实例客户侧IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.XX.XX.1',
          ),
        ),
        5 => 
        array (
          'name' => 'VbrInstanceOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例所属的阿里云账号（主账号）ID。

> 如果VBR实例和云企业网实例不属于同一个账号，本参数必填。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1250123456123456',
          ),
        ),
        6 => 
        array (
          'name' => 'HealthCheckInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定健康检查发送连续探测报文的时间间隔。单位：秒。 默认值：**2**。取值范围：**2~3**。



',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '3',
            'minimum' => '1',
            'example' => '2',
          ),
        ),
        7 => 
        array (
          'name' => 'HealthyThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定健康检查发送探测报文的个数。单位：个。 取值范围：**3~8**。默认值：**8**。



',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '8',
            'minimum' => '3',
            'example' => '8',
          ),
        ),
        8 => 
        array (
          'name' => 'HealthCheckOnly',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只开启健康检查的检测功能。取值：

- **true**：是。

        若只开启健康检查的检测功能，健康检查检测到链路不通时不会触发路由切换。

        > 请确保您有其他方式保证链路的冗余性，否则开启本功能后，可能会导致链路中断。

- **false**（默认值）：否。
        
        系统默认关闭本功能。健康检查检测到链路不通时，如果云企业网实例中存在冗余的路由，则健康检查会立刻触发路由切换使用可用链路。
',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
            'default' => 'fasle',
          ),
        ),
        9 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => '描述。  

长度为1~256个字符，但不能以`http:// `或`https://`开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1F59F19C-EFD2-40B1-94D5-65B40CA8E34A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'RouteConflict',
            'errorMessage' => 'The specified route already exists.',
          ),
          1 => 
          array (
            'errorCode' => 'Illegal.SourceIpOrTargetIp',
            'errorMessage' => 'The specified source IP address or destination IP address is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationFailed.StatusNotSupport',
            'errorMessage' => 'The VBR or VPC instance to CBN attachment is not in a valid state for the operation.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationFailed.SourceIpUnSupported',
            'errorMessage' => 'The specified source IP address is unsupported.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidStatus.HealthCheck',
            'errorMessage' => 'Can not modify, please delete health check config first.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationFailed.IpAddressExhausted',
            'errorMessage' => 'No IP addresses are available for allocation.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          7 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1F59F19C-EFD2-40B1-94D5-65B40CA8E34A\\"\\n}","errorExample":"{\\n  \\"RequestId\\": \\"A278B8A6-A5B8-4FDE-9F70-95F0F6A1D68A\\",\\n  \\"CenId\\": \\"Cen-atlpf6evc5kqchpma5\\",\\n  \\"VbrId\\": \\"vbr-il7ldy0ux6rb15lc2snrw\\",\\n  \\"RegionId\\": \\"cn-hangzhou\\",\\n  \\"SourceIp\\": \\"10.10.10.10\\",\\n  \\"TargetIp\\": \\"10.10.10.11\\",\\n  \\"PacketNum\\": \\"3\\",\\n  \\"Status\\": \\"Enable\\"\\n}"},{"type":"xml","example":"<EnableCenVbrHealthCheckResponse>\\r\\n<RequestId>1F59F19C-EFD2-40B1-94D5-65B40CA8E34A</RequestId>\\r\\n</EnableCenVbrHealthCheckResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<EnableCenVbrHealthCheckResponse>\\n    <RequestId>A278B8A6-A5B8-4FDE-9F70-95F0F6A1D68A</RequestId>\\n    <CenId>Cen-atlpf6evc5kqchpma5</CenId>\\n    <VbrId>vbr-il7ldy0ux6rb15lc2snrw </VbrId>\\n    <RegionId>cn-hangzhou</RegionId>\\n    <SourceIp>10.10.10.10</SourceIp>\\n    <TargetIp>10.10.10.11</TargetIp>\\n    <PacketNum>3</PacketNum>\\n    <Status>Enable </Status>\\n</EnableCenVbrHealthCheckResponse>"}]',
      'title' => '开启边界路由器（VBR）健康检查功能',
      'summary' => '开启边界路由器（VBR）的健康检查功能，确保及时发现出现故障的物理专线，也可修改VBR的健康检查配置。',
      'description' => '您可以通过为VBR实例设置健康检查，监测本地数据中心与阿里云之间物理专线的连接状况，以便及时发现问题。

在使用健康检查功能前，请先了解以下信息：

- 如果您的边界路由器实例使用的是静态路由，那么在您设置完健康检查后，您需要在边界路由器实例连接的本地数据中心中添加一条静态路由条目。
    静态路由的目标网段为健康检查的源IP地址，网段掩码为32位，下一跳为边界路由器实例的阿里云侧IP地址。

- 如果您的边界路由器实例使用的是BGP动态路由协议，则无需在本地数据中心添加路由条目。
- **EnableCenVbrHealthCheck**接口属于异步接口，即系统会先返回一个**RequestId**，但该健康检查实例并未创建或修改完成，系统后台的创建任务或修改任务仍在进行。您可以调用**DescribeCenVbrHealthCheck**接口查询健康检查的配置信息，如果可以查到健康检查的配置信息，则表示健康检查创建或者修改完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCenVbrHealthCheck' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-6hpdgj7ni6pz1k****',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrInstanceRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例所在的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'VbrInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'vbr-bp1kznorjeembsuhl****',
          ),
        ),
        3 => 
        array (
          'name' => 'VbrInstanceOwnerId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VBR实例所属的阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1250123456123456',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值：**1**。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。取值范围：**1**~**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B8C9702E-304A-4E18-AC89-BE2D91C2C176',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'VbrHealthChecks' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'VbrHealthCheck' => 
                  array (
                    'description' => 'VBR实例的健康检查配置信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'HealthCheckTargetIp' => 
                        array (
                          'description' => '健康检查的目标IP地址。',
                          'type' => 'string',
                          'example' => '192.XX.XX.1',
                        ),
                        'VbrInstanceId' => 
                        array (
                          'description' => 'VBR实例ID。',
                          'type' => 'string',
                          'example' => 'vbr-bp1kznorjeembsuhl****',
                        ),
                        'VbrInstanceRegionId' => 
                        array (
                          'description' => 'VBR实例所在的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'CenId' => 
                        array (
                          'description' => '云企业网实例ID。',
                          'type' => 'string',
                          'example' => 'cen-6hpdgj7ni6pz1k****',
                        ),
                        'HealthyThreshold' => 
                        array (
                          'description' => '健康检查发送探测报文的个数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '8',
                        ),
                        'HealthCheckInterval' => 
                        array (
                          'description' => '健康检查发送连续探测报文的时间间隔。单位：秒。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'HealthCheckSourceIp' => 
                        array (
                          'description' => '健康检查的源IP地址。',
                          'type' => 'string',
                          'example' => '172.XX.XX.1',
                        ),
                        'HealthCheckOnly' => 
                        array (
                          'description' => '是否只开启了健康检查的检测功能。

- **true**：是。

        若只开启健康检查的检测功能，健康检查检测到链路不通时不会触发路由切换。

- **false**：否。

        若未开启本功能，健康检查检测到链路不通时，如果云企业网实例中存在冗余的路由，健康检查会立刻触发路由切换使用可用链路。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息。',
                          'type' => 'string',
                          'example' => 'healthcheck_description',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          1 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"B8C9702E-304A-4E18-AC89-BE2D91C2C176\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"VbrHealthChecks\\": {\\n    \\"VbrHealthCheck\\": [\\n      {\\n        \\"HealthCheckTargetIp\\": \\"192.XX.XX.1\\",\\n        \\"VbrInstanceId\\": \\"vbr-bp1kznorjeembsuhl****\\",\\n        \\"VbrInstanceRegionId\\": \\"cn-hangzhou\\",\\n        \\"CenId\\": \\"cen-6hpdgj7ni6pz1k****\\",\\n        \\"HealthyThreshold\\": 8,\\n        \\"HealthCheckInterval\\": 2,\\n        \\"HealthCheckSourceIp\\": \\"172.XX.XX.1\\",\\n        \\"HealthCheckOnly\\": false,\\n        \\"Description\\": \\"healthcheck_description\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeCenVbrHealthCheckResponse>\\n    <PageSize>10</PageSize>\\n    <RequestId>B8C9702E-304A-4E18-AC89-BE2D91C2C176</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <TotalCount>1</TotalCount>\\n    <VbrHealthChecks>\\n        <HealthCheckTargetIp>192.XX.XX.1</HealthCheckTargetIp>\\n        <VbrInstanceId>vbr-bp1kznorjeembsuhl****</VbrInstanceId>\\n        <VbrInstanceRegionId>cn-hangzhou</VbrInstanceRegionId>\\n        <CenId>cen-6hpdgj7ni6pz1k****</CenId>\\n        <HealthyThreshold>8</HealthyThreshold>\\n        <HealthCheckInterval>2</HealthCheckInterval>\\n        <HealthCheckSourceIp>172.XX.XX.1</HealthCheckSourceIp>\\n        <HealthCheckOnly>false</HealthCheckOnly>\\n    </VbrHealthChecks>\\n</DescribeCenVbrHealthCheckResponse>","errorExample":""}]',
      'title' => '查询边界路由器（VBR）健康检查信息',
      'summary' => '查询指定地域内边界路由器（VBR）健康检查信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateFlowlog' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '72303',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREcbnMGIE06',
          1 => 'FEATUREcbnKD6E3I',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'FlowLogName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'myFlowlog',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'myFlowlog',
          ),
        ),
        4 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        5 => 
        array (
          'name' => 'ProjectName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '存储捕获流量的Project。

- 如果您已经在当前地域创建了Project，您可以输入已创建的Project的名称。
- 如果您未在当前地域创建Project，您可以为Project自定义名称，系统会帮您自动创建Project。

    Project名称在阿里云地域内全局唯一，创建后不可修改。其命名规则如下：

    - Project名称必须全局唯一。
    - 只能包括小写字母、数字和短划线（-）。
    - 必须以小写字母或者数字开头和结尾。
    - 长度为3~63字符。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'flowlog-project',
          ),
        ),
        6 => 
        array (
          'name' => 'LogStoreName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '存储捕获流量的Logstore。

- 如果您已经在当前地域创建了Logstore，您可以输入已创建的Logstore的名称。
- 如果您未在当前地域创建Logstore，您可以为Logstore自定义名称，系统会帮您自动创建Logstore。
    Logstore名称。其命名规则如下：

    - 同一个Project下，Logstore名称不可重复。
    - 只能包括小写字母、数字、短划线（-）和下划线（_）。
    - 必须以小写字母或者数字开头和结尾。
    - 长度为3~63字符。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'flowlog-logstore',
          ),
        ),
        7 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志捕获流量的捕获窗口时长。单位：秒。取值：**60**或**600**。默认值：**600**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '600',
          ),
        ),
        8 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跨地域连接ID或者VBR连接ID。

> 本参数为必填参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-r6g0m3epjehw57****',
          ),
        ),
        9 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '54B48E3D-DF70-471B-AA93-08E683A1B457',
              ),
              'Success' => 
              array (
                'description' => '当前接口调用是否成功。

- **true**：成功。

- **false**：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'FlowLogId' => 
              array (
                'description' => '流日志ID。',
                'type' => 'string',
                'example' => 'flowlog-m5evbtbpt****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProjectOrLogstoreNotExist',
            'errorMessage' => 'The specified project or logstore does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SourceProjectNotExist',
            'errorMessage' => 'The Source Project or logstore does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationUnsupported.action',
            'errorMessage' => 'This action is not support.',
          ),
          3 => 
          array (
            'errorCode' => 'RuleExist',
            'errorMessage' => 'The rule has already existed.',
          ),
          4 => 
          array (
            'errorCode' => 'QuotaExceeded.FlowlogCount',
            'errorMessage' => 'This user has reached the maximum instance number of flowlog.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidFlowlogId.exist',
            'errorMessage' => 'This cenId already has flowlog instance existed.',
          ),
          6 => 
          array (
            'errorCode' => 'Flowlog.AlreayExist',
            'errorMessage' => 'This attachment already has existed flowlog instance.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.TransitRouterAttachmentId',
            'errorMessage' => 'TransitRouterAttachmentId is illegal.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidTransitRouterAttachmentId.NotFound',
            'errorMessage' => 'The TransitRouterAttachmentId is not found.',
          ),
          9 => 
          array (
            'errorCode' => 'IncorrectStatus.flowlog',
            'errorMessage' => 'This action is not allowed in the current flow log status.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidOperation.TransitRouterNotExist',
            'errorMessage' => 'Operation is invalid because the transit router not exist.',
          ),
          11 => 
          array (
            'errorCode' => 'IncorrectStatus.TransitRouterAttachmentId',
            'errorMessage' => 'The resource is not in a valid state for the attachment operation.',
          ),
          12 => 
          array (
            'errorCode' => 'ProjectExist',
            'errorMessage' => 'Project already exist, please try a different project name.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParameter.ProjectName',
            'errorMessage' => 'Project name is invalid or does not belong to specified region.',
          ),
          14 => 
          array (
            'errorCode' => 'IncorrectStatus.TrFlowlog',
            'errorMessage' => 'Flowlog status for specified TransitRouter is invalid for this operation.',
          ),
          15 => 
          array (
            'errorCode' => 'OperationInvalid.IncompatibleFlowlogExist',
            'errorMessage' => 'Operation is invalid because incompatible flowlog config exists.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParameter.LogFormatString',
            'errorMessage' => 'LogFormatString is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          18 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'NoPermission.AliyunServiceRoleForTRFlowLog',
            'errorMessage' => 'You are not authorized to create service linked role AliyunServiceRoleForTRFlowLog.',
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'asynchronous',
        'callback' => 'Cbn::2017-09-12::DescribeFlowlogs',
        'callbackInterval' => 3000,
        'maxCallbackTimes' => 30,
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54B48E3D-DF70-471B-AA93-08E683A1B457\\",\\n  \\"Success\\": \\"true\\",\\n  \\"FlowLogId\\": \\"flowlog-m5evbtbpt****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateFlowlogResponse>\\n    <RequestId>54B48E3D-DF70-471B-AA93-08E683A1B457</RequestId>\\n    <Success>true</Success>\\n    <FlowLogId>flowlog-m5evbtbpt****</FlowLogId>\\n</CreateFlowlogResponse>","errorExample":""}]',
      'title' => '创建流日志',
      'summary' => '创建流日志。',
      'description' => '流日志可以帮您捕获转发路由器之间的跨地域流量信息和边界路由器VBR（Virtual border router）连接的流量信息，在创建流日志前，请先了解以下说明：
- 仅企业版转发路由器支持创建流日志。
- 当前仅部分地域的流日志功能支持捕获VBR连接的流量信息。关于地域的信息，请参见[使用限制](~~339822~~)。
- 对于跨地域连接的流量信息，流日志仅捕获转发路由器出方向的流量信息，不支持捕获转发路由器入方向的流量信息。
    
    例如，美国（硅谷）地域的云服务器ECS（Elastic Compute Service）实例通过云企业网访问美国（弗吉尼亚）地域的ECS实例，在您为美国（弗吉尼亚）地域的转发路由器配置流日志后，您可以在日志服务控制台查看美国（弗吉尼亚）ECS实例向美国（硅谷）ECS实例发送的报文信息，但无法查看美国（硅谷）ECS实例向美国（弗吉尼亚）ECS实例发送的报文信息。如果您需要查看美国（硅谷）ECS实例向美国（弗吉尼亚）ECS实例发送的报文信息，您需要在美国（硅谷）地域的转发路由器上也配置流日志。
- `CreateFlowlog`接口属于异步接口，即系统会先返回一个流日志ID，但是流日志并未创建完成，系统后台的创建任务仍在进行。您可以调用`DescribeFlowlogs`接口查询流日志的状态。

    - 当流日志处于**Creating**状态时，表示流日志正在创建中，在该状态下，您只能执行查询操作，不能执行其他操作。
    - 当流日志处于**Active**状态时，表示流日志创建完成。
# 前提条件

在创建流日志前，请确保您已经创建了跨地域连接或者VBR连接。具体操作，请参见[CreateTransitRouterPeerAttachment](~~261363~~)或者[CreateTransitRouterVbrAttachment](~~261361~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteFlowlog' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'abilityTreeCode' => '72323',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREcbnMGIE06',
          1 => 'FEATUREcbnKD6E3I',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'flowlog-m5evbtbpt****',
          ),
        ),
        3 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '当前接口调用是否成功。

- **true**：成功。
- **false**：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProjectOrLogstoreNotExist',
            'errorMessage' => 'The specified project or logstore does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SourceProjectNotExist',
            'errorMessage' => 'The Source Project or logstore does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationUnsupported.action',
            'errorMessage' => 'This action is not support.',
          ),
          3 => 
          array (
            'errorCode' => 'QuotaExceeded.FlowlogCount',
            'errorMessage' => 'This user has reached the maximum instance number of flowlog.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidFlowlogId.exist',
            'errorMessage' => 'This cenId already has flowlog instance existed.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidFlowlogId.NotFound',
            'errorMessage' => 'The specified flowlog id does not exist or does not match the cen Id.',
          ),
          6 => 
          array (
            'errorCode' => 'IncorrectStatus.flowlog',
            'errorMessage' => 'Invalid flowlog status.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.TrFlowlog',
            'errorMessage' => 'Flowlog status for specified TransitRouter is invalid for this operation.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          9 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Success\\": \\"true\\",\\n  \\"RequestId\\": \\"F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteFlowlogResponse>\\n    <Success>true</Success>\\n    <RequestId>F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1</RequestId>\\n</DeleteFlowlogResponse>","errorExample":""}]',
      'title' => '删除流日志',
      'summary' => '删除流日志。',
      'description' => '`DeleteFlowlog`接口属于异步接口，即系统会先返回一个**RequestId**，但流日志并未被完全删除，系统后台的删除任务仍在进行。您可以调用`DescribeFlowlogs`接口查询流日志的状态。
- 当流日志处于**Deleting**状态时，表示流日志正在被删除，在该状态下，您只能执行查询操作，不能执行其他操作。
- 当`DescribeFlowlogs`接口无法查询到该流日志时，表示流日志已被完全删除。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyFlowLogAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '72413',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREcbnMGIE06',
          1 => 'FEATUREcbnKD6E3I',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的新名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'myFlowlog',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志新的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'myFlowlog',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属的地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'flowlog-m5evbtbpt****',
          ),
        ),
        5 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '当前接口调用是否成功。

- **true**：成功。

- **false**：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9A411874-2EC8-4633-9D30-9012DCE89DD1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter.FlowLogId',
            'errorMessage' => 'The specified flowlog id does not exist or does not match the cen Id.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.flowlog',
            'errorMessage' => 'Invalid flowlog status.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          3 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Success\\": \\"true\\",\\n  \\"RequestId\\": \\"9A411874-2EC8-4633-9D30-9012DCE89DD1\\"\\n}","type":"json"}]',
      'title' => '编辑流日志的名称和描述',
      'summary' => '编辑流日志的名称和描述。',
      'description' => '# 使用说明

`ModifyFlowLogAttribute`接口属于异步接口，即系统会先返回一个**RequestId**，但流日志的修改操作并未完成，系统后台的修改操作仍在进行。您可以调用`DescribeFlowlogs`接口查询流日志的状态。

- 当流日志处于**Modifying**状态时，表示流日志正在修改中，在该状态下，您只能执行查询操作，不能执行其他操作。
- 当流日志处于**Active**状态时，表示流日志修改完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeFlowlogs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '72360',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREcbnMGIE06',
          1 => 'FEATUREcbnKD6E3I',
          2 => 'FEATUREcbnWRIR8E',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'FlowLogName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的名称。

名称可以为空或长度为1～128个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'myFlowlog',
          ),
        ),
        3 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'flowlog-m5evbtbpt****',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的描述信息。

描述可以为空或长度为1～256个字符，不能以http://或https://开头。',
            'type' => 'string',
            'required' => false,
            'example' => 'myFlowlog',
          ),
        ),
        5 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
        6 => 
        array (
          'name' => 'ProjectName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '存储捕获流量的Project名称。

Project名称长度为3~63字符，必须以小写字母或者数字开头和结尾，只能包括小写字母、数字和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'FlowLogProject',
          ),
        ),
        7 => 
        array (
          'name' => 'LogStoreName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '存储捕获流量的LogStore名称。

Logstore名称长度为3~63字符，必须以小写字母或者数字开头和结尾，只能包括小写字母、数字、短划线（-）和下划线（_）。',
            'type' => 'string',
            'required' => false,
            'example' => 'FlowLogStore',
          ),
        ),
        8 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的状态。取值：

- **Active**：已启动。

- **Inactive**：未启动。
',
            'type' => 'string',
            'required' => false,
            'example' => 'Active',
          ),
        ),
        9 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        10 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。最小值：**1**。默认值：**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
            'default' => '20',
          ),
        ),
        11 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签信息。

一次最多支持输入20个标签信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '资源的标签键。

一旦传入该值，则不允许为空字符串。最多支持64个字符，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

一次最多支持输入20个标签的标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '资源的标签值。

标签值可以为空或输入不超过128个字符的字符串，不能以`aliyun`或者`acs:`开头，不能包含`http://`或者`https:// `。

每一个标签键对应一个标签值，一次最多支持输入20个标签键对应的标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'TagValue',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
        12 => 
        array (
          'name' => 'TransitRouterAttachmentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络实例连接ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'tr-attach-qieks13jnt1cchy***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'string',
                'example' => '20',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'string',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'string',
                'example' => '1',
              ),
              'Success' => 
              array (
                'description' => '当前接口调用是否成功。

- **true**：成功。

- **false**：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'FlowLogs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'FlowLog' => 
                  array (
                    'description' => '流日志信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '流日志的信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '流日志的状态。

- **Active**：已启动。

- **Inactive**：未启动。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'CreationTime' => 
                        array (
                          'description' => '流日志的创建时间。

时间按照ISO8601标准表示，并使用UTC时间。格式为：YYYY-MM-DDThh:mm:ssZ。',
                          'type' => 'string',
                          'example' => '2021-07-24T13:00:52Z',
                        ),
                        'FlowLogName' => 
                        array (
                          'description' => '流日志的名称。',
                          'type' => 'string',
                          'example' => 'myFlowlog',
                        ),
                        'Description' => 
                        array (
                          'description' => '流日志的描述信息。',
                          'type' => 'string',
                          'example' => 'myFlowlog',
                        ),
                        'ProjectName' => 
                        array (
                          'description' => '存储捕获流量的Project名称。',
                          'type' => 'string',
                          'example' => 'FlowLogProject',
                        ),
                        'CenId' => 
                        array (
                          'description' => '云企业网实例ID。',
                          'type' => 'string',
                          'example' => 'cen-7qthudw0ll6jmc****',
                        ),
                        'LogStoreName' => 
                        array (
                          'description' => '存储捕获流量的LogStore名称。',
                          'type' => 'string',
                          'example' => 'FlowLogStore',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '流日志所属地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'FlowLogId' => 
                        array (
                          'description' => '流日志ID。',
                          'type' => 'string',
                          'example' => 'flowlog-m5evbtbpt****',
                        ),
                        'TransitRouterAttachmentId' => 
                        array (
                          'description' => '网络实例连接ID。',
                          'type' => 'string',
                          'example' => 'tr-attach-5x4o4ynzuqbv6g****',
                        ),
                        'TransitRouterId' => 
                        array (
                          'type' => 'string',
                        ),
                        'LogFormatString' => 
                        array (
                          'type' => 'string',
                        ),
                        'FlowLogVersion' => 
                        array (
                          'type' => 'string',
                        ),
                        'Interval' => 
                        array (
                          'description' => '流日志捕获流量的捕获窗口时长。单位：秒。取值：**60**或**600**。默认值：**600**。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '60',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '标签列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'TagKey',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'TagValue',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationUnsupported.action',
            'errorMessage' => 'This action is not support.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidFlowlogId.NotFound',
            'errorMessage' => 'The specified flowlog id does not exist or does not match the cen Id.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.TagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.TagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'Description is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.Interval',
            'errorMessage' => 'Interval is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.FlowLogVersion',
            'errorMessage' => 'Flowlog version is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          9 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": \\"20\\",\\n  \\"PageNumber\\": \\"1\\",\\n  \\"RequestId\\": \\"F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1\\",\\n  \\"TotalCount\\": \\"1\\",\\n  \\"Success\\": \\"true\\",\\n  \\"FlowLogs\\": {\\n    \\"FlowLog\\": [\\n      {\\n        \\"Status\\": \\"Active\\",\\n        \\"CreationTime\\": \\"2021-07-24T13:00:52Z\\",\\n        \\"FlowLogName\\": \\"myFlowlog\\",\\n        \\"Description\\": \\"myFlowlog\\",\\n        \\"ProjectName\\": \\"FlowLogProject\\",\\n        \\"CenId\\": \\"cen-7qthudw0ll6jmc****\\",\\n        \\"LogStoreName\\": \\"FlowLogStore\\",\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"FlowLogId\\": \\"flowlog-m5evbtbpt****\\",\\n        \\"TransitRouterAttachmentId\\": \\"tr-attach-5x4o4ynzuqbv6g****\\",\\n        \\"TransitRouterId\\": \\"\\",\\n        \\"LogFormatString\\": \\"\\",\\n        \\"FlowLogVersion\\": \\"\\",\\n        \\"Interval\\": 60,\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"TagKey\\",\\n              \\"Value\\": \\"TagValue\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeFlowlogsResponse>\\n    <PageSize>20</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <RequestId>F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1</RequestId>\\n    <TotalCount>1</TotalCount>\\n    <Success>true</Success>\\n    <FlowLogs>\\n        <Status>Active</Status>\\n        <CreationTime>2021-07-24T13:00:52Z</CreationTime>\\n        <FlowLogName>myFlowlog</FlowLogName>\\n        <Description>myFlowlog</Description>\\n        <ProjectName>FlowLogProject</ProjectName>\\n        <CenId>cen-7qthudw0ll6jmc****</CenId>\\n        <LogStoreName>FlowLogStore</LogStoreName>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <FlowLogId>flowlog-m5evbtbpt****</FlowLogId>\\n        <Tags>\\n            <Key>TagKey</Key>\\n            <Value>TagValue</Value>\\n        </Tags>\\n    </FlowLogs>\\n</DescribeFlowlogsResponse>","errorExample":""}]',
      'title' => '查询流日志',
      'summary' => '查询流日志。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ActiveFlowLog' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '72280',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREcbnKD6E3I',
          1 => 'FEATUREcbnMGIE06',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'flowlog-m5evbtbpt****',
          ),
        ),
        3 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '当前接口调用是否成功。

- **true**：成功。
- **false**：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProjectOrLogstoreNotExist',
            'errorMessage' => 'The specified project or logstore does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SourceProjectNotExist',
            'errorMessage' => 'The Source Project or logstore does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationUnsupported.action',
            'errorMessage' => 'This action is not support.',
          ),
          3 => 
          array (
            'errorCode' => 'RuleExist',
            'errorMessage' => 'The rule has already existed.',
          ),
          4 => 
          array (
            'errorCode' => 'QuotaExceeded.FlowlogCount',
            'errorMessage' => 'This user has reached the maximum instance number of flowlog.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidFlowlogId.exist',
            'errorMessage' => 'This cenId already has flowlog instance existed.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidFlowlogId.NotFound',
            'errorMessage' => 'The specified flowlog id does not exist or does not match the cen Id.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.flowlog',
            'errorMessage' => 'Invalid flowlog status.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectStatus.TrFlowlog',
            'errorMessage' => 'Flowlog status for specified TransitRouter is invalid for this operation.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          10 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Success\\": \\"true\\",\\n  \\"RequestId\\": \\"F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1\\"\\n}","errorExample":""},{"type":"xml","example":"<ActiveFlowLogResponse>\\n    <Success>true</Success>\\n    <RequestId>F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1</RequestId>\\n</ActiveFlowLogResponse>","errorExample":""}]',
      'title' => '启动流日志',
      'summary' => '启动流日志，启动后开始捕获指定资源的流量。',
      'description' => '- 创建流日志后，流日志默认为启动状态。如果您中途停止了流日志，您可以调用本接口重新启动流日志。
- `ActiveFlowLog`接口属于异步接口，即系统会先返回一个**RequestId**，但流日志并未完全启动，系统后台的启动任务仍在进行。您可以调用`DescribeFlowlogs`接口查询流日志的状态。
    
    - 当流日志处于**Modifying**状态时，表示流日志正在启动中，在该状态下，您只能执行查询操作，不能执行其他操作。
    - 当流日志处于**Active**状态时，表示流日志已启动完成。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeactiveFlowLog' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '72312',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREcbnKD6E3I',
          1 => 'FEATUREcbnMGIE06',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '123e4567-e89b-12d3-a456-42665544****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志所属地域ID。

您可以通过调用[DescribeChildInstanceRegions](~~132080~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'flowlog-m5evbtbpt****',
          ),
        ),
        3 => 
        array (
          'name' => 'CenId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Success' => 
              array (
                'description' => '当前接口调用是否成功。

- **true**：成功。
- **false**：失败。',
                'type' => 'string',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProjectOrLogstoreNotExist',
            'errorMessage' => 'The specified project or logstore does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SourceProjectNotExist',
            'errorMessage' => 'The Source Project or logstore does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationUnsupported.action',
            'errorMessage' => 'This action is not support.',
          ),
          3 => 
          array (
            'errorCode' => 'RuleExist',
            'errorMessage' => 'The rule has already existed.',
          ),
          4 => 
          array (
            'errorCode' => 'QuotaExceeded.FlowlogCount',
            'errorMessage' => 'This user has reached the maximum instance number of flowlog.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidFlowlogId.exist',
            'errorMessage' => 'This cenId already has flowlog instance existed.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidFlowlogId.NotFound',
            'errorMessage' => 'The specified flowlog id does not exist or does not match the cen Id.',
          ),
          7 => 
          array (
            'errorCode' => 'IncorrectStatus.flowlog',
            'errorMessage' => 'Invalid flowlog status.',
          ),
          8 => 
          array (
            'errorCode' => 'IncorrectStatus.TrFlowlog',
            'errorMessage' => 'Flowlog status for specified TransitRouter is invalid for this operation.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          10 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Success\\": \\"true\\",\\n  \\"RequestId\\": \\"F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1\\"\\n}","errorExample":""},{"type":"xml","example":"<DeactiveFlowLogResponse>\\n    <Success>true</Success>\\n    <RequestId>F7DDDC17-FA06-4AC2-8F35-59D2470FCFC1</RequestId>\\n</DeactiveFlowLogResponse>","errorExample":""}]',
      'title' => '停止流日志',
      'summary' => '停止流日志，停止后不再捕获指定资源的流量。',
      'description' => '`DeactiveFlowLog`接口属于异步接口，即系统会先返回一个**RequestId**，但流日志并未被完全停止，系统后台的停止任务仍在进行。您可以调用`DescribeFlowlogs`接口查询流日志的状态。

- 当流日志处于**Modifying**状态时，表示流日志正在被停止，在该状态下，您只能执行查询操作，不能执行其他操作。
- 当流日志处于**Inactive**状态时，表示流日志已被停止。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：

**Cen**，表示云企业网实例。

**BandwidthPackage**，表示带宽包实例。

**TransitRouter**，表示转发路由器实例。

**TransitRouterVpcAttachment**，表示Vpc连接实例。

**TransitRouterVbrAttachment**，表示Vbr连接实例。

**TransitRouterPeerAttachment**，表示跨地域连接实例。

**TransitRouterVpnAttachment**，表示Vpn连接实例。

**TransitRouterRouteTable**，表示路由表实例。

**Flowlog**，表示Flowlog实例。

**TransitRouterMulticastDomain**，表示组播域实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 第一次查询和没有下一次查询时，均无需填写。

- 如果有下一次查询，取值为上一次API调用返回的NextToken值。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每批次显示的条目数。取值范围：**1**~**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '云企业网实例ID。

一次最多支持输入20个云企业网实例ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '云企业网实例ID。

一次最多支持输入20个云企业网实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'cen-8z69wtwqel33lq****',
            ),
            'required' => false,
            'example' => 'cen-8z69wtwqel33lq****',
            'maxItems' => 21,
          ),
        ),
        4 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '云企业网实例的标签信息。

一次最多支持查询20个标签。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '云企业网实例的标签信息。

一次最多支持查询20个标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。

一个标签键最多支持输入64个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一次最多支持输入20个标签的标签键。

',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

一个标签值最多支持输入128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

一次最多支持输入20个标签的标签值。
',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'Bp',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 21,
          ),
        ),
        5 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源实例所属地域ID。

当资源类型为Cen和BandwidthPackage不需要填写，其余类型必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '是否拥有下一次查询的令牌（Token）。取值：

- 如果**NextToken**为空表示没有下一次查询。

- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。',
                'type' => 'string',
                'example' => 'FFmyTO70tTpLG6I3FmYAXGKPd****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '165B5C86-2033-5954-A89D-4CD83BA06C85',
              ),
              'TagResources' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TagResource' => 
                  array (
                    'description' => '资源及标签信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ResourceType' => 
                        array (
                          'description' => '资源类型。取值：

**Cen**，表示云企业网实例。

**BandwidthPackage**，表示带宽包实例。

**TransitRouter**，表示转发路由器实例。

**TransitRouterVpcAttachment**，表示Vpc连接实例。

**TransitRouterVbrAttachment**，表示Vbr连接实例。

**TransitRouterPeerAttachment**，表示跨地域连接实例。

**TransitRouterVpnAttachment**，表示Vpn连接实例。

**TransitRouterRouteTable**，表示路由表实例。

**Flowlog**，表示Flowlog实例。

**TransitRouterMulticastDomain**，表示组播域实例。',
                          'type' => 'string',
                          'example' => 'CEN',
                        ),
                        'TagValue' => 
                        array (
                          'description' => '标签值。',
                          'type' => 'string',
                          'example' => 'Bp',
                        ),
                        'ResourceId' => 
                        array (
                          'description' => '云企业网实例ID。',
                          'type' => 'string',
                          'example' => 'cen-8z69wtwqel33lq****',
                        ),
                        'TagKey' => 
                        array (
                          'description' => '标签键。

',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceType.NotFound',
            'errorMessage' => 'The instance type is not found',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidInstanceIds.NotFound',
            'errorMessage' => 'The instanceIds are not found',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.TagKeys',
            'errorMessage' => 'The request do not allow to operate the tag keys',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.TagNum',
            'errorMessage' => 'Custom Tags quota exceeded',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidTagScope.NotFound',
            'errorMessage' => 'The tag scope is not found',
          ),
          8 => 
          array (
            'errorCode' => 'Forbidden.NotAllowedCategary',
            'errorMessage' => 'The System tag is not valid',
          ),
          9 => 
          array (
            'errorCode' => 'SizeLimitExceeded.ResourceIdNum',
            'errorMessage' => 'The ResourceIds parameter\'s number is exceed , Valid : 20',
          ),
          10 => 
          array (
            'errorCode' => 'BothEmpty.TagsAndResources',
            'errorMessage' => 'Both of Tags and ResourceIds is empty.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.NextToken',
            'errorMessage' => 'The parameter NextToken is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.Region',
            'errorMessage' => 'The specified region is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          14 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"NextToken\\": \\"FFmyTO70tTpLG6I3FmYAXGKPd****\\",\\n  \\"RequestId\\": \\"165B5C86-2033-5954-A89D-4CD83BA06C85\\",\\n  \\"TagResources\\": {\\n    \\"TagResource\\": [\\n      {\\n        \\"ResourceType\\": \\"CEN\\",\\n        \\"TagValue\\": \\"Bp\\",\\n        \\"ResourceId\\": \\"cen-8z69wtwqel33lq****\\",\\n        \\"TagKey\\": \\"test\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '查询CEN实例已经绑定的标签列表',
      'summary' => '查询云企业网实例绑定的标签信息。',
      'description' => '在调用ListTagResources接口时，请求参数**ResourceId.N**和**Tag.N.Key**至少选择输入一个：

- 如果只输入**ResourceId.N**，表示要查询指定云企业网实例下已经绑定的标签信息。
- 如果只输入**Tag.N.Key**，表示要查询已绑定此标签键的所有云企业网实例的信息。
- 如果同时输入**ResourceId.N**和**Tag.N.Key**，表示要查询指定云企业网实例下绑定的指定标签的信息。
    - 请确保**ResourceId.N**和**Tag.N.Key**的值相互对应，如果不对应，则返回结果为空。
    - 如果同时输入了多个标签键，则多个标签键之间为**与**的关系。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'TagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：

**Cen**，表示云企业网实例。

**BandwidthPackage**，表示带宽包实例。

**TransitRouter**，表示转发路由器实例。

**TransitRouterVpcAttachment**，表示Vpc连接实例。

**TransitRouterVbrAttachment**，表示Vbr连接实例。

**TransitRouterPeerAttachment**，表示跨地域连接实例。

**TransitRouterVpnAttachment**，表示Vpn连接实例。

**TransitRouterRouteTable**，表示路由表实例。

**Flowlog**，表示Flowlog实例。

**TransitRouterMulticastDomain**，表示组播域实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'cen',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源列表。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。

支持输入多个资源ID。**N**的取值范围：**1**~**20**。',
              'type' => 'string',
              'required' => false,
              'example' => 'cen-pfa6ugf3xl0qsd****',
            ),
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
            'maxItems' => 21,
          ),
        ),
        2 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。

支持输入多个标签键。**N**的取值范围：**1**~**20**。

标签键最多支持64个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => true,
                  'docRequired' => true,
                  'example' => 'TagKey',
                ),
                'Value' => 
                array (
                  'description' => '标签值。

每一个标签键对应一个标签值。**N**的取值范围：**1**~**20**。

标签值最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。',
                  'type' => 'string',
                  'required' => true,
                  'docRequired' => true,
                  'example' => 'TagValue',
                ),
              ),
              'required' => true,
              'docRequired' => true,
            ),
            'required' => true,
            'docRequired' => true,
            'maxItems' => 21,
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源实例所属地域ID。

当资源类型为Cen和BandwidthPackage不需要填写，其余类型必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C46FF5A8-C5F0-4024-8262-B16B639225A0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceType.NotFound',
            'errorMessage' => 'The instance type is not found',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidInstanceIds.NotFound',
            'errorMessage' => 'The instanceIds are not found',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.TagKeys',
            'errorMessage' => 'The request do not allow to operate the tag keys',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.TagNum',
            'errorMessage' => 'Custom Tags quota exceeded',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidTagScope.NotFound',
            'errorMessage' => 'The tag scope is not found',
          ),
          8 => 
          array (
            'errorCode' => 'Forbidden.NotAllowedCategary',
            'errorMessage' => 'The System tag is not valid',
          ),
          9 => 
          array (
            'errorCode' => 'SizeLimitExceeded.ResourceIdNum',
            'errorMessage' => 'The ResourceIds parameter\'s number is exceed , Valid : 20',
          ),
          10 => 
          array (
            'errorCode' => 'MissingParameter.TagValue',
            'errorMessage' => 'The specified parameter TagValue is missing',
          ),
          11 => 
          array (
            'errorCode' => 'DuplicatedParam.TagKey',
            'errorMessage' => 'The parameter TagKey is duplicated.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParamLength.Tag',
            'errorMessage' => 'The specified length of Tag is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.Region',
            'errorMessage' => 'The specified region is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'MissingParameter.TagKey',
            'errorMessage' => 'TagKey must be specified.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          16 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C46FF5A8-C5F0-4024-8262-B16B639225A0\\"\\n}","errorExample":""},{"type":"xml","example":"<TagResourcesResponse>\\r\\n    <RequestId>C46FF5A8-C5F0-4024-8262-B16B639225A0</RequestId>\\r\\n</TagResourcesResponse>","errorExample":""}]',
      'title' => '为指定的实例创建并绑定标签',
      'summary' => '为资源创建并绑定标签。',
      'description' => '- 标签由标签键和标签值组成。添加标签时，标签键和标签值为必填项。
- 如果要为一个云企业网实例添加多个标签，则该实例下多个标签的标签键不能重复。
- 一个云企业网实例最多可绑定20个标签。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UntagResources' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：

**Cen**，表示云企业网实例。

**BandwidthPackage**，表示带宽包实例。

**TransitRouter**，表示转发路由器实例。

**TransitRouterVpcAttachment**，表示Vpc连接实例。

**TransitRouterVbrAttachment**，表示Vbr连接实例。

**TransitRouterPeerAttachment**，表示跨地域连接实例。

**TransitRouterVpnAttachment**，表示Vpn连接实例。

**TransitRouterRouteTable**，表示路由表实例。

**Flowlog**，表示Flowlog实例。

**TransitRouterMulticastDomain**，表示组播域实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen',
          ),
        ),
        1 => 
        array (
          'name' => 'All',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否删除全部标签。取值：
- **true** ：是
- **false**（默认值）：否

> 仅针对**TagKey.N**为空时生效。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '资源ID。**N**的取值范围为**1**~**50**。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '资源ID。**N**的取值范围为**1**~**50**。',
              'type' => 'string',
              'required' => false,
              'example' => 'cen-7qthudw0ll6jmc****',
            ),
            'required' => true,
            'example' => 'cen-7qthudw0ll6jmc****',
            'maxItems' => 21,
          ),
        ),
        3 => 
        array (
          'name' => 'TagKey',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '标签键。

标签键最多支持64个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

如果您同时输入了多个标签键，各个标签键之间为**或**的关系。**N**的取值范围：**1**~**20**。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签键。

标签键最多支持64个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。

如果您同时输入了多个标签键，各个标签键之间为**或**的关系。**N**的取值范围：**1**~**20**。',
              'type' => 'string',
              'required' => false,
              'example' => 'Name',
            ),
            'required' => false,
            'example' => 'FinanceDept',
            'maxItems' => 21,
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源实例所属地域ID。

当资源类型为Cen和BandwidthPackage不需要填写，其余类型必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C46FF5A8-C5F0-4024-8262-B16B639225A0	',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The tag keys are not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The tag values are not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParam',
            'errorMessage' => '%s',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidInstanceType.NotFound',
            'errorMessage' => 'The instance type is not found',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidInstanceIds.NotFound',
            'errorMessage' => 'The instanceIds are not found',
          ),
          5 => 
          array (
            'errorCode' => 'Forbidden.TagKeys',
            'errorMessage' => 'The request do not allow to operate the tag keys',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.TagNum',
            'errorMessage' => 'Custom Tags quota exceeded',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidTagScope.NotFound',
            'errorMessage' => 'The tag scope is not found',
          ),
          8 => 
          array (
            'errorCode' => 'Forbidden.NotAllowedCategary',
            'errorMessage' => 'The System tag is not valid',
          ),
          9 => 
          array (
            'errorCode' => 'SizeLimitExceeded.ResourceIdNum',
            'errorMessage' => 'The ResourceIds parameter\'s number is exceed , Valid : 20',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.Region',
            'errorMessage' => 'The specified region is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'Invalid parameter.',
          ),
          12 => 
          array (
            'errorCode' => 'Unauthorized',
            'errorMessage' => 'The AccessKeyId is unauthorized.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C46FF5A8-C5F0-4024-8262-B16B639225A0\\\\t\\"\\n}","errorExample":""},{"type":"xml","example":"<UntagResourcesResponse>\\r\\n    <RequestId>C46FF5A8-C5F0-4024-8262-B16B639225A0</RequestId>\\r\\n</UntagResourcesResponse>","errorExample":""}]',
      'title' => '为指定的资源列表统一解绑并删除标签',
      'summary' => '为资源解绑标签。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-qingdao',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'cn-beijing',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'cn-chengdu',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'cn-zhangjiakou',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    4 => 
    array (
      'regionId' => 'cn-huhehaote',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    5 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    6 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    7 => 
    array (
      'regionId' => 'cn-shenzhen',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    8 => 
    array (
      'regionId' => 'cn-heyuan',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    9 => 
    array (
      'regionId' => 'cn-wulanchabu',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    10 => 
    array (
      'regionId' => 'cn-hongkong',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    11 => 
    array (
      'regionId' => 'ap-southeast-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    12 => 
    array (
      'regionId' => 'ap-southeast-2',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    13 => 
    array (
      'regionId' => 'ap-southeast-3',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    14 => 
    array (
      'regionId' => 'ap-southeast-5',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    15 => 
    array (
      'regionId' => 'ap-northeast-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    16 => 
    array (
      'regionId' => 'eu-west-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    17 => 
    array (
      'regionId' => 'us-west-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    18 => 
    array (
      'regionId' => 'us-east-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    19 => 
    array (
      'regionId' => 'eu-central-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    20 => 
    array (
      'regionId' => 'me-east-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    21 => 
    array (
      'regionId' => 'ap-south-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    22 => 
    array (
      'regionId' => 'cn-shanghai-finance-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    23 => 
    array (
      'regionId' => 'cn-shenzhen-finance-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    24 => 
    array (
      'regionId' => 'cn-north-2-gov-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    25 => 
    array (
      'regionId' => 'ap-northeast-2-pop',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    26 => 
    array (
      'regionId' => 'cn-beijing-finance-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    27 => 
    array (
      'regionId' => 'cn-beijing-finance-pop',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    28 => 
    array (
      'regionId' => 'cn-beijing-gov-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    29 => 
    array (
      'regionId' => 'cn-beijing-nu16-b01',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    30 => 
    array (
      'regionId' => 'cn-edge-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    31 => 
    array (
      'regionId' => 'cn-fujian',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    32 => 
    array (
      'regionId' => 'cn-haidian-cm12-c01',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    33 => 
    array (
      'regionId' => 'cn-hangzhou-bj-b01',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    34 => 
    array (
      'regionId' => 'cn-hangzhou-finance',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    35 => 
    array (
      'regionId' => 'cn-hangzhou-internal-prod-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    36 => 
    array (
      'regionId' => 'cn-hangzhou-internal-test-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    37 => 
    array (
      'regionId' => 'cn-hangzhou-internal-test-2',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    38 => 
    array (
      'regionId' => 'cn-hangzhou-internal-test-3',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    39 => 
    array (
      'regionId' => 'cn-hangzhou-test-306',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    40 => 
    array (
      'regionId' => 'cn-hongkong-finance-pop',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    41 => 
    array (
      'regionId' => 'cn-huhehaote-nebula-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    42 => 
    array (
      'regionId' => 'cn-qingdao-nebula',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    43 => 
    array (
      'regionId' => 'cn-shanghai-et15-b01',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    44 => 
    array (
      'regionId' => 'cn-shanghai-et2-b01',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    45 => 
    array (
      'regionId' => 'cn-shanghai-inner',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    46 => 
    array (
      'regionId' => 'cn-shanghai-internal-test-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    47 => 
    array (
      'regionId' => 'cn-shenzhen-inner',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    48 => 
    array (
      'regionId' => 'cn-shenzhen-st4-d01',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    49 => 
    array (
      'regionId' => 'cn-shenzhen-su18-b01',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    50 => 
    array (
      'regionId' => 'cn-wuhan',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    51 => 
    array (
      'regionId' => 'cn-yushanfang',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    52 => 
    array (
      'regionId' => 'cn-zhangbei',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    53 => 
    array (
      'regionId' => 'cn-zhangbei-na61-b01',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    54 => 
    array (
      'regionId' => 'cn-zhangjiakou-na62-a01',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    55 => 
    array (
      'regionId' => 'cn-zhengzhou-nebula-1',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    56 => 
    array (
      'regionId' => 'eu-west-1-oxs',
      'endpoint' => 'cbn.aliyuncs.com',
    ),
    57 => 
    array (
      'regionId' => 'rus-west-1-pop',
      'endpoint' => 'cbn-share.aliyuncs.com',
    ),
  ),
);