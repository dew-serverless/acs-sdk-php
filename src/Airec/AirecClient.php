<?php

declare(strict_types=1);

namespace Dew\Acs\Airec;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createInstance(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result modifyInstance(array $arguments = [])
 * @method \Http\Promise\Promise modifyInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result describeInstance(array $arguments = [])
 * @method \Http\Promise\Promise describeInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result listInstance(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result runInstance(array $arguments = [])
 * @method \Http\Promise\Promise runInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeInstance(array $arguments = [])
 * @method \Http\Promise\Promise upgradeInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result validateInstance(array $arguments = [])
 * @method \Http\Promise\Promise validateInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result downgradeInstance(array $arguments = [])
 * @method \Http\Promise\Promise downgradeInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result createExtraDataSource(array $arguments = [])
 * @method \Http\Promise\Promise createExtraDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteExtraDataSource(array $arguments = [])
 * @method \Http\Promise\Promise deleteExtraDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result listExtraDataSources(array $arguments = [])
 * @method \Http\Promise\Promise listExtraDataSourcesAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDataSet(array $arguments = [])
 * @method \Http\Promise\Promise deleteDataSetAsync($arguments = [])
 * @method \Dew\Acs\Result attachDataset(array $arguments = [])
 * @method \Http\Promise\Promise attachDatasetAsync($arguments = [])
 * @method \Dew\Acs\Result describeDataSetMessage(array $arguments = [])
 * @method \Http\Promise\Promise describeDataSetMessageAsync($arguments = [])
 * @method \Dew\Acs\Result listDataSet(array $arguments = [])
 * @method \Http\Promise\Promise listDataSetAsync($arguments = [])
 * @method \Dew\Acs\Result deleteExperiment(array $arguments = [])
 * @method \Http\Promise\Promise deleteExperimentAsync($arguments = [])
 * @method \Dew\Acs\Result enableExperiment(array $arguments = [])
 * @method \Http\Promise\Promise enableExperimentAsync($arguments = [])
 * @method \Dew\Acs\Result updateExperimentBasicInfo(array $arguments = [])
 * @method \Http\Promise\Promise updateExperimentBasicInfoAsync($arguments = [])
 * @method \Dew\Acs\Result updateExperimentConfig(array $arguments = [])
 * @method \Http\Promise\Promise updateExperimentConfigAsync($arguments = [])
 * @method \Dew\Acs\Result updateExperimentStatus(array $arguments = [])
 * @method \Http\Promise\Promise updateExperimentStatusAsync($arguments = [])
 * @method \Dew\Acs\Result describeBaseExperiment(array $arguments = [])
 * @method \Http\Promise\Promise describeBaseExperimentAsync($arguments = [])
 * @method \Dew\Acs\Result describeExperiment(array $arguments = [])
 * @method \Http\Promise\Promise describeExperimentAsync($arguments = [])
 * @method \Dew\Acs\Result describeExperimentEnv(array $arguments = [])
 * @method \Http\Promise\Promise describeExperimentEnvAsync($arguments = [])
 * @method \Dew\Acs\Result describeExperimentEnvProgress(array $arguments = [])
 * @method \Http\Promise\Promise describeExperimentEnvProgressAsync($arguments = [])
 * @method \Dew\Acs\Result listExperiments(array $arguments = [])
 * @method \Http\Promise\Promise listExperimentsAsync($arguments = [])
 * @method \Dew\Acs\Result cloneExperiment(array $arguments = [])
 * @method \Http\Promise\Promise cloneExperimentAsync($arguments = [])
 * @method \Dew\Acs\Result listFlowControlTaskReports(array $arguments = [])
 * @method \Http\Promise\Promise listFlowControlTaskReportsAsync($arguments = [])
 * @method \Dew\Acs\Result listFlowControlTaskInvalidItems(array $arguments = [])
 * @method \Http\Promise\Promise listFlowControlTaskInvalidItemsAsync($arguments = [])
 * @method \Dew\Acs\Result listFlowControlTaskItems(array $arguments = [])
 * @method \Http\Promise\Promise listFlowControlTaskItemsAsync($arguments = [])
 * @method \Dew\Acs\Result createFlowControlTask(array $arguments = [])
 * @method \Http\Promise\Promise createFlowControlTaskAsync($arguments = [])
 * @method \Dew\Acs\Result getFlowControlTask(array $arguments = [])
 * @method \Http\Promise\Promise getFlowControlTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFlowControlTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteFlowControlTaskAsync($arguments = [])
 * @method \Dew\Acs\Result listFlowControlTask(array $arguments = [])
 * @method \Http\Promise\Promise listFlowControlTaskAsync($arguments = [])
 * @method \Dew\Acs\Result listFlowControlTaskItemReports(array $arguments = [])
 * @method \Http\Promise\Promise listFlowControlTaskItemReportsAsync($arguments = [])
 * @method \Dew\Acs\Result listFlowControlTaskReference(array $arguments = [])
 * @method \Http\Promise\Promise listFlowControlTaskReferenceAsync($arguments = [])
 * @method \Dew\Acs\Result modifyFlowControlTask(array $arguments = [])
 * @method \Http\Promise\Promise modifyFlowControlTaskAsync($arguments = [])
 * @method \Dew\Acs\Result stopFlowControlTask(array $arguments = [])
 * @method \Http\Promise\Promise stopFlowControlTaskAsync($arguments = [])
 * @method \Dew\Acs\Result publishFlowControlTask(array $arguments = [])
 * @method \Http\Promise\Promise publishFlowControlTaskAsync($arguments = [])
 * @method \Dew\Acs\Result createFilteringAlgorithm(array $arguments = [])
 * @method \Http\Promise\Promise createFilteringAlgorithmAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFilteringAlgorithm(array $arguments = [])
 * @method \Http\Promise\Promise deleteFilteringAlgorithmAsync($arguments = [])
 * @method \Dew\Acs\Result modifyFilteringAlgorithmMeta(array $arguments = [])
 * @method \Http\Promise\Promise modifyFilteringAlgorithmMetaAsync($arguments = [])
 * @method \Dew\Acs\Result describeFilteringAlgorithm(array $arguments = [])
 * @method \Http\Promise\Promise describeFilteringAlgorithmAsync($arguments = [])
 * @method \Dew\Acs\Result listFilteringAlgorithms(array $arguments = [])
 * @method \Http\Promise\Promise listFilteringAlgorithmsAsync($arguments = [])
 * @method \Dew\Acs\Result offlineFilteringAlgorithm(array $arguments = [])
 * @method \Http\Promise\Promise offlineFilteringAlgorithmAsync($arguments = [])
 * @method \Dew\Acs\Result createRankingSystem(array $arguments = [])
 * @method \Http\Promise\Promise createRankingSystemAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRankingSystem(array $arguments = [])
 * @method \Http\Promise\Promise deleteRankingSystemAsync($arguments = [])
 * @method \Dew\Acs\Result modifyRankingSystem(array $arguments = [])
 * @method \Http\Promise\Promise modifyRankingSystemAsync($arguments = [])
 * @method \Dew\Acs\Result getRankingSystem(array $arguments = [])
 * @method \Http\Promise\Promise getRankingSystemAsync($arguments = [])
 * @method \Dew\Acs\Result getRankingSystemHistory(array $arguments = [])
 * @method \Http\Promise\Promise getRankingSystemHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result listRankingSystems(array $arguments = [])
 * @method \Http\Promise\Promise listRankingSystemsAsync($arguments = [])
 * @method \Dew\Acs\Result listRankingSystemHistories(array $arguments = [])
 * @method \Http\Promise\Promise listRankingSystemHistoriesAsync($arguments = [])
 * @method \Dew\Acs\Result deployRankingSystem(array $arguments = [])
 * @method \Http\Promise\Promise deployRankingSystemAsync($arguments = [])
 * @method \Dew\Acs\Result verifyRankingSystem(array $arguments = [])
 * @method \Http\Promise\Promise verifyRankingSystemAsync($arguments = [])
 * @method \Dew\Acs\Result rollbackRankingSystem(array $arguments = [])
 * @method \Http\Promise\Promise rollbackRankingSystemAsync($arguments = [])
 * @method \Dew\Acs\Result createRankingModelTemplate(array $arguments = [])
 * @method \Http\Promise\Promise createRankingModelTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRankingModelTemplate(array $arguments = [])
 * @method \Http\Promise\Promise deleteRankingModelTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result modifyRankingModelTemplate(array $arguments = [])
 * @method \Http\Promise\Promise modifyRankingModelTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result getRankingModelTemplate(array $arguments = [])
 * @method \Http\Promise\Promise getRankingModelTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result runRankingModelTemplate(array $arguments = [])
 * @method \Http\Promise\Promise runRankingModelTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result createRankingModel(array $arguments = [])
 * @method \Http\Promise\Promise createRankingModelAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRankingModel(array $arguments = [])
 * @method \Http\Promise\Promise deleteRankingModelAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRankingModelVersion(array $arguments = [])
 * @method \Http\Promise\Promise deleteRankingModelVersionAsync($arguments = [])
 * @method \Dew\Acs\Result modifyRankingModel(array $arguments = [])
 * @method \Http\Promise\Promise modifyRankingModelAsync($arguments = [])
 * @method \Dew\Acs\Result listRankingModels(array $arguments = [])
 * @method \Http\Promise\Promise listRankingModelsAsync($arguments = [])
 * @method \Dew\Acs\Result listRankingModelTemplates(array $arguments = [])
 * @method \Http\Promise\Promise listRankingModelTemplatesAsync($arguments = [])
 * @method \Dew\Acs\Result getRankingModelVersion(array $arguments = [])
 * @method \Http\Promise\Promise getRankingModelVersionAsync($arguments = [])
 * @method \Dew\Acs\Result listRankingModelVersions(array $arguments = [])
 * @method \Http\Promise\Promise listRankingModelVersionsAsync($arguments = [])
 * @method \Dew\Acs\Result decribeRankingModel(array $arguments = [])
 * @method \Http\Promise\Promise decribeRankingModelAsync($arguments = [])
 * @method \Dew\Acs\Result checkRankingModelReachable(array $arguments = [])
 * @method \Http\Promise\Promise checkRankingModelReachableAsync($arguments = [])
 * @method \Dew\Acs\Result createRule(array $arguments = [])
 * @method \Http\Promise\Promise createRuleAsync($arguments = [])
 * @method \Dew\Acs\Result modifyRule(array $arguments = [])
 * @method \Http\Promise\Promise modifyRuleAsync($arguments = [])
 * @method \Dew\Acs\Result listRules(array $arguments = [])
 * @method \Http\Promise\Promise listRulesAsync($arguments = [])
 * @method \Dew\Acs\Result describeRule(array $arguments = [])
 * @method \Http\Promise\Promise describeRuleAsync($arguments = [])
 * @method \Dew\Acs\Result publishRule(array $arguments = [])
 * @method \Http\Promise\Promise publishRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createScene(array $arguments = [])
 * @method \Http\Promise\Promise createSceneAsync($arguments = [])
 * @method \Dew\Acs\Result deleteScene(array $arguments = [])
 * @method \Http\Promise\Promise deleteSceneAsync($arguments = [])
 * @method \Dew\Acs\Result modifyScene(array $arguments = [])
 * @method \Http\Promise\Promise modifySceneAsync($arguments = [])
 * @method \Dew\Acs\Result describeScene(array $arguments = [])
 * @method \Http\Promise\Promise describeSceneAsync($arguments = [])
 * @method \Dew\Acs\Result listScenes(array $arguments = [])
 * @method \Http\Promise\Promise listScenesAsync($arguments = [])
 * @method \Dew\Acs\Result createCustomSample(array $arguments = [])
 * @method \Http\Promise\Promise createCustomSampleAsync($arguments = [])
 * @method \Dew\Acs\Result createSampleFormatConfig(array $arguments = [])
 * @method \Http\Promise\Promise createSampleFormatConfigAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSample(array $arguments = [])
 * @method \Http\Promise\Promise deleteSampleAsync($arguments = [])
 * @method \Dew\Acs\Result modifySample(array $arguments = [])
 * @method \Http\Promise\Promise modifySampleAsync($arguments = [])
 * @method \Dew\Acs\Result listSamples(array $arguments = [])
 * @method \Http\Promise\Promise listSamplesAsync($arguments = [])
 * @method \Dew\Acs\Result getSample(array $arguments = [])
 * @method \Http\Promise\Promise getSampleAsync($arguments = [])
 * @method \Dew\Acs\Result cloneSample(array $arguments = [])
 * @method \Http\Promise\Promise cloneSampleAsync($arguments = [])
 * @method \Dew\Acs\Result generateSample(array $arguments = [])
 * @method \Http\Promise\Promise generateSampleAsync($arguments = [])
 * @method \Dew\Acs\Result createCustomAnalysisTask(array $arguments = [])
 * @method \Http\Promise\Promise createCustomAnalysisTaskAsync($arguments = [])
 * @method \Dew\Acs\Result attachIndexVersion(array $arguments = [])
 * @method \Http\Promise\Promise attachIndexVersionAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDataSource(array $arguments = [])
 * @method \Http\Promise\Promise modifyDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result modifyFeatureTable(array $arguments = [])
 * @method \Http\Promise\Promise modifyFeatureTableAsync($arguments = [])
 * @method \Dew\Acs\Result modifyItems(array $arguments = [])
 * @method \Http\Promise\Promise modifyItemsAsync($arguments = [])
 * @method \Dew\Acs\Result modifyOfflineStorages(array $arguments = [])
 * @method \Http\Promise\Promise modifyOfflineStoragesAsync($arguments = [])
 * @method \Dew\Acs\Result stopDataSet(array $arguments = [])
 * @method \Http\Promise\Promise stopDataSetAsync($arguments = [])
 * @method \Dew\Acs\Result describeCustomAnalysisTask(array $arguments = [])
 * @method \Http\Promise\Promise describeCustomAnalysisTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeDefaultAlgorithms(array $arguments = [])
 * @method \Http\Promise\Promise describeDefaultAlgorithmsAsync($arguments = [])
 * @method \Dew\Acs\Result describeLatestTask(array $arguments = [])
 * @method \Http\Promise\Promise describeLatestTaskAsync($arguments = [])
 * @method \Dew\Acs\Result describeQuota(array $arguments = [])
 * @method \Http\Promise\Promise describeQuotaAsync($arguments = [])
 * @method \Dew\Acs\Result describeRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSceneBucket(array $arguments = [])
 * @method \Http\Promise\Promise describeSceneBucketAsync($arguments = [])
 * @method \Dew\Acs\Result describeSceneThroughput(array $arguments = [])
 * @method \Http\Promise\Promise describeSceneThroughputAsync($arguments = [])
 * @method \Dew\Acs\Result describeSyncReportDetail(array $arguments = [])
 * @method \Http\Promise\Promise describeSyncReportDetailAsync($arguments = [])
 * @method \Dew\Acs\Result describeSyncReportOutliers(array $arguments = [])
 * @method \Http\Promise\Promise describeSyncReportOutliersAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserMetrics(array $arguments = [])
 * @method \Http\Promise\Promise describeUserMetricsAsync($arguments = [])
 * @method \Dew\Acs\Result getExtraDataSource(array $arguments = [])
 * @method \Http\Promise\Promise getExtraDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result listDashboardDetails(array $arguments = [])
 * @method \Http\Promise\Promise listDashboardDetailsAsync($arguments = [])
 * @method \Dew\Acs\Result listDashboardDetailsFlows(array $arguments = [])
 * @method \Http\Promise\Promise listDashboardDetailsFlowsAsync($arguments = [])
 * @method \Dew\Acs\Result listDashboardMetrics(array $arguments = [])
 * @method \Http\Promise\Promise listDashboardMetricsAsync($arguments = [])
 * @method \Dew\Acs\Result listDashboardMetricsFlows(array $arguments = [])
 * @method \Http\Promise\Promise listDashboardMetricsFlowsAsync($arguments = [])
 * @method \Dew\Acs\Result listFeatureTables(array $arguments = [])
 * @method \Http\Promise\Promise listFeatureTablesAsync($arguments = [])
 * @method \Dew\Acs\Result listIndexVersions(array $arguments = [])
 * @method \Http\Promise\Promise listIndexVersionsAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceTask(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceTaskAsync($arguments = [])
 * @method \Dew\Acs\Result listItems(array $arguments = [])
 * @method \Http\Promise\Promise listItemsAsync($arguments = [])
 * @method \Dew\Acs\Result listLogs(array $arguments = [])
 * @method \Http\Promise\Promise listLogsAsync($arguments = [])
 * @method \Dew\Acs\Result listMixCategories(array $arguments = [])
 * @method \Http\Promise\Promise listMixCategoriesAsync($arguments = [])
 * @method \Dew\Acs\Result listOfflineStorages(array $arguments = [])
 * @method \Http\Promise\Promise listOfflineStoragesAsync($arguments = [])
 * @method \Dew\Acs\Result listRuleConditions(array $arguments = [])
 * @method \Http\Promise\Promise listRuleConditionsAsync($arguments = [])
 * @method \Dew\Acs\Result listRuleTasks(array $arguments = [])
 * @method \Http\Promise\Promise listRuleTasksAsync($arguments = [])
 * @method \Dew\Acs\Result listSampleFormatConfigs(array $arguments = [])
 * @method \Http\Promise\Promise listSampleFormatConfigsAsync($arguments = [])
 * @method \Dew\Acs\Result listSceneItems(array $arguments = [])
 * @method \Http\Promise\Promise listSceneItemsAsync($arguments = [])
 * @method \Dew\Acs\Result listSceneParameters(array $arguments = [])
 * @method \Http\Promise\Promise listSceneParametersAsync($arguments = [])
 * @method \Dew\Acs\Result listUmengAppkeys(array $arguments = [])
 * @method \Http\Promise\Promise listUmengAppkeysAsync($arguments = [])
 * @method \Dew\Acs\Result listUserClusters(array $arguments = [])
 * @method \Http\Promise\Promise listUserClustersAsync($arguments = [])
 * @method \Dew\Acs\Result queryDataMessage(array $arguments = [])
 * @method \Http\Promise\Promise queryDataMessageAsync($arguments = [])
 * @method \Dew\Acs\Result queryDataMessageStatistics(array $arguments = [])
 * @method \Http\Promise\Promise queryDataMessageStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result queryExceptionHistory(array $arguments = [])
 * @method \Http\Promise\Promise queryExceptionHistoryAsync($arguments = [])
 * @method \Dew\Acs\Result queryRawData(array $arguments = [])
 * @method \Http\Promise\Promise queryRawDataAsync($arguments = [])
 * @method \Dew\Acs\Result querySingleAggregationReport(array $arguments = [])
 * @method \Http\Promise\Promise querySingleAggregationReportAsync($arguments = [])
 * @method \Dew\Acs\Result querySingleReport(array $arguments = [])
 * @method \Http\Promise\Promise querySingleReportAsync($arguments = [])
 * @method \Dew\Acs\Result querySyncReportAggregation(array $arguments = [])
 * @method \Http\Promise\Promise querySyncReportAggregationAsync($arguments = [])
 * @method \Dew\Acs\Result listDataSource(array $arguments = [])
 * @method \Http\Promise\Promise listDataSourceAsync($arguments = [])
 * @method \Dew\Acs\Result initComputingResource(array $arguments = [])
 * @method \Http\Promise\Promise initComputingResourceAsync($arguments = [])
 * @method \Dew\Acs\Result pushDocument(array $arguments = [])
 * @method \Http\Promise\Promise pushDocumentAsync($arguments = [])
 * @method \Dew\Acs\Result pushIntervention(array $arguments = [])
 * @method \Http\Promise\Promise pushInterventionAsync($arguments = [])
 * @method \Dew\Acs\Result rebuildIndex(array $arguments = [])
 * @method \Http\Promise\Promise rebuildIndexAsync($arguments = [])
 * @method \Dew\Acs\Result recommend(array $arguments = [])
 * @method \Http\Promise\Promise recommendAsync($arguments = [])
 * @method \Dew\Acs\Result refreshFeatureTable(array $arguments = [])
 * @method \Http\Promise\Promise refreshFeatureTableAsync($arguments = [])
 * @method \Dew\Acs\Result runSampleFormatConfig(array $arguments = [])
 * @method \Http\Promise\Promise runSampleFormatConfigAsync($arguments = [])
 * @method \Dew\Acs\Result unLockIndexVersion(array $arguments = [])
 * @method \Http\Promise\Promise unLockIndexVersionAsync($arguments = [])
 * @method \Dew\Acs\Result createDataDiagnoseTask(array $arguments = [])
 * @method \Http\Promise\Promise createDataDiagnoseTaskAsync($arguments = [])
 * @method \Dew\Acs\Result createUmengToken(array $arguments = [])
 * @method \Http\Promise\Promise createUmengTokenAsync($arguments = [])
 * @method \Dew\Acs\Result getLatestDataDiagnoseTaskStatus(array $arguments = [])
 * @method \Http\Promise\Promise getLatestDataDiagnoseTaskStatusAsync($arguments = [])
 * @method \Dew\Acs\Result listDataDiagnoseReports(array $arguments = [])
 * @method \Http\Promise\Promise listDataDiagnoseReportsAsync($arguments = [])
 * @method \Dew\Acs\Result listDataDiagnoseSampleDetails(array $arguments = [])
 * @method \Http\Promise\Promise listDataDiagnoseSampleDetailsAsync($arguments = [])
 */
final class AirecClient extends AcsClient
{
    //
}
