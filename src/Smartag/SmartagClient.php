<?php

declare(strict_types=1);

namespace Dew\Acs\Smartag;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createSmartAccessGateway(array $arguments = [])
 * @method \Http\Promise\Promise createSmartAccessGatewayAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeSmartAccessGateway(array $arguments = [])
 * @method \Http\Promise\Promise upgradeSmartAccessGatewayAsync($arguments = [])
 * @method \Dew\Acs\Result downgradeSmartAccessGateway(array $arguments = [])
 * @method \Http\Promise\Promise downgradeSmartAccessGatewayAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSmartAccessGateway(array $arguments = [])
 * @method \Http\Promise\Promise deleteSmartAccessGatewayAsync($arguments = [])
 * @method \Dew\Acs\Result describeRegions(array $arguments = [])
 * @method \Http\Promise\Promise describeRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result moveResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise moveResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result bindSmartAccessGateway(array $arguments = [])
 * @method \Http\Promise\Promise bindSmartAccessGatewayAsync($arguments = [])
 * @method \Dew\Acs\Result unbindSmartAccessGateway(array $arguments = [])
 * @method \Http\Promise\Promise unbindSmartAccessGatewayAsync($arguments = [])
 * @method \Dew\Acs\Result grantSagInstanceToCcn(array $arguments = [])
 * @method \Http\Promise\Promise grantSagInstanceToCcnAsync($arguments = [])
 * @method \Dew\Acs\Result revokeSagInstanceFromCcn(array $arguments = [])
 * @method \Http\Promise\Promise revokeSagInstanceFromCcnAsync($arguments = [])
 * @method \Dew\Acs\Result bindVbr(array $arguments = [])
 * @method \Http\Promise\Promise bindVbrAsync($arguments = [])
 * @method \Dew\Acs\Result unbindVbr(array $arguments = [])
 * @method \Http\Promise\Promise unbindVbrAsync($arguments = [])
 * @method \Dew\Acs\Result grantSagInstanceToVbr(array $arguments = [])
 * @method \Http\Promise\Promise grantSagInstanceToVbrAsync($arguments = [])
 * @method \Dew\Acs\Result revokeInstanceFromVbr(array $arguments = [])
 * @method \Http\Promise\Promise revokeInstanceFromVbrAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagVbrRelations(array $arguments = [])
 * @method \Http\Promise\Promise describeSagVbrRelationsAsync($arguments = [])
 * @method \Dew\Acs\Result addSnatEntry(array $arguments = [])
 * @method \Http\Promise\Promise addSnatEntryAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSnatEntry(array $arguments = [])
 * @method \Http\Promise\Promise deleteSnatEntryAsync($arguments = [])
 * @method \Dew\Acs\Result describeSnatEntries(array $arguments = [])
 * @method \Http\Promise\Promise describeSnatEntriesAsync($arguments = [])
 * @method \Dew\Acs\Result addDnatEntry(array $arguments = [])
 * @method \Http\Promise\Promise addDnatEntryAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDnatEntry(array $arguments = [])
 * @method \Http\Promise\Promise deleteDnatEntryAsync($arguments = [])
 * @method \Dew\Acs\Result describeDnatEntries(array $arguments = [])
 * @method \Http\Promise\Promise describeDnatEntriesAsync($arguments = [])
 * @method \Dew\Acs\Result describeRouteDistributionStrategies(array $arguments = [])
 * @method \Http\Promise\Promise describeRouteDistributionStrategiesAsync($arguments = [])
 * @method \Dew\Acs\Result modifyRouteDistributionStrategy(array $arguments = [])
 * @method \Http\Promise\Promise modifyRouteDistributionStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRouteDistributionStrategy(array $arguments = [])
 * @method \Http\Promise\Promise deleteRouteDistributionStrategyAsync($arguments = [])
 * @method \Dew\Acs\Result createHealthCheck(array $arguments = [])
 * @method \Http\Promise\Promise createHealthCheckAsync($arguments = [])
 * @method \Dew\Acs\Result deleteHealthCheck(array $arguments = [])
 * @method \Http\Promise\Promise deleteHealthCheckAsync($arguments = [])
 * @method \Dew\Acs\Result modifyHealthCheck(array $arguments = [])
 * @method \Http\Promise\Promise modifyHealthCheckAsync($arguments = [])
 * @method \Dew\Acs\Result describeHealthChecks(array $arguments = [])
 * @method \Http\Promise\Promise describeHealthChecksAsync($arguments = [])
 * @method \Dew\Acs\Result describeHealthCheckAttribute(array $arguments = [])
 * @method \Http\Promise\Promise describeHealthCheckAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result updateSmartAGAccessPoint(array $arguments = [])
 * @method \Http\Promise\Promise updateSmartAGAccessPointAsync($arguments = [])
 * @method \Dew\Acs\Result probeAccessPointNetworkQuality(array $arguments = [])
 * @method \Http\Promise\Promise probeAccessPointNetworkQualityAsync($arguments = [])
 * @method \Dew\Acs\Result listSmartAGByAccessPoint(array $arguments = [])
 * @method \Http\Promise\Promise listSmartAGByAccessPointAsync($arguments = [])
 * @method \Dew\Acs\Result listAccessPoints(array $arguments = [])
 * @method \Http\Promise\Promise listAccessPointsAsync($arguments = [])
 * @method \Dew\Acs\Result listAccessPointNetworkQualities(array $arguments = [])
 * @method \Http\Promise\Promise listAccessPointNetworkQualitiesAsync($arguments = [])
 * @method \Dew\Acs\Result updateSmartAGDpiAttribute(array $arguments = [])
 * @method \Http\Promise\Promise updateSmartAGDpiAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result disableSmartAGDpiMonitor(array $arguments = [])
 * @method \Http\Promise\Promise disableSmartAGDpiMonitorAsync($arguments = [])
 * @method \Dew\Acs\Result enableSmartAGDpiMonitor(array $arguments = [])
 * @method \Http\Promise\Promise enableSmartAGDpiMonitorAsync($arguments = [])
 * @method \Dew\Acs\Result listDpiSignatures(array $arguments = [])
 * @method \Http\Promise\Promise listDpiSignaturesAsync($arguments = [])
 * @method \Dew\Acs\Result listDpiGroups(array $arguments = [])
 * @method \Http\Promise\Promise listDpiGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result listDpiConfigError(array $arguments = [])
 * @method \Http\Promise\Promise listDpiConfigErrorAsync($arguments = [])
 * @method \Dew\Acs\Result getSmartAGDpiAttribute(array $arguments = [])
 * @method \Http\Promise\Promise getSmartAGDpiAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result getAclAttribute(array $arguments = [])
 * @method \Http\Promise\Promise getAclAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result createProbeTask(array $arguments = [])
 * @method \Http\Promise\Promise createProbeTaskAsync($arguments = [])
 * @method \Dew\Acs\Result listProbeTask(array $arguments = [])
 * @method \Http\Promise\Promise listProbeTaskAsync($arguments = [])
 * @method \Dew\Acs\Result updateProbeTask(array $arguments = [])
 * @method \Http\Promise\Promise updateProbeTaskAsync($arguments = [])
 * @method \Dew\Acs\Result deleteProbeTask(array $arguments = [])
 * @method \Http\Promise\Promise deleteProbeTaskAsync($arguments = [])
 * @method \Dew\Acs\Result createServiceAddress(array $arguments = [])
 * @method \Http\Promise\Promise createServiceAddressAsync($arguments = [])
 * @method \Dew\Acs\Result deleteServiceAddress(array $arguments = [])
 * @method \Http\Promise\Promise deleteServiceAddressAsync($arguments = [])
 * @method \Dew\Acs\Result listAvailableServiceAddress(array $arguments = [])
 * @method \Http\Promise\Promise listAvailableServiceAddressAsync($arguments = [])
 * @method \Dew\Acs\Result setAdvancedMonitorState(array $arguments = [])
 * @method \Http\Promise\Promise setAdvancedMonitorStateAsync($arguments = [])
 * @method \Dew\Acs\Result getAdvancedMonitorState(array $arguments = [])
 * @method \Http\Promise\Promise getAdvancedMonitorStateAsync($arguments = [])
 * @method \Dew\Acs\Result describeSmartAccessGatewayAttribute(array $arguments = [])
 * @method \Http\Promise\Promise describeSmartAccessGatewayAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result getSmartAccessGatewayUseLimit(array $arguments = [])
 * @method \Http\Promise\Promise getSmartAccessGatewayUseLimitAsync($arguments = [])
 * @method \Dew\Acs\Result describeSmartAccessGatewayVersions(array $arguments = [])
 * @method \Http\Promise\Promise describeSmartAccessGatewayVersionsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagTrafficTopN(array $arguments = [])
 * @method \Http\Promise\Promise describeSagTrafficTopNAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagDropTopN(array $arguments = [])
 * @method \Http\Promise\Promise describeSagDropTopNAsync($arguments = [])
 * @method \Dew\Acs\Result describeSAGDeviceInfo(array $arguments = [])
 * @method \Http\Promise\Promise describeSAGDeviceInfoAsync($arguments = [])
 * @method \Dew\Acs\Result listSmartAGApiUnsupportedFeature(array $arguments = [])
 * @method \Http\Promise\Promise listSmartAGApiUnsupportedFeatureAsync($arguments = [])
 * @method \Dew\Acs\Result describeGrantSagRules(array $arguments = [])
 * @method \Http\Promise\Promise describeGrantSagRulesAsync($arguments = [])
 * @method \Dew\Acs\Result describeSmartAccessGateways(array $arguments = [])
 * @method \Http\Promise\Promise describeSmartAccessGatewaysAsync($arguments = [])
 * @method \Dew\Acs\Result describeDeviceAutoUpgradePolicy(array $arguments = [])
 * @method \Http\Promise\Promise describeDeviceAutoUpgradePolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeGrantSagVbrRules(array $arguments = [])
 * @method \Http\Promise\Promise describeGrantSagVbrRulesAsync($arguments = [])
 * @method \Dew\Acs\Result describeBindableSmartAccessGateways(array $arguments = [])
 * @method \Http\Promise\Promise describeBindableSmartAccessGatewaysAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagGlobalRouteProtocol(array $arguments = [])
 * @method \Http\Promise\Promise describeSagGlobalRouteProtocolAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagRouteList(array $arguments = [])
 * @method \Http\Promise\Promise describeSagRouteListAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagPortRouteProtocolList(array $arguments = [])
 * @method \Http\Promise\Promise describeSagPortRouteProtocolListAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagGlobalRouteProtocol(array $arguments = [])
 * @method \Http\Promise\Promise modifySagGlobalRouteProtocolAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagPortRouteProtocol(array $arguments = [])
 * @method \Http\Promise\Promise modifySagPortRouteProtocolAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagRouteProtocolBgp(array $arguments = [])
 * @method \Http\Promise\Promise modifySagRouteProtocolBgpAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagRouteProtocolBgp(array $arguments = [])
 * @method \Http\Promise\Promise describeSagRouteProtocolBgpAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagRouteProtocolOspf(array $arguments = [])
 * @method \Http\Promise\Promise modifySagRouteProtocolOspfAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagRouteProtocolOspf(array $arguments = [])
 * @method \Http\Promise\Promise describeSagRouteProtocolOspfAsync($arguments = [])
 * @method \Dew\Acs\Result createSagStaticRoute(array $arguments = [])
 * @method \Http\Promise\Promise createSagStaticRouteAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagStaticRouteList(array $arguments = [])
 * @method \Http\Promise\Promise describeSagStaticRouteListAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagStaticRoute(array $arguments = [])
 * @method \Http\Promise\Promise modifySagStaticRouteAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSagStaticRoute(array $arguments = [])
 * @method \Http\Promise\Promise deleteSagStaticRouteAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagPortRole(array $arguments = [])
 * @method \Http\Promise\Promise modifySagPortRoleAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagPortList(array $arguments = [])
 * @method \Http\Promise\Promise describeSagPortListAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagWanList(array $arguments = [])
 * @method \Http\Promise\Promise describeSagWanListAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagWan(array $arguments = [])
 * @method \Http\Promise\Promise modifySagWanAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagWanSnat(array $arguments = [])
 * @method \Http\Promise\Promise modifySagWanSnatAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagWanSnat(array $arguments = [])
 * @method \Http\Promise\Promise describeSagWanSnatAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagWan4G(array $arguments = [])
 * @method \Http\Promise\Promise describeSagWan4GAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagLanList(array $arguments = [])
 * @method \Http\Promise\Promise describeSagLanListAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagLan(array $arguments = [])
 * @method \Http\Promise\Promise modifySagLanAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagManagementPort(array $arguments = [])
 * @method \Http\Promise\Promise describeSagManagementPortAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagManagementPort(array $arguments = [])
 * @method \Http\Promise\Promise modifySagManagementPortAsync($arguments = [])
 * @method \Dew\Acs\Result createSagExpressConnectInterface(array $arguments = [])
 * @method \Http\Promise\Promise createSagExpressConnectInterfaceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSagExpressConnectInterface(array $arguments = [])
 * @method \Http\Promise\Promise deleteSagExpressConnectInterfaceAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagExpressConnectInterface(array $arguments = [])
 * @method \Http\Promise\Promise modifySagExpressConnectInterfaceAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagExpressConnectInterfaceList(array $arguments = [])
 * @method \Http\Promise\Promise describeSagExpressConnectInterfaceListAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagHa(array $arguments = [])
 * @method \Http\Promise\Promise modifySagHaAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagHa(array $arguments = [])
 * @method \Http\Promise\Promise describeSagHaAsync($arguments = [])
 * @method \Dew\Acs\Result describeSmartAccessGatewayHa(array $arguments = [])
 * @method \Http\Promise\Promise describeSmartAccessGatewayHaAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagCurrentDns(array $arguments = [])
 * @method \Http\Promise\Promise describeSagCurrentDnsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagUserDns(array $arguments = [])
 * @method \Http\Promise\Promise describeSagUserDnsAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagUserDns(array $arguments = [])
 * @method \Http\Promise\Promise modifySagUserDnsAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagWifi(array $arguments = [])
 * @method \Http\Promise\Promise modifySagWifiAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagWifi(array $arguments = [])
 * @method \Http\Promise\Promise describeSagWifiAsync($arguments = [])
 * @method \Dew\Acs\Result bindSerialNumber(array $arguments = [])
 * @method \Http\Promise\Promise bindSerialNumberAsync($arguments = [])
 * @method \Dew\Acs\Result unbindSerialNumber(array $arguments = [])
 * @method \Http\Promise\Promise unbindSerialNumberAsync($arguments = [])
 * @method \Dew\Acs\Result activateSmartAccessGateway(array $arguments = [])
 * @method \Http\Promise\Promise activateSmartAccessGatewayAsync($arguments = [])
 * @method \Dew\Acs\Result synchronizeSmartAGWebConfig(array $arguments = [])
 * @method \Http\Promise\Promise synchronizeSmartAGWebConfigAsync($arguments = [])
 * @method \Dew\Acs\Result modifySAGAdminPassword(array $arguments = [])
 * @method \Http\Promise\Promise modifySAGAdminPasswordAsync($arguments = [])
 * @method \Dew\Acs\Result rebootSmartAccessGateway(array $arguments = [])
 * @method \Http\Promise\Promise rebootSmartAccessGatewayAsync($arguments = [])
 * @method \Dew\Acs\Result unlockSmartAccessGateway(array $arguments = [])
 * @method \Http\Promise\Promise unlockSmartAccessGatewayAsync($arguments = [])
 * @method \Dew\Acs\Result modifySagRemoteAccess(array $arguments = [])
 * @method \Http\Promise\Promise modifySagRemoteAccessAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagRemoteAccess(array $arguments = [])
 * @method \Http\Promise\Promise describeSagRemoteAccessAsync($arguments = [])
 * @method \Dew\Acs\Result modifyDeviceAutoUpgradePolicy(array $arguments = [])
 * @method \Http\Promise\Promise modifyDeviceAutoUpgradePolicyAsync($arguments = [])
 * @method \Dew\Acs\Result updateSmartAccessGatewayVersion(array $arguments = [])
 * @method \Http\Promise\Promise updateSmartAccessGatewayVersionAsync($arguments = [])
 * @method \Dew\Acs\Result modifySmartAccessGateway(array $arguments = [])
 * @method \Http\Promise\Promise modifySmartAccessGatewayAsync($arguments = [])
 * @method \Dew\Acs\Result modifySmartAccessGatewayUpBandwidth(array $arguments = [])
 * @method \Http\Promise\Promise modifySmartAccessGatewayUpBandwidthAsync($arguments = [])
 * @method \Dew\Acs\Result clearSagRouteableAddress(array $arguments = [])
 * @method \Http\Promise\Promise clearSagRouteableAddressAsync($arguments = [])
 * @method \Dew\Acs\Result clearSagCipher(array $arguments = [])
 * @method \Http\Promise\Promise clearSagCipherAsync($arguments = [])
 * @method \Dew\Acs\Result diagnoseSmartAccessGateway(array $arguments = [])
 * @method \Http\Promise\Promise diagnoseSmartAccessGatewayAsync($arguments = [])
 * @method \Dew\Acs\Result discribeSmartAccessGatewayDiagnosisReport(array $arguments = [])
 * @method \Http\Promise\Promise discribeSmartAccessGatewayDiagnosisReportAsync($arguments = [])
 * @method \Dew\Acs\Result addSmartAccessGatewayDnsForward(array $arguments = [])
 * @method \Http\Promise\Promise addSmartAccessGatewayDnsForwardAsync($arguments = [])
 * @method \Dew\Acs\Result updateSmartAccessGatewayDnsForward(array $arguments = [])
 * @method \Http\Promise\Promise updateSmartAccessGatewayDnsForwardAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSmartAccessGatewayDnsForward(array $arguments = [])
 * @method \Http\Promise\Promise deleteSmartAccessGatewayDnsForwardAsync($arguments = [])
 * @method \Dew\Acs\Result viewSmartAccessGatewayDnsForwards(array $arguments = [])
 * @method \Http\Promise\Promise viewSmartAccessGatewayDnsForwardsAsync($arguments = [])
 * @method \Dew\Acs\Result updateSmartAccessGatewayWanSnat(array $arguments = [])
 * @method \Http\Promise\Promise updateSmartAccessGatewayWanSnatAsync($arguments = [])
 * @method \Dew\Acs\Result viewSmartAccessGatewayWanSnat(array $arguments = [])
 * @method \Http\Promise\Promise viewSmartAccessGatewayWanSnatAsync($arguments = [])
 * @method \Dew\Acs\Result updateSmartAccessGatewayDns(array $arguments = [])
 * @method \Http\Promise\Promise updateSmartAccessGatewayDnsAsync($arguments = [])
 * @method \Dew\Acs\Result viewSmartAccessGatewayDns(array $arguments = [])
 * @method \Http\Promise\Promise viewSmartAccessGatewayDnsAsync($arguments = [])
 * @method \Dew\Acs\Result updateSmartAccessGatewayBgpRoute(array $arguments = [])
 * @method \Http\Promise\Promise updateSmartAccessGatewayBgpRouteAsync($arguments = [])
 * @method \Dew\Acs\Result viewSmartAccessGatewayBgpRoute(array $arguments = [])
 * @method \Http\Promise\Promise viewSmartAccessGatewayBgpRouteAsync($arguments = [])
 * @method \Dew\Acs\Result updateSmartAccessGatewayGlobalRouteProtocol(array $arguments = [])
 * @method \Http\Promise\Promise updateSmartAccessGatewayGlobalRouteProtocolAsync($arguments = [])
 * @method \Dew\Acs\Result viewSmartAccessGatewayGlobalRouteProtocol(array $arguments = [])
 * @method \Http\Promise\Promise viewSmartAccessGatewayGlobalRouteProtocolAsync($arguments = [])
 * @method \Dew\Acs\Result updateSmartAccessGatewayPortRouteProtocol(array $arguments = [])
 * @method \Http\Promise\Promise updateSmartAccessGatewayPortRouteProtocolAsync($arguments = [])
 * @method \Dew\Acs\Result viewSmartAccessGatewayPortRouteProtocol(array $arguments = [])
 * @method \Http\Promise\Promise viewSmartAccessGatewayPortRouteProtocolAsync($arguments = [])
 * @method \Dew\Acs\Result viewSmartAccessGatewayRoutes(array $arguments = [])
 * @method \Http\Promise\Promise viewSmartAccessGatewayRoutesAsync($arguments = [])
 * @method \Dew\Acs\Result updateSmartAccessGatewayOspfRoute(array $arguments = [])
 * @method \Http\Promise\Promise updateSmartAccessGatewayOspfRouteAsync($arguments = [])
 * @method \Dew\Acs\Result viewSmartAccessGatewayOspfRoute(array $arguments = [])
 * @method \Http\Promise\Promise viewSmartAccessGatewayOspfRouteAsync($arguments = [])
 * @method \Dew\Acs\Result updateSmartAccessGatewayAdminPassword(array $arguments = [])
 * @method \Http\Promise\Promise updateSmartAccessGatewayAdminPasswordAsync($arguments = [])
 * @method \Dew\Acs\Result createSmartAccessGatewaySoftware(array $arguments = [])
 * @method \Http\Promise\Promise createSmartAccessGatewaySoftwareAsync($arguments = [])
 * @method \Dew\Acs\Result upgradeSmartAccessGatewaySoftware(array $arguments = [])
 * @method \Http\Promise\Promise upgradeSmartAccessGatewaySoftwareAsync($arguments = [])
 * @method \Dew\Acs\Result downgradeSmartAccessGatewaySoftware(array $arguments = [])
 * @method \Http\Promise\Promise downgradeSmartAccessGatewaySoftwareAsync($arguments = [])
 * @method \Dew\Acs\Result createSmartAccessGatewayClientUser(array $arguments = [])
 * @method \Http\Promise\Promise createSmartAccessGatewayClientUserAsync($arguments = [])
 * @method \Dew\Acs\Result describeSmartAccessGatewayClientUsers(array $arguments = [])
 * @method \Http\Promise\Promise describeSmartAccessGatewayClientUsersAsync($arguments = [])
 * @method \Dew\Acs\Result modifySmartAccessGatewayClientUser(array $arguments = [])
 * @method \Http\Promise\Promise modifySmartAccessGatewayClientUserAsync($arguments = [])
 * @method \Dew\Acs\Result resetSmartAccessGatewayClientUserPassword(array $arguments = [])
 * @method \Http\Promise\Promise resetSmartAccessGatewayClientUserPasswordAsync($arguments = [])
 * @method \Dew\Acs\Result deleteSmartAccessGatewayClientUser(array $arguments = [])
 * @method \Http\Promise\Promise deleteSmartAccessGatewayClientUserAsync($arguments = [])
 * @method \Dew\Acs\Result enableSmartAccessGatewayUser(array $arguments = [])
 * @method \Http\Promise\Promise enableSmartAccessGatewayUserAsync($arguments = [])
 * @method \Dew\Acs\Result disableSmartAccessGatewayUser(array $arguments = [])
 * @method \Http\Promise\Promise disableSmartAccessGatewayUserAsync($arguments = [])
 * @method \Dew\Acs\Result modifyClientUserDNS(array $arguments = [])
 * @method \Http\Promise\Promise modifyClientUserDNSAsync($arguments = [])
 * @method \Dew\Acs\Result describeClientUserDNS(array $arguments = [])
 * @method \Http\Promise\Promise describeClientUserDNSAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserFlowStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeUserFlowStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserOnlineClients(array $arguments = [])
 * @method \Http\Promise\Promise describeUserOnlineClientsAsync($arguments = [])
 * @method \Dew\Acs\Result describeSagOnlineClientStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeSagOnlineClientStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result describeUserOnlineClientStatistics(array $arguments = [])
 * @method \Http\Promise\Promise describeUserOnlineClientStatisticsAsync($arguments = [])
 * @method \Dew\Acs\Result kickOutClients(array $arguments = [])
 * @method \Http\Promise\Promise kickOutClientsAsync($arguments = [])
 * @method \Dew\Acs\Result roamClientUser(array $arguments = [])
 * @method \Http\Promise\Promise roamClientUserAsync($arguments = [])
 * @method \Dew\Acs\Result createEnterpriseCode(array $arguments = [])
 * @method \Http\Promise\Promise createEnterpriseCodeAsync($arguments = [])
 * @method \Dew\Acs\Result deleteEnterpriseCode(array $arguments = [])
 * @method \Http\Promise\Promise deleteEnterpriseCodeAsync($arguments = [])
 * @method \Dew\Acs\Result updateEnterpriseCode(array $arguments = [])
 * @method \Http\Promise\Promise updateEnterpriseCodeAsync($arguments = [])
 * @method \Dew\Acs\Result updateSmartAGEnterpriseCode(array $arguments = [])
 * @method \Http\Promise\Promise updateSmartAGEnterpriseCodeAsync($arguments = [])
 * @method \Dew\Acs\Result listEnterpriseCode(array $arguments = [])
 * @method \Http\Promise\Promise listEnterpriseCodeAsync($arguments = [])
 * @method \Dew\Acs\Result createCloudConnectNetwork(array $arguments = [])
 * @method \Http\Promise\Promise createCloudConnectNetworkAsync($arguments = [])
 * @method \Dew\Acs\Result deleteCloudConnectNetwork(array $arguments = [])
 * @method \Http\Promise\Promise deleteCloudConnectNetworkAsync($arguments = [])
 * @method \Dew\Acs\Result modifyCloudConnectNetwork(array $arguments = [])
 * @method \Http\Promise\Promise modifyCloudConnectNetworkAsync($arguments = [])
 * @method \Dew\Acs\Result describeCloudConnectNetworks(array $arguments = [])
 * @method \Http\Promise\Promise describeCloudConnectNetworksAsync($arguments = [])
 * @method \Dew\Acs\Result getCloudConnectNetworkUseLimit(array $arguments = [])
 * @method \Http\Promise\Promise getCloudConnectNetworkUseLimitAsync($arguments = [])
 * @method \Dew\Acs\Result describeGrantRules(array $arguments = [])
 * @method \Http\Promise\Promise describeGrantRulesAsync($arguments = [])
 * @method \Dew\Acs\Result grantInstanceToCbn(array $arguments = [])
 * @method \Http\Promise\Promise grantInstanceToCbnAsync($arguments = [])
 * @method \Dew\Acs\Result revokeInstanceFromCbn(array $arguments = [])
 * @method \Http\Promise\Promise revokeInstanceFromCbnAsync($arguments = [])
 * @method \Dew\Acs\Result addACLRule(array $arguments = [])
 * @method \Http\Promise\Promise addACLRuleAsync($arguments = [])
 * @method \Dew\Acs\Result createACL(array $arguments = [])
 * @method \Http\Promise\Promise createACLAsync($arguments = [])
 * @method \Dew\Acs\Result deleteACL(array $arguments = [])
 * @method \Http\Promise\Promise deleteACLAsync($arguments = [])
 * @method \Dew\Acs\Result deleteACLRule(array $arguments = [])
 * @method \Http\Promise\Promise deleteACLRuleAsync($arguments = [])
 * @method \Dew\Acs\Result modifyACL(array $arguments = [])
 * @method \Http\Promise\Promise modifyACLAsync($arguments = [])
 * @method \Dew\Acs\Result modifyACLRule(array $arguments = [])
 * @method \Http\Promise\Promise modifyACLRuleAsync($arguments = [])
 * @method \Dew\Acs\Result describeACLs(array $arguments = [])
 * @method \Http\Promise\Promise describeACLsAsync($arguments = [])
 * @method \Dew\Acs\Result describeACLAttribute(array $arguments = [])
 * @method \Http\Promise\Promise describeACLAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result associateACL(array $arguments = [])
 * @method \Http\Promise\Promise associateACLAsync($arguments = [])
 * @method \Dew\Acs\Result disassociateACL(array $arguments = [])
 * @method \Http\Promise\Promise disassociateACLAsync($arguments = [])
 * @method \Dew\Acs\Result createQos(array $arguments = [])
 * @method \Http\Promise\Promise createQosAsync($arguments = [])
 * @method \Dew\Acs\Result deleteQos(array $arguments = [])
 * @method \Http\Promise\Promise deleteQosAsync($arguments = [])
 * @method \Dew\Acs\Result modifyQos(array $arguments = [])
 * @method \Http\Promise\Promise modifyQosAsync($arguments = [])
 * @method \Dew\Acs\Result associateQos(array $arguments = [])
 * @method \Http\Promise\Promise associateQosAsync($arguments = [])
 * @method \Dew\Acs\Result disassociateQos(array $arguments = [])
 * @method \Http\Promise\Promise disassociateQosAsync($arguments = [])
 * @method \Dew\Acs\Result describeQoses(array $arguments = [])
 * @method \Http\Promise\Promise describeQosesAsync($arguments = [])
 * @method \Dew\Acs\Result getQosAttribute(array $arguments = [])
 * @method \Http\Promise\Promise getQosAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result createQosCar(array $arguments = [])
 * @method \Http\Promise\Promise createQosCarAsync($arguments = [])
 * @method \Dew\Acs\Result deleteQosCar(array $arguments = [])
 * @method \Http\Promise\Promise deleteQosCarAsync($arguments = [])
 * @method \Dew\Acs\Result modifyQosCar(array $arguments = [])
 * @method \Http\Promise\Promise modifyQosCarAsync($arguments = [])
 * @method \Dew\Acs\Result describeQosCars(array $arguments = [])
 * @method \Http\Promise\Promise describeQosCarsAsync($arguments = [])
 * @method \Dew\Acs\Result createQosPolicy(array $arguments = [])
 * @method \Http\Promise\Promise createQosPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result deleteQosPolicy(array $arguments = [])
 * @method \Http\Promise\Promise deleteQosPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result modifyQosPolicy(array $arguments = [])
 * @method \Http\Promise\Promise modifyQosPolicyAsync($arguments = [])
 * @method \Dew\Acs\Result describeQosPolicies(array $arguments = [])
 * @method \Http\Promise\Promise describeQosPoliciesAsync($arguments = [])
 * @method \Dew\Acs\Result createFlowLog(array $arguments = [])
 * @method \Http\Promise\Promise createFlowLogAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFlowLog(array $arguments = [])
 * @method \Http\Promise\Promise deleteFlowLogAsync($arguments = [])
 * @method \Dew\Acs\Result modifyFlowLogAttribute(array $arguments = [])
 * @method \Http\Promise\Promise modifyFlowLogAttributeAsync($arguments = [])
 * @method \Dew\Acs\Result describeFlowLogs(array $arguments = [])
 * @method \Http\Promise\Promise describeFlowLogsAsync($arguments = [])
 * @method \Dew\Acs\Result describeFlowLogSags(array $arguments = [])
 * @method \Http\Promise\Promise describeFlowLogSagsAsync($arguments = [])
 * @method \Dew\Acs\Result describeUnbindFlowLogSags(array $arguments = [])
 * @method \Http\Promise\Promise describeUnbindFlowLogSagsAsync($arguments = [])
 * @method \Dew\Acs\Result activeFlowLog(array $arguments = [])
 * @method \Http\Promise\Promise activeFlowLogAsync($arguments = [])
 * @method \Dew\Acs\Result deactiveFlowLog(array $arguments = [])
 * @method \Http\Promise\Promise deactiveFlowLogAsync($arguments = [])
 * @method \Dew\Acs\Result associateFlowLog(array $arguments = [])
 * @method \Http\Promise\Promise associateFlowLogAsync($arguments = [])
 * @method \Dew\Acs\Result disassociateFlowLog(array $arguments = [])
 * @method \Http\Promise\Promise disassociateFlowLogAsync($arguments = [])
 * @method \Dew\Acs\Result associateSmartAGWithApplicationBandwidthPackage(array $arguments = [])
 * @method \Http\Promise\Promise associateSmartAGWithApplicationBandwidthPackageAsync($arguments = [])
 * @method \Dew\Acs\Result updateSmartAGUserAccelerateConfig(array $arguments = [])
 * @method \Http\Promise\Promise updateSmartAGUserAccelerateConfigAsync($arguments = [])
 * @method \Dew\Acs\Result dissociateSmartAGFromApplicationBandwidthPackage(array $arguments = [])
 * @method \Http\Promise\Promise dissociateSmartAGFromApplicationBandwidthPackageAsync($arguments = [])
 */
final class SmartagClient extends AcsClient
{
    //
}
