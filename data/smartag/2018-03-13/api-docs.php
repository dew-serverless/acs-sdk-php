<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'RPC',
    'product' => 'Smartag',
    'version' => '2018-03-13',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 74745,
      'title' => '智能接入网关实例',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateSmartAccessGateway',
        1 => 'UpgradeSmartAccessGateway',
        2 => 'DowngradeSmartAccessGateway',
        3 => 'DeleteSmartAccessGateway',
        4 => 'DescribeRegions',
        5 => 'MoveResourceGroup',
        6 => 
        array (
          'id' => 185275,
          'title' => '绑定云连接网实例',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'BindSmartAccessGateway',
            1 => 'UnbindSmartAccessGateway',
            2 => 'GrantSagInstanceToCcn',
            3 => 'RevokeSagInstanceFromCcn',
          ),
        ),
        7 => 
        array (
          'id' => 185277,
          'title' => '绑定VBR实例',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'BindVbr',
            1 => 'UnbindVbr',
            2 => 'GrantSagInstanceToVbr',
            3 => 'RevokeInstanceFromVbr',
            4 => 'DescribeSagVbrRelations',
          ),
        ),
        8 => 
        array (
          'id' => 74750,
          'title' => 'SNAT和DNAT',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddSnatEntry',
            1 => 'DeleteSnatEntry',
            2 => 'DescribeSnatEntries',
            3 => 'AddDnatEntry',
            4 => 'DeleteDnatEntry',
            5 => 'DescribeDnatEntries',
          ),
        ),
        9 => 
        array (
          'id' => 74865,
          'title' => '路由策略',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'DescribeRouteDistributionStrategies',
            1 => 'ModifyRouteDistributionStrategy',
            2 => 'DeleteRouteDistributionStrategy',
          ),
        ),
        10 => 
        array (
          'id' => 74869,
          'title' => '健康检查',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateHealthCheck',
            1 => 'DeleteHealthCheck',
            2 => 'ModifyHealthCheck',
            3 => 'DescribeHealthChecks',
            4 => 'DescribeHealthCheckAttribute',
          ),
        ),
        11 => 
        array (
          'id' => 185257,
          'title' => '接入点',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'UpdateSmartAGAccessPoint',
            1 => 'ProbeAccessPointNetworkQuality',
            2 => 'ListSmartAGByAccessPoint',
            3 => 'ListAccessPoints',
            4 => 'ListAccessPointNetworkQualities',
          ),
        ),
        12 => 
        array (
          'id' => 74878,
          'title' => '应用识别DPI',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'UpdateSmartAGDpiAttribute',
            1 => 'DisableSmartAGDpiMonitor',
            2 => 'EnableSmartAGDpiMonitor',
            3 => 'ListDpiSignatures',
            4 => 'ListDpiGroups',
            5 => 'ListDpiConfigError',
            6 => 'GetSmartAGDpiAttribute',
            7 => 'GetAclAttribute',
          ),
        ),
        13 => 
        array (
          'id' => 185224,
          'title' => '拨测监控',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateProbeTask',
            1 => 'ListProbeTask',
            2 => 'UpdateProbeTask',
            3 => 'DeleteProbeTask',
            4 => 'CreateServiceAddress',
            5 => 'DeleteServiceAddress',
            6 => 'ListAvailableServiceAddress',
            7 => 'SetAdvancedMonitorState',
            8 => 'GetAdvancedMonitorState',
          ),
        ),
        14 => 
        array (
          'id' => 74754,
          'title' => '查询智能接入网关实例相关信息',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'DescribeSmartAccessGatewayAttribute',
            1 => 'GetSmartAccessGatewayUseLimit',
            2 => 'DescribeSmartAccessGatewayVersions',
            3 => 'DescribeSagTrafficTopN',
            4 => 'DescribeSagDropTopN',
            5 => 'DescribeSAGDeviceInfo',
            6 => 'ListSmartAGApiUnsupportedFeature',
            7 => 'DescribeGrantSagRules',
            8 => 'DescribeSmartAccessGateways',
            9 => 'DescribeDeviceAutoUpgradePolicy',
            10 => 'DescribeGrantSagVbrRules',
            11 => 'DescribeBindableSmartAccessGateways',
          ),
        ),
      ),
    ),
    1 => 
    array (
      'id' => 185296,
      'title' => '智能接入网关设备',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 185250,
          'title' => '配置路由',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'DescribeSagGlobalRouteProtocol',
            1 => 'DescribeSagRouteList',
            2 => 'DescribeSagPortRouteProtocolList',
            3 => 'ModifySagGlobalRouteProtocol',
            4 => 'ModifySagPortRouteProtocol',
            5 => 
            array (
              'id' => 74730,
              'title' => '动态路由',
              'type' => 'directory',
              'children' => 
              array (
                0 => 'ModifySagRouteProtocolBgp',
                1 => 'DescribeSagRouteProtocolBgp',
                2 => 'ModifySagRouteProtocolOspf',
                3 => 'DescribeSagRouteProtocolOspf',
              ),
            ),
            6 => 
            array (
              'id' => 74735,
              'title' => '静态路由',
              'type' => 'directory',
              'children' => 
              array (
                0 => 'CreateSagStaticRoute',
                1 => 'DescribeSagStaticRouteList',
                2 => 'ModifySagStaticRoute',
                3 => 'DeleteSagStaticRoute',
              ),
            ),
          ),
        ),
        1 => 
        array (
          'id' => 74875,
          'title' => '配置端口',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ModifySagPortRole',
            1 => 'DescribeSagPortList',
            2 => 
            array (
              'id' => 185222,
              'title' => 'WAN口',
              'type' => 'directory',
              'children' => 
              array (
                0 => 'DescribeSagWanList',
                1 => 'ModifySagWan',
                2 => 'ModifySagWanSnat',
                3 => 'DescribeSagWanSnat',
                4 => 'DescribeSagWan4G',
              ),
            ),
            3 => 
            array (
              'id' => 185255,
              'title' => 'LAN口',
              'type' => 'directory',
              'children' => 
              array (
                0 => 'DescribeSagLanList',
                1 => 'ModifySagLan',
              ),
            ),
            4 => 
            array (
              'id' => 185256,
              'title' => '管理口',
              'type' => 'directory',
              'children' => 
              array (
                0 => 'DescribeSagManagementPort',
                1 => 'ModifySagManagementPort',
              ),
            ),
            5 => 
            array (
              'id' => 74849,
              'title' => '专线子接口',
              'type' => 'directory',
              'children' => 
              array (
                0 => 'CreateSagExpressConnectInterface',
                1 => 'DeleteSagExpressConnectInterface',
                2 => 'ModifySagExpressConnectInterface',
                3 => 'DescribeSagExpressConnectInterfaceList',
              ),
            ),
          ),
        ),
        2 => 
        array (
          'id' => 185278,
          'title' => '配置高可用',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ModifySagHa',
            1 => 'DescribeSagHa',
            2 => 'DescribeSmartAccessGatewayHa',
          ),
        ),
        3 => 
        array (
          'id' => 185297,
          'title' => '配置DNS',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'DescribeSagCurrentDns',
            1 => 'DescribeSagUserDns',
            2 => 'ModifySagUserDns',
          ),
        ),
        4 => 
        array (
          'id' => 185298,
          'title' => '配置Wi-Fi',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'ModifySagWifi',
            1 => 'DescribeSagWifi',
          ),
        ),
        5 => 
        array (
          'id' => 185273,
          'title' => '管理智能接入网关设备',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'BindSerialNumber',
            1 => 'UnbindSerialNumber',
            2 => 'ActivateSmartAccessGateway',
            3 => 'SynchronizeSmartAGWebConfig',
            4 => 'ModifySAGAdminPassword',
            5 => 'RebootSmartAccessGateway',
            6 => 'UnlockSmartAccessGateway',
            7 => 'ModifySagRemoteAccess',
            8 => 'DescribeSagRemoteAccess',
            9 => 'ModifyDeviceAutoUpgradePolicy',
            10 => 'UpdateSmartAccessGatewayVersion',
            11 => 'ModifySmartAccessGateway',
            12 => 'ModifySmartAccessGatewayUpBandwidth',
            13 => 'ClearSagRouteableAddress',
            14 => 'ClearSagCipher',
            15 => 'DiagnoseSmartAccessGateway',
            16 => 'DiscribeSmartAccessGatewayDiagnosisReport',
          ),
        ),
        6 => 
        array (
          'id' => 181735,
          'title' => '适用SCG5000的接口',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddSmartAccessGatewayDnsForward',
            1 => 'UpdateSmartAccessGatewayDnsForward',
            2 => 'DeleteSmartAccessGatewayDnsForward',
            3 => 'ViewSmartAccessGatewayDnsForwards',
            4 => 'UpdateSmartAccessGatewayWanSnat',
            5 => 'ViewSmartAccessGatewayWanSnat',
            6 => 'UpdateSmartAccessGatewayDns',
            7 => 'ViewSmartAccessGatewayDns',
            8 => 'UpdateSmartAccessGatewayBgpRoute',
            9 => 'ViewSmartAccessGatewayBgpRoute',
            10 => 'UpdateSmartAccessGatewayGlobalRouteProtocol',
            11 => 'ViewSmartAccessGatewayGlobalRouteProtocol',
            12 => 'UpdateSmartAccessGatewayPortRouteProtocol',
            13 => 'ViewSmartAccessGatewayPortRouteProtocol',
            14 => 'ViewSmartAccessGatewayRoutes',
            15 => 'UpdateSmartAccessGatewayOspfRoute',
            16 => 'ViewSmartAccessGatewayOspfRoute',
            17 => 'UpdateSmartAccessGatewayAdminPassword',
          ),
        ),
      ),
    ),
    2 => 
    array (
      'id' => 185299,
      'title' => '智能接入网关App实例',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateSmartAccessGatewaySoftware',
        1 => 'UpgradeSmartAccessGatewaySoftware',
        2 => 'DowngradeSmartAccessGatewaySoftware',
      ),
    ),
    3 => 
    array (
      'id' => 185274,
      'title' => '智能接入网关App客户端',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateSmartAccessGatewayClientUser',
        1 => 'DescribeSmartAccessGatewayClientUsers',
        2 => 'ModifySmartAccessGatewayClientUser',
        3 => 'ResetSmartAccessGatewayClientUserPassword',
        4 => 'DeleteSmartAccessGatewayClientUser',
        5 => 'EnableSmartAccessGatewayUser',
        6 => 'DisableSmartAccessGatewayUser',
        7 => 'ModifyClientUserDNS',
        8 => 'DescribeClientUserDNS',
        9 => 'DescribeUserFlowStatistics',
        10 => 'DescribeUserOnlineClients',
        11 => 'DescribeSagOnlineClientStatistics',
        12 => 'DescribeUserOnlineClientStatistics',
        13 => 'KickOutClients',
        14 => 'RoamClientUser',
      ),
    ),
    4 => 
    array (
      'id' => 74740,
      'title' => '企业码',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateEnterpriseCode',
        1 => 'DeleteEnterpriseCode',
        2 => 'UpdateEnterpriseCode',
        3 => 'UpdateSmartAGEnterpriseCode',
        4 => 'ListEnterpriseCode',
      ),
    ),
    5 => 
    array (
      'id' => 74812,
      'title' => '云连接网',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateCloudConnectNetwork',
        1 => 'DeleteCloudConnectNetwork',
        2 => 'ModifyCloudConnectNetwork',
        3 => 'DescribeCloudConnectNetworks',
        4 => 'GetCloudConnectNetworkUseLimit',
        5 => 'DescribeGrantRules',
        6 => 'GrantInstanceToCbn',
        7 => 'RevokeInstanceFromCbn',
      ),
    ),
    6 => 
    array (
      'id' => 74821,
      'title' => '访问控制',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddACLRule',
        1 => 'CreateACL',
        2 => 'DeleteACL',
        3 => 'DeleteACLRule',
        4 => 'ModifyACL',
        5 => 'ModifyACLRule',
        6 => 'DescribeACLs',
        7 => 'DescribeACLAttribute',
        8 => 'AssociateACL',
        9 => 'DisassociateACL',
      ),
    ),
    7 => 
    array (
      'id' => 74832,
      'title' => 'QoS策略',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 185251,
          'title' => 'QoS策略实例',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateQos',
            1 => 'DeleteQos',
            2 => 'ModifyQos',
            3 => 'AssociateQos',
            4 => 'DisassociateQos',
            5 => 'DescribeQoses',
            6 => 'GetQosAttribute',
          ),
        ),
        1 => 
        array (
          'id' => 74839,
          'title' => 'QoS策略限速规则',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateQosCar',
            1 => 'DeleteQosCar',
            2 => 'ModifyQosCar',
            3 => 'DescribeQosCars',
          ),
        ),
        2 => 
        array (
          'id' => 74844,
          'title' => 'QoS策略流分类规则',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateQosPolicy',
            1 => 'DeleteQosPolicy',
            2 => 'ModifyQosPolicy',
            3 => 'DescribeQosPolicies',
          ),
        ),
      ),
    ),
    8 => 
    array (
      'id' => 74854,
      'title' => '流日志',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'CreateFlowLog',
        1 => 'DeleteFlowLog',
        2 => 'ModifyFlowLogAttribute',
        3 => 'DescribeFlowLogs',
        4 => 'DescribeFlowLogSags',
        5 => 'DescribeUnbindFlowLogSags',
        6 => 'ActiveFlowLog',
        7 => 'DeactiveFlowLog',
        8 => 'AssociateFlowLog',
        9 => 'DisassociateFlowLog',
      ),
    ),
    9 => 
    array (
      'id' => 185223,
      'title' => '应用加速带宽包',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AssociateSmartAGWithApplicationBandwidthPackage',
        1 => 'UpdateSmartAGUserAccelerateConfig',
        2 => 'DissociateSmartAGFromApplicationBandwidthPackage',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
    ),
  ),
  'apis' => 
  array (
    'CreateSmartAccessGateway' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'MaxBandWidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的带宽。 

- 如果要创建智能接入网关硬件版实例，且智能接入网关设备规格为**sag-100wm**，带宽取值范围为**2**~**50** Mbps。
- 如果要创建智能接入网关硬件版实例，且智能接入网关设备规格为**sag-1000**，带宽取值范围为**10**~**500** Mbps。
- 如果要创建智能接入网关vCPE版实例，带宽取值范围为**10**~**1000** Mbps。
 
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '12',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例名称。

名称长度为2~128个字符，以大小写字母或中文开头，可包含数字、半角句号（.）、下划线（_）或短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'testname',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的描述信息。

描述长度为2~256个字符，以大小写字母或中文开头，可包含数字、半角句号（.）、下划线（_）或短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        4 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的购买时长，单位：月。

取值：**1**~**9**、**12**、**24**、**36**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '12',
          ),
        ),
        5 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动支付预付费实例的账单。取值：

- **true**：是。
- **false**（默认值）：否。

如果您选择不自动支付账单，在您调用本接口后，请前往控制台的订单中心完成支付，实例才能创建成功。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'HardWareSpec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例类型。取值：

- **sag-100wm**。
- **sag-1000**。
- **sag-vcpe**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-100wm',
          ),
        ),
        7 => 
        array (
          'name' => 'ReceiverCountry',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备收货国家。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '中国',
          ),
        ),
        8 => 
        array (
          'name' => 'ReceiverState',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备收货省份。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '浙江',
          ),
        ),
        9 => 
        array (
          'name' => 'ReceiverCity',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备收货城市。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '杭州',
          ),
        ),
        10 => 
        array (
          'name' => 'ReceiverDistrict',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备收货街区。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '西湖',
          ),
        ),
        11 => 
        array (
          'name' => 'ReceiverTown',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备收货乡镇。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '转塘',
          ),
        ),
        12 => 
        array (
          'name' => 'ReceiverZip',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备收货省份邮编。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '310000',
          ),
        ),
        13 => 
        array (
          'name' => 'ReceiverPhone',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备收件人电话。',
            'type' => 'string',
            'required' => false,
            'example' => '8585****',
          ),
        ),
        14 => 
        array (
          'name' => 'ReceiverMobile',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备收件人手机号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1884085****',
          ),
        ),
        15 => 
        array (
          'name' => 'ReceiverName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备收件人姓名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '张三',
          ),
        ),
        16 => 
        array (
          'name' => 'ReceiverEmail',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备收货人的电子邮箱。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'xx@example.com',
          ),
        ),
        17 => 
        array (
          'name' => 'BuyerMessage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 买家留言信息。 ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '留言',
          ),
        ),
        18 => 
        array (
          'name' => 'ReceiverAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备收货详细地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'XX号',
          ),
        ),
        19 => 
        array (
          'name' => 'HaType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '选择一种使用方式。取值： 

- **no_backup**：只购买一台智能接入网关设备接入阿里云。  
- **cold_backup**：购买两台智能接入网关设备共享带宽，仅主设备在线。当主设备发生故障时，需手动切换至备设备。
- **warm_backup**：购买两台智能接入网关设备共享带宽，两台设备同时在线。当主设备故障时自动切换到备设备。 

> 在您创建智能接入网关vCPE实例时，本参数仅取值**warm_backup**。


',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'no_backup',
          ),
        ),
        20 => 
        array (
          'name' => 'ChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的计费类型。

取值：  **PREPAY**，预付费。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'PREPAY',
          ),
        ),
        21 => 
        array (
          'name' => 'AlreadyHaveSag',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否已拥有智能接入网关设备。取值：

- **true**：是。
- **false**（默认值）：否。',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'false',
            'default' => 'false',
          ),
        ),
        22 => 
        array (
          'name' => 'CPEVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '在创建智能接入网关vCPE实例时的版本。

取值：**basic**，基础版。',
            'type' => 'string',
            'required' => false,
            'example' => 'basic',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '智能接入网关实例信息。',
            'type' => 'object',
            'properties' => 
            array (
              'Description' => 
              array (
                'description' => '智能接入网关实例的描述信息。',
                'type' => 'string',
                'example' => 'testdesc',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A6B9EB0F-57DB-4843-A372-04678ABF490E',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'string',
                'example' => '20337777****',
              ),
              'SmartAGId' => 
              array (
                'description' => '智能接入网关实例ID。',
                'type' => 'string',
                'example' => 'sag-nylv14tghsk26c*****',
              ),
              'Name' => 
              array (
                'description' => '智能接入网关实例的名称。',
                'type' => 'string',
                'example' => 'testname',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '智能接入网关实例所属的资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfm2iu4fnc****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Description\\": \\"testdesc\\",\\n  \\"RequestId\\": \\"A6B9EB0F-57DB-4843-A372-04678ABF490E\\",\\n  \\"OrderId\\": \\"20337777****\\",\\n  \\"SmartAGId\\": \\"sag-nylv14tghsk26c*****\\",\\n  \\"Name\\": \\"testname\\",\\n  \\"ResourceGroupId\\": \\"rg-acfm2iu4fnc****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateSmartAccessGatewayResponse>\\n    <SmartAGId>sag-nylv14tghsk26c****</SmartAGId>\\n    <OrderId>20337777121212</OrderId>\\n    <RequestId>A6B9EB0F-57DB-4843-A372-04678ABF490E</RequestId>\\n</CreateSmartAccessGatewayResponse>","errorExample":""}]',
      'title' => '智能接入网关实例',
      'summary' => '创建智能接入网关实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpgradeSmartAccessGateway' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-d3m51apgw4po******',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'BandWidthSpec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关的带宽。 

- 如果网关设备规格为sag-100wm，带宽取值：2~50Mbps 。
          
- 如果网关设备规格为sag-1000，带宽取值：10~500Mbps。
',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'example' => '3',
          ),
        ),
        3 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否是自动支付预付费实例的账单。取值：

- **true**：是。

- **false**：否',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '45F07029-1783-4B2D-B4CE-45B9EAA58440',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'string',
                'example' => '203384676330296',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InvalidUserCount',
            'errorMessage' => 'The specified UserCount is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InvalidDataPlan',
            'errorMessage' => 'The specified DataPlan is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"45F07029-1783-4B2D-B4CE-45B9EAA58440\\",\\n  \\"OrderId\\": \\"203384676330296\\"\\n}","errorExample":""},{"type":"xml","example":"<UpgradeSmartAccessGatewayResponse>\\n    <RequestId>45F07029-1783-4B2D-B4CE-45B9EAA58440</RequestId>\\n    <OrderId>203384676330296</OrderId>\\n</UpgradeSmartAccessGatewayResponse>","errorExample":""}]',
      'title' => '升高智能接入网关实例的带宽',
      'summary' => '调用UpgradeSmartAccessGateway接口升高智能接入网关实例的带宽。 。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DowngradeSmartAccessGateway' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-nylv14tghsk26c*****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'BandWidthSpec',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关的带宽。
                                 
- 如果网关设备规格为**SAG-100wm**，带宽取值：**2~50Mbps**。
                                    
- 如果网关设备规格为**SAG-1000**，带宽取值：**10~500Mbps**。           ',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否是自动支付预付费实例的账单。取值：

- **true**：是。
- **false**（默认值）：不是。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A6B9EB0F-57DB-4843-A372-04678ABF490E',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'string',
                'example' => '20337777855****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InvalidUserCount',
            'errorMessage' => 'The specified UserCount is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InvalidDataPlan',
            'errorMessage' => 'The specified DataPlan is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A6B9EB0F-57DB-4843-A372-04678ABF490E\\",\\n  \\"OrderId\\": \\"20337777855****\\"\\n}","errorExample":""},{"type":"xml","example":"<DowngradeSmartAccessGatewayResponse>\\r\\n  <RequestId>A6B9EB0F-57DB-4843-A372-04678ABF490E</RequestId>\\r\\n  <OrderId>20337777855****</OrderId>\\r\\n</DowngradeSmartAccessGatewayResponse>","errorExample":""}]',
      'title' => '降低智能接入网关实例的带宽',
      'summary' => '使用DowngradeSmartAccessGateway接口降低智能接入网关实例的带宽。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSmartAccessGateway' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-far8v6owtdxlua****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E26DBAAE-A796-4A48-98B4-B45AFCD1F299',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.BusinessStateNotSupport',
            'errorMessage' => 'The specified SAG instance is in use and cannot be deleted.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E26DBAAE-A796-4A48-98B4-B45AFCD1F299\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteSmartAccessGatewayResponse>\\r\\n<RequestId>D133AFFC-6E37-414D-8ECD-246DEBE4388D</RequestId>\\r\\n</DeleteSmartAccessGatewayResponse>","errorExample":""}]',
      'title' => '删除实例',
      'summary' => '删除智能接入网关实例。',
      'description' => '- 您要删除的智能接入网关实例为硬件版实例或VCPE实例。
- 您要删除的智能接入网关实例处于欠费锁定状态。
- 您要删除的智能接入网关实例未绑定任何云连接网（CCN）或边界路由器（VBR）实例。如有已绑定网络实例，您可以先进行解绑，详情请参见[解绑网络实例](~~164903~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeRegions' => 
    array (
      'summary' => '查询可用地域。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'AcceptLanguage',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '返回值语言。取值： 

- **zh-CN（默认值）**：中文。
  
- **en-US**：英文。

- **ja**：日语。
',
            'type' => 'string',
            'required' => false,
            'example' => 'zh-CN',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2F026E79-30AD-47B6-9E7D-D1D4BA77F1F1',
              ),
              'Regions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Region' => 
                  array (
                    'description' => '可用地域的集合。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'LocalName' => 
                        array (
                          'description' => '地域名称。',
                          'type' => 'string',
                          'example' => '华东2（上海）',
                        ),
                        'RegionEndpoint' => 
                        array (
                          'description' => '当前地域下智能接入网关服务的Endpoint。',
                          'type' => 'string',
                          'example' => 'smartag.cn-shanghai.aliyuncs.com',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '地域ID。',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
        501 => 
        array (
          0 => 
          array (
            'errorCode' => 'InnerServiceFailed',
            'errorMessage' => 'Call inner service failed.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"2F026E79-30AD-47B6-9E7D-D1D4BA77F1F1\\",\\n  \\"Regions\\": {\\n    \\"Region\\": [\\n      {\\n        \\"LocalName\\": \\"华东2（上海）\\",\\n        \\"RegionEndpoint\\": \\"smartag.cn-shanghai.aliyuncs.com\\",\\n        \\"RegionId\\": \\"cn-shanghai\\"\\n      }\\n    ]\\n  }\\n}","errorExample":"{\\n    \\"RequestId\\": \\"2F026E79-30AD-47B6-9E7D-D1D4BA77F1F1\\", \\n    \\"Regions\\": {\\n        \\"Region\\": [\\n            {\\n                \\"RegionId\\": \\"cn-qingdao\\", \\n                \\"RegionEndpoint\\": \\"vpc.aliyuncs.com\\", \\n                \\"LocalName\\": \\"华北 1\\"\\n            }, \\n            {\\n                \\"RegionId\\": \\"eu-central-1\\", \\n                \\"RegionEndpoint\\": \\"vpc.eu-central-1.aliyuncs.com\\", \\n                \\"LocalName\\": \\"欧洲中部 1 (法兰克福)\\"\\n            }\\n        ]\\n    }\\n}"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?> \\n<DescribeRegionsResponse> \\n<RequestId>611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F</RequestId>\\n<Regions>\\n\\t<Region>\\n\\t\\t<RegionId>cn-shanghai</RegionId>\\n\\t\\t<RegionEndpoint>smartag.cn-shanghai.aliyuncs.com</RegionEndpoint>\\n\\t\\t<LocalName>华东2（上海）</LocalName>\\n\\t</Region>\\n<Regions>\\n</DescribeRegionsResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?> \\n<DescribeRegionsResponse> \\n<RequestId>611CB80C-B6A9-43DB-9E38-0B0AC3D9B58F</RequestId>\\n<Regions>\\n\\t<Region>\\n\\t\\t<RegionId>cn-qingdao</RegionId>\\n\\t\\t<RegionEndpoint>vpc.aliyuncs.com</RegionEndpoint>\\n\\t\\t<LocalName>华北 1</LocalName>\\n\\t</Region>\\n\\t<Region>\\n\\t\\t<RegionId>eu-central-1</RegionId>\\n\\t\\t<RegionEndpoint>vpc.eu-central-1.aliyuncs.com</RegionEndpoint>\\n\\t\\t<LocalName>欧洲中部 1 (法兰克福)</LocalName>\\n\\t</Region>\\n<Regions>\\n</DescribeRegionsResponse>"}]',
      'title' => '查询可以使用的阿里云地域',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'MoveResourceGroup' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源ID。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fl-g5w9ty0z36****',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源类型。取值：

- **smartag**：智能接入网关硬件版实例或VCPE版实例。
- **smartag_s**：智能接入网关APP实例。
- **acl**：访问控制实例。
- **flowlog**：流日志实例。
- **qos**：QoS策略实例。
- **ccn**：云连接网实例。
- **abwp**：应用加速带宽包实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'flowlog',
          ),
        ),
        2 => 
        array (
          'name' => 'NewResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要移动到的资源组ID。

您可以通过[资源管理控制台](https://resourcemanager.console.aliyun.com/resource-groups)查看资源组ID。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'rg-acfm2iu4fnc****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6668829E-B261-4038-9EC6-0A2C57A14916',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6668829E-B261-4038-9EC6-0A2C57A14916\\"\\n}","errorExample":""},{"type":"xml","example":"<MoveResourceGroupResponse>\\n    <RequestId>6668829E-B261-4038-9EC6-0A2C57A14916</RequestId>\\n</MoveResourceGroupResponse>","errorExample":""}]',
      'title' => '移动资源组实例分组',
      'summary' => '调用MoveResourceGroup接口修改智能接入网关资源所属的资源组。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BindSmartAccessGateway' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CcnId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定的云连接网ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ccn-isdjvvkexkrpk*****',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-m7ez44zpayma*****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关的所属区域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'SmartAGUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的用户ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1250123456123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8A3FF8DD-B27D-4ED2-B032-5EF90B38195D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.NoBindSN',
            'errorMessage' => 'The specified SAG is not bound with a serial number. Please perform binding first.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.NoBandwidth',
            'errorMessage' => 'Buy bandwidth for the specified SAG instance before binding it to a CCN instance.',
          ),
          2 => 
          array (
            'errorCode' => 'NotBoundCEN',
            'errorMessage' => 'Bind the specified CCN instance to a CEN instance first.',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.VbrNotBondCen',
            'errorMessage' => 'Bind the specified VBR instance to a CEN instance first.',
          ),
          4 => 
          array (
            'errorCode' => 'AlreadyBound.CCN',
            'errorMessage' => 'The specified SAG instance is bound to another CCN instance. Unbind them first.',
          ),
          5 => 
          array (
            'errorCode' => 'LinkLevelBackupExists',
            'errorMessage' => 'The specified SAG instance is already used as a leased line backup.',
          ),
          6 => 
          array (
            'errorCode' => 'TunnelIdDistributeError',
            'errorMessage' => 'Tunnel id distribute error.',
          ),
          7 => 
          array (
            'errorCode' => 'UpdateError.SMARTAG',
            'errorMessage' => 'Update smart access gateway error.',
          ),
          8 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          9 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'CidrConflict',
            'errorMessage' => 'Cidr is conflict, Please Check your input.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidId.CCN',
            'errorMessage' => 'Invalid cloud connect network id.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'SmartAccessGatewayAlreadyBound',
            'errorMessage' => 'The smart access gateway already bound.',
          ),
          5 => 
          array (
            'errorCode' => 'TunnelIdNotEnough',
            'errorMessage' => 'Tunnel id is not enough.',
          ),
          6 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          7 => 
          array (
            'errorCode' => 'VbrConflict.ChangeSubnet',
            'errorMessage' => 'The subnet of the gateway conflicts with the VBR. Modify the subnet first.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8A3FF8DD-B27D-4ED2-B032-5EF90B38195D\\"\\n}","errorExample":""},{"type":"xml","example":"<BindSmartAccessGatewayResponse>\\n    <RequestId>8A3FF8DD-B27D-4ED2-B032-5EF90B38195D</RequestId>\\n</BindSmartAccessGatewayResponse>","errorExample":""}]',
      'title' => '将智能接入网关绑定到指定的云连接网中',
      'summary' => '调用BindSmartAccessGateway接口将智能接入网关绑定到指定的云连接网中。 。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnbindSmartAccessGateway' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CcnId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ccn-kygbldwikz********',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-0ovhf732a********',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关的所属区域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'SmartAGUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的用户ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1688401595963306',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CE6642D4-21EB-4168-9BF9-F217953F9892',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'OperationDenied.BondApplicationBandwidthPackage	',
            'errorMessage' => 'Because the application acceleration bandwidth package bound by the current instance is not allowed to unbind the cloud connection network, please unbind the application acceleration bandwidth package first.	',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.DedicatedLineExist',
            'errorMessage' => 'This SAG instance is used as a backup for a leased line. Unbind the SAG instance from the leased line first.',
          ),
          2 => 
          array (
            'errorCode' => 'NotBoundCEN',
            'errorMessage' => 'Bind the specified CCN instance to a CEN instance first.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotBind',
            'errorMessage' => 'The instance has not yet been bound.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          4 => 
          array (
            'errorCode' => 'AlreadyBound.CEN',
            'errorMessage' => 'This instance has been bound, please unbind first.',
          ),
          5 => 
          array (
            'errorCode' => 'NotBoundCCN',
            'errorMessage' => 'The specified smart access gateway has not bound CCN; please bind CCN first.',
          ),
          6 => 
          array (
            'errorCode' => 'VbrConflict.ChangeSubnet',
            'errorMessage' => 'The subnet of the gateway conflicts with the VBR. Modify the subnet first.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CE6642D4-21EB-4168-9BF9-F217953F9892\\"\\n}","errorExample":""},{"type":"xml","example":"<UnbindSmartAccessGatewayResponse>\\n    <RequestId>CE6642D4-21EB-4168-9BF9-F217953F9892</RequestId>\\n</UnbindSmartAccessGatewayResponse>","errorExample":""}]',
      'title' => '将智能接入网关从指定的云连接网中解绑',
      'summary' => '调用UnbindSmartAccessGateway将智能接入网关从指定的云连接网中解绑。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GrantSagInstanceToCcn' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-tzirqx07bvcngm****',
          ),
        ),
        2 => 
        array (
          'name' => 'CcnInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ccn-n2935s1mnwv8i*****',
          ),
        ),
        3 => 
        array (
          'name' => 'CcnUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网实例所属阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1210123456123456',
          ),
        ),
        4 => 
        array (
          'name' => 'GrantTrafficService',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否给跨账号的云连接网实例授权智能接入网关实例的流量服务能力。

授权成功后，跨账号云连接网实例可以引导智能接入网关实例去往公网的流量做安全审计。

- **true**：授权。
- **false**：不授权。

>在您授权成功后，如果智能接入网关实例开启了安全引流功能，则不允许取消授权。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6E1674AC-083C-4031-B047-7A66E418E0C6',
              ),
              'InstanceId' => 
              array (
                'description' => '授权成功后返回的授权实例ID。',
                'type' => 'string',
                'example' => 'sgc-6z21oj0vjjrx6s****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'CCN.InvalidUid',
            'errorMessage' => 'The specified CCN user ID is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'CCN.InvalidId',
            'errorMessage' => 'You must specify the CCN instance ID.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'SAG.GrantDuplicated',
            'errorMessage' => 'You have authorized another CCN instance to bind to the specified SAG instance. Revoke the authorization first.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6E1674AC-083C-4031-B047-7A66E418E0C6\\",\\n  \\"InstanceId\\": \\"sgc-6z21oj0vjjrx6s****\\"\\n}","errorExample":""},{"type":"xml","example":"<GrantSagInstanceToCcnResponse>\\n    <RequestId>6E1674AC-083C-4031-B047-7A66E418E0C6</RequestId>\\n    <InstanceId>sgc-6z21oj0vjjrx6s****</InstanceId>\\n</GrantSagInstanceToCcnResponse>","errorExample":""}]',
      'title' => '将实例授权给跨账号的云连接网实例',
      'summary' => '将智能接入网关实例授权给跨账号的云连接网实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RevokeSagInstanceFromCcn' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-hd**************',
          ),
        ),
        2 => 
        array (
          'name' => 'CcnInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ccn-jf********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BCB97739-0CB5-4C94-9A5C-13051FFAB0E9',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'CCN.InvalidId',
            'errorMessage' => 'You must specify the CCN instance ID.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BCB97739-0CB5-4C94-9A5C-13051FFAB0E9\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <RevokeSagInstanceFromCcnResponse>\\r\\n\\t<RequestId>BCB97739-0CB5-4C94-9A5C-13051FFAB0E9</RequestId>\\r\\n    </RevokeSagInstanceFromCcnResponse>","errorExample":""}]',
      'title' => '撤销实例的加入授权',
      'summary' => '从云连接网撤销智能接入网关实例的加入授权。',
    ),
    'BindVbr' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-eoqbp1fmrsgbrn****',
          ),
        ),
        2 => 
        array (
          'name' => 'VbrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定的边界路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-gc7ccdvtp3l4fec0j****',
          ),
        ),
        3 => 
        array (
          'name' => 'VbrRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要绑定的边界路由器实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'SmartAGUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1250123456123456',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '09A2010F-602B-4EC6-A60F-9914AAE2DCA0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'You are not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.VBR',
            'errorMessage' => 'The specified VBR instance is invalid. You must specify a VBR instance that is associated with an ECC instance.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.SoftwareNoSupportVbr',
            'errorMessage' => 'You cannot bind an SAG software instance with a VBR instance.',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.VbrNotBondCen',
            'errorMessage' => 'Bind the specified VBR instance to a CEN instance first.',
          ),
          4 => 
          array (
            'errorCode' => 'SAG.VbrBound',
            'errorMessage' => 'The specified SAG instance is bound to another VBR instance. Unbind them first.',
          ),
          5 => 
          array (
            'errorCode' => 'LinkLevelBackupExists',
            'errorMessage' => 'The specified SAG instance is already used as a leased line backup.',
          ),
          6 => 
          array (
            'errorCode' => 'SAG.VbrBoundToSAG',
            'errorMessage' => 'The specified VBR instance is bound to another SAG instance. Unbind them first.',
          ),
          7 => 
          array (
            'errorCode' => 'NotBoundCEN',
            'errorMessage' => 'Bind the specified CCN instance to a CEN instance first.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'NotBoundCCN',
            'errorMessage' => 'The specified smart access gateway has not bound CCN; please bind CCN first.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          4 => 
          array (
            'errorCode' => 'VbrConflict.CreateBackup',
            'errorMessage' => 'The subnet of the gateway conflicts with the VBR. Create a backup relationship first.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"09A2010F-602B-4EC6-A60F-9914AAE2DCA0\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<BindVbrResponse>\\r\\n\\t<RequestId>09A2010F-602B-4EC6-A60F-9914AAE2DCA0</RequestId>\\r\\n</BindVbrResponse>","errorExample":""}]',
      'title' => '绑定边界路由器',
      'summary' => '调用BindVbr绑定边界路由器。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnbindVbr' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-pek29fu47tmpj0****',
          ),
        ),
        2 => 
        array (
          'name' => 'VbrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待解绑的边界路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-wz90rs6ef1m2fq0yn****',
          ),
        ),
        3 => 
        array (
          'name' => 'VbrRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边界路由器实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'SmartAGUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '253460731706911258',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '61C33444-D8C5-4018-A06C-BA8C8812BEF6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden.SubUser',
            'errorMessage' => 'You are not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'NotBoundCEN',
            'errorMessage' => 'Bind the specified CCN instance to a CEN instance first.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'VbrConflict.ChangeSubnet',
            'errorMessage' => 'The subnet of the gateway conflicts with the VBR. Modify the subnet first.',
          ),
          2 => 
          array (
            'errorCode' => 'NotBoundCCN',
            'errorMessage' => 'The specified smart access gateway has not bound CCN; please bind CCN first.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"61C33444-D8C5-4018-A06C-BA8C8812BEF6\\"\\n}","errorExample":""},{"type":"xml","example":"<UnbindVbrResponse>\\n    <RequestId>61C33444-D8C5-4018-A06C-BA8C8812BEF6</RequestId>\\n</UnbindVbrResponse>","errorExample":""}]',
      'title' => '解除绑定的边界路由器',
      'summary' => '调用UnbindVbr解除绑定的边界路由器。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GrantSagInstanceToVbr' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边界路由器实例所属账号UID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1231212121121212112',
          ),
        ),
        2 => 
        array (
          'name' => 'VbrInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边界路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-bp13gtbhdp0pfqg6s****',
          ),
        ),
        3 => 
        array (
          'name' => 'VbrRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边界路由器实例所在地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-0nnteglltw6z4b****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '49CEBB2B-9E5C-4789-8A29-3255A56A67B1',
              ),
              'InstanceId' => 
              array (
                'description' => '授权实例ID。',
                'type' => 'string',
                'example' => 'sgv-3x8djyem7vqh70****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"InstanceId\\": \\"sgv-3x8djyem7vqh70****\\",\\n  \\"RequestId\\": \\"49CEBB2B-9E5C-4789-8A29-3255A56A67B1\\"\\n}","errorExample":""},{"type":"xml","example":"<GrantSagInstanceToVbrResponse>\\n<RequestId>49CEBB2B-9E5C-4789-8A29-3255A56A67B1</RequestId>\\n<InstanceId>sgv-3x8djyem7vqh70****</InstanceId>\\n</GrantSagInstanceToVbrResponse>","errorExample":""}]',
      'title' => '向跨账号边界路由器 VBR 实例授权',
      'summary' => '调用GrantSagInstanceToVbr向跨账号边界路由器（VBR）实例授权。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RevokeInstanceFromVbr' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-0nnteglltw6z4b****',
          ),
        ),
        2 => 
        array (
          'name' => 'VbrInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边界路由器实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'vbr-bp13gtbhdp0pfqg6s****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D085AE49-51DC-4E8A-9F06-2D99C4E374F7',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D085AE49-51DC-4E8A-9F06-2D99C4E374F7\\"\\n}","errorExample":""},{"type":"xml","example":"<RevokeInstanceFromVbrResponse>\\r\\n<RequestId>D085AE49-51DC-4E8A-9F06-2D99C4E374F7</RequestId>\\r\\n</RevokeInstanceFromVbrResponse>","errorExample":""}]',
      'title' => '取消跨账号边界路由器（VBR）实例授权',
      'summary' => '取消跨账号边界路由器（VBR）实例授权。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagVbrRelations' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。
您可以调用[DescribeRegions](~~69813~~)接口查询智能接入网关支持的地域以及对应的地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'VbrRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边界路由器实例所属地域ID。
您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'VbrInstanceIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '边界路由器实例ID。可以一次查询多个边界路由器实例，N取值最大为**20**。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '边界路由器实例ID。

',
              'type' => 'string',
              'required' => false,
              'example' => 'vbr-bp15ihkk93ezxppk****',
            ),
            'required' => true,
            'example' => 'vbr-bp15ihkk93ezxppkd****',
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '17D79124-104A-42DB-8FCA-CE2957CD1723',
              ),
              'SagVbrRelations' => 
              array (
                'description' => '绑定信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'VbrInstanceId' => 
                    array (
                      'description' => '边界路由器实例ID。',
                      'type' => 'string',
                      'example' => 'vbr-bp15ihkk93ezxppk****',
                    ),
                    'SagUid' => 
                    array (
                      'description' => '智能接入网关实例所属阿里云账号（主账号）ID。',
                      'type' => 'string',
                      'example' => '16884015121212****',
                    ),
                    'SagInstanceId' => 
                    array (
                      'description' => '智能接入网关实例ID。',
                      'type' => 'string',
                      'example' => 'sag-0nnteglltw6z4b****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Param.InvalidVersionComparator',
            'errorMessage' => 'The specified version comparison operator is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRegionID',
            'errorMessage' => 'The specified regionId does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"17D79124-104A-42DB-8FCA-CE2957CD1723\\",\\n  \\"SagVbrRelations\\": [\\n    {\\n      \\"VbrInstanceId\\": \\"vbr-bp15ihkk93ezxppk****\\",\\n      \\"SagUid\\": \\"16884015121212****\\",\\n      \\"SagInstanceId\\": \\"sag-0nnteglltw6z4b****\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagVbrRelationsResponse>\\n    <RequestId>17D79124-104A-42DB-8FCA-CE2957CD1723</RequestId>\\n    <SagVbrRelations>\\n        <VbrInstanceId>vbr-bp15ihkk93ezxppk****</VbrInstanceId>\\n        <SagUid>16884015121212****</SagUid>\\n        <SagInstanceId>sag-0nnteglltw6z4b****</SagInstanceId>\\n    </SagVbrRelations>\\n</DescribeSagVbrRelationsResponse>","errorExample":""}]',
      'title' => '查询SAG绑定的VBR列表',
      'summary' => '查询指定边界路由器（VBR）实例是否在指定地域下绑定有智能接入网关实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddSnatEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-jf5w9a8k5mhi5h****',
          ),
        ),
        2 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.1.0/24',
          ),
        ),
        3 => 
        array (
          'name' => 'SnatIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '公网IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '11.0.XX.XX',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '56BF6C79-C77D-41A0-86DD-A4B156E784EA',
              ),
              'InstanceId' => 
              array (
                'description' => 'SNAT实例ID。',
                'type' => 'string',
                'example' => 'snat-m2obgkt5ya1puz****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SNAT.CidrConfigExist',
            'errorMessage' => 'The specified SNAT CIDR block already exists.',
          ),
          2 => 
          array (
            'errorCode' => 'SNAT.AmountLimit',
            'errorMessage' => 'The maximum number of SNAT entries is exceeded.',
          ),
          3 => 
          array (
            'errorCode' => 'SNAT.SnatDnatIpConflict',
            'errorMessage' => 'The SNAT destination IP address is the same as the DNAT IP address.',
          ),
          4 => 
          array (
            'errorCode' => 'SNAT.InvalidCidr',
            'errorMessage' => 'The specified SNAT CIDR block is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          6 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          7 => 
          array (
            'errorCode' => 'SNAT.InvalidIp',
            'errorMessage' => 'The specified SNAT destination IP is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"56BF6C79-C77D-41A0-86DD-A4B156E784EA\\",\\n  \\"InstanceId\\": \\"snat-m2obgkt5ya1puz****\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <AddSnatEntryResponse>\\r\\n\\t<InstanceId>snat-m2obgkt5ya1puz****</InstanceId>\\r\\n\\t<RequestId>56BF6C79-C77D-41A0-86DD-A4B156E784EA</RequestId>\\r\\n    </AddSnatEntryResponse>","errorExample":""}]',
      'title' => '为实例添加私网SNAT条目',
      'summary' => '给智能接入网关实例添加私网SNAT条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSnatEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-hfbd*******',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'snat-djngdheb*******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '68CE10C0-2EFF-4B82-9907-10AB7E2B0A6C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"68CE10C0-2EFF-4B82-9907-10AB7E2B0A6C\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <DeleteSnatEntryResponse>\\r\\n\\t<RequestId>68CE10C0-2EFF-4B82-9907-10AB7E2B0A6C</RequestId>\\r\\n    </DeleteSnatEntryResponse>","errorExample":""}]',
      'title' => '删除指定的SNAT条目',
      'summary' => '删除指定智能接入网关绑定的SNAT条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSnatEntries' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn************',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例状态列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，默认值为**10**，最大值为**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => 'SNAT条目记录总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '12',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '674BC3B2-5828-41D5-830E-148EE6CF86C2',
              ),
              'SnatEntries' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SnatEntry' => 
                  array (
                    'description' => 'SNAT条目信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CidrBlock' => 
                        array (
                          'description' => '目标网段。',
                          'type' => 'string',
                          'example' => '192.169.10.0/24',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => 'SNAT条目创建时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1523604565000',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => 'SNAT实例ID。',
                          'type' => 'string',
                          'example' => 'snat-sl7kb9cpgfds*****',
                        ),
                        'SnatIp' => 
                        array (
                          'description' => '公网IP地址。',
                          'type' => 'string',
                          'example' => '10.10.**.**',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageNumber' => 
              array (
                'description' => '实例状态列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '12',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 5,\\n  \\"RequestId\\": \\"674BC3B2-5828-41D5-830E-148EE6CF86C2\\",\\n  \\"PageNumber\\": 12,\\n  \\"TotalCount\\": 12,\\n  \\"SnatEntries\\": {\\n    \\"SnatEntry\\": [\\n      {\\n        \\"InstanceId\\": \\"snat-sl7kb9cpgfds*****\\",\\n        \\"CidrBlock\\": \\"192.169.10.0/24\\",\\n        \\"CreateTime\\": 1523604565000,\\n        \\"SnatIp\\": \\"10.10.**.**\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n\\t<DescribeSnatEntriesResponse>\\r\\n    <PageNumber>1</PageNumber>\\r\\n\\t<PageSize>10</PageSize>\\r\\n\\t<RequestId>674BC3B2-5828-41D5-830E-148EE6CF86C2</RequestId>\\r\\n\\t<SnatEntries>\\r\\n\\t\\t<SnatEntry>\\r\\n\\t\\t\\t<CidrBlock>192.169.10.0/24</CidrBlock>\\r\\n\\t\\t\\t<CreateTime>1523604565000</CreateTime>\\r\\n\\t\\t\\t<InstanceId>snat-sl7kb9cpgfdsjr****</InstanceId>\\r\\n\\t\\t\\t<SnatIp>10.10.10.3</SnatIp>\\r\\n\\t\\t</SnatEntry>\\r\\n\\t\\t<SnatEntry>\\r\\n\\t\\t\\t<CidrBlock>10.0.0.0/8</CidrBlock>\\r\\n\\t\\t\\t<CreateTime>1523604565000</CreateTime>\\r\\n\\t\\t\\t<InstanceId>snat-m2obgkt5ya****</InstanceId>\\r\\n\\t\\t\\t<SnatIp>192.168.3.0</SnatIp>\\r\\n\\t\\t</SnatEntry>\\r\\n\\t</SnatEntries>\\r\\n\\t<TotalCount>2</TotalCount>\\r\\n    </DescribeSnatEntriesResponse>","errorExample":""}]',
      'title' => '查询智能接入网关实例绑定的SNAT条目',
      'summary' => '调用DescribeSnatEntries查询智能接入网关实例绑定的SNAT条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddDnatEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。

> 目前只支持硬件版实例。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-kdhg*******',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT类型，包括以下选项：

- **Intranet**：缺省值，表示私网DNAT。
- **Internet**：公网DNAT。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'Intranet',
            'default' => 'Intranet',
          ),
        ),
        3 => 
        array (
          'name' => 'ExternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '外部的公网IP地址。

> DNAT类型为公网DNAT时，公网DNAT自动识别当前公网IP，无需填写。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '10.10.1.xx',
          ),
        ),
        4 => 
        array (
          'name' => 'ExternalPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '公网端口。

取值范围：**1-65535**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '80',
          ),
        ),
        5 => 
        array (
          'name' => 'InternalIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标私网IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.0.1',
          ),
        ),
        6 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '协议类型，包含以下选项：

- **TCP**：转发TCP协议的报文。
- **UDP**：转发UDP协议的报文。
- **Any**：转发所有协议的报文。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'TCP',
          ),
        ),
        7 => 
        array (
          'name' => 'InternalPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标私网端口号。

取值范围：**1-65535**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '80',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '56BF6C79-C77D-41A0-86DD-A4B156E784EA',
              ),
              'DnatEntryId' => 
              array (
                'description' => 'DNAT实例ID。',
                'type' => 'string',
                'example' => 'fwd-kxe4fq3xuzczze****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidRegionID',
            'errorMessage' => 'The specified regionId does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParam',
            'errorMessage' => 'You must specify the parameter.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam',
            'errorMessage' => 'The parameter is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'DuplicatedDnatEntry',
            'errorMessage' => 'The specified ExternalIp, IpProtocol, ExternalPort, InternalIp, and InternalPort are duplicated.',
          ),
          4 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          5 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.DnatPerSag',
            'errorMessage' => 'The maximum number of dnat rules in an SAG is exceeded. You can open a ticket to increase the quota.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
          4 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"56BF6C79-C77D-41A0-86DD-A4B156E784EA\\",\\n  \\"DnatEntryId\\": \\"fwd-kxe4fq3xuzczze****\\"\\n}","errorExample":""},{"type":"xml","example":"<AddDnatEntryResponse>\\r\\n\\t  <DnatEntryId>fwd-kxe4fq3xuzczze****</DnatEntryId>\\r\\n\\t  <RequestId>56BF6C79-C77D-41A0-86DD-A4B156E784EA</RequestId>\\r\\n</AddDnatEntryResponse>","errorExample":""}]',
      'title' => '给智能接入网关实例添加DNAT条目',
      'summary' => '调用AddDnatEntry给智能接入网关实例添加DNAT条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteDnatEntry' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-ntwc9r1a6z3xz0****',
          ),
        ),
        2 => 
        array (
          'name' => 'DnatEntryId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT条目ID。

您可以通过调用[DescribeDnatEntries](~~125450~~)接口获取智能接入网关实例的DNAT条目ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'fwd-kxe4fq3xuzczze****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '68CE10C0-2EFF-4B82-9907-10AB7E2B0A6C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"68CE10C0-2EFF-4B82-9907-10AB7E2B0A6C\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<DeleteDnatEntryResponse>\\r\\n\\t<RequestId>68CE10C0-2EFF-4B82-9907-10AB7E2B0A6C</RequestId>\\r\\n</DeleteDnatEntryResponse>","errorExample":""}]',
      'title' => '删除实例绑定的DNAT条目',
      'summary' => '删除指定智能接入网关实例绑定的DNAT条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDnatEntries' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。

> 目前仅支持硬件版实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-djgd*************',
          ),
        ),
        2 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DNAT类型，包含以下选项：

* **Intranet**：缺省值，表示私网DNAT。

* **Internet**：表示公网DNAT。',
            'type' => 'string',
            'required' => false,
            'example' => 'Intranet',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时设置的每页行数，默认值为**10**，最大值为**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '12',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例状态列表的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '记录总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '50',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时设置的每页行数，默认值为**10**，最大值为**50**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '635640CA-2335-4856-A9CB-1CB5C444DC5A',
              ),
              'PageNumber' => 
              array (
                'description' => '实例状态列表的页码，默认值为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '12',
              ),
              'DnatEntries' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DnatEntry' => 
                  array (
                    'description' => 'DNAT条目规则列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => 'DNAT类型，包括以下选项：

* **Intranet**：缺省值，表示私网DNAT。

* **Internet**：表示公网DNAT。',
                          'type' => 'string',
                          'example' => 'Intranet',
                        ),
                        'SagId' => 
                        array (
                          'description' => '智能接入网关实例ID。',
                          'type' => 'string',
                          'example' => 'sag-jfh********',
                        ),
                        'InternalIp' => 
                        array (
                          'description' => '目标私网IP地址。',
                          'type' => 'string',
                          'example' => '192.168.0.1',
                        ),
                        'InternalPort' => 
                        array (
                          'description' => '目标私网端口号。

取值范围：**1~65535**，**any**表示所有端口。',
                          'type' => 'string',
                          'example' => '80',
                        ),
                        'IpProtocol' => 
                        array (
                          'description' => '协议类型，包含以下选项：

* **tcp**：转发TCP协议的报文。

* **udp**：转发UDP协议的报文。

* **any**：转发所有协议的报文。',
                          'type' => 'string',
                          'example' => 'tcp',
                        ),
                        'ExternalPort' => 
                        array (
                          'description' => '公网端口。

取值范围：**1~65535**，**any**表示所有端口。',
                          'type' => 'string',
                          'example' => '12',
                        ),
                        'DnatEntryId' => 
                        array (
                          'description' => 'DNAT实例ID。',
                          'type' => 'string',
                          'example' => 'fwd-kxe4fq3xuzczze****',
                        ),
                        'ExternalIp' => 
                        array (
                          'description' => '外部的公网IP地址。',
                          'type' => 'string',
                          'example' => '10.10.**.**',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 50,\\n  \\"PageSize\\": 1,\\n  \\"RequestId\\": \\"635640CA-2335-4856-A9CB-1CB5C444DC5A\\",\\n  \\"PageNumber\\": 12,\\n  \\"DnatEntries\\": {\\n    \\"DnatEntry\\": [\\n      {\\n        \\"Type\\": \\"Intranet\\",\\n        \\"SagId\\": \\"sag-jfh********\\",\\n        \\"InternalIp\\": \\"192.168.0.1\\",\\n        \\"InternalPort\\": \\"80\\",\\n        \\"IpProtocol\\": \\"tcp\\",\\n        \\"ExternalPort\\": \\"12\\",\\n        \\"DnatEntryId\\": \\"fwd-kxe4fq3xuzczze****\\",\\n        \\"ExternalIp\\": \\"10.10.**.**\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeDnatEntriesResponse>\\n    <TotalCount>50</TotalCount>\\n    <PageSize>1</PageSize>\\n    <RequestId>635640CA-2335-4856-A9CB-1CB5C444DC5A</RequestId>\\n    <PageNumber>12</PageNumber>\\n    <DnatEntries>\\n        <Type>Intranet</Type>\\n        <SagId>sag-jfh********</SagId>\\n        <InternalIp>192.168.0.1</InternalIp>\\n        <InternalPort>80</InternalPort>\\n        <IpProtocol>tcp</IpProtocol>\\n        <ExternalPort>12</ExternalPort>\\n        <DnatEntryId>fwd-kxe4fq3xuzczze****</DnatEntryId>\\n        <ExternalIp>10.10.**.**</ExternalIp>\\n    </DnatEntries>\\n</DescribeDnatEntriesResponse>","errorExample":""}]',
      'title' => '查询智能接入网关实例绑定的DNAT条目',
      'summary' => '调用DescribeDnatEntries查询智能接入网关实例绑定的DNAT条目。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeRouteDistributionStrategies' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-erx3qta5xg5zyq****',
          ),
        ),
        2 => 
        array (
          'name' => 'SourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由类型：

- **cloud**：云上路由。智能接入网关到云上资源的路由。

- **local**：线下路由。智能接入网关到线下节点的路由。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cloud',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前分页的页码数。默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页展示时，每个分页包含的列表条目数。默认为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '总共的路由条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'PageSize' => 
              array (
                'description' => '分页展示时，每个分页包含的列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '944C2533-1BB7-4578-B6EB-DA05BB61C02A',
              ),
              'PageNumber' => 
              array (
                'description' => '当前分页的页码数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Strategies' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Strategy' => 
                  array (
                    'description' => '路由策略列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '路由状态：

- **normal**：正常。

- **revoked**：已撤销。',
                          'type' => 'string',
                          'example' => 'normal',
                        ),
                        'StrategyPublishStatus' => 
                        array (
                          'description' => '路由发布状态：

- **publish**：已发布。

- **not_publish**：未发布。',
                          'type' => 'string',
                          'example' => 'publish',
                        ),
                        'RouteDistribution' => 
                        array (
                          'description' => '路由发布策略：

- **publish**：发布。
- **no_publish**：不发布。
- **no_publish_and_publish_on_health_success**：不发布-健康检查成功时发布。
- **no_publish_and_publish_on_health_fail**：不发布-健康检查失败时发布。
- **publish_and_revoke_on_health_success**：发布-健康检查成功时撤销。
- **publish_and_revoke_on_health_fail**：发布-健康检查失败时撤销。

更多详情请参见[关联健康检查](~~163971~~)和[路由发布](~~163973~~)。',
                          'type' => 'string',
                          'example' => 'publish',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '健康检查实例的创建时间戳，单位为毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1622617250000',
                        ),
                        'SmartAGId' => 
                        array (
                          'description' => '智能接入网关实例ID。',
                          'type' => 'string',
                          'example' => 'sag-erx3qta5xg5zyq****',
                        ),
                        'SourceType' => 
                        array (
                          'description' => '路由类型：

- **cloud**：云上路由。

- **local**：线下路由。',
                          'type' => 'string',
                          'example' => 'cloud',
                        ),
                        'IsConflict' => 
                        array (
                          'description' => '是否存在路由冲突：

- **true**：是。

- **false**：否。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'DestCidrBlock' => 
                        array (
                          'description' => '目标网段。',
                          'type' => 'string',
                          'example' => '192.168.3.0/24',
                        ),
                        'ConflictInfo' => 
                        array (
                          'description' => '路由冲突信息。',
                          'type' => 'string',
                          'example' => '"10.90.6.0/24":"vbr-wz900pom71qyr6x67qz65,vbr-wz9f8icxnlcom7riz0gfx"',
                        ),
                        'HcInstanceId' => 
                        array (
                          'description' => '健康检查实例ID。',
                          'type' => 'string',
                          'example' => 'hc-sztovuprqzgm50****',
                        ),
                        'RouteSource' => 
                        array (
                          'description' => '路由来源：

- **云上路由**
    - **专有网络（VPC）实例ID**：通过VPC学来的路由。
    - **虚拟边界路由器（VBR）实例ID**：通过VBR学来的路由。
    - **智能接入网关（SAG）实例ID**：通过SAG学来的路由。

- **线下路由**
    - **STATIC**：通过管理控制台添加的静态路由。
    - **OSPF**：通过OSPF路由协议学习来的路由。
    - **BGP**：通过BGP路由协议学习来的路由。


',
                          'type' => 'string',
                          'example' => 'STATIC',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'RD.InvalidSourceType',
            'errorMessage' => 'The specified route source type is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 5,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"944C2533-1BB7-4578-B6EB-DA05BB61C02A\\",\\n  \\"PageNumber\\": 1,\\n  \\"Strategies\\": {\\n    \\"Strategy\\": [\\n      {\\n        \\"Status\\": \\"normal\\",\\n        \\"StrategyPublishStatus\\": \\"publish\\",\\n        \\"RouteDistribution\\": \\"publish\\",\\n        \\"CreateTime\\": 1622617250000,\\n        \\"SmartAGId\\": \\"sag-erx3qta5xg5zyq****\\",\\n        \\"SourceType\\": \\"cloud\\",\\n        \\"IsConflict\\": false,\\n        \\"DestCidrBlock\\": \\"192.168.3.0/24\\",\\n        \\"ConflictInfo\\": \\"\\\\\\"10.90.6.0/24\\\\\\":\\\\\\"vbr-wz900pom71qyr6x67qz65,vbr-wz9f8icxnlcom7riz0gfx\\\\\\"\\",\\n        \\"HcInstanceId\\": \\"hc-sztovuprqzgm50****\\",\\n        \\"RouteSource\\": \\"STATIC\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeRouteDistributionStrategiesResponse>\\n    <TotalCount>5</TotalCount>\\n    <PageSize>10</PageSize>\\n    <RequestId>944C2533-1BB7-4578-B6EB-DA05BB61C02A</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <Strategies>\\n        <Status>normal</Status>\\n        <StrategyPublishStatus>publish</StrategyPublishStatus>\\n        <RouteDistribution>publish</RouteDistribution>\\n        <CreateTime>1622617250000</CreateTime>\\n        <SmartAGId>sag-erx3qta5xg5zyq****</SmartAGId>\\n        <SourceType>cloud</SourceType>\\n        <IsConflict>false</IsConflict>\\n        <InstanceId>snat-djngdheb*******</InstanceId>\\n        <DestCidrBlock>192.168.3.0/24</DestCidrBlock>\\n        <ConflictInfo>\\"10.90.6.0/24\\":\\"vbr-wz900pom71qyr6x67qz65,vbr-wz9f8icxnlcom7riz0gfx\\"</ConflictInfo>\\n        <HcInstanceId>hc-sztovuprqzgm50****</HcInstanceId>\\n        <RouteSource>STATIC</RouteSource>\\n    </Strategies>\\n</DescribeRouteDistributionStrategiesResponse>","errorExample":""}]',
      'title' => '查询路由发布策略',
      'summary' => '调用DescribeRouteDistributionStrategies查询路由发布策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyRouteDistributionStrategy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-erx3qta5xg5zyq****',
          ),
        ),
        2 => 
        array (
          'name' => 'HcInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'hc-sztovuprqzgm50****',
          ),
        ),
        3 => 
        array (
          'name' => 'SourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由来源类型：

- **cloud**：云上路由。

- **local**：线下路由。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'local',
          ),
        ),
        4 => 
        array (
          'name' => 'DestCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '172.XX.XX.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'RouteSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由来源：

- **云上路由**
    - **专有网络（VPC）实例ID**：通过VPC学来的路由。
    - **虚拟边界路由器（VBR）实例ID**：通过VBR学来的路由。
    - **智能接入网关（SAG）实例ID**：通过SAG学来的路由。
- **线下路由**
    - **STATIC**：通过管理控制台添加的静态路由。
    - **OSPF**：通过OSPF路由协议学习来的路由。
    - **BGP**：通过BGP路由协议学习来的路由。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'OSPF',
          ),
        ),
        6 => 
        array (
          'name' => 'RouteDistribution',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由发布策略：
- **publish**：发布。
- **no_publish**：不发布。
- **no_publish_and_publish_on_health_success**：不发布-健康检查成功时发布。
- **no_publish_and_publish_on_health_fail**：不发布-健康检查失败时发布。
- **publish_and_revoke_on_health_success**：发布-健康检查成功时撤销。
- **publish_and_revoke_on_health_fail**：发布-健康检查失败时撤销。

更多详情请参见[关联健康检查](~~163971~~)和[路由发布](~~163973~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'publish',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '24C58BD0-1679-4942-9D42-00B635DAAADB',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'RD.InvalidDestCidrBlock',
            'errorMessage' => 'The specified destination CIDR block is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'RD.InvalidHcInstanceId',
            'errorMessage' => 'The specified network health check instance ID is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'RD.InvalidRouteDistribution',
            'errorMessage' => 'The specified route distribution policy is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'RD.InvalidRouteSource',
            'errorMessage' => 'The specified route source is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'RD.InvalidSourceType',
            'errorMessage' => 'The specified route source type is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'HC.InstanceNoFound',
            'errorMessage' => 'The specified network health check instance does not exist.',
          ),
          8 => 
          array (
            'errorCode' => 'SAG.Arrearage',
            'errorMessage' => 'The specified SAG instance has overdue payments. Renew the instance first.',
          ),
          9 => 
          array (
            'errorCode' => 'SAG.NoActive',
            'errorMessage' => 'The specified SAG instance has not been activated.',
          ),
          10 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupportFeature',
            'errorMessage' => 'The specified SAG Software instance does not support this feature.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"24C58BD0-1679-4942-9D42-00B635DAAADB\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyRouteDistributionStrategyResponse>\\r\\n<RequestId>24C58BD0-1679-4942-9D42-00B635DAAADB</RequestId>\\r\\n</ModifyRouteDistributionStrategyResponse>","errorExample":""}]',
      'title' => '修改路由发布策略',
      'summary' => '调用ModifyRouteDistributionStrategy修改路由发布策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteRouteDistributionStrategy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-gyat6giidkvyk****',
          ),
        ),
        2 => 
        array (
          'name' => 'DestCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XX.XX.0/24',
          ),
        ),
        3 => 
        array (
          'name' => 'SourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由来源类型：

- **cloud**：云上路由。

- **local**：线下路由。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'local',
          ),
        ),
        4 => 
        array (
          'name' => 'RouteSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由来源：
- **云上路由**
    - **专有网络（VPC）实例ID**：通过VPC学来的路由。
    - **虚拟边界路由器（VBR）实例ID**：通过VBR学来的路由。
    - **智能接入网关（SAG）实例ID**：通过SAG学来的路由。
- **线下路由**
    - **STATIC**：通过管理控制台添加的静态路由。
    - **OSPF**：通过OSPF路由协议学习来的路由。
    - **BGP**：通过BGP路由协议学习来的路由。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'STATIC',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BF62139B-D64A-4C95-A55F-6A2335C4417D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'RD.InvalidDestCidrBlock',
            'errorMessage' => 'The specified destination CIDR block is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'RD.InvalidRouteSource',
            'errorMessage' => 'The specified route source is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'RD.InvalidSourceType',
            'errorMessage' => 'The specified route source type is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BF62139B-D64A-4C95-A55F-6A2335C4417D\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteRouteDistributionStrategyResponse>\\r\\n<RequestId>BF62139B-D64A-4C95-A55F-6A2335C4417D</RequestId>\\r\\n</DeleteRouteDistributionStrategyResponse>","errorExample":""}]',
      'title' => '删除路由发布策略',
      'summary' => '调用DeleteRouteDistributionStrategy删除路由发布策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateHealthCheck' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-1um5x5nwhilymw****',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查实例名称。

名称长度为2~100个字符，以大小字母或中文开头，可包含数字、半角句号（.）、下划线（_）或短划线（-）。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hc-123',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查实例描述。

描述长度为2~256个字符，以大小字母或中文开头，可包含数字、半角句号（.）、下划线（_）或短划线（-)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'hc_123',
          ),
        ),
        4 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查报文类型。

> 目前仅支持**ICMP_ECHO**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ICMP_ECHO',
          ),
        ),
        5 => 
        array (
          'name' => 'DstIpAddr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查的目的地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XX.XX.1',
          ),
        ),
        6 => 
        array (
          'name' => 'DstPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查的目的端口。

>该功能目前不支持。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1333',
          ),
        ),
        7 => 
        array (
          'name' => 'SrcIpAddr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查实例的源地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.XX.XX.1',
          ),
        ),
        8 => 
        array (
          'name' => 'SrcPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查的源端口。

>该功能目前不支持。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1344',
          ),
        ),
        9 => 
        array (
          'name' => 'ProbeInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查探测间隔，一次探测未完成情况下，不会发起下一次探测。

取值范围：**1000**~**60000**。

默认值：**2000**。

单位：毫秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '60000',
            'minimum' => '1000',
            'example' => '2000',
            'default' => '2000',
          ),
        ),
        10 => 
        array (
          'name' => 'ProbeCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每次健康检查探测次数。

取值范围：**1**~**20**。

默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '20',
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        11 => 
        array (
          'name' => 'ProbeTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '一次探测的超时时间。

取值范围：**10**~**30000**。

默认值：**1000**。

单位：毫秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '30000',
            'minimum' => '10',
            'example' => '1000',
            'default' => '1000',
          ),
        ),
        12 => 
        array (
          'name' => 'RttThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '双向时延阈值。

取值范围：**-1**或**1**~**5000**。

默认值：**-1**，表示不设置双向时延阈值。

单位：毫秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1000',
            'default' => '-1',
          ),
        ),
        13 => 
        array (
          'name' => 'RttFailThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '时延阈值触发次数。

取值范围：**1**~**15**。

默认值：**3**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '15',
            'minimum' => '1',
            'example' => '3',
            'default' => '3',
          ),
        ),
        14 => 
        array (
          'name' => 'FailCountThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续探测失败次数阈值。

取值范围：**1~15**。

默认值：**3**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'maximum' => '15',
            'minimum' => '1',
            'example' => '3',
            'default' => '3',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'InstanceId' => 
              array (
                'description' => '健康检查实例ID。',
                'type' => 'string',
                'example' => 'hc-rrqoucina3gmpn****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E38E950D-28A4-4C41-9428-A8908EC6AE5C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'HC.AutoGenerated',
            'errorMessage' => 'The health check instance is automatically generated and cannot be modified.',
          ),
          1 => 
          array (
            'errorCode' => 'HC.InstanceNoFound',
            'errorMessage' => 'The specified network health check instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'HC.InvalidDescription',
            'errorMessage' => 'The specified description is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'HC.InvalidDstIpAddr',
            'errorMessage' => 'The specified destination IP address is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'HC.InvalidDstPort',
            'errorMessage' => 'The specified destination port is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'HC.InvalidFailCountThreshold',
            'errorMessage' => 'The maximum number of successive failed probes is exceeded.',
          ),
          6 => 
          array (
            'errorCode' => 'HC.InvalidName',
            'errorMessage' => 'The specified name is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'HC.InvalidProbeCount',
            'errorMessage' => 'The specified number of probes is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'HC.InvalidProbeInterval',
            'errorMessage' => 'The specified probe interval is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'HC.InvalidProbeTimeout',
            'errorMessage' => 'The specified probe timeout period is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'HC.InvalidRttFailThreshold',
            'errorMessage' => 'The RTT threshold has been triggered too many times.',
          ),
          11 => 
          array (
            'errorCode' => 'HC.InvalidRttThreshold',
            'errorMessage' => 'The specified RTT is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'HC.InvalidSrcIpAddr',
            'errorMessage' => 'The specified source IP address is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'HC.InvalidSrcPort',
            'errorMessage' => 'The specified source port is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'HC.InvalidType',
            'errorMessage' => 'The specified type is invalid.',
          ),
          15 => 
          array (
            'errorCode' => 'HC.RelatedRoute',
            'errorMessage' => 'The specified health check instance has associated routes and cannot be deleted.',
          ),
          16 => 
          array (
            'errorCode' => 'SAG.Arrearage',
            'errorMessage' => 'The specified SAG instance has overdue payments. Renew the instance first.',
          ),
          17 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          18 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          19 => 
          array (
            'errorCode' => 'SAG.NoActive',
            'errorMessage' => 'The specified SAG instance has not been activated.',
          ),
          20 => 
          array (
            'errorCode' => 'HC.AmountLimit',
            'errorMessage' => 'The maximum number of health check instances is exceeded.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"InstanceId\\": \\"hc-rrqoucina3gmpn****\\",\\n  \\"RequestId\\": \\"E38E950D-28A4-4C41-9428-A8908EC6AE5C\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateHealthCheckResponse>\\n<InstanceId>hc-vfgyz7dv07lthr****</InstanceId>\\n<RequestId>0637D6BB-4EAA-4AFD-9EA0-152FA3E943DC</RequestId>\\n</CreateHealthCheckResponse>","errorExample":""}]',
      'title' => '为智能接入网关实例创建健康检查',
      'summary' => '调用CreateHealthCheck为智能接入网关实例创建健康检查。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteHealthCheck' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'HcInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hc-vfgyz7dv07lthr****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7F0B079C-2D0E-4ABF-A970-C079F785A09C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'HC.InstanceNoFound',
            'errorMessage' => 'The specified network health check instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'HC.RelatedRoute',
            'errorMessage' => 'The specified health check instance has associated routes and cannot be deleted.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7F0B079C-2D0E-4ABF-A970-C079F785A09C\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteHealthCheckResponse>\\r\\n<RequestId>7F0B079C-2D0E-4ABF-A970-C079F785A09C</RequestId>\\r\\n</DeleteHealthCheckResponse>","errorExample":""}]',
      'title' => '删除健康检查实例',
      'summary' => '调用DeleteHealthCheck删除健康检查实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyHealthCheck' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'HcInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hc-k9id4loo3lup57****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-i0e85k06v1mzpo****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查实例名称。

长度为2~100个字符，以大小字母或中文开头，可包含数字、半角句号（.）、下划线（_）或短划线（-）。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'sss333',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查实例描述。

描述长度为2~256个字符，以大小字母或中文开头，可包含数字、半角句号（.）、下划线（_）或短划线（-)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '健康检查实例1',
          ),
        ),
        5 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查的报文类型，目前仅支持**ICMP_ECHO**。
',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'ICMP_ECHO',
          ),
        ),
        6 => 
        array (
          'name' => 'DstIpAddr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查的目的地址。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '192.XX.XX.1',
          ),
        ),
        7 => 
        array (
          'name' => 'DstPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查的目的端口。

>该功能目前不支持。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '2233',
          ),
        ),
        8 => 
        array (
          'name' => 'SrcIpAddr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查的源地址。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '192.XX.XX.1',
          ),
        ),
        9 => 
        array (
          'name' => 'SrcPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查的源端口。

>该功能目前不支持。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '3333',
          ),
        ),
        10 => 
        array (
          'name' => 'ProbeInterval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查配置探测间隔，一次探测未完成情况下，不会发起下一次探测。

取值范围：**1000**~**60000**。

默认值：**2000**。

单位：毫秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '2000',
          ),
        ),
        11 => 
        array (
          'name' => 'ProbeCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每次健康检查探测次数。

取值范围：**1**~**20**。

默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        12 => 
        array (
          'name' => 'ProbeTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查一次探测的超时时间。

取值范围：**10**~**30000**。

默认值：**3000**。

单位：毫秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '3000',
          ),
        ),
        13 => 
        array (
          'name' => 'RttThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '时延告警阈值。

取值范围：**-1**或**1**~**5000**。

默认值：**-1**，表示不设置时延告警阈值。

单位：毫秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '3',
          ),
        ),
        14 => 
        array (
          'name' => 'RttFailThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '时延阈值触发次数。

取值范围：**1**~**15**。

默认值：**3**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '3',
          ),
        ),
        15 => 
        array (
          'name' => 'FailCountThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '连续探测失败数阈值。

取值范围：**1**~**15**。

默认值：**3**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '3',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F0290F85-8087-4FB7-81F8-84226A4DAAB2',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'HC.InstanceNoFound',
            'errorMessage' => 'The specified network health check instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'HC.InvalidDescription',
            'errorMessage' => 'The specified description is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'HC.InvalidDstIpAddr',
            'errorMessage' => 'The specified destination IP address is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'HC.InvalidDstPort',
            'errorMessage' => 'The specified destination port is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'HC.InvalidFailCountThreshold',
            'errorMessage' => 'The maximum number of successive failed probes is exceeded.',
          ),
          5 => 
          array (
            'errorCode' => 'HC.InvalidName',
            'errorMessage' => 'The specified name is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'HC.InvalidProbeCount',
            'errorMessage' => 'The specified number of probes is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'HC.InvalidProbeInterval',
            'errorMessage' => 'The specified probe interval is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'HC.InvalidProbeTimeout',
            'errorMessage' => 'The specified probe timeout period is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'HC.InvalidRttFailThreshold',
            'errorMessage' => 'The RTT threshold has been triggered too many times.',
          ),
          10 => 
          array (
            'errorCode' => 'HC.InvalidRttThreshold',
            'errorMessage' => 'The specified RTT is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'HC.InvalidSrcIpAddr',
            'errorMessage' => 'The specified source IP address is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'HC.InvalidSrcPort',
            'errorMessage' => 'The specified source port is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'HC.InvalidType',
            'errorMessage' => 'The specified type is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          15 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          16 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupportFeature',
            'errorMessage' => 'The specified SAG Software instance does not support this feature.',
          ),
          17 => 
          array (
            'errorCode' => 'SAG.NoActive',
            'errorMessage' => 'The specified SAG instance has not been activated.',
          ),
          18 => 
          array (
            'errorCode' => 'SAG.Arrearage',
            'errorMessage' => 'The specified SAG instance has overdue payments. Renew the instance first.',
          ),
          19 => 
          array (
            'errorCode' => 'HC.AutoGenerated',
            'errorMessage' => 'The health check instance is automatically generated and cannot be modified.',
          ),
          20 => 
          array (
            'errorCode' => 'HC.RelatedRoute',
            'errorMessage' => 'The specified health check instance has associated routes and cannot be deleted.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F0290F85-8087-4FB7-81F8-84226A4DAAB2\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyHealthCheckResponse>\\r\\n<RequestId>F0290F85-8087-4FB7-81F8-84226A4DAAB2</RequestId>\\r\\n</ModifyHealthCheckResponse>","errorExample":""}]',
      'title' => '修改健康检查配置',
      'summary' => '调用ModifyHealthCheck修改健康检查配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeHealthChecks' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-qi0p07ld5q86k3****',
          ),
        ),
        2 => 
        array (
          'name' => 'HcInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'hc-ifflm5ygj3diwiu****',
          ),
        ),
        3 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查实例名称。

长度为2~100个字符，以大小字母或中文开头，可包含数字、半角句号（.）、下划线（_）或短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'ddd3333',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前分页页码。默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页展示时，每页的列表条目数。默认值为**10**，最大值为**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '总共的列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'PageSize' => 
              array (
                'description' => '分页展示时，每页的列表条目数。默认值为**10**，最大值为**50**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0B275FE6-FC86-4921-BC70-1B3DF68B078F',
              ),
              'PageNumber' => 
              array (
                'description' => '当前分页的页码。默认值为**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'HealthChecks' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'HealthCheck' => 
                  array (
                    'description' => '健康检查列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '健康检查报文类型，目前仅支持**ICMP_ECHO**。',
                          'type' => 'string',
                          'example' => 'ICMP_ECHO',
                        ),
                        'ProbeTimeout' => 
                        array (
                          'description' => '一次探测的超时时间。

数值范围：**10**~**30000**。

默认值：**1000**。

单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1000',
                        ),
                        'Status' => 
                        array (
                          'description' => '健康检查状态：

- **success**：成功。
- **failed**：失败。
- **unknown**：未开始。',
                          'type' => 'string',
                          'example' => 'unknown',
                        ),
                        'DstIpAddr' => 
                        array (
                          'description' => '健康检查的目的地址。',
                          'type' => 'string',
                          'example' => '110.XX.XX.1',
                        ),
                        'RelationCount' => 
                        array (
                          'description' => '关联健康检查实例的路由数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'RttFailThreshold' => 
                        array (
                          'description' => '时延阈值触发次数。 

数值范围：**1**~**15**。

默认值：**3**。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'SmartAGId' => 
                        array (
                          'description' => '智能接入网关实例ID。',
                          'type' => 'string',
                          'example' => 'sag-qi0p07ld5q86k3****',
                        ),
                        'DstPort' => 
                        array (
                          'description' => '健康检查的目的端口。

> 该功能目前不支持。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '33',
                        ),
                        'FailCountThreshold' => 
                        array (
                          'description' => '连续探测失败次数阈值。

数值范围：**1**~**15**。

默认值：**3**。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'RttThreshold' => 
                        array (
                          'description' => '双向时延阈值。

数值范围：**-1**或**1**~**5000**。

默认值：**-1**，表示不设置双向时延阈值。

单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '45',
                        ),
                        'SrcPort' => 
                        array (
                          'description' => '健康检查的源端口。

> 该功能目前不支持。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '334',
                        ),
                        'ProbeCount' => 
                        array (
                          'description' => '每次健康检查探测次数。

数值范围：**1**~**20**。

默认值：**1**。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'Description' => 
                        array (
                          'description' => '健康检查描述。',
                          'type' => 'string',
                          'example' => '健康检查',
                        ),
                        'SrcIpAddr' => 
                        array (
                          'description' => '健康检查的源地址。',
                          'type' => 'string',
                          'example' => '192.XX.XX.1',
                        ),
                        'ProbeInterval' => 
                        array (
                          'description' => '健康检查探测间隔，一次探测未完成情况下，不会发起下一次探测。

数值范围：**1000**~**60000**。

默认值：**2000**。

单位：毫秒。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2000',
                        ),
                        'Name' => 
                        array (
                          'description' => '健康检查实例名称。',
                          'type' => 'string',
                          'example' => 'doctest',
                        ),
                        'HcInstanceId' => 
                        array (
                          'description' => '健康检查实例ID。',
                          'type' => 'string',
                          'example' => 'hc-ifflm5ygj3diwi****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 5,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"0B275FE6-FC86-4921-BC70-1B3DF68B078F\\",\\n  \\"PageNumber\\": 1,\\n  \\"HealthChecks\\": {\\n    \\"HealthCheck\\": [\\n      {\\n        \\"Type\\": \\"ICMP_ECHO\\",\\n        \\"ProbeTimeout\\": 1000,\\n        \\"Status\\": \\"unknown\\",\\n        \\"DstIpAddr\\": \\"110.XX.XX.1\\",\\n        \\"RelationCount\\": 3,\\n        \\"RttFailThreshold\\": 3,\\n        \\"SmartAGId\\": \\"sag-qi0p07ld5q86k3****\\",\\n        \\"DstPort\\": 33,\\n        \\"FailCountThreshold\\": 3,\\n        \\"RttThreshold\\": 45,\\n        \\"SrcPort\\": 334,\\n        \\"ProbeCount\\": 2,\\n        \\"Description\\": \\"健康检查\\",\\n        \\"SrcIpAddr\\": \\"192.XX.XX.1\\",\\n        \\"ProbeInterval\\": 2000,\\n        \\"Name\\": \\"doctest\\",\\n        \\"HcInstanceId\\": \\"hc-ifflm5ygj3diwi****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeHealthChecksResponse>\\n<TotalCount>1</TotalCount>\\n<PageSize>10</PageSize>\\n<RequestId>97575E44-B01C-4F8B-B829-3272A312F196</RequestId>\\n<PageNumber>1</PageNumber>\\n<HealthChecks>\\n    <HealthCheck>\\n        <Status>unknown</Status>\\n        <Description>TEST</Description>\\n        <SrcPort>44</SrcPort>\\n        <SrcIpAddr>2.XX.XX.1</SrcIpAddr>\\n        <FailCountThreshold>3</FailCountThreshold>\\n        <DstPort>33</DstPort>\\n        <Name>TEST</Name>\\n        <ProbeCount>5</ProbeCount>\\n        <Type>ICMP_ECHO</Type>\\n        <ProbeTimeout>30</ProbeTimeout>\\n        <HcInstanceId>hc-l3x9k16ag24d6j****</HcInstanceId>\\n        <RttThreshold>-1</RttThreshold>\\n        <ProbeInterval>2000</ProbeInterval>\\n        <RelationCount>1</RelationCount>\\n        <SmartAGId>sag-4goc1sj3c978z2****</SmartAGId>\\n        <RttFailThreshold>5</RttFailThreshold>\\n        <DstIpAddr>12.XX.XX.1</DstIpAddr>\\n    </HealthCheck>\\n</HealthChecks>\\n</DescribeHealthChecksResponse>","errorExample":""}]',
      'title' => '查询智能接入网关实例下的健康检查实例',
      'summary' => '调用DescribeHealthChecks查询智能接入网关实例下的健康检查实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeHealthCheckAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'HcInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '健康检查实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'hc-1k4ucuq77b56x4****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-1um5x5nwhilymw****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SrcPort' => 
              array (
                'description' => '健康检查的源端口。

> 该功能目前不支持。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2334',
              ),
              'Description' => 
              array (
                'description' => '健康检查实例描述。',
                'type' => 'string',
                'example' => 'hc-123',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DDA08B78-5634-4A83-94E4-5C58FD7EBA19',
              ),
              'SrcIpAddr' => 
              array (
                'description' => '健康检查的源地址。',
                'type' => 'string',
                'example' => '10.XX.XX.1',
              ),
              'CreateTime' => 
              array (
                'description' => '健康检查实例创建时间戳。
单位：毫秒。

',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1586759657000',
              ),
              'FailCountThreshold' => 
              array (
                'description' => '连续探测失败次数阈值。

取值范围：**1**~**15**。

默认值：**3**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'DstPort' => 
              array (
                'description' => '健康检查的目的端口。

> 该功能目前不支持。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1223',
              ),
              'Name' => 
              array (
                'description' => '健康检查实例名称。',
                'type' => 'string',
                'example' => 'bvt-test-03****',
              ),
              'ProbeCount' => 
              array (
                'description' => '每次健康检查探测次数。

取值范围：**1**~**20**。

默认值：**1**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'Type' => 
              array (
                'description' => '健康检查报文类型。

目前仅支持**ICMP_ECHO**。',
                'type' => 'string',
                'example' => 'ICMP_ECHO',
              ),
              'ProbeTimeout' => 
              array (
                'description' => '健康检查一次探测的超时时间。

取值范围：**10**~**30000**。

默认值：**1000**。

单位：毫秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1000',
              ),
              'HcInstanceId' => 
              array (
                'description' => '健康检查实例ID。',
                'type' => 'string',
                'example' => 'hc-1k4ucuq77b56x4****',
              ),
              'RttThreshold' => 
              array (
                'description' => '双向时延阈值。

取值：**-1**或**1**~**5000**。

默认值：**-1**，表示不配置双向时延阈值。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '300',
              ),
              'ProbeInterval' => 
              array (
                'description' => '健康检查配置探测间隔，一次探测未完成情况下，不会发起下一次探测。

取值范围：**1000**~**60000**。

默认值：**2000**。

单位：毫秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2000',
              ),
              'SmartAGId' => 
              array (
                'description' => '智能接入网关实例ID。',
                'type' => 'string',
                'example' => 'sag-1um5x5nwhilymw****',
              ),
              'RttFailThreshold' => 
              array (
                'description' => '时延阈值触发次数。

取值范围：**1**~**15**。

默认值：**3**。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'DstIpAddr' => 
              array (
                'description' => '健康检查的目的地址。',
                'type' => 'string',
                'example' => '192.XX.XX.1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'HC.InstanceNoFound',
            'errorMessage' => 'The specified network health check instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"SrcPort\\": 2334,\\n  \\"Description\\": \\"hc-123\\",\\n  \\"RequestId\\": \\"DDA08B78-5634-4A83-94E4-5C58FD7EBA19\\",\\n  \\"SrcIpAddr\\": \\"10.XX.XX.1\\",\\n  \\"CreateTime\\": 1586759657000,\\n  \\"FailCountThreshold\\": 3,\\n  \\"DstPort\\": 1223,\\n  \\"Name\\": \\"bvt-test-03****\\",\\n  \\"ProbeCount\\": 3,\\n  \\"Type\\": \\"ICMP_ECHO\\",\\n  \\"ProbeTimeout\\": 1000,\\n  \\"HcInstanceId\\": \\"hc-1k4ucuq77b56x4****\\",\\n  \\"RttThreshold\\": 300,\\n  \\"ProbeInterval\\": 2000,\\n  \\"SmartAGId\\": \\"sag-1um5x5nwhilymw****\\",\\n  \\"RttFailThreshold\\": 3,\\n  \\"DstIpAddr\\": \\"192.XX.XX.1\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeHealthCheckAttributeResponse>\\n<CreateTime>1586759657000</CreateTime>\\n<Description>TEST</Description>\\n<SrcPort>44</SrcPort>\\n<RequestId>66ECCDF6-7290-44A6-A2D0-3B926CEE82C6</RequestId>\\n<SrcIpAddr>2.XX.XX.1</SrcIpAddr>\\n<FailCountThreshold>3</FailCountThreshold>\\n<DstPort>33</DstPort>\\n<Name>TEST</Name>\\n<ProbeCount>5</ProbeCount>\\n<Type>ICMP_ECHO</Type>\\n<ProbeTimeout>30</ProbeTimeout>\\n<HcInstanceId>hc-l3x9k16ag24d6j****</HcInstanceId>\\n<RttThreshold>-1</RttThreshold>\\n<ProbeInterval>2000</ProbeInterval>\\n<SmartAGId>sag-4goc1sj3c978z2****</SmartAGId>\\n<RttFailThreshold>5</RttFailThreshold>\\n<DstIpAddr>12.XX.XX.1</DstIpAddr>\\n</DescribeHealthCheckAttributeResponse>","errorExample":""}]',
      'title' => '查询健康检查实例详情',
      'summary' => '调用DescribeHealthCheckAttribute查询健康检查实例详情。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateSmartAGAccessPoint' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'AccessPointId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要切换到的接入点ID。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-far8v6owtdxlua****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E26DBAAE-A796-4A48-98B4-B45AFCD1F299',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupportFeature',
            'errorMessage' => 'The specified SAG Software instance does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.NoActive',
            'errorMessage' => 'The specified SAG instance has not been activated.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          2 => 
          array (
            'errorCode' => 'NotBoundCCN',
            'errorMessage' => 'The specified smart access gateway has not bound CCN; please bind CCN first.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'Upgrading',
            'errorMessage' => 'The specified Smart Access Gateway is being upgraded.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E26DBAAE-A796-4A48-98B4-B45AFCD1F299\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateSmartAGAccessPointResponse>\\r\\n<RequestId>0EEFB09A-208D-4063-A839-F49F3367A073</RequestId>\\r\\n</UpdateSmartAGAccessPointResponse>","errorExample":""}]',
      'title' => '切换智能接入网关的接入点',
      'summary' => '切换智能接入网关的接入点。',
      'description' => '在您调用本接口前，请先调用[ListAccessPoints](~~183876~~)接口查看目标实例可以切换的接入点信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ProbeAccessPointNetworkQuality' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-6z21oj0vjjrx6s****',
          ),
        ),
        2 => 
        array (
          'name' => 'AccessPointIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '接入点ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '接入点ID。

您可以一次输入多个接入点ID，最多支持输入5个接入点。

您可以调用[ListAccessPoints](~~183876~~)接口查询指定地域下的接入点ID。',
              'type' => 'integer',
              'format' => 'int32',
              'required' => false,
              'example' => '110',
            ),
            'required' => true,
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E26DBAAE-A796-4A48-98B4-B45AFCD1F299',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ProbeFrequencyTooHigh',
            'errorMessage' => 'The probe frequency is too high. Please try again later.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E26DBAAE-A796-4A48-98B4-B45AFCD1F299\\"\\n}","errorExample":""},{"type":"xml","example":"<ProbeAccessPointNetworkQualityResponse>\\n    <RequestId>E26DBAAE-A796-4A48-98B4-B45AFCD1F299</RequestId>\\n</ProbeAccessPointNetworkQualityResponse>","errorExample":""}]',
      'title' => '探测访问点网络质量',
      'summary' => '探测智能接入网关实例与指定接入点之间的连通性。',
      'description' => '您可以调用本接口探测智能接入网关实例与指定接入点之间的连通性：
- 如果智能接入网关实例能正常连接接入点，则本接口返回请求ID。
- 如果智能接入网关实例不能正常连接接入点，则本接口除返回请求ID外还会返回对应的错误信息。',
    ),
    'ListSmartAGByAccessPoint' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所在的地域ID。

一个地域内包含一个或多个接入点。您可以通过[ListAccessPoints](~~183876~~)查看地域下的接入点信息。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。默认值为**10**。最大值为**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '5',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'AccessPointId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '接入点ID。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '238',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '1',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'SmartAGStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例状态。取值：

- **Active**：可用。
- **Offline**：离线。',
            'type' => 'string',
            'required' => false,
            'example' => 'Active',
            'enum' => 
            array (
              0 => 'offline',
              1 => 'online',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '当前接入点下智能接入网关实例总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '16',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AE203140-5D0C-4B4D-88D1-D008206B3A01',
              ),
              'SmartAccessGateways' => 
              array (
                'description' => '智能接入网关实例信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'RoutingStrategy' => 
                    array (
                      'description' => '当前智能接入网关实例线下路由同步方式。取值：

- **static**：静态路由。
- **dynamic**：动态路由。',
                      'type' => 'string',
                      'example' => 'static',
                    ),
                    'SmartAGName' => 
                    array (
                      'description' => '智能接入网关实例名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'SmartAGId' => 
                    array (
                      'description' => '智能接入网关实例ID。',
                      'type' => 'string',
                      'example' => 'sag-p86e06z4geaji1****',
                    ),
                    'SmartAGStatus' => 
                    array (
                      'description' => '智能接入网关实例状态：

- **Active**：可用。
- **Offline**：离线。',
                      'type' => 'string',
                      'example' => 'Active',
                    ),
                    'SmartAGDescription' => 
                    array (
                      'description' => '智能接入网关实例描述。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'AssociatedCcnId' => 
                    array (
                      'description' => '智能接入网关实例绑定的云连接网实例ID。',
                      'type' => 'string',
                      'example' => 'ccn-l42qf3vpvb****',
                    ),
                    'HardwareVersion' => 
                    array (
                      'description' => '智能接入网关实例绑定的设备类型。

- **sag-1000**。
- **sag-100WM**。',
                      'type' => 'string',
                      'example' => 'sag-1000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 16,\\n  \\"RequestId\\": \\"AE203140-5D0C-4B4D-88D1-D008206B3A01\\",\\n  \\"SmartAccessGateways\\": [\\n    {\\n      \\"RoutingStrategy\\": \\"static\\",\\n      \\"SmartAGName\\": \\"test\\",\\n      \\"SmartAGId\\": \\"sag-p86e06z4geaji1****\\",\\n      \\"SmartAGStatus\\": \\"Active\\",\\n      \\"SmartAGDescription\\": \\"test\\",\\n      \\"AssociatedCcnId\\": \\"ccn-l42qf3vpvb****\\",\\n      \\"HardwareVersion\\": \\"sag-1000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListSmartAGByAccessPointResponse>\\n<TotalCount>16</TotalCount>\\n<RequestId>ABEE83F9-610C-4EFF-9C02-32EB269BD34E</RequestId>\\n<SmartAccessGateways>\\n    <SmartAGName>菜鸟-工业压测</SmartAGName>\\n    <SmartAGStatus>Offline</SmartAGStatus>\\n    <RoutingStrategy>static</RoutingStrategy>\\n    <AssociatedCcnId>ccn-l42qf3vpvb0hmq****</AssociatedCcnId>\\n    <SmartAGId>sag-71sh7ww783pdes****</SmartAGId>\\n    <HardwareVersion>sag-100wm</HardwareVersion>\\n</SmartAccessGateways>\\n<SmartAccessGateways>\\n    <SmartAGStatus>Offline</SmartAGStatus>\\n    <RoutingStrategy>static</RoutingStrategy>\\n    <AssociatedCcnId>ccn-3dmy71fs4tz69d****</AssociatedCcnId>\\n    <SmartAGId>sag-7b7gnu4dn6x9gz****</SmartAGId>\\n    <HardwareVersion>sag-1000</HardwareVersion>\\n</SmartAccessGateways>\\n</ListSmartAGByAccessPointResponse>","errorExample":""}]',
      'title' => '查询指定接入点下实例信息',
      'summary' => '查询指定地域内指定接入点下智能接入网关实例信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListAccessPoints' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的接入点所属地域ID。您可以通过[DescribeRegions](~~36063~~)查询地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。
取值范围：**1~50**。
默认值：**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '50',
            'minimum' => '1',
            'example' => '20',
            'default' => '15',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'sag-far8v6owtdxlua****',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时的页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'AccessPoints' => 
              array (
                'description' => '接入点信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Longitude' => 
                    array (
                      'description' => '接入点经度。',
                      'type' => 'string',
                      'example' => '1.35****',
                    ),
                    'ActiveSmartAGCount' => 
                    array (
                      'description' => '当前接入点下可用的智能接入网关实例数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'InactiveSmartAGCount' => 
                    array (
                      'description' => '当前接入点下离线的智能接入网关实例数量。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '7',
                    ),
                    'Latitude' => 
                    array (
                      'description' => '接入点纬度。',
                      'type' => 'string',
                      'example' => '103.81****',
                    ),
                    'AccessPointId' => 
                    array (
                      'description' => '接入点ID。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '401',
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '接入点总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E26DBAAE-A796-4A48-98B4-B45AFCD1F299',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"AccessPoints\\": [\\n    {\\n      \\"Longitude\\": \\"1.35****\\",\\n      \\"ActiveSmartAGCount\\": 0,\\n      \\"InactiveSmartAGCount\\": 7,\\n      \\"Latitude\\": \\"103.81****\\",\\n      \\"AccessPointId\\": 401\\n    }\\n  ],\\n  \\"TotalCount\\": 2,\\n  \\"RequestId\\": \\"E26DBAAE-A796-4A48-98B4-B45AFCD1F299\\"\\n}","errorExample":""},{"type":"xml","example":"<ListAccessPointsResponse>\\n<AccessPoints>\\n    <AccessPointId>401</AccessPointId>\\n    <ActiveSmartAGCount>0</ActiveSmartAGCount>\\n    <Latitude>103.81****</Latitude>\\n    <InactiveSmartAGCount>7</InactiveSmartAGCount>\\n    <Longitude>1.35****</Longitude>\\n</AccessPoints>\\n<AccessPoints>\\n    <AccessPointId>402</AccessPointId>\\n    <ActiveSmartAGCount>0</ActiveSmartAGCount>\\n    <Latitude>24.6****</Latitude>\\n    <InactiveSmartAGCount>13</InactiveSmartAGCount>\\n    <Longitude>-28.4****</Longitude>\\n</AccessPoints>\\n<TotalCount>2</TotalCount>\\n<RequestId>E26DBAAE-A796-4A48-98B4-B45AFCD1F299</RequestId>\\n</ListAccessPointsResponse>","errorExample":""}]',
      'title' => '查询智能接入网关接入点信息',
      'summary' => '调用ListAccessPoints查询智能接入网关接入点信息。',
      'description' => '接入点是指智能接入网关接入云连接网时的连接点。云连接网在一些区域内包含多个接入点。智能接入网关实例绑定云连接网后，系统采取就近原则，自动帮您连接最近的接入点进入阿里云。您可以通过本API查询指定区域内的接入点信息。云连接网区域详情请参见[云连接网介绍](~~93667~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListAccessPointNetworkQualities' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-p86e06z4geaji1****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '查询结果。',
            'type' => 'object',
            'properties' => 
            array (
              'AccessPointNetworkQualities' => 
              array (
                'description' => '接入点网络质量信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '接入点信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Loss' => 
                    array (
                      'description' => '丢包率。',
                      'type' => 'string',
                      'example' => '0.00%',
                    ),
                    'Rtt' => 
                    array (
                      'description' => '时延。单位：毫秒。',
                      'type' => 'string',
                      'example' => '4.98',
                    ),
                    'Id' => 
                    array (
                      'description' => '接入点ID。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '115',
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8E8E8C86-1404-122A-A1BB-84BBC2E9A4B1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"AccessPointNetworkQualities\\": [\\n    {\\n      \\"Loss\\": \\"0.00%\\",\\n      \\"Rtt\\": \\"4.98\\",\\n      \\"Id\\": 115\\n    }\\n  ],\\n  \\"RequestId\\": \\"8E8E8C86-1404-122A-A1BB-84BBC2E9A4B1\\"\\n}","errorExample":""},{"type":"xml","example":"<ListAccessPointNetworkQualitiesResponse>\\n    <AccessPointNetworkQualities>\\n        <Rtt>4.98</Rtt>\\n        <Loss>0.00%</Loss>\\n        <Id>115</Id>\\n    </AccessPointNetworkQualities>\\n    <RequestId>8E8E8C86-1404-122A-A1BB-84BBC2E9A4B1</RequestId>\\n</ListAccessPointNetworkQualitiesResponse>","errorExample":""}]',
      'title' => '查询访问点网络质量',
      'summary' => '调用ListAccessPointNetworkQualities接口查询智能接入网关实例连接的接入点的网络质量。',
    ),
    'UpdateSmartAGDpiAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-tq3sazs17smldn****',
          ),
        ),
        2 => 
        array (
          'name' => 'DpiEnabled',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启智能接入网关实例DPI功能。取值：

- **true**：开启。
- **false**：关闭。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e****',
          ),
        ),
        4 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：表示只预检此次请求合法性，不会开启或关闭智能接入网关实例的DPI功能。检查项包括是否填写了必需参数、请求格式、实例状态等。如果检查不通过，则返回对应错误；如果检查通过，则返回对应请求ID。
- **false**（默认）：表示发送正常请求，通过检查后直接开启或关闭智能接入网关实例的DPI功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidSmartAGId.NotFound',
            'errorMessage' => 'The specified SmartAGId does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateSmartAGDpiAttributeResponse>\\r\\n<RequestId>0C2EE7A8-74D4-4081-8236-CEBDE3BBCF50</RequestId>\\r\\n</UpdateSmartAGDpiAttributeResponse>","errorExample":""}]',
      'title' => '开启或关闭实例应用识别DPI功能',
      'summary' => '开启或关闭智能接入网关实例应用识别DPI（Deep Packet Inspection）功能。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableSmartAGDpiMonitor' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-vwmylqc9521p5l****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：表示只预检此次请求合法性，不会开启或关闭智能接入网关实例的DPI功能。检查项包括是否填写了必需参数、请求格式、实例状态等。如果检查不通过，则返回对应错误；如果检查通过，则返回对应请求ID。
- **false**（默认）：表示发送正常请求，通过检查后直接关闭智能接入网关实例的DPI监控功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '64966488-B3E3-41E2-9570-4596117EC12E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidSmartAGId.NotFound',
            'errorMessage' => 'The specified SmartAGId does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus',
            'errorMessage' => 'The instance status is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"64966488-B3E3-41E2-9570-4596117EC12E\\"\\n}","errorExample":""},{"type":"xml","example":"<DisableSmartAGDpiMonitorResponse>\\r\\n<RequestId>64966488-B3E3-41E2-9570-4596117EC12E</RequestId>\\r\\n</DisableSmartAGDpiMonitorResponse>","errorExample":""}]',
      'title' => '关闭实例的应用识别DPI监控功能',
      'summary' => '关闭智能接入网关实例的应用识别DPI（Deep Packet Inspection）监控功能。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableSmartAGDpiMonitor' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-vwmylqc9521p5l****',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9****',
          ),
        ),
        3 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只预检此次请求。取值：

- **true**：表示只预检此次请求合法性，不会开启或关闭智能接入网关实例的DPI功能。检查项包括是否填写了必需参数、请求格式、实例状态等。如果检查不通过，则返回对应错误；如果检查通过，则返回对应请求ID。
- **false**（默认）：表示发送正常请求，通过检查后直接开启智能接入网关实例的DPI监控功能。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'SlsProjectName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '您已创建的Project实例名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test1',
          ),
        ),
        5 => 
        array (
          'name' => 'SlsLogStore',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '您已创建的Logstore实例名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '64966488-B3E3-41E2-9570-4596117EC12E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidSmartAGId.NotFound',
            'errorMessage' => 'The specified SmartAGId does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'CreateProjectFailed',
            'errorMessage' => 'Failed to create the SLS project.',
          ),
          2 => 
          array (
            'errorCode' => 'IncorrectStatus',
            'errorMessage' => 'The instance status is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"64966488-B3E3-41E2-9570-4596117EC12E\\"\\n}","errorExample":""},{"type":"xml","example":"<EnableSmartAGDpiMonitorResponse>\\r\\n<RequestId>64966488-B3E3-41E2-9570-4596117EC12E</RequestId>\\r\\n</EnableSmartAGDpiMonitorResponse>","errorExample":""}]',
      'title' => '开启实例应用识别DPI监控功能',
      'summary' => '开启智能接入网关实例应用识别DPI（Deep Packet Inspection）监控功能。',
      'description' => '- 您已经开启智能接入网关实例的DPI功能。更多信息，请参见[UpdateSmartAGDpiAttribute](~~196146~~)。
- 您已经开通了日志服务。具体操作，请参见[快速入门](~~54604~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDpiSignatures' => 
    array (
      'summary' => '查询指定地域下指定的应用信息、指定的应用组信息或智能接入网关在指定地域下支持的全部应用信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。

您可以通过[DescribeRegions](~~69813~~)查询智能接入网关支持的地域以及对应的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页查询开始的Token。',
            'type' => 'string',
            'required' => false,
            'example' => 'caeba0bbb2****',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页展示的应用个数。

取值范围：**1**~**100**。

默认值：**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'DpiGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用组ID。',
            'type' => 'string',
            'required' => false,
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'DpiSignatureIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '应用ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '应用ID。',
              'type' => 'string',
              'required' => false,
              'example' => '235',
            ),
            'required' => false,
            'example' => '235',
            'maxItems' => 100,
          ),
        ),
        5 => 
        array (
          'name' => 'DpiSignatureNames',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '应用名称。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '应用名称。',
              'type' => 'string',
              'required' => false,
              'example' => 'EdgeCast',
            ),
            'required' => false,
            'example' => 'EdgeCast',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '当前页面展示的总的应用个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'NextToken' => 
              array (
                'description' => '下一页查询开始的Token。',
                'type' => 'string',
                'example' => 'FFrMV38kR4****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '63081123-B7C0-4BC9-B9E5-59E77A616EC9',
              ),
              'DpiSignature' => 
              array (
                'description' => '应用信息列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '应用信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DpiSignatureId' => 
                    array (
                      'description' => '应用ID。',
                      'type' => 'string',
                      'example' => '235',
                    ),
                    'MinSignatureDbVersion' => 
                    array (
                      'description' => '支持该应用的最低特征库版本。',
                      'type' => 'string',
                      'example' => '20201117_1_0-0.0.1',
                    ),
                    'DpiGroupId' => 
                    array (
                      'description' => '应用所属的应用组ID。',
                      'type' => 'string',
                      'example' => '20',
                    ),
                    'MinEngineVersion' => 
                    array (
                      'description' => '支持该应用的最低引擎版本。',
                      'type' => 'string',
                      'example' => '0-0.0.1',
                    ),
                    'DpiSignatureName' => 
                    array (
                      'description' => '应用名称。',
                      'type' => 'string',
                      'example' => 'EdgeCast',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"NextToken\\": \\"FFrMV38kR4****\\",\\n  \\"RequestId\\": \\"63081123-B7C0-4BC9-B9E5-59E77A616EC9\\",\\n  \\"DpiSignature\\": [\\n    {\\n      \\"DpiSignatureId\\": \\"235\\",\\n      \\"MinSignatureDbVersion\\": \\"20201117_1_0-0.0.1\\",\\n      \\"DpiGroupId\\": \\"20\\",\\n      \\"MinEngineVersion\\": \\"0-0.0.1\\",\\n      \\"DpiSignatureName\\": \\"EdgeCast\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListDpiSignaturesResponse>\\n<TotalCount>1</TotalCount>\\n<RequestId>63081123-B7C0-4BC9-B9E5-59E77A616EC9</RequestId>\\n<NextToken>FFrMV38kR4****</NextToken>\\n<DpiSignature>\\n    <MinEngineVersion>0-0.0.1</MinEngineVersion>\\n    <MinSignatureDbVersion>20201117_1_0-0.0.1</MinSignatureDbVersion>\\n    <DpiSignatureId>1</DpiSignatureId>\\n    <DpiSignatureName>Baidu</DpiSignatureName>\\n    <DpiGroupId>20</DpiGroupId>\\n</DpiSignature>\\n</ListDpiSignaturesResponse>","errorExample":""}]',
      'title' => '查询指定应用信息',
      'description' => '通过本接口您可以实现以下功能：

- 查询指定地域下智能接入网关支持的全部应用信息。
- 通过应用ID查询指定地域下指定的应用信息。
- 通过应用名称查询指定地域下指定的应用信息。
- 通过应用组ID查询指定地域下该应用组所有的应用信息。

如果您是第一次使用该接口，建议您先通过指定地域ID查询智能接入网关在该地域下支持的所有应用信息，方便您后续进行指定应用查询。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDpiGroups' => 
    array (
      'summary' => '查询指定地域下智能接入网关支持的应用组信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。

您可以通过[DescribeRegions](~~69813~~)查询智能接入网关支持的地域以及对应的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一页查询开始的Token。',
            'type' => 'string',
            'required' => false,
            'example' => 'FFPSpX59Eb****',
          ),
        ),
        2 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表分页查询时每页展示的应用组个数。

取值范围：**1**~**100**。

默认值：**20**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '3',
            'default' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'DpiGroupIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '应用组ID。

系统允许您通过应用组ID指定查询一个或多个应用组信息，您一次最多可以查询10个指定的应用组信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => '1',
            'maxItems' => 10,
          ),
        ),
        4 => 
        array (
          'name' => 'DpiGroupNames',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '应用组名称。

系统允许您通过应用组名称指定查询一个或多个应用组信息，您一次最多可以查询10个指定的应用组信息。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
            'required' => false,
            'example' => 'P2P',
            'maxItems' => 10,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '当前接口查询出来的应用组总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '22',
              ),
              'NextToken' => 
              array (
                'description' => '下一页查询开始的Token。',
                'type' => 'string',
                'example' => 'FFPSpX59Ebw****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EC184A86-3C93-49D6-BB34-6C193E14D37F',
              ),
              'DpiGroup' => 
              array (
                'description' => '应用组信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MinSignatureDbVersion' => 
                    array (
                      'description' => '支持该应用组的最低特征库版本。',
                      'type' => 'string',
                      'example' => '20201117_1_0-0.0.1',
                    ),
                    'DpiGroupName' => 
                    array (
                      'description' => '应用组名称。',
                      'type' => 'string',
                      'example' => 'P2P',
                    ),
                    'DpiGroupId' => 
                    array (
                      'description' => '应用组ID。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                    'MinEngineVersion' => 
                    array (
                      'description' => '支持该应用组的最低引擎版本。',
                      'type' => 'string',
                      'example' => '0-0.0.1',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"FFPSpX59Ebw****\\",\\n  \\"RequestId\\": \\"EC184A86-3C93-49D6-BB34-6C193E14D37F\\",\\n  \\"TotalCount\\": 22,\\n  \\"DpiGroup\\": [\\n    {\\n      \\"DpiGroupId\\": \\"1\\",\\n      \\"MinEngineVersion\\": \\"0-0.0.1\\",\\n      \\"MinSignatureDbVersion\\": \\"20201117_1_0-0.0.1\\",\\n      \\"DpiGroupName\\": \\"P2P\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListDpiGroupsResponse>\\n<TotalCount>22</TotalCount>\\n<RequestId>9E753114-BAF3-4676-9572-377FED18446D</RequestId>\\n<NextToken>FFPSpX59Ebw****</NextToken>\\n<DpiGroup>\\n    <MinEngineVersion>0-0.0.1</MinEngineVersion>\\n    <DpiGroupName>P2P</DpiGroupName>\\n    <MinSignatureDbVersion>20201117_1_0-0.0.1</MinSignatureDbVersion>\\n    <DpiGroupId>1</DpiGroupId>\\n</DpiGroup>\\n<DpiGroup>\\n    <MinEngineVersion>0-0.0.1</MinEngineVersion>\\n    <DpiGroupName>VoIP</DpiGroupName>\\n    <MinSignatureDbVersion>20201117_1_0-0.0.1</MinSignatureDbVersion>\\n    <DpiGroupId>2</DpiGroupId>\\n</DpiGroup>\\n</ListDpiGroupsResponse>","errorExample":""}]',
      'title' => '查询应用组信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDpiConfigError' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。
您可以调用[DescribeRegions](~~69813~~)接口查询智能接入网关支持的地域以及对应的地域ID。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'sag-1e8sgws6b133b8****',
          ),
        ),
        2 => 
        array (
          'name' => 'DpiConfigType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置了DPI功能的实例类型：

- **acl**：表示访问控制实例。
- **qos**：表示QoS策略实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos',
            'enum' => 
            array (
              0 => 'acl',
              1 => 'qos',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'RuleInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '配置了DPI功能的实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-1strcafl4wghpb****',
          ),
        ),
        4 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始查询下一页的Token。',
            'type' => 'string',
            'required' => false,
            'example' => 'caeba0bbb2be03f84eb48b699f0a****',
          ),
        ),
        5 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时允许每页展示的配置异常的最大条目数。

取值范围：**1**~**100**。

默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'NextToken' => 
              array (
                'description' => '开始查询下一页的Token。',
                'type' => 'string',
                'example' => 'caeba0bbb2be03f84eb48b699f0a****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F47B5293-27B6-48EF-A9C6-E90A41449813',
              ),
              'Total' => 
              array (
                'description' => 'DPI配置异常的总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'MaxResults' => 
              array (
                'description' => '分页查询时允许每页展示的配置异常的最大条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'DpiConfigError' => 
              array (
                'description' => 'DPI配置异常的信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'DPI配置异常的信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SN' => 
                    array (
                      'description' => '智能接入网关设备序列号。',
                      'type' => 'string',
                      'example' => 'sag-2160808****',
                    ),
                    'SmartAGId' => 
                    array (
                      'description' => '智能接入网关实例ID。',
                      'type' => 'string',
                      'example' => 'sag-1e8sgws6b133b8****',
                    ),
                    'ErrorType' => 
                    array (
                      'description' => '配置异常类型。

- **DeviceNotSupported **：智能接入网关设备不支持DPI功能。
- **VersionNotSupported **：智能接入网关设备运行的DPI版本过低。
- **NotEnable**：智能接入网关设备的DPI功能未开启。',
                      'type' => 'string',
                      'example' => 'DeviceNotSupported',
                    ),
                    'RuleConfigErrorList' => 
                    array (
                      'description' => 'DPI配置异常的信息列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => 'DPI配置异常的信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'DpiSignatureIds' => 
                          array (
                            'description' => '配置异常的应用ID列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '配置异常的应用ID。

您可以通过[ListDpiSignatures](~~196630~~)查询应用ID及其对应的应用信息。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                          ),
                          'RuleId' => 
                          array (
                            'description' => '配置异常的应用关联的规则ID列表。

- 如果您当前查询的是访问控制DPI配置异常信息，则此处显示配置异常的访问控制规则实例ID。
- 如果您当前查询的是QoS策略DPI配置异常信息，则此处显示配置异常的五元组规则实例ID。',
                            'type' => 'string',
                            'example' => 'qospy-axud4s62gz632b****',
                          ),
                          'DpiGroupIds' => 
                          array (
                            'description' => '配置异常的应用组ID列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '配置异常的应用组ID。
您可以通过[ListDpiGroups](~~196754~~)查询应用组ID及其包含的应用信息。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"NextToken\\": \\"caeba0bbb2be03f84eb48b699f0a****\\",\\n  \\"RequestId\\": \\"F47B5293-27B6-48EF-A9C6-E90A41449813\\",\\n  \\"Total\\": 1,\\n  \\"MaxResults\\": 10,\\n  \\"DpiConfigError\\": [\\n    {\\n      \\"SN\\": \\"sag-2160808****\\",\\n      \\"SmartAGId\\": \\"sag-1e8sgws6b133b8****\\",\\n      \\"ErrorType\\": \\"DeviceNotSupported\\",\\n      \\"RuleConfigErrorList\\": [\\n        {\\n          \\"DpiSignatureIds\\": [\\n            \\"1\\"\\n          ],\\n          \\"RuleId\\": \\"qospy-axud4s62gz632b****\\",\\n          \\"DpiGroupIds\\": [\\n            \\"1\\"\\n          ]\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListDpiConfigErrorResponse>\\n<RequestId>27A5B768-4366-4EF3-9524-7FD51331B1DC</RequestId>\\n<Total>1</Total>\\n<MaxResults>10</MaxResults>\\n<DpiConfigError>\\n    <ErrorType>DeviceNotSupported</ErrorType>\\n    <RuleConfigErrorList>\\n        <RuleId>qospy-axud4s62gz632b****</RuleId>\\n        <DpiGroupIds>1</DpiGroupIds>\\n    </RuleConfigErrorList>\\n    <SN>sage62x0526****</SN>\\n    <SmartAGId>sag-4d6i45zess8nj4****</SmartAGId>\\n</DpiConfigError>\\n</ListDpiConfigErrorResponse>","errorExample":""}]',
      'title' => '查询应用识别DPI配置异常信息',
      'summary' => '查询应用识别DPI（Deep Packet Inspection）配置异常的信息。',
      'description' => '如果您配置了基于应用的访问控制实例或QoS策略实例，并将其关联到了智能接入网关实例上，您可以通过调用本接口查看您创建的访问控制规则或QoS策略五元组规则是否都已经成功应用到了目标智能接入网关实例上。如果有未应用成功的配置，本接口会将配置异常信息返回给您。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetSmartAGDpiAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-tq3sazs17smldn****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'LogstoreName' => 
              array (
                'description' => '智能接入网关实例DPI功能关联的Logstore实例名称。',
                'type' => 'string',
                'example' => 'test1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B2997DC4-F1A2-418B-81FC-C8892CD31CFF',
              ),
              'ProjectName' => 
              array (
                'description' => '智能接入网关实例DPI功能关联的Project实例名称。',
                'type' => 'string',
                'example' => 'test2',
              ),
              'SlsRegion' => 
              array (
                'description' => '智能接入网关实例DPI功能关联的日志服务的地域。',
                'type' => 'string',
                'example' => 'cn-shanghai',
              ),
              'DpiMonitorStatus' => 
              array (
                'description' => '智能接入网关实例DPI监控功能开启状态。

- **Active**：已开启。
- **Inactive**：未开启。',
                'type' => 'string',
                'example' => 'Inactive',
              ),
              'DpiStatus' => 
              array (
                'description' => '智能接入网关实例DPI功能开启状态。

- **On**：已开启。
- **Off**：未开启。',
                'type' => 'string',
                'example' => 'On',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B2997DC4-F1A2-418B-81FC-C8892CD31CFF\\",\\n  \\"SlsRegion\\": \\"cn-shanghai\\",\\n  \\"DpiStatus\\": \\"On\\",\\n  \\"ProjectName\\": \\"test2\\",\\n  \\"DpiMonitorStatus\\": \\"Inactive\\",\\n  \\"LogstoreName\\": \\"test1\\"\\n}","errorExample":""},{"type":"xml","example":"<GetSmartAGDpiAttributeResponse>\\n<RequestId>B2997DC4-F1A2-418B-81FC-C8892CD31CFF</RequestId>\\n<SlsRegion>cn-shanghai</SlsRegion>\\n<DpiMonitorStatus>Inactive</DpiMonitorStatus>\\n<DpiStatus>On</DpiStatus>\\n</GetSmartAGDpiAttributeResponse>","errorExample":""}]',
      'title' => '查询实例应用识别DPI功能配置信息',
      'summary' => '查询智能接入网关实例应用识别DPI（Deep Packet Inspection）功能配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetAclAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-xhwhyuo43l0n*****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5D2013F0-85AB-4332-9094-8023A598C2C1',
              ),
              'AclId' => 
              array (
                'description' => '访问控制实例ID。',
                'type' => 'string',
                'example' => 'acl-xhwhyuo43l0n*****',
              ),
              'ErrorConfigSmartAGCount' => 
              array (
                'description' => '访问控制实例DPI功能配置异常关联的智能接入网关设备数量。

您可以通过[ListDpiConfigError](~~197566~~)查看具体的异常信息及相关的智能接入网关设备信息。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '0',
              ),
              'AclName' => 
              array (
                'description' => '访问控制实例名称。',
                'type' => 'string',
                'example' => 'dpi_test',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5D2013F0-85AB-4332-9094-8023A598C2C1\\",\\n  \\"AclId\\": \\"acl-xhwhyuo43l0n*****\\",\\n  \\"ErrorConfigSmartAGCount\\": 0,\\n  \\"AclName\\": \\"dpi_test\\"\\n}","errorExample":""},{"type":"xml","example":"<GetAclAttributeResponse>\\n<RequestId>5D2013F0-85AB-4332-9094-8023A598C2C1</RequestId>\\n<AclId>acl-j8s80200h3cli****</AclId>\\n<ErrorConfigSmartAGCount>0</ErrorConfigSmartAGCount>\\n<AclName>dpi_test</AclName>\\n</GetAclAttributeResponse>\\n","errorExample":""}]',
      'title' => '查询实例中应用识别DPI配置异常信息',
      'summary' => '查询指定访问控制实例中应用识别DPI功能配置异常的信息。',
      'description' => '- 您已经创建了基于应用的访问控制实例。具体操作，请参见[AddACLRule](~~114012~~)。
- 您已经将创建的基于应用的访问控制实例关联到了目标智能接入网关实例中。具体操作，请参见[AssociateACL](~~114009~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateProbeTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。  
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-asdfz6ac74oj5v****',
          ),
        ),
        2 => 
        array (
          'name' => 'Sn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag****',
          ),
        ),
        3 => 
        array (
          'name' => 'TaskName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测任务名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'test-ping',
          ),
        ),
        4 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测任务类型。取值：

- **Internet**：公网拨测。

- **Intranet**：私网拨测。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Internet',
          ),
        ),
        5 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测任务协议，取值：

- **ICMP**。
- **TCP**。
- **HTTP**。

> 私网拨测仅支持ICMP和TCP协议。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ICMP',
          ),
        ),
        6 => 
        array (
          'name' => 'Domain',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测任务目的域名。
对于ICMP、TCP协议类型的拨测，取值为目的服务的IP或域名；对于HTTP协议类型的拨测，取值为目的服务的URL。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'www.example.com',
          ),
        ),
        7 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测协议端口号。

> 对于TCP协议类型的拨测必填，其他协议不填值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '80',
          ),
        ),
        8 => 
        array (
          'name' => 'PacketNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测协议每分钟发包数。

取值范围：**1**~**60**。

> 对于ICMP协议类型的拨测必填，其他协议不填值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        9 => 
        array (
          'name' => 'ProbeTaskSourceAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '私网拨测源地址。

> 对于私网类型的拨测协议必填。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '192.168.1.1',
          ),
        ),
        10 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用拨测任务。取值：

- **true**：是。
- **false**：否。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '324223F3-93D3-4CE4-B26F-66C0C3809922',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'Data' => 
              array (
                'description' => '创建成功的拨测任务ID。',
                'type' => 'string',
                'example' => 'probe-****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidProbeDomain',
            'errorMessage' => 'The specified probe task domain is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified name is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidProbeType',
            'errorMessage' => 'The specified probe task type is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidProbeProtocol',
            'errorMessage' => 'The specified probe task protocol is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidProbePort',
            'errorMessage' => 'The specified probe task port is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidPacketNumber',
            'errorMessage' => 'The specified probe task packet number is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidProbeSourceIP',
            'errorMessage' => 'The specified probe task source ip is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'ExistSameParamTask',
            'errorMessage' => 'Exist task with same params.',
          ),
          8 => 
          array (
            'errorCode' => 'SagConfiguring',
            'errorMessage' => 'Sag is configuring.	',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"324223F3-93D3-4CE4-B26F-66C0C3809922\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"Data\\": \\"probe-****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateProbeTaskResponse>\\n    <RequestId>324223F3-93D3-4CE4-B26F-66C0C3809922</RequestId>\\n    <Code>200</Code>\\n    <Message>successful</Message>\\n    <Data>probe-****</Data>\\n</CreateProbeTaskResponse>","errorExample":""}]',
      'title' => '创建拨测任务',
      'summary' => '为指定的智能接入网关设备创建拨测任务。',
      'description' => '- 目前仅软件版本为2.7.0及以上的SAG-1000设备支持应用拨测监控功能。
- 在创建拨测任务时，智能接入网关实例需提前开启深度监控功能。您可以调用[SetAdvancedMonitorState](~~476404~~)接口设置深度监控开关状态。',
    ),
    'ListProbeTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'sag-****',
          ),
        ),
        2 => 
        array (
          'name' => 'Sn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'sag****',
          ),
        ),
        3 => 
        array (
          'name' => 'ProbeTaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测任务ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'probe-****',
          ),
        ),
        4 => 
        array (
          'name' => 'TaskName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测任务名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'test-ping',
          ),
        ),
        5 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测任务协议。取值：

- **ICMP**。
- **TCP**。
- **HTTP**。

> 私网拨测仅支持ICMP和TCP协议。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'ICMP',
          ),
        ),
        6 => 
        array (
          'name' => 'SagName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'shanghai-office',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的行数。最大值：**50**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        8 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '列表的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '324223F3-93D3-4CE4-B26F-66C0C3809922',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的行数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Data' => 
              array (
                'description' => '拨测任务配置信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ProbeTaskId' => 
                    array (
                      'description' => '拨测任务ID。',
                      'type' => 'string',
                      'example' => 'probe-****',
                    ),
                    'TaskName' => 
                    array (
                      'description' => '拨测任务名称。',
                      'type' => 'string',
                      'example' => 'test-ping',
                    ),
                    'SagId' => 
                    array (
                      'description' => '智能接入网关实例ID。',
                      'type' => 'string',
                      'example' => 'sag-asdfz6ac74oj5v****',
                    ),
                    'Sn' => 
                    array (
                      'description' => '智能接入网关设备序列号。',
                      'type' => 'string',
                      'example' => 'sag****',
                    ),
                    'Type' => 
                    array (
                      'description' => '拨测任务类型。取值：

- **Internet**：公网拨测。
- **Intranet**：私网拨测。',
                      'type' => 'string',
                      'example' => 'Internet',
                    ),
                    'Protocol' => 
                    array (
                      'description' => '拨测任务协议。取值：

- **ICMP**。
- **TCP**。
- **HTTP**。

> 私网拨测仅支持ICMP和TCP协议。',
                      'type' => 'string',
                      'example' => 'ICMP',
                    ),
                    'Domain' => 
                    array (
                      'description' => '拨测任务目的域名。',
                      'type' => 'string',
                      'example' => 'www.example.com',
                    ),
                    'Port' => 
                    array (
                      'description' => '拨测协议端口号。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '80',
                    ),
                    'PacketNumber' => 
                    array (
                      'description' => '拨测协议每分钟发包数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'ProbeTaskSourceAddress' => 
                    array (
                      'description' => '私网拨测源地址。',
                      'type' => 'string',
                      'example' => '192.168.1.1',
                    ),
                    'Enable' => 
                    array (
                      'description' => '是否已启用拨测任务。取值：

- **true**：已开启。
- **false**：未开启。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'GmtCreate' => 
                    array (
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2022-11-23 14:09',
                    ),
                    'GmtModify' => 
                    array (
                      'description' => '修改时间。',
                      'type' => 'string',
                      'example' => '2022-11-23 14:09',
                    ),
                  ),
                ),
                'example' => 'probe-xxx',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified name is not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidProbeProtocol',
            'errorMessage' => 'The specified probe task protocol is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"324223F3-93D3-4CE4-B26F-66C0C3809922\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"TotalCount\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"PageNumber\\": 1,\\n  \\"Data\\": [\\n    {\\n      \\"ProbeTaskId\\": \\"probe-****\\",\\n      \\"TaskName\\": \\"test-ping\\",\\n      \\"SagId\\": \\"sag-asdfz6ac74oj5v****\\",\\n      \\"Sn\\": \\"sag****\\",\\n      \\"Type\\": \\"Internet\\",\\n      \\"Protocol\\": \\"ICMP\\",\\n      \\"Domain\\": \\"www.example.com\\",\\n      \\"Port\\": 80,\\n      \\"PacketNumber\\": 10,\\n      \\"ProbeTaskSourceAddress\\": \\"192.168.1.1\\",\\n      \\"Enable\\": true,\\n      \\"GmtCreate\\": \\"2022-11-23 14:09\\",\\n      \\"GmtModify\\": \\"2022-11-23 14:09\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListProbeTaskResponse>\\n    <RequestId>324223F3-93D3-4CE4-B26F-66C0C3809922</RequestId>\\n    <Code>200</Code>\\n    <Message>successful</Message>\\n    <TotalCount>1</TotalCount>\\n    <PageSize>10</PageSize>\\n    <PageNumber>1</PageNumber>\\n    <Data>\\n        <ProbeTaskId>probe-****</ProbeTaskId>\\n        <TaskName>test-ping</TaskName>\\n        <SagId>sag-asdfz6ac74oj5v****</SagId>\\n        <Sn>sag****</Sn>\\n        <Type>Internet</Type>\\n        <Protocol>ICMP</Protocol>\\n        <Domain>www.example.com</Domain>\\n        <Port>80</Port>\\n        <PacketNumber>10</PacketNumber>\\n        <ProbeTaskSourceAddress>192.168.1.1</ProbeTaskSourceAddress>\\n        <Enable>true</Enable>\\n        <GmtCreate>2022-11-23 14:09</GmtCreate>\\n        <GmtModify>2022-11-23 14:09</GmtModify>\\n    </Data>\\n</ListProbeTaskResponse>","errorExample":""}]',
      'title' => '查询拨测任务',
      'summary' => '查询拨测任务。',
    ),
    'UpdateProbeTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-****',
          ),
        ),
        2 => 
        array (
          'name' => 'Sn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag****',
          ),
        ),
        3 => 
        array (
          'name' => 'ProbeTaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测任务ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'probe-****',
          ),
        ),
        4 => 
        array (
          'name' => 'TaskName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测任务名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test-ping',
          ),
        ),
        5 => 
        array (
          'name' => 'Protocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测任务协议。取值：

- **ICMP**。
- **TCP**。
- **HTTP**。

> 私网拨测仅支持ICMP和TCP协议。',
            'type' => 'string',
            'required' => false,
            'example' => 'ICMP',
          ),
        ),
        6 => 
        array (
          'name' => 'Domain',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测任务目的域名。

对于ICMP、TCP协议类型的拨测，取值为目的服务的IP或域名；对于HTTP协议类型的拨测，取值为目的服务的URL。',
            'type' => 'string',
            'required' => false,
            'example' => 'www.example.com',
          ),
        ),
        7 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测协议端口号。

> 对于TCP协议类型的拨测必填，其他协议不填值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '80',
          ),
        ),
        8 => 
        array (
          'name' => 'PacketNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测协议每分钟发包数。

取值范围：**1**~**60**。

> 对于ICMP协议类型的拨测必填，其他协议不填值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        9 => 
        array (
          'name' => 'ProbeTaskSourceAddress',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '私网拨测源地址。

> 对于私网类型的拨测必填。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.1.1',
          ),
        ),
        10 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用拨测任务。取值：

- **true**：是。
- **false**：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '324223F3-93D3-4CE4-B26F-66C0C3809922',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => 'successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified name is not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidProbeProtocol',
            'errorMessage' => 'The specified probe task protocol is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidProbeDomain',
            'errorMessage' => 'The specified probe task domain is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidProbePort',
            'errorMessage' => 'The specified probe task port is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidPacketNumber',
            'errorMessage' => 'The specified probe task packet number is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidProbeSourceIP',
            'errorMessage' => 'The specified probe task source ip is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'ExistSameParamTask',
            'errorMessage' => 'Exist task with same params.',
          ),
          8 => 
          array (
            'errorCode' => 'SagConfiguring',
            'errorMessage' => 'Sag is configuring.	',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"324223F3-93D3-4CE4-B26F-66C0C3809922\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateProbeTaskResponse>\\n    <RequestId>324223F3-93D3-4CE4-B26F-66C0C3809922</RequestId>\\n    <Code>200</Code>\\n    <Message>successful</Message>\\n</UpdateProbeTaskResponse>","errorExample":""}]',
      'title' => '更新拨测任务',
      'summary' => '更新拨测任务。',
    ),
    'DeleteProbeTask' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-****',
          ),
        ),
        2 => 
        array (
          'name' => 'Sn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag****',
          ),
        ),
        3 => 
        array (
          'name' => 'ProbeTaskId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '拨测任务ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'probe-****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '324223F3-93D3-4CE4-B26F-66C0C3809922',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => 'successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SagConfiguring',
            'errorMessage' => 'Sag is configuring.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"324223F3-93D3-4CE4-B26F-66C0C3809922\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteProbeTaskResponse>\\n    <RequestId>324223F3-93D3-4CE4-B26F-66C0C3809922</RequestId>\\n    <Code>200</Code>\\n    <Message>successful</Message>\\n</DeleteProbeTaskResponse>","errorExample":""}]',
      'title' => '删除指定的拨测任务',
      'summary' => '删除指定的拨测任务。',
    ),
    'CreateServiceAddress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'AddressType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例服务地址类型，仅取值：**ProbeTask**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ProbeTask',
          ),
        ),
        2 => 
        array (
          'name' => 'Address',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例服务地址。取值如：**192.168.1.1**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.1.1',
          ),
        ),
        3 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-****',
          ),
        ),
        4 => 
        array (
          'name' => 'Sn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '324223F3-93D3-4CE4-B26F-66C0C3809922',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => 'successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidServiceAddressType',
            'errorMessage' => 'The specified service address type is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParam.Ip',
            'errorMessage' => 'The specified IP address is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceExists',
            'errorMessage' => 'The specified instance already exists.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"324223F3-93D3-4CE4-B26F-66C0C3809922\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateServiceAddressResponse>\\n    <RequestId>324223F3-93D3-4CE4-B26F-66C0C3809922</RequestId>\\n    <Code>200</Code>\\n    <Message>successful</Message>\\n</CreateServiceAddressResponse>","errorExample":""}]',
      'title' => '配置服务地址',
      'summary' => '为指定的智能接入网关设备配置服务地址。',
    ),
    'DeleteServiceAddress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'AddressType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例服务地址类型。仅取值：**ProbeTask**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ProbeTask',
          ),
        ),
        2 => 
        array (
          'name' => 'Address',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例服务地址。取值如：**192.168.1.1**。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.1.1',
          ),
        ),
        3 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-****',
          ),
        ),
        4 => 
        array (
          'name' => 'Sn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '324223F3-93D3-4CE4-B26F-66C0C3809922',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => 'successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'ServiceAddressOperationDenied',
            'errorMessage' => 'Service address operation is denied.',
          ),
          2 => 
          array (
            'errorCode' => 'ServiceAddressInUse',
            'errorMessage' => 'Service address is in use.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"324223F3-93D3-4CE4-B26F-66C0C3809922\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteServiceAddressResponse>\\n    <RequestId>324223F3-93D3-4CE4-B26F-66C0C3809922</RequestId>\\n    <Code>200</Code>\\n    <Message>successful</Message>\\n</DeleteServiceAddressResponse>","errorExample":""}]',
      'title' => '删除服务地址',
      'summary' => '删除智能接入网关设备配置的服务地址。',
    ),
    'ListAvailableServiceAddress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'AddressType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例服务地址类型，当前支持的取值：

- **ProbeTask**：拨测源IP。
- **RemoteWeb**：远程登录IP。

> 若不传值则查询所有的服务地址。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'ProbeTask',
          ),
        ),
        2 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-****',
          ),
        ),
        3 => 
        array (
          'name' => 'Sn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '324223F3-93D3-4CE4-B26F-66C0C3809922',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Data' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Address' => 
                    array (
                      'description' => '服务地址。',
                      'type' => 'string',
                      'example' => '192.168.1.1',
                    ),
                    'AddressType' => 
                    array (
                      'description' => '服务地址类型。',
                      'type' => 'string',
                      'example' => 'ProbeTask',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidId.SN',
            'errorMessage' => 'The specified smart access gateway serial number does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidServiceAddressType',
            'errorMessage' => 'The specified service address type is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"324223F3-93D3-4CE4-B26F-66C0C3809922\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"Data\\": [\\n    {\\n      \\"Address\\": \\"192.168.1.1\\",\\n      \\"AddressType\\": \\"ProbeTask\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListAvailableServiceAddressResponse>\\n    <RequestId>324223F3-93D3-4CE4-B26F-66C0C3809922</RequestId>\\n    <Code>200</Code>\\n    <Message>Success</Message>\\n    <Data>\\n        <Address>192.168.1.1</Address>\\n        <AddressType>ProbeTask</AddressType>\\n    </Data>\\n</ListAvailableServiceAddressResponse>","errorExample":""}]',
      'title' => '查询服务地址信息',
      'summary' => '查询指定智能接入网关设备配置的服务地址信息。',
    ),
    'SetAdvancedMonitorState' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-****',
          ),
        ),
        2 => 
        array (
          'name' => 'Enable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用深度监控开关。取值：

- **true**：是。
- **false**：否。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '324223F3-93D3-4CE4-B26F-66C0C3809922',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => 'Success',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"324223F3-93D3-4CE4-B26F-66C0C3809922\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Success\\"\\n}","errorExample":""},{"type":"xml","example":"<SetAdvancedMonitorStateResponse>\\n    <RequestId>324223F3-93D3-4CE4-B26F-66C0C3809922</RequestId>\\n    <Code>200</Code>\\n    <Message>Success</Message>\\n</SetAdvancedMonitorStateResponse>","errorExample":""}]',
      'title' => '设置深度监控开关状态',
      'summary' => '设置指定智能接入网关实例的深度监控开关状态。',
    ),
    'GetAdvancedMonitorState' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-asdfz6ac74oj5v****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '324223F3-93D3-4CE4-B26F-66C0C3809922',
              ),
              'Code' => 
              array (
                'description' => '响应码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => 'Success',
              ),
              'Data' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Enable' => 
                    array (
                      'description' => '是否已开启深度监控开关。取值：

- **true**：已开启。
- **false**：未开启。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"324223F3-93D3-4CE4-B26F-66C0C3809922\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Success\\",\\n  \\"Data\\": [\\n    {\\n      \\"Enable\\": true\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<GetAdvancedMonitorStateResponse>\\n    <RequestId>324223F3-93D3-4CE4-B26F-66C0C3809922</RequestId>\\n    <Code>200</Code>\\n    <Message>Success</Message>\\n    <Data>\\n        <Enable>true</Enable>\\n    </Data>\\n</GetAdvancedMonitorStateResponse>","errorExample":""}]',
      'title' => '查询深度监控开关状态',
      'summary' => '查询指定智能接入网关实例的深度监控开关状态。',
    ),
    'DescribeSmartAccessGatewayAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-6z21oj0vjjrx****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'UpBandwidth4G' => 
              array (
                'description' => '智能接入网关设备4G公网最大上行带宽。单位：Mbps。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'Description' => 
              array (
                'description' => '智能接入网关实例描述。',
                'type' => 'string',
                'example' => 'testdesc',
              ),
              'EndTime' => 
              array (
                'description' => '智能接入网关实例到期时间戳。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1628265600000',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '智能接入网关实例所属资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfm2iu4fnc****',
              ),
              'UserCount' => 
              array (
                'description' => '智能接入网关实例客户端账号数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'AssociatedCcnName' => 
              array (
                'description' => '智能接入网关实例绑定的云连接网名称。',
                'type' => 'string',
                'example' => 'testname',
              ),
              'MaxBandwidth' => 
              array (
                'description' => '智能接入网关实例的带宽峰值。单位：Mbps。',
                'type' => 'string',
                'example' => '50 M',
              ),
              'VpnStatus' => 
              array (
                'description' => 'aliVPN连接状态。

- **up**：aliVPN连接正常。
- **down**：aliVPN连接异常。
',
                'type' => 'string',
                'example' => 'down',
              ),
              'BoxControllerIp' => 
              array (
                'description' => '智能接入网关主设备的公网IP。',
                'type' => 'string',
                'example' => '112.XX.XX.25',
              ),
              'UpBandwidthWan' => 
              array (
                'description' => '智能接入网关设备WAN口最大上行带宽。单位：Mbps。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'CidrBlock' => 
              array (
                'description' => '本地网络或客户端要和云上互通的私网网段。',
                'type' => 'string',
                'example' => '10.0.9.0/24',
              ),
              'QosIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'QosId' => 
                  array (
                    'description' => '智能接入网关实例绑定的QoS策略实例信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '智能接入网关实例绑定的QoS策略实例ID。',
                      'type' => 'string',
                      'example' => 'qos-yca8p30w1jcrbt****',
                    ),
                  ),
                ),
              ),
              'IRIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'IRId' => 
                  array (
                    'description' => '智能接入网关实例绑定的智能选路策略实例信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '智能接入网关实例绑定的智能选路策略实例ID。',
                      'type' => 'string',
                      'example' => 'ir-yca8p30w1jcrbt****',
                    ),
                  ),
                ),
              ),
              'Devices' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Device' => 
                  array (
                    'description' => '智能接入网关设备信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '智能接入网关设备信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SerialNumber' => 
                        array (
                          'description' => '智能接入网关设备序列号。',
                          'type' => 'string',
                          'example' => 'sage6gsdllbid****"',
                        ),
                        'HaState' => 
                        array (
                          'description' => '智能接入网关设备高可用状态。

- **Active**：标识当前设备为主设备。
- **Standby**：标识当前设备为备设备。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'SecretKey' => 
                        array (
                          'description' => '智能接入网关设备密钥。',
                          'type' => 'string',
                          'example' => '+T4nV8xkS4****',
                        ),
                        'DpiSignatureDbVersion' => 
                        array (
                          'description' => '智能接入网关设备使用的应用识别数据库版本。',
                          'type' => 'string',
                          'example' => '20201117_1_0-0.0.1',
                        ),
                        'SoftwareVersion' => 
                        array (
                          'description' => '智能接入网关设备运行的软件版本。',
                          'type' => 'string',
                          'example' => '2.3.0.0',
                        ),
                        'DistributeSkStatus' => 
                        array (
                          'description' => '智能接入网关设备密钥激活状态。

- **1**：已激活。
- **0**：未激活。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'MonitorVersion' => 
                        array (
                          'description' => '智能接入网关设备使用的监控版本。',
                          'type' => 'string',
                          'example' => '0.1.11.17',
                        ),
                        'HcState' => 
                        array (
                          'description' => '智能接入网关设备健康检查状态。

- **online**：设备在线，已经接入阿里云。
- **offline**：设备离线，未接入阿里云。',
                          'type' => 'string',
                          'example' => 'online',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Name' => 
              array (
                'description' => '智能接入网关实例名称。',
                'type' => 'string',
                'example' => 'testname',
              ),
              'OptimizationType' => 
              array (
                'description' => '智能接入网关实例优化重传类型。优化重传类型开启后，默认为**fec**。',
                'type' => 'boolean',
                'example' => 'fec',
              ),
              'IpsecStatus' => 
              array (
                'description' => 'ipsecVPN连接状态。

- **up**：ipsecVPN连接正常。
- **down**：ipsecVPN连接异常。',
                'type' => 'string',
                'example' => 'up',
              ),
              'RoutingStrategy' => 
              array (
                'description' => '智能接入网关实例的线下路由同步方式。

- **static**：静态路由。

- **dynamic**：动态路由。',
                'type' => 'string',
                'example' => 'static',
              ),
              'AssociatedCcnId' => 
              array (
                'description' => '智能接入网关实例绑定的云连接网ID。',
                'type' => 'string',
                'example' => 'ccn-iz26o9zye6lhoo****',
              ),
              'FlowLogIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'FlowLogId' => 
                  array (
                    'description' => '智能接入网关实例绑定的流日志实例信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '智能接入网关实例绑定的流日志实例ID。',
                      'type' => 'string',
                      'example' => 'fl-0vv40lyu2un5qh****',
                    ),
                  ),
                ),
              ),
              'SmartAGId' => 
              array (
                'description' => '智能接入网关实例ID。',
                'type' => 'string',
                'example' => 'sag-6z21oj0vjjrx6s****',
              ),
              'InstanceType' => 
              array (
                'description' => '智能接入网关实例类型。

- **sag-1000**：标识当前实例为智能接入网关硬件版实例，且实例绑定的设备类型为SAG-1000。
- **sag-10wm**：标识当前实例为智能接入网关硬件版实例，且实例绑定的设备类型为SAG-100WM。
- **sag-software**：标识当前实例为智能接入网关APP实例。
- **sag-vcpe**：标识当前实例为智能接入网关vCPE实例。',
                'type' => 'string',
                'example' => 'sag-vcpe',
              ),
              'ResellerUid' => 
              array (
                'description' => '经销商账号ID。',
                'type' => 'string',
                'example' => '1210123456123456',
              ),
              'SecurityLockThreshold' => 
              array (
                'description' => '智能接入网关设备离线锁定的时间阈值。

单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3600',
              ),
              'Status' => 
              array (
                'description' => '智能接入网关实例状态。

- **Ordered**：待发货。
- **Delivered**：已发货。 
- **Received**：已激活。
- **Unconfirmed**：待确认。
- **Active**：可用。 
- **Offline**：离线。
- **Arrearage**：欠费锁定。
',
                'type' => 'string',
                'example' => 'Active',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F02D092B-A0B7-4BA1-BCA7-014B953C5DC7',
              ),
              'CreateTime' => 
              array (
                'description' => '智能接入网关实例创建时间戳。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1622617250000',
              ),
              'DataPlan' => 
              array (
                'description' => '智能接入网关实例的流量套餐。单位：GB。

> 目前仅支持每个账号每个月赠送5 GB流量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '5',
              ),
              'EnableOptimization' => 
              array (
                'description' => '智能接入网关实例是否开启优化重传功能。

- **true**：已开启。
- **false**：未开启。
',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'City' => 
              array (
                'description' => '智能接入网关设备所在城市ID。',
                'type' => 'string',
                'example' => 'cn-shanghai',
              ),
              'ResellerInstanceId' => 
              array (
                'description' => '经销商实例ID。',
                'type' => 'string',
                'example' => 'sag-v0fkpk4akfz5******',
              ),
              'SerialNumber' => 
              array (
                'description' => '智能接入网关设备序列号。',
                'type' => 'string',
                'example' => 'sage6gsdllbidl****,sage6nniq3d****',
              ),
              'BackupBoxControllerIp' => 
              array (
                'description' => '智能接入网关备设备的公网IP。',
                'type' => 'string',
                'example' => '112.XX.XX.27',
              ),
              'TrafficMasterSn' => 
              array (
                'description' => '当前主要负责传输流量的智能接入网关设备序列号。',
                'type' => 'string',
                'example' => 'sage6nniq3d****',
              ),
              'AccessPointId' => 
              array (
                'description' => '智能接入网关实例接入点ID。',
                'type' => 'string',
                'example' => '238',
              ),
              'Links' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Link' => 
                  array (
                    'description' => '本地网络接入阿里云的链路信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '本地网络接入阿里云的链路信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'HealthCheckTargetIp' => 
                        array (
                          'description' => '边界路由器IP地址。

>在您创建关于专线的健康检查实例时，需指定边界路由器IP地址为目标地址。',
                          'type' => 'string',
                          'example' => '100.XX.XX.144',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '链路到期时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1628265600000',
                        ),
                        'Status' => 
                        array (
                          'description' => '链路状态。

宽带链路状态：
- **Ordered**：待发货。
- **Delivered**：已发货。
- **Offline**：离线。
- **Active**：可用。
- **Arrearage**：欠费锁定。

专线链路状态：
- **normal**：正常。
- **arrears**：欠费。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'Type' => 
                        array (
                          'description' => '链路类型。

- **ccn**：表示本地网络通过云连接网接入阿里云。

- **vbr**：表示本地网络通过边界路由器的专线接入阿里云。
',
                          'type' => 'string',
                          'example' => 'ccn',
                        ),
                        'Bandwidth' => 
                        array (
                          'description' => '链路带宽值。单位：Mbps。',
                          'type' => 'string',
                          'example' => '50 M',
                        ),
                        'RelateInstanceRegionId' => 
                        array (
                          'description' => '链路相关实例所在的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                        'RelateInstanceId' => 
                        array (
                          'description' => '链路相关实例ID。',
                          'type' => 'string',
                          'example' => 'ccn-iz26o9zye6lho****',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '商品实例ID。',
                          'type' => 'string',
                          'example' => 'sag-6z21oj0vjjrx****',
                        ),
                        'CommodityType' => 
                        array (
                          'description' => '链路带宽的商品类型：

- **bandwidth**：表示智能接入网关和带宽为拆分售卖类型。
- **smartag**：表示智能接入网关和带宽为组合售卖类型。',
                          'type' => 'string',
                          'example' => 'smartag',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'AclIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AclId' => 
                  array (
                    'description' => '智能接入网关实例绑定的访问控制实例信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '智能接入网关实例绑定的访问控制实例ID。',
                      'type' => 'string',
                      'example' => 'acl-9p14e8y1red6kv****',
                    ),
                  ),
                ),
              ),
              'ApplicationBandwidthPackageId' => 
              array (
                'description' => '智能接入网关实例绑定的应用加速带宽包ID。',
                'type' => 'string',
                'example' => 'abwp-7963l7iqnquyj3****',
              ),
              'ApplicationBandwidthPackageName' => 
              array (
                'description' => '智能接入网关实例绑定的应用加速带宽包名称。',
                'type' => 'string',
                'example' => 'testname',
              ),
              'AccelerateBandwidth' => 
              array (
                'description' => '智能接入网关实例的应用加速带宽峰值。单位：Mbps。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'ApplicationBandwidthPackageBussinessStatus' => 
              array (
                'description' => '应用加速带宽包实例的状态。

- **Abnormal**：异常。
- **Normal**：正常。',
                'type' => 'string',
                'example' => 'Normal',
              ),
              'ApplicationBandwidthPackageOperationLocks' => 
              array (
                'description' => '应用加速带宽包实例锁定信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'LockType' => 
                  array (
                    'description' => '锁定类型。取值：**FinancialLocked**。',
                    'type' => 'string',
                    'example' => 'FinancialLocked',
                  ),
                  'LockReason' => 
                  array (
                    'description' => '锁定原因。',
                    'type' => 'string',
                    'example' => 'Message',
                  ),
                ),
              ),
              'Position' => 
              array (
                'description' => '盒子所在位置。',
                'type' => 'string',
                'example' => '阿里巴巴西溪园区',
              ),
              'EnableSoftwareConnectionAudit' => 
              array (
                'description' => '是否开启智能接入网关App实例连接日志审计。取值：

- **true**：开启智能接入网关App实例连接日志审计。

- **false**：关闭智能接入网关App实例连接日志审计。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"UpBandwidth4G\\": 3,\\n  \\"Description\\": \\"testdesc\\",\\n  \\"EndTime\\": 1628265600000,\\n  \\"ResourceGroupId\\": \\"rg-acfm2iu4fnc****\\",\\n  \\"UserCount\\": 3,\\n  \\"AssociatedCcnName\\": \\"testname\\",\\n  \\"MaxBandwidth\\": \\"50 M\\",\\n  \\"VpnStatus\\": \\"down\\",\\n  \\"BoxControllerIp\\": \\"112.XX.XX.25\\",\\n  \\"UpBandwidthWan\\": 4,\\n  \\"CidrBlock\\": \\"10.0.9.0/24\\",\\n  \\"QosIds\\": {\\n    \\"QosId\\": [\\n      \\"qos-yca8p30w1jcrbt****\\"\\n    ]\\n  },\\n  \\"IRIds\\": {\\n    \\"IRId\\": [\\n      \\"ir-yca8p30w1jcrbt****\\"\\n    ]\\n  },\\n  \\"Devices\\": {\\n    \\"Device\\": [\\n      {\\n        \\"SerialNumber\\": \\"sage6gsdllbid****\\\\\\"\\",\\n        \\"HaState\\": \\"Active\\",\\n        \\"SecretKey\\": \\"+T4nV8xkS4****\\",\\n        \\"DpiSignatureDbVersion\\": \\"20201117_1_0-0.0.1\\",\\n        \\"SoftwareVersion\\": \\"2.3.0.0\\",\\n        \\"DistributeSkStatus\\": 1,\\n        \\"MonitorVersion\\": \\"0.1.11.17\\",\\n        \\"HcState\\": \\"online\\"\\n      }\\n    ]\\n  },\\n  \\"Name\\": \\"testname\\",\\n  \\"OptimizationType\\": true,\\n  \\"IpsecStatus\\": \\"up\\",\\n  \\"RoutingStrategy\\": \\"static\\",\\n  \\"AssociatedCcnId\\": \\"ccn-iz26o9zye6lhoo****\\",\\n  \\"FlowLogIds\\": {\\n    \\"FlowLogId\\": [\\n      \\"fl-0vv40lyu2un5qh****\\"\\n    ]\\n  },\\n  \\"SmartAGId\\": \\"sag-6z21oj0vjjrx6s****\\",\\n  \\"InstanceType\\": \\"sag-vcpe\\",\\n  \\"ResellerUid\\": \\"1210123456123456\\",\\n  \\"SecurityLockThreshold\\": 3600,\\n  \\"Status\\": \\"Active\\",\\n  \\"RequestId\\": \\"F02D092B-A0B7-4BA1-BCA7-014B953C5DC7\\",\\n  \\"CreateTime\\": 1622617250000,\\n  \\"DataPlan\\": 5,\\n  \\"EnableOptimization\\": false,\\n  \\"City\\": \\"cn-shanghai\\",\\n  \\"ResellerInstanceId\\": \\"sag-v0fkpk4akfz5******\\",\\n  \\"SerialNumber\\": \\"sage6gsdllbidl****,sage6nniq3d****\\",\\n  \\"BackupBoxControllerIp\\": \\"112.XX.XX.27\\",\\n  \\"TrafficMasterSn\\": \\"sage6nniq3d****\\",\\n  \\"AccessPointId\\": \\"238\\",\\n  \\"Links\\": {\\n    \\"Link\\": [\\n      {\\n        \\"HealthCheckTargetIp\\": \\"100.XX.XX.144\\",\\n        \\"EndTime\\": 1628265600000,\\n        \\"Status\\": \\"Active\\",\\n        \\"Type\\": \\"ccn\\",\\n        \\"Bandwidth\\": \\"50 M\\",\\n        \\"RelateInstanceRegionId\\": \\"cn-shanghai\\",\\n        \\"RelateInstanceId\\": \\"ccn-iz26o9zye6lho****\\",\\n        \\"InstanceId\\": \\"sag-6z21oj0vjjrx****\\",\\n        \\"CommodityType\\": \\"smartag\\"\\n      }\\n    ]\\n  },\\n  \\"AclIds\\": {\\n    \\"AclId\\": [\\n      \\"acl-9p14e8y1red6kv****\\"\\n    ]\\n  },\\n  \\"ApplicationBandwidthPackageId\\": \\"abwp-7963l7iqnquyj3****\\",\\n  \\"ApplicationBandwidthPackageName\\": \\"testname\\",\\n  \\"AccelerateBandwidth\\": 1,\\n  \\"ApplicationBandwidthPackageBussinessStatus\\": \\"Normal\\",\\n  \\"ApplicationBandwidthPackageOperationLocks\\": {\\n    \\"LockType\\": \\"FinancialLocked\\",\\n    \\"LockReason\\": \\"Message\\"\\n  },\\n  \\"Position\\": \\"阿里巴巴西溪园区\\",\\n  \\"EnableSoftwareConnectionAudit\\": true\\n}","errorExample":""},{"type":"xml","example":"<DescribeSmartAccessGatewayAttributeResponse>\\n    <UpBandwidth4G>3</UpBandwidth4G>\\n    <Description>testdesc</Description>\\n    <EndTime>1628265600000</EndTime>\\n    <ResourceGroupId>rg-acfm2iu4fnc****</ResourceGroupId>\\n    <UserCount>3</UserCount>\\n    <AssociatedCcnName>testname</AssociatedCcnName>\\n    <MaxBandwidth>50 M</MaxBandwidth>\\n    <VpnStatus>down</VpnStatus>\\n    <BoxControllerIp>112.XX.XX.25</BoxControllerIp>\\n    <UpBandwidthWan>4</UpBandwidthWan>\\n    <CidrBlock>10.0.9.0/24</CidrBlock>\\n    <QosIds>qos-yca8p30w1jcrbt****</QosIds>\\n    <IRIds>ir-yca8p30w1jcrbt****</IRIds>\\n    <Devices>\\n        <SerialNumber>sage6gsdllbid****\\"</SerialNumber>\\n        <HaState>Active</HaState>\\n        <SecretKey>+T4nV8xkS4****</SecretKey>\\n        <DpiSignatureDbVersion>20201117_1_0-0.0.1</DpiSignatureDbVersion>\\n        <SoftwareVersion>2.3.0.0</SoftwareVersion>\\n        <DistributeSkStatus>1</DistributeSkStatus>\\n        <MonitorVersion>0.1.11.17</MonitorVersion>\\n        <HcState>online</HcState>\\n    </Devices>\\n    <Name>testname</Name>\\n    <OptimizationType>false</OptimizationType>\\n    <IpsecStatus>up</IpsecStatus>\\n    <RoutingStrategy>static</RoutingStrategy>\\n    <AssociatedCcnId>ccn-iz26o9zye6lhoo****</AssociatedCcnId>\\n    <FlowLogIds>fl-0vv40lyu2un5qh****</FlowLogIds>\\n    <SmartAGId>sag-6z21oj0vjjrx6s****</SmartAGId>\\n    <InstanceType>sag-vcpe</InstanceType>\\n    <ResellerUid>1210123456123456</ResellerUid>\\n    <SecurityLockThreshold>3600</SecurityLockThreshold>\\n    <Status>Active</Status>\\n    <RequestId>F02D092B-A0B7-4BA1-BCA7-014B953C5DC7</RequestId>\\n    <CreateTime>1622617250000</CreateTime>\\n    <DataPlan>5</DataPlan>\\n    <EnableOptimization>false</EnableOptimization>\\n    <City>cn-shanghai</City>\\n    <ResellerInstanceId>sag-v0fkpk4akfz5******</ResellerInstanceId>\\n    <SerialNumber>sage6gsdllbidl****,sage6nniq3d****</SerialNumber>\\n    <BackupBoxControllerIp>112.XX.XX.27</BackupBoxControllerIp>\\n    <TrafficMasterSn>sage6nniq3d****</TrafficMasterSn>\\n    <AccessPointId>238</AccessPointId>\\n    <Links>\\n        <HealthCheckTargetIp>100.XX.XX.144</HealthCheckTargetIp>\\n        <EndTime>1628265600000</EndTime>\\n        <Status>Active</Status>\\n        <Type>ccn</Type>\\n        <Bandwidth>50 M</Bandwidth>\\n        <RelateInstanceRegionId>cn-shanghai</RelateInstanceRegionId>\\n        <RelateInstanceId>ccn-iz26o9zye6lho****</RelateInstanceId>\\n        <InstanceId>sag-6z21oj0vjjrx****</InstanceId>\\n        <CommodityType>smartag</CommodityType>\\n    </Links>\\n    <AclIds>acl-9p14e8y1red6kv****</AclIds>\\n    <ApplicationBandwidthPackageId>abwp-7963l7iqnquyj3****</ApplicationBandwidthPackageId>\\n    <ApplicationBandwidthPackageName>testname</ApplicationBandwidthPackageName>\\n    <AccelerateBandwidth>1</AccelerateBandwidth>\\n    <ApplicationBandwidthPackageBussinessStatus>Normal</ApplicationBandwidthPackageBussinessStatus>\\n    <ApplicationBandwidthPackageOperationLocks>\\n        <LockType>FinancialLocked</LockType>\\n        <LockReason>Message</LockReason>\\n    </ApplicationBandwidthPackageOperationLocks>\\n    <Position>阿里巴巴西溪园区</Position>\\n    <EnableSoftwareConnectionAudit>true</EnableSoftwareConnectionAudit>\\n</DescribeSmartAccessGatewayAttributeResponse>","errorExample":""}]',
      'title' => '查询SAG实例详情信息',
      'summary' => '调用DescribeSmartAccessGatewayAttribute接口查询指定智能接入网关实例信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetSmartAccessGatewayUseLimit' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关的所属区域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'UsedAmount' => 
              array (
                'description' => '已购买的智能接入网关数量。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '47',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2265DB11-F5CC-496E-ADE7-D043AC37926A',
              ),
              'TotalAmount' => 
              array (
                'description' => '可购买的智能接入网关总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '500',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"UsedAmount\\": 47,\\n  \\"RequestId\\": \\"2265DB11-F5CC-496E-ADE7-D043AC37926A\\",\\n  \\"TotalAmount\\": 500\\n}","errorExample":"{\\n  \\"RequestId\\": \\"2265DB11-F5CC-496E-ADE7-D043AC37926A\\",\\n  \\"TotalAmount\\": 500,\\n  \\"UsedAmount\\": 47\\n}"},{"type":"xml","example":"<GetSmartAccessGatewayUseLimitResponse>\\r\\n    <RequestId>2265DB11-F5CC-496E-ADE7-D043AC37926A</RequestId>  \\r\\n    <TotalAmount>500</TotalAmount> \\r\\n    <UsedAmount>47</UsedAmount>\\r\\n</GetSmartAccessGatewayUseLimitResponse>","errorExample":"https://smartag.cn-shanghai.aliyuncs.com/?Action=GetSmartAccessGatewayUseLimit\\n&SmartAGId=sag-0ovhf732a9j0pt0aeo\\n&Name=DocTest\\n&CommonParameters"}]',
      'title' => '查询可购买的智能接入网关数量',
      'summary' => '调用GetSmartAccessGatewayUseLimit查询可购买的智能接入网关数量。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSmartAccessGatewayVersions' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 智能接入网关实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-d3m51apgw4po5*****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => false,
            'example' => 'sage62x022502****',
          ),
        ),
        3 => 
        array (
          'name' => 'VersionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备软件类型。取值：

- **Device**：（默认值）表示智能接入网关设备运行的操作系统软件。
- **Dpi**：表示智能接入网关设备运行的应用特征库软件。',
            'type' => 'string',
            'required' => false,
            'example' => 'Device',
            'default' => 'Device',
            'enum' => 
            array (
              0 => 'Device',
              1 => 'Dpi',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '765AB188-69BF-47C6-BEDD-B9FC72BFBB0',
              ),
              'SmartAGVersions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SmartAGVersion' => 
                  array (
                    'description' => '智能接入网关设备软件版本信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '软件版本类型。取值：

- **beta**：测试版本。
- **release**：发布版本。',
                          'type' => 'string',
                          'example' => 'release',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '软件版本发布时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1522744623000',
                        ),
                        'VersionName' => 
                        array (
                          'description' => '软件版本名称。',
                          'type' => 'string',
                          'example' => 'testpackage1',
                        ),
                        'VersionCode' => 
                        array (
                          'description' => '软件版本号。',
                          'type' => 'string',
                          'example' => '1.0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VersionNotExist',
            'errorMessage' => 'The specified version does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"765AB188-69BF-47C6-BEDD-B9FC72BFBB0\\",\\n  \\"SmartAGVersions\\": {\\n    \\"SmartAGVersion\\": [\\n      {\\n        \\"Type\\": \\"release\\",\\n        \\"CreateTime\\": 1522744623000,\\n        \\"VersionName\\": \\"testpackage1\\",\\n        \\"VersionCode\\": \\"1.0\\"\\n      }\\n    ]\\n  }\\n}","errorExample":"{\\n\\"SmartAGVersions\\": {\\n\\"SmartAGVersion\\": [\\n{\\n\\"CreateTime\\": 1522744623000,\\n\\"VersionCode\\": \\"1.0\\",\\n\\"VersionName\\": \\"testpackage1\\"\\n}\\n]\\n},\\n\\"RequestId\\": \\"765AB188-69BF-47C6-BEDD-B9FC72BFBB00\\"\\n}"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DescribeSmartAccessGatewayVersionsResponse>\\n  <SmartAGVersions>\\n      <SmartAGVersion>\\n          <Type>release</Type>\\n          <CreateTime>1522744623000</CreateTime>\\n          <VersionCode>1.0</VersionCode>\\n          <VersionName>testpackage1</VersionName>\\n      </SmartAGVersion>\\n  </SmartAGVersions>\\n  <RequestId>765AB188-69BF-47C6-BEDD-B9FC72BFBB00</RequestId>\\n</DescribeSmartAccessGatewayVersionsResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<DescribeSmartAccessGatewayVersionsResponse>\\n  <SmartAGVersions>\\n      <SmartAGVersion>\\n          <CreateTime>1522744623000</CreateTime>\\n          <VersionCode>1.0</VersionCode>\\n          <VersionName>testpackage1</VersionName>\\n      </SmartAGVersion>\\n  </SmartAGVersions>\\n  <RequestId>765AB188-69BF-47C6-BEDD-B9FC72BFBB00</RequestId>\\n</DescribeSmartAccessGatewayVersionsResponse>"}]',
      'title' => '查询智能接入网关的软件版本',
      'summary' => '调用DescribeSmartAccessGatewayVersions查询智能接入网关设备的软件版本信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagTrafficTopN' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'Size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询智能接入网关实例的数量。默认值：**10**，且不支持修改。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '10',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545',
              ),
              'TrafficTopN' => 
              array (
                'description' => '智能接入网关实例流量速率信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TrafficRate' => 
                    array (
                      'description' => '智能接入网关实例流量速率。单位：bps。',
                      'type' => 'string',
                      'example' => '3866.6666666666665',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '智能接入网关实例ID。',
                      'type' => 'string',
                      'example' => 'sag-whfn****',
                    ),
                    'Name' => 
                    array (
                      'description' => '智能接入网关实例名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'RegionId' => 
                    array (
                      'description' => '智能接入网关实例地域ID。',
                      'type' => 'string',
                      'example' => 'cn-shanghai',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545\\",\\n  \\"TrafficTopN\\": [\\n    {\\n      \\"TrafficRate\\": \\"3866.6666666666665\\",\\n      \\"InstanceId\\": \\"sag-whfn****\\",\\n      \\"Name\\": \\"test\\",\\n      \\"RegionId\\": \\"cn-shanghai\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagTrafficTopNResponse>\\n<RequestId>0390E09B-8824-4B79-A27E-35BE65DA8E48</RequestId>\\n<TrafficTopN>\\n    <InstanceId>sag-moa1tjqpa7zbik****</InstanceId>\\n    <TrafficRate>3900.0</TrafficRate>\\n    <RegionId>cn-shanghai</RegionId>\\n    <Name>jitest</Name>\\n</TrafficTopN>\\n<TrafficTopN>\\n    <InstanceId>sag-7zyvg7fpk16p15****</InstanceId>\\n    <TrafficRate>1243.2</TrafficRate>\\n    <RegionId>cn-shanghai</RegionId>\\n    <Name>chutest</Name>\\n</TrafficTopN>\\n</DescribeSagTrafficTopNResponse>","errorExample":""}]',
      'title' => '查询指定流量速率的智能接入网关实例',
      'summary' => '查询指定地域流量速率为前10名的智能接入网关实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagDropTopN' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'Size',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询智能接入网关实例的数量。默认值：**10**，且不支持修改。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '10',
            'minimum' => '10',
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545',
              ),
              'DropTopN' => 
              array (
                'description' => '智能接入网关实例丢包信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DropRate' => 
                    array (
                      'description' => '智能接入网关实例丢包率。单位：pps。',
                      'type' => 'string',
                      'example' => '0.0',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '智能接入网关实例ID。',
                      'type' => 'string',
                      'example' => 'sag-whfn****',
                    ),
                    'Name' => 
                    array (
                      'description' => '智能接入网关实例名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'RegionId' => 
                    array (
                      'description' => '智能接入网关实例地域ID。',
                      'type' => 'string',
                      'example' => 'cn-shanghai',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545\\",\\n  \\"DropTopN\\": [\\n    {\\n      \\"DropRate\\": \\"0.0\\",\\n      \\"InstanceId\\": \\"sag-whfn****\\",\\n      \\"Name\\": \\"test\\",\\n      \\"RegionId\\": \\"cn-shanghai\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagDropTopNResponse>\\n<RequestId>58853663-5DFE-47A1-A69F-F0290BBFBC0A</RequestId>\\n<DropTopN>\\n    <InstanceId>sag-p6ctq4o5bey3e9****</InstanceId>\\n    <RegionId>cn-shanghai</RegionId>\\n    <DropRate>0.0</DropRate>\\n    <Name>ccntest</Name>\\n</DropTopN>\\n<DropTopN>\\n    <InstanceId>sag-on7qvl3pv52l33****</InstanceId>\\n    <RegionId>cn-shanghai</RegionId>\\n    <DropRate>0.0</DropRate>\\n    <Name>Tutest</Name>\\n</DropTopN>\\n<DropTopN>\\n    <InstanceId>sag-7zyvg7fpk16p15****</InstanceId>\\n    <RegionId>cn-shanghai</RegionId>\\n    <DropRate>0.0</DropRate>\\n    <Name>chtest</Name>\\n</DropTopN>\\n</DescribeSagDropTopNResponse>","errorExample":""}]',
      'title' => '查询指定地域丢包率前10名的实例',
      'summary' => '查询指定地域丢包率前10名的智能接入网关实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSAGDeviceInfo' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-7f3d9b6jwnuqn6****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'ServiceIP' => 
              array (
                'description' => '智能接入网关设备的业务IP地址。',
                'type' => 'string',
                'example' => '42.XX.XX.151',
              ),
              'ControllerState' => 
              array (
                'description' => '智能接入网关设备的管控状态：

- **Normal**：正常。
- **Abnormal**：异常。',
                'type' => 'string',
                'example' => 'Normal',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B6A991F4-F533-1627-8144-B64E01C5EE85',
              ),
              'SynStatus' => 
              array (
                'description' => '智能接入网关设备本地和云上的同步状态：

- **Synchronized**：同步完成。
- **Unsynchronized**：未同步。
- **Synchronizing**：正在同步。',
                'type' => 'string',
                'example' => 'Unsynchronized',
              ),
              'SmartAGType' => 
              array (
                'description' => '智能接入网关设备类型：

- **sag-100wm**。
- **sag-1000**。',
                'type' => 'string',
                'example' => 'sag-100wm',
              ),
              'Version' => 
              array (
                'description' => '智能接入网关设备运行的软件版本号。',
                'type' => 'string',
                'example' => '2.3.1.1',
              ),
              'VpnState' => 
              array (
                'description' => '智能接入网关设备的VPN连接状态：

- **Normal**：正常。
- **Abnormal**：异常。',
                'type' => 'string',
                'example' => 'Abnormal',
              ),
              'StartupTime' => 
              array (
                'description' => '智能接入网关设备的启动时间。',
                'type' => 'string',
                'example' => '2021-06-15 17:33:43',
              ),
              'LastConnectedControllerTime' => 
              array (
                'description' => '智能接入网关设备最近一次连接管控的时间。',
                'type' => 'string',
                'example' => '2021-07-14 00:27:48',
              ),
              'ResettableStatus' => 
              array (
                'description' => '智能接入网关设备的重置键是否启用。

- **Enabled**：已启用。
- **Disabled**：未启用。',
                'type' => 'string',
                'example' => 'Enabled',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
          4 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          5 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          6 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"ServiceIP\\": \\"42.XX.XX.151\\",\\n  \\"ControllerState\\": \\"Normal\\",\\n  \\"RequestId\\": \\"B6A991F4-F533-1627-8144-B64E01C5EE85\\",\\n  \\"SynStatus\\": \\"Unsynchronized\\",\\n  \\"SmartAGType\\": \\"sag-100wm\\",\\n  \\"Version\\": \\"2.3.1.1\\",\\n  \\"VpnState\\": \\"Abnormal\\",\\n  \\"StartupTime\\": \\"2021-06-15 17:33:43\\",\\n  \\"LastConnectedControllerTime\\": \\"2021-07-14 00:27:48\\",\\n  \\"ResettableStatus\\": \\"Enabled\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeSAGDeviceInfoResponse>\\n    <ControllerState>Normal</ControllerState>\\n    <RequestId>B6A991F4-F533-1627-8144-B64E01C5EE85</RequestId>\\n    <SynStatus>Unsynchronized</SynStatus>\\n    <SmartAGType>sag-100wm</SmartAGType>\\n    <Version>2.3.1.1</Version>\\n    <VpnState>Abnormal</VpnState>\\n    <StartupTime>2021-06-15 17:33:43</StartupTime>\\n    <ResettableStatus>Enabled</ResettableStatus>\\n</DescribeSAGDeviceInfoResponse>","errorExample":""}]',
      'title' => '获取设备概况',
      'summary' => '调用DescribeSAGDeviceInfo接口查询智能接入网关设备信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListSmartAGApiUnsupportedFeature' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备所属的智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-4d6i45zess8nj4****',
          ),
        ),
        2 => 
        array (
          'name' => 'SerialNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sage62x052614****',
          ),
        ),
        3 => 
        array (
          'name' => 'OpenApiName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '功能特性相关的OpenAPI名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ModifySagWan',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7459545D-2F0D-43E6-9957-CB7E0223332B',
              ),
              'Features' => 
              array (
                'description' => '不支持的功能特性列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Feature' => 
                    array (
                      'description' => '不支持的功能特性。

关于每个功能特性的描述信息，请您查看对应的OpenAPI文档。',
                      'type' => 'string',
                      'example' => 'ISP',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidSmartAGId.NotFound',
            'errorMessage' => 'The specified SmartAGId does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'Sag.DeviceNotExist',
            'errorMessage' => 'The specified device does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7459545D-2F0D-43E6-9957-CB7E0223332B\\",\\n  \\"Features\\": [\\n    {\\n      \\"Feature\\": \\"ISP\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListSmartAGApiUnsupportedFeatureResponse>\\n    <RequestId>7459545D-2F0D-43E6-9957-CB7E0223332B</RequestId>\\n    <Features>\\n        <Feature>ISP</Feature>\\n    </Features>\\n</ListSmartAGApiUnsupportedFeatureResponse>","errorExample":""}]',
      'title' => '查询SAG下盒子不支持的功能列表',
      'summary' => '查询指定智能接入网关设备不支持的功能特性。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGrantSagRules' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-hdg*************',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时的页码。

默认值是**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页展示的授权条目数。

默认值为**10**，最大值为**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '授权条目总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页展示的授权条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6E1674AC-083C-4031-B047-7A66E418E0C6',
              ),
              'PageNumber' => 
              array (
                'description' => '分页查询时的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'GrantRules' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'GrantRule' => 
                  array (
                    'description' => '授权信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreateTime' => 
                        array (
                          'description' => '创建授权的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '156576751700',
                        ),
                        'SmartAGId' => 
                        array (
                          'description' => '智能接入网关实例ID。',
                          'type' => 'string',
                          'example' => 'sag-hdhgn*****',
                        ),
                        'GrantTrafficService' => 
                        array (
                          'description' => '是否给跨账号的云连接网实例授权了智能接入网关实例的流量服务能力。

- **true**：已授权。
- **false**：未授权。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '智能接入网关实例所属的账号ID。',
                          'type' => 'string',
                          'example' => '123455',
                        ),
                        'CcnUid' => 
                        array (
                          'description' => '云连接网实例所属的账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123456',
                        ),
                        'CcnInstanceId' => 
                        array (
                          'description' => '云连接网实例ID。',
                          'type' => 'string',
                          'example' => 'ccn-hd**********',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 2,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"6E1674AC-083C-4031-B047-7A66E418E0C6\\",\\n  \\"PageNumber\\": 2,\\n  \\"GrantRules\\": {\\n    \\"GrantRule\\": [\\n      {\\n        \\"CreateTime\\": 156576751700,\\n        \\"SmartAGId\\": \\"sag-hdhgn*****\\",\\n        \\"GrantTrafficService\\": false,\\n        \\"InstanceId\\": \\"123455\\",\\n        \\"CcnUid\\": 123456,\\n        \\"CcnInstanceId\\": \\"ccn-hd**********\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeGrantSagRulesResponse>\\n<TotalCount>1</TotalCount>\\n<RequestId>72CD8E55-CAC3-416B-9E18-5FF60D991713</RequestId>\\n<PageSize>10</PageSize>\\n<PageNumber>1</PageNumber>\\n<GrantRules>\\n    <GrantRule>\\n        <InstanceId>16884015959****</InstanceId>\\n        <GrantTrafficService>false</GrantTrafficService>\\n        <CcnInstanceId>ccn-al2yjgtmsls4cu****</CcnInstanceId>\\n        <CreateTime>1609382634000</CreateTime>\\n        <CcnUid>13439858877****</CcnUid>\\n        <SmartAGId>sag-0ep6gx9wjvly4m****</SmartAGId>\\n    </GrantRule>\\n</GrantRules>\\n</DescribeGrantSagRulesResponse>","errorExample":""}]',
      'title' => '查询智能接入网关授权规则',
      'summary' => '查询指定智能接入网关实例的授权信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSmartAccessGateways' => 
    array (
      'summary' => '查询已创建的智能接入网关。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域的ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'AssociatedCcnId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例绑定的云连接网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ccn-bxuau4ezctt****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'sag-6z21oj0vjjrx6s****',
          ),
        ),
        3 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的状态。取值： 

- **Ordered**：已下单。

- **Delivered**：已发货。
  
- **Received**：已收货。

- **Returning**：退货中。

- **Active**：活跃。

- **Init**：初始化。

- **Offline**：离线。
',
            'type' => 'string',
            'required' => false,
            'example' => 'Active',
          ),
        ),
        4 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的名称。

名称长度为2~128个字符，以大小写字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的条目数。默认值：**10**。取值范围：**1**~**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'SerialNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备的序列号。',
            'type' => 'string',
            'required' => false,
            'example' => 'sag32a3****',
          ),
        ),
        8 => 
        array (
          'name' => 'AclIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例绑定的访问控制实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'acl-xhwhyuo43l0n****',
          ),
        ),
        9 => 
        array (
          'name' => 'UnboundAclIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例ID。

本参数表示查询未绑定该访问控制实例ID的智能接入网关实例信息。多个访问控制实例ID以半角逗号（,）隔开。',
            'type' => 'string',
            'required' => false,
            'example' => 'acl-sjfbgngj****',
          ),
        ),
        10 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例类型。取值：

- **software**：智能接入网关App版实例。
- **hardware**：智能接入网关硬件版实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'hardware',
            'enum' => 
            array (
              0 => 'software',
              1 => 'hardware',
            ),
          ),
        ),
        11 => 
        array (
          'name' => 'CanAssociateQos',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '可否关联QoS策略实例。取值：

- **true**：可以。
- **false**：不可以。

本参数表示查询可否关联QoS策略实例的智能接入网关实例的信息。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        12 => 
        array (
          'name' => 'HardwareType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备硬件规格。取值：

- **sag-1000**。
- **sag-100wm**。',
            'type' => 'string',
            'required' => false,
            'example' => 'sag-100wm',
          ),
        ),
        13 => 
        array (
          'name' => 'SoftwareVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备运行的软件版本。',
            'type' => 'string',
            'required' => false,
            'example' => '2.3.0.0',
          ),
        ),
        14 => 
        array (
          'name' => 'VersionComparator',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '版本过滤符。取值：

- **greater**：大于当前版本。
- **less**：小于当前版本。
- **equals**：等于当前版本。
',
            'type' => 'string',
            'required' => false,
            'example' => 'equals',
          ),
        ),
        15 => 
        array (
          'name' => 'BusinessState',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的业务状态。取值：

- **Normal**：正常。
- **Arrearage**：欠费锁定。',
            'type' => 'string',
            'required' => false,
            'example' => 'Normal',
          ),
        ),
        16 => 
        array (
          'name' => 'ResourceGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的资源组ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'rg-acfm2iu4fnc****',
          ),
        ),
        17 => 
        array (
          'name' => 'SmartAGIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '智能接入网关实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'sag-6z21oj0vjjrx6s****',
            ),
            'required' => false,
            'maxItems' => 50,
          ),
        ),
        18 => 
        array (
          'name' => 'AssociatedCcnName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的云连接网实例的名称。

名称长度为2~100个字符，以大小写字母或中文开头，可包含数字、下划线（_）、半角句号（.）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'ccn',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'ADE68CEE-8E4F-4D0B-9EE9-2C2FFAABF41F',
              ),
              'PageNumber' => 
              array (
                'description' => '列表的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'SmartAccessGateways' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SmartAccessGateway' => 
                  array (
                    'description' => '智能接入网关实例信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '智能接入网关实例的信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SerialNumber' => 
                        array (
                          'description' => '智能接入网关设备的序列号。',
                          'type' => 'string',
                          'example' => 'sage6gsdllbid****,sage6nniq3dqa****',
                        ),
                        'Status' => 
                        array (
                          'description' => '智能接入网关实例的状态。

- **Ordered**：已下单。

- **Delivered**：已发货。
  
- **Received**：已收货。

- **Returning**：退货中。

- **Active**：活跃。

- **Init**：初始化。

- **Offline**：离线。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'UpBandwidth4G' => 
                        array (
                          'description' => '智能接入网关设备4G公网最大上行带宽。单位：Mbps。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'BackupStatus' => 
                        array (
                          'description' => '智能接入网关的备份状态。
取值：

- **closed**：未开启。

- **opened**：已开启。

- **opening**：开启中。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'IdaasApplicationId' => 
                        array (
                          'description' => '智能接入网关实例关联的IDaaS应用ID。',
                          'type' => 'string',
                          'example' => 'idaas-cn-hangzhou-l7j0wf0crzea****',
                        ),
                        'SoftwareVersion' => 
                        array (
                          'description' => '智能接入网关主设备运行的软件版本。',
                          'type' => 'string',
                          'example' => '2.3.0.0',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '智能接入网关实例的创建时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建智能接入网关实例时的总时长。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1622617250000',
                        ),
                        'SmartAGId' => 
                        array (
                          'description' => '智能接入网关实例ID。',
                          'type' => 'string',
                          'example' => 'sag-6z21oj0vjjrx6s****',
                        ),
                        'UpBandwidthWan' => 
                        array (
                          'description' => '智能接入网关设备WAN口最大上行带宽。单位：Mbps。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'City' => 
                        array (
                          'description' => '智能接入网关设备所在城市ID。',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                        'AclIds' => 
                        array (
                          'description' => '智能接入网关实例绑定的访问控制实例ID。',
                          'type' => 'string',
                          'example' => 'acl-shfhfhhfbnvkdg****',
                        ),
                        'QosIds' => 
                        array (
                          'description' => '智能接入网关实例绑定的QoS策略实例ID。',
                          'type' => 'string',
                          'example' => 'qos-djh****',
                        ),
                        'IRIds' => 
                        array (
                          'description' => '智能接入网关实例关联的智能选路ID列表',
                          'type' => 'string',
                          'example' => 'ir-7unf5nom01ygrg****',
                        ),
                        'CidrBlock' => 
                        array (
                          'description' => '本地网络或客户端要与云上通信的私网网段。',
                          'type' => 'string',
                          'example' => '10.0.9.0/24',
                        ),
                        'Description' => 
                        array (
                          'description' => '智能接入网关实例的描述信息。',
                          'type' => 'string',
                          'example' => 'docdesc',
                        ),
                        'IpsecStatus' => 
                        array (
                          'description' => 'ipsecVPN连接状态。

- **up**：ipsecVPN连接正常。
- **down**：ipsecVPN连接异常。',
                          'type' => 'string',
                          'example' => 'up',
                        ),
                        'EnterpriseCode' => 
                        array (
                          'description' => '智能接入网关实例绑定的企业码ID。',
                          'type' => 'string',
                          'example' => '12P****',
                        ),
                        'DpiStatus' => 
                        array (
                          'description' => '智能接入网关实例DPI功能开启状态。

- **On**：已开启。
- **Off**：未开启。',
                          'type' => 'string',
                          'example' => 'Off',
                        ),
                        'AssociatedCcnId' => 
                        array (
                          'description' => '智能接入网关实例绑定的云连接网实例ID。',
                          'type' => 'string',
                          'example' => 'ccn-iz26o9zye6lhoo****',
                        ),
                        'Name' => 
                        array (
                          'description' => '智能接入网关实例的名称。',
                          'type' => 'string',
                          'example' => 'testname',
                        ),
                        'HardwareVersion' => 
                        array (
                          'description' => '智能接入网关实例类型。

- **sag-1000**：标识当前实例为智能接入网关硬件版实例，且实例绑定的设备类型为SAG-1000。
- **sag-100wm**：标识当前实例为智能接入网关硬件版实例，且实例绑定的设备类型为SAG-100WM。
- **sag-software**：标识当前实例为智能接入网关APP实例。
- **sag-vcpe**：标识当前实例为智能接入网关vCPE实例。',
                          'type' => 'string',
                          'example' => 'sag-100wm',
                        ),
                        'IdaasId' => 
                        array (
                          'description' => '智能接入网关实例绑定的IDaaS实例ID。',
                          'type' => 'string',
                          'example' => 'idaas-cn-hangzhou-1ahixtl****',
                        ),
                        'DataPlan' => 
                        array (
                          'description' => '智能接入网关实例的流量套餐。单位：GB。

> 目前仅支持每个账号每个月赠送5 GB流量。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '5',
                        ),
                        'AssociatedCcnName' => 
                        array (
                          'description' => '智能接入网关实例绑定的云连接网实例名称。',
                          'type' => 'string',
                          'example' => 'ccn',
                        ),
                        'ResellerUid' => 
                        array (
                          'description' => '经销商的阿里云账号ID。',
                          'type' => 'string',
                          'example' => '25346073170691****',
                        ),
                        'DpiMonitorStatus' => 
                        array (
                          'description' => '智能接入网关实例DPI监控功能开启状态。

- **Active**：已开启。
- **Inactive**：未开启。',
                          'type' => 'string',
                          'example' => 'Inactive',
                        ),
                        'MaxBandwidth' => 
                        array (
                          'description' => '智能接入网关实例的带宽峰值。单位：Mbps。',
                          'type' => 'string',
                          'example' => '50M',
                        ),
                        'SmartAGUid' => 
                        array (
                          'description' => '智能接入网关实例的所属的账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1210123456123456',
                        ),
                        'BackupSoftwareVersion' => 
                        array (
                          'description' => '智能接入网关备设备运行的软件版本。',
                          'type' => 'string',
                          'example' => '2.3.0.0',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '智能接入网关实例的到期时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至智能接入网关实例到期时的总时长。

',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1628265600000',
                        ),
                        'ResellerInstanceId' => 
                        array (
                          'description' => '经销商智能接入网关实例ID。',
                          'type' => 'string',
                          'example' => 'sag-v0fkpk4akfz5****',
                        ),
                        'VpnStatus' => 
                        array (
                          'description' => 'aliVPN连接状态。

- **up**：aliVPN连接正常。
- **down**：aliVPN连接异常。',
                          'type' => 'string',
                          'example' => 'down',
                        ),
                        'RoutingStrategy' => 
                        array (
                          'description' => '智能接入网关实例的线下路由同步方式。

- **static**：静态路由。
- **dynamic**：动态路由。',
                          'type' => 'string',
                          'example' => 'static',
                        ),
                        'SecurityLockThreshold' => 
                        array (
                          'description' => '智能接入网关设备离线锁定的时间阈值。

单位：秒。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3600',
                        ),
                        'Links' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Link' => 
                            array (
                              'description' => '本地网络接入阿里云的链路信息列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Type' => 
                                  array (
                                    'description' => '链路类型。

- **ccn**：表示本地网络通过云连接网接入阿里云。
- **vbr**：表示本地网络通过边界路由器及物理专线接入阿里云。',
                                    'type' => 'string',
                                    'example' => 'ccn',
                                  ),
                                  'Status' => 
                                  array (
                                    'description' => '链路状态。

宽带链路状态：

- **Ordered**：待发货。
- **Delivered**：已发货。
- **Offline**：离线。
- **Active**：可用。
- **Arrearage**：欠费锁定。

物理专线链路状态：

- **normal**：正常。
- **arrears**：欠费。',
                                    'type' => 'string',
                                    'example' => 'Active',
                                  ),
                                  'EndTime' => 
                                  array (
                                    'description' => '链路到期时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至链路到期时的总时长。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1628265600000',
                                  ),
                                  'Bandwidth' => 
                                  array (
                                    'description' => '链路带宽值。单位：Mbps。',
                                    'type' => 'string',
                                    'example' => '50M',
                                  ),
                                  'RelateInstanceRegionId' => 
                                  array (
                                    'description' => '链路相关实例所在的地域ID。',
                                    'type' => 'string',
                                    'example' => 'cn-shanghai',
                                  ),
                                  'RelateInstanceId' => 
                                  array (
                                    'description' => '链路相关实例ID。',
                                    'type' => 'string',
                                    'example' => 'ccn-iz26o9zye6lhoo****',
                                  ),
                                  'InstanceId' => 
                                  array (
                                    'description' => '商品实例ID。',
                                    'type' => 'string',
                                    'example' => 'sag-6z21oj0vjjrx6s****',
                                  ),
                                  'CommodityType' => 
                                  array (
                                    'description' => '链路带宽的商品类型。

- **bandwidth**：表示智能接入网关和带宽为拆分售卖类型。
- **smartag**：表示智能接入网关和带宽为组合售卖类型。',
                                    'type' => 'string',
                                    'example' => 'smartag',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '智能接入网关实例所属资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-acfm2iu4fnc****',
                        ),
                        'UserCount' => 
                        array (
                          'description' => '智能接入网关实例客户端账号数量。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'AccessPointId' => 
                        array (
                          'description' => '智能接入网关实例接入点ID。',
                          'type' => 'string',
                          'example' => '238',
                        ),
                        'ApplicationBandwidthPackageId' => 
                        array (
                          'description' => '智能接入网关实例绑定的应用加速带宽包ID。',
                          'type' => 'string',
                          'example' => 'abwp-7963l7iqnquyj3****',
                        ),
                        'AccelerateBandwidth' => 
                        array (
                          'description' => '智能接入网关实例的应用加速带宽峰值。单位：Mbps。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'EnableSoftwareConnectionAudit' => 
                        array (
                          'description' => '是否已开启SAG App连接日志审计。取值：

- **true**：已开启SAG App连接日志审计。

- **false**：未开启SAG App连接日志审计。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Position' => 
                        array (
                          'description' => '智能接入网关实例位置信息。',
                          'type' => 'string',
                          'example' => '[{\\"adcode\\":\\"\\",\\"label\\":\\"山东省青岛市即墨区\\",\\"value\\":\\"B02140800T\\",\\"center\\":\\"120.989576,36.487512\\",\\"_new\\":\\"true\\"}]',
                        ),
                        'Isp' => 
                        array (
                          'description' => '智能接入网关实例使用的运营商名字。',
                          'type' => 'string',
                          'example' => '电信',
                        ),
                        'EnableAdvancedMonitor' => 
                        array (
                          'description' => '智能接入网关实例是否已开启深度监控。取值：

- **true**：已开启。
- **false**：未开启。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Param.InvalidVersionComparator',
            'errorMessage' => 'The specified version comparison operator is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRegionID',
            'errorMessage' => 'The specified regionId does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"ADE68CEE-8E4F-4D0B-9EE9-2C2FFAABF41F\\",\\n  \\"PageNumber\\": 1,\\n  \\"SmartAccessGateways\\": {\\n    \\"SmartAccessGateway\\": [\\n      {\\n        \\"SerialNumber\\": \\"sage6gsdllbid****,sage6nniq3dqa****\\",\\n        \\"Status\\": \\"Active\\",\\n        \\"UpBandwidth4G\\": 3,\\n        \\"BackupStatus\\": \\"Active\\",\\n        \\"IdaasApplicationId\\": \\"idaas-cn-hangzhou-l7j0wf0crzea****\\",\\n        \\"SoftwareVersion\\": \\"2.3.0.0\\",\\n        \\"CreateTime\\": 1622617250000,\\n        \\"SmartAGId\\": \\"sag-6z21oj0vjjrx6s****\\",\\n        \\"UpBandwidthWan\\": 2,\\n        \\"City\\": \\"cn-shanghai\\",\\n        \\"AclIds\\": \\"acl-shfhfhhfbnvkdg****\\",\\n        \\"QosIds\\": \\"qos-djh****\\",\\n        \\"IRIds\\": \\"ir-7unf5nom01ygrg****\\",\\n        \\"CidrBlock\\": \\"10.0.9.0/24\\",\\n        \\"Description\\": \\"docdesc\\",\\n        \\"IpsecStatus\\": \\"up\\",\\n        \\"EnterpriseCode\\": \\"12P****\\",\\n        \\"DpiStatus\\": \\"Off\\",\\n        \\"AssociatedCcnId\\": \\"ccn-iz26o9zye6lhoo****\\",\\n        \\"Name\\": \\"testname\\",\\n        \\"HardwareVersion\\": \\"sag-100wm\\",\\n        \\"IdaasId\\": \\"idaas-cn-hangzhou-1ahixtl****\\",\\n        \\"DataPlan\\": 5,\\n        \\"AssociatedCcnName\\": \\"ccn\\",\\n        \\"ResellerUid\\": \\"25346073170691****\\",\\n        \\"DpiMonitorStatus\\": \\"Inactive\\",\\n        \\"MaxBandwidth\\": \\"50M\\",\\n        \\"SmartAGUid\\": 1210123456123456,\\n        \\"BackupSoftwareVersion\\": \\"2.3.0.0\\",\\n        \\"EndTime\\": 1628265600000,\\n        \\"ResellerInstanceId\\": \\"sag-v0fkpk4akfz5****\\",\\n        \\"VpnStatus\\": \\"down\\",\\n        \\"RoutingStrategy\\": \\"static\\",\\n        \\"SecurityLockThreshold\\": 3600,\\n        \\"Links\\": {\\n          \\"Link\\": [\\n            {\\n              \\"Type\\": \\"ccn\\",\\n              \\"Status\\": \\"Active\\",\\n              \\"EndTime\\": 1628265600000,\\n              \\"Bandwidth\\": \\"50M\\",\\n              \\"RelateInstanceRegionId\\": \\"cn-shanghai\\",\\n              \\"RelateInstanceId\\": \\"ccn-iz26o9zye6lhoo****\\",\\n              \\"InstanceId\\": \\"sag-6z21oj0vjjrx6s****\\",\\n              \\"CommodityType\\": \\"smartag\\"\\n            }\\n          ]\\n        },\\n        \\"ResourceGroupId\\": \\"rg-acfm2iu4fnc****\\",\\n        \\"UserCount\\": 3,\\n        \\"AccessPointId\\": \\"238\\",\\n        \\"ApplicationBandwidthPackageId\\": \\"abwp-7963l7iqnquyj3****\\",\\n        \\"AccelerateBandwidth\\": 1,\\n        \\"EnableSoftwareConnectionAudit\\": true,\\n        \\"Position\\": \\"[{\\\\\\\\\\\\\\"adcode\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"label\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"山东省青岛市即墨区\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"B02140800T\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"120.989576,36.487512\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"_new\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\"}]\\",\\n        \\"Isp\\": \\"电信\\",\\n        \\"EnableAdvancedMonitor\\": true\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSmartAccessGatewaysResponse>\\n    <TotalCount>1</TotalCount>\\n    <PageSize>10</PageSize>\\n    <RequestId>ADE68CEE-8E4F-4D0B-9EE9-2C2FFAABF41F</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <SmartAccessGateways>\\n        <SerialNumber>sage6gsdllbid****,sage6nniq3dqa****</SerialNumber>\\n        <Status>Active</Status>\\n        <UpBandwidth4G>3</UpBandwidth4G>\\n        <BackupStatus>Active</BackupStatus>\\n        <IdaasApplicationId>idaas-cn-hangzhou-l7j0wf0crzea****</IdaasApplicationId>\\n        <SoftwareVersion>2.3.0.0</SoftwareVersion>\\n        <CreateTime>1622617250000</CreateTime>\\n        <SmartAGId>sag-6z21oj0vjjrx6s****</SmartAGId>\\n        <UpBandwidthWan>2</UpBandwidthWan>\\n        <City>cn-shanghai</City>\\n        <AclIds>acl-shfhfhhfbnvkdg****</AclIds>\\n        <QosIds>qos-djh****</QosIds>\\n        <IRIds>ir-7unf5nom01ygrg****</IRIds>\\n        <CidrBlock>10.0.9.0/24</CidrBlock>\\n        <Description>docdesc</Description>\\n        <IpsecStatus>up</IpsecStatus>\\n        <EnterpriseCode>12P****</EnterpriseCode>\\n        <DpiStatus>Off</DpiStatus>\\n        <AssociatedCcnId>ccn-iz26o9zye6lhoo****</AssociatedCcnId>\\n        <Name>testname</Name>\\n        <HardwareVersion>sag-100wm</HardwareVersion>\\n        <IdaasId>idaas-cn-hangzhou-1ahixtl****</IdaasId>\\n        <DataPlan>5</DataPlan>\\n        <AssociatedCcnName>ccn</AssociatedCcnName>\\n        <ResellerUid>25346073170691****</ResellerUid>\\n        <DpiMonitorStatus>Inactive</DpiMonitorStatus>\\n        <MaxBandwidth>50M</MaxBandwidth>\\n        <SmartAGUid>1210123456123456</SmartAGUid>\\n        <BackupSoftwareVersion>2.3.0.0</BackupSoftwareVersion>\\n        <EndTime>1628265600000</EndTime>\\n        <ResellerInstanceId>sag-v0fkpk4akfz5****</ResellerInstanceId>\\n        <VpnStatus>down</VpnStatus>\\n        <RoutingStrategy>static</RoutingStrategy>\\n        <SecurityLockThreshold>3600</SecurityLockThreshold>\\n        <Links>\\n            <Type>ccn</Type>\\n            <Status>Active</Status>\\n            <EndTime>1628265600000</EndTime>\\n            <Bandwidth>50M</Bandwidth>\\n            <RelateInstanceRegionId>cn-shanghai</RelateInstanceRegionId>\\n            <RelateInstanceId>ccn-iz26o9zye6lhoo****</RelateInstanceId>\\n            <InstanceId>sag-6z21oj0vjjrx6s****</InstanceId>\\n            <CommodityType>smartag</CommodityType>\\n        </Links>\\n        <ResourceGroupId>rg-acfm2iu4fnc****</ResourceGroupId>\\n        <UserCount>3</UserCount>\\n        <AccessPointId>238</AccessPointId>\\n        <ApplicationBandwidthPackageId>abwp-7963l7iqnquyj3****</ApplicationBandwidthPackageId>\\n        <AccelerateBandwidth>1</AccelerateBandwidth>\\n        <EnableSoftwareConnectionAudit>true</EnableSoftwareConnectionAudit>\\n        <Position>[{\\\\\\"adcode\\\\\\":\\\\\\"\\\\\\",\\\\\\"label\\\\\\":\\\\\\"山东省青岛市即墨区\\\\\\",\\\\\\"value\\\\\\":\\\\\\"B02140800T\\\\\\",\\\\\\"center\\\\\\":\\\\\\"120.989576,36.487512\\\\\\",\\\\\\"_new\\\\\\":\\\\\\"true\\\\\\"}]</Position>\\n        <Isp>电信</Isp>\\n        <EnableAdvancedMonitor>true</EnableAdvancedMonitor>\\n    </SmartAccessGateways>\\n</DescribeSmartAccessGatewaysResponse>","errorExample":""}]',
      'title' => '查询已创建的智能接入网关实例',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeDeviceAutoUpgradePolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-kxe2cv7hot7qrv****',
          ),
        ),
        2 => 
        array (
          'name' => 'SerialNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sage62x022502****',
          ),
        ),
        3 => 
        array (
          'name' => 'VersionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查看的软件类型：

- **Device**：表示智能接入网关设备运行的操作系统软件。
- **Dpi**：表示智能接入网关设备运行的应用特征库软件。',
            'type' => 'string',
            'required' => false,
            'example' => 'Device',
            'default' => 'Device',
            'enum' => 
            array (
              0 => 'Device',
              1 => 'Dpi',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'UpgradeType' => 
              array (
                'description' => '升级类型。

- **scheduled**：定时升级。
- **boot**：开机自动升级。
- **manual**：手动升级。',
                'type' => 'string',
                'example' => 'scheduled',
              ),
              'TimeZone' => 
              array (
                'description' => '时区。',
                'type' => 'string',
                'example' => 'Asia/Shanghai',
              ),
              'SerialNumber' => 
              array (
                'description' => '智能接入网关设备序列号。',
                'type' => 'string',
                'example' => 'sage62x022502****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0E20FBB8-BCFC-4F5E-BD94-77FF6A2133D0',
              ),
              'Jitter' => 
              array (
                'description' => '升级时间的上下偏差。单位：分钟。',
                'type' => 'string',
                'example' => '5',
              ),
              'Duration' => 
              array (
                'description' => '升级时间段。

取值范围：**30~120**。

单位：分钟。',
                'type' => 'string',
                'example' => '60',
              ),
              'CronExpression' => 
              array (
                'description' => '升级开始时间。升级开始时间使用cron表达式。

例如：`0 0 4 1/1 * ?`表示从每月第一天上午4时开始，每天执行升级操作。',
                'type' => 'string',
                'example' => '0 0 4 1/1 * ?',
              ),
              'SmartAGId' => 
              array (
                'description' => '智能接入网关实例ID。',
                'type' => 'string',
                'example' => 'sag-kxe2cv7hot7qrv****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"UpgradeType\\": \\"scheduled\\",\\n  \\"TimeZone\\": \\"Asia/Shanghai\\",\\n  \\"SerialNumber\\": \\"sage62x022502****\\",\\n  \\"RequestId\\": \\"0E20FBB8-BCFC-4F5E-BD94-77FF6A2133D0\\",\\n  \\"Jitter\\": \\"5\\",\\n  \\"Duration\\": \\"60\\",\\n  \\"CronExpression\\": \\"0 0 4 1/1 * ?\\",\\n  \\"SmartAGId\\": \\"sag-kxe2cv7hot7qrv****\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeDeviceAutoUpgradePolicyResponse>\\n<SerialNumber>sage62x022502****</SerialNumber>\\n<SmartAGId>sag-kxe2cv7hot7qrv****</SmartAGId>\\n<UpgradeType>scheduled</UpgradeType>\\n<Duration>60</Duration>\\n<RequestId>0E20FBB8-BCFC-4F5E-BD94-77FF6A2133D0</RequestId>\\n<CronExpression>0 0 4 1/1 * ?</CronExpression>\\n<TimeZone>Asia/Shanghai</TimeZone>\\n</DescribeDeviceAutoUpgradePolicyResponse>","errorExample":""}]',
      'title' => '查看智能接入网关设备自动升级策略',
      'summary' => '调用DescribeDeviceAutoUpgradePolicy查看智能接入网关设备运行软件的升级策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGrantSagVbrRules' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所在地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'sag-0nnteglltw6z4b****',
          ),
        ),
        2 => 
        array (
          'name' => 'VbrInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边界路由器实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'vbr-bp13gtbhdp0pfqg6s****',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时的页码。默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '授权规则总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '46E98E69-FBA2-423E-9E5A-A3C6D843FED1',
              ),
              'PageNumber' => 
              array (
                'description' => '分页查询时的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'GrantRules' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'GrantRule' => 
                  array (
                    'description' => '授权规则详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VbrInstanceId' => 
                        array (
                          'description' => '边界路由器实例ID。',
                          'type' => 'string',
                          'example' => 'vbr-bp13gtbhdp0pfqg6s****',
                        ),
                        'VbrUid' => 
                        array (
                          'description' => '边界路由器实例所属实例UID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1231571212121212',
                        ),
                        'VbrRegionId' => 
                        array (
                          'description' => '边界路由器实例所属地域ID。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '授权规则创建时间。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1600743723000',
                        ),
                        'SmartAGId' => 
                        array (
                          'description' => '智能接入网关实例ID。',
                          'type' => 'string',
                          'example' => 'sag-0nnteglltw6z4b****',
                        ),
                        'Bound' => 
                        array (
                          'description' => '智能接入网关实例和边界路由器实例绑定状态。

- **false**：未绑定。
- **true**：已经绑定。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '授权规则ID。',
                          'type' => 'string',
                          'example' => 'sgv-3x8djyem7vqh70****',
                        ),
                        'SmartAGUid' => 
                        array (
                          'description' => '智能接入网关实例所属UID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1231571212121212',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"46E98E69-FBA2-423E-9E5A-A3C6D843FED1\\",\\n  \\"PageNumber\\": 1,\\n  \\"TotalCount\\": 1,\\n  \\"GrantRules\\": {\\n    \\"GrantRule\\": [\\n      {\\n        \\"VbrInstanceId\\": \\"vbr-bp13gtbhdp0pfqg6s****\\",\\n        \\"VbrUid\\": 1231571212121212,\\n        \\"VbrRegionId\\": \\"cn-hangzhou\\",\\n        \\"CreateTime\\": 1600743723000,\\n        \\"SmartAGId\\": \\"sag-0nnteglltw6z4b****\\",\\n        \\"Bound\\": false,\\n        \\"InstanceId\\": \\"sgv-3x8djyem7vqh70****\\",\\n        \\"SmartAGUid\\": 1231571212121212\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeGrantSagVbrRulesResponse>\\n<TotalCount>1</TotalCount>\\n<RequestId>46E98E69-FBA2-423E-9E5A-A3C6D843FED1</RequestId>\\n<PageSize>10</PageSize>\\n<PageNumber>1</PageNumber>\\n<GrantRules>\\n    <GrantRule>\\n        <VbrUid>123157908552****</VbrUid>\\n        <SmartAGUid>168840159596****</SmartAGUid>\\n        <VbrInstanceId>vbr-bp13gtbhdp0pfqg6s****</VbrInstanceId>\\n        <InstanceId>sgv-3x8djyem7vqh70****</InstanceId>\\n        <CreateTime>1600743723000</CreateTime>\\n        <Bound>false</Bound>\\n        <VbrRegionId>cn-hangzhou</VbrRegionId>\\n        <SmartAGId>sag-0nnteglltw6z4b****</SmartAGId>\\n    </GrantRule>\\n</GrantRules>\\n</DescribeGrantSagVbrRulesResponse>","errorExample":""}]',
      'title' => '查询实例和VBR实例授权信息',
      'summary' => '查询指定智能接入网关实例和跨账号边界路由器（VBR）实例授权信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeBindableSmartAccessGateways' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'CcnId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'ccn-fu75a6m4clv7ai****',
          ),
        ),
        2 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时，每页包含的条目数。默认值为**10**，最大值为**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'sag-00uc4vgxch1zsu****',
          ),
        ),
        6 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例名称。

名称长度为2~128个字符，以大小写字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'sdggd111',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '智能接入网关实例总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时，每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9731C2F5-B9A4-42FD-AFD2-361A403E6E85',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'SmartAccessGateways' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SmartAccessGateway' => 
                  array (
                    'description' => '智能接入网关实例信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '智能接入网关实例信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SmartAGId' => 
                        array (
                          'description' => '智能接入网关实例ID。',
                          'type' => 'string',
                          'example' => 'sag-00uc4vgxch1zsu****',
                        ),
                        'Name' => 
                        array (
                          'description' => '智能接入网关实例名称。',
                          'type' => 'string',
                          'example' => 'sdggd111',
                        ),
                        'SmartAGUid' => 
                        array (
                          'description' => '智能接入网关实例所属账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '168840159596****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'CCN.InvalidId',
            'errorMessage' => 'You must specify the CCN instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidRegionID',
            'errorMessage' => 'The specified regionId does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 2,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"9731C2F5-B9A4-42FD-AFD2-361A403E6E85\\",\\n  \\"PageNumber\\": 1,\\n  \\"SmartAccessGateways\\": {\\n    \\"SmartAccessGateway\\": [\\n      {\\n        \\"SmartAGId\\": \\"sag-00uc4vgxch1zsu****\\",\\n        \\"Name\\": \\"sdggd111\\",\\n        \\"SmartAGUid\\": 0\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeBindableSmartAccessGatewaysResponse>\\n<PageNumber>1</PageNumber>\\n<PageSize>10</PageSize>\\n<RequestId>9731C2F5-B9A4-42FD-AFD2-361A403E6E85</RequestId>\\n<SmartAccessGateways>\\n    <SmartAccessGateway>\\n        <Name>zhen****-for-acl-performance-sag-154381343****</Name>\\n        <SmartAGId>sag-00uc4vgxch1zsu****</SmartAGId>\\n        <SmartAGUid>168840159596****</SmartAGUid>\\n    </SmartAccessGateway>\\n    <SmartAccessGateway>\\n        <Name>zhen****-for-acl-performance-sag-154383278****</Name>\\n        <SmartAGId>sag-0bs2aephgv7zfo****</SmartAGId>\\n        <SmartAGUid>168840159596****</SmartAGUid>\\n    </SmartAccessGateway>\\n</SmartAccessGateways>\\n<TotalCount>2</TotalCount>\\n</DescribeBindableSmartAccessGatewaysResponse>","errorExample":""}]',
      'title' => '查询可绑定的智能接入网关实例',
      'summary' => '调用DescribeBindableSmartAccessGateways接口查询指定地域下云连接网实例可绑定的智能接入网关实例信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagGlobalRouteProtocol' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RouteProtocol' => 
              array (
                'description' => '路由协议：

- **STATIC**：静态路由协议。
- **OSPF**：OSPF动态路由协议。
- **BGP**：BGP动态路由协议。',
                'type' => 'string',
                'example' => 'STATIC',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3712F0B2-721E-4FBF-BBEF-888E3BFE0A20',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间。',
                      'type' => 'string',
                      'example' => '1586855592000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RouteProtocol\\": \\"STATIC\\",\\n  \\"RequestId\\": \\"3712F0B2-721E-4FBF-BBEF-888E3BFE0A20\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586855592000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<RouteProtocol>OSPF</RouteProtocol>\\n<RequestId>7FA2EC3A-5261-4D2E-BC4F-CB1CFD7B4CBA</RequestId>\\n<TaskStates>\\n    <State>Succeed</State>\\n    <CreateTime>1586855592000</CreateTime>\\n    <ErrorCode>200</ErrorCode>\\n    <ErrorMessage>Successful</ErrorMessage>\\n</TaskStates>","errorExample":""}]',
      'title' => '获取全局路由协议',
      'summary' => '调用DescribeSagGlobalRouteProtocol接口获取全局路由协议。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagRouteList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CE6642D4-21EB-4168-9BF9-F217953F9892',
              ),
              'Routes' => 
              array (
                'description' => '路由列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'NextHop' => 
                    array (
                      'description' => '下一跳。',
                      'type' => 'string',
                      'example' => '192.XX.XX.1',
                    ),
                    'DestinationCidr' => 
                    array (
                      'description' => '目标网段。',
                      'type' => 'string',
                      'example' => '6.XX.XX.6/32',
                    ),
                    'Cost' => 
                    array (
                      'description' => '路由开销值。

第一个0表示：路由协议管理距离（AD）。

第二个0表示：度量值（metric）。',
                      'type' => 'string',
                      'example' => '[110/11]',
                    ),
                    'PortName' => 
                    array (
                      'description' => '端口名称。端口名称为-1时表示数据流量通过VPN连接进入阿里云。',
                      'type' => 'string',
                      'example' => '2',
                    ),
                    'ConflictCidrs' => 
                    array (
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '冲突网段列表。',
                        'type' => 'string',
                        'example' => '192.XX.XX.0/24',
                      ),
                    ),
                    'RouteProtocol' => 
                    array (
                      'description' => '路由协议类型：

- **STATIC**：静态路由协议。
- **OSPF**：OSPF动态路由协议。
- **BGP**：BGP动态路由协议。
',
                      'type' => 'string',
                      'example' => 'STATIC',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CE6642D4-21EB-4168-9BF9-F217953F9892\\",\\n  \\"Routes\\": [\\n    {\\n      \\"NextHop\\": \\"192.XX.XX.1\\",\\n      \\"DestinationCidr\\": \\"6.XX.XX.6/32\\",\\n      \\"Cost\\": \\"[110/11]\\",\\n      \\"PortName\\": \\"2\\",\\n      \\"RouteProtocol\\": \\"STATIC\\",\\n      \\"ConflictCidrs\\": [\\n        \\"192.XX.XX.0/24\\"\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagRouteListResponse>\\n<RequestId>4D2C2B28-2C90-4D2F-AF44-59355547D70B</RequestId>\\n<Routes>\\n    <RouteProtocol>STATIC</RouteProtocol>\\n    <NextHop/>\\n    <PortName>2</PortName>\\n    <Cost>[0/0]</Cost>\\n    <DestinationCidr>192.XX.XX.0/24</DestinationCidr>\\n</Routes>\\n<Routes>\\n    <RouteProtocol>STATIC</RouteProtocol>\\n    <NextHop/>\\n    <PortName>4</PortName>\\n    <Cost>[0/0]</Cost>\\n    <DestinationCidr>192.XX.XX.0/24</DestinationCidr>\\n</Routes>\\n</DescribeSagRouteListResponse>\\n","errorExample":""}]',
      'title' => '查询当前路由列表',
      'summary' => '调用DescribeSagRouteList查询当前路由列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagPortRouteProtocolList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CE6642D4-21EB-4168-9BF9-F217953F9892',
              ),
              'Ports' => 
              array (
                'description' => '端口信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => '端口状态：

- **UP**：端口开启。
- **DOWN**：端口关闭。',
                      'type' => 'string',
                      'example' => 'UP',
                    ),
                    'RemoteIp' => 
                    array (
                      'description' => '对端IP地址。',
                      'type' => 'string',
                      'example' => '192.XX.XX.1',
                    ),
                    'PortName' => 
                    array (
                      'description' => '端口名称。',
                      'type' => 'string',
                      'example' => '3',
                    ),
                    'NeighborIp' => 
                    array (
                      'description' => '邻居IP地址。',
                      'type' => 'string',
                      'example' => '192.XX.XX.1',
                    ),
                    'RouteProtocol' => 
                    array (
                      'description' => '端口路由协议：

- **STATIC**：静态路由协议。
- **OSPF**：OSPF动态路由协议。
- **BGP**：BGP动态路由协议。',
                      'type' => 'string',
                      'example' => 'BGP',
                    ),
                    'RemoteAs' => 
                    array (
                      'description' => '对端BGP自治系统编号。',
                      'type' => 'string',
                      'example' => '12345',
                    ),
                    'Vlan' => 
                    array (
                      'description' => 'VLAN编号。',
                      'type' => 'string',
                      'example' => '2',
                    ),
                  ),
                ),
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务状态。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间。',
                      'type' => 'string',
                      'example' => '1586843621000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CE6642D4-21EB-4168-9BF9-F217953F9892\\",\\n  \\"Ports\\": [\\n    {\\n      \\"Status\\": \\"UP\\",\\n      \\"RemoteIp\\": \\"192.XX.XX.1\\",\\n      \\"PortName\\": \\"3\\",\\n      \\"NeighborIp\\": \\"192.XX.XX.1\\",\\n      \\"RouteProtocol\\": \\"BGP\\",\\n      \\"RemoteAs\\": \\"12345\\",\\n      \\"Vlan\\": \\"2\\"\\n    }\\n  ],\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586843621000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagPortRouteProtocolListResponse>\\n<RequestId>CAA9089E-9C8E-422A-BB87-72A784A8A906</RequestId>\\n<Ports>\\n    <Status>DOWN</Status>\\n    <RouteProtocol>STATIC</RouteProtocol>\\n    <PortName>0</PortName>\\n</Ports>\\n<Ports>\\n    <Status>UP</Status>\\n    <RouteProtocol>OSPF</RouteProtocol>\\n    <PortName>4</PortName>\\n</Ports>\\n<Ports>\\n    <Status>DOWN</Status>\\n    <RouteProtocol>STATIC</RouteProtocol>\\n    <PortName>5</PortName>\\n</Ports>\\n<Ports>\\n    <RemoteAs/>\\n    <Status>DOWN</Status>\\n    <RouteProtocol>STATIC</RouteProtocol>\\n    <RemoteIp/>\\n    <Vlan>0</Vlan>\\n    <PortName>3</PortName>\\n</Ports>\\n<TaskStates>\\n    <State>Succeed</State>\\n    <CreateTime>1586843621000</CreateTime>\\n    <ErrorCode>200</ErrorCode>\\n    <ErrorMessage>Successful</ErrorMessage>\\n</TaskStates>\\n</DescribeSagPortRouteProtocolListResponse>","errorExample":""}]',
      'title' => '获取路由协议开启的端口列表',
      'summary' => '调用DescribeSagPortRouteProtocolList获取路由协议开启的端口列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagGlobalRouteProtocol' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由协议。取值：

- **STATIC**：静态路由协议。
- **OSPF**：OSPF动态路由协议。
- **BGP**：BGP动态路由协议。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'OSPF',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DB0A026C-A8E5-40AB-977E-3A87DD78F694',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DB0A026C-A8E5-40AB-977E-3A87DD78F694\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagGlobalRouteProtocolResponse>\\r\\n   <RequestId>DB0A026C-A8E5-40AB-977E-3A87DD78F694</RequestId>\\r\\n</ModifySagGlobalRouteProtocolResponse>","errorExample":""}]',
      'title' => '修改全局路由协议',
      'summary' => '调用ModifySagGlobalRouteProtocol修改全局路由协议。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagPortRouteProtocol' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'PortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '端口名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2',
          ),
        ),
        4 => 
        array (
          'name' => 'Vlan',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VLAN编码。',
            'type' => 'string',
            'required' => false,
            'example' => '2',
          ),
        ),
        5 => 
        array (
          'name' => 'RouteProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由协议。取值：

- **STATIC**：静态路由协议。
- **OSPF**：OSPF动态路由协议。
- **BGP**：BGP动态路由协议。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'STATIC',
          ),
        ),
        6 => 
        array (
          'name' => 'RemoteIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对端IP地址。

>启用BGP路由协议时需输入。',
            'type' => 'string',
            'required' => false,
            'example' => '192.XX.XX.1',
          ),
        ),
        7 => 
        array (
          'name' => 'RemoteAs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对端BGP自治系统编号。

>启用BGP路由协议时需输入。',
            'type' => 'string',
            'required' => false,
            'example' => '65535',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CE6642D4-21EB-4168-9BF9-F217953F9892',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Sag.RouteProtocolPortNotExist',
            'errorMessage' => 'The port specified for the dynamic routing protocol does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'Sag.EccRouteTypeError',
            'errorMessage' => 'An ECC port supports the BGP protocol only.',
          ),
          2 => 
          array (
            'errorCode' => 'Sag.RouteTypeNotMatch',
            'errorMessage' => 'The routing protocol type must be the same as the global routing protocol type.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CE6642D4-21EB-4168-9BF9-F217953F9892\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagPortRouteProtocolResponse>\\r\\n   <RequestId>CE6642D4-21EB-4168-9BF9-F217953F9892</RequestId>\\r\\n</ModifySagPortRouteProtocolResponse>","errorExample":""}]',
      'title' => '修改端口路由协议',
      'summary' => '调用ModifySagPortRouteProtocol修改端口路由协议。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagRouteProtocolBgp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'RouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP路由器ID。

取值格式为IPv4地址格式。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '172.XX.XX.1',
          ),
        ),
        4 => 
        array (
          'name' => 'LocalAs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备所属自治系统编号。

取值范围：**1~4294967295**。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '65535',
          ),
        ),
        5 => 
        array (
          'name' => 'HoldTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保持时间。

取值范围：**3~65535**。单位：秒。

>在智能接入网关设备和对端设备建立对等体关系时，两端设备要协商Hold Time并保持一致，如果在Hold Time内未收到对端发来的KeepAlive或Update消息，则认为BGP连接中断。 ',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '9',
          ),
        ),
        6 => 
        array (
          'name' => 'KeepAlive',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '存活时间间隔。

取值范围：**0~65535**。单位：秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '3',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '修改结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '48868976-45A2-4E87-B3AA-25089B8B7E49',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"48868976-45A2-4E87-B3AA-25089B8B7E49\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagRouteProtocolBgpResponse>\\r\\n    <RequestId>48868976-45A2-4E87-B3AA-25089B8B7E49</RequestId>\\r\\n</ModifySagRouteProtocolBgpResponse>","errorExample":""}]',
      'title' => '修改设备动态路由协议BGP配置',
      'summary' => '修改智能接入网关设备动态路由协议BGP的配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagRouteProtocolBgp' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'HoldTime' => 
              array (
                'description' => '保持时间。单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '9',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2F39E4FE-B45C-47FF-9921-95780486F52D',
              ),
              'KeepAlive' => 
              array (
                'description' => '存活时间间隔。单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'LocalAs' => 
              array (
                'description' => '智能接入网关所属自治系统编号。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '65536',
              ),
              'RouterId' => 
              array (
                'description' => 'BGP路由器ID。',
                'type' => 'string',
                'example' => '192.XX.XX.1',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间戳。',
                      'type' => 'string',
                      'example' => '1586765938000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"HoldTime\\": 9,\\n  \\"RequestId\\": \\"2F39E4FE-B45C-47FF-9921-95780486F52D\\",\\n  \\"KeepAlive\\": 3,\\n  \\"LocalAs\\": 65536,\\n  \\"RouterId\\": \\"192.XX.XX.1\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586765938000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagRouteProtocolBgpResponse>\\n    <HoldTime>9</HoldTime>\\n    <RequestId>2F39E4FE-B45C-47FF-9921-95780486F52D</RequestId>\\n    <KeepAlive>3</KeepAlive>\\n    <LocalAs>65536</LocalAs>\\n    <RouterId>192.XX.XX.1</RouterId>\\n    <TaskStates>\\n        <ErrorMessage>Successful</ErrorMessage>\\n        <State>Succeed</State>\\n        <ErrorCode>200</ErrorCode>\\n        <CreateTime>1586765938000</CreateTime>\\n    </TaskStates>\\n</DescribeSagRouteProtocolBgpResponse>","errorExample":""}]',
      'title' => '获取动态路由协议BGP的配置',
      'summary' => '调用DescribeSagRouteProtocolBgp接口获取动态路由协议BGP的配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagRouteProtocolOspf' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '	
智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30***',
          ),
        ),
        3 => 
        array (
          'name' => 'RouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OSPF路由器ID。

取值格式为IPv4地址格式。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XX.XX.1',
          ),
        ),
        4 => 
        array (
          'name' => 'AreaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OSPF区域ID。

取值范围：**1~2147483647**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '86',
          ),
        ),
        5 => 
        array (
          'name' => 'DeadTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OSPF超时时间间隔。单位：秒。

取值范围：**1~65535**。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'HelloTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '发送Hello报文的时间间隔。单位：秒。

取值范围：**1~65535**。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '3',
          ),
        ),
        7 => 
        array (
          'name' => 'AuthenticationType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '认证方式。取值：

- **NONE**：不开启认证。

- **CLEARTEXT**：采用明文认证，需输入明文密码。

- **MD5**：采用MD5认证，需输入MD5 Key ID和MD5 Key。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'NONE',
          ),
        ),
        8 => 
        array (
          'name' => 'Md5KeyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MD5 Key的编号。

取值范围：**1~2147483647**。

 >该项仅当**AuthenticationType**为**MD5**时输入。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '7',
          ),
        ),
        9 => 
        array (
          'name' => 'Md5Key',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MD5 Key值。

取值范围：**1~47**。

> 该项仅当**AuthenticationType**为**MD5**时输入。
',
            'type' => 'string',
            'required' => false,
            'example' => '5',
          ),
        ),
        10 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '明文认证密码。

格式要求为1~8位字符，可包含大小写字母、数字、短划线（-）或下划线（_）。

> 该项仅当**AuthenticationType**为**CLEARTEXT**时输入。
',
            'type' => 'string',
            'required' => false,
            'example' => '1212****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '191DC00D-00C0-475C-99B8-ADBB82496405',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"191DC00D-00C0-475C-99B8-ADBB82496405\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagRouteProtocolOspfResponse>\\r\\n    <RequestId>191DC00D-00C0-475C-99B8-ADBB82496405</RequestId>\\r\\n</ModifySagRouteProtocolOspfResponse>","errorExample":""}]',
      'title' => '修改动态路由协议OSPF配置',
      'summary' => '调用ModifySagRouteProtocolOspf修改动态路由协议OSPF配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagRouteProtocolOspf' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '60F9B653-25B7-4511-A3C7-BCBAF462393E',
              ),
              'DeadTime' => 
              array (
                'description' => '超时时间间隔。
单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '40',
              ),
              'Md5KeyId' => 
              array (
                'description' => 'MD5 Key的编号。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'AreaId' => 
              array (
                'description' => 'OSPF区域ID。',
                'type' => 'string',
                'example' => '10',
              ),
              'RouterId' => 
              array (
                'description' => 'OSPF路由器ID。',
                'type' => 'string',
                'example' => '1.XX.XX.1',
              ),
              'HelloTime' => 
              array (
                'description' => '发送Hello报文的时间间隔。
单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'AreaType' => 
              array (
                'description' => 'OSPF区域类型。

>仅支持NSSA区域类型。',
                'type' => 'string',
                'example' => 'NSSA',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间。',
                      'type' => 'string',
                      'example' => '1586843621000',
                    ),
                  ),
                ),
              ),
              'Md5Key' => 
              array (
                'description' => 'MD5 Key值。',
                'type' => 'string',
                'example' => '123****',
              ),
              'AuthenticationType' => 
              array (
                'description' => '认证类型：

- **NONE**：不开启认证。

- **CLEARTEXT**：采用明文认证。

- **MD5**：采用MD5认证。
',
                'type' => 'string',
                'example' => 'MD5',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"60F9B653-25B7-4511-A3C7-BCBAF462393E\\",\\n  \\"DeadTime\\": 40,\\n  \\"Md5KeyId\\": 1,\\n  \\"AreaId\\": \\"10\\",\\n  \\"RouterId\\": \\"1.XX.XX.1\\",\\n  \\"HelloTime\\": 10,\\n  \\"AreaType\\": \\"NSSA\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586843621000\\"\\n    }\\n  ],\\n  \\"Md5Key\\": \\"123****\\",\\n  \\"AuthenticationType\\": \\"MD5\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagRouteProtocolOspfResponse>\\n<RequestId>60F9B653-25B7-4511-A3C7-BCBAF462393E</RequestId>\\n<DeadTime>40</DeadTime>\\n<Md5KeyId>1</Md5KeyId>\\n<AreaId>10</AreaId>\\n<RouterId>1.XX.XX.1</RouterId>\\n<HelloTime>10</HelloTime>\\n<AreaType/>\\n<TaskStates>\\n    <State>Succeed</State>\\n    <CreateTime>1586768763000</CreateTime>\\n    <ErrorCode>200</ErrorCode>\\n    <ErrorMessage>Successful</ErrorMessage>\\n</TaskStates>\\n<Md5Key>123****</Md5Key>\\n<AuthenticationType>MD5</AuthenticationType>\\n</DescribeSagRouteProtocolOspfResponse>","errorExample":""}]',
      'title' => '获取动态路由协议OSPF的配置',
      'summary' => '调用DescribeSagRouteProtocolOspf获取动态路由协议OSPF的配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSagStaticRoute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备的序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'PortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '端口名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'DestinationCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XX.XX.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XX.XX.1',
          ),
        ),
        6 => 
        array (
          'name' => 'Vlan',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VLAN编码。

取值范围：**0**标识物理口，**1~4094**标识VLAN。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1120228A-E5E1-4E9C-B56D-96887E1A2B2F',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Sag.PortNotExist',
            'errorMessage' => 'The specified port does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'Sag.PortRoleInvalid',
            'errorMessage' => 'The port role is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Sag.EccVlanNotExist',
            'errorMessage' => 'The specified dedicated VLAN does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'Sag.StaticRouteExist',
            'errorMessage' => 'The specified static route already exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1120228A-E5E1-4E9C-B56D-96887E1A2B2F\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateSagStaticRouteResponse>\\r\\n    <RequestId>1120228A-E5E1-4E9C-B56D-96887E1A2B2F</RequestId>\\r\\n</CreateSagStaticRouteResponse>","errorExample":""}]',
      'title' => '创建静态路由',
      'summary' => '调用CreateSagStaticRoute添加静态路由。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagStaticRouteList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CE6642D4-21EB-4168-9BF9-F217953F9892',
              ),
              'StaticRoutes' => 
              array (
                'description' => '静态路由信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'NextHop' => 
                    array (
                      'description' => '下一跳。',
                      'type' => 'string',
                      'example' => '192.XX.XX.1',
                    ),
                    'DestinationCidr' => 
                    array (
                      'description' => '目标网段。',
                      'type' => 'string',
                      'example' => '192.XX.XX.0/24',
                    ),
                    'PortName' => 
                    array (
                      'description' => '端口名称。',
                      'type' => 'string',
                      'example' => '0',
                    ),
                    'Vlan' => 
                    array (
                      'description' => 'VLAN编号。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                  ),
                ),
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间。',
                      'type' => 'string',
                      'example' => '1586857309000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CE6642D4-21EB-4168-9BF9-F217953F9892\\",\\n  \\"StaticRoutes\\": [\\n    {\\n      \\"NextHop\\": \\"192.XX.XX.1\\",\\n      \\"DestinationCidr\\": \\"192.XX.XX.0/24\\",\\n      \\"PortName\\": \\"0\\",\\n      \\"Vlan\\": \\"1\\"\\n    }\\n  ],\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586857309000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagStaticRouteListResponse>\\n<RequestId>4C6825DA-AF71-48A5-A2A2-AE3E38ABC899</RequestId>\\n<StaticRoutes>\\n    <NextHop>2.XX.XX.2</NextHop>\\n    <Vlan>0</Vlan>\\n    <PortName>5</PortName>\\n    <DestinationCidr>1.XX.XX.1/32</DestinationCidr>\\n</StaticRoutes>\\n<TaskStates>\\n    <State>Succeed</State>\\n    <CreateTime>1586857309000</CreateTime>\\n    <ErrorCode>200</ErrorCode>\\n    <ErrorMessage>Successful</ErrorMessage>\\n</TaskStates>\\n</DescribeSagStaticRouteListResponse>","errorExample":""}]',
      'title' => '查询静态路由列表',
      'summary' => '调用DescribeSagStaticRouteList查询静态路由列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagStaticRoute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备的序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'PortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '端口名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'DestinationCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XX.XX.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'NextHop',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下一跳IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XX.XX.1',
          ),
        ),
        6 => 
        array (
          'name' => 'Vlan',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VLAN编码。

取值范围：**0**标识物理口，**1~4094**标识VLAN。',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'ACA5A9FE-77FA-4C09-980B-5C353160FA4A',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Sag.PortNotExist',
            'errorMessage' => 'The specified port does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'Sag.PortRoleInvalid',
            'errorMessage' => 'The port role is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'Sag.EccVlanNotExist',
            'errorMessage' => 'The specified dedicated VLAN does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'Sag.StaticRouteNotExist',
            'errorMessage' => 'The specified static route does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"ACA5A9FE-77FA-4C09-980B-5C353160FA4A\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagStaticRouteResponse>\\r\\n   <RequestId>ACA5A9FE-77FA-4C09-980B-5C353160FA4A</RequestId>\\r\\n</ModifySagStaticRouteResponse>","errorExample":""}]',
      'title' => '修改静态路由',
      'summary' => '调用ModifySagStaticRoute修改静态路由。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSagStaticRoute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备的序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'PortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '端口名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'DestinationCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标网段。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XX.XX.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'Vlan',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Vlan编码。

取值范围：**0**标识物理口，**1~4094**标识Vlan。 ',
            'type' => 'string',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A53F71B6-7577-492A-A0CD-C7D3DFFE2D0E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Sag.PortNotExist',
            'errorMessage' => 'The specified port does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'Sag.StaticRouteNotExist',
            'errorMessage' => 'The specified static route does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A53F71B6-7577-492A-A0CD-C7D3DFFE2D0E\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteSagStaticRouteResponse>\\r\\n   <RequestId>A53F71B6-7577-492A-A0CD-C7D3DFFE2D0E</RequestId>\\r\\n</DeleteSagStaticRouteResponse>","errorExample":""}]',
      'title' => '删除静态路由',
      'summary' => '调用DeleteSagStaticRoute删除静态路由。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagPortRole' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。
您可以调用[DescribeRegions](~~69813~~)接口查询智能接入网关支持的地域以及对应的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'PortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '端口名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'Role',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '端口角色。取值：

- **NONE**：端口未分配角色。
- **WAN**：用于接入Internet的端口。智能接入网关设备5号端口默认为WAN口，支持DHCP client、PPPoE或静态IP接入方式。
- **LAN**：用于接入本地PC或交换机的端口，支持DHCP server或静态IP接入方式。
- **ECC**：用于接入专线的端口。
- **MGT**：用于管理的端口。智能接入网关设备2号端口默认为独占管理口。

> -  管理口独占模式下管理流量和业务流量分离，独占的管理口只能用于访问智能接入网关设备Web管理控制台，不能用于传输业务流量；且只可通过管理口访问智能接入网关设备Web管理控制台。
- WAN口支持即插即用模式，第一个通过DHCP获取到IP地址且能够访问Internet的端口会被设置为WAN口；可在Web管理控制台修改WAN口分配。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'NONE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3200E8A3-563F-4FFC-8BDB-0F1263FA69E8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Sag.PortNotExist',
            'errorMessage' => 'The specified port does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'Sag.HaPortExist',
            'errorMessage' => 'The specified port is used by the HA configuration.',
          ),
          2 => 
          array (
            'errorCode' => 'Sag.PortRoleLimit',
            'errorMessage' => 'The maximum number of ports with the specified role is exceeded.',
          ),
          3 => 
          array (
            'errorCode' => 'Sag.PortMgtError',
            'errorMessage' => 'The role of a management port cannot be changed.',
          ),
          4 => 
          array (
            'errorCode' => 'Sag.PortRoleInvalid',
            'errorMessage' => 'The port role is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
          6 => 
          array (
            'errorCode' => 'IrRuleOutboundPortInUse.%s',
            'errorMessage' => 'The specified port %s is in use as a outbound port of intelligent routing rule, please free it first.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3200E8A3-563F-4FFC-8BDB-0F1263FA69E8\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagPortRoleResponse>\\r\\n   <RequestId>3200E8A3-563F-4FFC-8BDB-0F1263FA69E8</RequestId>\\r\\n</ModifySagPortRoleResponse>","errorExample":""}]',
      'title' => '修改端口角色',
      'summary' => '调用ModifySagPortRole修改端口角色。',
      'description' => '>修改端口角色会删除当前端口关联的原角色配置数据。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagPortList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CE6642D4-21EB-4168-9BF9-F217953F9892',
              ),
              'Ports' => 
              array (
                'description' => '端口信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => '端口状态：

- **Up**：端口开启。
- **Down**：端口关闭。
- **Unavailable**：设备不在线。',
                      'type' => 'string',
                      'example' => 'Down',
                    ),
                    'PortName' => 
                    array (
                      'description' => '端口名称。',
                      'type' => 'string',
                      'example' => '5',
                    ),
                    'Role' => 
                    array (
                      'description' => '端口角色：

- **NONE**：表示未分配端口角色。
- **WAN**：端口角色为WAN口，WAN口用于接入Internet，支持DHCP client、PPPoE、静态IP接入方式。
- **LAN**：端口角色为LAN口，LAN口用于接入本地客户端或交换机，支持DHCP server、静态IP接入方式。
- **ECC**：端口角色为专线，用于对接专线。
- **MGT**：端口角色为管理口。
- **CELLULAR**：表示4G口。',
                      'type' => 'string',
                      'example' => 'NONE',
                    ),
                    'Mac' => 
                    array (
                      'description' => '端口Mac地址。',
                      'type' => 'string',
                      'example' => 'c4:00:ad:a2:f5:****',
                    ),
                  ),
                ),
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。
',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间。',
                      'type' => 'string',
                      'example' => '1586762479000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
          4 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          5 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          6 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CE6642D4-21EB-4168-9BF9-F217953F9892\\",\\n  \\"Ports\\": [\\n    {\\n      \\"Status\\": \\"Down\\",\\n      \\"Role\\": \\"NONE\\",\\n      \\"PortName\\": \\"5\\",\\n      \\"Mac\\": \\"c4:00:ad:a2:f5:****\\"\\n    }\\n  ],\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586762479000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagPortListResponse>\\n<RequestId>4363065D-5F04-49D4-A994-C1DF39C7E241</RequestId>\\n<Ports>\\n    <Role>LAN</Role>\\n    <Status>Down</Status>\\n    <PortName>0</PortName>\\n    <Mac>cc:d3:9d:9e:2d:****</Mac>\\n</Ports>\\n<Ports>\\n    <Role>NONE</Role>\\n    <Status>Down</Status>\\n    <PortName>1</PortName>\\n    <Mac>cc:d3:9d:9e:2d:****</Mac>\\n</Ports>\\n<Ports>\\n    <Role>MGT</Role>\\n    <Status>Up</Status>\\n    <PortName>2</PortName>\\n    <Mac>cc:d3:9d:9e:2d:****</Mac>\\n</Ports>\\n<Ports>\\n    <Role>ECC</Role>\\n    <Status>Down</Status>\\n    <PortName>3</PortName>\\n    <Mac>cc:d3:9d:9e:2d:****</Mac>\\n</Ports>\\n<Ports>\\n    <Role>LAN</Role>\\n    <Status>Up</Status>\\n    <PortName>4</PortName>\\n    <Mac>cc:d3:9d:9e:2d:****</Mac>\\n</Ports>\\n<Ports>\\n    <Role>WAN</Role>\\n    <Status>Up</Status>\\n    <PortName>5</PortName>\\n    <Mac>cc:d3:9d:9e:2d:****</Mac>\\n</Ports>\\n<Ports>\\n    <Role>CELLULAR</Role>\\n    <Status>Down</Status>\\n    <PortName>6</PortName>\\n    <Mac>32:70:92:7e:02:4b</Mac>\\n</Ports>\\n<TaskStates>\\n    <State>Succeed</State>\\n    <CreateTime>1586762479000</CreateTime>\\n    <ErrorCode>200</ErrorCode>\\n    <ErrorMessage>Successful</ErrorMessage>\\n</TaskStates>\\n</DescribeSagPortListResponse>","errorExample":""}]',
      'title' => '查询物理端口信息',
      'summary' => '调用DescribeSagPortList接口查询智能接入网关设备物理端口信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagWanList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。
您可以调用[DescribeRegions](~~69813~~)接口查询智能接入网关支持的地域以及对应的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CE6642D4-21EB-4168-9BF9-F217953F9892',
              ),
              'Wans' => 
              array (
                'description' => 'WAN口配置信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Weight' => 
                    array (
                      'description' => 'WAN口权重。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '100',
                    ),
                    'Mask' => 
                    array (
                      'description' => 'WAN口IP地址掩码。',
                      'type' => 'string',
                      'example' => '255.255.255.240',
                    ),
                    'Gateway' => 
                    array (
                      'description' => '网关IP地址。',
                      'type' => 'string',
                      'example' => '192.XX.XX.1',
                    ),
                    'PortName' => 
                    array (
                      'description' => 'WAN口所属的端口号。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                    'IPType' => 
                    array (
                      'description' => 'WAN口连接类型：

- **DHCP**：通过DHCP协议动态获取IP地址，进而访问互联网。
- **STATIC**：通过静态指定IP地址，进而访问互联网。
- **PPPOE**：通过拨号方式接入互联网。',
                      'type' => 'string',
                      'example' => 'STATIC',
                    ),
                    'Priority' => 
                    array (
                      'description' => 'WAN口优先级。

数值范围：**-1**或**1~50**，数值越小优先级越高。

> 优先级为**-1**时，表示端口不启用流量转发。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'BandWidth' => 
                    array (
                      'description' => 'WAN口的限速带宽。单位：Mbps。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '50',
                    ),
                    'TrafficState' => 
                    array (
                      'description' => 'WAN口流量状态。

- **active**：表示当前WAN端口为主端口，优先进行转发流量。
-  **standby**：表示当前WAN端口为备端口，在主端口故障后进行流量转发。',
                      'type' => 'string',
                      'example' => 'active',
                    ),
                    'IP' => 
                    array (
                      'description' => 'WAN口IP地址。',
                      'type' => 'string',
                      'example' => '172.XX.XX.1',
                    ),
                    'ISP' => 
                    array (
                      'description' => 'WAN口连接的运营商链路。

- **CT**：电信
- **CM**：移动
- **CU**：联通
- **Other**：其他',
                      'type' => 'string',
                      'example' => 'CT',
                    ),
                    'Username' => 
                    array (
                      'description' => 'PPPOE账号。',
                      'type' => 'string',
                      'example' => 'Usernamexx',
                    ),
                  ),
                ),
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息及状态。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '查询任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间。',
                      'type' => 'string',
                      'example' => '1586834861000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
          4 => 
          array (
            'errorCode' => 'Sag.PortRoleInvalid',
            'errorMessage' => 'The port role is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'Sag.PortMgtError',
            'errorMessage' => 'The role of a management port cannot be changed.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CE6642D4-21EB-4168-9BF9-F217953F9892\\",\\n  \\"Wans\\": [\\n    {\\n      \\"Weight\\": 100,\\n      \\"Mask\\": \\"255.255.255.240\\",\\n      \\"Gateway\\": \\"192.XX.XX.1\\",\\n      \\"PortName\\": \\"1\\",\\n      \\"IPType\\": \\"STATIC\\",\\n      \\"Priority\\": 1,\\n      \\"BandWidth\\": 50,\\n      \\"TrafficState\\": \\"active\\",\\n      \\"IP\\": \\"172.XX.XX.1\\",\\n      \\"ISP\\": \\"CT\\",\\n      \\"Username\\": \\"Usernamexx\\"\\n    }\\n  ],\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586834861000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagWanListResponse>\\n<RequestId>D6E2D7AF-6721-462F-B460-D1CE616BC557</RequestId>\\n<Wans>\\n    <IPType>DHCP</IPType>\\n    <Username/>\\n    <Gateway>172.XX.XX.254</Gateway>\\n    <Priority>10</Priority>\\n    <IP>172.XX.XX.43</IP>\\n    <Mask>255.255.255.0</Mask>\\n    <PortName>3</PortName>\\n</Wans>\\n<Wans>\\n    <IPType>STATIC</IPType>\\n    <Username/>\\n    <Gateway>10.XX.XX.254</Gateway>\\n    <Priority>20</Priority>\\n    <IP>10.XX.XX.200</IP>\\n    <Mask>255.255.255.0</Mask>\\n    <PortName>4</PortName>\\n</Wans>\\n</DescribeSagWanListResponse>","errorExample":""}]',
      'title' => '获取设备WAN有线配置信息',
      'summary' => '查询智能接入网关设备WAN口配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagWan' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。
您可以调用[DescribeRegions](~~69813~~)接口查询智能接入网关支持的地域以及对应的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'PortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'WAN口所属的端口号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'IPType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'WAN口连接类型。取值：

- **DHCP**：通过DHCP协议动态获取IP地址，进而访问互联网。
- **STATIC**：通过静态指定IP地址，进而访问互联网。此种方式需要为WAN口配置静态IP地址、地址掩码及网关IP地址。
- **PPPOE**：通过拨号方式接入互联网。此种方式需要输入运营商提供的PPPOE账号和密码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DHCP',
          ),
        ),
        5 => 
        array (
          'name' => 'IP',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'WAN口IP地址。

>IPType为STATIC时需要输入。',
            'type' => 'string',
            'required' => false,
            'example' => '192.XX.XX.1',
          ),
        ),
        6 => 
        array (
          'name' => 'Mask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'WAN口IP地址掩码。

>IPType为STATIC时需要输入。',
            'type' => 'string',
            'required' => false,
            'example' => '255.255.255.0',
          ),
        ),
        7 => 
        array (
          'name' => 'Gateway',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网关IP地址。

> - IPType为STATIC时需要输入。
- 配置网关后，智能接入网关设备会自动生成一条默认路由。',
            'type' => 'string',
            'required' => false,
            'example' => '192.XX.XX.254',
          ),
        ),
        8 => 
        array (
          'name' => 'Username',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'PPPOE账号。

长度为6~30位字符，可包含数字、大小写字母。
	
>IPType为PPPOE时需要输入。

',
            'type' => 'string',
            'required' => false,
            'example' => 'P12ppp***',
          ),
        ),
        9 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'PPPOE密码。

长度为6~30位字符，可包含数字、大小写字母。
	
>IPType为PPPOE时需要输入。密码不修改时可以不指定该项。

',
            'type' => 'string',
            'required' => false,
            'example' => 'P12ppq***',
          ),
        ),
        10 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'WAN口优先级。

取值范围：**-1**或**1~50**。

数值越小优先级越高。**-1**表示该WAN口不启用流量转发。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        11 => 
        array (
          'name' => 'Weight',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'WAN口权重。

取值范围：**1~100**。默认值：**100**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '100',
          ),
        ),
        12 => 
        array (
          'name' => 'ISP',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'WAN口连接的运营商链路。取值：

- **CT**：电信
- **CM**：移动
- **CU**：联通
- **Other**：其他',
            'type' => 'string',
            'required' => false,
            'example' => 'CT',
          ),
        ),
        13 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'WAN口的限速带宽。单位：Mbps。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '1000000',
            'minimum' => '0',
            'example' => '50',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Sag.PortNotExist',
            'errorMessage' => 'The specified port does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'Sag.PortRoleInvalid',
            'errorMessage' => 'The port role is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagWanResponse>\\r\\n   <RequestId>AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545</RequestId>\\r\\n</ModifySagWanResponse>","errorExample":""}]',
      'title' => '修改设备的WAN端口配置',
      'summary' => '修改智能接入网关设备的WAN口配置。',
      'description' => '在您修改WAN口配置前，建议您先了解WAN口的功能信息。更多信息，请参见[配置WAN口](~~163955~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagWanSnat' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'Snat',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否打开SNAT功能。取值：

- **ENABLE**：开启SNAT功能。

- **DISABLE**：关闭SNAT功能。

',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ENABLE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '96AF7326-B6DE-4188-8638-56A6164F62D9',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => ' The specified smart access gateway instance ID does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"96AF7326-B6DE-4188-8638-56A6164F62D9\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagWanSnatResponse>\\r\\n   <RequestId>96AF7326-B6DE-4188-8638-56A6164F62D9</RequestId>\\r\\n</ModifySagWanSnatResponse>","errorExample":""}]',
      'title' => '修改设备SNAT配置',
      'summary' => '修改智能接入网关设备WAN口的SNAT配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagWanSnat' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CE6642D4-21EB-4168-9BF9-F217953F9892',
              ),
              'Snat' => 
              array (
                'description' => 'SNAT配置。

- **ENABLE**：SNAT功能开启。
- **DISABLE**：SNAT功能未开启。',
                'type' => 'string',
                'example' => 'ENABLE',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间戳。
时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建查询任务时的总时长。',
                      'type' => 'string',
                      'example' => '1586847787000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
          4 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          5 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
          6 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CE6642D4-21EB-4168-9BF9-F217953F9892\\",\\n  \\"Snat\\": \\"ENABLE\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586847787000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagWanSnatResponse>\\n<RequestId>C1DB5ADD-7AE0-4E15-8C84-7C1CE2B20693</RequestId>\\n<Snat>DISABLE</Snat>\\n<TaskStates>\\n    <State>Succeed</State>\\n    <CreateTime>1586847787000</CreateTime>\\n    <ErrorCode>200</ErrorCode>\\n    <ErrorMessage>Successful</ErrorMessage>\\n</TaskStates>\\n</DescribeSagWanSnatResponse>","errorExample":""}]',
      'title' => '获取设备WAN口的SNAT配置',
      'summary' => '调用DescribeSagWanSnat获取设备WAN口的SNAT配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagWan4G' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => '4G网卡状态：

- **Normal**：状态正常。
- **Abnormal**：状态异常。
- **Unavailable**：无4G网卡。',
                'type' => 'string',
                'example' => 'Normal',
              ),
              'TrafficState' => 
              array (
                'description' => '4G网卡流量状态。

- **active**：表示该4G网卡为主用链路，当前流量经过该4G网卡进行传输。
- **standby**：表示该4G网卡为备用链路，暂不转发流量。在主用链路故障后，流量经过该4G网卡进行传输。',
                'type' => 'string',
                'example' => 'active',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CE6642D4-21EB-4168-9BF9-F217953F9892',
              ),
              'Priority' => 
              array (
                'description' => '4G网卡优先级。优先级默认值为**99**，表示最低优先级，且优先级不支持调整。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '99',
              ),
              'Ip' => 
              array (
                'description' => '4G网卡IP地址。',
                'type' => 'string',
                'example' => '192.XX.XX.1',
              ),
              'Strength' => 
              array (
                'description' => '4G信号强度：

-  **High**：强。
-  **Middle**：中。
-  **Low**：弱。
- **Unavailable**：无信号。',
                'type' => 'string',
                'example' => 'High',
              ),
              'Mac' => 
              array (
                'description' => '4G网卡MAC地址。',
                'type' => 'string',
                'example' => 'c4:00:ad:a2:f5:****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
          4 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          5 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          6 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Status\\": \\"Normal\\",\\n  \\"TrafficState\\": \\"active\\",\\n  \\"RequestId\\": \\"CE6642D4-21EB-4168-9BF9-F217953F9892\\",\\n  \\"Priority\\": 99,\\n  \\"Ip\\": \\"192.XX.XX.1\\",\\n  \\"Strength\\": \\"High\\",\\n  \\"Mac\\": \\"c4:00:ad:a2:f5:****\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagWan4GResponse>\\n    <Status>Normal</Status>\\n    <TrafficState>active</TrafficState>\\n    <RequestId>CE6642D4-21EB-4168-9BF9-F217953F9892</RequestId>\\n    <Priority>99</Priority>\\n    <Ip>192.XX.XX.1</Ip>\\n    <Strength>High</Strength>\\n    <Mac>c4:00:ad:a2:f5:****</Mac>\\n</DescribeSagWan4GResponse>","errorExample":""}]',
      'title' => '获取设备WAN 4G网卡信息',
      'summary' => '获取智能接入网关设备WAN 4G网卡信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagLanList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备的序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1120228A-E5E1-4E9C-B56D-96887E1A2B2F',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：
- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间。',
                      'type' => 'string',
                      'example' => '1586852928000',
                    ),
                  ),
                ),
              ),
              'Lans' => 
              array (
                'description' => 'LAN端口信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Lease' => 
                    array (
                      'description' => 'DHCP租期。单位分钟。',
                      'type' => 'string',
                      'example' => '7',
                    ),
                    'Mask' => 
                    array (
                      'description' => '掩码地址。',
                      'type' => 'string',
                      'example' => '255.255.255.0',
                    ),
                    'EndIp' => 
                    array (
                      'description' => 'DHCP地址池结束地址。',
                      'type' => 'string',
                      'example' => '192.XX.XX.254',
                    ),
                    'PortName' => 
                    array (
                      'description' => '端口名称。',
                      'type' => 'string',
                      'example' => '0',
                    ),
                    'StartIp' => 
                    array (
                      'description' => 'DHCP地址池起始地址。',
                      'type' => 'string',
                      'example' => '192.XX.XX.2',
                    ),
                    'IPType' => 
                    array (
                      'description' => 'LAN口连接类型。

**DHCP**：动态IP。利用DHCP协议，向连接设备动态下发IP地址。

**STATIC**：静态IP。静态指定LAN口IP地址。',
                      'type' => 'string',
                      'example' => 'DHCP',
                    ),
                    'IP' => 
                    array (
                      'description' => 'LAN口IP地址。',
                      'type' => 'string',
                      'example' => '192.XX.XX.1',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1120228A-E5E1-4E9C-B56D-96887E1A2B2F\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586852928000\\"\\n    }\\n  ],\\n  \\"Lans\\": [\\n    {\\n      \\"Lease\\": \\"7\\",\\n      \\"Mask\\": \\"255.255.255.0\\",\\n      \\"EndIp\\": \\"192.XX.XX.254\\",\\n      \\"PortName\\": \\"0\\",\\n      \\"StartIp\\": \\"192.XX.XX.2\\",\\n      \\"IPType\\": \\"DHCP\\",\\n      \\"IP\\": \\"192.XX.XX.1\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagLanListResponse>\\n<RequestId>ADDEF8CA-D96F-4002-812A-36FDF4114135</RequestId>\\n<TaskStates>\\n    <State>Succeed</State>\\n    <CreateTime>1586869664000</CreateTime>\\n    <ErrorCode>200</ErrorCode>\\n    <ErrorMessage>Successful.</ErrorMessage>\\n</TaskStates>\\n<Lans>\\n    <IPType>STATIC</IPType>\\n    <IP>192.XX.XX.1</IP>\\n    <Mask>255.255.255.0</Mask>\\n    <PortName>0</PortName>\\n</Lans>\\n<Lans>\\n    <IPType>STATIC</IPType>\\n    <IP>172.XX.XX.10</IP>\\n    <Mask>255.255.255.0</Mask>\\n    <PortName>4</PortName>\\n</Lans>\\n</DescribeSagLanListResponse>","errorExample":""}]',
      'title' => '查询智能接入网关设备LAN配置',
      'summary' => '调用DescribeSagLanList查询智能接入网关设备LAN配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagLan' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备的序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'PortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '端口名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'IPType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'LAN口连接类型。取值：

- **DHCP**：动态IP。利用DHCP协议，向连接设备动态下发IP地址。
- **STATIC**：静态IP。静态指定LAN口IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'STATIC',
          ),
        ),
        5 => 
        array (
          'name' => 'IP',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'LAN口IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XX.XX.1',
          ),
        ),
        6 => 
        array (
          'name' => 'Mask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '掩码地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '255.255.255.0',
          ),
        ),
        7 => 
        array (
          'name' => 'StartIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP地址池起始地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.XX.XX.2',
          ),
        ),
        8 => 
        array (
          'name' => 'EndIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP地址池结束地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.XX.XX.254',
          ),
        ),
        9 => 
        array (
          'name' => 'Lease',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'DHCP租期。单位分钟。

取值范围：**1~43200**。',
            'type' => 'string',
            'required' => false,
            'example' => '7',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1120228A-E5E1-4E9C-B56D-96887E1A2B2F',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Sag.PortNotExist',
            'errorMessage' => 'The specified port does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'Sag.PortRoleInvalid',
            'errorMessage' => 'The port role is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1120228A-E5E1-4E9C-B56D-96887E1A2B2F\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagLanResponse>\\r\\n   <RequestId>1120228A-E5E1-4E9C-B56D-96887E1A2B2F</RequestId>\\r\\n</ModifySagLanResponse>","errorExample":""}]',
      'title' => '修改智能接入网关设备的LAN口配置',
      'summary' => '调用ModifySagLan修改智能接入网关设备的LAN口配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagManagementPort' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-jbauqzw5ildnud****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sage62x021922****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3616AAA9-3A6F-4604-98AF-86753AB7F040',
              ),
              'Gateway' => 
              array (
                'description' => '管理口网关IP地址。',
                'type' => 'string',
                'example' => '192.XX.XX.254',
              ),
              'IP' => 
              array (
                'description' => '管理口IP地址。',
                'type' => 'string',
                'example' => '192.XX.XX.10',
              ),
              'Mask' => 
              array (
                'description' => '管理口掩码地址。',
                'type' => 'string',
                'example' => '255.255.255.0',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间。',
                      'type' => 'string',
                      'example' => '1586759657000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3616AAA9-3A6F-4604-98AF-86753AB7F040\\",\\n  \\"Gateway\\": \\"192.XX.XX.254\\",\\n  \\"IP\\": \\"192.XX.XX.10\\",\\n  \\"Mask\\": \\"255.255.255.0\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586759657000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagManagementPortResponse>\\n<RequestId>3616AAA9-3A6F-4604-98AF-86753AB7F040</RequestId>\\n<Gateway>192.XX.XX.254</Gateway>\\n<IP>192.XX.XX.10</IP>\\n<Mask>255.255.255.0</Mask>\\n<TaskStates>\\n    <State>Succeed</State>\\n    <CreateTime>1586759657000</CreateTime>\\n    <ErrorCode>200</ErrorCode>\\n    <ErrorMessage>Successful</ErrorMessage>\\n</TaskStates>\\n</DescribeSagManagementPortResponse>","errorExample":""}]',
      'title' => '获取智能接入网关设备管理口配置',
      'summary' => '调用DescribeSagManagementPort获取智能接入网关设备管理口配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagManagementPort' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'IP',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '管理口IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XX.XX.1',
          ),
        ),
        4 => 
        array (
          'name' => 'Mask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '管理口掩码地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '255.255.255.0',
          ),
        ),
        5 => 
        array (
          'name' => 'Gateway',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '管理口网关IP地址。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '192.XX.XX.254',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6877D55B-08F7-4DA3-916B-32A6FD402E06',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Sag.PortMgtError',
            'errorMessage' => 'The role of a management port cannot be changed.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6877D55B-08F7-4DA3-916B-32A6FD402E06\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagManagementPortResponse>\\r\\n    <RequestId>6877D55B-08F7-4DA3-916B-32A6FD402E06</RequestId>\\r\\n</ModifySagManagementPortResponse>","errorExample":""}]',
      'title' => '修改智能接入网关设备管理口配置',
      'summary' => '调用ModifySagManagementPort修改智能接入网关设备管理口配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSagExpressConnectInterface' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'PortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专线端口名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
        4 => 
        array (
          'name' => 'Vlan',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专线子接口所属VLAN编码。

取值范围：**0~4094**。

> - VLAN编码为0时，代表此端口为物理端口，不使用VLAN子接口模式。
- VLAN编码为1~4094时，代表此端口使用基于VLAN的三层子接口。
- 最多支持创建5个VLAN。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'IP',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XX.XX.1',
          ),
        ),
        6 => 
        array (
          'name' => 'Mask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址掩码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '255.255.255.252',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Sag.EccVlanOverLimit',
            'errorMessage' => 'The maximum number of VLANs that can be created for the device is exceeded.',
          ),
          1 => 
          array (
            'errorCode' => 'Sag.EccVlanExist',
            'errorMessage' => 'The specified VLAN already exists.',
          ),
          2 => 
          array (
            'errorCode' => 'Sag.EccVlanDefault',
            'errorMessage' => 'When VLAN 0 exists, other VLANs cannot be created.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateSagExpressConnectInterfaceResponse>\\r\\n    <RequestId>AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545</RequestId>\\r\\n</CreateSagExpressConnectInterfaceResponse>","errorExample":""}]',
      'title' => '创建专线子接口',
      'summary' => '调用CreateSagExpressConnectInterface创建专线子接口。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSagExpressConnectInterface' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。
您可以调用[DescribeRegions](~~69813~~)接口查询智能接入网关支持的地域以及对应的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'PortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专线端口名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
        4 => 
        array (
          'name' => 'Vlan',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专线子接口所属VLAN编码。

取值范围：**0~4094**。

> - VLAN编码为0时，代表此端口为物理端口，不使用VLAN子接口模式。
- VLAN编码为1~4094时，代表此端口使用基于VLAN的三层子接口。
',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteSagExpressConnectInterfaceResponse>\\r\\n    <RequestId>AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545</RequestId>\\r\\n</DeleteSagExpressConnectInterfaceResponse>","errorExample":""}]',
      'title' => '删除专线子接口',
      'summary' => '调用DeleteSagExpressConnectInterface删除专线子接口。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagExpressConnectInterface' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。
您可以调用[DescribeRegions](~~69813~~)接口查询智能接入网关支持的地域以及对应的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'PortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专线端口名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
        4 => 
        array (
          'name' => 'Vlan',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专线子接口所属VLAN编码。

取值范围：**0~4094**。

> - VLAN编码为0时，代表此端口为物理端口，不使用VLAN子接口模式。
- VLAN编码为1~4094时，代表此端口使用基于VLAN的三层子接口。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'IP',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XX.XX.1',
          ),
        ),
        6 => 
        array (
          'name' => 'Mask',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'IP地址掩码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '255.255.255.252',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Sag.EccVlanNotExist',
            'errorMessage' => 'The specified dedicated VLAN does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagExpressConnectInterfaceResponse>\\n    <RequestId>AFF7E5A6-6897-4FDC-A5A8-1978B5B3E545</RequestId>\\n</ModifySagExpressConnectInterfaceResponse>","errorExample":""}]',
      'title' => '修改专线子接口信息',
      'summary' => '调用ModifySagExpressConnectInterface修改专线子接口信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagExpressConnectInterfaceList' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。
您可以调用[DescribeRegions](~~69813~~)接口查询智能接入网关支持的地域以及对应的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'PortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '专线端口名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Interfaces' => 
              array (
                'description' => '接口信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Mask' => 
                    array (
                      'description' => '掩码地址。',
                      'type' => 'string',
                      'example' => '255.255.255.0',
                    ),
                    'Vlan' => 
                    array (
                      'description' => 'VLAN编码。',
                      'type' => 'string',
                      'example' => '2',
                    ),
                    'IP' => 
                    array (
                      'description' => 'IP地址。',
                      'type' => 'string',
                      'example' => '192.XX.XX.1',
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2718F7A6-EA67-41EF-BA39-E9F4A0F5D306',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间。',
                      'type' => 'string',
                      'example' => '1586835287000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Interfaces\\": [\\n    {\\n      \\"Mask\\": \\"255.255.255.0\\",\\n      \\"Vlan\\": \\"2\\",\\n      \\"IP\\": \\"192.XX.XX.1\\"\\n    }\\n  ],\\n  \\"RequestId\\": \\"2718F7A6-EA67-41EF-BA39-E9F4A0F5D306\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586835287000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagExpressConnectInterfaceListResponse>\\n<Interfaces>\\n    <IP>192.XX.XX.1</IP>\\n    <Mask>255.255.255.0</Mask>\\n    <Vlan>0</Vlan>\\n</Interfaces>\\n<RequestId>502682C4-99F2-472A-AD2D-8FDE002E0761</RequestId>\\n<TaskStates>\\n    <State>Succeed</State>\\n    <CreateTime>1586835287000</CreateTime>\\n    <ErrorCode>200</ErrorCode>\\n    <ErrorMessage>Successful</ErrorMessage>\\n</TaskStates>\\n</DescribeSagExpressConnectInterfaceListResponse>","errorExample":""}]',
      'title' => '查询专线子接口',
      'summary' => '调用DescribeSagExpressConnectInterfaceList查询专线子接口。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagHa' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'Mode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'HA模式。取值：

- **NONE**：HA功能不开启。
- **STATIC**：静态模式。
- **DYNAMIC**：动态模式。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'NONE',
          ),
        ),
        4 => 
        array (
          'name' => 'PortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '端口名称。

>如果HA模式选择静态模式，需要输入端口名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
        5 => 
        array (
          'name' => 'VirtualIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '虚IP地址。

>如果HA模式选择静态模式，需要输入虚IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '192.XX.XX.5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3200E8A3-563F-4FFC-8BDB-0F1263FA69E8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Sag.HaPortExist',
            'errorMessage' => 'The specified port is used by the HA configuration.',
          ),
          1 => 
          array (
            'errorCode' => 'Sag.HaPortRoleError',
            'errorMessage' => 'The specified port does not support HA configuration.',
          ),
          2 => 
          array (
            'errorCode' => 'Sag.HaTypeNotAllow',
            'errorMessage' => 'The specified device does not support the configuration of the specified type.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3200E8A3-563F-4FFC-8BDB-0F1263FA69E8\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagHaResponse>\\r\\n   <RequestId>3200E8A3-563F-4FFC-8BDB-0F1263FA69E8</RequestId>\\r\\n</ModifySagHaResponse>","errorExample":""}]',
      'title' => '修改智能接入网关设备高可用（HA）配置',
      'summary' => '调用ModifySagHa修改智能接入网关设备高可用（HA）配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagHa' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '273D62FD-E346-4959-AA18-D79B9276FEFB',
              ),
              'Mode' => 
              array (
                'description' => 'HA模式：

- **NONE**：HA功能未开启。
- **STATIC**：静态模式。
- **DYNAMIC**：动态模式。
',
                'type' => 'string',
                'example' => 'NONE',
              ),
              'Ports' => 
              array (
                'description' => '端口信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'PortName' => 
                    array (
                      'description' => '端口名称。',
                      'type' => 'string',
                      'example' => '5',
                    ),
                    'VirtualIp' => 
                    array (
                      'description' => '智能接入网关的虚拟IP地址。',
                      'type' => 'string',
                      'example' => '192.XX.XX.1',
                    ),
                  ),
                ),
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间。',
                      'type' => 'string',
                      'example' => '1586836343000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Mode\\": \\"NONE\\",\\n  \\"RequestId\\": \\"273D62FD-E346-4959-AA18-D79B9276FEFB\\",\\n  \\"Ports\\": [\\n    {\\n      \\"PortName\\": \\"5\\",\\n      \\"VirtualIp\\": \\"192.XX.XX.1\\"\\n    }\\n  ],\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586836343000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagHaResponse>\\n<RequestId>0EF71E33-011D-45DC-B942-8F1241D931E3</RequestId>\\n<Mode>DYNAMIC</Mode>\\n<TaskStates>\\n    <State>Succeed</State>\\n    <CreateTime>1586836343000</CreateTime>\\n    <ErrorCode>200</ErrorCode>\\n    <ErrorMessage>Successful</ErrorMessage>\\n</TaskStates>\\n</DescribeSagHaResponse>","errorExample":""}]',
      'title' => '查询智能接入网关的高可用配置',
      'summary' => '调用DescribeSagHa查询智能接入网关的高可用配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSmartAccessGatewayHa' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-pno62188piyc6txxxxx',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'DeviceLevelBackupState' => 
              array (
                'description' => '设备级别备份状态。取值：

- **ON**：开启。
- **OFF**：关闭。
',
                'type' => 'string',
                'example' => 'OFF',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '582FE511-FEFE-42BC-BBF4-4F8ECF92Exxx',
              ),
              'BackupDeviceId' => 
              array (
                'description' => '备用设备序列号。',
                'type' => 'string',
                'example' => 'sag11axxxx',
              ),
              'LinkBackupInfoList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'LinkBackupInfoList' => 
                  array (
                    'description' => '链路备份信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MainLinkId' => 
                        array (
                          'description' => '主连接ID。',
                          'type' => 'string',
                          'example' => 'lte',
                        ),
                        'BackupLinkState' => 
                        array (
                          'description' => '备份链路状态。取值：

- **up**：链路可用。
- **down**：链路不可用。',
                          'type' => 'string',
                          'example' => 'down',
                        ),
                        'LinkLevelBackupState' => 
                        array (
                          'description' => '链路级备份状态。取值：

- **ON**：开启。
- **OFF**：关闭。',
                          'type' => 'string',
                          'example' => 'ON',
                        ),
                        'BackupLinkId' => 
                        array (
                          'description' => '备份链路ID。',
                          'type' => 'string',
                          'example' => 'wan1',
                        ),
                        'MainLinkState' => 
                        array (
                          'description' => '主链路状态。取值：

- **up**：可用。
- **down**：不可用。',
                          'type' => 'string',
                          'example' => 'up',
                        ),
                        'LinkLevelBackupType' => 
                        array (
                          'description' => '链路级备份类型。取值：

- **DedicatedLineBackupMode**：专线备份模式。
- **StandbyMode**：双WAN口主备模式。
- **Off**：无备份。',
                          'type' => 'string',
                          'example' => 'StandbyMode',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'SmartAGId' => 
              array (
                'description' => '智能接入网关实例ID。',
                'type' => 'string',
                'example' => 'sag-i8mogwi9kisigc3xxxx',
              ),
              'DeviceLevelBackupType' => 
              array (
                'description' => '设备级别高可用类型。取值：

- **warm_backup**：双机热备。
- **cold_backup**：双机冷备。
- **no_backup**：无备份。',
                'type' => 'string',
                'example' => 'cold_backup',
              ),
              'MainDeviceId' => 
              array (
                'description' => '主设备序列号。',
                'type' => 'string',
                'example' => 'sag11axxxx',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"DeviceLevelBackupState\\": \\"OFF\\",\\n  \\"RequestId\\": \\"582FE511-FEFE-42BC-BBF4-4F8ECF92Exxx\\",\\n  \\"BackupDeviceId\\": \\"sag11axxxx\\",\\n  \\"LinkBackupInfoList\\": {\\n    \\"LinkBackupInfoList\\": [\\n      {\\n        \\"MainLinkId\\": \\"lte\\",\\n        \\"BackupLinkState\\": \\"down\\",\\n        \\"LinkLevelBackupState\\": \\"ON\\",\\n        \\"BackupLinkId\\": \\"wan1\\",\\n        \\"MainLinkState\\": \\"up\\",\\n        \\"LinkLevelBackupType\\": \\"StandbyMode\\"\\n      }\\n    ]\\n  },\\n  \\"SmartAGId\\": \\"sag-i8mogwi9kisigc3xxxx\\",\\n  \\"DeviceLevelBackupType\\": \\"cold_backup\\",\\n  \\"MainDeviceId\\": \\"sag11axxxx\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<DescribeSmartAccessGatewayHaResponse>\\r\\n\\t<SmartAGId>sag-i8mogwi9kisigcxxxx</SmartAGId>\\r\\n\\t<DeviceLevelBackupState>OFF</DeviceLevelBackupState>\\r\\n\\t<LinkBackupInfoList>\\r\\n\\t\\t<LinkBackupInfoList>\\r\\n\\t\\t\\t<LinkLevelBackupType>StandbyMode</LinkLevelBackupType>\\r\\n\\t\\t\\t<MainLinkId>lte</MainLinkId>\\r\\n\\t\\t\\t<BackupLinkState>down</BackupLinkState>\\r\\n\\t\\t\\t<LinkLevelBackupState>ON</LinkLevelBackupState>\\r\\n\\t\\t\\t<BackupLinkId>wan1</BackupLinkId>\\r\\n\\t\\t\\t<MainLinkState>up</MainLinkState>\\r\\n\\t\\t</LinkBackupInfoList>\\r\\n\\t</LinkBackupInfoList>\\r\\n\\t<RequestId>582FE511-FEFE-42BC-BBF4-4F8ECF92E3C6</RequestId>\\r\\n</DescribeSmartAccessGatewayHaResponse>\\r\\n","errorExample":""}]',
      'title' => '查询智能接入网关的高可用配置',
      'summary' => '查询智能接入网关的高可用配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagCurrentDns' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0937DEA0-AB4B-42F4-9314-07B97D30282B',
              ),
              'SlaveDns' => 
              array (
                'description' => '备DNS服务器IP地址。',
                'type' => 'string',
                'example' => '114.XX.XX.114',
              ),
              'MasterDns' => 
              array (
                'description' => '主DNS服务器IP地址。',
                'type' => 'string',
                'example' => '223.XX.XX.5',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0937DEA0-AB4B-42F4-9314-07B97D30282B\\",\\n  \\"SlaveDns\\": \\"114.XX.XX.114\\",\\n  \\"MasterDns\\": \\"223.XX.XX.5\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagCurrentDnsResponse>\\n<RequestId>45AA1C4F-4E04-4B70-84D4-3F24DD64688F</RequestId>\\n<SlaveDns>223.XX.XX.5</SlaveDns>\\n<MasterDns>114.XX.XX.114</MasterDns>\\n</DescribeSagCurrentDnsResponse>","errorExample":""}]',
      'title' => '查询设备当前生效DNS',
      'summary' => '调用DescribeSagCurrentDns接口查询设备当前生效DNS。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagUserDns' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0937DEA0-AB4B-42F4-9314-07B97D30282B',
              ),
              'SlaveDns' => 
              array (
                'description' => '备DNS服务器IP地址。',
                'type' => 'string',
                'example' => '192.XX.XX.2',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间。',
                      'type' => 'string',
                      'example' => '1586852928000',
                    ),
                  ),
                ),
              ),
              'MasterDns' => 
              array (
                'description' => '主DNS服务器IP地址。',
                'type' => 'string',
                'example' => '192.XX.XX.1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0937DEA0-AB4B-42F4-9314-07B97D30282B\\",\\n  \\"SlaveDns\\": \\"192.XX.XX.2\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586852928000\\"\\n    }\\n  ],\\n  \\"MasterDns\\": \\"192.XX.XX.1\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagUserDnsResponse>\\n<RequestId>9D6594D7-F265-47D1-9F41-D4B2A9F9D3BC</RequestId>\\n<SlaveDns>2.XX.XX.2</SlaveDns>\\n<TaskStates>\\n    <State>Succeed</State>\\n    <CreateTime>1586852928000</CreateTime>\\n    <ErrorCode>200</ErrorCode>\\n    <ErrorMessage>Successful</ErrorMessage>\\n</TaskStates>\\n<MasterDns>1.XX.XX.1</MasterDns>\\n</DescribeSagUserDnsResponse>","errorExample":""}]',
      'title' => '查询自定义DNS信息',
      'summary' => '调用DescribeSagUserDns查询自定义DNS信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagUserDns' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'MasterDns',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主DNS服务器IP地址。

> 不设置会清空DNS配置。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '192.XX.XX.1',
          ),
        ),
        4 => 
        array (
          'name' => 'SlaveDns',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备DNS服务器IP地址。

> 不设置会清空备用DNS配置。
',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '192.XX.XX.2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1120228A-E5E1-4E9C-B56D-96887E1A2B2F',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1120228A-E5E1-4E9C-B56D-96887E1A2B2F\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagUserDnsResponse>\\r\\n    <RequestId>1120228A-E5E1-4E9C-B56D-96887E1A2B2F</RequestId>\\r\\n</ModifySagUserDnsResponse>","errorExample":""}]',
      'title' => '修改用户自定义DNS',
      'summary' => '调用ModifySagUserDns修改用户自定义DNS。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagWifi' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备的序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'IsEnable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Wi-Fi功能是否开启。取值： 

- **True**：开启。
- **False**：不开启。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'True',
          ),
        ),
        4 => 
        array (
          'name' => 'SSID',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Wi-Fi名称。

名称长度为1~31个字符，可包含数字、大小写字母。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'aliyun_sag_123456****',
          ),
        ),
        5 => 
        array (
          'name' => 'IsBroadcast',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Wi-Fi广播能力是否打开。取值：

- **True**：开启。
- **False**：不开启。

>开启SSID广播后，无线设备才能搜索到该SSID名称的Wi-Fi信号。
',
            'type' => 'string',
            'required' => false,
            'example' => 'True',
          ),
        ),
        6 => 
        array (
          'name' => 'Channel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '信道。

取值范围：**0~11**。',
            'type' => 'string',
            'required' => false,
            'example' => '0',
          ),
        ),
        7 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '频道带宽。取值：

- **自动**。
- **20MHz**。
- **40MHz**。',
            'type' => 'string',
            'required' => false,
            'example' => '自动',
          ),
        ),
        8 => 
        array (
          'name' => 'IsAuth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '无线安全是否打开。取值：

- **True**：开启。
- **False**：不开启。',
            'type' => 'string',
            'required' => false,
            'example' => 'True',
          ),
        ),
        9 => 
        array (
          'name' => 'AuthenticationType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '认证类型。取值：

- **NONE**。
- **WPA-PSK**。
- **WPA2-PSK**。',
            'type' => 'string',
            'required' => false,
            'example' => 'WPA2-PSK',
          ),
        ),
        10 => 
        array (
          'name' => 'EncryptAlgorithm',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '加密算法。取值：

- **AUTO**：自动加密。
- **TKIP**：临时密钥完整性协议。
- **AES**：Wi-Fi授权的高效加密标准。',
            'type' => 'string',
            'required' => false,
            'example' => 'AUTO',
          ),
        ),
        11 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Wi-Fi密码。

密码长度为8~32位字符，可包含数字、大小写字母。',
            'type' => 'string',
            'required' => false,
            'example' => '12345678',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1120228A-E5E1-4E9C-B56D-96887E1A2B2F',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => ' The specified smart access gateway instance ID does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1120228A-E5E1-4E9C-B56D-96887E1A2B2F\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySagWifiResponse>\\r\\n   <RequestId>1120228A-E5E1-4E9C-B56D-96887E1A2B2F</RequestId>\\r\\n</ModifySagWifiResponse>","errorExample":""}]',
      'title' => '修改智能接入网关设备Wifi配置',
      'summary' => '调用ModifySagWifi接口修改智能接入网关设备Wi-Fi配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagWifi' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-whfn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '绑定的智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'IsEnable' => 
              array (
                'description' => '无线功能是否开启：

- **True**：是。
- **False**：否。',
                'type' => 'string',
                'example' => 'True',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E93884AC-6C21-4FEA-8E3A-7377D33B194F',
              ),
              'IsAuth' => 
              array (
                'description' => '无线安全是否打开：

- **True**：无线安全功能打开。
- **False**：无线安全功能未打开。',
                'type' => 'string',
                'example' => 'True',
              ),
              'Bandwidth' => 
              array (
                'description' => '频谱带宽：

- **自动**。
- **20MHz**。
- **40MHz**。',
                'type' => 'string',
                'example' => '自动',
              ),
              'Channel' => 
              array (
                'description' => '信道。',
                'type' => 'string',
                'example' => '0',
              ),
              'Ssid' => 
              array (
                'description' => 'Wifi名称。',
                'type' => 'string',
                'example' => 'aliyun_sag_123456***',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间。',
                      'type' => 'string',
                      'example' => '1586843621000',
                    ),
                  ),
                ),
              ),
              'AuthenticationType' => 
              array (
                'description' => '认证类型：

- **NONE**：未开启认证。
- **WPA-PSK**：开启WPA-PSK认证。
- **WPA2-PSK**：开启WPA2-PSK认证。',
                'type' => 'string',
                'example' => 'WPA2-PSK',
              ),
              'EncryptAlgorithm' => 
              array (
                'description' => '加密算法：

- **AUTO**：自动加密。
- **TKIP**：临时密钥完整性协议。
- **AES**：WiFi授权的高效加密标准。',
                'type' => 'string',
                'example' => 'AES',
              ),
              'IsBroadcast' => 
              array (
                'description' => 'Wifi广播功能是否打开：

- **True**：Wifi广播功能打开。
- **False**：Wifi广播功能未打开。


',
                'type' => 'string',
                'example' => 'True',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"IsAuth\\": \\"True\\",\\n  \\"Ssid\\": \\"aliyun_sag_123456***\\",\\n  \\"RequestId\\": \\"E93884AC-6C21-4FEA-8E3A-7377D33B194F\\",\\n  \\"Bandwidth\\": \\"自动\\",\\n  \\"AuthenticationType\\": \\"WPA2-PSK\\",\\n  \\"IsEnable\\": \\"True\\",\\n  \\"Channel\\": \\"0\\",\\n  \\"EncryptAlgorithm\\": \\"AES\\",\\n  \\"IsBroadcast\\": \\"True\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586843621000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagWifiResponse>\\n<IsEnable>False</IsEnable>\\n<RequestId>C1ECD42E-B896-487B-8FCD-4A3364D00F21</RequestId>\\n<TaskStates>\\n    <State>Succeed</State>\\n    <CreateTime>1586843621000</CreateTime>\\n    <ErrorCode>200</ErrorCode>\\n    <ErrorMessage>Successful</ErrorMessage>\\n</TaskStates>\\n</DescribeSagWifiResponse>","errorExample":""}]',
      'title' => '获取Wifi配置',
      'summary' => '调用DescribeSagWifi接口获取Wifi配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'BindSerialNumber' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-r79m060r6oy55******',
          ),
        ),
        2 => 
        array (
          'name' => 'SerialNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备的SN号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sage62x021922****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '61C33444-D8C5-4018-A06C-BA8C8812BEF6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.SnOverLimit',
            'errorMessage' => 'The maximum number of serial numbers bound to the SAG instance is exceeded.',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.SnConflict',
            'errorMessage' => 'The specified SerialNumber has been bound to another SAG instance.',
          ),
          4 => 
          array (
            'errorCode' => 'ResourceInOperating',
            'errorMessage' => 'The specified resource is being used. Please try later.',
          ),
          5 => 
          array (
            'errorCode' => 'SAG.InvalidSerialNumber',
            'errorMessage' => 'The specified SerialNumber is invalid.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"61C33444-D8C5-4018-A06C-BA8C8812BEF6\\"\\n}","errorExample":""},{"type":"xml","example":"<BindSerialNumberResponse>\\r\\n<RequestId>61C33444-D8C5-4018-A06C-BA8C8812BEF6</RequestId>\\r\\n</BindSerialNumberResponse>","errorExample":""}]',
      'title' => '将硬件设备绑定到实例',
      'summary' => '将智能接入网关硬件设备绑定到智能接入网关实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnbindSerialNumber' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-0phdojgu5tqr1p****',
          ),
        ),
        2 => 
        array (
          'name' => 'SerialNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备的SN号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-sh-0-0927-16****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '284045DE-4C2D-463D-9F27-B6898E67D120',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.InvalidSerialNumber',
            'errorMessage' => 'The specified SerialNumber is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"284045DE-4C2D-463D-9F27-B6898E67D120\\"\\n}","errorExample":""},{"type":"xml","example":"<UnbindSerialNumberResponse>\\r\\n<RequestId>284045DE-4C2D-463D-9F27-B6898E67D120</RequestId>\\r\\n</UnbindSerialNumberResponse>","errorExample":""}]',
      'title' => '解绑智能接入网关实例关联的硬件设备',
      'summary' => '调用UnbindSerialNumber解绑智能接入网关实例关联的硬件设备。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ActivateSmartAccessGateway' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-ke3kq4evpi8p6******',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E223E535-AE11-4158-B00F-DC107887A909',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayActivateFailed',
            'errorMessage' => 'An error has occurred while activating the specified Smart Access Gateway.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E223E535-AE11-4158-B00F-DC107887A909\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <ActivateSmartAccessGatewayResponse>\\r\\n\\t<RequestId>E223E535-AE11-4158-B00F-DC107887A909</RequestId>\\r\\n    </ActivateSmartAccessGatewayResponse>","errorExample":""}]',
      'title' => '激活智能接入网关设备',
      'summary' => '调用ActivateSmartAccessGateway激活智能接入网关设备。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SynchronizeSmartAGWebConfig' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-nylv14tghsk26c****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CBBE5EBF-69C1-4395-B36B-26B7605F87EA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupportFeature',
            'errorMessage' => 'The specified SAG Software instance does not support this feature.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CBBE5EBF-69C1-4395-B36B-26B7605F87EA\\"\\n}","errorExample":""},{"type":"xml","example":"<SynchronizeSmartAGWebConfigResponse>\\r\\n    <RequestId>CBBE5EBF-69C1-4395-B36B-26B7605F87EA</RequestId>\\r\\n</SynchronizeSmartAGWebConfigResponse>","errorExample":""}]',
      'title' => '同步智能接入网关设备配置到云上',
      'summary' => '调用SynchronizeSmartAGWebConfig同步智能接入网关设备配置到云上。',
      'description' => '**SynchronizeSmartAGWebConfig**接口属于异步接口，即系统返回一个请求ID，但该智能接入网关设备尚未同步到云上，系统后台的同步任务仍在进行。您可以调用[DescribeSAGDeviceInfo](~~164279~~)查询智能接入网关设备的同步状态：
- 当智能接入网关设备处于**Synchronizing**状态时，表示智能接入网关设备正在同步中。
- 当智能接入网关设备处于**Synchronized**状态时，表示智能接入网关设备同步成功。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySAGAdminPassword' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-tq3sazs17smldn****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag32a30****',
          ),
        ),
        3 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备新的登录密码。

密码格式要求：密码长度为8~30个字符，可包含大小写字母、数字和下划线（_）。

> 示例值中使用星号（\\*）以掩盖真实密码，不表示密码支持使用星号（\\*），输入密码时请以密码格式要求为准。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '********',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DB0A026C-A8E5-40AB-977E-3A87DD78F694',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.Password',
            'errorMessage' => 'The specified Password is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParam.Password',
            'errorMessage' => 'You must specify Password.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          4 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupportFeature',
            'errorMessage' => 'The specified SAG Software instance does not support this feature.',
          ),
          5 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          6 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          7 => 
          array (
            'errorCode' => 'SmartAccessGatewayOffline',
            'errorMessage' => 'The request cannot be completed. The Smart Access Gateway is offline.',
          ),
          8 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          9 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The network configuration is not synchronized.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DB0A026C-A8E5-40AB-977E-3A87DD78F694\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySAGAdminPasswordResponse>\\n    <RequestId>DB0A026C-A8E5-40AB-977E-3A87DD78F694</RequestId>\\n</ModifySAGAdminPasswordResponse>","errorExample":""}]',
      'title' => '修改 SAG 管理员密码',
      'summary' => '调用ModifySAGAdminPassword接口修改智能接入网关设备的登录密码。',
    ),
    'RebootSmartAccessGateway' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-w9unmktmupcde*****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        2 => 
        array (
          'name' => 'SerialNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '硬件序列号。',
            'type' => 'string',
            'required' => false,
            'example' => 'a1b2c3d4e****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B1792769-5CC3-4D6F-A5A5-E6408EBFBAD0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B1792769-5CC3-4D6F-A5A5-E6408EBFBAD0\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<RebootSmartAccessGatewayResponse>\\r\\n\\t<requestId>B1792769-5CC3-4D6F-A5A5-E6408EBFBAD0</requestId>\\r\\n</RebootSmartAccessGatewayResponse>","errorExample":""}]',
      'title' => '重启智能接入网关实例',
      'summary' => '重启智能接入网关实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UnlockSmartAccessGateway' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-w9unmktmupcde*****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '05DC546B-DBF9-4028-88CD-1742AB4E014C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"05DC546B-DBF9-4028-88CD-1742AB4E014C\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<UnlockSmartAccessGatewayResponse>\\r\\n\\t<RequestId>05DC546B-DBF9-4028-88CD-1742AB4E014C</RequestId>\\r\\n</UnlockSmartAccessGatewayResponse>","errorExample":""}]',
      'title' => '解锁智能接入网关实例',
      'summary' => '解锁智能接入网关实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySagRemoteAccess' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-r79m060r6oy55******',
          ),
        ),
        1 => 
        array (
          'name' => 'SerialNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-100-v1p7-9',
          ),
        ),
        2 => 
        array (
          'name' => 'RemoteAccessIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '远程访问IP。',
            'type' => 'string',
            'required' => false,
            'example' => '10.10.10.2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SerialNumber' => 
              array (
                'description' => '智能接入网关的设备SN号。',
                'type' => 'string',
                'example' => 'sag61a344**',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4FF203D7-462D-498E-94F9-2B2FA462DD23',
              ),
              'Message' => 
              array (
                'description' => '接口调用返回的信息。',
                'type' => 'string',
                'example' => 'Successful',
              ),
              'RemoteAccessIp' => 
              array (
                'description' => '远程访问IP。',
                'type' => 'string',
                'example' => '10.10.10.2',
              ),
              'Code' => 
              array (
                'description' => '返回的状态码。',
                'type' => 'string',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '接口调用是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'VersionNotExist',
            'errorMessage' => 'The specified version does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
          4 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalRemoteIp.Conflict',
            'errorMessage' => 'The specified IP address has been used.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalRemoteIp.RouteTableEntryConflict',
            'errorMessage' => 'The specified IP address conflicts with route table entries.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"SerialNumber\\": \\"sag61a344**\\",\\n  \\"RemoteAccessIp\\": \\"10.10.10.2\\",\\n  \\"RequestId\\": \\"4FF203D7-462D-498E-94F9-2B2FA462DD23\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <ModifySagRemoteAccessResponse>\\r\\n\\t<RemoteAccessIp>10.10.10.2</RemoteAccessIp>\\r\\n\\t<SerialNumber>sag61a344ge</SerialNumber>\\r\\n\\t<Message>Successful</Message>\\r\\n\\t<RequestId>4FF203D7-462D-498E-94F9-2B2FA462DD23</RequestId>\\r\\n\\t<Success>true</Success>\\r\\n\\t<Code>200</Code>\\r\\n    </ModifySagRemoteAccessResponse>","errorExample":""}]',
      'title' => '修改智能接入网关设备的远程访问IP',
      'summary' => '调用ModifySagRemoteAccess修改智能接入网关设备的远程访问IP。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagRemoteAccess' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-1um5x5nwhilymw****',
          ),
        ),
        1 => 
        array (
          'name' => 'SerialNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'sage62x022502****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '错误码。200标识查询任务成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '错误信息。Successful标识查询任务成功。',
                'type' => 'string',
                'example' => 'successful',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E38E950D-28A4-4C41-9428-A8908EC6AE5C',
              ),
              'Success' => 
              array (
                'description' => '标识查询任务是否成功。

- **true**：表示查询任务成功。
- **false**：表示查询任务未成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'SmartAGId' => 
              array (
                'description' => '智能接入网关实例ID。',
                'type' => 'string',
                'example' => 'sag-1um5x5nwhilymw****',
              ),
              'RemoteAccesses' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'RemoteAccess' => 
                  array (
                    'description' => '智能接入网关设备远程登录信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SerialNumber' => 
                        array (
                          'description' => '智能接入网关设备序列号。',
                          'type' => 'string',
                          'example' => 'sage62x022502****',
                        ),
                        'RemoteAccessIp' => 
                        array (
                          'description' => '远程登录私网IP地址。',
                          'type' => 'string',
                          'example' => '192.XX.XX.1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InstanceNotExit',
            'errorMessage' => 'The specified instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.SN',
            'errorMessage' => 'The specified smart access gateway serial number does not exist.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"successful\\",\\n  \\"RequestId\\": \\"E38E950D-28A4-4C41-9428-A8908EC6AE5C\\",\\n  \\"Success\\": true,\\n  \\"SmartAGId\\": \\"sag-1um5x5nwhilymw****\\",\\n  \\"RemoteAccesses\\": {\\n    \\"RemoteAccess\\": [\\n      {\\n        \\"SerialNumber\\": \\"sage62x022502****\\",\\n        \\"RemoteAccessIp\\": \\"192.XX.XX.1\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSagRemoteAccessResponse>\\n<SmartAGId>sag-kxe2cv7hot7qrv****</SmartAGId>\\n<RemoteAccesses>\\n    <RemoteAccess>\\n        <RemoteAccessIp/>\\n        <SerialNumber>sage62x022502****</SerialNumber>\\n    </RemoteAccess>\\n</RemoteAccesses>\\n<Message>successful</Message>\\n<RequestId>2E2A56D0-D2BD-4D0B-9314-D355A5C67EBA</RequestId>\\n<Success>true</Success>\\n<Code>200</Code>\\n</DescribeSagRemoteAccessResponse>","errorExample":""}]',
      'title' => '查询智能接入网关设备远程登录信息',
      'summary' => '调用DescribeSagRemoteAccess查询智能接入网关设备远程登录信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyDeviceAutoUpgradePolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-1um5x5nwhilymw****',
          ),
        ),
        2 => 
        array (
          'name' => 'SerialNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sage62x022502****',
          ),
        ),
        3 => 
        array (
          'name' => 'CronExpression',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级开始时间。升级开始时间使用cron表达式。

例如：`0 0 4 1/1 * ?`表示从每月第一天上午4时开始，每天的上午4时执行升级操作。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '0 0 4 1/1 * ?',
          ),
        ),
        4 => 
        array (
          'name' => 'UpgradeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级类型。取值：

- **scheduled**：定时升级。
- **boot**：开机自动升级。
- **manual**：手动升级。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'scheduled',
          ),
        ),
        5 => 
        array (
          'name' => 'Duration',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '升级时间段。取值范围：**30~120**。

单位：分钟。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'maximum' => '300',
            'minimum' => '30',
            'example' => '30',
          ),
        ),
        6 => 
        array (
          'name' => 'TimeZone',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '时区。取值：

**Asia/Shanghai** ：中国标准时间（北京）

**Asia/Hong_Kong** ：中国香港时间

**Asia/Tokyo** ：日本时间（东京）

**Australia/Sydney** ：澳洲时间（悉尼）

**Asia/Kuala_Lumpur** ：马来西亚时间（吉隆坡）

**Europe/Berlin** ：德国时间（柏林）

**Asia/Singapore** ：新加坡时间

**Asia/Jakarta** ：印度尼西亚时间（雅加达）
',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'Asia/Shanghai',
            'default' => 'Asia/Shanghai',
          ),
        ),
        7 => 
        array (
          'name' => 'VersionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要修改升级策略的软件类型。取值：

- **Device**：表示智能接入网关设备运行的操作系统软件。
- **Dpi**：表示智能接入网关设备运行的应用特征库软件。',
            'type' => 'string',
            'required' => false,
            'example' => 'Device',
            'default' => 'Device',
            'enum' => 
            array (
              0 => 'Device',
              1 => 'Dpi',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F03C6897-2284-4BC8-94B4-1467BD992A2D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InvalidSerialNumber',
            'errorMessage' => 'The specified SerialNumber is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F03C6897-2284-4BC8-94B4-1467BD992A2D\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyDeviceAutoUpgradePolicyResponse>\\r\\n<RequestId>F03C6897-2284-4BC8-94B4-1467BD992A2D</RequestId>\\r\\n</ModifyDeviceAutoUpgradePolicyResponse>","errorExample":""}]',
      'title' => '修改智能接入网关设备的自动升级策略',
      'summary' => '调用ModifyDeviceAutoUpgradePolicy修改智能接入网关设备软件的升级策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateSmartAccessGatewayVersion' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-0ovhf732a9j*******',
          ),
        ),
        1 => 
        array (
          'name' => 'VersionCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要升级的智能接入网关的版本。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1.0.1',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'SerialNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => false,
            'example' => 'sag233****',
          ),
        ),
        4 => 
        array (
          'name' => 'VersionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定要升级的软件版本类型。取值：

- **Device**：表示智能接入网关设备运行的操作系统软件。
- **Dpi**：表示智能接入网关设备运行的应用特征库软件。',
            'type' => 'string',
            'required' => false,
            'example' => 'Device',
            'default' => 'Device',
            'enum' => 
            array (
              0 => 'Device',
              1 => 'Dpi',
            ),
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CE6642D4-21EB-4168-9BF9-F217953F9892',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'NotBoundCCN',
            'errorMessage' => 'The specified smart access gateway has not bound CCN; please bind CCN first.',
          ),
          3 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified smart access gateway is not online.',
          ),
          4 => 
          array (
            'errorCode' => 'GetSmartAccessGatewayVersionError',
            'errorMessage' => 'An error occurred while obtaining the smart access gateway version.',
          ),
          5 => 
          array (
            'errorCode' => 'GetSmartAccessGatewayStateError',
            'errorMessage' => 'An error occurred while obtaining the smart access gateway status.',
          ),
          6 => 
          array (
            'errorCode' => 'VersionTooOld',
            'errorMessage' => 'The specified version is outdated; please select a newer version.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'PermissionError',
            'errorMessage' => 'No permission to operate the instance.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CE6642D4-21EB-4168-9BF9-F217953F9892\\"\\n}","errorExample":"{\\n   \\"RequestId\\":\\"CE6642D4-21EB-4168-9BF9-F217953F9892\\"\\n}"},{"type":"xml","example":"<UpdateSmartAccessGatewayVersionResponse>\\r\\n<RequestId>CE6642D4-21EB-4168-9BF9-F217953F9892</RequestId>\\r\\n</UpdateSmartAccessGatewayVersionResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<UpdateSmartAccessGatewayVersionResponse>\\n  <RequestId>CE6642D4-21EB-4168-9BF9-F217953F9892</RequestId>\\n</UpdateSmartAccessGatewayVersionResponse>"}]',
      'title' => '升级智能接入网关的软件版本',
      'summary' => '调用UpdateSmartAccessGatewayVersion升级智能接入网关设备的软件版本。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySmartAccessGateway' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-0ovhf732a9j0******',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关的名称。 

长度为2~128个字符，必须以字母或中文开头，可包含数字，点号（.），下划线（_）和短横线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'SAG',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关的描述。 

长度为2~256个字符，必须以字母或中文开头，但不能以`http:// `或` https:/`/开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'SAG描述',
          ),
        ),
        3 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '线下机构客户端用来通信的私网网段，确保各私网网段不冲突。 

如果智能接入网关终端设备的LAN口配置为动态方式，则线下已开启DHCP的客户端使用的IP地址会从您指定的第一个私网网段中分配。 ',
            'type' => 'string',
            'required' => false,
            'example' => '172.16.0.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关的所属区域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        5 => 
        array (
          'name' => 'SecurityLockThreshold',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '离线锁定功能用户设定的阈值，大于等于0。

单位：秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '2147483647',
            'minimum' => '0',
            'example' => '3',
          ),
        ),
        6 => 
        array (
          'name' => 'RoutingStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '线下路由同步方式：

- **static**：静态路由。

- **dynamic**：动态路由。',
            'type' => 'string',
            'required' => false,
            'example' => 'static',
          ),
        ),
        7 => 
        array (
          'name' => 'Position',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关所部署的位置。',
            'type' => 'string',
            'required' => false,
            'example' => '[     {         "adcode":"",         "label":"浙江省杭州市xx区xx路xx号",         "value":"B0FFGxxxx",         "center":"120.190xxxx, 30.182xxxx",         "_new":"true"     } ]',
          ),
        ),
        8 => 
        array (
          'name' => 'EnableSoftwareConnectionAudit',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启SAG App连接日志审计。

- **true**：开启SAG App连接日志审计。

- **false**：关闭SAG App连接日志审计。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CE6642D4-21EB-4168-9BF9-F217953F9892',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.IpCountTooLittle',
            'errorMessage' => 'The number of available IP addresses of the CIDR block is fewer than the number of SslConnectionSpec.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.SslConnectionSpecInvalid',
            'errorMessage' => 'The number of SslConnectionSpec is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.CcnCidrNoConfig',
            'errorMessage' => 'You must configure the CIDR block of CCN.',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.CidrEmpty',
            'errorMessage' => 'You must specify the CIDR blocks of SAG.',
          ),
          4 => 
          array (
            'errorCode' => 'SAG.ConflictCidr.CcnSnatCidr',
            'errorMessage' => 'The SAG CIDR block is in conflict with the CCN CIDR block.',
          ),
          5 => 
          array (
            'errorCode' => 'SAG.ConflictSnatIp',
            'errorMessage' => 'The specified SNAT IP address is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          7 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          8 => 
          array (
            'errorCode' => 'SAG.InvalidCidr',
            'errorMessage' => 'The specified CIDR block is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'SAG.InvalidCidr.NoBelongCcnCidr',
            'errorMessage' => 'The specified SAG CIDR block does not belong to the CCN CIDR block.',
          ),
          10 => 
          array (
            'errorCode' => 'SAG.InvalidSnatCidr',
            'errorMessage' => 'The specified SNAT CIDR block is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'SAG.InvalidSnatIp',
            'errorMessage' => 'The specified SNAT IP address is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'CCN.CidrEmpty',
            'errorMessage' => 'You must specify the CCN CIDR block.',
          ),
          13 => 
          array (
            'errorCode' => 'CCN.SnatCidrConflict',
            'errorMessage' => 'The specified SNAT CIDR block is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'ActionNotSupport',
            'errorMessage' => 'The specified instance does not support this action.',
          ),
          15 => 
          array (
            'errorCode' => 'CCN.SnatCidrNoConfig',
            'errorMessage' => 'You must configure the SNAT CIDR block of the CCN.',
          ),
          16 => 
          array (
            'errorCode' => 'SAG.CidrUsedByRoutableAddress',
            'errorMessage' => 'A routable internal IP address belongs to the specified internal CIDR block. You cannot modify this CIDR block.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified name is invalid.',
          ),
          18 => 
          array (
            'errorCode' => 'SAG.CidrAmountLimit',
            'errorMessage' => 'The maximum number of static routes for the SAG instance is exceeded.',
          ),
          19 => 
          array (
            'errorCode' => 'SAG.InvalidCidrFormat',
            'errorMessage' => 'The specified CIDR format is invalid.',
          ),
          20 => 
          array (
            'errorCode' => 'SAG.CidrOverlap',
            'errorMessage' => 'The specified CIDR overlaps with an existing CIDR.',
          ),
          21 => 
          array (
            'errorCode' => 'SAG.Arrearage',
            'errorMessage' => 'The specified SAG instance has overdue payments. Renew the instance first.',
          ),
          22 => 
          array (
            'errorCode' => 'SAG.NoActive',
            'errorMessage' => 'The specified SAG instance has not been activated.',
          ),
          23 => 
          array (
            'errorCode' => 'SAG.NotAllowConfigCidr',
            'errorMessage' => 'You cannot specify a static CIDR block when the dynamic routing strategy is used.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'CidrConflict',
            'errorMessage' => 'Cidr is conflict, Please Check your input.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidCidr',
            'errorMessage' => 'Cidr is illegal, please check your input.',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          5 => 
          array (
            'errorCode' => 'VbrConflict.ChangeSubnet',
            'errorMessage' => 'The subnet of the gateway conflicts with the VBR. Modify the subnet first.',
          ),
          6 => 
          array (
            'errorCode' => 'VbrConflict.CreateBackup',
            'errorMessage' => 'The subnet of the gateway conflicts with the VBR. Create a backup relationship first.',
          ),
          7 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotBind',
            'errorMessage' => 'The instance has not yet been bound.',
          ),
          8 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
        ),
        500 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAccessGatewayInArrears',
            'errorMessage' => 'The specified Smart Access Gateway has expired.',
          ),
          1 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          2 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An error occurred while processing your request.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CE6642D4-21EB-4168-9BF9-F217953F9892\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySmartAccessGatewayResponse>\\n    <RequestId>CE6642D4-21EB-4168-9BF9-F217953F9892</RequestId>\\n</ModifySmartAccessGatewayResponse>","errorExample":""}]',
      'title' => '修改智能接入网关的配置',
      'summary' => '调用ModifySmartAccessGateway修改智能接入网关的配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySmartAccessGatewayUpBandwidth' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-jsy******************',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所在的地域。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'UpBandwidthWan',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关WAN口最大上行带宽。单位：Mbps。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        3 => 
        array (
          'name' => 'UpBandwidth4G',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关4G公网最大上行带宽。单位：Mbps。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EE837E9F-BD50-4C2B-9E47-260F9D848480',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'The specified name is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.NotAllowConfigCidr',
            'errorMessage' => 'You cannot specify a static CIDR block when the dynamic routing strategy is used.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'The specified description is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.InvalidRoutingStrategy',
            'errorMessage' => 'The specified routing strategy is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidCidr',
            'errorMessage' => 'Cidr is illegal, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"EE837E9F-BD50-4C2B-9E47-260F9D848480\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <ModifySmartAccessGatewayUpBandwidthResponse>\\r\\n\\t<RequestId>68CE10C0-2EFF-4B82-9907-10AB7E2B0A6C</RequestId>\\r\\n    </ModifySmartAccessGatewayUpBandwidthResponse>","errorExample":""}]',
      'title' => '修改智能接入网关参数实例',
      'summary' => '修改智能接入网关参数实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ClearSagRouteableAddress' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例的地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-0phdojgu5tqr1p****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AEEC8A5A-360E-4865-82D4-38CDE46445FB',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AEEC8A5A-360E-4865-82D4-38CDE46445FB\\"\\n}","errorExample":""},{"type":"xml","example":"<ClearSagRouteableAddressResponse>\\r\\n<RequestId>AEEC8A5A-360E-4865-82D4-38CDE46445FB</RequestId>\\r\\n</ClearSagRouteableAddressResponse>","errorExample":""}]',
      'title' => '清除智能接入网关实例的可路由地址',
      'summary' => '清除智能接入网关实例的可路由地址。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ClearSagCipher' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-0nnteglltw6z4b****',
          ),
        ),
        2 => 
        array (
          'name' => 'SnNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关（VCPE）设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag42c3****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3712F0B2-721E-4FBF-BBEF-888E3BFE0A20',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3712F0B2-721E-4FBF-BBEF-888E3BFE0A20\\"\\n}","errorExample":""},{"type":"xml","example":"<ClearSagCipherResponse>\\r\\n<RequestId>69E19A6D-8114-4D57-94A0-14CC7CA578C8</RequestId>\\r\\n</ClearSagCipherResponse>","errorExample":""}]',
      'title' => '重置智能接入网关（VCPE）设备密钥',
      'summary' => '重置智能接入网关（VCPE）设备密钥。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DiagnoseSmartAccessGateway' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-1um5x5nwhilymw****',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sage62x022502****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '193AE392-76C2-4D3E-9420-889A51B43CC0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"193AE392-76C2-4D3E-9420-889A51B43CC0\\"\\n}","errorExample":""},{"type":"xml","example":"<DiagnoseSmartAccessGatewayResponse>\\r\\n<RequestId>193AE392-76C2-4D3E-9420-889A51B43CC0</RequestId>\\r\\n</DiagnoseSmartAccessGatewayResponse>","errorExample":""}]',
      'title' => '开启智能接入网关设备诊断',
      'summary' => '开启智能接入网关设备诊断。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DiscribeSmartAccessGatewayDiagnosisReport' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-1um5x5nwhilymw****',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGSn',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sage62x022502****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '诊断结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D7D6E3AB-D41A-42E3-8D4E-97B145F4B7C3',
              ),
              'DiagnoseResult' => 
              array (
                'description' => '智能接入网关设备诊断报告。',
                'type' => 'object',
                'properties' => 
                array (
                  'Percent' => 
                  array (
                    'description' => '诊断报告完成度百分比。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '100',
                  ),
                  'SN' => 
                  array (
                    'description' => '智能接入网关设备序列号。',
                    'type' => 'string',
                    'example' => 'sag42c3****',
                  ),
                  'DiagnoseId' => 
                  array (
                    'description' => '诊断ID。',
                    'type' => 'string',
                    'example' => 'dia-sag42c3t703trh02olv5rf****',
                  ),
                  'State' => 
                  array (
                    'description' => '诊断状态。

- **processing**：诊断进行中。
- **finished**：诊断成功。
- **failed**：诊断失败。
- **error**：诊断过程出现错误。
- **upload_to_sls_fail**：诊断报告上传失败。
',
                    'type' => 'string',
                    'example' => 'finished',
                  ),
                  'UserLevel' => 
                  array (
                    'description' => '发起诊断的用户类型。取值：**user**。',
                    'type' => 'string',
                    'example' => 'user',
                  ),
                  'BoxVersion' => 
                  array (
                    'description' => '智能接入网关设备运行的软件版本。',
                    'type' => 'string',
                    'example' => '2.1.0',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '智能接入网关实例ID。',
                    'type' => 'string',
                    'example' => 'sag-0nnteglltw6z4b***',
                  ),
                  'BoxType' => 
                  array (
                    'description' => '智能接入网关设备类型。

- **sag-1000**
- **sag-100WM**',
                    'type' => 'string',
                    'example' => 'sag-1000',
                  ),
                  'MonitorVersion' => 
                  array (
                    'description' => '智能接入网关设备使用的监控版本。',
                    'type' => 'string',
                    'example' => '2.0.2.9',
                  ),
                  'FinishedNumber' => 
                  array (
                    'description' => '已完成的诊断项个数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '15',
                  ),
                  'Details' => 
                  array (
                    'description' => '诊断结果信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '诊断结果详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Type' => 
                        array (
                          'description' => '诊断类型。

- **config**：SAG配置。
- **internet**：全网质量。
- **biz**：业务质量。',
                          'type' => 'string',
                          'example' => 'config',
                        ),
                        'Items' => 
                        array (
                          'description' => '诊断项详细信息列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '诊断项详细信息。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Type' => 
                              array (
                                'description' => '诊断项所属诊断类型。

- **config**：SAG配置。
- **internet**：全网质量。
- **biz**：业务质量。',
                                'type' => 'string',
                                'example' => 'config',
                              ),
                              'EndTime' => 
                              array (
                                'description' => '诊断项诊断结束时间戳。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1602741570596',
                              ),
                              'StartTime' => 
                              array (
                                'description' => '诊断项诊断开始时间戳。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '1602741570567',
                              ),
                              'CN' => 
                              array (
                                'description' => '中文版诊断结果。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Advice' => 
                                  array (
                                    'description' => '诊断建议。',
                                    'type' => 'array',
                                    'items' => 
                                    array (
                                      'description' => '诊断建议。',
                                      'type' => 'string',
                                      'example' => '请先检查专线端口链路接线，然后进入本地“专线管理”页面进行配置。',
                                    ),
                                  ),
                                  'ItemName' => 
                                  array (
                                    'description' => '诊断项名称。',
                                    'type' => 'string',
                                    'example' => '专线口配置检查',
                                  ),
                                  'ItemLevel' => 
                                  array (
                                    'description' => '诊断项的诊断结果等级。

- **严重**：标识该诊断项问题可能会影响业务运行，建议优先处理。
- **警告**：标识该诊断项有问题，请依据建议酌情处理。
- **正常**：标识该诊断项正常运行，无需任何操作。',
                                    'type' => 'string',
                                    'example' => '正常',
                                  ),
                                  'ItemType' => 
                                  array (
                                    'description' => '诊断项所属诊断类型。

- **配置**：标识属于**SAG配置**类型。
- **业务**：标识属于**业务质量**类型。
- **公网**：标识属于**全网质量**类型。',
                                    'type' => 'string',
                                    'example' => '配置',
                                  ),
                                  'Details' => 
                                  array (
                                    'description' => '诊断结果',
                                    'type' => 'array',
                                    'items' => 
                                    array (
                                      'description' => '诊断结果。',
                                      'type' => 'string',
                                      'example' => '所有专线端口存在链路异常或缺少端口IP：端口4',
                                    ),
                                  ),
                                ),
                              ),
                              'ItemName' => 
                              array (
                                'description' => '诊断项名称，为诊断项唯一标识。',
                                'type' => 'string',
                                'example' => 'eccConfigCheck',
                              ),
                              'EN' => 
                              array (
                                'description' => '英文版诊断结果。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Advice' => 
                                  array (
                                    'description' => '诊断建议。',
                                    'type' => 'array',
                                    'items' => 
                                    array (
                                      'description' => '诊断建议。',
                                      'type' => 'string',
                                      'example' => 'Check the physical connections to all Express connect ports and configure these ports on the \'Physical connection port\' page.',
                                    ),
                                  ),
                                  'ItemName' => 
                                  array (
                                    'description' => '诊断项名称。',
                                    'type' => 'string',
                                    'example' => 'Express Connect Port Configuration',
                                  ),
                                  'ItemLevel' => 
                                  array (
                                    'description' => '诊断项的诊断结果等级。

- **ERROR**：标识该诊断项问题可能会影响业务运行，建议优先处理。
- **WARNING**：标识该诊断项有问题，请依据建议酌情处理。
- **INFO**：标识该诊断项正常运行，无需任何操作。',
                                    'type' => 'string',
                                    'example' => 'ERROR',
                                  ),
                                  'ItemType' => 
                                  array (
                                    'description' => '诊断项所属诊断类型。

- **Config**：标识属于**SAG配置**类型。
- **Service**：标识属于**业务质量**类型。
- **Internet**：标识属于**全网质量**类型。',
                                    'type' => 'string',
                                    'example' => 'Config',
                                  ),
                                  'Details' => 
                                  array (
                                    'description' => '诊断结果。',
                                    'type' => 'array',
                                    'items' => 
                                    array (
                                      'description' => '诊断结果。',
                                      'type' => 'string',
                                      'example' => 'The connection states of all Express connect ports are down and no IP address is specified for these ports: Port4',
                                    ),
                                  ),
                                ),
                              ),
                              'Level' => 
                              array (
                                'description' => '诊断项诊断结果等级。

- **error**：严重。
- **warning**：警告。
- **info**：正常。',
                                'type' => 'string',
                                'example' => 'error',
                              ),
                            ),
                          ),
                        ),
                        'Statistics' => 
                        array (
                          'description' => '当前诊断类型下的诊断项等级统计信息列表。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Warning' => 
                            array (
                              'description' => '诊断结果等级为**警告**的诊断项数量。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '2',
                            ),
                            'Error' => 
                            array (
                              'description' => '诊断结果等级为**严重**的诊断项数量。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '5',
                            ),
                            'Total' => 
                            array (
                              'description' => '当前诊断类型下的诊断项总数。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '10',
                            ),
                            'Info' => 
                            array (
                              'description' => '诊断结果等级为**正常**的诊断项数量。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '3',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'UId' => 
                  array (
                    'description' => '智能接入网关实例所属账号ID。',
                    'type' => 'string',
                    'example' => '1688000000000000',
                  ),
                  'EndTime' => 
                  array (
                    'description' => '诊断结束时间戳。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '160274157',
                  ),
                  'StartTime' => 
                  array (
                    'description' => '诊断开始时间戳。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '160274157',
                  ),
                  'StoreType' => 
                  array (
                    'description' => '存储类型。

取值：**both**，表示同时存储在智能接入网关设备和日志服务SLS（Log Service）中。',
                    'type' => 'string',
                    'example' => 'both',
                  ),
                  'ReportSLSSuccess' => 
                  array (
                    'description' => '诊断报告上传至SLS中的状态。

- **0**：上传失败。
- **1**：上传成功。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'TotalNumber' => 
                  array (
                    'description' => '诊断结果条目总数。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '15',
                  ),
                  'Level' => 
                  array (
                    'description' => '诊断结果等级。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Configuration' => 
                      array (
                        'description' => 'SAG配置诊断结果等级。',
                        'type' => 'string',
                        'example' => 'info',
                      ),
                      'Total' => 
                      array (
                        'description' => '整体诊断结果等级。

- **error**：严重。
- **warning**：警告。
- **info**：正常。',
                        'type' => 'string',
                        'example' => 'error',
                      ),
                      'Biz' => 
                      array (
                        'description' => '业务质量诊断结果等级。',
                        'type' => 'string',
                        'example' => 'warning',
                      ),
                    ),
                  ),
                  'Statistics' => 
                  array (
                    'description' => '整体诊断项结果统计信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Warning' => 
                      array (
                        'description' => '诊断结果等级为**警告**的诊断项总数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3',
                      ),
                      'Error' => 
                      array (
                        'description' => '诊断结果等级为**严重**的诊断项总数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '2',
                      ),
                      'Total' => 
                      array (
                        'description' => '全部诊断项总数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '10',
                      ),
                      'Info' => 
                      array (
                        'description' => '诊断结果等级为**正常**的诊断项总数量。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '5',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D7D6E3AB-D41A-42E3-8D4E-97B145F4B7C3\\",\\n  \\"DiagnoseResult\\": {\\n    \\"Percent\\": 100,\\n    \\"SN\\": \\"sag42c3****\\",\\n    \\"DiagnoseId\\": \\"dia-sag42c3t703trh02olv5rf****\\",\\n    \\"State\\": \\"finished\\",\\n    \\"UserLevel\\": \\"user\\",\\n    \\"BoxVersion\\": \\"2.1.0\\",\\n    \\"InstanceId\\": \\"sag-0nnteglltw6z4b***\\",\\n    \\"BoxType\\": \\"sag-1000\\",\\n    \\"MonitorVersion\\": \\"2.0.2.9\\",\\n    \\"FinishedNumber\\": 15,\\n    \\"Details\\": [\\n      {\\n        \\"Type\\": \\"config\\",\\n        \\"Items\\": [\\n          {\\n            \\"Type\\": \\"config\\",\\n            \\"EndTime\\": 1602741570596,\\n            \\"StartTime\\": 1602741570567,\\n            \\"CN\\": {\\n              \\"Advice\\": [\\n                \\"请先检查专线端口链路接线，然后进入本地“专线管理”页面进行配置。\\"\\n              ],\\n              \\"ItemName\\": \\"专线口配置检查\\",\\n              \\"ItemLevel\\": \\"正常\\",\\n              \\"ItemType\\": \\"配置\\",\\n              \\"Details\\": [\\n                \\"所有专线端口存在链路异常或缺少端口IP：端口4\\"\\n              ]\\n            },\\n            \\"ItemName\\": \\"eccConfigCheck\\",\\n            \\"EN\\": {\\n              \\"Advice\\": [\\n                \\"Check the physical connections to all Express connect ports and configure these ports on the \'Physical connection port\' page.\\"\\n              ],\\n              \\"ItemName\\": \\"Express Connect Port Configuration\\",\\n              \\"ItemLevel\\": \\"ERROR\\",\\n              \\"ItemType\\": \\"Config\\",\\n              \\"Details\\": [\\n                \\"The connection states of all Express connect ports are down and no IP address is specified for these ports: Port4\\"\\n              ]\\n            },\\n            \\"Level\\": \\"error\\"\\n          }\\n        ],\\n        \\"Statistics\\": {\\n          \\"Warning\\": 2,\\n          \\"Error\\": 5,\\n          \\"Total\\": 10,\\n          \\"Info\\": 3\\n        }\\n      }\\n    ],\\n    \\"UId\\": \\"1688000000000000\\",\\n    \\"EndTime\\": 160274157,\\n    \\"StartTime\\": 160274157,\\n    \\"StoreType\\": \\"both\\",\\n    \\"ReportSLSSuccess\\": 0,\\n    \\"TotalNumber\\": 15,\\n    \\"Level\\": {\\n      \\"Configuration\\": \\"info\\",\\n      \\"Total\\": \\"error\\",\\n      \\"Biz\\": \\"warning\\"\\n    },\\n    \\"Statistics\\": {\\n      \\"Warning\\": 3,\\n      \\"Error\\": 2,\\n      \\"Total\\": 10,\\n      \\"Info\\": 5\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DiscribeSmartAccessGatewayDiagnosisReportResponse>\\n    <RequestId>1BC73F52-5104-4E77-8F4C-80E5B1ED9D21</RequestId>\\n    <DiagnoseResult>\\n        <EndTime>1602741571690</EndTime>\\n        <Percent>100</Percent>\\n        <UserLevel>user</UserLevel>\\n        <InstanceId>sag-0nnteglltw6z4b****</InstanceId>\\n        <FinishedNumber>5</FinishedNumber>\\n        <StartTime>1602741570554</StartTime>\\n        <BoxType>sag-1000</BoxType>\\n        <Statistics>\\n            <Warning>0</Warning>\\n            <Total>5</Total>\\n            <Error>1</Error>\\n            <Info>4</Info>\\n        </Statistics>\\n        <StoreType>both</StoreType>\\n        <MonitorVersion>2.0.2.9</MonitorVersion>\\n        <UId>1688000000000000</UId>\\n        <ReportSLSSuccess>0</ReportSLSSuccess>\\n        <Details>\\n            <Type>config</Type>\\n            <Items>\\n                <Type>config</Type>\\n                <EndTime>1602741570596</EndTime>\\n                <StartTime>1602741570567</StartTime>\\n                <ItemName>eccConfigCheck</ItemName>\\n                <EN>\\n                    <ItemLevel>ERROR</ItemLevel>\\n                    <Details>The connection states of all Express connect ports are down and no IP address is specified for these ports: </Details>\\n                    <Details>Port4</Details>\\n                    <ItemType>Config</ItemType>\\n                    <ItemName>Express Connect Port Configuration</ItemName>\\n                    <Advice>Check the physical connections to all Express connect ports and configure these ports on the \'Physical connection port\' page.</Advice>\\n                </EN>\\n                <Level>error</Level>\\n                <CN>\\n                    <ItemLevel>严重</ItemLevel>\\n                    <Details>所有专线端口存在链路异常或缺少端口IP：</Details>\\n                    <Details>端口4</Details>\\n                    <ItemType>配置</ItemType>\\n                    <ItemName>专线口配置检查</ItemName>\\n                    <Advice>请先检查专线端口链路接线，然后进入本地\'专线管理\'页面进行配置</Advice>\\n                </CN>\\n            </Items>\\n            <Items>\\n                <Type>config</Type>\\n                <EndTime>1602741570600</EndTime>\\n                <StartTime>1602741570587</StartTime>\\n                <ItemName>haConfigCheck</ItemName>\\n                <EN>\\n                    <ItemLevel>INFO</ItemLevel>\\n                    <Details>The configurations for HA are correct and the state of the peer is normal.</Details>\\n                    <ItemType>Config</ItemType>\\n                    <ItemName>HA Configuration</ItemName>\\n                    <Advice>N/A</Advice>\\n                </EN>\\n                <Level>info</Level>\\n                <CN>\\n                    <ItemLevel>正常</ItemLevel>\\n                    <Details>HA配置正确且对端状态正常</Details>\\n                    <ItemType>配置</ItemType>\\n                    <ItemName>HA配置检查</ItemName>\\n                    <Advice>无</Advice>\\n                </CN>\\n            </Items>\\n            <Statistics>\\n                <Warning>0</Warning>\\n                <Total>2</Total>\\n                <Error>1</Error>\\n                <Info>1</Info>\\n            </Statistics>\\n        </Details>\\n        <Details>\\n            <Type>biz</Type>\\n            <Items>\\n                <Type>biz</Type>\\n                <EndTime>1602741570641</EndTime>\\n                <StartTime>1602741570610</StartTime>\\n                <ItemName>ctrlConnState</ItemName>\\n                <EN>\\n                    <ItemLevel>INFO</ItemLevel>\\n                    <Details>The state of the TCP connection to the management console is normal.</Details>\\n                    <ItemType>Service</ItemType>\\n                    <ItemName>Management Console Connection</ItemName>\\n                    <Advice>N/A</Advice>\\n                </EN>\\n                <Level>info</Level>\\n                <CN>\\n                    <ItemLevel>正常</ItemLevel>\\n                    <Details>与管控TCP连接状态正常</Details>\\n                    <ItemType>业务</ItemType>\\n                    <ItemName>管控TCP连接检查</ItemName>\\n                    <Advice>无</Advice>\\n                </CN>\\n            </Items>\\n            <Items>\\n                <Type>biz</Type>\\n                <EndTime>1602741570829</EndTime>\\n                <StartTime>1602741570803</StartTime>\\n                <ItemName>agwTunnelQuality</ItemName>\\n                <EN>\\n                    <ItemLevel>INFO</ItemLevel>\\n                    <Details>The tunnel quality is high:</Details>\\n                    <Details>The packet loss rate for the primary IPSec tunnel is 0.00% and the latency is 1.25 ms.</Details>\\n                    <Details>The packet loss rate for the backup IPSec tunnel is 0.00% and the latency is 1.40 ms.</Details>\\n                    <ItemType>Service</ItemType>\\n                    <ItemName>Tunnel Quality</ItemName>\\n                    <Advice>N/A</Advice>\\n                </EN>\\n                <Level>info</Level>\\n                <CN>\\n                    <ItemLevel>正常</ItemLevel>\\n                    <Details>隧道质量良好：</Details>\\n                    <Details>IPSec主隧道丢包率0.00%，时延1.25ms</Details>\\n                    <Details>IPSec备隧道丢包率0.00%，时延1.40ms</Details>\\n                    <ItemType>业务</ItemType>\\n                    <ItemName>隧道质量检查</ItemName>\\n                    <Advice>无</Advice>\\n                </CN>\\n            </Items>\\n            <Statistics>\\n                <Warning>0</Warning>\\n                <Total>2</Total>\\n                <Error>0</Error>\\n                <Info>2</Info>\\n            </Statistics>\\n        </Details>\\n        <Details>\\n            <Type>internet</Type>\\n            <Items>\\n                <Type>internet</Type>\\n                <EndTime>1602741570637</EndTime>\\n                <StartTime>1602741570607</StartTime>\\n                <ItemName>dnsResolve</ItemName>\\n                <EN>\\n                    <ItemLevel>INFO</ItemLevel>\\n                    <Details>The domain names are resolved.</Details>\\n                    <ItemType>Internet</ItemType>\\n                    <ItemName>DNS Resolution</ItemName>\\n                    <Advice>N/A</Advice>\\n                </EN>\\n                <Level>info</Level>\\n                <CN>\\n                    <ItemLevel>正常</ItemLevel>\\n                    <Details>DNS解析正常</Details>\\n                    <ItemType>公网</ItemType>\\n                    <ItemName>DNS解析检查</ItemName>\\n                    <Advice>无</Advice>\\n                </CN>\\n            </Items>\\n            <Statistics>\\n                <Warning>1</Warning>\\n                <Total>1</Total>\\n                <Error>0</Error>\\n                <Info>1</Info>\\n            </Statistics>\\n        </Details>\\n        <State>finished</State>\\n        <DiagnoseId>dia-sag42c3t703frrpjsoezf********</DiagnoseId>\\n        <TotalNumber>5</TotalNumber>\\n        <Level>\\n            <Biz>info</Biz>\\n            <Configuration>error</Configuration>\\n            <Total>error</Total>\\n        </Level>\\n        <BoxVersion>2.1.0</BoxVersion>\\n        <SN>sag42c3****</SN>\\n    </DiagnoseResult>\\n</DiscribeSmartAccessGatewayDiagnosisReportResponse>","errorExample":""}]',
      'title' => '查询一键诊断报告',
      'summary' => '调用DiscribeSmartAccessGatewayDiagnosisReport接口查询智能接入网关SAG（Smart Access Gateway）设备诊断报告。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddSmartAccessGatewayDnsForward' => 
    array (
      'summary' => '添加DNS转发，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '网关实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-v9un1ccz22owd76lf8',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '设备SN',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4dkqh78',
          ),
        ),
        2 => 
        array (
          'name' => 'Domain',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名
> 
>- 支持泛域名，支持全量匹配（域名填写“*”）。例如:
*.baidu.com 允许输入的格式为 baidu.com',
            'type' => 'string',
            'required' => true,
            'example' => 'www.aliyun.com',
          ),
        ),
        3 => 
        array (
          'name' => 'MasterIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主DNS',
            'type' => 'string',
            'required' => true,
            'example' => '114.114.114.114',
          ),
        ),
        4 => 
        array (
          'name' => 'SlaveIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备DNS',
            'type' => 'string',
            'required' => false,
            'example' => '172.16.0.14',
          ),
        ),
        5 => 
        array (
          'name' => 'Mode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发模式

>- 无效字段，不用关注。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'first',
          ),
        ),
        6 => 
        array (
          'name' => 'OutboundPortType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '出接口类型
>- Tunnel代表隧道口，PhysicalPort代表物理口。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Tunnel' => 'Tunnel',
              'PhysicalPort' => 'PhysicalPort',
              'None' => 'None',
            ),
            'example' => 'Tunnel',
          ),
        ),
        7 => 
        array (
          'name' => 'OutboundPortIndex',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '出接口序号
>- OutboundPortType为PhysicalPort时选填，OutboundPortType为Tunnel时不用填写；
>- OutboundPortIndex和OutboundPortName一一对应：0 - eth0；2 - lte。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              0 => '0',
              2 => '2',
            ),
            'example' => '0',
          ),
        ),
        8 => 
        array (
          'name' => 'OutboundPortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '出接口
>- OutboundPortType为PhysicalPort时选填，OutboundPortType为Tunnel时不用填写；
>- OutboundPortIndex和OutboundPortName一一对应：0 - eth0；2 - lte。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'eth0' => 'eth0',
              'lte' => 'lte',
            ),
            'example' => 'eth0',
          ),
        ),
        9 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'E93884AC-6C21-4FEA-8E3A-7377D33B194F',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '错误码。200标识查询任务成功',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息',
                'type' => 'string',
                'example' => 'Successful',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Data' => 
              array (
                'description' => '业务数据',
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceId' => 
                  array (
                    'description' => '实例ID',
                    'type' => 'string',
                    'example' => 'sagv3dnsforward-nc7qabskj17werc7su',
                  ),
                  'Domain' => 
                  array (
                    'description' => '域名',
                    'type' => 'string',
                    'example' => 'yfiy.cn',
                  ),
                  'MasterIp' => 
                  array (
                    'description' => '主DNS',
                    'type' => 'string',
                    'example' => '14.104.81.13',
                  ),
                  'SlaveIp' => 
                  array (
                    'description' => '备DNS',
                    'type' => 'string',
                    'example' => '172.16.0.14',
                  ),
                  'Mode' => 
                  array (
                    'description' => '转发模式',
                    'type' => 'string',
                    'example' => 'first',
                  ),
                  'OutboundPortType' => 
                  array (
                    'description' => '出接口类型',
                    'type' => 'string',
                    'example' => 'PhysicalPort',
                  ),
                  'OutboundPortIndex' => 
                  array (
                    'description' => '出接口序号',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'OutboundPortName' => 
                  array (
                    'description' => '出接口',
                    'type' => 'string',
                    'example' => 'eth0',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidSpec.FeatureNotSupport',
            'errorMessage' => 'The current edition of the cloudbranch does not support this feature.',
          ),
          1 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'CCN.DuplicateDNSForwardingDomain',
            'errorMessage' => 'Duplicate DNS forwarding domain',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The configs of device are unsynchronized,please check whether the device is online',
          ),
          4 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
          5 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          6 => 
          array (
            'errorCode' => 'CCN.DNS.Forward.CreateFailed',
            'errorMessage' => 'failed to create dns forward config',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.Device',
            'errorMessage' => 'The specified resource of Device is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E93884AC-6C21-4FEA-8E3A-7377D33B194F\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Data\\": {\\n    \\"InstanceId\\": \\"sagv3dnsforward-nc7qabskj17werc7su\\",\\n    \\"Domain\\": \\"yfiy.cn\\",\\n    \\"MasterIp\\": \\"14.104.81.13\\",\\n    \\"SlaveIp\\": \\"172.16.0.14\\",\\n    \\"Mode\\": \\"first\\",\\n    \\"OutboundPortType\\": \\"PhysicalPort\\",\\n    \\"OutboundPortIndex\\": 0,\\n    \\"OutboundPortName\\": \\"eth0\\"\\n  }\\n}","type":"json"}]',
      'title' => '添加DNS转发',
    ),
    'UpdateSmartAccessGatewayDnsForward' => 
    array (
      'summary' => '编辑DNS转发，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '网关实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-v9un1ccz22owd76lf8',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '设备SN',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4dkqh78',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => true,
            'example' => 'sagv3dnsforward-nc7qabskj17werc7su',
          ),
        ),
        3 => 
        array (
          'name' => 'MasterIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '主DNS',
            'type' => 'string',
            'required' => true,
            'example' => '114.114.114.114',
          ),
        ),
        4 => 
        array (
          'name' => 'SlaveIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备DNS',
            'type' => 'string',
            'required' => false,
            'example' => '172.16.0.14',
          ),
        ),
        5 => 
        array (
          'name' => 'Mode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转发模式

>- 无效字段，不用关注。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
            ),
            'example' => 'first',
          ),
        ),
        6 => 
        array (
          'name' => 'OutboundPortType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '出接口类型
>- Tunnel代表隧道口，PhysicalPort代表物理口。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'Tunnel' => 'Tunnel',
              'PhysicalPort' => 'PhysicalPort',
              'None' => 'None',
            ),
            'example' => 'PhysicalPort',
          ),
        ),
        7 => 
        array (
          'name' => 'OutboundPortIndex',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '出接口序号
>- OutboundPortType为PhysicalPort时选填，OutboundPortType为Tunnel时不用填写；
>- OutboundPortIndex和OutboundPortName一一对应：0 - eth0；2 - lte。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'enumValueTitles' => 
            array (
              0 => '0',
              2 => '2',
            ),
            'example' => '0',
          ),
        ),
        8 => 
        array (
          'name' => 'OutboundPortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '出接口
>- OutboundPortType为PhysicalPort时选填，OutboundPortType为Tunnel时不用填写；
>- OutboundPortIndex和OutboundPortName一一对应：0 - eth0；2 - lte。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'eth0' => 'eth0',
              'lte' => 'lte',
            ),
            'example' => 'eth0',
          ),
        ),
        9 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关的地域ID',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        10 => 
        array (
          'name' => 'Domain',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '域名
> 
>- 支持泛域名，支持全量匹配（域名填写“*”）。例如:
*.baidu.com 允许输入的格式为 baidu.com',
            'type' => 'string',
            'required' => true,
            'example' => 'www.aliyun.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '284045DE-4C2D-463D-9F27-B6898E67D120',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                  'true' => 'true',
                  'false' => 'false',
                ),
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息',
                'type' => 'string',
                'example' => 'Successful',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidSpec.FeatureNotSupport',
            'errorMessage' => 'The current edition of the cloudbranch does not support this feature.',
          ),
          1 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'CCN.DuplicateDNSForwardingDomain',
            'errorMessage' => 'Duplicate DNS forwarding domain',
          ),
          3 => 
          array (
            'errorCode' => 'CCN.DNS.Forward.IdNotExist',
            'errorMessage' => 'DNS forwarding does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The configs of device are unsynchronized, please check whether the device is online',
          ),
          5 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
          6 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"284045DE-4C2D-463D-9F27-B6898E67D120\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful\\",\\n  \\"HttpStatusCode\\": \\"200\\"\\n}","type":"json"}]',
      'title' => '更新DNS转发',
    ),
    'DeleteSmartAccessGatewayDnsForward' => 
    array (
      'summary' => '删除DNS转发，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '网关实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-v9un1ccz22owd76lf8',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '设备SN',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4dkqh78',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID',
            'type' => 'string',
            'required' => true,
            'example' => 'sagv3dnsforward-nc7qabskj17werc7su',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所在的地域id',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => '0BAAF2B9-88B8-4574-BDBE-102A90EE3FEE',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'string',
                'enumValueTitles' => 
                array (
                  'true' => 'true',
                  'false' => 'false',
                ),
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息',
                'type' => 'string',
                'example' => 'Successful',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidSpec.FeatureNotSupport',
            'errorMessage' => 'The current edition of the cloudbranch does not support this feature.',
          ),
          1 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'CCN.DNS.Forward.IdNotExist',
            'errorMessage' => 'DNS forwarding does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'ConfigUnsynchronized',
            'errorMessage' => 'The configs of device are unsynchronized, please check whether the device is online',
          ),
          4 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0BAAF2B9-88B8-4574-BDBE-102A90EE3FEE\\",\\n  \\"Success\\": \\"true\\",\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful\\",\\n  \\"HttpStatusCode\\": \\"200\\"\\n}","type":"json"}]',
      'title' => '删除DNS转发',
    ),
    'ViewSmartAccessGatewayDnsForwards' => 
    array (
      'summary' => '查询DNS转发列表，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '网关实例id',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-v9un1ccz22owd76lf8',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '设备SN',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4dkqh78',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => 'Id of the request',
                'type' => 'string',
                'example' => 'E223E535-AE11-4158-B00F-DC107887A909',
              ),
              'Success' => 
              array (
                'description' => '是否成功',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Code' => 
              array (
                'description' => '响应码',
                'type' => 'string',
                'example' => '200',
              ),
              'Message' => 
              array (
                'description' => '返回信息',
                'type' => 'string',
                'example' => 'Successful',
              ),
              'HttpStatusCode' => 
              array (
                'description' => 'HTTP状态码',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '200',
              ),
              'Count' => 
              array (
                'description' => '总条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1914',
              ),
              'Data' => 
              array (
                'description' => 'DNS转发实例列表',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'DNS转发实例',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'InstanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'string',
                      'example' => 'sagv3dnsforward-nc7qabskj17werc7su',
                    ),
                    'Domain' => 
                    array (
                      'description' => '域名',
                      'type' => 'string',
                      'example' => 'www.baidu.com',
                    ),
                    'MasterIp' => 
                    array (
                      'description' => '主DNS',
                      'type' => 'string',
                      'example' => '172.16.58.20',
                    ),
                    'SlaveIp' => 
                    array (
                      'description' => '备DNS',
                      'type' => 'string',
                      'example' => '172.16.0.14',
                    ),
                    'Mode' => 
                    array (
                      'description' => '转发模式

>- 无效字段，不用关注。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                      ),
                      'example' => 'first',
                    ),
                    'OutboundPortType' => 
                    array (
                      'description' => '出接口类型',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'Tunnel' => 'Tunnel',
                        'PhysicalPort' => 'PhysicalPort',
                        'None' => 'None',
                      ),
                      'example' => 'PhysicalPort',
                    ),
                    'OutboundPortIndex' => 
                    array (
                      'description' => '出接口序号',
                      'type' => 'integer',
                      'format' => 'int32',
                      'enumValueTitles' => 
                      array (
                        0 => '0',
                        2 => '2',
                      ),
                      'example' => '0',
                    ),
                    'OutboundPortName' => 
                    array (
                      'description' => '出接口',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'eth0' => 'eth0',
                        'lte' => 'lte',
                      ),
                      'example' => 'eth0',
                    ),
                  ),
                ),
                'enumValueTitles' => 
                array (
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E223E535-AE11-4158-B00F-DC107887A909\\",\\n  \\"Success\\": true,\\n  \\"Code\\": \\"200\\",\\n  \\"Message\\": \\"Successful\\",\\n  \\"HttpStatusCode\\": 200,\\n  \\"Count\\": 1914,\\n  \\"Data\\": [\\n    {\\n      \\"InstanceId\\": \\"sagv3dnsforward-nc7qabskj17werc7su\\",\\n      \\"Domain\\": \\"www.baidu.com\\",\\n      \\"MasterIp\\": \\"172.16.58.20\\",\\n      \\"SlaveIp\\": \\"172.16.0.14\\",\\n      \\"Mode\\": \\"first\\",\\n      \\"OutboundPortType\\": \\"PhysicalPort\\",\\n      \\"OutboundPortIndex\\": 0,\\n      \\"OutboundPortName\\": \\"eth0\\"\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '查询DNS转发列表',
    ),
    'UpdateSmartAccessGatewayWanSnat' => 
    array (
      'summary' => '修改SAG设备WAN口的SNAT配置，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-jwbtsyzom0ol4v****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4dk****',
          ),
        ),
        2 => 
        array (
          'name' => 'Snat',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '是否使能snat',
            'description' => '是否开启SNAT功能。

- **1**：SNAT功能开启。
- **0**：SNAT功能未开启。',
            'type' => 'string',
            'required' => true,
            'example' => '0',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        4 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '109790620697****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '响应码。200标识查询任务成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '修改是否成功。取值：
 
- **true**：是。

- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FAD1E4CB-52A5-520B-BE14-A78F491FBD9C',
              ),
              'Message' => 
              array (
                'description' => '响应消息。Successful标识查询任务成功。',
                'type' => 'string',
                'example' => 'Successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Internal server error',
          ),
          2 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'MissParameter.GatewayId',
            'errorMessage' => 'The input parameter GatewayId that is mandatory for processing this model is not supplied.',
          ),
          4 => 
          array (
            'errorCode' => 'MissParameter.Snat',
            'errorMessage' => 'The input parameter Snat that is mandatory for processing this model is not supplied.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.Snat',
            'errorMessage' => 'The input parameter Snat is illegal, please check your input.',
          ),
          6 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'Cloud Box Not Support the Feature',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidSpec.FeatureNotSupport',
            'errorMessage' => 'The current edition of the cloudbranch does not support this feature.',
          ),
          8 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Success\\": true,\\n  \\"RequestId\\": \\"FAD1E4CB-52A5-520B-BE14-A78F491FBD9C\\",\\n  \\"Message\\": \\"Successful\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateSmartAccessGatewayWanSnatResponse>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n    <RequestId>FAD1E4CB-52A5-520B-BE14-A78F491FBD9C</RequestId>\\n    <Message>Successful</Message>\\n</UpdateSmartAccessGatewayWanSnatResponse>","errorExample":""}]',
      'title' => '修改SAG设备WAN口的SNAT配置',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持修改智能接入网关设备WAN口的SNAT配置。',
    ),
    'ViewSmartAccessGatewayWanSnat' => 
    array (
      'summary' => '获取SAG设备WAN口的SNAT配置，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'sag-iv408aov6k7xxm****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => false,
            'example' => 'sagf4ea****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '109790620697****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0CFC6919-8F3D-524F-A7A6-E5FADCD36A20',
              ),
              'Snat' => 
              array (
                'title' => 'snat enable or disable',
                'description' => '是否开启SNAT功能。取值：

- **1**：SNAT功能开启。
- **0**：SNAT功能未开启。',
                'type' => 'string',
                'example' => '1',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '查询任务信息状态。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态。取值：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建查询任务时的总时长。',
                      'type' => 'string',
                      'example' => '1586852928000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissParameter.SagInsId',
            'errorMessage' => 'The input parameter "SagInsId" that is mandatory for processing this model is not supplied.',
          ),
          1 => 
          array (
            'errorCode' => 'MissParameter.SagSn',
            'errorMessage' => 'The input parameter "SagSn" that is mandatory for processing this model is not supplied.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0CFC6919-8F3D-524F-A7A6-E5FADCD36A20\\",\\n  \\"Snat\\": \\"1\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586852928000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ViewSmartAccessGatewayWanSnatResponse>\\n    <RequestId>0CFC6919-8F3D-524F-A7A6-E5FADCD36A20</RequestId>\\n    <Snat>1</Snat>\\n    <TaskStates>\\n        <ErrorMessage>Successful</ErrorMessage>\\n        <State>Succeed</State>\\n        <ErrorCode>200</ErrorCode>\\n        <CreateTime>1586852928000</CreateTime>\\n    </TaskStates>\\n</ViewSmartAccessGatewayWanSnatResponse>","errorExample":""}]',
      'title' => '获取SAG设备WAN口的SNAT配置',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持获取智能接入网关设备WAN口的SNAT配置。',
    ),
    'UpdateSmartAccessGatewayDns' => 
    array (
      'summary' => '修改SAG设备DNS信息，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-3manef62evrfr6****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4ea****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'MasterDns',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'master dns ip address',
            'description' => '主DNS服务器IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '10.10.XX.XX',
          ),
        ),
        4 => 
        array (
          'name' => 'SlaveDns',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'slave dns ip address',
            'description' => '备DNS服务器IP地址。',
            'type' => 'string',
            'required' => false,
            'example' => '10.10.XX.XX',
          ),
        ),
        5 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '147304382796****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '错误码。200标识查询任务成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '修改是否成功。取值：

- **true**：是。
- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AE9B6C13-86D3-5E56-8C05-BBE58C2BE671',
              ),
              'Message' => 
              array (
                'description' => '响应消息。Successful标识查询任务成功。',
                'type' => 'string',
                'example' => 'Successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Internal server error',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified software instance does not support ACL.',
          ),
          4 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          5 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
          6 => 
          array (
            'errorCode' => 'MissParameter.GatewayId',
            'errorMessage' => 'The input parameter GatewayId that is mandatory for processing this model is not supplied.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.MasterDns',
            'errorMessage' => 'The input parameter MasterDns is illegal, please check your input.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.SlaveDns',
            'errorMessage' => 'The input parameter SlaveDns is illegal, please check your input.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidSpec.FeatureNotSupport',
            'errorMessage' => 'The current edition of the cloudbranch does not support this feature.',
          ),
          10 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Success\\": true,\\n  \\"RequestId\\": \\"AE9B6C13-86D3-5E56-8C05-BBE58C2BE671\\",\\n  \\"Message\\": \\"Successful\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateSmartAccessGatewayDnsResponse>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n    <RequestId>AE9B6C13-86D3-5E56-8C05-BBE58C2BE671</RequestId>\\n    <Message>Successful</Message>\\n</UpdateSmartAccessGatewayDnsResponse>","errorExample":""}]',
      'title' => '修改SAG设备DNS信息',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持修改智能接入网关设备DNS信息。',
    ),
    'ViewSmartAccessGatewayDns' => 
    array (
      'summary' => '查询SAG设备DNS信息，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-sv487b7lno6go5****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4ea****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '109790620697****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '571AC2E7-8119-58E9-8BFA-1D580CBD1E56',
              ),
              'SlaveDns' => 
              array (
                'description' => '备DNS服务器IP地址。',
                'type' => 'string',
                'example' => '8.8.XX.XX',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '查询任务信息状态。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态。取值：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建查询任务时的总时长。',
                      'type' => 'string',
                      'example' => '1586857309000',
                    ),
                  ),
                ),
              ),
              'MasterDns' => 
              array (
                'description' => '主DNS服务器IP地址。',
                'type' => 'string',
                'example' => '114.114.XXX.XXX',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified software instance does not support ACL.',
          ),
          3 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          4 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
          5 => 
          array (
            'errorCode' => 'MissParameter.GatewayId',
            'errorMessage' => 'The input parameter GatewayId that is mandatory for processing this model is not supplied.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"571AC2E7-8119-58E9-8BFA-1D580CBD1E56\\",\\n  \\"SlaveDns\\": \\"8.8.XX.XX\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586857309000\\"\\n    }\\n  ],\\n  \\"MasterDns\\": \\"114.114.XXX.XXX\\"\\n}","errorExample":""},{"type":"xml","example":"<ViewSmartAccessGatewayDnsResponse>\\n    <RequestId>571AC2E7-8119-58E9-8BFA-1D580CBD1E56</RequestId>\\n    <SlaveDns>8.8.XX.XX</SlaveDns>\\n    <TaskStates>\\n        <ErrorMessage>Successful</ErrorMessage>\\n        <State>Succeed</State>\\n        <ErrorCode>200</ErrorCode>\\n        <CreateTime>1586857309000</CreateTime>\\n    </TaskStates>\\n    <MasterDns>114.114.XXX.XXX</MasterDns>\\n</ViewSmartAccessGatewayDnsResponse>","errorExample":""}]',
      'title' => '查询SAG设备DNS信息',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持查询智能接入网关设备DNS信息。',
    ),
    'UpdateSmartAccessGatewayBgpRoute' => 
    array (
      'summary' => '修改SAG设备动态路由协议BGP的配置，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-v9un1ccz22owd7****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4dk****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'RouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'BGP路由器ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '172.XX.XX.1',
          ),
        ),
        4 => 
        array (
          'name' => 'LocalAs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备所属自治系统编号。

取值范围：**1**~**4294967295**。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '65536',
          ),
        ),
        5 => 
        array (
          'name' => 'HoldTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '保持时间。单位：秒。

取值范围：**3**~**65535**。

> 在智能接入网关设备和对端设备建立对等体关系时，两端设备要协商Hold Time并保持一致，如果在Hold Time内未收到对端发来的KeepAlive或Update消息，则认为BGP连接中断。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '9',
          ),
        ),
        6 => 
        array (
          'name' => 'KeepAlive',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '存活时间间隔。单位：秒。

取值范围：**0**~**65535**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '3',
          ),
        ),
        7 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '147304382796****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '响应码。200标识查询任务成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '修改是否成功。取值：

- **true**：是。
- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7F0B079C-2D0E-4ABF-A970-C079F785A09C',
              ),
              'Message' => 
              array (
                'description' => '响应消息。Successful标识查询任务成功。',
                'type' => 'string',
                'example' => 'Successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Internal server error',
          ),
          2 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified software instance does not support ACL.',
          ),
          5 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          6 => 
          array (
            'errorCode' => 'MissParameter.GatewayId',
            'errorMessage' => 'The input parameter GatewayId that is mandatory for processing this model is not supplied.',
          ),
          7 => 
          array (
            'errorCode' => 'MissParameter.RouterId',
            'errorMessage' => 'The input parameter RouterId that is mandatory for processing this model is not supplied.',
          ),
          8 => 
          array (
            'errorCode' => 'MissParameter.LocalAs',
            'errorMessage' => 'The input parameter LocalAs that is mandatory for processing this model is not supplied.',
          ),
          9 => 
          array (
            'errorCode' => 'MissParameter.Hold',
            'errorMessage' => 'The input parameter Hold that is mandatory for processing this model is not supplied.',
          ),
          10 => 
          array (
            'errorCode' => 'MissParameter.Keepalive',
            'errorMessage' => 'The input parameter Keepalive that is mandatory for processing this model is not supplied.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter.RouterId',
            'errorMessage' => 'The input parameter RouterId is illegal, please check your input.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidParameter.LocalAs',
            'errorMessage' => 'The input parameter LocalAs is illegal, please check your input.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParameter.Hold',
            'errorMessage' => 'The input parameter Hold is illegal, please check your input.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidParameter.Keepalive',
            'errorMessage' => 'The input parameter Keepalive is illegal, please check your input.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParameter.RedistributeProtocol',
            'errorMessage' => 'The input parameter RedistributeProtocol is illegal, please check your input.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParameter.Networks',
            'errorMessage' => 'The input parameter Networks is illegal, please check your input.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidParameter.NeighborIp',
            'errorMessage' => 'The input parameter NeighborIp is illegal, please check your input.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidParameter.RemoteAs',
            'errorMessage' => 'The input parameter RemoteAs is illegal, please check your input.',
          ),
          19 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Success\\": true,\\n  \\"RequestId\\": \\"7F0B079C-2D0E-4ABF-A970-C079F785A09C\\",\\n  \\"Message\\": \\"Successful\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateSmartAccessGatewayBgpRouteResponse>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n    <RequestId>7F0B079C-2D0E-4ABF-A970-C079F785A09C</RequestId>\\n    <Message>Successful</Message>\\n</UpdateSmartAccessGatewayBgpRouteResponse>","errorExample":""}]',
      'title' => '修改SAG设备动态路由协议BGP的配置',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持修改智能接入网关设备动态路由协议BGP的配置。',
    ),
    'ViewSmartAccessGatewayBgpRoute' => 
    array (
      'summary' => '获取SAG设备动态路由协议BGP的配，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-3manef62evrfr6****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4dk****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '109790620697****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F1FEABC0-F7B7-53EA-83EE-AA470ABACE60',
              ),
              'HoldTime' => 
              array (
                'description' => '保持时间。单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '9',
              ),
              'KeepAlive' => 
              array (
                'description' => '存活时间间隔。单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'LocalAs' => 
              array (
                'description' => '智能接入网关所属自治系统编号。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '12****',
              ),
              'RouterId' => 
              array (
                'description' => 'BGP路由器ID。',
                'type' => 'string',
                'example' => '192.XX.XX.1',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '查询任务信息状态。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态。取值：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建查询任务时的总时长。',
                      'type' => 'string',
                      'example' => '1586855592000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified software instance does not support ACL.',
          ),
          3 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          4 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
          5 => 
          array (
            'errorCode' => 'MissParameter.GatewayId',
            'errorMessage' => 'The input parameter GatewayId that is mandatory for processing this model is not supplied.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F1FEABC0-F7B7-53EA-83EE-AA470ABACE60\\",\\n  \\"HoldTime\\": 9,\\n  \\"KeepAlive\\": 3,\\n  \\"LocalAs\\": 0,\\n  \\"RouterId\\": \\"192.XX.XX.1\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586855592000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ViewSmartAccessGatewayBgpRouteResponse>\\n    <RequestId>F1FEABC0-F7B7-53EA-83EE-AA470ABACE60</RequestId>\\n    <HoldTime>9</HoldTime>\\n    <KeepAlive>3</KeepAlive>\\n    <RouterId>192.XX.XX.1</RouterId>\\n    <TaskStates>\\n        <ErrorMessage>Successful</ErrorMessage>\\n        <State>Succeed</State>\\n        <ErrorCode>200</ErrorCode>\\n        <CreateTime>1586855592000</CreateTime>\\n    </TaskStates>\\n</ViewSmartAccessGatewayBgpRouteResponse>","errorExample":""}]',
      'title' => '获取SAG设备动态路由协议BGP的配置',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持获取智能接入网关设备动态路由协议BGP的配置。',
    ),
    'UpdateSmartAccessGatewayGlobalRouteProtocol' => 
    array (
      'summary' => '修改SAG设备全局路由协议，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-3manef62evrfr6****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4dk****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        3 => 
        array (
          'name' => 'RouteProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由协议。取值：

- **STATIC**：静态路由协议。
- **OSPF**：OSPF动态路由协议。
- **BGP**：BGP动态路由协议。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'BGP',
          ),
        ),
        4 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '109790620697****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '响应码。200标识查询任务成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '修改是否成功。取值：

- **true**：是。

- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '407E391C-7FB6-5552-AF39-DBB5CB062E3C',
              ),
              'Message' => 
              array (
                'description' => '响应消息。Successful标识查询任务成功。',
                'type' => 'string',
                'example' => 'Successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Internal server error',
          ),
          2 => 
          array (
            'errorCode' => 'MissParameter.GatewayId',
            'errorMessage' => 'The input parameter GatewayId that is mandatory for processing this model is not supplied.',
          ),
          3 => 
          array (
            'errorCode' => 'MissParameter.GlobalRouteType',
            'errorMessage' => 'The input parameter GlobalRouteType that is mandatory for processing this model is not supplied.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.GlobalRouteType',
            'errorMessage' => 'The input parameter GlobalRouteType is illegal, please check your input.',
          ),
          5 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Success\\": true,\\n  \\"RequestId\\": \\"407E391C-7FB6-5552-AF39-DBB5CB062E3C\\",\\n  \\"Message\\": \\"Successful\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateSmartAccessGatewayGlobalRouteProtocolResponse>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n    <RequestId>407E391C-7FB6-5552-AF39-DBB5CB062E3C</RequestId>\\n    <Message>successful</Message>\\n</UpdateSmartAccessGatewayGlobalRouteProtocolResponse>","errorExample":""}]',
      'title' => '修改SAG设备全局路由协议',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持修改智能接入网关设备全局路由协议。',
    ),
    'ViewSmartAccessGatewayGlobalRouteProtocol' => 
    array (
      'summary' => '获取SAG设备全局路由协议，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-iv408aov6k7xxm****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4ea****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '109790620697****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RouteProtocol' => 
              array (
                'description' => '路由协议。取值：

- **STATIC**：静态路由协议。
- **OSPF**：OSPF动态路由协议。
- **BGP**：BGP动态路由协议。',
                'type' => 'string',
                'example' => 'STATIC',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D10FFDB2-AF7D-530A-A2AC-EBDC16500399',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '查询任务信息状态。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态。取值：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建查询任务时的总时长。',
                      'type' => 'string',
                      'example' => '1586843621000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'MissParameter.GatewayId',
            'errorMessage' => 'The input parameter GatewayId that is mandatory for processing this model is not supplied.',
          ),
          2 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RouteProtocol\\": \\"STATIC\\",\\n  \\"RequestId\\": \\"D10FFDB2-AF7D-530A-A2AC-EBDC16500399\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586843621000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ViewSmartAccessGatewayGlobalRouteProtocolResponse>\\n    <RouteProtocol>STATIC</RouteProtocol>\\n    <RequestId>D10FFDB2-AF7D-530A-A2AC-EBDC16500399</RequestId>\\n    <TaskStates>\\n        <ErrorMessage>Successful</ErrorMessage>\\n        <State>Succeed</State>\\n        <ErrorCode>200</ErrorCode>\\n        <CreateTime>1586843621000</CreateTime>\\n    </TaskStates>\\n</ViewSmartAccessGatewayGlobalRouteProtocolResponse>","errorExample":""}]',
      'title' => '获取SAG设备全局路由协议',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持获取智能接入网关设备全局路由协议。',
    ),
    'UpdateSmartAccessGatewayPortRouteProtocol' => 
    array (
      'summary' => '修改SAG设备端口路由协议，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-3manef62evrfr6****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4dk****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'PortName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '端口名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        4 => 
        array (
          'name' => 'Vlan',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VLAN编号。',
            'type' => 'string',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'RouteProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由协议。取值：

- **STATIC**：静态路由协议。
- **OSPF**：OSPF动态路由协议。
- **BGP**：BGP动态路由协议。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'STATIC',
          ),
        ),
        6 => 
        array (
          'name' => 'RemoteIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对端IP地址。

>启用BGP路由协议时需输入。',
            'type' => 'string',
            'required' => false,
            'example' => '192.XX.XX.1',
          ),
        ),
        7 => 
        array (
          'name' => 'RemoteAs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对端BGP自治系统编号。

>启用BGP路由协议时需输入。',
            'type' => 'string',
            'required' => false,
            'example' => '65535',
          ),
        ),
        8 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        9 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '109790620697****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '响应码。200标识查询任务成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '修改是否成功。取值：

- **true**：调用成功。

- **false**：调用失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A7DB1241-17CB-5457-83A9-638162A514C6',
              ),
              'Message' => 
              array (
                'description' => '响应消息。Successful标识查询任务成功。',
                'type' => 'string',
                'example' => 'Successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Internal server error',
          ),
          2 => 
          array (
            'errorCode' => 'MissParameter.GatewayId',
            'errorMessage' => 'The input parameter GatewayId that is mandatory for processing this model is not supplied.',
          ),
          3 => 
          array (
            'errorCode' => 'MissParameter.PortName',
            'errorMessage' => 'The input parameter PortName that is mandatory for processing this model is not supplied.',
          ),
          4 => 
          array (
            'errorCode' => 'MissParameter.RouteType',
            'errorMessage' => 'The input parameter RouteType that is mandatory for processing this model is not supplied.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.Vlan',
            'errorMessage' => 'The input parameter Vlan is illegal, please check your input.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.RouteType',
            'errorMessage' => 'The input parameter RouteType is illegal, please check your input.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.RemoteIp',
            'errorMessage' => 'The input parameter RemoteIp is illegal, please check your input.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.RemoteAs',
            'errorMessage' => 'The input parameter RemoteAs is illegal, please check your input.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidSpec.FeatureNotSupport',
            'errorMessage' => 'The current edition of the cloudbranch does not support this feature.',
          ),
          10 => 
          array (
            'errorCode' => 'SMARTAG.PORT.ROLE.INVALID',
            'errorMessage' => 'Invalid port role',
          ),
          11 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Success\\": true,\\n  \\"RequestId\\": \\"A7DB1241-17CB-5457-83A9-638162A514C6\\",\\n  \\"Message\\": \\"Successful\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateSmartAccessGatewayPortRouteProtocolResponse>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n    <RequestId>A7DB1241-17CB-5457-83A9-638162A514C6</RequestId>\\n    <Message>Successful</Message>\\n</UpdateSmartAccessGatewayPortRouteProtocolResponse>","errorExample":""}]',
      'title' => '修改SAG设备端口路由协议',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持修改智能接入网关设备端口路由协议。',
    ),
    'ViewSmartAccessGatewayPortRouteProtocol' => 
    array (
      'summary' => '获取SAG设备路由协议开启的端口列表，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-sv487b7lno6go5****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4dk****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '109790620697****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '877F5673-FFD1-5168-99D1-1E8009FBFF7B',
              ),
              'Ports' => 
              array (
                'description' => '端口信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '端口信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => '端口状态。取值：

- **UP**：端口开启。
- **DOWN**：端口关闭。',
                      'type' => 'string',
                      'example' => 'UP',
                    ),
                    'RemoteIp' => 
                    array (
                      'description' => '对端IP地址。',
                      'type' => 'string',
                      'example' => '192.XX.XX.1',
                    ),
                    'PortName' => 
                    array (
                      'description' => '端口名称。',
                      'type' => 'string',
                      'example' => '5',
                    ),
                    'NeighborIp' => 
                    array (
                      'description' => '邻居IP地址。',
                      'type' => 'string',
                      'example' => '192.XX.XX.2',
                    ),
                    'RouteProtocol' => 
                    array (
                      'description' => '端口路由协议。取值：

- **STATIC**：静态路由协议。
- **OSPF**：OSPF动态路由协议。
- **BGP**：BGP动态路由协议。',
                      'type' => 'string',
                      'example' => 'BGP',
                    ),
                    'RemoteAs' => 
                    array (
                      'description' => '对端BGP自治系统编号。',
                      'type' => 'string',
                      'example' => '65535',
                    ),
                    'Vlan' => 
                    array (
                      'description' => 'VLAN编号。',
                      'type' => 'string',
                      'example' => '2',
                    ),
                  ),
                ),
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '查询任务信息状态。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间戳。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建查询任务时的总时长。',
                      'type' => 'string',
                      'example' => '1586765938000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'MissParameter.GatewayId',
            'errorMessage' => 'The input parameter GatewayId that is mandatory for processing this model is not supplied.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"877F5673-FFD1-5168-99D1-1E8009FBFF7B\\",\\n  \\"Ports\\": [\\n    {\\n      \\"Status\\": \\"UP\\",\\n      \\"RemoteIp\\": \\"192.XX.XX.1\\",\\n      \\"PortName\\": \\"5\\",\\n      \\"NeighborIp\\": \\"192.XX.XX.2\\",\\n      \\"RouteProtocol\\": \\"BGP\\",\\n      \\"RemoteAs\\": \\"65535\\",\\n      \\"Vlan\\": \\"2\\"\\n    }\\n  ],\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586765938000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ViewSmartAccessGatewayPortRouteProtocolResponse>\\n    <RequestId>877F5673-FFD1-5168-99D1-1E8009FBFF7B</RequestId>\\n    <Ports>\\n        <Status>UP</Status>\\n        <RemoteIp>192.XX.XX.1</RemoteIp>\\n        <PortName>5</PortName>\\n        <RouteProtocol>BGP</RouteProtocol>\\n        <RemoteAs>65535</RemoteAs>\\n        <Vlan>2</Vlan>\\n    </Ports>\\n    <TaskStates>\\n        <ErrorMessage>Successful</ErrorMessage>\\n        <State>Succeed</State>\\n        <ErrorCode>200</ErrorCode>\\n        <CreateTime>1586765938000</CreateTime>\\n    </TaskStates>\\n</ViewSmartAccessGatewayPortRouteProtocolResponse>","errorExample":""}]',
      'title' => '获取SAG设备路由协议开启的端口列表',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持获取智能接入网关设备路由协议开启的端口列表。',
    ),
    'ViewSmartAccessGatewayRoutes' => 
    array (
      'summary' => '查看SAG设备路由详情，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-sv487b7lno6go5****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4ea****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '147304382796****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F3D21D0B-5258-5412-AD1C-3929D297286B',
              ),
              'Routes' => 
              array (
                'description' => '路由信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '路由信息列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Idx' => 
                    array (
                      'description' => '接口编号。当取值为**-1**时表示下一跳指向VPN隧道。

取值范围：**-1**~**4294967295**。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '2',
                    ),
                    'Type' => 
                    array (
                      'description' => '路由类型。取值：

- **static**：静态路由。

- **bgp**：BGP动态路由。

- **ospf**：OSPF动态路由。',
                      'type' => 'string',
                      'example' => 'static',
                    ),
                    'Role' => 
                    array (
                      'description' => '端口角色。',
                      'type' => 'string',
                      'example' => 'WAN',
                    ),
                    'Dst' => 
                    array (
                      'description' => '目标网段。',
                      'type' => 'string',
                      'example' => '172.1.1.0/24',
                    ),
                    'Nexthop' => 
                    array (
                      'description' => '下一跳。',
                      'type' => 'string',
                      'example' => '1.XX.XX.1',
                    ),
                    'ConflictCidrs' => 
                    array (
                      'description' => '冲突网段列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '冲突网段。',
                        'type' => 'string',
                        'example' => '192.XX.XX.0/24',
                      ),
                    ),
                    'Cost' => 
                    array (
                      'description' => '路由开销值。

第一个**0**表示：路由协议管理距离（AD）。

第二个**0**表示：度量值（metric）。',
                      'type' => 'string',
                      'example' => '[0/0]',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'MissParameter.GatewayId',
            'errorMessage' => 'The input parameter GatewayId that is mandatory for processing this model is not supplied.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidSpec.FeatureNotSupport',
            'errorMessage' => 'The current edition of the cloudbranch does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F3D21D0B-5258-5412-AD1C-3929D297286B\\",\\n  \\"Routes\\": [\\n    {\\n      \\"Idx\\": 2,\\n      \\"Type\\": \\"static\\",\\n      \\"Role\\": \\"WAN\\",\\n      \\"Dst\\": \\"172.1.1.0/24\\",\\n      \\"Nexthop\\": \\"1.XX.XX.1\\",\\n      \\"ConflictCidrs\\": [\\n        \\"192.XX.XX.0/24\\"\\n      ],\\n      \\"Cost\\": \\"[0/0]\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ViewSmartAccessGatewayRoutesResponse>\\n    <RequestId>F3D21D0B-5258-5412-AD1C-3929D297286B</RequestId>\\n    <Routes>\\n        <Idx>2</Idx>\\n        <Type>static</Type>\\n        <Role>WAN</Role>\\n        <Dst>172.1.1.0/24</Dst>\\n        <Nexthop>1.XX.XX.1</Nexthop>\\n        <ConflictCidrs>192.XX.XX.0/24</ConflictCidrs>\\n        <Cost>[0/0]</Cost>\\n    </Routes>\\n</ViewSmartAccessGatewayRoutesResponse>","errorExample":""}]',
      'title' => '查看SAG设备路由详情',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持查看智能接入网关设备路由详情。',
    ),
    'UpdateSmartAccessGatewayOspfRoute' => 
    array (
      'summary' => '修改SAG设备动态路由协议OSPF的配置，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-3manef62evrfr6****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4dk****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'RouterId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OSPF路由器ID。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XX.XX.1',
          ),
        ),
        4 => 
        array (
          'name' => 'AreaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OSPF区域ID。

取值范围：**1**~**2147483647**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'DeadTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OSPF超时时间间隔。单位：秒。

取值范围：**1**~**65535**。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '40',
          ),
        ),
        6 => 
        array (
          'name' => 'HelloTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '发送Hello报文的时间间隔。单位：秒。

取值范围：**1**~**65535**。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'AuthenticationType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '认证类型。取值：

- **NONE**：不开启认证。

- **CLEARTEXT**：采用明文认证。

- **MD5**：采用MD5认证。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'MD5',
          ),
        ),
        8 => 
        array (
          'name' => 'Md5KeyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MD5 Key的编号。

取值范围：**1~2147483647**。

 >该项仅当**AuthenticationType**为**MD5**时输入。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '7',
          ),
        ),
        9 => 
        array (
          'name' => 'Md5Key',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'MD5 Key值。

取值范围：**1~47**。

> 该项仅当**AuthenticationType**为**MD5**时输入。
',
            'type' => 'string',
            'required' => false,
            'example' => '5',
          ),
        ),
        10 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '明文认证密码。

格式要求为1~8位字符，可包含大小写字母、数字、短划线（-）或下划线（_）。

> 该项仅当**AuthenticationType**为**CLEARTEXT**时输入。
',
            'type' => 'string',
            'required' => false,
            'example' => 'duuf****',
          ),
        ),
        11 => 
        array (
          'name' => 'InterfaceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '端口名称。

> 当前参数暂不生效。',
            'type' => 'string',
            'required' => false,
            'example' => '2',
          ),
        ),
        12 => 
        array (
          'name' => 'OspfNetworkType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OSPF区域类型。
> 当前参数暂不生效。',
            'type' => 'string',
            'required' => false,
            'example' => 'NSSA',
          ),
        ),
        13 => 
        array (
          'name' => 'OspfCost',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OSPF路由开销值。
> 当前参数暂不生效。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '[110/11]',
          ),
        ),
        14 => 
        array (
          'name' => 'RedistributeProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由重分发协议。
> 当前参数暂不生效。',
            'type' => 'string',
            'required' => false,
            'example' => 'OSPF',
          ),
        ),
        15 => 
        array (
          'name' => 'Networks',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网段。
> 当前参数暂不生效。',
            'type' => 'string',
            'required' => false,
            'example' => '192.168.10.0/24',
          ),
        ),
        16 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        17 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '109790620697****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '响应码。200标识查询任务成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '是否成功。取值：

- **true**：是。

- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9CF52A9E-FC3C-5CC8-B5EB-90DC03E9A531',
              ),
              'Message' => 
              array (
                'description' => '响应消息。',
                'type' => 'string',
                'example' => 'successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'Internal server error',
          ),
          2 => 
          array (
            'errorCode' => 'ParamCommonNotNull',
            'errorMessage' => 'Parameter must not be null',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified software instance does not support ACL.',
          ),
          5 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          6 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
          7 => 
          array (
            'errorCode' => 'MissParameter.GatewayId',
            'errorMessage' => 'The input parameter GatewayId that is mandatory for processing this model is not supplied.',
          ),
          8 => 
          array (
            'errorCode' => 'MissParameter.RouterId',
            'errorMessage' => 'The input parameter RouterId that is mandatory for processing this model is not supplied.',
          ),
          9 => 
          array (
            'errorCode' => 'MissParameter.AreaId',
            'errorMessage' => 'The input parameter AreaId that is mandatory for processing this model is not supplied.',
          ),
          10 => 
          array (
            'errorCode' => 'MissParameter.HelloTime',
            'errorMessage' => 'The input parameter HelloTime that is mandatory for processing this model is not supplied.',
          ),
          11 => 
          array (
            'errorCode' => 'MissParameter.DeadTime',
            'errorMessage' => 'The input parameter DeadTime that is mandatory for processing this model is not supplied.',
          ),
          12 => 
          array (
            'errorCode' => 'MissParameter.InterfaceName',
            'errorMessage' => 'The input parameter InterfaceName that is mandatory for processing this model is not supplied.',
          ),
          13 => 
          array (
            'errorCode' => 'MissParameter.OspfCost',
            'errorMessage' => 'The input parameter OspfCost that is mandatory for processing this model is not supplied.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidParameter.RouterId',
            'errorMessage' => 'The input parameter RouterId is illegal, please check your input.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParameter.AreaId',
            'errorMessage' => 'The input parameter AreaId is illegal, please check your input.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParameter.HelloTime',
            'errorMessage' => 'The input parameter HelloTime is illegal, please check your input.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidParameter.DeadTime',
            'errorMessage' => 'The input parameter DeadTime is illegal, please check your input.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidParameter.AuthenticationType',
            'errorMessage' => 'The input parameter AuthenticationType is illegal, please check your input.',
          ),
          19 => 
          array (
            'errorCode' => 'InvalidParameter.Password',
            'errorMessage' => 'The input parameter Password is illegal, please check your input.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidParameter.Md5KeyId',
            'errorMessage' => 'The input parameter Md5KeyId is illegal, please check your input.',
          ),
          21 => 
          array (
            'errorCode' => 'InvalidParameter.Md5Key',
            'errorMessage' => 'The input parameter Md5Key is illegal, please check your input.',
          ),
          22 => 
          array (
            'errorCode' => 'InvalidParameter.OspfCost',
            'errorMessage' => 'The input parameter OspfCost is illegal, please check your input.',
          ),
          23 => 
          array (
            'errorCode' => 'MissParameter.AuthenticationType',
            'errorMessage' => 'The input parameter AuthenticationType that is mandatory for processing this model is not supplied.',
          ),
          24 => 
          array (
            'errorCode' => 'InvalidParameter.RedistributeProtocol',
            'errorMessage' => 'The input parameter RedistributeProtocol is illegal, please check your input.',
          ),
          25 => 
          array (
            'errorCode' => 'InvalidParameter.Networks',
            'errorMessage' => 'The input parameter Networks is illegal, please check your input.',
          ),
          26 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Success\\": true,\\n  \\"RequestId\\": \\"9CF52A9E-FC3C-5CC8-B5EB-90DC03E9A531\\",\\n  \\"Message\\": \\"successful\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateSmartAccessGatewayOspfRouteResponse>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n    <RequestId>9CF52A9E-FC3C-5CC8-B5EB-90DC03E9A531</RequestId>\\n    <Message>successful</Message>\\n</UpdateSmartAccessGatewayOspfRouteResponse>","errorExample":""}]',
      'title' => '修改SAG设备动态路由协议OSPF的配置',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持修改智能接入网关设备动态路由协议OSPF的配置。',
    ),
    'ViewSmartAccessGatewayOspfRoute' => 
    array (
      'summary' => '获取SAG设备动态路由协议OSPF的配置，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-3manef62evrfr6****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4dk****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '109790620697****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AA1AE941-84A9-5F83-A955-C8DAF31C2CB8',
              ),
              'AreaId' => 
              array (
                'description' => 'OSPF区域ID。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'AuthenticationType' => 
              array (
                'description' => '认证类型。取值：

- **NONE**：不开启认证。

- **CLEARTEXT**：采用明文认证。

- **MD5**：采用MD5认证。
',
                'type' => 'string',
                'example' => 'NONE',
              ),
              'DeadTime' => 
              array (
                'description' => '超时时间间隔。单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'HelloTime' => 
              array (
                'description' => '发送Hello报文的时间间隔。单位：秒。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Md5Key' => 
              array (
                'description' => 'MD5 Key值。',
                'type' => 'string',
                'example' => '123****',
              ),
              'Md5KeyId' => 
              array (
                'description' => 'MD5 Key的编号。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RouterId' => 
              array (
                'description' => 'OSPF路由器ID。',
                'type' => 'string',
                'example' => '1.XX.XX.1',
              ),
              'TaskStates' => 
              array (
                'description' => '查询任务信息状态。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '查询任务信息状态。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ErrorMessage' => 
                    array (
                      'description' => '错误信息。Successful标识查询任务成功。',
                      'type' => 'string',
                      'example' => 'Successful',
                    ),
                    'State' => 
                    array (
                      'description' => '异步任务状态。取值：

- **Initialized**：查询任务初始化。
- **Offline**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后会继续下发。
- **Succeed**：查询任务下发成功。
- **Processing**：查询任务下发中。
- **VersionNotSupport**：智能接入网关设备当前版本不支持。
- **BuildRequestError**：管控不支持。
- **HardwareError**：由于设备原因查询任务下发失败。
- **TaskNotExist**：查询任务不存在。
- **OfflineNotConfiged**：智能接入网关设备离线未下发查询任务，智能接入网关设备上线后也不会下发。',
                      'type' => 'string',
                      'example' => 'Succeed',
                    ),
                    'ErrorCode' => 
                    array (
                      'description' => '错误码。200标识查询任务成功。',
                      'type' => 'string',
                      'example' => '200',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '查询任务创建时间戳。单位：毫秒。

时间戳的格式采用Unix时间戳，表示从格林威治时间1970年01月01日00时00分00秒至创建查询任务时的总时长。',
                      'type' => 'string',
                      'example' => '1586843621000',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified software instance does not support ACL.',
          ),
          3 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          4 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
          5 => 
          array (
            'errorCode' => 'MissParameter.GatewayId',
            'errorMessage' => 'The input parameter GatewayId that is mandatory for processing this model is not supplied.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AA1AE941-84A9-5F83-A955-C8DAF31C2CB8\\",\\n  \\"AreaId\\": 10,\\n  \\"AuthenticationType\\": \\"NONE\\",\\n  \\"DeadTime\\": 10,\\n  \\"HelloTime\\": 1,\\n  \\"Md5Key\\": \\"123****\\",\\n  \\"Md5KeyId\\": 1,\\n  \\"RouterId\\": \\"1.XX.XX.1\\",\\n  \\"TaskStates\\": [\\n    {\\n      \\"ErrorMessage\\": \\"Successful\\",\\n      \\"State\\": \\"Succeed\\",\\n      \\"ErrorCode\\": \\"200\\",\\n      \\"CreateTime\\": \\"1586843621000\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ViewSmartAccessGatewayOspfRouteResponse>\\n    <RequestId>AA1AE941-84A9-5F83-A955-C8DAF31C2CB8</RequestId>\\n    <AreaId>10</AreaId>\\n    <AuthenticationType>NONE</AuthenticationType>\\n    <DeadTime>10</DeadTime>\\n    <HelloTime>1</HelloTime>\\n    <Md5Key>123****</Md5Key>\\n    <Md5KeyId>1</Md5KeyId>\\n    <RouterId>1.XX.XX.1</RouterId>\\n    <TaskStates>\\n        <ErrorMessage>Successful</ErrorMessage>\\n        <State>Succeed</State>\\n        <ErrorCode>200</ErrorCode>\\n        <CreateTime>1586843621000</CreateTime>\\n    </TaskStates>\\n</ViewSmartAccessGatewayOspfRouteResponse>","errorExample":""}]',
      'title' => '获取SAG设备动态路由协议OSPF的配置',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持获取智能接入网关设备动态路由协议OSPF的配置。',
    ),
    'UpdateSmartAccessGatewayAdminPassword' => 
    array (
      'summary' => '修改SAG设备管理员密码，适用于设备类型为SCG5000或SCG5000-5G的智能接入网关实例，且设备版本为3.4.2及以上。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SagInsId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '网关实例id',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-sv487b7lno6go5****',
          ),
        ),
        1 => 
        array (
          'name' => 'SagSn',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'title' => '设备SN',
            'description' => '智能接入网关设备序列号。',
            'type' => 'string',
            'required' => true,
            'example' => 'sagf4ea****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => 'region id',
            'description' => '智能接入网关实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。 ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关设备新的登录密码。

密码格式要求：长度为8~30个字符，可包含大小写字母、数字和下划线（_）。

> 示例值中使用星号（*）以掩盖真实密码，不表示密码支持使用星号，输入密码时请以密码格式要求为准。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1234****',
          ),
        ),
        4 => 
        array (
          'name' => 'CrossAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询跨账号所属的智能接入网关实例。取值：

- **false**（默认值）：否。

- **true**：是。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        5 => 
        array (
          'name' => 'ResourceUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的阿里云账号（主账号）ID。',
            'type' => 'string',
            'required' => false,
            'example' => '147304382796****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Code' => 
              array (
                'description' => '响应码。200标识查询任务成功。',
                'type' => 'string',
                'example' => '200',
              ),
              'Success' => 
              array (
                'description' => '修改是否成功。取值：

- **true**：是。

- **false**：否。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EC8487CD-9338-5FCF-896A-B6D1BB1646A7',
              ),
              'Message' => 
              array (
                'description' => '响应消息。Successful标识查询任务成功。',
                'type' => 'string',
                'example' => 'Successful',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'GATEWAY.InvalidSN',
            'errorMessage' => 'The specified gateway serial number does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified software instance does not support ACL.',
          ),
          3 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotActivated',
            'errorMessage' => 'The specified Smart Access Gateway has not been activated.',
          ),
          4 => 
          array (
            'errorCode' => 'MissParameter.GatewayId',
            'errorMessage' => 'The input parameter GatewayId that is mandatory for processing this model is not supplied.',
          ),
          5 => 
          array (
            'errorCode' => 'MissParameter.Password',
            'errorMessage' => 'The input parameter Password that is mandatory for processing this model is not supplied.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.Password',
            'errorMessage' => 'The input parameter Password is not legal, please check your input.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidSpec.FeatureNotSupport',
            'errorMessage' => 'The current edition of the cloudbranch does not support this feature.',
          ),
          8 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'Cloud Box Not Support the Feature',
          ),
          9 => 
          array (
            'errorCode' => 'DeviceNotExist',
            'errorMessage' => 'The specified device does not exist',
          ),
          10 => 
          array (
            'errorCode' => 'SmartAccessGatewayNotOnline',
            'errorMessage' => 'The specified instance is not online.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Code\\": \\"200\\",\\n  \\"Success\\": true,\\n  \\"RequestId\\": \\"EC8487CD-9338-5FCF-896A-B6D1BB1646A7\\",\\n  \\"Message\\": \\"Successful\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateSmartAccessGatewayAdminPasswordResponse>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n    <RequestId>EC8487CD-9338-5FCF-896A-B6D1BB1646A7</RequestId>\\n    <Message>Successful</Message>\\n</UpdateSmartAccessGatewayAdminPasswordResponse>","errorExample":""}]',
      'title' => '修改SAG设备管理员密码',
      'description' => '目前仅设备版本为3.4.2及以上的SCG5000和SCG5000-5G设备支持修改智能接入网关设备管理员密码。',
    ),
    'CreateSmartAccessGatewaySoftware' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例的地域ID。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'Period',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例的购买时长，单位：月。
取值：**1**~**9**、**12**、**24**、**36**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '12',
          ),
        ),
        2 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动支付智能接入网关APP实例的账单。取值：

- **true**：是。
- **false**（默认值）：否。

如果您选择不自动支付账单，在您调用本接口后，请前往控制台的订单中心完成支付，实例才能创建成功。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'ChargeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例的计费类型，取值：**PREPAY**，预付费。标识智能接入网关APP实例为先付费后使用的资源。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'PREPAY',
          ),
        ),
        4 => 
        array (
          'name' => 'UserCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例的客户端账号数量规格。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
        5 => 
        array (
          'name' => 'DataPlan',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '系统每月赠送给每个客户端账号的流量套餐规格，单位：GB。取值：**5**。

>目前仅支持每月赠送给每个客户端账号5 GB的流量套餐。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '智能接入网关APP实例订单信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '24675405-74DF-4C94-82C6-B749580C498E',
              ),
              'OrderId' => 
              array (
                'description' => '购买智能接入网关APP实例的订单号。',
                'type' => 'string',
                'example' => '203000000000000',
              ),
              'SmartAGId' => 
              array (
                'description' => '智能接入网关APP实例ID。',
                'type' => 'string',
                'example' => 'sag-gnhe6sywtare5******',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '智能接入网关APP实例所属资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfm2iu4fnc****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"24675405-74DF-4C94-82C6-B749580C498E\\",\\n  \\"OrderId\\": \\"203000000000000\\",\\n  \\"SmartAGId\\": \\"sag-gnhe6sywtare5******\\",\\n  \\"ResourceGroupId\\": \\"rg-acfm2iu4fnc****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateSmartAccessGatewaySoftwareResponse>\\n    <RequestId>24675405-74DF-4C94-82C6-B749580C498E</RequestId>\\n    <OrderId>203000000000000</OrderId>\\n    <SmartAGId>sag-gnhe6sywtare5******</SmartAGId>\\n    <ResourceGroupId>rg-acfm2iu4fnc****</ResourceGroupId>\\n</CreateSmartAccessGatewaySoftwareResponse>","errorExample":""}]',
      'title' => '创建智能接入网关APP',
      'summary' => '调用CreateSmartAccessGatewaySoftware创建智能接入网关APP实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpgradeSmartAccessGatewaySoftware' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-8biez7habqwmx6****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        2 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否自动支付预付费实例的账单：

- **false**：表示否。

- **true**：表示是。

> 如果非自动支付，调用本接口后，您还需要到智能接入网关管理控制台完成账单支付。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'DataPlan',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每个账号每月赠送的流量套餐规格。单位为GB。

> 目前仅支持每个账号每个月赠送5 GB流量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
        4 => 
        array (
          'name' => 'UserCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP客户端账号数规格。

购买后可创建相应数量的客户端账号，一般为每个需要登录的员工创建一个账号。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '97A4F8A5-603E-4C3B-A91E-17CD87090EA9',
              ),
              'OrderId' => 
              array (
                'description' => '订单ID。',
                'type' => 'string',
                'example' => '20697688135****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InvalidUserCount',
            'errorMessage' => 'The specified UserCount is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InvalidDataPlan',
            'errorMessage' => 'The specified DataPlan is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"97A4F8A5-603E-4C3B-A91E-17CD87090EA9\\",\\n  \\"OrderId\\": \\"20697688135****\\"\\n}","errorExample":""},{"type":"xml","example":"<UpgradeSmartAccessGatewaySoftwareResponse>\\n<RequestId>97A4F8A5-603E-4C3B-A91E-17CD87090EA9</RequestId>\\n<OrderId>20697688135****</OrderId>\\n</UpgradeSmartAccessGatewaySoftwareResponse>","errorExample":""}]',
      'title' => '升级APP客户端账号数规格',
      'summary' => '升级智能接入网关APP的客户端账号数规格。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DowngradeSmartAccessGatewaySoftware' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-n2uym2h45lnd31****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        2 => 
        array (
          'name' => 'AutoPay',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为自动支付预付费实例的账单。取值：

- **false**（默认值）：表示否。

- **true**：表示是。

',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'DataPlan',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP账号每月赠送的流量套餐规格，单位：GB，目前仅支持每个账号每个月赠送5 GB流量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
        4 => 
        array (
          'name' => 'UserCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP账号数规格，购买后可创建相应数量的账号，一般为每个需要登录的员工创建一个账号。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3145AF24-1A5E-4AB7-90DA-7201FDD90B8D',
              ),
              'OrderId' => 
              array (
                'description' => '降配订单ID。',
                'type' => 'string',
                'example' => '204595234160786',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InvalidUserCount',
            'errorMessage' => 'The specified UserCount is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InvalidDataPlan',
            'errorMessage' => 'The specified DataPlan is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3145AF24-1A5E-4AB7-90DA-7201FDD90B8D\\",\\n  \\"OrderId\\": \\"204595234160786\\"\\n}","errorExample":""},{"type":"xml","example":"<DowngradeSmartAccessGatewaySoftwareResponse>\\n    <RequestId>3145AF24-1A5E-4AB7-90DA-7201FDD90B8D</RequestId>\\n    <OrderId>204595234160786</OrderId>\\n</DowngradeSmartAccessGatewaySoftwareResponse>","errorExample":""}]',
      'title' => '降低APP实例客户端账号数量',
      'summary' => '降低智能接入网关APP实例客户端账号数量。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateSmartAccessGatewayClientUser' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例所在地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-gnhe6sywtare5****',
          ),
        ),
        2 => 
        array (
          'name' => 'UserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户名，同一个智能接入网关App实例下的用户名不可以重复。
名称长度为7~33个字符，必须以大小写字母或数字开头，可以包含下划线（_） 、at（@）、半角句号（.）和短划线（-）。

> 用户名和密码相互依赖，若指定用户名则必须指定密码，反之，若指定密码则必须指定用户名。',
            'type' => 'string',
            'required' => false,
            'example' => 'doctest',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 如果开启客户端App服务，需要设置App的IP地址。当前账号始终保持以选择的IP地址接入。

> 设置App的IP地址必须在私网网段内。

- 如果关闭客户端App服务，系统自动从私网网段内分配可用IP地址，每次重连IP地址都会重新分配。',
            'type' => 'string',
            'required' => false,
            'example' => '10.0.XX.XX',
          ),
        ),
        4 => 
        array (
          'name' => 'UserMail',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '普通用户的邮箱地址，用于管理员向普通用户发送登录App的账号信息。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'username@example.com',
          ),
        ),
        5 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '带宽峰值。单位：Kbps。取值范围：**1 Kbps~20000 Kbps**。默认值：**2000 Kbps**。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '20',
          ),
        ),
        6 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '登录智能接入网关App的密码。

密码命名规则： 8~32位字符，以（A-Za-z0-9）开头，可包含数字、英文大小写、下划线（_）、at（@）、短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'duuf****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'UserName' => 
              array (
                'description' => '用户名。
',
                'type' => 'string',
                'example' => 'doc',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '72E82F5E-66E8-4C22-BF1F-5CEB7DC132E7',
              ),
              'UserMail' => 
              array (
                'description' => '普通用户的邮箱地址。',
                'type' => 'string',
                'example' => 'username@example.com',
              ),
              'Bandwidth' => 
              array (
                'description' => '带宽峰值。单位：Kbps。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'ClientIp' => 
              array (
                'description' => '客户端App的IP地址。',
                'type' => 'string',
                'example' => '10.0.XX.XX',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ClientUser.BandwidthInvalid',
            'errorMessage' => 'The specified Bandwidth is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'ClientUser.EmailEmpty',
            'errorMessage' => 'You must specify UserEmail.',
          ),
          2 => 
          array (
            'errorCode' => 'ClientUser.EmailInvalid',
            'errorMessage' => 'The format of the specified UserEmail is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'ClientUser.InvalidClientIp',
            'errorMessage' => 'The specified ClientIp is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'ClientUser.IpEmpty',
            'errorMessage' => 'You must specify ClientIp.',
          ),
          5 => 
          array (
            'errorCode' => 'ClientUser.IpInvalid',
            'errorMessage' => 'The specified ClientIp is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'ClientUser.NameEmpty',
            'errorMessage' => 'You must specify UserName.',
          ),
          7 => 
          array (
            'errorCode' => 'ClientUser.NameInvalid',
            'errorMessage' => 'The specified UserName is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'ClientUser.UserExist',
            'errorMessage' => 'The specified user already exists.',
          ),
          9 => 
          array (
            'errorCode' => 'ClientUser.UserOverLimit',
            'errorMessage' => 'The maximum number of users is exceeded.',
          ),
          10 => 
          array (
            'errorCode' => 'SAG.CidrEmpty',
            'errorMessage' => 'You must specify the CIDR blocks of SAG.',
          ),
          11 => 
          array (
            'errorCode' => 'ClientUser.PasswordInvalid',
            'errorMessage' => 'The specified password format is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"UserName\\": \\"doc\\",\\n  \\"RequestId\\": \\"72E82F5E-66E8-4C22-BF1F-5CEB7DC132E7\\",\\n  \\"UserMail\\": \\"username@example.com\\",\\n  \\"Bandwidth\\": 20,\\n  \\"ClientIp\\": \\"10.0.XX.XX\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateSmartAccessGatewayClientUserResponse>\\n    <UserName>doc</UserName>\\n    <RequestId>72E82F5E-66E8-4C22-BF1F-5CEB7DC132E7</RequestId>\\n    <UserMail>username@example.com</UserMail>\\n    <Bandwidth>20</Bandwidth>\\n    <ClientIp>10.0.XX.XX</ClientIp>\\n</CreateSmartAccessGatewayClientUserResponse>","errorExample":""}]',
      'title' => '创建用户',
      'summary' => '调用CreateSmartAccessGatewayClientUser创建用户。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSmartAccessGatewayClientUsers' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-kzo5dvms3dqii3*****',
          ),
        ),
        2 => 
        array (
          'name' => 'UserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端的用户名。

',
            'type' => 'string',
            'required' => false,
            'example' => 'username',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'UserMail',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端的邮箱地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'username@example.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '查询结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '列表条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '62F4CF10-F909-487E-8E95-BC35457C5F50',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Users' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'User' => 
                  array (
                    'description' => '客户端账号信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '客户端账号信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Bandwidth' => 
                        array (
                          'description' => '客户端可使用的上云带宽。单位：Kbps。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2000',
                        ),
                        'State' => 
                        array (
                          'description' => '客户端的启用状态：

- **0**：表示启用该客户端。

- **1**：表示禁用该客户端。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'ClientIp' => 
                        array (
                          'description' => '系统为客户端分配的IP地址。',
                          'type' => 'string',
                          'example' => '10.10.10.1',
                        ),
                        'UserName' => 
                        array (
                          'description' => '客户端的用户名。',
                          'type' => 'string',
                          'example' => 'username',
                        ),
                        'UserMail' => 
                        array (
                          'description' => '客户端的邮箱地址。',
                          'type' => 'string',
                          'example' => 'username@example.com',
                        ),
                        'AccelerateBandwidth' => 
                        array (
                          'description' => '客户端可使用的应用加速带宽峰值。单位：Kbps。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1000',
                        ),
                        'IsStaticIp' => 
                        array (
                          'description' => '客户端的IP地址是否为固定IP地址。

- **1**：是。

- **0**：否。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"62F4CF10-F909-487E-8E95-BC35457C5F50\\",\\n  \\"PageNumber\\": 1,\\n  \\"Users\\": {\\n    \\"User\\": [\\n      {\\n        \\"Bandwidth\\": 2000,\\n        \\"State\\": 1,\\n        \\"ClientIp\\": \\"10.10.10.1\\",\\n        \\"UserName\\": \\"username\\",\\n        \\"UserMail\\": \\"username@example.com\\",\\n        \\"AccelerateBandwidth\\": 1000,\\n        \\"IsStaticIp\\": 0\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeSmartAccessGatewayClientUsersResponse>\\n    <TotalCount>1</TotalCount>\\n    <PageSize>10</PageSize>\\n    <RequestId>62F4CF10-F909-487E-8E95-BC35457C5F50</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <Users>\\n        <Bandwidth>2000</Bandwidth>\\n        <State>1</State>\\n        <ClientIp>10.10.10.1</ClientIp>\\n        <UserName>username</UserName>\\n        <UserMail>username@example.com</UserMail>\\n        <AccelerateBandwidth>1000</AccelerateBandwidth>\\n        <IsStaticIp>0</IsStaticIp>\\n    </Users>\\n</DescribeSmartAccessGatewayClientUsersResponse>","errorExample":""}]',
      'title' => '查询智能接入网关APP实例用户列表',
      'summary' => '调用DescribeSmartAccessGatewayClientUsers查询智能接入网关APP实例下的客户端账号信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifySmartAccessGatewayClientUser' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-rz2e23c0e78ema****',
          ),
        ),
        2 => 
        array (
          'name' => 'UserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端的用户名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'username',
          ),
        ),
        3 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端可使用的带宽。单位：Kbps。

取值范围：**1**~**20000**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'Email',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端的邮箱地址。',
            'type' => 'string',
            'required' => false,
            'example' => 'username@example.com',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'UserName' => 
              array (
                'description' => '客户端的用户名。',
                'type' => 'string',
                'example' => 'username',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5F0078B5-8AAD-4B53-8351-4C91B8EA528A',
              ),
              'UserMail' => 
              array (
                'description' => '客户端的邮箱地址。',
                'type' => 'string',
                'example' => 'username@example.com',
              ),
              'Bandwidth' => 
              array (
                'description' => '客户端可使用的带宽。单位：Kbps。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'ClientIp' => 
              array (
                'description' => '客户端的IP地址。',
                'type' => 'string',
                'example' => '10.10.10.1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ClientUser.BandwidthInvalid',
            'errorMessage' => 'The specified Bandwidth is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'ClientUser.NameEmpty',
            'errorMessage' => 'You must specify UserName.',
          ),
          2 => 
          array (
            'errorCode' => 'ClientUser.NameInvalid',
            'errorMessage' => 'The specified UserName is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          4 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceNotFound.User',
            'errorMessage' => 'The specified user is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"UserName\\": \\"username\\",\\n  \\"RequestId\\": \\"5F0078B5-8AAD-4B53-8351-4C91B8EA528A\\",\\n  \\"UserMail\\": \\"username@example.com\\",\\n  \\"Bandwidth\\": 1,\\n  \\"ClientIp\\": \\"10.10.10.1\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifySmartAccessGatewayClientUserResponse>\\n    <UserName>username</UserName>\\n    <RequestId>5F0078B5-8AAD-4B53-8351-4C91B8EA528A</RequestId>\\n    <UserMail>username@example.com</UserMail>\\n    <Bandwidth>1</Bandwidth>\\n    <ClientIp>10.10.10.1</ClientIp>\\n</ModifySmartAccessGatewayClientUserResponse>","errorExample":""}]',
      'title' => '可修改用户带宽及邮箱地址',
      'summary' => '调用ModifySmartAccessGatewayClientUser接口修改客户端的带宽和邮箱地址。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ResetSmartAccessGatewayClientUserPassword' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-kzo5dvms3dqii3****',
          ),
        ),
        2 => 
        array (
          'name' => 'UserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待重置密码的客户端的用户名。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'username',
          ),
        ),
        3 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端的新密码。

- 如果您不输入本参数，系统将随机生成一个新密码。
- 如果您输入本参数，则表示您自定义新密码。
        
        密码长度为8~32个字符，必须以大小写字母或数字开头，可以包含下划线（_） 、at（@）和短划线（-）。

系统重置密码后，会通过邮件向您发送新的密码。',
            'type' => 'string',
            'required' => false,
            'example' => 'Password****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BE1F7E80-4558-4021-B6D2-B94DA8AAAF81',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ClientUser.NameEmpty',
            'errorMessage' => 'You must specify UserName.',
          ),
          1 => 
          array (
            'errorCode' => 'ClientUser.NameInvalid',
            'errorMessage' => 'The specified UserName is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          4 => 
          array (
            'errorCode' => 'ClientUser.PasswordInvalid',
            'errorMessage' => 'The specified password format is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BE1F7E80-4558-4021-B6D2-B94DA8AAAF81\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <ResetSmartAccessGatewayClientUserPasswordResponse>\\r\\n\\t<RequestId>BE1F7E80-4558-4021-B6D2-B94DA8AAAF81</RequestId>\\r\\n    </ResetSmartAccessGatewayClientUserPasswordResponse>","errorExample":""}]',
      'title' => '重置智能接入网关APP客户端密码',
      'summary' => '调用ResetSmartAccessGatewayClientUserPassword重置智能接入网关APP客户端密码。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteSmartAccessGatewayClientUser' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-kzo5dvms3dqii3****',
          ),
        ),
        2 => 
        array (
          'name' => 'UserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端的用户名。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'username',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '09AD82DC-FE26-4B66-B526-2FA6BE82A4D3',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          2 => 
          array (
            'errorCode' => 'ClientUser.NameEmpty',
            'errorMessage' => 'You must specify UserName.',
          ),
          3 => 
          array (
            'errorCode' => 'ClientUser.NameInvalid',
            'errorMessage' => 'The specified UserName is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'ClientUser.UserInUsing',
            'errorMessage' => 'The specified SAG user account is already in use this month. You cannot delete it.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"09AD82DC-FE26-4B66-B526-2FA6BE82A4D3\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <DeleteSmartAccessGatewayClientUserResponse>\\r\\n\\t<RequestId>09AD82DC-FE26-4B66-B526-2FA6BE82A4D3</RequestId>\\r\\n    </DeleteSmartAccessGatewayClientUserResponse>","errorExample":""}]',
      'title' => '删除APP客户端用户',
      'summary' => '调用DeleteSmartAccessGatewayClientUser删除APP客户端用户。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableSmartAccessGatewayUser' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'UserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1234',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-va03wf4l4idaj*****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F5894299-84A2-48C1-A999-28908B99F45D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'You are not authorized to operate on the specified resource.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F5894299-84A2-48C1-A999-28908B99F45D\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<EnableSmartAccessGatewayUserResponse>\\r\\n\\t<RequestId>F5894299-84A2-48C1-A999-28908B99F45D</RequestId>\\r\\n</EnableSmartAccessGatewayUserResponse>","errorExample":""}]',
      'title' => '激活智能接入网关的用户',
      'summary' => '激活智能接入网关的用户。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableSmartAccessGatewayUser' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'UserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1234',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-va03wf4l4idaj*****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '05E86199-6CF6-4F4E-A9CE-9BFC5B020B72',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbbiden.SubUser',
            'errorMessage' => 'You are not authorized to operate on the specified resource.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"05E86199-6CF6-4F4E-A9CE-9BFC5B020B72\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<DisableSmartAccessGatewayUserResponse>\\r\\n\\t<RequestId>05E86199-6CF6-4F4E-A9CE-9BFC5B020B72</RequestId>\\r\\n</DisableSmartAccessGatewayUserResponse>","errorExample":""}]',
      'title' => '禁用智能接入网关的用户',
      'summary' => '禁用智能接入网关的用户。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyClientUserDNS' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-9uyg53s6juhpxv****',
          ),
        ),
        2 => 
        array (
          'name' => 'AppDNS',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例客户端连接私网时使用的主备DNS配置。

>- 若客户端接入阿里云过程中使用了PrivateZone服务，则DNS地址分别为100.100.2.136和100.100.2.138。
- Android系统安装客户端2.1.1及以上版本，macOS系统安装客户端2.1.1及以上版本才支持DNS配置。
- 此参数为非必填项，如果不指定此DNS配置，系统默认为不配置此参数并会将原有参数值清空。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '智能接入网关APP实例客户端连接私网时使用的主备DNS。',
              'type' => 'string',
              'required' => false,
              'example' => '100.100.2.136',
            ),
            'required' => false,
            'example' => '100.XX.XX.100',
            'maxItems' => 2,
          ),
        ),
        3 => 
        array (
          'name' => 'RecoveredDNS',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例客户端断开私网连接时使用的主备DNS配置。

> 此功能暂未上线，敬请期待。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '智能接入网关APP实例客户端断开私网连接时使用的主备DNS。',
              'type' => 'string',
              'required' => false,
              'example' => '100.100.2.138',
            ),
            'required' => false,
            'example' => '100.XX.XX.110',
            'maxItems' => 2,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BFE2D0C0-B69F-422D-A8A3-928AD511B471',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParam.Ip',
            'errorMessage' => 'The specified IP address is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BFE2D0C0-B69F-422D-A8A3-928AD511B471\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyClientUserDNSResponse>\\r\\n<RequestId>BFE2D0C0-B69F-422D-A8A3-928AD511B471</RequestId>\\r\\n</ModifyClientUserDNSResponse>","errorExample":""}]',
      'title' => '修改智能接入网关APP实例DNS配置',
      'summary' => '调用ModifyClientUserDNS接口修改智能接入网关App实例DNS配置。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeClientUserDNS' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-9uyg53s6juhpxv****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'AppDNS' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'description' => '智能接入网关App实例客户端连接私网时使用的主备DNS配置。',
                  'type' => 'string',
                  'example' => '100.XX.XX.100',
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '894AA8BD-0627-45B1-AA18-9CE1D50DA9D0',
              ),
              'RecoveredDNS' => 
              array (
                'type' => 'array',
                'items' => 
                array (
                  'description' => '智能接入网关App实例客户端断开私网连接时使用的主备DNS配置。',
                  'type' => 'string',
                  'example' => '110.XX.XX.110',
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"AppDNS\\": [\\n    \\"100.XX.XX.100\\"\\n  ],\\n  \\"RequestId\\": \\"894AA8BD-0627-45B1-AA18-9CE1D50DA9D0\\",\\n  \\"RecoveredDNS\\": [\\n    \\"110.XX.XX.110\\"\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<DescribeClientUserDNSResponse>\\n<AppDNS>100.XX.XX.100</AppDNS>\\n<AppDNS>100.XX.XX.130</AppDNS>\\n<RequestId>894AA8BD-0627-45B1-AA18-9CE1D50DA9D0</RequestId>\\n</DescribeClientUserDNSResponse>","errorExample":""}]',
      'title' => '查询APP实例DNS配置信息',
      'summary' => '查询智能接入网关APP实例DNS配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeUserFlowStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-mfkg*****',
          ),
        ),
        2 => 
        array (
          'name' => 'StatisticsDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '统计日期，格式为YYYYMM。

> 如果不设置，默认表示当月。',
            'type' => 'string',
            'required' => false,
            'example' => '201905',
          ),
        ),
        3 => 
        array (
          'name' => 'UserNames',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '用户名列表。列表最大长度为50。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '用户名。',
              'type' => 'string',
              'required' => false,
              'example' => 'doctest',
            ),
            'required' => true,
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SagStatistics' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Statistics' => 
                  array (
                    'description' => '流量统计。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '流量统计。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TotalBytes' => 
                        array (
                          'description' => '已使用的流量值。单位：Byte。',
                          'type' => 'string',
                          'example' => '100',
                        ),
                        'UserName' => 
                        array (
                          'description' => '用户名。',
                          'type' => 'string',
                          'example' => 'doctest',
                        ),
                        'TotalLeaveBytes' => 
                        array (
                          'description' => '智能接入网关App用户剩余免费流量值。单位：Byte。',
                          'type' => 'string',
                          'example' => '1000',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9552AD68-18EA-4074-B27D-40040FBA9683',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"SagStatistics\\": {\\n    \\"Statistics\\": [\\n      {\\n        \\"TotalBytes\\": \\"100\\",\\n        \\"UserName\\": \\"doctest\\",\\n        \\"TotalLeaveBytes\\": \\"1000\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"9552AD68-18EA-4074-B27D-40040FBA9683\\"\\n}","errorExample":""},{"type":"xml","example":"<DescribeUserFlowStatisticsResponse>\\n    <SagStatistics>\\n        <TotalBytes>100</TotalBytes>\\n        <UserName>doctest</UserName>\\n        <TotalLeaveBytes>1000</TotalLeaveBytes>\\n    </SagStatistics>\\n    <RequestId>9552AD68-18EA-4074-B27D-40040FBA9683</RequestId>\\n</DescribeUserFlowStatisticsResponse>","errorExample":""}]',
      'title' => '查询APP实例用户流量统计',
      'summary' => '查询指定智能接入网关APP实例下用户的流量统计。',
    ),
    'DescribeUserOnlineClients' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例所在的地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-wfjgn**********',
          ),
        ),
        2 => 
        array (
          'name' => 'UserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户名，同一个智能接入网关APP实例下的用户名不可以重复。

用户名和密码相互依赖，若指定用户名则必须指定密码，反之，若指定密码则必须指定用户名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'doctest',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7108A98F-C47D-45F7-A4D8-C2E3022735DA',
              ),
              'Users' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'User' => 
                  array (
                    'description' => '用户信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ClientIp' => 
                        array (
                          'description' => '阿里云APP客户端IP。',
                          'type' => 'string',
                          'example' => '10.**.**.**',
                        ),
                        'OnlineTime' => 
                        array (
                          'description' => '上线时间。',
                          'type' => 'string',
                          'example' => '1559125519',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ClientUser.NameEmpty',
            'errorMessage' => 'You must specify UserName.',
          ),
          1 => 
          array (
            'errorCode' => 'ClientUser.NameInvalid',
            'errorMessage' => 'The specified UserName is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7108A98F-C47D-45F7-A4D8-C2E3022735DA\\",\\n  \\"Users\\": {\\n    \\"User\\": [\\n      {\\n        \\"ClientIp\\": \\"10.**.**.**\\",\\n        \\"OnlineTime\\": \\"1559125519\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n\\t<DescribeUserOnlineClientsResponse>\\r\\n    <Users>\\r\\n\\t\\t<User>\\r\\n\\t\\t\\t<OnlineTime>1559125519</OnlineTime>\\r\\n\\t\\t\\t<ClientIp>192.168.0.2</ClientIp>\\r\\n\\t\\t</User>\\r\\n\\t</Users>\\r\\n\\t<RequestId>92B22889-5451-4A1D-9432-66ED5AB3DD04</RequestId>\\r\\n    </DescribeUserOnlineClientsResponse>","errorExample":""}]',
      'title' => '查询用户在线连接列表',
      'summary' => '根据用户名和智能接入网关APP实例ID查询指定用户在线连接列表。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeSagOnlineClientStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关App实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '智能接入网关App实例ID列表，N的最大值为50。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '智能接入网关App实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'sag-6z21oj0vjjrx6s****',
            ),
            'required' => false,
            'example' => 'sag-va03wf4l4idaj*****',
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SagStatistics' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Statistics' => 
                  array (
                    'description' => '在线连接数据。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SmartAGId' => 
                        array (
                          'description' => '智能接入网关App实例ID。',
                          'type' => 'string',
                          'example' => 'sag-va03wf4l4idaj*****',
                        ),
                        'OnlineCount' => 
                        array (
                          'description' => '当前智能接入网关App实例在线连接的客户端数。',
                          'type' => 'string',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9EC839B6-0EA5-4F19-A4B7-A9E465D057AE',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => ' The specified smart access gateway instance ID does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"SagStatistics\\": {\\n    \\"Statistics\\": [\\n      {\\n        \\"SmartAGId\\": \\"sag-va03wf4l4idaj*****\\",\\n        \\"OnlineCount\\": \\"0\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"9EC839B6-0EA5-4F19-A4B7-A9E465D057AE\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <DescribeSagOnlineClientStatisticsResponse>\\r\\n\\t<RequestId>9EC839B6-0EA5-4F19-A4B7-A9E465D057AE</RequestId>\\r\\n\\t<SagStatistics>\\r\\n\\t\\t<Statistics>\\r\\n\\t\\t\\t<SmartAGId>sag-va03wf4l4idaj0***</SmartAGId>\\r\\n\\t\\t\\t<OnlineCount>0</OnlineCount>\\r\\n\\t\\t</Statistics>\\r\\n\\t</SagStatistics>\\r\\n    </DescribeSagOnlineClientStatisticsResponse>","errorExample":""}]',
      'title' => '查询APP实例在线连接数据统计',
      'summary' => '查询当前用户智能接入网关APP实例在线连接数据。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeUserOnlineClientStatistics' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例所在的地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-sfjg*****',
          ),
        ),
        2 => 
        array (
          'name' => 'UserNames',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '用户名列表，多个用户用“,”隔开，最多可同时查询50个用户信息。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '用户名。',
              'type' => 'string',
              'required' => false,
              'example' => 'doctest',
            ),
            'required' => true,
            'example' => 'doctest',
            'maxItems' => 50,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'UserStatistics' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Statistics' => 
                  array (
                    'description' => '指定用户在线连接信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'OnlineCount' => 
                        array (
                          'description' => '在线连接数。',
                          'type' => 'string',
                          'example' => '2',
                        ),
                        'UserName' => 
                        array (
                          'description' => '用户名。',
                          'type' => 'string',
                          'example' => 'doctest',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '14846A6A-2192-4F6A-B272-B8BD68EBC89B',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ClientUser.NameEmpty',
            'errorMessage' => 'You must specify UserName.',
          ),
          1 => 
          array (
            'errorCode' => 'ClientUser.NameInvalid',
            'errorMessage' => 'The specified UserName is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.InstanceIdEmpty',
            'errorMessage' => 'You must specify the SAG instance ID.',
          ),
          3 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"UserStatistics\\": {\\n    \\"Statistics\\": [\\n      {\\n        \\"OnlineCount\\": \\"2\\",\\n        \\"UserName\\": \\"doctest\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"14846A6A-2192-4F6A-B272-B8BD68EBC89B\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <DescribeUserOnlineClientStatisticsResponse>\\r\\n\\t<RequestId>14846A6A-2192-4F6A-B272-B8BD68EBC89B</RequestId>\\r\\n\\t<UserStatistics>\\r\\n\\t\\t<Statistics>\\r\\n\\t\\t\\t<UserName>doctest</UserName>\\r\\n\\t\\t\\t<OnlineCount>0</OnlineCount>\\r\\n\\t\\t</Statistics>\\r\\n\\t</UserStatistics>\\r\\n    </DescribeUserOnlineClientStatisticsResponse>","errorExample":""}]',
      'title' => '查询APP实例用户在线连接统计数',
      'summary' => '查询指定智能接入网关APP实例下指定用户的在线连接统计数。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'KickOutClients' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例所在的地域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-ehjfb*******',
          ),
        ),
        2 => 
        array (
          'name' => 'Username',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户名，同一个智能接入网关APP实例下的用户名不可以重复。

用户名和密码相互依赖，若指定用户名则必须指定密码，反之，若指定密码则必须指定用户名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'doctest',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '76FD7E08-6AA1-4B1B-99FB-8B3CA6C99A8E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ClientUser.NameEmpty',
            'errorMessage' => 'You must specify UserName.',
          ),
          1 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"76FD7E08-6AA1-4B1B-99FB-8B3CA6C99A8E\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <KickOutClientsResponse>\\r\\n\\t<RequestId>7108A98F-C47D-45F7-A4D8-C2E3022735DA</RequestId>\\r\\n    </KickOutClientsResponse>","errorExample":""}]',
      'title' => '剔除在线连接',
      'summary' => '根据智能接入网关APP实例ID和用户名，剔除在线连接。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RoamClientUser' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的智能接入网关App实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'OriginSmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源智能接入网关App实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-m9uhqekwnqcnyy****',
          ),
        ),
        2 => 
        array (
          'name' => 'TargetSmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的智能接入网关App实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-ghwa10ko6ndwug****',
          ),
        ),
        3 => 
        array (
          'name' => 'OriginRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源智能接入网关App实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ap-southeast-1',
          ),
        ),
        4 => 
        array (
          'name' => 'UserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要漫游的客户端账号的用户名。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'nametest',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3200E8A3-563F-4FFC-8BDB-0F1263FA69E8',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.InstanceNoFound',
            'errorMessage' => 'The specified SAG instance does not exist.',
          ),
          1 => 
          array (
            'errorCode' => 'ClientUser.NotSupportAction',
            'errorMessage' => 'You cannot create a user in the current SAG instance.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.CidrEmpty',
            'errorMessage' => 'You must specify the CIDR blocks of SAG.',
          ),
          3 => 
          array (
            'errorCode' => 'ClientUser.BandwidthInvalid',
            'errorMessage' => 'The specified Bandwidth is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'ClientUser.InvalidClientIp',
            'errorMessage' => 'The specified ClientIp is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'ClientUser.UserOverLimit',
            'errorMessage' => 'The maximum number of users is exceeded.',
          ),
          6 => 
          array (
            'errorCode' => 'ClientUser.UserExist',
            'errorMessage' => 'The specified user already exists.',
          ),
          7 => 
          array (
            'errorCode' => 'ClientUser.NameInvalid',
            'errorMessage' => 'The specified UserName is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'SAG.CidrOverlap',
            'errorMessage' => 'The specified CIDR overlaps with an existing CIDR.',
          ),
          9 => 
          array (
            'errorCode' => 'EnterpriseCode.ConfigDifferent',
            'errorMessage' => 'The target smart access gateway enterprise code or idaas configuration is not the same.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3200E8A3-563F-4FFC-8BDB-0F1263FA69E8\\"\\n}","errorExample":""},{"type":"xml","example":"<RoamClientUserResponse>\\n    <RequestId>3200E8A3-563F-4FFC-8BDB-0F1263FA69E8</RequestId>\\n</RoamClientUserResponse>","errorExample":""}]',
      'title' => '实现SAG App客户端漫游',
      'summary' => '实现智能接入网关App客户端漫游，客户端可跨区域访问内网。',
      'description' => '在调用`RoamClientUser`接口前，建议您先了解智能接入网关App漫游功能及其说明。更多信息，请参见[配置客户端漫游](~~177220~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateEnterpriseCode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。

您可以调用[DescribeRegions](~~69813~~)查询智能接入网关支持的地域及对应的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'EnterpriseCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业码。

企业码长度为5个字符，必须包含字母和数字，字母可以是大写或者小写。企业码必须与其他企业码不重复，保证全球唯一。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '12P**',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。
> 若您未指定，则系统自动使用API请求的**RequestId**作为**ClientToken**标识。每次API请求的**RequestId**可能不一样。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '02fb3da4****	',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FBDB18D8-E91E-4978-8D6C-6E2E3EE10133',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'EnterpriseCode.BeenOccupied',
            'errorMessage' => 'The specified enterprise code is occupied by other enterprises.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FBDB18D8-E91E-4978-8D6C-6E2E3EE10133\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateEnterpriseCodeResponse>\\r\\n<RequestId>FBDB18D8-E91E-4978-8D6C-6E2E3EE10133</RequestId>\\r\\n</CreateEnterpriseCodeResponse>","errorExample":""}]',
      'title' => '创建企业码',
      'summary' => '调用CreateEnterpriseCode创建企业码。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteEnterpriseCode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。

您可以调用[DescribeRegions](~~69813~~)查询智能接入网关支持的地域及对应的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'EnterpriseCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '12***',
          ),
        ),
        2 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '02fb3da4****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9DD3DFB2-A9BF-4BEE-9542-661411A9851E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'EnterpriseCode.BeingUsed',
            'errorMessage' => 'The specified enterprise code is being used.',
          ),
          1 => 
          array (
            'errorCode' => 'EnterpriseCode.DeleteLimit',
            'errorMessage' => 'The specified default enterprise code cannot be deleted.',
          ),
          2 => 
          array (
            'errorCode' => 'EnterpriseCode.NotExist',
            'errorMessage' => 'The specified enterprise code does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9DD3DFB2-A9BF-4BEE-9542-661411A9851E\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteEnterpriseCodeResponse>\\r\\n<RequestId>9DD3DFB2-A9BF-4BEE-9542-661411A9851E</RequestId>\\r\\n</DeleteEnterpriseCodeResponse>","errorExample":""}]',
      'title' => '删除指定企业码',
      'summary' => '调用DeleteEnterpriseCode删除指定企业码。',
      'description' => '在您删除企业码前，请先了解以下信息：
- 不支持删除默认企业码。
如果您要删除的企业码为默认企业码，您可以先修改默认企业码为普通企业码，然后对其进行删除。具体操作，请参见[UpdateEnterpriseCode](~~197700~~)。

- 不支持删除已绑定智能接入网关APP实例的企业码。
如果您要删除的企业码下已经有绑定的智能接入网关APP实例，您可以先更换智能接入网关APP实例的企业码为其他企业码，然后再删除当前企业码。具体操作，请参见[UpdateSmartAGEnterpriseCode](~~197701~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateEnterpriseCode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。

您可以调用[DescribeRegions](~~69813~~)查询智能接入网关支持的地域及对应的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'EnterpriseCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '企业码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '12P**',
          ),
        ),
        2 => 
        array (
          'name' => 'IsDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否将目标企业码置为默认企业码。取值：

- **true**：是。
- **false**：否。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '02fb3da4****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FBDB18D8-E91E-4978-8D6C-6E2E3EE10133',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'EnterpriseCode.NotExist',
            'errorMessage' => 'The specified enterprise code does not exist.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FBDB18D8-E91E-4978-8D6C-6E2E3EE10133\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateEnterpriseCodeResponse>\\r\\n<RequestId>FBDB18D8-E91E-4978-8D6C-6E2E3EE10133</RequestId>\\r\\n</UpdateEnterpriseCodeResponse>","errorExample":""}]',
      'title' => '更改指定企业码的属性',
      'summary' => '调用UpdateEnterpriseCode更改指定企业码的属性。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateSmartAGEnterpriseCode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'EnterpriseCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要更换的目标企业码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '12P**',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关APP实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-rz2e23c0e78ema****',
          ),
        ),
        3 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '客户端Token，用于保证请求的幂等性。

由客户端生成该参数值，要保证在不同请求间唯一，最大值不超过64个ASCII字符。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '02fb3da4-130e****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FBDB18D8-E91E-4978-8D6C-6E2E3EE10133',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'EnterpriseCode.UserNameConflict',
            'errorMessage' => 'The specified username already exists.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          1 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FBDB18D8-E91E-4978-8D6C-6E2E3EE10133\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateSmartAGEnterpriseCodeResponse>\\r\\n<RequestId>FBDB18D8-E91E-4978-8D6C-6E2E3EE10133</RequestId>\\r\\n</UpdateSmartAGEnterpriseCodeResponse>","errorExample":""}]',
      'title' => '更换智能接入网关APP实例绑定的企业码',
      'summary' => '调用UpdateSmartAGEnterpriseCode更换智能接入网关APP实例绑定的企业码。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListEnterpriseCode' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'EnterpriseCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的企业码。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '12P**',
          ),
        ),
        2 => 
        array (
          'name' => 'IsDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否只查询默认企业码。取值：

- **true**：是。
- **false**（默认值）：否。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'NextToken',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时，下一次查询的Token。',
            'type' => 'string',
            'required' => false,
            'example' => 'caeba0bbb2be03f84eb48b699f0*****',
          ),
        ),
        4 => 
        array (
          'name' => 'MaxResults',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分批次查询时每次显示的条目数。

取值范围：**1**~**100**。默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '2',
            'default' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '查询结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'NextToken' => 
              array (
                'description' => '分批次查询时，下一次查询的Token。',
                'type' => 'string',
                'example' => 'caeba0bbb2be03f84eb48b699f0*****',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1A57EF84-D587-4CF9-B0C8-307488BF52C9',
              ),
              'MaxResults' => 
              array (
                'description' => '分批次查询时每次显示的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'EnterpriseCodes' => 
              array (
                'description' => '企业码信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '企业码信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'IsDefault' => 
                    array (
                      'description' => '是否为默认企业码：

- **true**：是。
- **false**：否。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'EnterpriseCode' => 
                    array (
                      'description' => '企业码。',
                      'type' => 'string',
                      'example' => '12P**',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 2,\\n  \\"NextToken\\": \\"caeba0bbb2be03f84eb48b699f0*****\\",\\n  \\"RequestId\\": \\"1A57EF84-D587-4CF9-B0C8-307488BF52C9\\",\\n  \\"MaxResults\\": 2,\\n  \\"EnterpriseCodes\\": [\\n    {\\n      \\"IsDefault\\": true,\\n      \\"EnterpriseCode\\": \\"12P**\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListEnterpriseCodeResponse>\\n    <TotalCount>2</TotalCount>\\n    <RequestId>1A57EF84-D587-4CF9-B0C8-307488BF52C9</RequestId>\\n    <MaxResults>10</MaxResults>\\n    <EnterpriseCodes>\\n        <IsDefault>false</IsDefault>\\n        <EnterpriseCode>12P**</EnterpriseCode>\\n        <SmartAGCount>2</SmartAGCount>\\n    </EnterpriseCodes>\\n    <EnterpriseCodes>\\n        <IsDefault>true</IsDefault>\\n        <EnterpriseCode>12P**</EnterpriseCode>\\n        <SmartAGCount>5</SmartAGCount>\\n    </EnterpriseCodes>\\n</ListEnterpriseCodeResponse>","errorExample":""}]',
      'title' => '查询企业码列表',
      'summary' => '调用ListEnterpriseCode接口查询企业码信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateCloudConnectNetwork' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => ' 云连接网实例所属地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网实例的名称。 

名称长度为2~100个字符，以大小写字母或中文开头，可包含数字、下划线（_）、半角句号（.）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'ccnname',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网实例的描述。 

描述长度为2~128个字符，以大小写字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'ccndesc',
          ),
        ),
        3 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '私网网段。',
            'type' => 'string',
            'required' => false,
            'example' => '172.XX.XX.0/24',
          ),
        ),
        4 => 
        array (
          'name' => 'SnatCidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SNAT私网网段。',
            'type' => 'string',
            'required' => false,
            'example' => '172.XX.XX.0/25',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '云连接网实例信息。',
            'type' => 'object',
            'properties' => 
            array (
              'Status' => 
              array (
                'description' => '云连接网实例状态。

- **Active**：正常。
- **Pending**：待创建。',
                'type' => 'string',
                'example' => 'Active',
              ),
              'Description' => 
              array (
                'description' => '云连接网实例的描述信息。',
                'type' => 'string',
                'example' => 'ccndesc',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C48E8EB2-37A4-495B-A95C-29CA1FD26C82',
              ),
              'CcnId' => 
              array (
                'description' => '云连接网实例ID。',
                'type' => 'string',
                'example' => 'ccn-l9340rlu5ens*****',
              ),
              'CidrBlock' => 
              array (
                'description' => '私网网段。',
                'type' => 'string',
                'example' => '172.XX.XX.0/24',
              ),
              'SnatCidrBlock' => 
              array (
                'description' => 'SNAT私网网段。',
                'type' => 'string',
                'example' => '172.XX.XX.0/25',
              ),
              'Name' => 
              array (
                'description' => '云连接网实例的名称。',
                'type' => 'string',
                'example' => 'ccnname',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '云连接网实例所属的资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfm2iu4fnc****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'CCN.CidrAmountLimit',
            'errorMessage' => 'The maximum number of CCN CIDR blocks is exceeded.',
          ),
          1 => 
          array (
            'errorCode' => 'CCN.CidrEmpty',
            'errorMessage' => 'You must specify the CCN CIDR block.',
          ),
          2 => 
          array (
            'errorCode' => 'CCN.InvalidCidr',
            'errorMessage' => 'The specified CCN CIDR block is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'CCN.InvalidSnatCidr',
            'errorMessage' => 'The SNAT CIDR block of CCN is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'CCN.SnatCidrConflict',
            'errorMessage' => 'The specified SNAT CIDR block is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'Description not valid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name not valid.',
          ),
          2 => 
          array (
            'errorCode' => 'CcnAmountLimit',
            'errorMessage' => 'The CCNs you created has reached the limit, you can raise the limit by application.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Status\\": \\"Active\\",\\n  \\"Description\\": \\"ccndesc\\",\\n  \\"RequestId\\": \\"C48E8EB2-37A4-495B-A95C-29CA1FD26C82\\",\\n  \\"CcnId\\": \\"ccn-l9340rlu5ens*****\\",\\n  \\"CidrBlock\\": \\"172.XX.XX.0/24\\",\\n  \\"SnatCidrBlock\\": \\"172.XX.XX.0/25\\",\\n  \\"Name\\": \\"ccnname\\",\\n  \\"ResourceGroupId\\": \\"rg-acfm2iu4fnc****\\"\\n}","errorExample":"{\\n  \\"Name\\": \\"DocTest\\",\\n  \\"Status\\": \\"Active\\",\\n  \\"RequestId\\": \\"F0C4D78D-C60E-4A3B-A652-3A2835305C0B\\",\\n  \\"CcnId\\": \\"ccn-l9340rlu5enstmzj5i\\"\\n}"},{"type":"xml","example":"<CreateCloudConnectNetworkResponse>\\n<Status>Active</Status>\\n<RequestId>C48E8EB2-37A4-495B-A95C-29CA1FD26C82</RequestId>\\n<ResourceGroupId>rg-acfm2iu4fnc****</ResourceGroupId>\\n<CcnId>ccn-tcw17az0542xcj****</CcnId>\\n<Name>zxtest</Name>\\n</CreateCloudConnectNetworkResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<CreateCloudConnectNetworkResponse>\\n  <Name>DocTest</Name>\\n  <Status>Active</Status>\\n  <RequestId>F0C4D78D-C60E-4A3B-A652-3A2835305C0B</RequestId>\\n  <CcnId>ccn-l9340rlu5enstmzj5i</CcnId>\\n</CreateCloudConnectNetworkResponse>"}]',
      'title' => '创建云连接网',
      'summary' => '调用CreateCloudConnectNetwork接口创建云连接网实例。',
      'description' => '云连接网CCN（Cloud Connect Network）是由阿里云分布式接入网关组成的设备接入矩阵，是智能接入网关的另一个重要组成部分。在将智能接入网关与云连接网绑定后，智能接入网关便可通过云连接网将本地网络连接至阿里云。更多信息，请参见[云连接网介绍](~~93667~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteCloudConnectNetwork' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CcnId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ccn-bxuau4ezctts2*****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网的所属地域ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0BAAF2B9-88B8-4574-BDBE-102A90EE3FEE',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.CCN',
            'errorMessage' => 'Invalid cloud connect network id.',
          ),
          2 => 
          array (
            'errorCode' => 'AlreadyBound.CEN',
            'errorMessage' => 'This instance has been bound, please unbind first.',
          ),
          3 => 
          array (
            'errorCode' => 'AlreadyBound.SMARTAG',
            'errorMessage' => 'This instance has been bound, please unbind smart access gateway first.',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0BAAF2B9-88B8-4574-BDBE-102A90EE3FEE\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteCloudConnectNetworkResponse>\\n    <RequestId>0BAAF2B9-88B8-4574-BDBE-102A90EE3FEE</RequestId>\\n</DeleteCloudConnectNetworkResponse>","errorExample":""}]',
      'title' => '删除云连接网',
      'summary' => '调用DeleteCloudConnectNetwork删除云连接网。',
      'description' => '> 确保要删除的云连接网没有关联的智能接入网关和云企业网。 ',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyCloudConnectNetwork' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CcnId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ccn-l9340rlu5ens*****',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网的名称。 

长度为2~128个字符，必须以字母或中文开头，可包含数字，半角句号（.），下划线（_）和短划线（-），但不能以`http:// `或` https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'ccn名称',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网的描述。 

长度为2~256个字符，必须以字母或中文开头，但不能以`http:// `或 `https://`开头。  ',
            'type' => 'string',
            'required' => false,
            'example' => 'ccn描述',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网的所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        4 => 
        array (
          'name' => 'CidrBlock',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '私网网段。',
            'type' => 'string',
            'required' => false,
            'example' => '10.10.10.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'InterworkingStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否允许绑定同一个云连接网的智能接入网关实例互通。

- **enable**：允许。
- **disable**：不允许。',
            'type' => 'string',
            'required' => false,
            'example' => 'enable',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0BAAF2B9-88B8-4574-BDBE-102A90EE3FEE',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'CCN.CidrEmpty',
            'errorMessage' => 'You must specify the CCN CIDR block.',
          ),
          1 => 
          array (
            'errorCode' => 'CCN.CidrAmountLimit',
            'errorMessage' => 'The maximum number of CCN CIDR blocks is exceeded.',
          ),
          2 => 
          array (
            'errorCode' => 'CCN.CidrInUse',
            'errorMessage' => 'The specified CCN CIDR block is being used.',
          ),
          3 => 
          array (
            'errorCode' => 'CCN.InvalidCidr',
            'errorMessage' => 'The specified CCN CIDR block is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'CCN.InvalidId',
            'errorMessage' => 'You must specify the CCN instance ID.',
          ),
          5 => 
          array (
            'errorCode' => 'CCN.InvalidSnatCidr',
            'errorMessage' => 'The SNAT CIDR block of CCN is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'CCN.SnatCidrConflict',
            'errorMessage' => 'The specified SNAT CIDR block is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'CCN.SnatCidrInUse',
            'errorMessage' => 'The SNAT CIDR block of the CCN is being used and cannot be changed.',
          ),
          8 => 
          array (
            'errorCode' => 'CCN.SnatCidrNoConfig',
            'errorMessage' => 'You must configure the SNAT CIDR block of the CCN.',
          ),
          9 => 
          array (
            'errorCode' => 'SAG.CcnCidrNoConfig',
            'errorMessage' => 'You must configure the CIDR block of CCN.',
          ),
          10 => 
          array (
            'errorCode' => 'CCN.InvalidInterworkingStatus',
            'errorMessage' => 'The specified connection status is invalid. Specify the connection status to enable or disable.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.CCN',
            'errorMessage' => 'Invalid cloud connect network id.',
          ),
          2 => 
          array (
            'errorCode' => 'UpdateError.CCN',
            'errorMessage' => 'Update cloud connect network error.',
          ),
          3 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0BAAF2B9-88B8-4574-BDBE-102A90EE3FEE\\"\\n}","errorExample":"{\\n   \\"RequestId\\":\\"0BAAF2B9-88B8-4574-BDBE-102A90EE3FEE\\"\\n}"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<ModifyCloudConnectNetworkResponse>\\n  <RequestId>0BAAF2B9-88B8-4574-BDBE-102A90EE3FEE</RequestId>\\n</ModifyCloudConnectNetworkResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<ModifyCloudConnectNetworkResponse>\\n  <RequestId>0BAAF2B9-88B8-4574-BDBE-102A90EE3FEE</RequestId>\\n</ModifyCloudConnectNetworkResponse>"}]',
      'title' => '修改云连接网配置',
      'summary' => '修改云连接网的名称和描述。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeCloudConnectNetworks' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网实例名称。

名称长度为2~100个字符，以大小写字母或中文开头，可包含数字、下划线（_）、半角句号（.）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'ccnname',
          ),
        ),
        2 => 
        array (
          'name' => 'CcnId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ccn-l9340rlu5enst*****',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页包含的条目数，默认值为**10**，最大值为**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码，默认值是**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'Tag',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '通过标签信息查找云连接网实例。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '标签信息。',
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '标签键。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
                'Value' => 
                array (
                  'description' => '标签值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'test',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'maxItems' => 20,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '查询结果。',
            'type' => 'object',
            'properties' => 
            array (
              'CloudConnectNetworks' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CloudConnectNetwork' => 
                  array (
                    'description' => '云连接网实例信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '云连接网实例信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CreateTime' => 
                        array (
                          'description' => '云连接网实例的创建时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1523618639000',
                        ),
                        'AssociatedCenOwnerId' => 
                        array (
                          'description' => '已加载该云连接网实例的云企业网实例的账号ID。',
                          'type' => 'string',
                          'example' => '168800000000****',
                        ),
                        'AssociatedCloudBoxCount' => 
                        array (
                          'description' => '云连接网实例绑定的智能接入网关实例数量。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'Tags' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Tag' => 
                            array (
                              'description' => '标签信息列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '标签信息。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Key' => 
                                  array (
                                    'description' => '标签键。',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                  'Value' => 
                                  array (
                                    'description' => '标签值。',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'InterworkingStatus' => 
                        array (
                          'description' => '是否允许已绑定同一个云连接网实例的智能接入网关实例互通。

- **enable**：允许。
- **disable**：不允许。',
                          'type' => 'string',
                          'example' => 'enable',
                        ),
                        'CcnId' => 
                        array (
                          'description' => '云连接网实例ID。',
                          'type' => 'string',
                          'example' => 'ccn-l9340rlu5enst******',
                        ),
                        'AvailableCloudBoxCount' => 
                        array (
                          'description' => '云连接网实例已绑定的智能接入网关实例中状态为**可用**的智能接入网关实例的数量。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'CidrBlock' => 
                        array (
                          'description' => '私网网段。',
                          'type' => 'string',
                          'example' => '10.10.10.0/24',
                        ),
                        'Description' => 
                        array (
                          'description' => '云连接网实例的描述信息。',
                          'type' => 'string',
                          'example' => 'ccndesc',
                        ),
                        'SnatCidrBlock' => 
                        array (
                          'description' => 'SNAT网段。',
                          'type' => 'string',
                          'example' => '10.10.10.0/25',
                        ),
                        'AssociatedCenId' => 
                        array (
                          'description' => '云连接网实例绑定的云企业网实例ID。',
                          'type' => 'string',
                          'example' => 'cen-0jtu0bcbika5b5****',
                        ),
                        'Name' => 
                        array (
                          'description' => '云连接网实例的名称。',
                          'type' => 'string',
                          'example' => 'ccnname',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '云连接网实例所属的资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-acfm2iu4fnc****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3F2A0B80-D6D1-4764-8D77-38067DBBA345',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidTagKey',
            'errorMessage' => 'The specified tag key is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidTagValue',
            'errorMessage' => 'The specified tag value is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'SizeLimitExceeded.TagNum',
            'errorMessage' => 'The maximum number of tags is exceeded.',
          ),
          3 => 
          array (
            'errorCode' => 'SizeLimitExceeded.ResourceId',
            'errorMessage' => 'The maximum number of resource IDs is exceeded.',
          ),
          4 => 
          array (
            'errorCode' => 'Forbidden.TagKey.Duplicated',
            'errorMessage' => 'The specified tag key already exists.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CloudConnectNetworks\\": {\\n    \\"CloudConnectNetwork\\": [\\n      {\\n        \\"CreateTime\\": 1523618639000,\\n        \\"AssociatedCenOwnerId\\": \\"168800000000****\\",\\n        \\"AssociatedCloudBoxCount\\": \\"1\\",\\n        \\"Tags\\": {\\n          \\"Tag\\": [\\n            {\\n              \\"Key\\": \\"test\\",\\n              \\"Value\\": \\"test\\"\\n            }\\n          ]\\n        },\\n        \\"InterworkingStatus\\": \\"enable\\",\\n        \\"CcnId\\": \\"ccn-l9340rlu5enst******\\",\\n        \\"AvailableCloudBoxCount\\": \\"1\\",\\n        \\"CidrBlock\\": \\"10.10.10.0/24\\",\\n        \\"Description\\": \\"ccndesc\\",\\n        \\"SnatCidrBlock\\": \\"10.10.10.0/25\\",\\n        \\"AssociatedCenId\\": \\"cen-0jtu0bcbika5b5****\\",\\n        \\"Name\\": \\"ccnname\\",\\n        \\"ResourceGroupId\\": \\"rg-acfm2iu4fnc****\\"\\n      }\\n    ]\\n  },\\n  \\"TotalCount\\": 3,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"3F2A0B80-D6D1-4764-8D77-38067DBBA345\\",\\n  \\"PageNumber\\": 1\\n}","errorExample":""},{"type":"xml","example":"<DescribeCloudConnectNetworksResponse>\\n    <CloudConnectNetworks>\\n        <CloudConnectNetwork>\\n            <IsDefault>false</IsDefault>\\n            <InterworkingStatus>enable</InterworkingStatus>\\n            <ResourceGroupId>rg-acfm2iu4fnc****</ResourceGroupId>\\n            <CreateTime>1604385674000</CreateTime>\\n            <CcnId>ccn-iz26o9zye6lhoo****</CcnId>\\n            <AvailableCloudBoxCount>1</AvailableCloudBoxCount>\\n            <AssociatedCenOwnerId>1688000000000000</AssociatedCenOwnerId>\\n            <AssociatedCenId>cen-9z595pdzhmi3jz****</AssociatedCenId>\\n            <AssociatedCloudBoxCount>1</AssociatedCloudBoxCount>\\n            <Name>zxtest-202106</Name>\\n        </CloudConnectNetwork>\\n        <CloudConnectNetwork>\\n            <IsDefault>false</IsDefault>\\n            <InterworkingStatus>enable</InterworkingStatus>\\n            <ResourceGroupId>rg-acfm2iu4fnc****</ResourceGroupId>\\n            <CreateTime>1594619327000</CreateTime>\\n            <CcnId>ccn-frx6evdue4daza****</CcnId>\\n            <AvailableCloudBoxCount>3</AvailableCloudBoxCount>\\n            <AssociatedCenOwnerId>1688000000000000</AssociatedCenOwnerId>\\n            <AssociatedCenId>cen-ol0xptl3edqc8i****</AssociatedCenId>\\n            <AssociatedCloudBoxCount>3</AssociatedCloudBoxCount>\\n            <Name>zxtest-OSS</Name>\\n        </CloudConnectNetwork>\\n        <CloudConnectNetwork>\\n            <IsDefault>false</IsDefault>\\n            <InterworkingStatus>enable</InterworkingStatus>\\n            <ResourceGroupId>rg-acfm2iu4fnc****</ResourceGroupId>\\n            <CreateTime>1589866291000</CreateTime>\\n            <CcnId>ccn-wf0kz6wohe03h2****</CcnId>\\n            <AvailableCloudBoxCount>1</AvailableCloudBoxCount>\\n            <AssociatedCenOwnerId>1688000000000000</AssociatedCenOwnerId>\\n            <CidrBlock>192.168.10.0/24</CidrBlock>\\n            <AssociatedCenId>cen-8z69wtwqel33lq****</AssociatedCenId>\\n            <AssociatedCloudBoxCount>1</AssociatedCloudBoxCount>\\n            <Name>zxtest</Name>\\n        </CloudConnectNetwork>\\n    </CloudConnectNetworks>\\n    <TotalCount>3</TotalCount>\\n    <PageSize>10</PageSize>\\n    <RequestId>7DA93FE9-D008-49FB-8D9B-186F509EA307</RequestId>\\n    <PageNumber>1</PageNumber>\\n</DescribeCloudConnectNetworksResponse>","errorExample":""}]',
      'title' => '查询已创建的云连接网',
      'summary' => '调用DescribeCloudConnectNetworks接口查询指定地域下已创建的云连接网实例信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetCloudConnectNetworkUseLimit' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网的所属区域。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'UsedAmount' => 
              array (
                'description' => '已创建的云连接网个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '6',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BCD04867-56C3-43DC-8FEF-923EFB8B56DA',
              ),
              'TotalAmount' => 
              array (
                'description' => '当前账号在指定的区域最多可创建的云连接网个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"UsedAmount\\": 6,\\n  \\"RequestId\\": \\"BCD04867-56C3-43DC-8FEF-923EFB8B56DA\\",\\n  \\"TotalAmount\\": 10\\n}","errorExample":"{\\n\\"RequestId\\": \\"BCD04867-56C3-43DC-8FEF-923EFB8B56DA\\",\\n\\"TotalAmount\\": 10,\\n\\"UsedAmount\\": 6\\n}"},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<GetCloudConnectNetworkUseLimitResponse>\\n  <RequestId>BCD04867-56C3-43DC-8FEF-923EFB8B56DA</RequestId>\\n  <TotalAmount>10</TotalAmount>\\n  <UsedAmount>6</UsedAmount>\\n</GetCloudConnectNetworkUseLimitResponse>","errorExample":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<GetCloudConnectNetworkUseLimitResponse>\\n  <RequestId>BCD04867-56C3-43DC-8FEF-923EFB8B56DA</RequestId>\\n  <TotalAmount>10</TotalAmount>\\n  <UsedAmount>6</UsedAmount>\\n</GetCloudConnectNetworkUseLimitResponse>"}]',
      'title' => '查询指定区域内云连接网个数限制',
      'summary' => '查询当前账号在指定区域内的云连接网个数限制。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeGrantRules' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'AssociatedCcnId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'ccn-n2935s1mnwv8i*****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页展示的授权条目数。

默认值为**10**，最大值为**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时的页码。

默认值是**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '授权条目总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页展示的授权条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FA579C2D-84A0-4BA1-B9C3-1E5A3B15F1B6',
              ),
              'PageNumber' => 
              array (
                'description' => '分页查询时的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'GrantRules' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'GrantRule' => 
                  array (
                    'description' => '授权信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CenInstanceId' => 
                        array (
                          'description' => '云企业网实例ID。',
                          'type' => 'string',
                          'example' => 'cen-0jtu0bcbika5b5****',
                        ),
                        'CenUid' => 
                        array (
                          'description' => '云企业网实例所属的账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1250123456123456',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建授权的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1563439920000',
                        ),
                        'GrantRuleId' => 
                        array (
                          'description' => '授权条目ID。',
                          'type' => 'string',
                          'example' => '18313265-d988-406c-965d-3e110ff*****',
                        ),
                        'GrantTrafficService' => 
                        array (
                          'description' => '是否给跨账号的云企业网实例授权云连接网实例的流量服务能力。

- **true**：已授权。
- **false**：未不授权。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '授权操作最近修改的时间戳。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1563439920000',
                        ),
                        'CcnUid' => 
                        array (
                          'description' => '云连接网实例所属的账号ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1220123456123456',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '云连接网实例所属的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                        'CcnInstanceId' => 
                        array (
                          'description' => '云连接网实例ID。',
                          'type' => 'string',
                          'example' => 'ccn-n2935s1mnwv8i*****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"FA579C2D-84A0-4BA1-B9C3-1E5A3B15F1B6\\",\\n  \\"PageNumber\\": 1,\\n  \\"GrantRules\\": {\\n    \\"GrantRule\\": [\\n      {\\n        \\"CenInstanceId\\": \\"cen-0jtu0bcbika5b5****\\",\\n        \\"CenUid\\": 1250123456123456,\\n        \\"GmtCreate\\": 1563439920000,\\n        \\"GrantRuleId\\": \\"18313265-d988-406c-965d-3e110ff*****\\",\\n        \\"GrantTrafficService\\": false,\\n        \\"GmtModified\\": 1563439920000,\\n        \\"CcnUid\\": 1220123456123456,\\n        \\"RegionId\\": \\"cn-shanghai\\",\\n        \\"CcnInstanceId\\": \\"ccn-n2935s1mnwv8i*****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeGrantRulesResponse>\\n    <TotalCount>1</TotalCount>\\n    <PageSize>10</PageSize>\\n    <RequestId>FA579C2D-84A0-4BA1-B9C3-1E5A3B15F1B6</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <GrantRules>\\n        <CenInstanceId>cen-0jtu0bcbika5b5****</CenInstanceId>\\n        <CenUid>1250123456123456</CenUid>\\n        <GmtCreate>1563439920000</GmtCreate>\\n        <GrantRuleId>18313265-d988-406c-965d-3e110ff*****</GrantRuleId>\\n        <GrantTrafficService>false</GrantTrafficService>\\n        <GmtModified>1563439920000</GmtModified>\\n        <CcnUid>1220123456123456</CcnUid>\\n        <RegionId>cn-shanghai</RegionId>\\n        <CcnInstanceId>ccn-n2935s1mnwv8i*****</CcnInstanceId>\\n    </GrantRules>\\n</DescribeGrantRulesResponse>","errorExample":""}]',
      'title' => '查询绑定的云连接网的授权规则',
      'summary' => '查询云连接网实例的授权信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GrantInstanceToCbn' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CenUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例所属的阿里云账号（主账号）ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1250123456123456',
          ),
        ),
        1 => 
        array (
          'name' => 'CcnInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ccn-n2935s1mnwv8i*****',
          ),
        ),
        2 => 
        array (
          'name' => 'CenInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jm*****',
          ),
        ),
        3 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网实例所属的地域ID。
您可以调用[DescribeRegions](~~69813~~l)接口查询智能接入网关支持的地域以及对应的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        4 => 
        array (
          'name' => 'GrantTrafficService',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否给跨账号的云企业网实例授权云连接网实例的流量服务能力。

- **true**：授权。
- **false**：（默认值）不授权。

>在您授权成功后，如果云连接网下的智能接入网关实例开启了安全引流功能，则不允许取消授权。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '22840034-ADE9-41D8-A5DC-A7CF435CEE75',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DuplicatedGrantRule',
            'errorMessage' => 'The specified privilege granting rule already exists.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"22840034-ADE9-41D8-A5DC-A7CF435CEE75\\"\\n}","errorExample":""},{"type":"xml","example":"<GrantInstanceToCbnResponse>\\r\\n<RequestId>22840034-ADE9-41D8-A5DC-A7CF435CEE75</RequestId>\\r\\n</GrantInstanceToCbnResponse>","errorExample":""}]',
      'title' => '将实例授权给跨账号云企业网实例',
      'summary' => '将云连接网实例授权给跨账号云企业网实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RevokeInstanceFromCbn' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'CcnInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云连接网的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ccn-n2935s1mnwv8i*****',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        2 => 
        array (
          'name' => 'CenInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '云企业网的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cen-7qthudw0ll6jm*****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '07D73949-2508-4169-8C64-7CCDB33871C4',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"07D73949-2508-4169-8C64-7CCDB33871C4\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<RevokeInstanceFromCbnResponse>\\r\\n\\t<RequestId>07D73949-2508-4169-8C64-7CCDB33871C4</RequestId>\\r\\n</RevokeInstanceFromCbnResponse>","errorExample":""}]',
      'title' => '撤销云企业网对云连接网的授权',
      'summary' => '撤销云企业网对云连接网的授权。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddACLRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例所属地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-xhwhyuo43l0n*****',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则描述信息。

描述长度为**1~512**个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        3 => 
        array (
          'name' => 'Direction',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则应用方向。取值：

- **in**：入方向，指从外部访问智能接入网关实例所在的本地分支的流量。
- **out**：出方向，指从智能接入网关实例所在的本地分支访问外部的流量。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'in',
          ),
        ),
        4 => 
        array (
          'name' => 'SourceCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源网段。

源网段格式为CIDR格式。例如：192.168.1.0/24。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.20.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'DestCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的网段。

目的网段格式为CIDR格式。例如：192.168.10.0/24。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.10.0/24',
          ),
        ),
        6 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则应用的协议。

访问控制功能支持的协议类型，请以控制台为准。协议格式不区分大小写。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'tcp',
          ),
        ),
        7 => 
        array (
          'name' => 'SourcePortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源端口范围。

取值范围：**-1**或**1**~**65535**。

源端口范围格式例如：1/200、80/80，其中-1/-1代表不限制端口。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1/200',
          ),
        ),
        8 => 
        array (
          'name' => 'DestPortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的端口范围。

取值范围：**-1**或**1**~**65535**。

目的端口范围格式例如：1/200、80/80，其中-1/-1代表不限制端口。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1/200',
          ),
        ),
        9 => 
        array (
          'name' => 'Policy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则授权策略。取值：

- **accept**：允许。

- **drop**：拒绝。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'accept',
          ),
        ),
        10 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则优先级。

数值越小，优先级越高。同优先级时，首先下发到智能接入网关设备的规则优先生效。

取值范围：**1~100**。默认值：**1**。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '12',
            'default' => '1',
          ),
        ),
        11 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则类型。取值：

- **LAN**：（默认值）私网，表示针对私网地址的流量设置访问控制规则。

- **WAN**：公网，表示针对公网地址的流量设置访问控制规则。',
            'type' => 'string',
            'required' => false,
            'example' => 'LAN',
            'default' => 'LAN',
            'enum' => 
            array (
              0 => 'LAN',
              1 => 'WAN',
            ),
          ),
        ),
        12 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则名称。

长度为2~100个字符，以大小写字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'doctest',
          ),
        ),
        13 => 
        array (
          'name' => 'DpiSignatureIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '当前访问控制规则匹配的应用ID列表。

您可以通过[ListDpiSignatures](~~196630~~)查询应用ID及其对应的应用信息。N的最大值为**10**。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '应用ID。

系统支持一次最多输入100个应用ID。',
              'type' => 'string',
              'required' => false,
              'example' => '1',
            ),
            'required' => false,
            'example' => '1',
            'maxItems' => 100,
          ),
        ),
        14 => 
        array (
          'name' => 'DpiGroupIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '当前访问控制规则匹配的应用组ID列表。

您可以通过[ListDpiGroups](~~196754~~)查询应用组ID及其包含的应用信息。N的最大值为**10**。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '应用组ID。

系统支持一次最多输入100个应用组ID。',
              'type' => 'string',
              'required' => false,
              'example' => '20',
            ),
            'required' => false,
            'example' => '20',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Policy' => 
              array (
                'description' => '访问控制规则授权策略。

- **accept**：允许。

- **drop**：拒绝。',
                'type' => 'string',
                'example' => 'drop',
              ),
              'Description' => 
              array (
                'description' => '访问控制规则描述信息。',
                'type' => 'string',
                'example' => 'test',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '880F84CB-9B54-4413-A8A3-8832C82D1BC4',
              ),
              'SourcePortRange' => 
              array (
                'description' => '源端口范围。',
                'type' => 'string',
                'example' => '1/65535',
              ),
              'SourceCidr' => 
              array (
                'description' => '源网段。

源网段格式为CIDR格式。例如：192.168.1.0/24。',
                'type' => 'string',
                'example' => '192.168.20.0/24',
              ),
              'Priority' => 
              array (
                'description' => '访问控制规则优先级。

数值越小，优先级越高。同优先级时，首先下发到智能接入网关设备的规则优先生效。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'AclId' => 
              array (
                'description' => '访问控制实例ID。',
                'type' => 'string',
                'example' => 'acl-xhwhyuo43l0*******',
              ),
              'AcrId' => 
              array (
                'description' => '访问控制规则ID。',
                'type' => 'string',
                'example' => 'acr-c1hkd054qywi******',
              ),
              'DestPortRange' => 
              array (
                'description' => '目的端口范围。',
                'type' => 'string',
                'example' => '1/65535',
              ),
              'Direction' => 
              array (
                'description' => '访问控制规则应用方向。取值：

- **in**：入方向，指从外部访问智能接入网关实例所在的本地分支的流量。
- **out**：出方向，指从智能接入网关实例所在的本地分支访问外部的流量。',
                'type' => 'string',
                'example' => 'out',
              ),
              'DpiGroupIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DpiGroupId' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '当前访问控制规则匹配的应用组ID列表。',
                      'type' => 'string',
                      'example' => '20',
                    ),
                  ),
                ),
              ),
              'Name' => 
              array (
                'description' => '访问控制规则名称。',
                'type' => 'string',
                'example' => 'doctest',
              ),
              'Type' => 
              array (
                'description' => '访问控制规则类型。

- **LAN**：私网，表示针对私网地址的流量设置访问控制规则。

- **WAN**：公网，表示针对公网地址的流量设置访问控制规则。',
                'type' => 'string',
                'example' => 'LAN',
              ),
              'GmtCreate' => 
              array (
                'description' => '创建访问控制规则时的时间戳。

时间戳格式为Long型，优先级相同时，时间戳小的访问控制规则优先生效。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1553766882689',
              ),
              'DestCidr' => 
              array (
                'description' => '目的网段。

目的网段格式为CIDR格式。例如：192.168.10.0/24。',
                'type' => 'string',
                'example' => '192.168.10.0/24',
              ),
              'DpiSignatureIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DpiSignatureId' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '当前访问控制规则匹配的应用ID列表。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                  ),
                ),
              ),
              'IpProtocol' => 
              array (
                'description' => '访问控制规则应用的协议。',
                'type' => 'string',
                'example' => 'TCP',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ACL.NoSupportWanType',
            'errorMessage' => 'An SAG 1000 device does not support a WAN ACL.',
          ),
          1 => 
          array (
            'errorCode' => 'ACL.InvalidType',
            'errorMessage' => 'The specified ACL type is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'Description not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          5 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          6 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
          7 => 
          array (
            'errorCode' => 'NotSupportedProtocol',
            'errorMessage' => 'The specified protocol of the ACL rule is not supported.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidId.ACL',
            'errorMessage' => 'The specified ACL ID is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidPortRange',
            'errorMessage' => 'The specified port range is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'AcrPerAclAmountLimit',
            'errorMessage' => 'The maximum number of rules in an ACL is exceeded. You can open a ticket to increase the quota.',
          ),
          11 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Policy\\": \\"drop\\",\\n  \\"Description\\": \\"test\\",\\n  \\"RequestId\\": \\"880F84CB-9B54-4413-A8A3-8832C82D1BC4\\",\\n  \\"SourcePortRange\\": \\"1/65535\\",\\n  \\"SourceCidr\\": \\"192.168.20.0/24\\",\\n  \\"Priority\\": 1,\\n  \\"AclId\\": \\"acl-xhwhyuo43l0*******\\",\\n  \\"AcrId\\": \\"acr-c1hkd054qywi******\\",\\n  \\"DestPortRange\\": \\"1/65535\\",\\n  \\"Direction\\": \\"out\\",\\n  \\"DpiGroupIds\\": {\\n    \\"DpiGroupId\\": [\\n      \\"20\\"\\n    ]\\n  },\\n  \\"Name\\": \\"doctest\\",\\n  \\"Type\\": \\"LAN\\",\\n  \\"GmtCreate\\": 1553766882689,\\n  \\"DestCidr\\": \\"192.168.10.0/24\\",\\n  \\"DpiSignatureIds\\": {\\n    \\"DpiSignatureId\\": [\\n      \\"1\\"\\n    ]\\n  },\\n  \\"IpProtocol\\": \\"TCP\\"\\n}","errorExample":""},{"type":"xml","example":"<AddACLRuleResponse>\\n    <Policy>drop</Policy>\\n    <Description>test</Description>\\n    <RequestId>880F84CB-9B54-4413-A8A3-8832C82D1BC4</RequestId>\\n    <SourcePortRange>1/65535</SourcePortRange>\\n    <SourceCidr>192.168.20.0/24</SourceCidr>\\n    <Priority>1</Priority>\\n    <AclId>acl-xhwhyuo43l0*******</AclId>\\n    <AcrId>acr-c1hkd054qywi******</AcrId>\\n    <DestPortRange>1/65535</DestPortRange>\\n    <Direction>out</Direction>\\n    <DpiGroupIds>20</DpiGroupIds>\\n    <Name>doctest</Name>\\n    <Type>LAN</Type>\\n    <GmtCreate>1553766882689</GmtCreate>\\n    <DestCidr>192.168.10.0/24</DestCidr>\\n    <DpiSignatureIds>1</DpiSignatureIds>\\n    <IpProtocol>TCP</IpProtocol>\\n</AddACLRuleResponse>","errorExample":""}]',
      'title' => '添加访问控制规则',
      'summary' => '调用AddACLRule添加访问控制规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateACL' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例名称。

名称长度为2~128个字符，以大小写字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'username',
          ),
        ),
        2 => 
        array (
          'name' => 'AclType',
          'in' => 'query',
          'allowEmptyValue' => true,
          'schema' => 
          array (
            'description' => '访问控制实例待关联的智能接入网关实例类型。取值：

- **acl-hardware**（默认值）：智能接入网关硬件实例。
- **acl-software**：智能接入网关App实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'acl-hardware',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '访问控制实例信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EE837E9F-BD50-4C2B-9E47-260F9D848480',
              ),
              'AclId' => 
              array (
                'description' => '访问控制实例ID。',
                'type' => 'string',
                'example' => 'acl-o6yol7zowii5n2****',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '访问控制实例所属资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfm2iu4fnc****',
              ),
              'AclType' => 
              array (
                'description' => '访问控制实例关联的智能接入网关实例类型。',
                'type' => 'string',
                'example' => 'acl-hardware',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'AclAmountLimit',
            'errorMessage' => 'No more ACL can be created. You can open a ticket to increase the quota of ACLs.',
          ),
          4 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"EE837E9F-BD50-4C2B-9E47-260F9D848480\\",\\n  \\"AclId\\": \\"acl-o6yol7zowii5n2****\\",\\n  \\"ResourceGroupId\\": \\"rg-acfm2iu4fnc****\\",\\n  \\"AclType\\": \\"acl-hardware\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateACLResponse>\\n    <RequestId>EE837E9F-BD50-4C2B-9E47-260F9D848480</RequestId>\\n    <AclId>acl-o6yol7zowii5n2****</AclId>\\n    <ResourceGroupId>rg-acfm2iu4fnc****</ResourceGroupId>\\n    <AclType>acl-hardware</AclType>\\n</CreateACLResponse>","errorExample":""}]',
      'title' => '创建访问控制',
      'summary' => '调用CreateACL接口创建访问控制实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteACL' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-ohlexqptfhy*******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '00546174-2CE6-4587-9550-04B6A3313938',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidId.ACL',
            'errorMessage' => 'The specified ACL ID is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
          4 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          5 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          6 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"00546174-2CE6-4587-9550-04B6A3313938\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteACLResponse>\\n    <RequestId>00546174-2CE6-4587-9550-04B6A3313938</RequestId>\\n</DeleteACLResponse>","errorExample":""}]',
      'title' => '删除访问控制',
      'summary' => '调用DeleteACL删除访问控制。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteACLRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要删除的访问控制规则所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要删除的访问规则所属的访问控制ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-xhwhyuo43l0n*****',
          ),
        ),
        2 => 
        array (
          'name' => 'AcrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要删除的访问控制规则ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acr-c1hkd054qywiw******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '39E71162-699A-4E02-AF0F-17621BA6AEF6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidId.ACL',
            'errorMessage' => 'The specified ACL ID is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidId.ACR',
            'errorMessage' => 'The specified ACL rule ID is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          5 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          6 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
          7 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"39E71162-699A-4E02-AF0F-17621BA6AEF6\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<DeleteACLRule>\\r\\n    <RequestId>39E71162-699A-4E02-AF0F-17621BA6AEF6</RequestId>\\r\\n</DeleteACLRule>","errorExample":""}]',
      'title' => '删除访问控制规则',
      'summary' => '调用DeleteACLRule删除访问控制规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyACL' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-e30a66to95cs****',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例的新名称。

名称长度为2~128个字符，以大小写字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'newname',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '076FD0BE-67D5-4338-A2A1-C54DE7D78B16',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidName',
            'errorMessage' => 'Name not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidId.ACL',
            'errorMessage' => 'The specified ACL ID is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"076FD0BE-67D5-4338-A2A1-C54DE7D78B16\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyACLResponse>\\n    <RequestId>076FD0BE-67D5-4338-A2A1-C54DE7D78B16</RequestId>\\n</ModifyACLResponse>","errorExample":""}]',
      'title' => '修改访问控制名称',
      'summary' => '调用ModifyACL修改访问控制名称。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyACLRule' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-xhwhyuo43l0n*******',
          ),
        ),
        2 => 
        array (
          'name' => 'AcrId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则ID。

您可以通过调用接口[DescribeACLAttribute](~~114017~~)查询访问控制实例下访问控制规则的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acr-u98qztgtgvhb********',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则的描述信息。

描述长度为**1**~**512**个字符。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'Direction',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则应用方向。取值：

- **in**：入方向，指从外部访问智能接入网关实例所在的本地网络的方向。
- **out**：出方向，指从智能接入网关实例所在的本地网络访问外部的方向。',
            'type' => 'string',
            'required' => false,
            'example' => 'in',
          ),
        ),
        5 => 
        array (
          'name' => 'SourceCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源网段。

源网段格式为CIDR格式。例如：192.168.1.0/24。',
            'type' => 'string',
            'required' => false,
            'example' => '0.0.0.0/0',
          ),
        ),
        6 => 
        array (
          'name' => 'DestCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的网段。

目的网段格式为CIDR格式。例如：192.168.10.0/24。',
            'type' => 'string',
            'required' => false,
            'example' => '0.0.0.0/0',
          ),
        ),
        7 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则应用的协议。

访问控制功能支持的协议类型，请以控制台为准。协议格式不区分大小写。',
            'type' => 'string',
            'required' => false,
            'example' => 'tcp',
          ),
        ),
        8 => 
        array (
          'name' => 'SourcePortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源端口范围。取值范围：**-1**或**1**~**65535**。

目的端口范围格式示例：

- 1/200，表示端口范围1至200。
- 80/80，表示端口80。
- -1/-1，表示不限制端口。',
            'type' => 'string',
            'required' => false,
            'example' => '80/80',
          ),
        ),
        9 => 
        array (
          'name' => 'DestPortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的端口范围。取值范围：**-1**或**1**~**65535**。

目的端口范围格式示例：

- 1/200，表示端口范围1至200。
- 80/80，表示端口80。
- -1/-1，表示不限制端口。',
            'type' => 'string',
            'required' => false,
            'example' => '80/80',
          ),
        ),
        10 => 
        array (
          'name' => 'Policy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则授权策略。取值：

- **accept**：允许。

- **drop**：拒绝。',
            'type' => 'string',
            'required' => false,
            'example' => 'accept',
          ),
        ),
        11 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则优先级。

数值越小，优先级越高。同优先级时，先下发到智能接入网关设备的规则优先生效。

取值范围：**1~100**。默认值：**1**。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        12 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则类型。取值：

- **LAN**：（默认值）私网，表示针对私网地址的流量设置访问控制规则。

- **WAN**：公网，表示针对公网地址的流量设置访问控制规则。',
            'type' => 'string',
            'required' => false,
            'example' => 'LAN',
            'enum' => 
            array (
              0 => 'LAN',
              1 => 'WAN',
            ),
          ),
        ),
        13 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则名称。

名称长度为2~128个字符，以大小写字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'doctest',
          ),
        ),
        14 => 
        array (
          'name' => 'DpiSignatureIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '访问控制规则匹配的应用ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '访问控制规则匹配的应用ID。

您可以通过[ListDpiSignatures](~~196630~~)查询应用ID及其对应的应用信息。',
              'type' => 'string',
              'required' => false,
              'example' => '1',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        15 => 
        array (
          'name' => 'DpiGroupIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '访问控制规则匹配的应用组ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '访问控制规则匹配的应用组ID。

您可以通过[ListDpiGroups](~~196754~~)查询应用组ID及其包含的应用信息。',
              'type' => 'string',
              'required' => false,
              'example' => '20',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Policy' => 
              array (
                'description' => '访问控制规则授权策略。

- **accept**：允许。

- **drop**：拒绝。',
                'type' => 'string',
                'example' => 'accept',
              ),
              'Description' => 
              array (
                'description' => '访问控制规则描述信息。',
                'type' => 'string',
                'example' => 'test',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7F3DD2C1-0F6B-4575-9106-B2D50DF7A711',
              ),
              'SourcePortRange' => 
              array (
                'description' => '源端口范围。',
                'type' => 'string',
                'example' => '-1/-1',
              ),
              'SourceCidr' => 
              array (
                'description' => '源网段。

源网段格式为CIDR格式。例如：192.168.1.0/24。',
                'type' => 'string',
                'example' => '0.0.0.0/0',
              ),
              'Priority' => 
              array (
                'description' => '访问控制规则优先级。

数值越小，优先级越高。同优先级时，先下发到智能接入网关设备的规则优先生效。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'AclId' => 
              array (
                'description' => '访问控制实例ID。',
                'type' => 'string',
                'example' => 'acl-jdc7tir4fkplwr****',
              ),
              'AcrId' => 
              array (
                'description' => '访问控制规则ID。',
                'type' => 'string',
                'example' => 'acr-r8hezn2pi39s5a****',
              ),
              'DestPortRange' => 
              array (
                'description' => '目的端口范围。',
                'type' => 'string',
                'example' => '-1/-1',
              ),
              'Direction' => 
              array (
                'description' => '访问控制规则应用方向。取值：

- **in**：入方向，指从外部访问智能接入网关实例所在的本地网络的方向。
- **out**：出方向，指从智能接入网关实例所在的本地网络访问外部的方向。',
                'type' => 'string',
                'example' => 'in',
              ),
              'DpiGroupIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DpiGroupId' => 
                  array (
                    'description' => '访问控制规则匹配的应用组ID列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '访问控制规则匹配的应用组ID。',
                      'type' => 'string',
                      'example' => '20',
                    ),
                  ),
                ),
              ),
              'Name' => 
              array (
                'description' => '访问控制规则名称。',
                'type' => 'string',
                'example' => 'doctest',
              ),
              'GmtCreate' => 
              array (
                'description' => '创建访问控制规则时的时间戳。

时间戳格式为Long型，优先级相同时，时间戳小的访问控制规则优先生效。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1553777700000',
              ),
              'DestCidr' => 
              array (
                'description' => '目的网段。

目的网段格式为CIDR格式。例如：192.168.10.0/24。',
                'type' => 'string',
                'example' => '0.0.0.0/0',
              ),
              'DpiSignatureIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DpiSignatureId' => 
                  array (
                    'description' => '访问控制规则匹配的应用ID列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '访问控制规则匹配的应用ID。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                  ),
                ),
              ),
              'IpProtocol' => 
              array (
                'description' => '访问控制规则应用的协议。',
                'type' => 'string',
                'example' => 'ALL',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ACL.NoSupportWanType',
            'errorMessage' => 'An SAG 1000 device does not support a WAN ACL.',
          ),
          1 => 
          array (
            'errorCode' => 'ACL.InvalidType',
            'errorMessage' => 'The specified ACL type is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidDescription',
            'errorMessage' => 'Description not valid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          5 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          6 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
          7 => 
          array (
            'errorCode' => 'NotSupportedProtocol',
            'errorMessage' => 'The specified protocol of the ACL rule is not supported.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidId.ACL',
            'errorMessage' => 'The specified ACL ID is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidId.ACR',
            'errorMessage' => 'The specified ACL rule ID is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidPortRange',
            'errorMessage' => 'The specified port range is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Policy\\": \\"accept\\",\\n  \\"Description\\": \\"test\\",\\n  \\"RequestId\\": \\"7F3DD2C1-0F6B-4575-9106-B2D50DF7A711\\",\\n  \\"SourcePortRange\\": \\"-1/-1\\",\\n  \\"SourceCidr\\": \\"0.0.0.0/0\\",\\n  \\"Priority\\": 1,\\n  \\"AclId\\": \\"acl-jdc7tir4fkplwr****\\",\\n  \\"AcrId\\": \\"acr-r8hezn2pi39s5a****\\",\\n  \\"DestPortRange\\": \\"-1/-1\\",\\n  \\"Direction\\": \\"in\\",\\n  \\"DpiGroupIds\\": {\\n    \\"DpiGroupId\\": [\\n      \\"20\\"\\n    ]\\n  },\\n  \\"Name\\": \\"doctest\\",\\n  \\"GmtCreate\\": 1553777700000,\\n  \\"DestCidr\\": \\"0.0.0.0/0\\",\\n  \\"DpiSignatureIds\\": {\\n    \\"DpiSignatureId\\": [\\n      \\"1\\"\\n    ]\\n  },\\n  \\"IpProtocol\\": \\"ALL\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyACLRuleResponse>\\n    <Policy>accept</Policy>\\n    <Description>test</Description>\\n    <RequestId>7F3DD2C1-0F6B-4575-9106-B2D50DF7A711</RequestId>\\n    <SourcePortRange>-1/-1</SourcePortRange>\\n    <SourceCidr>0.0.0.0/0</SourceCidr>\\n    <Priority>1</Priority>\\n    <AclId>acl-jdc7tir4fkplwr****</AclId>\\n    <AcrId>acr-r8hezn2pi39s5a****</AcrId>\\n    <DestPortRange>-1/-1</DestPortRange>\\n    <Direction>in</Direction>\\n    <DpiGroupIds>20</DpiGroupIds>\\n    <Name>doctest</Name>\\n    <GmtCreate>1553777700000</GmtCreate>\\n    <DestCidr>0.0.0.0/0</DestCidr>\\n    <DpiSignatureIds>1</DpiSignatureIds>\\n    <IpProtocol>ALL</IpProtocol>\\n</ModifyACLRuleResponse>","errorExample":""}]',
      'title' => '修改访问控制规则',
      'summary' => '调用ModifyACLRule接口修改访问控制规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeACLs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'AclIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例ID。

- 若同时查询多个访问控制实例，多个实例ID请以半角逗号（,）隔开。
- 若不填写该项，则表示查询当前地域下所有访问控制实例的信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'acl-xhwhyuo43l*******',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例名称。

名称长度为2~100个字符，以大小写字母或中文开头，可包含数字、下划线（_）、半角句号（.）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数。最大值为**50**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'AclType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例支持绑定的智能接入网关实例类型。取值：

- **acl-hardware**：智能接入网关硬件实例。
- **acl-software**：智能接入网关App实例。',
            'type' => 'string',
            'required' => false,
            'example' => 'acl-hardware',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '查询结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '660F303F-C88E-4026-BC6A-FC24B78FD7EA',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Acls' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Acl' => 
                  array (
                    'description' => '访问控制实例信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '访问控制实例信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SagCount' => 
                        array (
                          'description' => '访问控制实例绑定的智能接入网关实例数量。',
                          'type' => 'string',
                          'example' => '0',
                        ),
                        'AclId' => 
                        array (
                          'description' => '访问控制实例ID。',
                          'type' => 'string',
                          'example' => 'acl-xhwhyuo43l*******',
                        ),
                        'Name' => 
                        array (
                          'description' => '访问控制实例名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '访问控制实例所属资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-acfm2iu4fnc****',
                        ),
                        'AclType' => 
                        array (
                          'description' => '访问控制实例支持绑定的智能接入网关实例类型。取值：

- **acl-hardware**：智能接入网关硬件实例。
- **acl-software**：智能接入网关App实例。',
                          'type' => 'string',
                          'example' => 'acl-hardware',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"660F303F-C88E-4026-BC6A-FC24B78FD7EA\\",\\n  \\"PageNumber\\": 1,\\n  \\"Acls\\": {\\n    \\"Acl\\": [\\n      {\\n        \\"SagCount\\": \\"0\\",\\n        \\"AclId\\": \\"acl-xhwhyuo43l*******\\",\\n        \\"Name\\": \\"test\\",\\n        \\"ResourceGroupId\\": \\"rg-acfm2iu4fnc****\\",\\n        \\"AclType\\": \\"acl-hardware\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeACLsResponse>\\n    <TotalCount>1</TotalCount>\\n    <PageSize>10</PageSize>\\n    <RequestId>660F303F-C88E-4026-BC6A-FC24B78FD7EA</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <Acls>\\n        <SagCount>0</SagCount>\\n        <AclId>acl-xhwhyuo43l*******</AclId>\\n        <Name>test</Name>\\n        <ResourceGroupId>rg-acfm2iu4fnc****</ResourceGroupId>\\n        <AclType>acl-hardware</AclType>\\n    </Acls>\\n</DescribeACLsResponse>","errorExample":""}]',
      'title' => '查询访问控制信息',
      'summary' => '调用DescribeACLs查询指定地域下访问控制实例信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeACLAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-ohlexqptfhyaq****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页展示的访问控制规则条目数。

取值范围：**1**~**50**。

默认值：**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时的页码。默认值：**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'Direction',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制规则应用方向。取值：

- **in**：入方向，指从外部访问智能接入网关实例所在的本地分支的流量。
- **out**：出方向，指从智能接入网关实例所在的本地分支访问外部的流量。',
            'type' => 'string',
            'required' => false,
            'example' => 'out',
          ),
        ),
        5 => 
        array (
          'name' => 'Order',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '订单ID。',
            'type' => 'string',
            'required' => false,
            'example' => '1255444444',
          ),
        ),
        6 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例名称。

长度为2~100个字符，以大小写字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。
> 该参数支持模糊搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'doctest',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '当前访问控制实例包含的总的访问控制规则条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页展示的访问控制规则条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8F62CE77-FBA2-4F8D-AED9-0A02814EDA69',
              ),
              'PageNumber' => 
              array (
                'description' => '分页查询时的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Acrs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Acr' => 
                  array (
                    'description' => '当前访问控制实例包含的访问控制规则信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Direction' => 
                        array (
                          'description' => '访问控制规则应用方向。

- **in**：入方向，指从外部访问智能接入网关实例所在的本地分支的流量。
- **out**：出方向，指从智能接入网关实例所在的本地分支访问外部的流量。',
                          'type' => 'string',
                          'example' => 'out',
                        ),
                        'Type' => 
                        array (
                          'description' => '访问控制规则类型：

- **LAN**：私网，表示针对私网地址的流量设置访问控制规则。

- **WAN**：公网，表示针对公网地址的流量设置访问控制规则。',
                          'type' => 'string',
                          'example' => 'WAN',
                        ),
                        'DpiSignatureIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DpiSignatureId' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '当前访问控制规则匹配的应用ID列表。

您可以通过[ListDpiSignatures](~~196630~~)查询应用ID及其对应的应用信息。',
                                'type' => 'string',
                                'example' => '1',
                              ),
                            ),
                          ),
                        ),
                        'IpProtocol' => 
                        array (
                          'description' => '访问控制规则应用的协议。

访问控制功能支持的协议类型，请以控制台为准。协议格式不区分大小写。',
                          'type' => 'string',
                          'example' => 'UDP',
                        ),
                        'Priority' => 
                        array (
                          'description' => '访问控制规则优先级。

取值范围：**1~100**。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '70',
                        ),
                        'AclId' => 
                        array (
                          'description' => '访问控制实例ID。',
                          'type' => 'string',
                          'example' => 'acl-7louazbja80bmg****',
                        ),
                        'Policy' => 
                        array (
                          'description' => '访问控制规则授权策略：

- **accept**：允许。

- **drop**：拒绝。',
                          'type' => 'string',
                          'example' => 'drop',
                        ),
                        'Description' => 
                        array (
                          'description' => '访问控制规则描述信息。

描述长度为**1~512**个字符。

此字段默认不会返回。可通过ModifyACLRule接口设置，设置后查询会正常返回。',
                          'type' => 'string',
                          'example' => '访问规则',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建访问控制规则时的时间戳。

时间戳格式为Long型，优先级相同时，时间戳小的访问控制规则优先生效。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1580821597000',
                        ),
                        'DestCidr' => 
                        array (
                          'description' => '目的网段。

目的网段格式为CIDR格式。例如：192.168.10.0/24。',
                          'type' => 'string',
                          'example' => '0.0.0.0/0',
                        ),
                        'DestPortRange' => 
                        array (
                          'description' => '目的端口范围。

取值范围：**-1**或**1**~**65535**。

目的端口范围格式例如：1/200、80/80，其中-1/-1代表不限制端口。',
                          'type' => 'string',
                          'example' => '10000/20000',
                        ),
                        'Name' => 
                        array (
                          'description' => '访问控制实例名称。

长度为2~100个字符，以大小写字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。',
                          'type' => 'string',
                          'example' => 'doctest',
                        ),
                        'AcrId' => 
                        array (
                          'description' => '访问控制规则ID。',
                          'type' => 'string',
                          'example' => 'acr-gxzxj5w9qqdf1c****',
                        ),
                        'SourceCidr' => 
                        array (
                          'description' => '源网段。

源网段格式为CIDR格式。例如：192.168.1.0/24。',
                          'type' => 'string',
                          'example' => '0.0.0.0/0',
                        ),
                        'SourcePortRange' => 
                        array (
                          'description' => '源端口范围。

取值范围：**-1**或**1**~**65535**。

源端口范围格式例如：1/200、80/80，其中-1/-1代表不限制端口。',
                          'type' => 'string',
                          'example' => '30000/40000',
                        ),
                        'DpiGroupIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DpiGroupId' => 
                            array (
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '当前访问控制规则匹配的应用组ID列表。

您可以通过[ListDpiGroups](~~196754~~)查询应用组ID及其包含的应用信息。',
                                'type' => 'string',
                                'example' => '20',
                              ),
                            ),
                          ),
                        ),
                        'AclType' => 
                        array (
                          'description' => '访问控制实例支持绑定的智能接入网关实例类型。取值：

- **acl-hardware**：智能接入网关硬件实例。
- **acl-software**：智能接入网关App实例。',
                          'type' => 'string',
                          'example' => 'acl-hardware',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidId.ACL',
            'errorMessage' => 'The specified ACL ID is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 3,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"8F62CE77-FBA2-4F8D-AED9-0A02814EDA69\\",\\n  \\"PageNumber\\": 1,\\n  \\"Acrs\\": {\\n    \\"Acr\\": [\\n      {\\n        \\"Direction\\": \\"out\\",\\n        \\"Type\\": \\"WAN\\",\\n        \\"DpiSignatureIds\\": {\\n          \\"DpiSignatureId\\": [\\n            \\"1\\"\\n          ]\\n        },\\n        \\"IpProtocol\\": \\"UDP\\",\\n        \\"Priority\\": 70,\\n        \\"AclId\\": \\"acl-7louazbja80bmg****\\",\\n        \\"Policy\\": \\"drop\\",\\n        \\"Description\\": \\"访问规则\\",\\n        \\"GmtCreate\\": 1580821597000,\\n        \\"DestCidr\\": \\"0.0.0.0/0\\",\\n        \\"DestPortRange\\": \\"10000/20000\\",\\n        \\"Name\\": \\"doctest\\",\\n        \\"AcrId\\": \\"acr-gxzxj5w9qqdf1c****\\",\\n        \\"SourceCidr\\": \\"0.0.0.0/0\\",\\n        \\"SourcePortRange\\": \\"30000/40000\\",\\n        \\"DpiGroupIds\\": {\\n          \\"DpiGroupId\\": [\\n            \\"20\\"\\n          ]\\n        },\\n        \\"AclType\\": \\"acl-hardware\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeACLAttributeResponse>\\n    <TotalCount>3</TotalCount>\\n    <PageSize>10</PageSize>\\n    <RequestId>8F62CE77-FBA2-4F8D-AED9-0A02814EDA69</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <Acrs>\\n        <Direction>out</Direction>\\n        <Type>WAN</Type>\\n        <DpiSignatureIds>1</DpiSignatureIds>\\n        <IpProtocol>UDP</IpProtocol>\\n        <Priority>70</Priority>\\n        <AclId>acl-7louazbja80bmg****</AclId>\\n        <Policy>drop</Policy>\\n        <Description>访问规则</Description>\\n        <GmtCreate>1580821597000</GmtCreate>\\n        <DestCidr>0.0.0.0/0</DestCidr>\\n        <DestPortRange>10000/20000</DestPortRange>\\n        <Name>doctest</Name>\\n        <AcrId>acr-gxzxj5w9qqdf1c****</AcrId>\\n        <SourceCidr>0.0.0.0/0</SourceCidr>\\n        <SourcePortRange>30000/40000</SourcePortRange>\\n        <DpiGroupIds>20</DpiGroupIds>\\n        <AclType>acl-hardware</AclType>\\n    </Acrs>\\n</DescribeACLAttributeResponse>","errorExample":""}]',
      'title' => '批量查询访问控制信息',
      'summary' => '调用DescribeACLAttribute查询指定访问控制实例信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociateACL' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-ohlexqptfhy******',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要绑定访问控制的智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-4yr0p2xa6o3k*******',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C9A75915-0260-4335-851A-D866A7ED396C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          4 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          5 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
          6 => 
          array (
            'errorCode' => 'SmartAGAlreadyAssociateAcl',
            'errorMessage' => 'The specified smart access gateway has already been associated with the specified ACL.',
          ),
          7 => 
          array (
            'errorCode' => 'AclPerSmartagAmountLimit',
            'errorMessage' => 'No more ACL can be associated with this smart access gateway.',
          ),
          8 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidId.ACL',
            'errorMessage' => 'The specified ACL ID is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C9A75915-0260-4335-851A-D866A7ED396C\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<AssociateACL>\\r\\n\\t<RequestId>00546174-2CE6-4587-9550-04B6A3313938</RequestId>\\r\\n</AssociateACL>","errorExample":""}]',
      'title' => '将访问控制与智能接入网关实例绑定',
      'summary' => '调用AssociateACL将访问控制与智能接入网关实例绑定。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisassociateACL' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例所属的地域ID。

您可以通过调用[DescribeRegions](~~69813~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'AclId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '访问控制实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'acl-xhwhyuo43l0****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要与访问控制实例解除关联的智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-ke3kq4evpi8****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B28A9AB3-05BD-4A88-AB6A-A555A0BF70C0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          4 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          5 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidId.ACL',
            'errorMessage' => 'The specified ACL ID is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'SmartAGNotAssociateAcl',
            'errorMessage' => 'The specified smart access gateway is not associated with the specified ACL.',
          ),
          8 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B28A9AB3-05BD-4A88-AB6A-A555A0BF70C0\\"\\n}","errorExample":""},{"type":"xml","example":"<DisassociateACLResponse>\\n    <RequestId>B28A9AB3-05BD-4A88-AB6A-A555A0BF70C0</RequestId>\\n</DisassociateACLResponse>","errorExample":""}]',
      'title' => '解绑智能接入网关实例和访问控制',
      'summary' => '调用DisassociateACL将智能接入网关实例跟访问控制解绑。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateQos' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'QosName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例名称。

名称长度为2~100个字符，以大小写字母或中文开头，可包含数字、半角句号（.）、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'doctest',
          ),
        ),
        2 => 
        array (
          'name' => 'QosDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例描述。

描述长度为1~512个字符，以大小写字母或中文开头，可包含数字、下划线（_）和短划线（-）。
',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'QoS策略实例信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AACF5140-783D-48F0-9E4F-E59D716F7D08',
              ),
              'QosId' => 
              array (
                'description' => 'QoS策略实例ID。',
                'type' => 'string',
                'example' => 'rg-acfm2iu4fnc****',
              ),
              'ResourceGroupId' => 
              array (
                'description' => 'QoS策略实例所属资源组ID。',
                'type' => 'string',
                'example' => 'qos-oek3r2cmvk7m8q****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'QosAmountLimit',
            'errorMessage' => 'No more QoS can be created. You can submit a ticket to increase the quota of QoSes.',
          ),
          1 => 
          array (
            'errorCode' => 'MissParameter.RegionId',
            'errorMessage' => 'You must specify RegionId.',
          ),
          2 => 
          array (
            'errorCode' => 'MissParameter.Name',
            'errorMessage' => 'You must specify Name.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.Name',
            'errorMessage' => 'The specified Name is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.Description',
            'errorMessage' => 'The specified Description is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AACF5140-783D-48F0-9E4F-E59D716F7D08\\",\\n  \\"QosId\\": \\"rg-acfm2iu4fnc****\\",\\n  \\"ResourceGroupId\\": \\"qos-oek3r2cmvk7m8q****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateQosResponse>\\n    <RequestId>AACF5140-783D-48F0-9E4F-E59D716F7D08</RequestId>\\n    <QosId>rg-acfm2iu4fnc****</QosId>\\n    <ResourceGroupId>qos-oek3r2cmvk7m8q****</ResourceGroupId>\\n</CreateQosResponse>","errorExample":""}]',
      'title' => '创建QoS策略',
      'summary' => '调用CreateQos接口创建QoS策略实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteQos' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要删除的QoS策略的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-xhwhyuo43l****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F77B3F0E-CAA2-41CF-A752-4F2893C5F7F0',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidId.Qos',
            'errorMessage' => 'The specified QosId is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'MissParameter.RegionId',
            'errorMessage' => 'You must specify RegionId.',
          ),
          2 => 
          array (
            'errorCode' => 'MissParameter.QosId',
            'errorMessage' => 'You must specify QosId.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F77B3F0E-CAA2-41CF-A752-4F2893C5F7F0\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <DeleteQosResponse>\\r\\n\\t<RequestId>F77B3F0E-CAA2-41CF-A752-4F2893C5F7F0</RequestId>\\r\\n    </DeleteQosResponse>","errorExample":""}]',
      'title' => '删除QoS策略',
      'summary' => '调用DeleteQos删除QoS策略。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyQos' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要修改的QoS策略的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-awfxl1adxeqyk****',
          ),
        ),
        2 => 
        array (
          'name' => 'QosName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略的名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'doctest',
          ),
        ),
        3 => 
        array (
          'name' => 'QosDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略描述，长度为1~512个字符，以大小写字母或中文开头，可包含数字、下划线（_)或短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'qosdes',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EE837E9F-BD50-4C2B-9E47-260F9D848480',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissParameter.RegionId',
            'errorMessage' => 'You must specify RegionId.',
          ),
          1 => 
          array (
            'errorCode' => 'MissParameter.QosId',
            'errorMessage' => 'You must specify QosId.',
          ),
          2 => 
          array (
            'errorCode' => 'MissParameter.Name',
            'errorMessage' => 'You must specify Name.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.Name',
            'errorMessage' => 'The specified Name is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidId.Qos',
            'errorMessage' => 'The specified QosId is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.Description',
            'errorMessage' => 'The specified Description is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"EE837E9F-BD50-4C2B-9E47-260F9D848480\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <ModifyQosResponse>\\r\\n\\t<RequestId>F77B3F0E-CAA2-41CF-A752-4F2893C5F7F0</RequestId>\\r\\n    </ModifyQosResponse>","errorExample":""}]',
      'title' => '修改QoS策略',
      'summary' => '修改QoS策略实例，支持修改QoS策略的名称。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociateQos' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-awfxl1adxeqyk****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要应用QoS策略的智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-c3m3n1khz58l****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '551CD836-9E46-4F2C-A167-B4363180A647',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'SmartAGAlreadyAssociateQos',
            'errorMessage' => 'The specified smart access gateway has already been associated with the specified QoS.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.Qos',
            'errorMessage' => 'The specified QosId is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'SAG.SoftwareNotSupport',
            'errorMessage' => 'The specified SAG software edition instance does not support ACL.',
          ),
          3 => 
          array (
            'errorCode' => 'QosPerSmartagAmountLimit',
            'errorMessage' => 'No more QoS can be associated with this smart access gateway.',
          ),
          4 => 
          array (
            'errorCode' => 'MissParameter.RegionId',
            'errorMessage' => 'You must specify RegionId.',
          ),
          5 => 
          array (
            'errorCode' => 'MissParameter.QosId',
            'errorMessage' => 'You must specify QosId.',
          ),
          6 => 
          array (
            'errorCode' => 'MissParameter.SmartAGId',
            'errorMessage' => 'You must specify SmartAGId.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"551CD836-9E46-4F2C-A167-B4363180A647\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <AssociateQosResponse>\\r\\n\\t<RequestId>551CD836-9E46-4F2C-A167-B4363180A647</RequestId>\\r\\n    </AssociateQosResponse>","errorExample":""}]',
      'title' => '将QoS策略应用到智能接入网关实例',
      'summary' => '调用AssociateQos接口将QoS策略应用到智能接入网关实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisassociateQos' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-1lcl9gv5ew7x****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要解绑的智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-c3m3n1khz58l****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '551CD836-9E46-4F2C-A167-B4363180A647',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissParameter.RegionId',
            'errorMessage' => 'You must specify RegionId.',
          ),
          1 => 
          array (
            'errorCode' => 'MissParameter.QosId',
            'errorMessage' => 'You must specify QosId.',
          ),
          2 => 
          array (
            'errorCode' => 'MissParameter.SmartAGId',
            'errorMessage' => 'You must specify SmartAGId.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidId.Qos',
            'errorMessage' => 'The specified QosId is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'SmartAGNotAssociateQos',
            'errorMessage' => 'The specified smart access gateway is not associated with the specified QoS.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.SMARTAG',
            'errorMessage' => 'The specified smart access gateway instance id is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"551CD836-9E46-4F2C-A167-B4363180A647\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <DisassociateQosResponse>\\r\\n\\t<RequestId>551CD836-9E46-4F2C-A167-B4363180A647</RequestId>\\r\\n    </DisassociateQosResponse>","errorExample":""}]',
      'title' => '解绑智能接入网关实例和QoS策略',
      'summary' => '调用DisassociateQos接口解绑智能接入网关实例和QoS策略。',
    ),
    'DescribeQoses' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'QosIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例ID。

- 如果要同时查询多个QoS策略实例，多个实例ID之间以半角逗号（,）分隔开。
- 如果不填写该项，则默认查询该地域下所有QoS策略实例信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'qos-oek3r2cmvk7m8q****',
          ),
        ),
        2 => 
        array (
          'name' => 'QosName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例名称。

名称长度为2~100个字符，以大小写字母或中文开头，可包含数字、下划线（_）、半角句号（.）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'zxtest',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时，每页包含的条目数。默认值为**10**，最大值为**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '查询结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时，每页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '2B5F35DD-0D66-41FC-AA99-BAE473E1A7A2',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Qoses' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Qos' => 
                  array (
                    'description' => 'QoS策略实例信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'QoS策略实例信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'QosDescription' => 
                        array (
                          'description' => 'QoS策略实例的描述信息。',
                          'type' => 'string',
                          'example' => 'description',
                        ),
                        'SagCount' => 
                        array (
                          'description' => 'QoS策略实例关联的智能接入网关实例数量。',
                          'type' => 'string',
                          'example' => '0',
                        ),
                        'SmartAGIds' => 
                        array (
                          'description' => 'QoS策略实例关联的智能接入网关实例列表。',
                          'type' => 'string',
                          'example' => 'sag-x34wj76fe0vhw*****,sag-jp04l844chg16*****',
                        ),
                        'QosId' => 
                        array (
                          'description' => 'QoS策略实例ID。',
                          'type' => 'string',
                          'example' => 'qos-oek3r2cmvk7m8q****',
                        ),
                        'QosName' => 
                        array (
                          'description' => 'QoS策略实例的名称。',
                          'type' => 'string',
                          'example' => 'zxtest',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => 'QoS策略实例所属的资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-acfm2iu4fnc****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"2B5F35DD-0D66-41FC-AA99-BAE473E1A7A2\\",\\n  \\"PageNumber\\": 1,\\n  \\"Qoses\\": {\\n    \\"Qos\\": [\\n      {\\n        \\"QosDescription\\": \\"description\\",\\n        \\"SagCount\\": \\"0\\",\\n        \\"SmartAGIds\\": \\"sag-x34wj76fe0vhw*****,sag-jp04l844chg16*****\\",\\n        \\"QosId\\": \\"qos-oek3r2cmvk7m8q****\\",\\n        \\"QosName\\": \\"zxtest\\",\\n        \\"ResourceGroupId\\": \\"rg-acfm2iu4fnc****\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeQosesResponse>\\n    <TotalCount>1</TotalCount>\\n    <PageSize>10</PageSize>\\n    <RequestId>2B5F35DD-0D66-41FC-AA99-BAE473E1A7A2</RequestId>\\n    <PageNumber>1</PageNumber>\\n    <Qoses>\\n        <Qos>\\n            <SagCount>0</SagCount>\\n            <ResourceGroupId>rg-acfm2iu4fnc****</ResourceGroupId>\\n            <QosId>qos-oek3r2cmvk7m8q****</QosId>\\n            <QosName>zxtest</QosName>\\n        </Qos>\\n    </Qoses>\\n</DescribeQosesResponse>","errorExample":""}]',
      'title' => '查询QoS策略',
      'summary' => '调用DescribeQoses接口查询指定地域下QoS策略实例信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetQosAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-1iqifund3gcno5****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'QosPolicies' => 
              array (
                'description' => 'QoS策略实例的五元组规则信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'QoS策略实例的五元组规则信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'EndTime' => 
                    array (
                      'description' => '五元组规则失效时间。

时间显示为北京时间，格式为：UTC时间+8小时。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '2021-07-29T00:00:00+0800',
                    ),
                    'StartTime' => 
                    array (
                      'description' => '五元组规则开始生效时间。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '2021-06-21T00:00:00+0800',
                    ),
                    'DestCidr' => 
                    array (
                      'description' => '目的网段。',
                      'type' => 'string',
                      'example' => '0.0.0.0/0',
                    ),
                    'DestPortRange' => 
                    array (
                      'description' => '目的端口范围。

取值范围：**-1**或**1**~**65535**。

目的端口范围格式示例：

- **1/200**，表示端口范围1至200。
- **80/80**，表示端口80。
- **-1/-1**，表示不限制端口。',
                      'type' => 'string',
                      'example' => '-1/-1',
                    ),
                    'IpProtocol' => 
                    array (
                      'description' => '五元组规则应用的协议类型。',
                      'type' => 'string',
                      'example' => 'ALL',
                    ),
                    'Priority' => 
                    array (
                      'description' => '五元组规则所属的限速规则的优先级。

数值越小，优先级越高。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'QosPolicieDescription' => 
                    array (
                      'description' => '五元组规则的描述信息。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'SourceCidr' => 
                    array (
                      'description' => '源网段。',
                      'type' => 'string',
                      'example' => '0.0.0.0/0',
                    ),
                    'QosPolicieName' => 
                    array (
                      'description' => '五元组规则名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'SourcePortRange' => 
                    array (
                      'description' => '源端口范围。

取值范围：**-1**或**1**~**65535**。

源端口范围格式例如：

- **1/200**，表示端口范围1至200。
- **80/80**，表示端口80。
- **-1/-1**，表示不限制端口。',
                      'type' => 'string',
                      'example' => '-1/-1',
                    ),
                  ),
                ),
              ),
              'QosCars' => 
              array (
                'description' => '配置异常的QoS策略限速规则信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'QoS策略实例的限速规则信息列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'MaxBandwidthAbs' => 
                    array (
                      'description' => '最大带宽。单位：Mbps。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '2',
                    ),
                    'QosCarName' => 
                    array (
                      'description' => '限速规则的名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'PercentSourceType' => 
                    array (
                      'description' => '按百分比限速时的带宽类型：

- **CcnBandwidth**：云连接网带宽。
- **InternetUpBandwidth**：公网上行带宽。',
                      'type' => 'string',
                      'example' => 'InternetUpBandwidth',
                    ),
                    'MinBandwidthAbs' => 
                    array (
                      'description' => '最小带宽。单位：Mbps。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'MaxBandwidthPercent' => 
                    array (
                      'description' => '最大带宽百分比。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '20',
                    ),
                    'QosCarDescription' => 
                    array (
                      'description' => '限速规则的描述信息。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'LimitType' => 
                    array (
                      'description' => '限速类型：

- **Absolute**：按带宽值。
- **Percent**：按百分比。',
                      'type' => 'string',
                      'example' => 'Absolute',
                    ),
                    'Priority' => 
                    array (
                      'description' => '限速规则的优先级。

优先级支持设置**1**~**3**级，数值越小，优先级越高。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'MinBandwidthPercent' => 
                    array (
                      'description' => '最小带宽百分比。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '10',
                    ),
                    'QosCarId' => 
                    array (
                      'description' => '限速规则ID。',
                      'type' => 'string',
                      'example' => 'qoscar-xir1apa8ayjp56ei****',
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '91058E01-1806-45D5-B305-19E4D0A5CE04',
              ),
              'ErrorConfigSmartAGCount' => 
              array (
                'description' => '配置异常的智能接入网关实例个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'QosName' => 
              array (
                'description' => 'QoS策略实例的名称。',
                'type' => 'string',
                'example' => 'test',
              ),
              'QosDescription' => 
              array (
                'description' => 'QoS策略实例的描述信息。',
                'type' => 'string',
                'example' => 'test',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"QosPolicies\\": [\\n    {\\n      \\"EndTime\\": 0,\\n      \\"StartTime\\": 0,\\n      \\"DestCidr\\": \\"0.0.0.0/0\\",\\n      \\"DestPortRange\\": \\"-1/-1\\",\\n      \\"IpProtocol\\": \\"ALL\\",\\n      \\"Priority\\": 1,\\n      \\"QosPolicieDescription\\": \\"test\\",\\n      \\"SourceCidr\\": \\"0.0.0.0/0\\",\\n      \\"QosPolicieName\\": \\"test\\",\\n      \\"SourcePortRange\\": \\"-1/-1\\"\\n    }\\n  ],\\n  \\"QosCars\\": [\\n    {\\n      \\"MaxBandwidthAbs\\": 2,\\n      \\"QosCarName\\": \\"test\\",\\n      \\"PercentSourceType\\": \\"InternetUpBandwidth\\",\\n      \\"MinBandwidthAbs\\": 1,\\n      \\"MaxBandwidthPercent\\": 20,\\n      \\"QosCarDescription\\": \\"test\\",\\n      \\"LimitType\\": \\"Absolute\\",\\n      \\"Priority\\": 1,\\n      \\"MinBandwidthPercent\\": 10,\\n      \\"QosCarId\\": \\"qoscar-xir1apa8ayjp56ei****\\"\\n    }\\n  ],\\n  \\"RequestId\\": \\"91058E01-1806-45D5-B305-19E4D0A5CE04\\",\\n  \\"ErrorConfigSmartAGCount\\": 1,\\n  \\"QosName\\": \\"test\\",\\n  \\"QosDescription\\": \\"test\\"\\n}","errorExample":""},{"type":"xml","example":"<GetQosAttributeResponse>\\n    <QosPolicies>\\n        <DestCidr>0.0.0.0/0</DestCidr>\\n        <SourcePortRange>-1/-1</SourcePortRange>\\n        <SourceCidr>0.0.0.0/0</SourceCidr>\\n        <Priority>1</Priority>\\n        <IpProtocol>ALL</IpProtocol>\\n        <DestPortRange>-1/-1</DestPortRange>\\n    </QosPolicies>\\n    <QosCars>\\n        <MinBandwidthAbs>1</MinBandwidthAbs>\\n        <QosCarId>qoscar-xir1apa8ayjp56ei****</QosCarId>\\n        <Priority>1</Priority>\\n        <MaxBandwidthAbs>2</MaxBandwidthAbs>\\n        <PercentSourceType>InternetUpBandwidth</PercentSourceType>\\n        <LimitType>Absolute</LimitType>\\n    </QosCars>\\n    <RequestId>91058E01-1806-45D5-B305-19E4D0A5CE04</RequestId>\\n    <ErrorConfigSmartAGCount>1</ErrorConfigSmartAGCount>\\n    <QosName>ccn-yaochi-bvt-qos</QosName>\\n</GetQosAttributeResponse>","errorExample":""}]',
      'title' => '查询QOS详情信息',
      'summary' => '调用GetQosAttribute接口查询QoS策略实例信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateQosCar' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS限速规则的描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'Qosdesc',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所在的地域ID。

您可以调用[DescribeRegions](~~69813~~)接口查询地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        2 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-xitd8690ucu8ro****',
          ),
        ),
        3 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置限速规则的优先级。 

取值范围：**1**~**3**。数值越小，优先级越高。同优先级时先下发的规则优先生效。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '2',
          ),
        ),
        4 => 
        array (
          'name' => 'LimitType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '限速类型，取值：

- **Absolute**：按带宽值。

- **Percent**：按百分比。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Absolute',
          ),
        ),
        5 => 
        array (
          'name' => 'MinBandwidthAbs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最小带宽值，带宽值需要输入整数，单位：Mbps。

**LimitType**是**Absolute**时必填。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '2',
          ),
        ),
        6 => 
        array (
          'name' => 'MaxBandwidthAbs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最大带宽值，带宽值需要输入整数，单位：Mbps。

**LimitType**是**Absolute**时必填。

> 输入的最大带宽值必须大于最小带宽值。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '6',
          ),
        ),
        7 => 
        array (
          'name' => 'MinBandwidthPercent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最小带宽百分比，单位：百分比（%），取值范围：**1~100**。

**LimitType**是**Percent**时必填。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '20',
          ),
        ),
        8 => 
        array (
          'name' => 'MaxBandwidthPercent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最大带宽百分比，单位：百分比（%），取值范围：**1~100**。

**LimitType**是**Percent**时必填。

> 输入的最大带宽百分比必须大于最小带宽百分比。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '90',
          ),
        ),
        9 => 
        array (
          'name' => 'PercentSourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '百分比限速时的带宽类型，取值：

- **CcnBandwidth**：表示CCN带宽。

- **InternetUpBandwidth**：表示Internet总带宽。',
            'type' => 'string',
            'required' => false,
            'example' => 'CcnBandwidth',
          ),
        ),
        10 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS限速规则名称。

长度为2~128，以字母或中文开头，且只包含中文、字母、数字、半角句号（.）、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'MinBandwidthAbs' => 
              array (
                'description' => '最小带宽值，单位：Mbps。

**LimitType**是**Absolute**时必填。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'Description' => 
              array (
                'description' => 'QoS限速规则描述。',
                'type' => 'string',
                'example' => 'Qosdesc',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AC13E8FF-4D61-40AD-868E-817F2D3AC86A',
              ),
              'QosCarId' => 
              array (
                'description' => 'QoS限速规则的实例ID。',
                'type' => 'string',
                'example' => 'qoscar-n5k8g97lihlph****',
              ),
              'MaxBandwidthAbs' => 
              array (
                'description' => '最大带宽值，单位：Mbps。

**LimitType**是**Absolute**时必填。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '6',
              ),
              'MaxBandwidthPercent' => 
              array (
                'description' => '最大带宽百分比，单位：百分比（%）。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '90',
              ),
              'Priority' => 
              array (
                'description' => '规则的优先级。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'QosId' => 
              array (
                'description' => 'QoS策略的实例ID。',
                'type' => 'string',
                'example' => 'qos-xitd8690ucu8ro****',
              ),
              'PercentSourceType' => 
              array (
                'description' => '按百分比限速时的带宽类型，取值：

- **CcnBandwidth**：表示CCN带宽。

- **InternetUpBandwidth**：表示Internet总带宽。',
                'type' => 'string',
                'example' => 'CcnBandwidth',
              ),
              'MinBandwidthPercent' => 
              array (
                'description' => '最小带宽百分比，单位：百分比（%）。
',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'LimitType' => 
              array (
                'description' => '限速类型，取值：

- **Absolute**：按带宽值。

- **Percent**：按百分比。',
                'type' => 'string',
                'example' => 'Percent',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissParameter.RegionId',
            'errorMessage' => 'You must specify RegionId.',
          ),
          1 => 
          array (
            'errorCode' => 'MissParameter.QosId',
            'errorMessage' => 'You must specify QosId.',
          ),
          2 => 
          array (
            'errorCode' => 'MissParameter.LimitType',
            'errorMessage' => 'You must specify LimitType.',
          ),
          3 => 
          array (
            'errorCode' => 'MissParameter.Priority',
            'errorMessage' => 'You must specify Priority.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.LimitType',
            'errorMessage' => 'You must specify LimitType.',
          ),
          5 => 
          array (
            'errorCode' => 'MissParameter.MaxBandwidthAbs',
            'errorMessage' => 'You must specify MaxBandwidthAbs.',
          ),
          6 => 
          array (
            'errorCode' => 'MissParameter.MaxBandwidthPercent',
            'errorMessage' => 'You must specify MaxBandwidthPercent.',
          ),
          7 => 
          array (
            'errorCode' => 'MissParameter.MinBandwidthAbs',
            'errorMessage' => 'You must specify MinBandwidthAbs.',
          ),
          8 => 
          array (
            'errorCode' => 'MissParameter.MinBandwidthPercent',
            'errorMessage' => 'You must specify MinBandwidthPercent.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidBandwidthCompare',
            'errorMessage' => 'The specified maximum bandwidth is smaller than the minimum bandwidth. Please check your input.',
          ),
          10 => 
          array (
            'errorCode' => 'MissParameter.PercentSourceType',
            'errorMessage' => 'You must specify PercentSourceType.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidId.Qos',
            'errorMessage' => 'The specified QosId is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'Invalid.QosCar.Priority',
            'errorMessage' => 'The specified priority of QosCarId is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'QosCarPerQosAmountLimit',
            'errorMessage' => 'The maximum number of QosCar in a QoS is exceeded. You can submit a ticket to increase the quota.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidParameter.Priority',
            'errorMessage' => 'The specified Priority is invalid.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParameter.PercentSourceType',
            'errorMessage' => 'The specified PercentSourceType is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParameter.Description',
            'errorMessage' => 'The specified Description is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidParameter.Name',
            'errorMessage' => 'The specified Name is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"MinBandwidthAbs\\": 2,\\n  \\"Description\\": \\"Qosdesc\\",\\n  \\"RequestId\\": \\"AC13E8FF-4D61-40AD-868E-817F2D3AC86A\\",\\n  \\"QosCarId\\": \\"qoscar-n5k8g97lihlph****\\",\\n  \\"MaxBandwidthAbs\\": 6,\\n  \\"MaxBandwidthPercent\\": 90,\\n  \\"Priority\\": 2,\\n  \\"QosId\\": \\"qos-xitd8690ucu8ro****\\",\\n  \\"PercentSourceType\\": \\"CcnBandwidth\\",\\n  \\"MinBandwidthPercent\\": 20,\\n  \\"LimitType\\": \\"Percent\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateQosCarResponse>\\n    <MinBandwidthAbs>2</MinBandwidthAbs>\\n    <Description>Qosdesc</Description>\\n    <RequestId>AC13E8FF-4D61-40AD-868E-817F2D3AC86A</RequestId>\\n    <QosCarId>qoscar-n5k8g97lihlph****</QosCarId>\\n    <MaxBandwidthAbs>6</MaxBandwidthAbs>\\n    <MaxBandwidthPercent>90</MaxBandwidthPercent>\\n    <Priority>2</Priority>\\n    <QosId>qos-xitd8690ucu8ro****</QosId>\\n    <PercentSourceType>CcnBandwidth</PercentSourceType>\\n    <MinBandwidthPercent>20</MinBandwidthPercent>\\n    <LimitType>Percent</LimitType>\\n</CreateQosCarResponse>","errorExample":""}]',
      'title' => '创建QoS的限速规则',
      'summary' => '调用CreateQosCar接口创建QoS的限速规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteQosCar' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-awfxl1adxeqyk****',
          ),
        ),
        2 => 
        array (
          'name' => 'QosCarId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS限速规则的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qoscar-n5k8g97lihlph****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '551CD836-9E46-4F2C-A167-B4363180A647',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidId.Qos',
            'errorMessage' => 'The specified QosId is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.QOSCAR',
            'errorMessage' => 'The specified QosCarId is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'MissParameter.RegionId',
            'errorMessage' => 'You must specify RegionId.',
          ),
          3 => 
          array (
            'errorCode' => 'MissParameter.QosCarId',
            'errorMessage' => 'You must specify QosCarId.',
          ),
          4 => 
          array (
            'errorCode' => 'MissParameter.QosId',
            'errorMessage' => 'You must specify QosId.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"551CD836-9E46-4F2C-A167-B4363180A647\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <DeleteQosCarResponse>\\r\\n\\t<RequestId>551CD836-9E46-4F2C-A167-B4363180A647</RequestId>\\r\\n    </DeleteQosCarResponse>","errorExample":""}]',
      'title' => '删除限速规则',
      'summary' => '调用DeleteQosCar接口删除限速规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyQosCar' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS限速规则描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'Qostest',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        2 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-awfxl1adxeqyk****',
          ),
        ),
        3 => 
        array (
          'name' => 'QosCarId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS限速规则的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qoscar-n5k8g97lihlph****',
          ),
        ),
        4 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置限速规则的优先级，数值越小，优先级越高，同优先级时先下发的规则优先生效。 优先级范围：**1~7**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        5 => 
        array (
          'name' => 'LimitType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '限速类型，取值：

- **Absolute**：按带宽值。

- **Percent**：按百分比。',
            'type' => 'string',
            'required' => false,
            'example' => 'Absolute',
          ),
        ),
        6 => 
        array (
          'name' => 'MinBandwidthAbs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最小带宽，带宽值需要输入整数，单位：Mbps。

**LimitType**是**Absolute**时必填。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
          ),
        ),
        7 => 
        array (
          'name' => 'MaxBandwidthAbs',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最大带宽，带宽值需要输入整数，单位：Mbps。

**LimitType**是**Absolute**时必填。

> 输入的最大带宽值必须大于最小带宽值。
',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '6',
          ),
        ),
        8 => 
        array (
          'name' => 'MinBandwidthPercent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最小带宽百分比，单位：百分比（%），取值范围：**1~100**。

**LimitType**是**Percent**时必填。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        9 => 
        array (
          'name' => 'MaxBandwidthPercent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '最大带宽百分比，单位：百分比（%），取值范围：**1~100**。

**LimitType**是**Percent**时必填。

> 输入的最大带宽百分比必须大于最小带宽百分比。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '90',
          ),
        ),
        10 => 
        array (
          'name' => 'PercentSourceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '百分比限速时的带宽类型，取值：

- **CcnBandwidth**：表示CCN带宽。

- **InternetUpBandwidth**：表示Internet总带宽。',
            'type' => 'string',
            'required' => false,
            'example' => 'CcnBandwidth',
          ),
        ),
        11 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS限速规则名称。

长度为2~128，以字母或中文开头，且只包含中文、字母、数字、半角句号（.）、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '551CD836-9E46-4F2C-A167-B4363180A647',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissParameter.RegionId',
            'errorMessage' => 'You must specify RegionId.',
          ),
          1 => 
          array (
            'errorCode' => 'MissParameter.QosCarId',
            'errorMessage' => 'You must specify QosCarId.',
          ),
          2 => 
          array (
            'errorCode' => 'MissParameter.QosId',
            'errorMessage' => 'You must specify QosId.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.Description',
            'errorMessage' => 'You must specify Description.',
          ),
          4 => 
          array (
            'errorCode' => 'MissParameter.MaxBandwidthAbs',
            'errorMessage' => 'You must specify MaxBandwidthAbs.',
          ),
          5 => 
          array (
            'errorCode' => 'MissParameter.MaxBandwidthPercent',
            'errorMessage' => 'You must specify MaxBandwidthPercent.',
          ),
          6 => 
          array (
            'errorCode' => 'MissParameter.MinBandwidthAbs',
            'errorMessage' => 'You must specify MinBandwidthAbs.',
          ),
          7 => 
          array (
            'errorCode' => 'MissParameter.MinBandwidthPercent',
            'errorMessage' => 'You must specify MinBandwidthPercent.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidBandwidthCompare',
            'errorMessage' => 'The specified maximum bandwidth is smaller than the minimum bandwidth. Please check your input.',
          ),
          9 => 
          array (
            'errorCode' => 'MissParameter.PercentSourceType',
            'errorMessage' => 'You must specify PercentSourceType.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidParameter.Priority',
            'errorMessage' => 'The specified Priority is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidParameter.PercentSourceType',
            'errorMessage' => 'The specified PercentSourceType is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidParameter.Name',
            'errorMessage' => 'The specified Name is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"551CD836-9E46-4F2C-A167-B4363180A647\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyQosCarResponse>\\n    <RequestId>551CD836-9E46-4F2C-A167-B4363180A647</RequestId>\\n</ModifyQosCarResponse>","errorExample":""}]',
      'title' => '修改QoS限速规则',
      'summary' => '调用ModifyQosCar接口修改QoS限速规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeQosCars' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-awfxl1adxeqyk****',
          ),
        ),
        2 => 
        array (
          'name' => 'QosCarId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例的限速规则ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'qoscar-n5k8g97lihlph****',
          ),
        ),
        3 => 
        array (
          'name' => 'Order',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '限速规则的排序方式。取值：

- **asc**（默认值）：升序。
- **desc**：降序。

默认按照限速规则的优先级升序排列。',
            'type' => 'string',
            'required' => false,
            'example' => 'asc',
          ),
        ),
        4 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '限速规则的描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'testdesc',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页显示的最大条目数。取值范围：**1**~**50**。默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        6 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码。默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '限速规则信息。',
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'QosCars' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'QosCar' => 
                  array (
                    'description' => '限速规则信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '限速规则信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'MaxBandwidthAbs' => 
                        array (
                          'description' => '最大带宽。单位：**Mbps**。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '6',
                        ),
                        'PercentSourceType' => 
                        array (
                          'description' => '按百分比限速时的带宽类型：

- **CcnBandwidth**：云连接网带宽。

- **InternetUpBandwidth**：公网上行带宽。',
                          'type' => 'string',
                          'example' => 'CcnBandwidth',
                        ),
                        'MinBandwidthAbs' => 
                        array (
                          'description' => '最小带宽。单位：**Mbps**。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'MaxBandwidthPercent' => 
                        array (
                          'description' => '最大带宽百分比。
',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '90',
                        ),
                        'Description' => 
                        array (
                          'description' => '限速规则的描述信息。',
                          'type' => 'string',
                          'example' => 'des',
                        ),
                        'QosId' => 
                        array (
                          'description' => 'QoS策略实例ID。',
                          'type' => 'string',
                          'example' => 'qos-awfxl1adxeqyk****',
                        ),
                        'LimitType' => 
                        array (
                          'description' => '限速类型：

- **Absolute**：按带宽值。

- **Percent**：按百分比。',
                          'type' => 'string',
                          'example' => ' Absolute',
                        ),
                        'Priority' => 
                        array (
                          'description' => '限速规则优先级。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3',
                        ),
                        'Name' => 
                        array (
                          'description' => '限速规则的名称。',
                          'type' => 'string',
                          'example' => 'name',
                        ),
                        'MinBandwidthPercent' => 
                        array (
                          'description' => '最小带宽百分比。
',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '20',
                        ),
                        'QosCarId' => 
                        array (
                          'description' => '限速规则ID。',
                          'type' => 'string',
                          'example' => 'qos-awfxl1adxeqyk****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时，每页显示的最大条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B7B758A9-009E-4C9D-9618-714EAE8BA5E9',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidId.Qos',
            'errorMessage' => 'The specified QosId is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 10,\\n  \\"QosCars\\": {\\n    \\"QosCar\\": [\\n      {\\n        \\"MaxBandwidthAbs\\": 6,\\n        \\"PercentSourceType\\": \\"CcnBandwidth\\",\\n        \\"MinBandwidthAbs\\": 2,\\n        \\"MaxBandwidthPercent\\": 90,\\n        \\"Description\\": \\"des\\",\\n        \\"QosId\\": \\"qos-awfxl1adxeqyk****\\",\\n        \\"LimitType\\": \\" Absolute\\",\\n        \\"Priority\\": 3,\\n        \\"Name\\": \\"name\\",\\n        \\"MinBandwidthPercent\\": 20,\\n        \\"QosCarId\\": \\"qos-awfxl1adxeqyk****\\"\\n      }\\n    ]\\n  },\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"B7B758A9-009E-4C9D-9618-714EAE8BA5E9\\",\\n  \\"PageNumber\\": 1\\n}","errorExample":""},{"type":"xml","example":"<DescribeQosCarsResponse>\\n    <TotalCount>10</TotalCount>\\n    <QosCars>\\n        <MaxBandwidthAbs>6</MaxBandwidthAbs>\\n        <PercentSourceType>CcnBandwidth</PercentSourceType>\\n        <MinBandwidthAbs>2</MinBandwidthAbs>\\n        <MaxBandwidthPercent>90</MaxBandwidthPercent>\\n        <Description>des</Description>\\n        <QosId>qos-awfxl1adxeqyk****</QosId>\\n        <LimitType> Absolute</LimitType>\\n        <Priority>3</Priority>\\n        <Name>name</Name>\\n        <MinBandwidthPercent>20</MinBandwidthPercent>\\n        <QosCarId>qos-awfxl1adxeqyk****</QosCarId>\\n    </QosCars>\\n    <PageSize>10</PageSize>\\n    <RequestId>B7B758A9-009E-4C9D-9618-714EAE8BA5E9</RequestId>\\n    <PageNumber>1</PageNumber>\\n</DescribeQosCarsResponse>","errorExample":""}]',
      'title' => '查询QoS的限速规则',
      'summary' => '调用DescribeQosCars接口查询QoS策略实例的限速规则信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateQosPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略流分类规则的描述信息。

描述长度为1~512个字符，以大小写字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        1 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所在的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        2 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-xitd8690ucu8ro****',
          ),
        ),
        3 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略流分类规则所属的限速规则优先级。

优先级范围：**1~3**。数值越小，优先级越高。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '3',
          ),
        ),
        4 => 
        array (
          'name' => 'SourceCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源网段。

源网段格式为CIDR格式。示例：192.168.1.0/24。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.10.10.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'DestCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的网段。

目的网段格式为CIDR格式。示例：192.168.10.0/24。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '10.10.20.0/24',
          ),
        ),
        6 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略流分类规则应用的协议类型。

QoS策略流分类规则支持的协议类型，请以控制台为准。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'TCP',
          ),
        ),
        7 => 
        array (
          'name' => 'SourcePortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源端口范围。

取值范围：**-1**或**1**~**65535**。

源端口范围格式示例：

- **1/200**，表示端口范围1~200。
- **80/80**，表示端口80。
- **-1/-1**，表示不限制端口。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '80/80',
          ),
        ),
        8 => 
        array (
          'name' => 'DestPortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的端口范围。

取值范围：**-1**或**1**~**65535**。

目的端口范围格式示例：

- **1/200**，表示端口范围1~200。
- **80/80**，表示端口80。
- **-1/-1**，表示不限制端口。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '80/80',
          ),
        ),
        9 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略流分类规则开始生效时间。

时间按照ISO8601标准表示，并使用UTC时间+8小时。格式为：`YYYY-MM-DDThh:mm:ss+0800`。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-07-14T16:41:33+0800',
          ),
        ),
        10 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略流分类规则生效结束时间。

时间按照ISO8601标准表示，并使用UTC时间+8小时。格式为：`YYYY-MM-DDThh:mm:ss+0800`。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-09-14T16:41:33+0800',
          ),
        ),
        11 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略流分类规则名称。

名称长度为2~100个字符，以大小写字母或中文开头，可包含数字、短划线（-）和下划线（_）。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        12 => 
        array (
          'name' => 'DpiSignatureIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '应用ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '应用ID。

系统支持一次最多输入100个应用ID。

您可以通过[ListDpiSignatures](~~196630~~)查询应用ID及其对应的应用信息。',
              'type' => 'string',
              'required' => false,
              'example' => '1',
            ),
            'required' => false,
            'example' => '1',
            'maxItems' => 100,
          ),
        ),
        13 => 
        array (
          'name' => 'DpiGroupIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '应用组ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '应用组ID。

系统支持一次最多输入100个应用组ID。

您可以通过[ListDpiGroups](~~196754~~)查询应用组ID及其包含的应用信息。',
              'type' => 'string',
              'required' => false,
              'example' => '20',
            ),
            'required' => false,
            'example' => '20',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'Description' => 
              array (
                'description' => 'QoS策略流分类规则的描述。',
                'type' => 'string',
                'example' => 'desctest',
              ),
              'EndTime' => 
              array (
                'description' => 'QoS策略流分类规则生效结束时间。',
                'type' => 'string',
                'example' => '2022-09-14T16:41:33+0800',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '97862812-2C7E-4D25-B0D5-B26DAC7FA293',
              ),
              'QosPolicyId' => 
              array (
                'description' => 'QoS策略流分类规则的实例ID。',
                'type' => 'string',
                'example' => 'qospy-xhwhyuo43l********',
              ),
              'SourcePortRange' => 
              array (
                'description' => '源端口范围。',
                'type' => 'string',
                'example' => '80/80',
              ),
              'SourceCidr' => 
              array (
                'description' => '源网段。',
                'type' => 'string',
                'example' => '10.10.10.0/24',
              ),
              'Priority' => 
              array (
                'description' => 'QoS策略流分类规则所属的限速规则优先级。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3',
              ),
              'StartTime' => 
              array (
                'description' => 'QoS策略流分类规则生效开始时间。',
                'type' => 'string',
                'example' => '2022-07-14T16:41:33+0800',
              ),
              'DestPortRange' => 
              array (
                'description' => '目的端口范围。',
                'type' => 'string',
                'example' => '80/80',
              ),
              'DpiGroupIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DpiGroupId' => 
                  array (
                    'description' => '应用组信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '应用组ID列表。',
                      'type' => 'string',
                      'example' => '20',
                    ),
                  ),
                ),
              ),
              'Name' => 
              array (
                'description' => 'QoS策略流分类规则名称。',
                'type' => 'string',
                'example' => 'nametest',
              ),
              'DestCidr' => 
              array (
                'description' => '目的网段。',
                'type' => 'string',
                'example' => '10.10.10.0/24',
              ),
              'DpiSignatureIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DpiSignatureId' => 
                  array (
                    'description' => '应用信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '应用ID列表。',
                      'type' => 'string',
                      'example' => '1',
                    ),
                  ),
                ),
              ),
              'QosId' => 
              array (
                'description' => 'QoS策略的实例ID。',
                'type' => 'string',
                'example' => 'qos-xitd8690ucu8ro****',
              ),
              'IpProtocol' => 
              array (
                'description' => 'QoS策略流分类规则应用的协议类型。',
                'type' => 'string',
                'example' => 'TCP',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'NotSupportedProtocol',
            'errorMessage' => 'The specified protocol of the QoS policy is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidId.Qos',
            'errorMessage' => 'The specified QosId is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'QosPolicyPerQosAmountLimit',
            'errorMessage' => 'The maximum number of policies in a QoS is exceeded. You can submit a ticket to increase the quota.',
          ),
          3 => 
          array (
            'errorCode' => 'MissParameter.RegionId',
            'errorMessage' => 'You must specify RegionId.',
          ),
          4 => 
          array (
            'errorCode' => 'MissParameter.QosId',
            'errorMessage' => 'You must specify QosId.',
          ),
          5 => 
          array (
            'errorCode' => 'MissParameter.QosPolicyId',
            'errorMessage' => 'You must specify QosPolicyId.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.Priority',
            'errorMessage' => 'The specified Priority is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'MissParameter.SourceCidr',
            'errorMessage' => 'You must specify SourceCidr.',
          ),
          8 => 
          array (
            'errorCode' => 'MissParameter.SourcePortRange',
            'errorMessage' => 'You must specify SourcePortRange.',
          ),
          9 => 
          array (
            'errorCode' => 'MissParameter.DestCidr',
            'errorMessage' => 'You must specify DestCidr.',
          ),
          10 => 
          array (
            'errorCode' => 'MissParameter.DestPortRange',
            'errorMessage' => 'You must specify DestPortRange.',
          ),
          11 => 
          array (
            'errorCode' => 'MissParameter.IpProtocol',
            'errorMessage' => 'You must specify IpProtocol.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidParameter.Description',
            'errorMessage' => 'The specified Description is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidParameter.DestCidr',
            'errorMessage' => 'The specified DestCidr is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'InvalidParameter.DestPortRange',
            'errorMessage' => 'The specified DestPortRange is invalid.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParameter.SourceCidr',
            'errorMessage' => 'The specified SourceCidr is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidParameter.SourcePortRange',
            'errorMessage' => 'The specified SourcePortRange is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'InvalidParameter.StartTime',
            'errorMessage' => 'The specified StartTime is invalid.',
          ),
          18 => 
          array (
            'errorCode' => 'InvalidParameter.EndTime',
            'errorMessage' => 'The specified EndTime is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'InvalidTimeRangeCompare',
            'errorMessage' => 'The specified end time is earlier than the start time. Please check your input.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidParameter.Name',
            'errorMessage' => 'The specified Name is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidPortRange',
            'errorMessage' => 'The specified port range is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Description\\": \\"desctest\\",\\n  \\"EndTime\\": \\"2022-09-14T16:41:33+0800\\",\\n  \\"RequestId\\": \\"97862812-2C7E-4D25-B0D5-B26DAC7FA293\\",\\n  \\"QosPolicyId\\": \\"qospy-xhwhyuo43l********\\",\\n  \\"SourcePortRange\\": \\"80/80\\",\\n  \\"SourceCidr\\": \\"10.10.10.0/24\\",\\n  \\"Priority\\": 3,\\n  \\"StartTime\\": \\"2022-07-14T16:41:33+0800\\",\\n  \\"DestPortRange\\": \\"80/80\\",\\n  \\"DpiGroupIds\\": {\\n    \\"DpiGroupId\\": [\\n      \\"20\\"\\n    ]\\n  },\\n  \\"Name\\": \\"nametest\\",\\n  \\"DestCidr\\": \\"10.10.10.0/24\\",\\n  \\"DpiSignatureIds\\": {\\n    \\"DpiSignatureId\\": [\\n      \\"1\\"\\n    ]\\n  },\\n  \\"QosId\\": \\"qos-xitd8690ucu8ro****\\",\\n  \\"IpProtocol\\": \\"TCP\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateQosPolicyResponse>\\n    <Description>desctest</Description>\\n    <EndTime>2022-09-14T16:41:33+0800</EndTime>\\n    <RequestId>97862812-2C7E-4D25-B0D5-B26DAC7FA293</RequestId>\\n    <QosPolicyId>qospy-xhwhyuo43l********</QosPolicyId>\\n    <SourcePortRange>80/80</SourcePortRange>\\n    <SourceCidr>10.10.10.0/24</SourceCidr>\\n    <Priority>3</Priority>\\n    <StartTime>2022-07-14T16:41:33+0800</StartTime>\\n    <DestPortRange>80/80</DestPortRange>\\n    <DpiGroupIds>20</DpiGroupIds>\\n    <Name>nametest</Name>\\n    <DestCidr>10.10.10.0/24</DestCidr>\\n    <DpiSignatureIds>1</DpiSignatureIds>\\n    <QosId>qos-xitd8690ucu8ro****</QosId>\\n    <IpProtocol>TCP</IpProtocol>\\n</CreateQosPolicyResponse>","errorExample":""}]',
      'title' => '创建QoS五元组规则',
      'summary' => '调用CreateQosPolicy接口创建QoS策略流分类规则。',
      'description' => '在您创建QoS策略五元组规则前，请确保您已经创建了QoS策略限速规则。具体操作，请参见[CreateQosCar](~~131806~~)。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteQosPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略所属地域的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-xitd8690ucu8ro****',
          ),
        ),
        2 => 
        array (
          'name' => 'QosPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS五元组的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qospy-xhwhyuo43l****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '551CD836-9E46-4F2C-A167-B4363180A647',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissParameter.RegionId',
            'errorMessage' => 'You must specify RegionId.',
          ),
          1 => 
          array (
            'errorCode' => 'MissParameter.QosId',
            'errorMessage' => 'You must specify QosId.',
          ),
          2 => 
          array (
            'errorCode' => 'MissParameter.QosPolicyId',
            'errorMessage' => 'You must specify QosPolicyId.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidId.Qos',
            'errorMessage' => 'The specified QosId is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidId.QOSPY',
            'errorMessage' => 'The specified QosPolicyId is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"551CD836-9E46-4F2C-A167-B4363180A647\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n    <DeleteQosPolicyResponse>\\r\\n\\t<RequestId>551CD836-9E46-4F2C-A167-B4363180A647</RequestId>\\r\\n    </DeleteQosPolicyResponse>","errorExample":""}]',
      'title' => '删除五元组规则',
      'summary' => '调用DeleteQosPolicy接口删除五元组规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyQosPolicy' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-xitd8690ucu8ro****',
          ),
        ),
        2 => 
        array (
          'name' => 'QosPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略流分类规则实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qospy-427m9fo6wkh****',
          ),
        ),
        3 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '设置QoS策略流分类规则所属的限速规则的优先级。
 
优先级范围：**1~3**。数值越小，优先级越高。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
        4 => 
        array (
          'name' => 'SourceCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源网段。

源网段格式为CIDR格式。例如：192.168.1.0/24。',
            'type' => 'string',
            'required' => false,
            'example' => '10.10.10.0/24',
          ),
        ),
        5 => 
        array (
          'name' => 'DestCidr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的网段。

目的网段格式为CIDR格式。例如：192.168.10.0/24。',
            'type' => 'string',
            'required' => false,
            'example' => '10.10.20.0/24',
          ),
        ),
        6 => 
        array (
          'name' => 'IpProtocol',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略流分类规则应用的协议类型。

QoS策略流分类规则支持的协议类型，请以控制台为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'TCP',
          ),
        ),
        7 => 
        array (
          'name' => 'SourcePortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '源端口范围。

取值范围：**-1**或**1**~**65535**。

源端口范围格式例如：

- **1/200**，表示端口范围1~200。
- **80/80**，表示端口80。
- **-1/-1**，表示不限制端口。',
            'type' => 'string',
            'required' => false,
            'example' => '1/200',
          ),
        ),
        8 => 
        array (
          'name' => 'DestPortRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目的端口范围。

取值范围：**-1**或**1**~**65535**。

目的端口范围格式例如：

- **1/200**，表示端口范围1至200。
- **80/80**，表示端口80。
- **-1/-1**，表示不限制端口。',
            'type' => 'string',
            'required' => false,
            'example' => '300/400',
          ),
        ),
        9 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略流分类规则开始生效时间。

时间按照ISO8601标准表示，并使用UTC时间+8小时。格式为：YYYY-MM-DDThh:mm:ss+0800。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-07-14T16:41:33+0800',
          ),
        ),
        10 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略流分类规则生效结束时间。

时间按照ISO8601标准表示，并使用UTC时间+8小时。格式为：YYYY-MM-DDThh:mm:ss+0800。',
            'type' => 'string',
            'required' => false,
            'example' => '2019-09-14T16:41:33+0800',
          ),
        ),
        11 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略流分类规则的描述信息。

描述长度为1~512个字符，以大小写字母或中文开头，可包含数字、下划线（_）或短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'desctest',
          ),
        ),
        12 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略流分类规则名称。

名称长度为2~100个字符，以大小写字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'nametest',
          ),
        ),
        13 => 
        array (
          'name' => 'DpiSignatureIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '应用ID列表。
',
            'type' => 'array',
            'items' => 
            array (
              'description' => '应用ID。

系统支持一次最多输入100个应用ID。

您可以通过[ListDpiSignatures](~~196630~~)查询应用ID及其对应的应用信息。',
              'type' => 'string',
              'required' => false,
              'example' => '1',
            ),
            'required' => false,
            'example' => '1',
            'maxItems' => 100,
          ),
        ),
        14 => 
        array (
          'name' => 'DpiGroupIds',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '应用组ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '应用组ID。

系统支持一次最多输入100个应用组ID。

您可以通过[ListDpiGroups](~~196754~~)查询应用组ID及其包含的应用信息。',
              'type' => 'string',
              'required' => false,
              'example' => '20',
            ),
            'required' => false,
            'example' => '20',
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '551CD836-9E46-4F2C-A167-B4363180A647',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissParameter.RegionId',
            'errorMessage' => 'You must specify RegionId.',
          ),
          1 => 
          array (
            'errorCode' => 'MissParameter.QosId',
            'errorMessage' => 'You must specify QosId.',
          ),
          2 => 
          array (
            'errorCode' => 'MissParameter.QosPolicyId',
            'errorMessage' => 'You must specify QosPolicyId.',
          ),
          3 => 
          array (
            'errorCode' => 'InvalidParameter.Description',
            'errorMessage' => 'The specified Description is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'InvalidParameter.Priority',
            'errorMessage' => 'The specified Priority is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'InvalidParameter.SourcePortRange',
            'errorMessage' => 'The specified SourcePortRange is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'InvalidParameter.DestCidr',
            'errorMessage' => 'The specified DestCidr is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidParameter.DestPortRange',
            'errorMessage' => 'The specified DestPortRange is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'InvalidParameter.SourceCidr',
            'errorMessage' => 'The specified SourceCidr is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'InvalidParameter.StartTime',
            'errorMessage' => 'The specified StartTime is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'InvalidParameter.EndTime',
            'errorMessage' => 'The specified EndTime is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidTimeRangeCompare',
            'errorMessage' => 'The specified end time is earlier than the start time. Please check your input.',
          ),
          12 => 
          array (
            'errorCode' => 'InvalidId.QOSPY',
            'errorMessage' => 'The specified QosPolicyId is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'InvalidId.Qos',
            'errorMessage' => 'The specified QosId is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'NotSupportedProtocol',
            'errorMessage' => 'The specified protocol of the QoS policy is not supported.',
          ),
          15 => 
          array (
            'errorCode' => 'InvalidParameter.Name',
            'errorMessage' => 'The specified Name is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidPortRange',
            'errorMessage' => 'The specified port range is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"551CD836-9E46-4F2C-A167-B4363180A647\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyQosPolicyRespon>\\r\\n<RequestId>551CD836-9E46-4F2C-A167-B4363180A647</RequestId>\\r\\n</ModifyQosPolicyRespon>","errorExample":""}]',
      'title' => '修改QoS策略五元组规则配置信息',
      'summary' => '调用ModifyQosPolicy接口修改QoS策略流分类规则。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeQosPolicies' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略实例所属的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-hangzhou',
          ),
        ),
        1 => 
        array (
          'name' => 'QosId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'qos-xitd8690ucu8ro****',
          ),
        ),
        2 => 
        array (
          'name' => 'QosPolicyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略五元组规则的实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'qospy-427m9fo6wkh****',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略五元组规则实例的描述。

长度为1~512个字符，以大小写字母或中文开头，可包含数字、下划线（_）和短划线（-）。',
            'type' => 'string',
            'required' => false,
            'example' => 'docdesc',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页展示的五元组规则条目数。

默认值：**10**，最大值：**50**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时的页码。默认值：**1**。

',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'Priority',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'QoS策略五元组规则所属的限速规则的优先级。

优先级范围：**1~3**。数值越小，优先级越高。

> 如果您已经提交工单申请并通过[CreateQosPolicy](~~131575~~)创建了第4优先级的QoS策略，您可以通过本接口查询第4优先级的QoS策略五元组规则配置信息。


',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'QoS策略五元组规则配置信息列表。',
            'type' => 'object',
            'properties' => 
            array (
              'QosPolicies' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'QosPolicy' => 
                  array (
                    'description' => 'QoS策略五元组规则配置信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '应用ID列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DpiSignatureIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DpiSignatureId' => 
                            array (
                              'description' => '应用ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '应用ID列表。

您可以通过[ListDpiSignatures](~~196630~~)查询应用ID及其对应的应用信息。',
                                'type' => 'string',
                                'example' => '1',
                              ),
                            ),
                          ),
                        ),
                        'IpProtocol' => 
                        array (
                          'description' => 'QoS策略五元组规则应用的协议类型。',
                          'type' => 'string',
                          'example' => 'TCP',
                        ),
                        'QosId' => 
                        array (
                          'description' => 'QoS策略的实例ID。',
                          'type' => 'string',
                          'example' => 'qos-xitd8690ucu8ro****',
                        ),
                        'Priority' => 
                        array (
                          'description' => 'QoS策略五元组规则所属的限速规则的优先级。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'EndTime' => 
                        array (
                          'description' => 'QoS策略五元组规则生效结束时间。',
                          'type' => 'string',
                          'example' => '2019-07-14T16:41:33+0800',
                        ),
                        'StartTime' => 
                        array (
                          'description' => 'QoS策略五元组规则生效开始时间。',
                          'type' => 'string',
                          'example' => '2019-07-14T16:41:33+0800',
                        ),
                        'Description' => 
                        array (
                          'description' => 'QoS策略五元组规则描述。',
                          'type' => 'string',
                          'example' => 'docdesc',
                        ),
                        'DestCidr' => 
                        array (
                          'description' => '目的网段。',
                          'type' => 'string',
                          'example' => '10.10.10.0/24',
                        ),
                        'DestPortRange' => 
                        array (
                          'description' => '目的端口范围。',
                          'type' => 'string',
                          'example' => '90/90',
                        ),
                        'QosPolicyId' => 
                        array (
                          'description' => 'QoS策略五元组规则的实例ID。',
                          'type' => 'string',
                          'example' => 'qospy-427m9fo6wkh****',
                        ),
                        'Name' => 
                        array (
                          'description' => 'QoS策略五元组规则名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'SourceCidr' => 
                        array (
                          'description' => '源网段。',
                          'type' => 'string',
                          'example' => '10.0.0.0/24',
                        ),
                        'SourcePortRange' => 
                        array (
                          'description' => '源端口范围。',
                          'type' => 'string',
                          'example' => '80/80',
                        ),
                        'DpiGroupIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DpiGroupId' => 
                            array (
                              'description' => '应用组ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '应用组ID列表。

您可以通过[ListDpiGroups](~~196754~~)查询应用组ID及其包含的应用信息。',
                                'type' => 'string',
                                'example' => '20',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '当前符合查询条件的QoS策略五元组规则条目总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '2',
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页展示的五元组规则条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '97862812-2C7E-4D25-B0D5-B26DAC7FA293',
              ),
              'PageNumber' => 
              array (
                'description' => '分页查询时的页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'InvalidId.Qos',
            'errorMessage' => 'The specified QosId is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          1 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"QosPolicies\\": {\\n    \\"QosPolicy\\": [\\n      {\\n        \\"DpiSignatureIds\\": {\\n          \\"DpiSignatureId\\": [\\n            \\"1\\"\\n          ]\\n        },\\n        \\"IpProtocol\\": \\"TCP\\",\\n        \\"QosId\\": \\"qos-xitd8690ucu8ro****\\",\\n        \\"Priority\\": 1,\\n        \\"EndTime\\": \\"2019-07-14T16:41:33+0800\\",\\n        \\"StartTime\\": \\"2019-07-14T16:41:33+0800\\",\\n        \\"Description\\": \\"docdesc\\",\\n        \\"DestCidr\\": \\"10.10.10.0/24\\",\\n        \\"DestPortRange\\": \\"90/90\\",\\n        \\"QosPolicyId\\": \\"qospy-427m9fo6wkh****\\",\\n        \\"Name\\": \\"test\\",\\n        \\"SourceCidr\\": \\"10.0.0.0/24\\",\\n        \\"SourcePortRange\\": \\"80/80\\",\\n        \\"DpiGroupIds\\": {\\n          \\"DpiGroupId\\": [\\n            \\"20\\"\\n          ]\\n        }\\n      }\\n    ]\\n  },\\n  \\"TotalCount\\": 2,\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"97862812-2C7E-4D25-B0D5-B26DAC7FA293\\",\\n  \\"PageNumber\\": 1\\n}","errorExample":""},{"type":"xml","example":"<DescribeQosPoliciesResponse>\\n    <QosPolicies>\\n        <DpiSignatureIds>1</DpiSignatureIds>\\n        <IpProtocol>TCP</IpProtocol>\\n        <QosId>qos-xitd8690ucu8ro****</QosId>\\n        <Priority>1</Priority>\\n        <EndTime>2019-07-14T16:41:33+0800</EndTime>\\n        <StartTime>2019-07-14T16:41:33+0800</StartTime>\\n        <Description>docdesc</Description>\\n        <DestCidr>10.10.10.0/24</DestCidr>\\n        <DestPortRange>90/90</DestPortRange>\\n        <QosPolicyId>qospy-427m9fo6wkh****</QosPolicyId>\\n        <Name>test</Name>\\n        <SourceCidr>10.0.0.0/24</SourceCidr>\\n        <SourcePortRange>80/80</SourcePortRange>\\n        <DpiGroupIds>20</DpiGroupIds>\\n    </QosPolicies>\\n    <TotalCount>2</TotalCount>\\n    <PageSize>10</PageSize>\\n    <RequestId>97862812-2C7E-4D25-B0D5-B26DAC7FA293</RequestId>\\n    <PageNumber>1</PageNumber>\\n</DescribeQosPoliciesResponse>","errorExample":""}]',
      'title' => '查询五元组规则',
      'summary' => '调用DescribeQosPolicies查询QoS策略五元组规则配置信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateFlowLog' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例的描述。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例的名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'sag-flowlog-1',
          ),
        ),
        3 => 
        array (
          'name' => 'ActiveAging',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '活跃流输出间隔。取值范围：**60~6000**，单位：秒。默认值为**300**秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '300',
          ),
        ),
        4 => 
        array (
          'name' => 'InactiveAging',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '非活跃流输出间隔。取值范围：**10~600**，单位：秒。默认值为**15**秒。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '15',
          ),
        ),
        5 => 
        array (
          'name' => 'OutputType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志输出类型，取值：

- **sls**：流日志存储在阿里云日志服务中。

- **netflow**：流日志存储在您配置的Netflow服务器上。

- **all**：流日志同时存储在阿里云日志服务和您配置的Netflow服务器上。

',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'all',
          ),
        ),
        6 => 
        array (
          'name' => 'SlsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务的地域ID。

流日志输出类型为**sls**或**all**时需填写该项。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'cn-shanghai',
          ),
        ),
        7 => 
        array (
          'name' => 'ProjectName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务的Project。

流日志输出类型为**sls**或**all**时需填写该项。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'sag-flowlog-shanghai',
          ),
        ),
        8 => 
        array (
          'name' => 'LogstoreName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务的Logstore。

流日志输出类型为**sls**或者**all**时需填写该项。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'config-operation-log',
          ),
        ),
        9 => 
        array (
          'name' => 'NetflowServerIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '存储流日志的Netflow服务器地址。

流日志输出类型为**netflow**或**all**时需填写该项。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '192.168.0.2',
          ),
        ),
        10 => 
        array (
          'name' => 'NetflowServerPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '存储流日志的Netflow服务器端口，默认值为**9995**。

流日志输出类型为**netflow**或**all**时需填写该项。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '9995',
          ),
        ),
        11 => 
        array (
          'name' => 'NetflowVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '存储流日志时使用的Netflow协议版本号，取值：**V5**、**V9**和**V10**，默认值为**V9**。

流日志输出类型为**netflow**或**all**时需填写该项。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'V9',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '流日志实例信息。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '650CB9E8-20F3-4538-A4FC-1DA1B36E42D9',
              ),
              'FlowLogId' => 
              array (
                'description' => '流日志实例ID。',
                'type' => 'string',
                'example' => 'fl-7a56mar1kfw9vj****',
              ),
              'ResourceGroupId' => 
              array (
                'description' => '流日志实例所属资源组ID。',
                'type' => 'string',
                'example' => 'rg-acfm2iu4f****',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DependencyViolation.FlowLog',
            'errorMessage' => 'This FlowLog instance is bound to an SAG instance.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.FlowLog',
            'errorMessage' => 'The current FlowLog instance status does not support this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidFlowLogId.NotFound',
            'errorMessage' => 'The specified FlowLogId does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.FlowLogId',
            'errorMessage' => 'Specify the FlowLogId parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.AssociateFlowLog',
            'errorMessage' => 'The operation failed. The specified SAG instance has already been associated with another FlowLog instance.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.AssociateFlowLog',
            'errorMessage' => 'You cannot bind the SAG device of the current version or model to a FlowLog instance.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.Flowlog',
            'errorMessage' => 'The maximum number of FlowLog instances is exceeded.',
          ),
          7 => 
          array (
            'errorCode' => 'MissingParam.LogstoreName',
            'errorMessage' => 'Specify the LogstoreName parameter.',
          ),
          8 => 
          array (
            'errorCode' => 'MissingParam.NetflowServerIp',
            'errorMessage' => 'Specify the NetflowServerIp parameter.',
          ),
          9 => 
          array (
            'errorCode' => 'MissingParam.NetflowServerPort',
            'errorMessage' => 'Specify the NetflowServerPort parameter.',
          ),
          10 => 
          array (
            'errorCode' => 'MissingParam.NetflowVersion',
            'errorMessage' => 'Specify the NetflowVersion parameter.',
          ),
          11 => 
          array (
            'errorCode' => 'MissingParam.ProjectName',
            'errorMessage' => 'Specify the ProjectName parameter.',
          ),
          12 => 
          array (
            'errorCode' => 'MissingParam.SlsRegionId',
            'errorMessage' => 'Specify the SlsRegionId parameter.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.ActiveAging',
            'errorMessage' => 'The specified ActiveAging is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'IllegalParam.InactiveAging',
            'errorMessage' => 'The specified InactiveAging is invalid.',
          ),
          15 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerIp',
            'errorMessage' => 'The specified NetflowServerIp is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerPort',
            'errorMessage' => 'The specified NetflowServerPort is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'IllegalParam.NetflowVersion',
            'errorMessage' => 'The specified NetflowVersion is invalid.',
          ),
          18 => 
          array (
            'errorCode' => 'IllegalParam.OutputType',
            'errorMessage' => 'The specified OutputType is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'The specified RegionId is invalid.',
          ),
          20 => 
          array (
            'errorCode' => 'IllegalParam.SlsRegionId',
            'errorMessage' => 'The specified SlsRegionId is invalid.',
          ),
          21 => 
          array (
            'errorCode' => 'IllegalParam.Status',
            'errorMessage' => 'The specified Status parameter is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"650CB9E8-20F3-4538-A4FC-1DA1B36E42D9\\",\\n  \\"FlowLogId\\": \\"fl-7a56mar1kfw9vj****\\",\\n  \\"ResourceGroupId\\": \\"rg-acfm2iu4f****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateFlowLogResponse>\\n    <RequestId>650CB9E8-20F3-4538-A4FC-1DA1B36E42D9</RequestId>\\n    <FlowLogId>fl-7a56mar1kfw9vj****</FlowLogId>\\n    <ResourceGroupId>rg-acfm2iu4f****</ResourceGroupId>\\n</CreateFlowLogResponse>","errorExample":""}]',
      'title' => '创建一个流日志',
      'summary' => '调用CreateFlowlog接口创建流日志实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteFlowLog' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fl-7a56mar1kfw9vj****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B05AF87C-0FE5-42D7-BEA3-665D90FAA71D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DependencyViolation.FlowLog',
            'errorMessage' => 'This FlowLog instance is bound to an SAG instance.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.FlowLog',
            'errorMessage' => 'The current FlowLog instance status does not support this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidFlowLogId.NotFound',
            'errorMessage' => 'The specified FlowLogId does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.FlowLogId',
            'errorMessage' => 'Specify the FlowLogId parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.AssociateFlowLog',
            'errorMessage' => 'The operation failed. The specified SAG instance has already been associated with another FlowLog instance.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.AssociateFlowLog',
            'errorMessage' => 'You cannot bind the SAG device of the current version or model to a FlowLog instance.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.Flowlog',
            'errorMessage' => 'The maximum number of FlowLog instances is exceeded.',
          ),
          7 => 
          array (
            'errorCode' => 'MissingParam.LogstoreName',
            'errorMessage' => 'Specify the LogstoreName parameter.',
          ),
          8 => 
          array (
            'errorCode' => 'MissingParam.NetflowServerIp',
            'errorMessage' => 'Specify the NetflowServerIp parameter.',
          ),
          9 => 
          array (
            'errorCode' => 'MissingParam.NetflowServerPort',
            'errorMessage' => 'Specify the NetflowServerPort parameter.',
          ),
          10 => 
          array (
            'errorCode' => 'MissingParam.NetflowVersion',
            'errorMessage' => 'Specify the NetflowVersion parameter.',
          ),
          11 => 
          array (
            'errorCode' => 'MissingParam.ProjectName',
            'errorMessage' => 'Specify the ProjectName parameter.',
          ),
          12 => 
          array (
            'errorCode' => 'MissingParam.SlsRegionId',
            'errorMessage' => 'Specify the SlsRegionId parameter.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.ActiveAging',
            'errorMessage' => 'The specified ActiveAging is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'IllegalParam.InactiveAging',
            'errorMessage' => 'The specified InactiveAging is invalid.',
          ),
          15 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerIp',
            'errorMessage' => 'The specified NetflowServerIp is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerPort',
            'errorMessage' => 'The specified NetflowServerPort is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'IllegalParam.NetflowVersion',
            'errorMessage' => 'The specified NetflowVersion is invalid.',
          ),
          18 => 
          array (
            'errorCode' => 'IllegalParam.OutputType',
            'errorMessage' => 'The specified OutputType is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'The specified RegionId is invalid.',
          ),
          20 => 
          array (
            'errorCode' => 'IllegalParam.SlsRegionId',
            'errorMessage' => 'The specified SlsRegionId is invalid.',
          ),
          21 => 
          array (
            'errorCode' => 'IllegalParam.Status',
            'errorMessage' => 'The specified Status parameter is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B05AF87C-0FE5-42D7-BEA3-665D90FAA71D\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n\\t<DeleteFlowLogResponse>\\r\\n    <RequestId>B05AF87C-0FE5-42D7-BEA3-665D90FAA71D</RequestId>\\r\\n\\t</DeleteFlowLogResponse>","errorExample":""}]',
      'title' => '删除一个流日志实例',
      'summary' => '删除一个流日志实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ModifyFlowLogAttribute' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例描述。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '流日志实例1',
          ),
        ),
        2 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'DDE',
          ),
        ),
        3 => 
        array (
          'name' => 'ActiveAging',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '活跃流输出间隔，默认值为**300**s。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '300',
          ),
        ),
        4 => 
        array (
          'name' => 'InactiveAging',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '非活跃流输出间隔，默认为**15**s。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '15',
          ),
        ),
        5 => 
        array (
          'name' => 'OutputType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志输出类型：

- **sls**：流日志存储在阿里云日志服务。

- **netflow**：流日志存储在您配置的netflow服务器。

- **all**：流日志同时存储在阿里云日志服务和您配置的netflow服务器。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'sls',
          ),
        ),
        6 => 
        array (
          'name' => 'SlsRegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务的地域ID，输出类型为**sls**时填入。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        7 => 
        array (
          'name' => 'ProjectName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务的Project，输出类型为**sls**时填入。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'ddrrgt',
          ),
        ),
        8 => 
        array (
          'name' => 'LogstoreName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '日志服务的日志库，输出类型为**sls**时填入。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'ssfghgh',
          ),
        ),
        9 => 
        array (
          'name' => 'NetflowServerIp',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志输出的服务器地址，输出类型为**netflow**时填入。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '192.168.0.2',
          ),
        ),
        10 => 
        array (
          'name' => 'NetflowServerPort',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志输出的服务器端口，默认值为**9995**，输出类型为**netflow**时填入。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '9995',
          ),
        ),
        11 => 
        array (
          'name' => 'NetflowVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志输出时使用的netflow协议版本号，可选**V5**、**V9**和**V10**，默认值**V9**，输出类型为**netflow**时填入。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'V9',
          ),
        ),
        12 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fl-7a56mar1kfw9vj****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AAC70A63-1A2E-4857-9CA3-5DE5B4041D1E',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DependencyViolation.FlowLog',
            'errorMessage' => 'This FlowLog instance is bound to an SAG instance.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.FlowLog',
            'errorMessage' => 'The current FlowLog instance status does not support this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidFlowLogId.NotFound',
            'errorMessage' => 'The specified FlowLogId does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.FlowLogId',
            'errorMessage' => 'Specify the FlowLogId parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.AssociateFlowLog',
            'errorMessage' => 'The operation failed. The specified SAG instance has already been associated with another FlowLog instance.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.AssociateFlowLog',
            'errorMessage' => 'You cannot bind the SAG device of the current version or model to a FlowLog instance.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.Flowlog',
            'errorMessage' => 'The maximum number of FlowLog instances is exceeded.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.ActiveAging',
            'errorMessage' => 'The specified ActiveAging is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.InactiveAging',
            'errorMessage' => 'The specified InactiveAging is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.OutputType',
            'errorMessage' => 'The specified OutputType is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerIp',
            'errorMessage' => 'The specified NetflowServerIp is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerPort',
            'errorMessage' => 'The specified NetflowServerPort is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.NetflowVersion',
            'errorMessage' => 'The specified NetflowVersion is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'MissingParam.NetflowServerIp',
            'errorMessage' => 'Specify the NetflowServerIp parameter.',
          ),
          14 => 
          array (
            'errorCode' => 'MissingParam.NetflowServerPort',
            'errorMessage' => 'Specify the NetflowServerPort parameter.',
          ),
          15 => 
          array (
            'errorCode' => 'MissingParam.NetflowVersion',
            'errorMessage' => 'Specify the NetflowVersion parameter.',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.SlsRegionId',
            'errorMessage' => 'The specified SlsRegionId is invalid.',
          ),
          17 => 
          array (
            'errorCode' => 'MissingParam.SlsRegionId',
            'errorMessage' => 'Specify the SlsRegionId parameter.',
          ),
          18 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'The specified RegionId is invalid.',
          ),
          19 => 
          array (
            'errorCode' => 'IllegalParam.Status',
            'errorMessage' => 'The specified Status parameter is invalid.',
          ),
          20 => 
          array (
            'errorCode' => 'InvalidSmartAGId.NotFound',
            'errorMessage' => 'The specified SmartAGId does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AAC70A63-1A2E-4857-9CA3-5DE5B4041D1E\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyFlowLogAttributeResponse>\\n    <RequestId>AAC70A63-1A2E-4857-9CA3-5DE5B4041D1E</RequestId>\\n</ModifyFlowLogAttributeResponse>","errorExample":""}]',
      'title' => '编辑流日志实例',
      'summary' => '编辑流日志的名称和描述。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeFlowLogs' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例所属地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'fl-7a56mar1kfw9vj****',
          ),
        ),
        2 => 
        array (
          'name' => 'FlowLogName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'DDE',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'desc',
          ),
        ),
        4 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例状态，取值：

- **Active**：已启动。

- **Inactive**：未启动。',
            'type' => 'string',
            'required' => false,
            'example' => 'Active',
          ),
        ),
        5 => 
        array (
          'name' => 'OutputType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志输出类型，取值：

- **sls**：流日志存储在阿里云日志服务中。

- **netflow**：流日志存储在您配置的NetFlow服务器上。

- **all**：流日志同时存储在阿里云日志服务和您配置的NetFlow服务器上。',
            'type' => 'string',
            'required' => false,
            'example' => 'all',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时每页的条目数，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        7 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询页码，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '查询结果。',
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '5',
              ),
              'FlowLogs' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'FlowLogSetType' => 
                  array (
                    'description' => '流日志实例信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '流日志实例信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Status' => 
                        array (
                          'description' => '流日志实例的状态：

- **Active**：已启动。

- **Inactive**：未启动。',
                          'type' => 'string',
                          'example' => 'Active',
                        ),
                        'TotalSagNum' => 
                        array (
                          'description' => '流日志实例关联的智能接入网关实例数目。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'NetflowServerIp' => 
                        array (
                          'description' => '存储流日志的Netflow服务器地址。',
                          'type' => 'string',
                          'example' => '192.168.0.1',
                        ),
                        'ProjectName' => 
                        array (
                          'description' => '日志服务的Project名称。',
                          'type' => 'string',
                          'example' => 'sag-flowlog-shanghai',
                        ),
                        'SlsRegionId' => 
                        array (
                          'description' => '日志服务的地域ID。',
                          'type' => 'string',
                          'example' => 'cn-shanghai',
                        ),
                        'ActiveAging' => 
                        array (
                          'description' => '活跃流输出间隔。单位：秒。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '300',
                        ),
                        'OutputType' => 
                        array (
                          'description' => '流日志输出类型。

- **sls**：流日志存储在阿里云日志服务中。

- **netflow**：流日志存储在您配置的Netflow服务器上。

- **all**：流日志同时存储在阿里云日志服务和您配置的Netflow服务器上。',
                          'type' => 'string',
                          'example' => 'sls',
                        ),
                        'Description' => 
                        array (
                          'description' => '流日志实例描述。',
                          'type' => 'string',
                          'example' => 'aaa',
                        ),
                        'NetflowVersion' => 
                        array (
                          'description' => '存储流日志的Netflow协议版本号，默认值为**V9**。',
                          'type' => 'string',
                          'example' => 'V9',
                        ),
                        'InactiveAging' => 
                        array (
                          'description' => '非活跃流输出间隔。单位：秒。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '15',
                        ),
                        'NetflowServerPort' => 
                        array (
                          'description' => '存储流日志的Netflow服务器端口，默认值为**9995**。',
                          'type' => 'string',
                          'example' => '9995',
                        ),
                        'Name' => 
                        array (
                          'description' => '流日志实例名称。',
                          'type' => 'string',
                          'example' => 'DDE',
                        ),
                        'FlowLogId' => 
                        array (
                          'description' => '流日志实例ID。',
                          'type' => 'string',
                          'example' => 'fl-7a56mar1kfw9vj****',
                        ),
                        'LogstoreName' => 
                        array (
                          'description' => '日志服务的日志库名称。',
                          'type' => 'string',
                          'example' => 'config-operation-log',
                        ),
                        'ResourceGroupId' => 
                        array (
                          'description' => '流日志实例所属的资源组ID。',
                          'type' => 'string',
                          'example' => 'rg-acfm2iu4fnc****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'PageSize' => 
              array (
                'description' => '分页查询时每页的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '10',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '44F4E2D0-77F7-4DEC-969B-061688946143',
              ),
              'PageNumber' => 
              array (
                'description' => '查询页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 5,\\n  \\"FlowLogs\\": {\\n    \\"FlowLogSetType\\": [\\n      {\\n        \\"Status\\": \\"Active\\",\\n        \\"TotalSagNum\\": 2,\\n        \\"NetflowServerIp\\": \\"192.168.0.1\\",\\n        \\"ProjectName\\": \\"sag-flowlog-shanghai\\",\\n        \\"SlsRegionId\\": \\"cn-shanghai\\",\\n        \\"ActiveAging\\": 300,\\n        \\"OutputType\\": \\"sls\\",\\n        \\"Description\\": \\"aaa\\",\\n        \\"NetflowVersion\\": \\"V9\\",\\n        \\"InactiveAging\\": 15,\\n        \\"NetflowServerPort\\": \\"9995\\",\\n        \\"Name\\": \\"DDE\\",\\n        \\"FlowLogId\\": \\"fl-7a56mar1kfw9vj****\\",\\n        \\"LogstoreName\\": \\"config-operation-log\\",\\n        \\"ResourceGroupId\\": \\"rg-acfm2iu4fnc****\\"\\n      }\\n    ]\\n  },\\n  \\"PageSize\\": 10,\\n  \\"RequestId\\": \\"44F4E2D0-77F7-4DEC-969B-061688946143\\",\\n  \\"PageNumber\\": 1\\n}","errorExample":""},{"type":"xml","example":"<DescribeFlowLogsResponse>\\n    <TotalCount>1</TotalCount>\\n    <FlowLogs>\\n        <FlowLogSetType>\\n            <Status>Active</Status>\\n            <NetflowServerPort>9995</NetflowServerPort>\\n            <LogstoreName>\\r\\nsag-shanghai</LogstoreName>\\n            <ActiveAging>300</ActiveAging>\\n            <ResourceGroupId>rg-acfm2iu4fnc****</ResourceGroupId>\\n            <ProjectName>sag-flowlog-shanghai</ProjectName>\\n            <NetflowVersion>V9</NetflowVersion>\\n            <InactiveAging>15</InactiveAging>\\n            <FlowLogId>fl-49u97c08z42n3f****</FlowLogId>\\n            <Name>zxtest</Name>\\n            <TotalSagNum>0</TotalSagNum>\\n            <SlsRegionId>cn-shanghai</SlsRegionId>\\n            <OutputType>sls</OutputType>\\n        </FlowLogSetType>\\n    </FlowLogs>\\n    <PageSize>10</PageSize>\\n    <RequestId>67D7003F-9D67-4935-9C47-10C5B3074028</RequestId>\\n    <PageNumber>1</PageNumber>\\n</DescribeFlowLogsResponse>","errorExample":""}]',
      'title' => 'DescribeFlowLogs',
      'summary' => '调用DescribeFlowLogs查询指定地域下流日志实例信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeFlowLogSags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghahi',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例ID。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'fl-l934tsa5504yuc****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '指定分页查询时每页的列表行数，最大值为**50**，默认值为**10**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
            'default' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询列表的页码，起始值为**1**，默认值为**1**。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '列表条条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '35',
              ),
              'PageSize' => 
              array (
                'description' => '当前分页包含的条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '4',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8D945945-85F2-4BD7-A144-7DC0E8B5A0DC',
              ),
              'PageNumber' => 
              array (
                'description' => '当前页码。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'Sags' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Sag' => 
                  array (
                    'description' => '智能接入网关列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Description' => 
                        array (
                          'description' => '智能接入网关实例描述。',
                          'type' => 'string',
                          'example' => 'sag-100wm',
                        ),
                        'SmartAGId' => 
                        array (
                          'description' => '智能接入网关实例ID。',
                          'type' => 'string',
                          'example' => 'sag-6rm1awijm3ktic****',
                        ),
                        'Name' => 
                        array (
                          'description' => '智能接入网关实例名称。',
                          'type' => 'string',
                          'example' => 'ruijie-test-2',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.ActiveAging',
            'errorMessage' => 'The specified ActiveAging is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.InactiveAging',
            'errorMessage' => 'The specified InactiveAging is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerIp',
            'errorMessage' => 'The specified NetflowServerIp is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerPort',
            'errorMessage' => 'The specified NetflowServerPort is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.NetflowVersion',
            'errorMessage' => 'The specified NetflowVersion is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.OutputType',
            'errorMessage' => 'The specified OutputType is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'The specified RegionId is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.SlsRegionId',
            'errorMessage' => 'The specified SlsRegionId is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.Status',
            'errorMessage' => 'The specified Status parameter is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'DependencyViolation.FlowLog',
            'errorMessage' => 'This FlowLog instance is bound to an SAG instance.',
          ),
          10 => 
          array (
            'errorCode' => 'IncorrectStatus.FlowLog',
            'errorMessage' => 'The current FlowLog instance status does not support this operation.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidFlowLogId.NotFound',
            'errorMessage' => 'The specified FlowLogId does not exist.',
          ),
          12 => 
          array (
            'errorCode' => 'MissingParam.FlowLogId',
            'errorMessage' => 'Specify the FlowLogId parameter.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationFailed.AssociateFlowLog',
            'errorMessage' => 'The operation failed. The specified SAG instance has already been associated with another FlowLog instance.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationUnsupported.AssociateFlowLog',
            'errorMessage' => 'You cannot bind the SAG device of the current version or model to a FlowLog instance.',
          ),
          15 => 
          array (
            'errorCode' => 'QuotaExceeded.Flowlog',
            'errorMessage' => 'The maximum number of FlowLog instances is exceeded.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 35,\\n  \\"PageSize\\": 4,\\n  \\"RequestId\\": \\"8D945945-85F2-4BD7-A144-7DC0E8B5A0DC\\",\\n  \\"PageNumber\\": 1,\\n  \\"Sags\\": {\\n    \\"Sag\\": [\\n      {\\n        \\"Description\\": \\"sag-100wm\\",\\n        \\"SmartAGId\\": \\"sag-6rm1awijm3ktic****\\",\\n        \\"Name\\": \\"ruijie-test-2\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<DescribeFlowLogSagsResponse>\\r\\n\\t<PageNumber>1</PageNumber>\\r\\n\\t<Sags>\\r\\n\\t\\t<Sag>\\r\\n\\t\\t\\t<Name>ruijie-test-2</Name>\\r\\n\\t\\t\\t<SmartAGId>sag-6rm1awijm3ktic****</SmartAGId>\\r\\n\\t\\t</Sag>\\r\\n\\t\\t<Sag>\\r\\n\\t\\t\\t<Name>zhanxiaolong</Name>\\r\\n\\t\\t\\t<SmartAGId>sag-ecvqa7bw8fxbdn****</SmartAGId>\\r\\n\\t\\t</Sag>\\r\\n\\t\\t<Sag>\\r\\n\\t\\t\\t<Name>ccn-e2e-cn-sh-0-0820-005408</Name>\\r\\n\\t\\t\\t<SmartAGId>sag-gn7m5v5bpjykne****</SmartAGId>\\r\\n\\t\\t</Sag>\\r\\n\\t\\t<Sag>\\r\\n\\t\\t\\t<Name>sag-sec-1b</Name>\\r\\n\\t\\t\\t<SmartAGId>sag-hk69hizmi21fy9****</SmartAGId>\\r\\n\\t\\t</Sag>\\r\\n\\t\\t<Sag>\\r\\n\\t\\t\\t<Name></Name>\\r\\n\\t\\t\\t<SmartAGId>sag-i54wm4v15ruxji****</SmartAGId>\\r\\n\\t\\t</Sag>\\r\\n\\t\\t<Sag>\\r\\n\\t\\t\\t<Name>china-0-0424-222240</Name>\\r\\n\\t\\t\\t<SmartAGId>sag-iunln2dztruttt****</SmartAGId>\\r\\n\\t\\t</Sag>\\r\\n\\t\\t<Sag>\\r\\n\\t\\t\\t<Name>sag-sec-1</Name>\\r\\n\\t\\t\\t<SmartAGId>sag-q1sqc77sk2oe08****</SmartAGId>\\r\\n\\t\\t</Sag>\\r\\n\\t\\t<Sag>\\r\\n\\t\\t\\t<Name>sag1000_box5</Name>\\r\\n\\t\\t\\t<SmartAGId>sag-u42tn80ro3bxsd****</SmartAGId>\\r\\n\\t\\t</Sag>\\r\\n\\t\\t<Sag>\\r\\n\\t\\t\\t<Name>ccn-e2e-cn-sh-0-0820-005549</Name>\\r\\n\\t\\t\\t<SmartAGId>sag-wle98f4o41nm3f****</SmartAGId>\\r\\n\\t\\t</Sag>\\r\\n\\t\\t<Sag>\\r\\n\\t\\t\\t<Name>jia_双机_SAG1000</Name>\\r\\n\\t\\t\\t<SmartAGId>sag-yev5ajsek9x12o****</SmartAGId>\\r\\n\\t\\t</Sag>\\r\\n\\t</Sags>\\r\\n\\t<TotalCount>35</TotalCount>\\r\\n\\t<PageSize>10</PageSize>\\r\\n\\t<RequestId>8D945945-85F2-4BD7-A144-7DC0E8B5A0DC</RequestId>\\r\\n\\t</DescribeFlowLogSagsResponse>\\r\\n","errorExample":""}]',
      'title' => '查询流日志绑定的智能接入网关实例',
      'summary' => '调用DescribeFlowLogSags查询流日志绑定的智能接入网关实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DescribeUnbindFlowLogSags' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要查询的地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C850C10E-9856-45FF-8640-80288BA467DF',
              ),
              'Count' => 
              array (
                'description' => '总条目数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '20',
              ),
              'Sags' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Sag' => 
                  array (
                    'description' => '智能接入网关实例信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '智能接入网关实例信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Description' => 
                        array (
                          'description' => '智能接入网关实例的描述信息。',
                          'type' => 'string',
                          'example' => 'desctest',
                        ),
                        'SmartAGId' => 
                        array (
                          'description' => '智能接入网关实例ID。',
                          'type' => 'string',
                          'example' => 'sag-tzirqx07bvcngm****',
                        ),
                        'Name' => 
                        array (
                          'description' => '智能接入网关实例名称。',
                          'type' => 'string',
                          'example' => 'sj1000-yf-01',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DependencyViolation.FlowLog',
            'errorMessage' => 'This FlowLog instance is bound to an SAG instance.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.FlowLog',
            'errorMessage' => 'The current FlowLog instance status does not support this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidFlowLogId.NotFound',
            'errorMessage' => 'The specified FlowLogId does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.FlowLogId',
            'errorMessage' => 'Specify the FlowLogId parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.AssociateFlowLog',
            'errorMessage' => 'The operation failed. The specified SAG instance has already been associated with another FlowLog instance.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.AssociateFlowLog',
            'errorMessage' => 'You cannot bind the SAG device of the current version or model to a FlowLog instance.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.Flowlog',
            'errorMessage' => 'The maximum number of FlowLog instances is exceeded.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.ActiveAging',
            'errorMessage' => 'The specified ActiveAging is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.InactiveAging',
            'errorMessage' => 'The specified InactiveAging is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerIp',
            'errorMessage' => 'The specified NetflowServerIp is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerPort',
            'errorMessage' => 'The specified NetflowServerPort is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.NetflowVersion',
            'errorMessage' => 'The specified NetflowVersion is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.OutputType',
            'errorMessage' => 'The specified OutputType is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'The specified RegionId is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'IllegalParam.SlsRegionId',
            'errorMessage' => 'The specified SlsRegionId is invalid.',
          ),
          15 => 
          array (
            'errorCode' => 'IllegalParam.Status',
            'errorMessage' => 'The specified Status parameter is invalid.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'Forbidden',
            'errorMessage' => 'User not authorized to operate on the specified resource.',
          ),
          1 => 
          array (
            'errorCode' => 'MissingParameter',
            'errorMessage' => 'The input parameter is missing, please check your input.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidParameter',
            'errorMessage' => 'The specified parameter is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'InternalError',
            'errorMessage' => 'An internal server error occurred.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C850C10E-9856-45FF-8640-80288BA467DF\\",\\n  \\"Count\\": 20,\\n  \\"Sags\\": {\\n    \\"Sag\\": [\\n      {\\n        \\"Description\\": \\"desctest\\",\\n        \\"SmartAGId\\": \\"sag-tzirqx07bvcngm****\\",\\n        \\"Name\\": \\"sj1000-yf-01\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<DescribeUnbindFlowLogSagsResponse>\\n    <Sags>\\n        <Sag>\\n            <Name>jialiang_1000_test_2</Name>\\n            <SmartAGId>sag-0v3pmd7qpnvx5f****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>ccn-bvt-china-0-0625-023417</Name>\\n            <SmartAGId>sag-0wxbzaf623oz8a****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <SmartAGId>sag-13wvoucmn6tjqm****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>sj1000-joe-04</Name>\\n            <SmartAGId>sag-1ihuk7d1qskqk0****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>ccn-bvt-china-0-0625-023333</Name>\\n            <SmartAGId>sag-1tvzazjggo0vac****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>joe-casetest-0808</Name>\\n            <SmartAGId>sag-2c9nradcadqceg****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>sj1000-joe_01</Name>\\n            <SmartAGId>sag-2d102o7focaqxo****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>sag1000-b5</Name>\\n            <SmartAGId>sag-60q4iaq068nxt2****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>ccn-bvt-china-0-0625-022008</Name>\\n            <SmartAGId>sag-6m5684w9mhcgzz****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>ccn-bvt-china-0-0426-005047</Name>\\n            <SmartAGId>sag-6t4pxotq7rfz6w****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>sag-1000-rd-test-env1</Name>\\n            <SmartAGId>sag-8gocbtkbp9b52c****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>tianye-test-vbr</Name>\\n            <SmartAGId>sag-8z7hn75tubgac2****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>sj1000-joe-05</Name>\\n            <SmartAGId>sag-d866xl31k8lleb****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>sag1000_box6</Name>\\n            <SmartAGId>sag-dztg1lco3aacpu****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>sag1000-ha-for-case</Name>\\n            <SmartAGId>sag-ewmmi6fcq3gldu****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>ccn-bvt-china-0-0613-003734</Name>\\n            <SmartAGId>sag-fckt58zc4j4b8o****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>sag-sec-2</Name>\\n            <SmartAGId>sag-h4j0klyvprxta5****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>sn-sag1000-2018-11-08-17-27-11</Name>\\n            <SmartAGId>sag-h79g3zs0q7nk9f****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>sag1000_sh_upgrade</Name>\\n            <SmartAGId>sag-mrrrlh3xgpyipu****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>ccn-bvt-china-0-0625-021924</Name>\\n            <SmartAGId>sag-ruia2xefxbdm5e****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>chengxi_bigbox_cn</Name>\\n            <SmartAGId>sag-sb7t1efidyc5d5****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>sj1000-joe_03</Name>\\n            <SmartAGId>sag-srgxemiqbyzdxf****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>sj1000-yf-01</Name>\\n            <SmartAGId>sag-tzirqx07bvcngm****</SmartAGId>\\n        </Sag>\\n        <Sag>\\n            <Name>ccn-bvt-china-0-0426-005001</Name>\\n            <SmartAGId>sag-xboakpuqext95x****</SmartAGId>\\n        </Sag>\\n    </Sags>\\n    <Count>20</Count>\\n    <RequestId>C850C10E-9856-45FF-8640-80288BA467DF</RequestId>\\n</DescribeUnbindFlowLogSagsResponse>","errorExample":""}]',
      'title' => '查询未绑定流日志的智能接入网关实例',
      'summary' => '调用DescribeUnbindFlowLogSags查询指定地域下未绑定流日志实例的智能接入网关实例信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ActiveFlowLog' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fl-l934tsa5504yuc****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CBBE5EBF-69C1-4395-B36B-26B7605F87EA',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'IllegalParam.ActiveAging',
            'errorMessage' => 'The specified ActiveAging is invalid.',
          ),
          1 => 
          array (
            'errorCode' => 'IllegalParam.InactiveAging',
            'errorMessage' => 'The specified InactiveAging is invalid.',
          ),
          2 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerIp',
            'errorMessage' => 'The specified NetflowServerIp is invalid.',
          ),
          3 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerPort',
            'errorMessage' => 'The specified NetflowServerPort is invalid.',
          ),
          4 => 
          array (
            'errorCode' => 'IllegalParam.NetflowVersion',
            'errorMessage' => 'The specified NetflowVersion is invalid.',
          ),
          5 => 
          array (
            'errorCode' => 'IllegalParam.OutputType',
            'errorMessage' => 'The specified OutputType is invalid.',
          ),
          6 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'The specified RegionId is invalid.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.SlsRegionId',
            'errorMessage' => 'The specified SlsRegionId is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.Status',
            'errorMessage' => 'The specified Status parameter is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'IncorrectStatus.FlowLog',
            'errorMessage' => 'The current FlowLog instance status does not support this operation.',
          ),
          10 => 
          array (
            'errorCode' => 'DependencyViolation.FlowLog',
            'errorMessage' => 'This FlowLog instance is bound to an SAG instance.',
          ),
          11 => 
          array (
            'errorCode' => 'InvalidFlowLogId.NotFound',
            'errorMessage' => 'The specified FlowLogId does not exist.',
          ),
          12 => 
          array (
            'errorCode' => 'MissingParam.FlowLogId',
            'errorMessage' => 'Specify the FlowLogId parameter.',
          ),
          13 => 
          array (
            'errorCode' => 'OperationFailed.AssociateFlowLog',
            'errorMessage' => 'The operation failed. The specified SAG instance has already been associated with another FlowLog instance.',
          ),
          14 => 
          array (
            'errorCode' => 'OperationUnsupported.AssociateFlowLog',
            'errorMessage' => 'You cannot bind the SAG device of the current version or model to a FlowLog instance.',
          ),
          15 => 
          array (
            'errorCode' => 'QuotaExceeded.Flowlog',
            'errorMessage' => 'The maximum number of FlowLog instances is exceeded.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CBBE5EBF-69C1-4395-B36B-26B7605F87EA\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<ActiveFlowLogResponse>\\r\\n\\t<RequestId>CBBE5EBF-69C1-4395-B36B-26B7605F87EA</RequestId>\\r\\n    </ActiveFlowLogResponse>","errorExample":""}]',
      'title' => '启动流日志',
      'summary' => '启动流日志。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeactiveFlowLog' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fl-l934tsa5504yuc****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5F2BAEAF-96D4-4BE5-A031-6CAD7B145D0D',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DependencyViolation.FlowLog',
            'errorMessage' => 'This FlowLog instance is bound to an SAG instance.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.FlowLog',
            'errorMessage' => 'The current FlowLog instance status does not support this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidFlowLogId.NotFound',
            'errorMessage' => 'The specified FlowLogId does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.FlowLogId',
            'errorMessage' => 'Specify the FlowLogId parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.AssociateFlowLog',
            'errorMessage' => 'The operation failed. The specified SAG instance has already been associated with another FlowLog instance.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.AssociateFlowLog',
            'errorMessage' => 'You cannot bind the SAG device of the current version or model to a FlowLog instance.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.Flowlog',
            'errorMessage' => 'The maximum number of FlowLog instances is exceeded.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5F2BAEAF-96D4-4BE5-A031-6CAD7B145D0D\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<DeactiveFlowLogResponse>\\r\\n\\t<RequestId>5F2BAEAF-96D4-4BE5-A031-6CAD7B145D0D</RequestId>\\r\\n  </DeactiveFlowLogResponse>  ","errorExample":""}]',
      'title' => '停止流日志',
      'summary' => '停止流日志。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociateFlowLog' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fl-l934tsa5504yuc****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-39u6j9a49i03wk****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A6E1680B-B34F-4BB7-B504-F8ED675E721C',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DependencyViolation.FlowLog',
            'errorMessage' => 'This FlowLog instance is bound to an SAG instance.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.FlowLog',
            'errorMessage' => 'The current FlowLog instance status does not support this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidFlowLogId.NotFound',
            'errorMessage' => 'The specified FlowLogId does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.FlowLogId',
            'errorMessage' => 'Specify the FlowLogId parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.AssociateFlowLog',
            'errorMessage' => 'The operation failed. The specified SAG instance has already been associated with another FlowLog instance.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.AssociateFlowLog',
            'errorMessage' => 'You cannot bind the SAG device of the current version or model to a FlowLog instance.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.Flowlog',
            'errorMessage' => 'The maximum number of FlowLog instances is exceeded.',
          ),
          7 => 
          array (
            'errorCode' => 'IllegalParam.ActiveAging',
            'errorMessage' => 'The specified ActiveAging is invalid.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.InactiveAging',
            'errorMessage' => 'The specified InactiveAging is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerIp',
            'errorMessage' => 'The specified NetflowServerIp is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerPort',
            'errorMessage' => 'The specified NetflowServerPort is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.NetflowVersion',
            'errorMessage' => 'The specified NetflowVersion is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.OutputType',
            'errorMessage' => 'The specified OutputType is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'The specified RegionId is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'IllegalParam.SlsRegionId',
            'errorMessage' => 'The specified SlsRegionId is invalid.',
          ),
          15 => 
          array (
            'errorCode' => 'IllegalParam.Status',
            'errorMessage' => 'The specified Status parameter is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'InvalidSmartAGId.NotFound',
            'errorMessage' => 'The specified SmartAGId does not exist.',
          ),
        ),
        403 => 
        array (
          0 => 
          array (
            'errorCode' => 'FeatureNotSupport',
            'errorMessage' => 'The current edition of the smart access gateway does not support this feature.',
          ),
          1 => 
          array (
            'errorCode' => 'FeatureNotSupportForActiveSmartAG',
            'errorMessage' => 'The current edition of the active smart access gateway does not support this feature.',
          ),
          2 => 
          array (
            'errorCode' => 'FeatureNotSupportForStandBySmartAG',
            'errorMessage' => 'The current edition of the standby smart access gateway does not support this feature.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A6E1680B-B34F-4BB7-B504-F8ED675E721C\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<AssociateFlowLogResponse>\\r\\n\\t<RequestId>A6E1680B-B34F-4BB7-B504-F8ED675E721C</RequestId>\\r\\n    </AssociateFlowLogResponse>","errorExample":""}]',
      'title' => '绑定智能接入网关实例',
      'summary' => '绑定智能接入网关实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisassociateFlowLog' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志的地域ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        1 => 
        array (
          'name' => 'FlowLogId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '流日志实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'fl-l934tsa5504yuc****',
          ),
        ),
        2 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'sag-0v3pmd7qpnvx5f****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'DD864F79-FDAC-4909-AFAF-84D1DCAF30A3',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'DependencyViolation.FlowLog',
            'errorMessage' => 'This FlowLog instance is bound to an SAG instance.',
          ),
          1 => 
          array (
            'errorCode' => 'IncorrectStatus.FlowLog',
            'errorMessage' => 'The current FlowLog instance status does not support this operation.',
          ),
          2 => 
          array (
            'errorCode' => 'InvalidFlowLogId.NotFound',
            'errorMessage' => 'The specified FlowLogId does not exist.',
          ),
          3 => 
          array (
            'errorCode' => 'MissingParam.FlowLogId',
            'errorMessage' => 'Specify the FlowLogId parameter.',
          ),
          4 => 
          array (
            'errorCode' => 'OperationFailed.AssociateFlowLog',
            'errorMessage' => 'The operation failed. The specified SAG instance has already been associated with another FlowLog instance.',
          ),
          5 => 
          array (
            'errorCode' => 'OperationUnsupported.AssociateFlowLog',
            'errorMessage' => 'You cannot bind the SAG device of the current version or model to a FlowLog instance.',
          ),
          6 => 
          array (
            'errorCode' => 'QuotaExceeded.Flowlog',
            'errorMessage' => 'The maximum number of FlowLog instances is exceeded.',
          ),
          7 => 
          array (
            'errorCode' => 'InvalidSmartAGId.NotFound',
            'errorMessage' => 'The specified SmartAGId does not exist.',
          ),
          8 => 
          array (
            'errorCode' => 'IllegalParam.ActiveAging',
            'errorMessage' => 'The specified ActiveAging is invalid.',
          ),
          9 => 
          array (
            'errorCode' => 'IllegalParam.InactiveAging',
            'errorMessage' => 'The specified InactiveAging is invalid.',
          ),
          10 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerIp',
            'errorMessage' => 'The specified NetflowServerIp is invalid.',
          ),
          11 => 
          array (
            'errorCode' => 'IllegalParam.NetflowServerPort',
            'errorMessage' => 'The specified NetflowServerPort is invalid.',
          ),
          12 => 
          array (
            'errorCode' => 'IllegalParam.NetflowVersion',
            'errorMessage' => 'The specified NetflowVersion is invalid.',
          ),
          13 => 
          array (
            'errorCode' => 'IllegalParam.OutputType',
            'errorMessage' => 'The specified OutputType is invalid.',
          ),
          14 => 
          array (
            'errorCode' => 'IllegalParam.RegionId',
            'errorMessage' => 'The specified RegionId is invalid.',
          ),
          15 => 
          array (
            'errorCode' => 'IllegalParam.SlsRegionId',
            'errorMessage' => 'The specified SlsRegionId is invalid.',
          ),
          16 => 
          array (
            'errorCode' => 'IllegalParam.Status',
            'errorMessage' => 'The specified Status parameter is invalid.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"DD864F79-FDAC-4909-AFAF-84D1DCAF30A3\\"\\n}","errorExample":""},{"type":"xml","example":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\" ?>\\r\\n<DisassociateFlowLogResponse>\\r\\n\\t<RequestId>DD864F79-FDAC-4909-AFAF-84D1DCAF30A3</RequestId>\\r\\n    </DisassociateFlowLogResponse>","errorExample":""}]',
      'title' => '解绑智能接入网关实例',
      'summary' => '解绑智能接入网关实例。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AssociateSmartAGWithApplicationBandwidthPackage' => 
    array (
      'summary' => '绑定应用加速带宽包和智能接入网关实例。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次绑定请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接绑定应用加速带宽包和智能接入网关实例。
- **true**：发送检查请求，只进行校验，不会绑定应用加速带宽包和智能接入网关实例。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等',
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

>若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '业务单元',
            'description' => '应用加速带宽包所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'ApplicationBandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例ID',
            'description' => '应用加速带宽包实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'abwp-7963l7iqnquyj3****',
          ),
        ),
        4 => 
        array (
          'name' => 'AssociateConfigs',
          'in' => 'query',
          'style' => 'flat',
          'schema' => 
          array (
            'title' => '绑定列表',
            'description' => '待绑定的智能接入网关实例列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '智能接入网关实例信息。',
              'type' => 'object',
              'properties' => 
              array (
                'SmartAGId' => 
                array (
                  'title' => '智能接入网关实例ID',
                  'description' => '智能接入网关实例ID。',
                  'type' => 'string',
                  'required' => true,
                  'example' => 'sag-gf5serujbhrn2j****',
                ),
                'Bandwidth' => 
                array (
                  'title' => '带宽',
                  'description' => '智能接入网关实例的应用加速带宽峰值。单位：Mbps。

> 每个智能接入网关实例的应用加速带宽峰值不能超过其绑定的应用加速带宽包的带宽峰值。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => true,
                  'example' => '2',
                ),
              ),
              'required' => true,
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'AFF2FD9D-66BD-4DD4-8152-C4508119D7B1',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'UnsupportedFeature.ApplicationAccelerate',
            'errorMessage' => 'The feature of ApplicationAccelerate is not supported.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotFound.ApplicationBandwidthPackage',
            'errorMessage' => 'The specified resource of ApplicationBandwidthPackage is not found.',
          ),
          2 => 
          array (
            'errorCode' => 'OperationDenied.NoBindCcn',
            'errorMessage' => 'The CCN is not associated. The operation is denied.',
          ),
          3 => 
          array (
            'errorCode' => 'OperationDenied.Arrearage',
            'errorMessage' => 'The operation is denied due to overdue payment.',
          ),
          4 => 
          array (
            'errorCode' => 'IncorrectBusinessStatus.ApplicationBandwidthPackage',
            'errorMessage' => 'The business status of  ApplicationBandwidthPackage is incorrect.',
          ),
          5 => 
          array (
            'errorCode' => 'ResourceAlreadyAssociated.SmartAccessGateway',
            'errorMessage' => 'The specified resource of SmartAccessGateway is already associated.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.SmartAccessGateway',
            'errorMessage' => 'The specified resource of SmartAccessGateway is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AFF2FD9D-66BD-4DD4-8152-C4508119D7B1\\"\\n}","errorExample":""},{"type":"xml","example":"<AssociateSmartAGWithApplicationBandwidthPackageResponse>\\n    <RequestId>AFF2FD9D-66BD-4DD4-8152-C4508119D7B1</RequestId>\\n</AssociateSmartAGWithApplicationBandwidthPackageResponse>","errorExample":""}]',
      'title' => '绑定应用加速带宽包',
      'description' => '在您绑定应用加速带宽包和智能接入网关实例前，请先满足以下条件：

- 如果您要绑定智能接入网关硬件实例，请确保实例下智能接入网关设备的版本在2.4.0及以上。
如果您的智能接入网关设备的版本在2.4.0以下，请进行升级。具体操作，请参见[更新版本](~~163948~~)。
- 如果您要绑定智能接入网关App实例，请确保您已下载的客户端的软件版本在2.4.0及以上。
如果您的客户端的软件版本在2.4.0以下，请进行升级。更多信息，请参见[安装客户端](~~102544~~)。
- 您要绑定的智能接入网关实例的状态为可用状态。',
    ),
    'UpdateSmartAGUserAccelerateConfig' => 
    array (
      'summary' => '修改智能接入网关APP实例下客户端的应用加速带宽峰值。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接修改客户端的应用加速带宽峰值。
- **true**：发送检查请求，只进行校验，不会修改客户端的应用加速带宽峰值。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等',
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '业务单元',
            'description' => '智能接入网关App实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '智能接入网关实例ID',
            'description' => '智能接入网关App实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'sag-w11hk4bqxpakem****',
          ),
        ),
        4 => 
        array (
          'name' => 'UserName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用户名',
            'description' => '客户端的用户名。',
            'type' => 'string',
            'required' => true,
            'example' => 'username@example.com',
          ),
        ),
        5 => 
        array (
          'name' => 'Bandwidth',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例ID',
            'description' => '客户端的应用加速带宽峰值。单位：Kbps。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '1000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '465B5F94-C7CF-4D54-803D-A7BEAC8545D6',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.User',
            'errorMessage' => 'The specified user is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'OperationDenied.BandwidthExceeded',
            'errorMessage' => 'The total bandwidth exceeds the limit. The operation is denied.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.SmartAccessGateway',
            'errorMessage' => 'The specified resource of %s is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"465B5F94-C7CF-4D54-803D-A7BEAC8545D6\\"\\n}","errorExample":""},{"type":"xml","example":"<UpdateSmartAGUserAccelerateConfigResponse>\\n    <RequestId>465B5F94-C7CF-4D54-803D-A7BEAC8545D6</RequestId>\\n</UpdateSmartAGUserAccelerateConfigResponse>","errorExample":""}]',
      'title' => '修改客户端的应用加速带宽峰值',
      'description' => '在修改客户端的应用加速带宽峰值前，请您先了解以下信息：
- 在您为客户端设置应用加速带宽峰值时，该值不能超过智能接入网关App实例的应用加速带宽峰值。
- 如果您未对客户端设置过应用加速带宽峰值，且智能接入网关App实例的应用加速带宽峰值小于5 Mbps，例如为4 Mbps，则该实例下的每个客户端的应用加速带宽峰值默认为4 Mbps。
- 如果您未对客户端设置过应用加速带宽峰值，且智能接入网关App实例的应用加速带宽峰值大于等于5 Mbps，则该实例下的每个客户端的应用加速带宽峰值默认为5 Mbps。',
    ),
    'DissociateSmartAGFromApplicationBandwidthPackage' => 
    array (
      'summary' => '解绑应用加速带宽包和智能接入网关实例。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DryRun',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否对此次解绑请求执行预检，包括权限、实例状态校验等。取值：

- **false**（默认值）：发送正常请求，通过检查后直接解绑应用加速带宽包和智能接入网关实例。
- **true**：发送检查请求，只进行校验，不会解绑应用加速带宽包和智能接入网关实例。检查项包括是否填写了必需参数、请求格式等。如果检查不通过，则返回对应错误。如果检查通过，则返回错误码`DryRunOperation`。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        1 => 
        array (
          'name' => 'ClientToken',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '幂等',
            'description' => '客户端Token，用于保证请求的幂等性。

从您的客户端生成一个参数值，确保不同请求间该参数值唯一。ClientToken只支持ASCII字符。

> 若您未指定，则系统自动使用API请求的RequestId作为ClientToken标识。每次API请求的RequestId可能不一样。',
            'type' => 'string',
            'required' => false,
            'example' => '02fb3da4-130e-11e9-8e44-001****',
          ),
        ),
        2 => 
        array (
          'name' => 'RegionId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '业务单元',
            'description' => '应用加速带宽包实例所属地域ID。

您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。  ',
            'type' => 'string',
            'required' => true,
            'example' => 'cn-shanghai',
          ),
        ),
        3 => 
        array (
          'name' => 'ApplicationBandwidthPackageId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '实例ID',
            'description' => '应用加速带宽包实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => 'abwp-7963l7iqnquyj3****',
          ),
        ),
        4 => 
        array (
          'name' => 'SmartAGId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '智能接入网关实例ID',
            'description' => '智能接入网关实例ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'sag-w11hk4bqxpakem****',
          ),
        ),
        5 => 
        array (
          'name' => 'SmartAGIdList',
          'in' => 'query',
          'style' => 'repeatList',
          'schema' => 
          array (
            'description' => '智能接入网关实例ID列表。

一次最多支持输入100个智能接入网关实例ID。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '智能接入网关实例ID。

一次最多支持输入100个智能接入网关实例ID。',
              'type' => 'string',
              'required' => false,
              'example' => 'sag-5oq6e314i26piy****',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回结果。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4EC47282-1B74-4534-BD0E-403F3EE64CAF',
              ),
            ),
          ),
        ),
      ),
      'errorCodes' => 
      array (
        400 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.ApplicationBandwidthPackage',
            'errorMessage' => 'The specified resource of ApplicationBandwidthPackage is not found.',
          ),
          1 => 
          array (
            'errorCode' => 'ResourceNotAssociated.SmartAccessGateway',
            'errorMessage' => 'The specified smart access gateway  is not associated.',
          ),
        ),
        404 => 
        array (
          0 => 
          array (
            'errorCode' => 'ResourceNotFound.SmartAccessGateway',
            'errorMessage' => 'The specified resource of SmartAccessGateway is not found.',
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4EC47282-1B74-4534-BD0E-403F3EE64CAF\\"\\n}","errorExample":""},{"type":"xml","example":"<DissociateSmartAGFromApplicationBandwidthPackageResponse>\\n    <RequestId>4EC47282-1B74-4534-BD0E-403F3EE64CAF</RequestId>\\n</DissociateSmartAGFromApplicationBandwidthPackageResponse>","errorExample":""}]',
      'title' => '解绑应用加速带宽包',
      'description' => '在调用**DissociateSmartAGFromApplicationBandwidthPackage**接口时，您可以通过指定**SmartAGId**参数将应用加速带宽包与指定的一个智能接入网关实例解绑，也可以通过指定**SmartAGIdList**参数将应用加速带宽包与多个智能接入网关实例同时解绑。',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'smartag.cn-shanghai.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'cn-hongkong',
      'endpoint' => 'smartag.cn-hongkong.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'ap-southeast-1',
      'endpoint' => 'smartag.ap-southeast-1.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'ap-southeast-2',
      'endpoint' => 'smartag.ap-southeast-2.aliyuncs.com',
    ),
    4 => 
    array (
      'regionId' => 'ap-southeast-3',
      'endpoint' => 'smartag.ap-southeast-3.aliyuncs.com',
    ),
    5 => 
    array (
      'regionId' => 'ap-southeast-5',
      'endpoint' => 'smartag.ap-southeast-5.aliyuncs.com',
    ),
    6 => 
    array (
      'regionId' => 'ap-northeast-1',
      'endpoint' => 'smartag.ap-northeast-1.aliyuncs.com',
    ),
    7 => 
    array (
      'regionId' => 'eu-central-1',
      'endpoint' => 'smartag.eu-central-1.aliyuncs.com',
    ),
    8 => 
    array (
      'regionId' => 'cn-shanghai-finance-1',
      'endpoint' => 'smartag.cn-shanghai-finance-1.aliyuncs.com',
    ),
    9 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'smartag.cn-hangzhou.aliyuncs.com',
    ),
  ),
);