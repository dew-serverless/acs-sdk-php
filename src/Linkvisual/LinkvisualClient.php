<?php

declare(strict_types=1);

namespace Dew\Acs\Linkvisual;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result addEventRecordPlanDevice(array $arguments = [])
 * @method \Http\Promise\Promise addEventRecordPlanDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result createEventRecordPlan(array $arguments = [])
 * @method \Http\Promise\Promise createEventRecordPlanAsync($arguments = [])
 * @method \Dew\Acs\Result deleteEventRecordPlan(array $arguments = [])
 * @method \Http\Promise\Promise deleteEventRecordPlanAsync($arguments = [])
 * @method \Dew\Acs\Result deleteEventRecordPlanDevice(array $arguments = [])
 * @method \Http\Promise\Promise deleteEventRecordPlanDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result queryDeviceEventPicture(array $arguments = [])
 * @method \Http\Promise\Promise queryDeviceEventPictureAsync($arguments = [])
 * @method \Dew\Acs\Result createTimeTemplate(array $arguments = [])
 * @method \Http\Promise\Promise createTimeTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTimeTemplate(array $arguments = [])
 * @method \Http\Promise\Promise deleteTimeTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result updateTimeTemplate(array $arguments = [])
 * @method \Http\Promise\Promise updateTimeTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result queryTimeTemplateDetail(array $arguments = [])
 * @method \Http\Promise\Promise queryTimeTemplateDetailAsync($arguments = [])
 * @method \Dew\Acs\Result addFaceDeviceGroup(array $arguments = [])
 * @method \Http\Promise\Promise addFaceDeviceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result addFaceDeviceToDeviceGroup(array $arguments = [])
 * @method \Http\Promise\Promise addFaceDeviceToDeviceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFaceDeviceGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteFaceDeviceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result setDevicePictureLifeCycle(array $arguments = [])
 * @method \Http\Promise\Promise setDevicePictureLifeCycleAsync($arguments = [])
 * @method \Dew\Acs\Result stopLiveStreaming(array $arguments = [])
 * @method \Http\Promise\Promise stopLiveStreamingAsync($arguments = [])
 * @method \Dew\Acs\Result queryDeviceEvent(array $arguments = [])
 * @method \Http\Promise\Promise queryDeviceEventAsync($arguments = [])
 * @method \Dew\Acs\Result queryDevicePictureFile(array $arguments = [])
 * @method \Http\Promise\Promise queryDevicePictureFileAsync($arguments = [])
 * @method \Dew\Acs\Result queryDevicePictureLifeCycle(array $arguments = [])
 * @method \Http\Promise\Promise queryDevicePictureLifeCycleAsync($arguments = [])
 * @method \Dew\Acs\Result queryDeviceVodUrlByTime(array $arguments = [])
 * @method \Http\Promise\Promise queryDeviceVodUrlByTimeAsync($arguments = [])
 * @method \Dew\Acs\Result queryFaceAllDeviceGroup(array $arguments = [])
 * @method \Http\Promise\Promise queryFaceAllDeviceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result queryFaceDeviceGroupsByDevice(array $arguments = [])
 * @method \Http\Promise\Promise queryFaceDeviceGroupsByDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result queryLiveStreaming(array $arguments = [])
 * @method \Http\Promise\Promise queryLiveStreamingAsync($arguments = [])
 * @method \Dew\Acs\Result queryVoiceIntercom(array $arguments = [])
 * @method \Http\Promise\Promise queryVoiceIntercomAsync($arguments = [])
 * @method \Dew\Acs\Result removeFaceDeviceFromDeviceGroup(array $arguments = [])
 * @method \Http\Promise\Promise removeFaceDeviceFromDeviceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result addFaceUserGroup(array $arguments = [])
 * @method \Http\Promise\Promise addFaceUserGroupAsync($arguments = [])
 * @method \Dew\Acs\Result addFaceUserToUserGroup(array $arguments = [])
 * @method \Http\Promise\Promise addFaceUserToUserGroupAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFaceUserGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteFaceUserGroupAsync($arguments = [])
 * @method \Dew\Acs\Result updateFaceUserGroupAndDeviceGroupRelation(array $arguments = [])
 * @method \Http\Promise\Promise updateFaceUserGroupAndDeviceGroupRelationAsync($arguments = [])
 * @method \Dew\Acs\Result updateFaceUser(array $arguments = [])
 * @method \Http\Promise\Promise updateFaceUserAsync($arguments = [])
 * @method \Dew\Acs\Result queryFaceAllUserGroupAndDeviceGroupRelation(array $arguments = [])
 * @method \Http\Promise\Promise queryFaceAllUserGroupAndDeviceGroupRelationAsync($arguments = [])
 * @method \Dew\Acs\Result queryFaceUserGroupAndDeviceGroupRelation(array $arguments = [])
 * @method \Http\Promise\Promise queryFaceUserGroupAndDeviceGroupRelationAsync($arguments = [])
 * @method \Dew\Acs\Result queryFaceUserIdByCustomUserId(array $arguments = [])
 * @method \Http\Promise\Promise queryFaceUserIdByCustomUserIdAsync($arguments = [])
 * @method \Dew\Acs\Result queryFaceAllUserGroup(array $arguments = [])
 * @method \Http\Promise\Promise queryFaceAllUserGroupAsync($arguments = [])
 * @method \Dew\Acs\Result queryFaceAllUserIdsByGroupId(array $arguments = [])
 * @method \Http\Promise\Promise queryFaceAllUserIdsByGroupIdAsync($arguments = [])
 * @method \Dew\Acs\Result queryFaceCustomUserIdByUserId(array $arguments = [])
 * @method \Http\Promise\Promise queryFaceCustomUserIdByUserIdAsync($arguments = [])
 * @method \Dew\Acs\Result queryFaceUser(array $arguments = [])
 * @method \Http\Promise\Promise queryFaceUserAsync($arguments = [])
 * @method \Dew\Acs\Result queryFaceUserGroup(array $arguments = [])
 * @method \Http\Promise\Promise queryFaceUserGroupAsync($arguments = [])
 * @method \Dew\Acs\Result removeFaceUserFromUserGroup(array $arguments = [])
 * @method \Http\Promise\Promise removeFaceUserFromUserGroupAsync($arguments = [])
 * @method \Dew\Acs\Result addFaceUser(array $arguments = [])
 * @method \Http\Promise\Promise addFaceUserAsync($arguments = [])
 * @method \Dew\Acs\Result addFaceUserGroupAndDeviceGroupRelation(array $arguments = [])
 * @method \Http\Promise\Promise addFaceUserGroupAndDeviceGroupRelationAsync($arguments = [])
 * @method \Dew\Acs\Result addFaceUserPicture(array $arguments = [])
 * @method \Http\Promise\Promise addFaceUserPictureAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFaceUser(array $arguments = [])
 * @method \Http\Promise\Promise deleteFaceUserAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFaceUserGroupAndDeviceGroupRelation(array $arguments = [])
 * @method \Http\Promise\Promise deleteFaceUserGroupAndDeviceGroupRelationAsync($arguments = [])
 * @method \Dew\Acs\Result deleteFaceUserPicture(array $arguments = [])
 * @method \Http\Promise\Promise deleteFaceUserPictureAsync($arguments = [])
 * @method \Dew\Acs\Result checkFaceUserDoExistOnDevice(array $arguments = [])
 * @method \Http\Promise\Promise checkFaceUserDoExistOnDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result clearFaceDeviceDB(array $arguments = [])
 * @method \Http\Promise\Promise clearFaceDeviceDBAsync($arguments = [])
 * @method \Dew\Acs\Result createPictureSearchApp(array $arguments = [])
 * @method \Http\Promise\Promise createPictureSearchAppAsync($arguments = [])
 * @method \Dew\Acs\Result createPictureSearchJob(array $arguments = [])
 * @method \Http\Promise\Promise createPictureSearchJobAsync($arguments = [])
 * @method \Dew\Acs\Result updatePictureSearchApp(array $arguments = [])
 * @method \Http\Promise\Promise updatePictureSearchAppAsync($arguments = [])
 * @method \Dew\Acs\Result queryPictureSearchAiboxes(array $arguments = [])
 * @method \Http\Promise\Promise queryPictureSearchAiboxesAsync($arguments = [])
 * @method \Dew\Acs\Result queryPictureSearchApps(array $arguments = [])
 * @method \Http\Promise\Promise queryPictureSearchAppsAsync($arguments = [])
 * @method \Dew\Acs\Result queryPictureSearchDevices(array $arguments = [])
 * @method \Http\Promise\Promise queryPictureSearchDevicesAsync($arguments = [])
 * @method \Dew\Acs\Result queryPictureSearchJob(array $arguments = [])
 * @method \Http\Promise\Promise queryPictureSearchJobAsync($arguments = [])
 * @method \Dew\Acs\Result queryPictureSearchJobResult(array $arguments = [])
 * @method \Http\Promise\Promise queryPictureSearchJobResultAsync($arguments = [])
 * @method \Dew\Acs\Result getPictureSearchJobStatus(array $arguments = [])
 * @method \Http\Promise\Promise getPictureSearchJobStatusAsync($arguments = [])
 * @method \Dew\Acs\Result queryPictureFiles(array $arguments = [])
 * @method \Http\Promise\Promise queryPictureFilesAsync($arguments = [])
 * @method \Dew\Acs\Result bindPictureSearchAppWithDevices(array $arguments = [])
 * @method \Http\Promise\Promise bindPictureSearchAppWithDevicesAsync($arguments = [])
 * @method \Dew\Acs\Result unbindPictureSearchAppWithDevices(array $arguments = [])
 * @method \Http\Promise\Promise unbindPictureSearchAppWithDevicesAsync($arguments = [])
 * @method \Dew\Acs\Result pictureSearchPicture(array $arguments = [])
 * @method \Http\Promise\Promise pictureSearchPictureAsync($arguments = [])
 * @method \Dew\Acs\Result triggerCapturePicture(array $arguments = [])
 * @method \Http\Promise\Promise triggerCapturePictureAsync($arguments = [])
 * @method \Dew\Acs\Result createRecordPlan(array $arguments = [])
 * @method \Http\Promise\Promise createRecordPlanAsync($arguments = [])
 * @method \Dew\Acs\Result addRecordPlanDevice(array $arguments = [])
 * @method \Http\Promise\Promise addRecordPlanDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRecordPlan(array $arguments = [])
 * @method \Http\Promise\Promise deleteRecordPlanAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRecordPlanDevice(array $arguments = [])
 * @method \Http\Promise\Promise deleteRecordPlanDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result setDeviceRecordLifeCycle(array $arguments = [])
 * @method \Http\Promise\Promise setDeviceRecordLifeCycleAsync($arguments = [])
 * @method \Dew\Acs\Result stopTriggeredRecord(array $arguments = [])
 * @method \Http\Promise\Promise stopTriggeredRecordAsync($arguments = [])
 * @method \Dew\Acs\Result updateEventRecordPlan(array $arguments = [])
 * @method \Http\Promise\Promise updateEventRecordPlanAsync($arguments = [])
 * @method \Dew\Acs\Result updateRecordPlan(array $arguments = [])
 * @method \Http\Promise\Promise updateRecordPlanAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecord(array $arguments = [])
 * @method \Http\Promise\Promise queryRecordAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecordByRecordId(array $arguments = [])
 * @method \Http\Promise\Promise queryRecordByRecordIdAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecordPlanDetail(array $arguments = [])
 * @method \Http\Promise\Promise queryRecordPlanDetailAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecordPlanDeviceByDevice(array $arguments = [])
 * @method \Http\Promise\Promise queryRecordPlanDeviceByDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecordPlanDeviceByPlan(array $arguments = [])
 * @method \Http\Promise\Promise queryRecordPlanDeviceByPlanAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecordPlans(array $arguments = [])
 * @method \Http\Promise\Promise queryRecordPlansAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecordUrl(array $arguments = [])
 * @method \Http\Promise\Promise queryRecordUrlAsync($arguments = [])
 * @method \Dew\Acs\Result queryTimeTemplate(array $arguments = [])
 * @method \Http\Promise\Promise queryTimeTemplateAsync($arguments = [])
 * @method \Dew\Acs\Result queryDeviceEventRecord(array $arguments = [])
 * @method \Http\Promise\Promise queryDeviceEventRecordAsync($arguments = [])
 * @method \Dew\Acs\Result queryDeviceVodUrl(array $arguments = [])
 * @method \Http\Promise\Promise queryDeviceVodUrlAsync($arguments = [])
 * @method \Dew\Acs\Result queryMonthRecord(array $arguments = [])
 * @method \Http\Promise\Promise queryMonthRecordAsync($arguments = [])
 * @method \Dew\Acs\Result queryDeviceRecordLifeCycle(array $arguments = [])
 * @method \Http\Promise\Promise queryDeviceRecordLifeCycleAsync($arguments = [])
 * @method \Dew\Acs\Result queryEventRecordPlanDetail(array $arguments = [])
 * @method \Http\Promise\Promise queryEventRecordPlanDetailAsync($arguments = [])
 * @method \Dew\Acs\Result queryEventRecordPlanDeviceByDevice(array $arguments = [])
 * @method \Http\Promise\Promise queryEventRecordPlanDeviceByDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result queryEventRecordPlanDeviceByPlan(array $arguments = [])
 * @method \Http\Promise\Promise queryEventRecordPlanDeviceByPlanAsync($arguments = [])
 * @method \Dew\Acs\Result queryEventRecordPlans(array $arguments = [])
 * @method \Http\Promise\Promise queryEventRecordPlansAsync($arguments = [])
 * @method \Dew\Acs\Result triggerRecord(array $arguments = [])
 * @method \Http\Promise\Promise triggerRecordAsync($arguments = [])
 * @method \Dew\Acs\Result queryDevicePictureByList(array $arguments = [])
 * @method \Http\Promise\Promise queryDevicePictureByListAsync($arguments = [])
 * @method \Dew\Acs\Result transferDeviceInstance(array $arguments = [])
 * @method \Http\Promise\Promise transferDeviceInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecordDownloadUrl(array $arguments = [])
 * @method \Http\Promise\Promise queryRecordDownloadUrlAsync($arguments = [])
 * @method \Dew\Acs\Result createLocalFileUploadJob(array $arguments = [])
 * @method \Http\Promise\Promise createLocalFileUploadJobAsync($arguments = [])
 * @method \Dew\Acs\Result deleteLocalFileUploadJob(array $arguments = [])
 * @method \Http\Promise\Promise deleteLocalFileUploadJobAsync($arguments = [])
 * @method \Dew\Acs\Result queryLocalFileUploadJob(array $arguments = [])
 * @method \Http\Promise\Promise queryLocalFileUploadJobAsync($arguments = [])
 * @method \Dew\Acs\Result queryFaceUserBatch(array $arguments = [])
 * @method \Http\Promise\Promise queryFaceUserBatchAsync($arguments = [])
 * @method \Dew\Acs\Result queryFaceUserByName(array $arguments = [])
 * @method \Http\Promise\Promise queryFaceUserByNameAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRecord(array $arguments = [])
 * @method \Http\Promise\Promise deleteRecordAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecordUrlByTime(array $arguments = [])
 * @method \Http\Promise\Promise queryRecordUrlByTimeAsync($arguments = [])
 * @method \Dew\Acs\Result queryCarProcessEvents(array $arguments = [])
 * @method \Http\Promise\Promise queryCarProcessEventsAsync($arguments = [])
 * @method \Dew\Acs\Result deletePicture(array $arguments = [])
 * @method \Http\Promise\Promise deletePictureAsync($arguments = [])
 * @method \Dew\Acs\Result updateInstanceInternetProtocol(array $arguments = [])
 * @method \Http\Promise\Promise updateInstanceInternetProtocolAsync($arguments = [])
 * @method \Dew\Acs\Result createRecordDownloadByTimeJob(array $arguments = [])
 * @method \Http\Promise\Promise createRecordDownloadByTimeJobAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecordDownloadJobById(array $arguments = [])
 * @method \Http\Promise\Promise queryRecordDownloadJobByIdAsync($arguments = [])
 * @method \Dew\Acs\Result queryRecordDownloadJobList(array $arguments = [])
 * @method \Http\Promise\Promise queryRecordDownloadJobListAsync($arguments = [])
 * @method \Dew\Acs\Result createLocalRecordDownloadByTimeJob(array $arguments = [])
 * @method \Http\Promise\Promise createLocalRecordDownloadByTimeJobAsync($arguments = [])
 * @method \Dew\Acs\Result batchQueryVisionDeviceInfo(array $arguments = [])
 * @method \Http\Promise\Promise batchQueryVisionDeviceInfoAsync($arguments = [])
 * @method \Dew\Acs\Result createRtmpDevice(array $arguments = [])
 * @method \Http\Promise\Promise createRtmpDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRtmpDevice(array $arguments = [])
 * @method \Http\Promise\Promise deleteRtmpDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteRtmpKey(array $arguments = [])
 * @method \Http\Promise\Promise deleteRtmpKeyAsync($arguments = [])
 * @method \Dew\Acs\Result queryRtmpKey(array $arguments = [])
 * @method \Http\Promise\Promise queryRtmpKeyAsync($arguments = [])
 * @method \Dew\Acs\Result queryVisionDeviceInfo(array $arguments = [])
 * @method \Http\Promise\Promise queryVisionDeviceInfoAsync($arguments = [])
 * @method \Dew\Acs\Result updateRtmpKey(array $arguments = [])
 * @method \Http\Promise\Promise updateRtmpKeyAsync($arguments = [])
 * @method \Dew\Acs\Result createGbDevice(array $arguments = [])
 * @method \Http\Promise\Promise createGbDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteGbDevice(array $arguments = [])
 * @method \Http\Promise\Promise deleteGbDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result enableGbSubDevice(array $arguments = [])
 * @method \Http\Promise\Promise enableGbSubDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result queryGbSubDeviceList(array $arguments = [])
 * @method \Http\Promise\Promise queryGbSubDeviceListAsync($arguments = [])
 * @method \Dew\Acs\Result refreshGbSubDeviceList(array $arguments = [])
 * @method \Http\Promise\Promise refreshGbSubDeviceListAsync($arguments = [])
 * @method \Dew\Acs\Result updateGbDevice(array $arguments = [])
 * @method \Http\Promise\Promise updateGbDeviceAsync($arguments = [])
 * @method \Dew\Acs\Result createStreamPushJob(array $arguments = [])
 * @method \Http\Promise\Promise createStreamPushJobAsync($arguments = [])
 * @method \Dew\Acs\Result createStreamSnapshotJob(array $arguments = [])
 * @method \Http\Promise\Promise createStreamSnapshotJobAsync($arguments = [])
 * @method \Dew\Acs\Result deleteStreamPushJob(array $arguments = [])
 * @method \Http\Promise\Promise deleteStreamPushJobAsync($arguments = [])
 * @method \Dew\Acs\Result deleteStreamSnapshotJob(array $arguments = [])
 * @method \Http\Promise\Promise deleteStreamSnapshotJobAsync($arguments = [])
 * @method \Dew\Acs\Result queryStreamPushJob(array $arguments = [])
 * @method \Http\Promise\Promise queryStreamPushJobAsync($arguments = [])
 * @method \Dew\Acs\Result queryStreamPushJobList(array $arguments = [])
 * @method \Http\Promise\Promise queryStreamPushJobListAsync($arguments = [])
 * @method \Dew\Acs\Result queryStreamSnapshotJob(array $arguments = [])
 * @method \Http\Promise\Promise queryStreamSnapshotJobAsync($arguments = [])
 * @method \Dew\Acs\Result bindStorageOrder(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise bindStorageOrderAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result checkFreeStorageValid(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise checkFreeStorageValidAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result consumeFreeStorage(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise consumeFreeStorageAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result createAndPayStorageOrder(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise createAndPayStorageOrderAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result enableFreeStorage(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise enableFreeStorageAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result enableStorageOrder(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise enableStorageOrderAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result freezeFreeStorage(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise freezeFreeStorageAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result generateDevice(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise generateDeviceAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result freezeStorageOrder(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise freezeStorageOrderAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result generateDeviceByBatchId(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise generateDeviceByBatchIdAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result queryBatchStatus(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise queryBatchStatusAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result queryDeviceDetail(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise queryDeviceDetailAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result queryFreeStorage(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise queryFreeStorageAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result queryDevicesDownloadUrl(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise queryDevicesDownloadUrlAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result queryGenerateDevicesInfoList(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise queryGenerateDevicesInfoListAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result queryGenerateDevicesRecord(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise queryGenerateDevicesRecordAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result queryStorageCommodityList(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise queryStorageCommodityListAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result queryStorageOrder(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise queryStorageOrderAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result queryStorageOrderList(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise queryStorageOrderListAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result transferStorageOrder(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise transferStorageOrderAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result uploadDeviceNameList(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise uploadDeviceNameListAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result getThingEventSnapshot(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise getThingEventSnapshotAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result batchBindDevice(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise batchBindDeviceAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result getAccountById(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise getAccountByIdAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result getDeviceStatus(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise getDeviceStatusAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result getSubDeviceList(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise getSubDeviceListAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result getThingPropertySnapshot(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise getThingPropertySnapshotAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result invokeThingService(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise invokeThingServiceAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result listBindingAccountByDevice(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise listBindingAccountByDeviceAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result listBindingDeviceByAccount(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise listBindingDeviceByAccountAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result setThingProperty(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise setThingPropertyAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result unbindAllUserByDevice(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise unbindAllUserByDeviceAsync($arguments = []) {@since 2023-06-30}
 * @method \Dew\Acs\Result unbindDevice(array $arguments = []) {@since 2023-06-30}
 * @method \Http\Promise\Promise unbindDeviceAsync($arguments = []) {@since 2023-06-30}
 */
final class LinkvisualClient extends AcsClient
{
    //
}
