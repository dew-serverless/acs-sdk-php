<?php return array (
  'version' => '1.0',
  'info' => 
  array (
    'style' => 'RPC',
    'product' => 'dms-enterprise',
    'version' => '2018-11-01',
  ),
  'directories' => 
  array (
    0 => 
    array (
      'id' => 155801,
      'title' => '用户管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'DeleteUser',
        1 => 'UpdateUser',
        2 => 'DisableUser',
        3 => 'EnableUser',
        4 => 'ListUsers',
        5 => 'GetUser',
        6 => 'GetUserActiveTenant',
        7 => 'ListUserTenants',
        8 => 'RegisterUser',
      ),
    ),
    1 => 
    array (
      'id' => 155811,
      'title' => '实例管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AddInstance',
        1 => 'ModifyInstance',
        2 => 'ListInstances',
        3 => 'GetInstance',
        4 => 'DeleteInstance',
        5 => 'RegisterInstance',
        6 => 'UpdateInstance',
      ),
    ),
    2 => 
    array (
      'id' => 155817,
      'title' => '操作审计',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'GetOpLog',
        1 => 'ListInstanceLoginAuditLog',
        2 => 'ListProxySQLExecAuditLog',
        3 => 'ListSQLExecAuditLog',
      ),
    ),
    3 => 
    array (
      'id' => 155822,
      'title' => '审批流程',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListWorkFlowTemplates',
        1 => 'ListWorkFlowNodes',
      ),
    ),
    4 => 
    array (
      'id' => 155825,
      'title' => '库表元数据',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 155839,
          'title' => '逻辑库表',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateLogicDatabase',
            1 => 'AddLogicTableRouteConfig',
            2 => 'DeleteLogicDatabase',
            3 => 'DeleteLogicTableRouteConfig',
            4 => 'ListLogicDatabases',
            5 => 'GetLogicDatabase',
            6 => 'ListLogicTables',
            7 => 'GetDBTopology',
            8 => 'GetTableDBTopology',
            9 => 'ListLogicTableRouteConfig',
            10 => 'EditLogicDatabase',
          ),
        ),
        1 => 'SearchDatabase',
        2 => 'SearchTable',
        3 => 'ListDatabases',
        4 => 'ListTables',
        5 => 'ListColumns',
        6 => 'ListIndexes',
        7 => 'GetDatabase',
        8 => 'GetPhysicalDatabase',
        9 => 'GetTableTopology',
        10 => 'GetMetaTableDetailInfo',
        11 => 'GetMetaTableColumn',
        12 => 'SyncInstanceMeta',
        13 => 'SyncDatabaseMeta',
      ),
    ),
    5 => 
    array (
      'id' => 155851,
      'title' => '工单操作',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 155852,
          'title' => '通用',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateOrder',
            1 => 'GetApprovalDetail',
            2 => 'ListOrders',
            3 => 'GetOrderBaseInfo',
            4 => 'SubmitOrderApproval',
            5 => 'ApproveOrder',
            6 => 'CloseOrder',
            7 => 'GetOrderAttachmentFile',
            8 => 'GetPagedInstance',
            9 => 'PreviewWorkflow',
          ),
        ),
        1 => 
        array (
          'id' => 155860,
          'title' => '权限申请',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'GetOwnerApplyOrderDetail',
            1 => 'GetPermApplyOrderDetail',
          ),
        ),
        2 => 
        array (
          'id' => 155863,
          'title' => '库表同步',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateStructSyncOrder',
            1 => 'GetStructSyncOrderDetail',
            2 => 'GetStructSyncJobDetail',
            3 => 'GetStructSyncJobAnalyzeResult',
            4 => 'GetStructSyncExecSqlDetail',
            5 => 'SubmitStructSyncOrderApproval',
            6 => 'ExecuteStructSync',
          ),
        ),
        3 => 
        array (
          'id' => 155871,
          'title' => '数据变更',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateDataCorrectOrder',
            1 => 'CreateDataCronClearOrder',
            2 => 'CreateDataImportOrder',
            3 => 'CreateFreeLockCorrectOrder',
            4 => 'ModifyDataCorrectExecSQL',
            5 => 'PauseDataCorrectSQLJob',
            6 => 'GetDataCorrectTaskDetail',
            7 => 'GetDataCronClearTaskDetailList',
            8 => 'GetDataCorrectRollbackFile',
            9 => 'GetDataCorrectBackupFiles',
            10 => 'GetDataCorrectOrderDetail',
            11 => 'GetDataCronClearConfig',
            12 => 'GetDataCorrectSQLFile',
            13 => 'ListDataCorrectPreCheckSQL',
            14 => 'ListDataCorrectPreCheckDB',
            15 => 'ExecuteDataCorrect',
            16 => 'RetryDataCorrectPreCheck',
            17 => 'RestartDataCorrectSQLJob',
            18 => 'ListDataImportSQLPreCheckDetail',
            19 => 'ListDataImportSQLType',
            20 => 'GetDataImportSQL',
            21 => 'SkipDataCorrectRowCheck',
            22 => 'CreateProcCorrectOrder',
          ),
        ),
        4 => 
        array (
          'id' => 155888,
          'title' => '结构设计',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreatePublishGroupTask',
            1 => 'ListDDLPublishRecords',
            2 => 'GetTableDesignProjectFlow',
            3 => 'GetTableDesignProjectInfo',
          ),
        ),
        5 => 
        array (
          'id' => 155891,
          'title' => '数据导出',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateDatabaseExportOrder',
            1 => 'CreateDataExportOrder',
            2 => 'ExecuteDataExport',
            3 => 'GetDataExportPreCheckDetail',
            4 => 'GetDataExportDownloadURL',
            5 => 'GetDatabaseExportOrderDetail',
            6 => 'GetDataExportOrderDetail',
            7 => 'GetDbExportDownloadURL',
          ),
        ),
        6 => 
        array (
          'id' => 155895,
          'title' => 'SQL审核',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateSQLReviewOrder',
            1 => 'GetSQLReviewCheckResultStatus',
            2 => 'ListSQLReviewOriginSQL',
            3 => 'GetSQLReviewOptimizeDetail',
          ),
        ),
        7 => 
        array (
          'id' => 182112,
          'title' => '数据追踪',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateDataTrackOrder',
            1 => 'GetDataTrackJobDegree',
            2 => 'GetDataTrackJobTableMeta',
            3 => 'GetDataTrackOrderDetail',
            4 => 'SearchDataTrackResult',
            5 => 'DownloadDataTrackResult',
            6 => 'QueryDataTrackResultDownloadStatus',
          ),
        ),
        8 => 
        array (
          'id' => 155900,
          'title' => '附件上传',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateUploadFileJob',
            1 => 'CreateUploadOSSFileJob',
            2 => 'GetUserUploadFileJob',
          ),
        ),
        9 => 
        array (
          'id' => 182765,
          'title' => '数据归档',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateDataArchiveOrder',
            1 => 'GetDataArchiveOrderDetail',
            2 => 'GetDataArchiveCount',
          ),
        ),
      ),
    ),
    6 => 
    array (
      'id' => 155904,
      'title' => 'SQL任务',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListDBTaskSQLJob',
        1 => 'ListDBTaskSQLJobDetail',
        2 => 'GetDBTaskSQLJobLog',
        3 => 'GetOnlineDDLProgress',
      ),
    ),
    7 => 
    array (
      'id' => 155908,
      'title' => '权限管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'SetOwners',
        1 => 'ListInstanceUserPermissions',
        2 => 'ListDatabaseUserPermssions',
        3 => 'ListUserPermissions',
        4 => 'GrantUserPermission',
        5 => 'RevokeUserPermission',
      ),
    ),
    8 => 
    array (
      'id' => 155915,
      'title' => '安全管理',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 175207,
          'title' => '安全规则',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateStandardGroup',
            1 => 'ListStandardGroups',
            2 => 'UpdateStandardGroup',
            3 => 'DeleteStandardGroup',
            4 => 'GetStandardGroup',
          ),
        ),
        1 => 
        array (
          'id' => 175341,
          'title' => '敏感数据管理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'AddDesensitizationRule',
            1 => 'ListDesensitizationRule',
            2 => 'ModifyDesensitizationStrategy',
            3 => 'ListClassificationTemplates',
            4 => 'ListSensitiveDataAuditLog',
            5 => 'ListSensitiveColumns',
            6 => 'ListSensitiveColumnsDetail',
            7 => 'ChangeColumnSecLevel',
            8 => 'ChangeColumnSecurityLevel',
            9 => 'GetClassificationTemplate',
            10 => 'ListSensitivityLevel',
            11 => 'ListSensitiveColumnInfo',
          ),
        ),
        2 => 
        array (
          'id' => 155916,
          'title' => '安全访问代理',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateProxy',
            1 => 'DeleteProxy',
            2 => 'ListProxies',
            3 => 'GetProxy',
            4 => 'CreateProxyAccess',
            5 => 'DeleteProxyAccess',
            6 => 'ListProxyAccesses',
            7 => 'InspectProxyAccessSecret',
            8 => 'GetProxyAccess',
          ),
        ),
        3 => 
        array (
          'id' => 179228,
          'title' => '权限模板',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'GrantTemplateAuthority',
            1 => 'RevokeTemplateAuthority',
            2 => 'CreateAuthorityTemplate',
            3 => 'UpdateAuthorityTemplate',
            4 => 'GetAuthorityTemplateItem',
            5 => 'GetAuthorityTemplate',
            6 => 'ListAuthorityTemplate',
            7 => 'DeleteAuthorityTemplate',
          ),
        ),
      ),
    ),
    9 => 
    array (
      'id' => 155928,
      'title' => '数据查询',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ExecuteScript',
      ),
    ),
    10 => 
    array (
      'id' => 168142,
      'title' => '数据开发',
      'type' => 'directory',
      'children' => 
      array (
        0 => 
        array (
          'id' => 168143,
          'title' => '任务编排',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'UpdateTaskFlowConstants',
            1 => 'DeleteTaskFlow',
            2 => 'OfflineTaskFlow',
            3 => 'ListTaskFlow',
            4 => 'GetTaskInstanceRelation',
            5 => 'ListTaskFlowInstance',
            6 => 'ListDAGVersions',
            7 => 'ReDeployLhDagVersion',
            8 => 'UpdateScenario',
            9 => 'ResumeTaskFlowInstance',
            10 => 'UpdateTaskContent',
            11 => 'ListTaskFlowsByPage',
            12 => 'ListScenarios',
            13 => 'UpdateTaskConfig',
            14 => 'ListTaskFlowConstants',
            15 => 'BackFill',
            16 => 'UpdateTaskTimeVariables',
            17 => 'ListTaskFlowTimeVariables',
            18 => 'UpdateTaskFlowTimeVariables',
            19 => 'UpdateTaskFlowCooperators',
            20 => 'CreateScenario',
            21 => 'DeleteScenario',
            22 => 'UpdateSLARules',
            23 => 'GetRuleNumLimitOfSLA',
            24 => 'GetIntervalLimitOfSLA',
            25 => 'ListDefaultSLARules',
            26 => 'ListTaskFlowCooperators',
            27 => 'ListSLARules',
            28 => 'GetTask',
            29 => 'MoveTaskFlowToScenario',
            30 => 'GetTaskFlowNotification',
            31 => 'UpdateTaskName',
            32 => 'UpdateTaskOutput',
            33 => 'DeleteTaskFlowEdgesByCondition',
            34 => 'ListTaskFlowEdgesByCondition',
            35 => 'AddTaskFlowEdges',
            36 => 'UpdateTaskFlowNameAndDesc',
            37 => 'GetTaskFlowGraph',
            38 => 'UpdateTaskFlowEdges',
            39 => 'UpdateTaskFlowOwner',
            40 => 'UpdateTaskFlowSchedule',
            41 => 'UpdateTaskFlowRelations',
            42 => 'UpdateTaskFlowNotification',
            43 => 'ListTasksInTaskFlow',
            44 => 'CreateTaskFlow',
            45 => 'SuspendTaskFlowInstance',
            46 => 'ReRunTaskFlowInstance',
            47 => 'MakeTaskFlowInstanceSuccess',
            48 => 'DeleteTask',
            49 => 'PublishAndDeployTaskFlow',
            50 => 'StopTaskFlowInstance',
            51 => 'CreateTask',
          ),
        ),
        1 => 
        array (
          'id' => 168144,
          'title' => '数仓开发',
          'type' => 'directory',
          'children' => 
          array (
            0 => 'CreateLakeHouseSpace',
            1 => 'GetLhSpaceByName',
            2 => 'DeleteLakeHouseSpace',
            3 => 'ListLhTaskFlowAndScenario',
            4 => 'AddLhMembers',
            5 => 'DeleteLhMembers',
            6 => 'ChangeLhDagOwner',
          ),
        ),
      ),
    ),
    11 => 
    array (
      'id' => 175344,
      'title' => '售卖订单',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'ListEffectiveOrders',
        1 => 'RefundPayAsYouGoOrder',
        2 => 'BuyPayAsYouGoOrder',
      ),
    ),
    12 => 
    array (
      'id' => 182884,
      'title' => 'SQL血缘',
      'type' => 'directory',
      'children' => 
      array (
        0 => 'AnalyzeSQLLineage',
      ),
    ),
  ),
  'components' => 
  array (
    'schemas' => 
    array (
      'AsyncTaskVO' => 
      array (
        'type' => 'object',
        'properties' => 
        array (
          'Id' => 
          array (
            'title' => '任务id',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'UserId' => 
          array (
            'title' => '用户id',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'DatasetId' => 
          array (
            'title' => '数据集id',
            'type' => 'string',
          ),
          'TaskName' => 
          array (
            'title' => '任务名',
            'type' => 'string',
          ),
          'TaskStatus' => 
          array (
            'title' => '任务状态(0=开始;1=读取成功;2=任务成功;-1=任务失败)',
            'type' => 'integer',
            'format' => 'int32',
          ),
          'TaskType' => 
          array (
            'title' => '任务类型(0=上传;1=下载)',
            'type' => 'integer',
            'format' => 'int32',
          ),
          'Remark' => 
          array (
            'title' => '任务记录',
            'type' => 'string',
          ),
        ),
      ),
      'DatasetItemVO' => 
      array (
        'type' => 'object',
        'properties' => 
        array (
          'Id' => 
          array (
            'title' => 'id值',
            'type' => 'string',
          ),
          'KeyName' => 
          array (
            'title' => 'encdb.encdb_internal_scm_table.keyname',
            'type' => 'string',
          ),
          'TableName' => 
          array (
            'title' => '表名',
            'type' => 'string',
          ),
          'Path' => 
          array (
            'title' => '路径',
            'type' => 'string',
          ),
          'Url' => 
          array (
            'title' => '存储系统地址',
            'type' => 'string',
          ),
          'FileSystem' => 
          array (
            'title' => '存储系统类型',
            'type' => 'string',
          ),
          'Remark' => 
          array (
            'title' => '描述',
            'type' => 'string',
          ),
          'Digest' => 
          array (
            'title' => '摘要信息',
            'type' => 'string',
          ),
          'ProjectsLinked' => 
          array (
            'title' => '关联项目',
            'type' => 'array',
            'items' => 
            array (
              '$ref' => '#/components/schemas/ProjectDetailsLiteVO',
            ),
          ),
          'AsyncTaskList' => 
          array (
            'title' => '关联etl任务',
            'type' => 'array',
            'items' => 
            array (
              '$ref' => '#/components/schemas/AsyncTaskVO',
            ),
          ),
          'DatasetStatus' => 
          array (
            'title' => '是否完成上传/融合计算（0否 1是）',
            'type' => 'integer',
            'format' => 'int32',
          ),
          'DatasetType' => 
          array (
            'title' => '类型（0上传 1融合计算）',
            'type' => 'integer',
            'format' => 'int32',
          ),
          'RecentTaskStatus' => 
          array (
            'title' => '最近任务状态(0开始 1连接oos成功 2任务完成 -1失败 -2无任务)',
            'type' => 'integer',
            'format' => 'int32',
          ),
          'Schema' => 
          array (
            'title' => '元数据信息',
            'type' => 'string',
          ),
          'MoreInfo' => 
          array (
            'title' => '其他数据集信息Json格式',
            'type' => 'string',
          ),
        ),
      ),
      'GetTableDataKeyVO' => 
      array (
        'type' => 'object',
        'properties' => 
        array (
          'UserName' => 
          array (
            'title' => '用户名',
            'type' => 'string',
          ),
          'DbName' => 
          array (
            'title' => '数据库名',
            'type' => 'string',
          ),
          'SchemaName' => 
          array (
            'title' => '数据库 schema 名',
            'type' => 'string',
          ),
          'TblName' => 
          array (
            'title' => '数据库表名。密态数据集中使用 dataset_id',
            'type' => 'string',
          ),
          'ColName' => 
          array (
            'title' => '数据库表特定列名',
            'type' => 'string',
          ),
          'MekId' => 
          array (
            'title' => '用户 mek 对应的密钥仓库 Id',
            'type' => 'integer',
            'format' => 'int64',
          ),
        ),
      ),
      'ImportMasterKeyVO' => 
      array (
        'type' => 'object',
        'properties' => 
        array (
          'EncryptMekDataBase64' => 
          array (
            'title' => '加密的主密钥base64信封格式',
            'type' => 'string',
          ),
          'MekId' => 
          array (
            'title' => '主密钥 id',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'ProjectId' => 
          array (
            'title' => '可以使用该主密钥的项目列表',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'integer',
              'format' => 'int64',
            ),
          ),
        ),
      ),
      'ProjectDetailsLiteVO' => 
      array (
        'type' => 'object',
        'properties' => 
        array (
          'Id' => 
          array (
            'title' => 'id',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'ProjectName' => 
          array (
            'title' => '项目名',
            'type' => 'string',
          ),
        ),
      ),
      'StsApplyVO' => 
      array (
        'type' => 'object',
        'properties' => 
        array (
          'AliyunId' => 
          array (
            'title' => '阿里云id',
            'type' => 'string',
          ),
          'Duration' => 
          array (
            'title' => '持续时间',
            'type' => 'integer',
            'format' => 'int64',
          ),
        ),
      ),
      'StsTokenVO' => 
      array (
        'type' => 'object',
        'properties' => 
        array (
          'AccessKeyId' => 
          array (
            'title' => '临时AK',
            'type' => 'string',
          ),
          'AccessKeySecret' => 
          array (
            'title' => '临时SK',
            'type' => 'string',
          ),
          'SecurityToken' => 
          array (
            'title' => '临时Token',
            'type' => 'string',
          ),
          'Expiration' => 
          array (
            'title' => '过期时间',
            'type' => 'string',
          ),
        ),
      ),
      'TeeEvidenceVO' => 
      array (
        'type' => 'object',
        'properties' => 
        array (
          'EncryptPublicKeyType' => 
          array (
            'title' => '加密类型',
            'type' => 'string',
          ),
          'EncryptPublicKeyPem' => 
          array (
            'title' => '公钥pem格式数据',
            'type' => 'string',
          ),
          'SignPublicKeyType' => 
          array (
            'title' => '签名类型',
            'type' => 'string',
          ),
          'SignPublicKeyPem' => 
          array (
            'title' => '签名pem格式数据',
            'type' => 'string',
          ),
          'PublicKeyRaType' => 
          array (
            'title' => 'RA 校验类型',
            'type' => 'string',
          ),
          'PublicKeyRaBase64' => 
          array (
            'title' => '校验数据',
            'type' => 'string',
          ),
          'QuoteReport' => 
          array (
            'title' => 'quoteReport',
            'type' => 'string',
          ),
          'EnclaveData' => 
          array (
            'title' => 'enclaveData',
            'type' => 'string',
          ),
          'PublicKey' => 
          array (
            'title' => 'publicKey',
            'type' => 'string',
          ),
          'CipherSuite' => 
          array (
            'title' => 'cipherSuite',
            'type' => 'string',
          ),
          'TrustedMrEnclave' => 
          array (
            'title' => 'trustedMrEnclave',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'string',
            ),
          ),
          'ModifiedDate' => 
          array (
            'title' => 'modifiedDate',
            'type' => 'string',
          ),
        ),
      ),
      'UsersDetailsVO' => 
      array (
        'type' => 'object',
        'properties' => 
        array (
          'Id' => 
          array (
            'title' => '用户id',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'Mekid' => 
          array (
            'title' => 'mekid',
            'type' => 'integer',
            'format' => 'int64',
          ),
          'Uid' => 
          array (
            'title' => 'uid',
            'type' => 'string',
          ),
          'UserName' => 
          array (
            'title' => '用户名',
            'type' => 'string',
          ),
          'PathPrefix' => 
          array (
            'title' => '存储空间路径',
            'type' => 'string',
          ),
          'ResultParty' => 
          array (
            'title' => '是否为结果方',
            'type' => 'integer',
            'format' => 'int32',
          ),
          'UserConfirmed' => 
          array (
            'title' => '是否验证过项目同意加入',
            'type' => 'integer',
            'format' => 'int32',
          ),
          'DataReady' => 
          array (
            'title' => '是否绑定完数据',
            'type' => 'integer',
            'format' => 'int32',
          ),
          'ApprovalStatus' => 
          array (
            'title' => '是否完成了审批',
            'type' => 'string',
          ),
          'UserPublicKeyPem' => 
          array (
            'title' => '公钥',
            'type' => 'string',
          ),
          'ApprovalSqlTemplate' => 
          array (
            'title' => '审批过的sql模板',
            'type' => 'string',
          ),
          'ApprovalSignatureBase64' => 
          array (
            'title' => '审批签名信息',
            'type' => 'string',
          ),
          'Creator' => 
          array (
            'title' => '是否为项目创建者',
            'type' => 'integer',
            'format' => 'int32',
          ),
        ),
      ),
    ),
  ),
  'apis' => 
  array (
    'DeleteUser' => 
    array (
      'summary' => '调用该API可删除已录入DMS的用户（阿里云账号）。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '23****',
          ),
        ),
        1 => 
        array (
          'name' => 'Uid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阿里云账号UID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '16488219****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。
',
                'type' => 'string',
                'example' => '34E01EDD-6A16-4CF0-9541-C644D1BE01AA	',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码，请求异常时返回。',
                'type' => 'string',
                'example' => '403',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'The specified user not exists.	',
              ),
              'Success' => 
              array (
                'description' => '返回值说明。

- **true**：删除成功。

- **false**：删除失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"34E01EDD-6A16-4CF0-9541-C644D1BE01AA\\\\t\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"ErrorMessage\\": \\"The specified user not exists.\\\\t\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '删除产品内的云账号',
      'description' => '- 仅支持管理员调用该API删除DMS内的用户（阿里云账号）。删除用户的更多信息，请参见[管理DMS用户](~~60376~~)。

- 删除目标用户后，其拥有的数据源权限、数据Owner配置均会被回收，且不能登录DMS（除非再次将阿里云账号ID添加到DMS中）。

> 删除操作仅是取消阿里云账号与DMS产品内用户的关联关系，不会删除阿里云账号。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateUser' => 
    array (
      'summary' => '更新用户信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'Uid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待更新的用户Uid。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '123456789',
          ),
        ),
        2 => 
        array (
          'name' => 'UserNick',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户昵称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'RoleNames',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户角色列表，角色取值参考[RegisterUser](~~141565~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'ADMIN,DBA',
          ),
        ),
        4 => 
        array (
          'name' => 'Mobile',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户钉钉号（手机号码）。',
            'type' => 'string',
            'required' => false,
            'example' => '188xxxxxxxx',
          ),
        ),
        5 => 
        array (
          'name' => 'MaxExecuteCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当天查询上限次数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1000',
          ),
        ),
        6 => 
        array (
          'name' => 'MaxResultCount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当天查询上限行数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => 'API请求唯一ID。',
                'type' => 'string',
                'example' => 'E9BEBF41-4F69-4605-A5D5-A67955173941',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '更新用户是否成功。',
                'type' => 'boolean',
                'example' => 'false',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E9BEBF41-4F69-4605-A5D5-A67955173941\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": false\\n}","errorExample":""},{"type":"xml","example":"<RequestId>E9BEBF41-4F69-4605-A5D5-A67955173941</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '更新用户信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DisableUser' => 
    array (
      'summary' => '可禁用产品内暂时不需要的云账号。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'Uid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阿里云账号uid。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '12345',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求唯一ID
',
                'type' => 'string',
                'example' => '34E01EDD-6A16-4CF0-9541-C644D1BE01AA',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码
',
                'type' => 'string',
                'example' => '403',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息
',
                'type' => 'string',
                'example' => 'The specified user not exists.',
              ),
              'Success' => 
              array (
                'description' => '- **true**：禁用成功
- **false**：禁用失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"34E01EDD-6A16-4CF0-9541-C644D1BE01AA\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"ErrorMessage\\": \\"The specified user not exists.\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DisableUserResponse>\\n  <RequestId>ADE24A7C-DB8B-4D32-94AD-E50E3B921197</RequestId>\\n  <Success>true</Success>\\n</DisableUserResponse>","errorExample":""}]',
      'title' => '禁用产品内的云账号',
      'description' => '此OpenAPI为产品内【系统管理】-【用户管理】内的“禁用用户”功能，支持DMS企业版内的“管理员”角色用户通过调用API的方式对暂时不需要的云账号进行产品内的禁用操作。禁用后，对应云账号开通的数据源权限、数据owner配置、DBA配置均会回收与失效。


> 禁用只是临时限制该云账号不能登录本企业的DMS企业版产品，并不是禁用云账号本身。禁用的效果是用户通过该账号不再能登录到DMS企业版（除非再次启用），此时仍占用企业开通规格。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'EnableUser' => 
    array (
      'summary' => '可启用产品内先前已经禁用的云账号。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'Uid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '阿里云账号uid',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '12345',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求唯一ID

',
                'type' => 'string',
                'example' => '34E01EDD-6A16-4CF0-9541-C644D1BE01AA',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码

',
                'type' => 'string',
                'example' => '403',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息

',
                'type' => 'string',
                'example' => 'The specified user not exists.',
              ),
              'Success' => 
              array (
                'description' => '- **true**：启用成功
- **false**：启用失败
',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"34E01EDD-6A16-4CF0-9541-C644D1BE01AA\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"ErrorMessage\\": \\"The specified user not exists.\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<EnableUserResponse>\\n  <RequestId>ADE24A7C-DB8B-4D32-94AD-E50E3B921197</RequestId>\\n  <Success>true</Success>\\n</EnableUserResponse>","errorExample":""}]',
      'title' => '启用产品内禁用的云账号',
      'description' => '此OpenAPI为产品内【系统管理】-【用户管理】内的“启用用户”功能，支持DMS企业版内的“管理员”角色用户，通过调用API的方式对先前禁用的云账号进行产品内的启用操作。启用后，对应云账号可恢复产品的登录和相关使用。


> 启用只是解除该云账号之前禁用不能登录本企业的DMS企业版产品的限制，非云账号本身的其他操作。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListUsers' => 
    array (
      'summary' => '获取用户的详情列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'Role',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户角色，取值说明如下：

- **USER**：普通用户
- **DBA**：DBA
- **ADMIN**：管理员
- **SECURITY_ADMIN**：安全管理员
- **STRUCT\\_READ\\_ONLY**：结构只读

> 您可在DMS控制台右上角头像处查看您的角色。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'DBA',
          ),
        ),
        2 => 
        array (
          'name' => 'UserState',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户状态，取值说明如下：
- **NORMAL**：正常
- **DISABLE**：禁用
- **DELETE**：已删除',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'NORMAL',
          ),
        ),
        3 => 
        array (
          'name' => 'SearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键词，支持模糊搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始页数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数。
> 每页记录数，取值：10、20、50、100。默认值为10。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '满足条件的记录总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '3',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '69161997-6030-53BA-A333-DBEC83B732FF',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'InvalidTid',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Specified parameter Tid is not valid.',
              ),
              'UserList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'User' => 
                  array (
                    'description' => '用户详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '用户详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'State' => 
                        array (
                          'description' => '用户状态，返回值说明如下：
- **NORMAL**：正常
- **DISABLE**：禁用
- **DELETE**：已删除',
                          'type' => 'string',
                          'example' => 'NORMAL',
                        ),
                        'CurResultCount' => 
                        array (
                          'description' => '当天查询行数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        'UserId' => 
                        array (
                          'description' => '用户ID。',
                          'type' => 'string',
                          'example' => '8****',
                        ),
                        'LastLoginTime' => 
                        array (
                          'description' => '最后登录时间。',
                          'type' => 'string',
                          'example' => '2021-11-08 13:43:43',
                        ),
                        'MaxResultCount' => 
                        array (
                          'description' => '当天最高查询行数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '50000',
                        ),
                        'ParentUid' => 
                        array (
                          'description' => '父账号UID。',
                          'type' => 'string',
                          'example' => '140692647406****',
                        ),
                        'RoleIdList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'RoleIds' => 
                            array (
                              'description' => '角色ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '角色ID列表，具体角色ID的返回值说明如下：
- **1**：表示角色为普通用户。
- **2**：表示角色为DBA。
- **3**：表示角色为管理员。
- **4**：表示角色为安全管理员。
- **6**：表示角色为结构只读。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '3',
                              ),
                            ),
                          ),
                        ),
                        'RoleNameList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'RoleNames' => 
                            array (
                              'description' => '角色列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '角色名称列表，具体的角色名称返回值说明如下：
- **USER**：普通用户
- **DBA**：DBA
- **ADMIN**：管理员
- **SECURITY_ADMIN**：安全管理员
- **STRUCT_READ_ONLY**：结构只读',
                                'type' => 'string',
                                'example' => 'ADMIN',
                              ),
                            ),
                          ),
                        ),
                        'NickName' => 
                        array (
                          'description' => '用户昵称。',
                          'type' => 'string',
                          'example' => 'test_NickName',
                        ),
                        'MaxExecuteCount' => 
                        array (
                          'description' => '当天最高查询次数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2000',
                        ),
                        'CurExecuteCount' => 
                        array (
                          'description' => '当天查询次数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        'Mobile' => 
                        array (
                          'description' => '用户手机号码。

> - 如果您已经在控制台界面右上角头像处的**通知**里配置过手机号码，此处将返回。
> - 如果您没有配置过手机号码，此处则没有返回。',
                          'type' => 'string',
                          'example' => '1389999****',
                        ),
                        'Uid' => 
                        array (
                          'description' => '用户UID。',
                          'type' => 'string',
                          'example' => '167382665015****',
                        ),
                        'Email' => 
                        array (
                          'description' => '电子邮箱，用于接收消息通知。

> - 如果您已经在控制台界面右上角头像处的**通知**里配置过电子邮箱，此处将返回。
> - 如果您没有配置过电子邮箱，此处则没有返回。',
                          'type' => 'string',
                          'example' => 'username@example.com',
                        ),
                        'DingRobot' => 
                        array (
                          'description' => '钉钉机器人，用于接收消息通知。

> - 如果您已经在控制台界面右上角头像处的**通知**里配置过钉钉机器人，此处将返回。
> - 如果您没有配置过钉钉机器人，此处则没有返回。',
                          'type' => 'string',
                          'example' => 'https://XXX.dingtalk.com/robot/send?access_token=9b7a4a562cbe7fcdea9962afac7b9d7b4504d564948083419750f9cafa78e4ef',
                        ),
                        'Webhook' => 
                        array (
                          'description' => 'Webhook，用于接收消息通知。

> - 如果您已经配置过Webhook，当DMS中有消息通知时，系统会将消息通知发送到您指定的URL地址。
> - 如果您没有配置过，此处则没有返回。',
                          'type' => 'string',
                          'example' => 'http://dms-XXX.aliyun.com:8***',
                        ),
                        'SignatureMethod' => 
                        array (
                          'description' => 'Webhook签名方式，返回值说明如下：
- **NONE**：不签名
- **HMAC\\_SHA1**：HMAC\\_SHA1',
                          'type' => 'string',
                          'example' => 'HMAC_SHA1',
                        ),
                        'NotificationMode' => 
                        array (
                          'description' => '消息通知方式，返回值可能为多个值，单个返回值说明如下：
- **SMS**：短信
- **EMAIL**：电子邮箱
- **DINGDING**：钉钉
- **DINGROBOT**：钉钉机器人
- **WEBHOOK**：Webhook',
                          'type' => 'string',
                          'example' => 'DINGROBOT',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 3,\\n  \\"RequestId\\": \\"69161997-6030-53BA-A333-DBEC83B732FF\\",\\n  \\"ErrorCode\\": \\"InvalidTid\\",\\n  \\"ErrorMessage\\": \\"Specified parameter Tid is not valid.\\",\\n  \\"UserList\\": {\\n    \\"User\\": [\\n      {\\n        \\"State\\": \\"NORMAL\\",\\n        \\"CurResultCount\\": 0,\\n        \\"UserId\\": \\"8****\\",\\n        \\"LastLoginTime\\": \\"2021-11-08 13:43:43\\",\\n        \\"MaxResultCount\\": 50000,\\n        \\"ParentUid\\": \\"140692647406****\\",\\n        \\"RoleIdList\\": {\\n          \\"RoleIds\\": [\\n            3\\n          ]\\n        },\\n        \\"RoleNameList\\": {\\n          \\"RoleNames\\": [\\n            \\"ADMIN\\"\\n          ]\\n        },\\n        \\"NickName\\": \\"test_NickName\\",\\n        \\"MaxExecuteCount\\": 2000,\\n        \\"CurExecuteCount\\": 0,\\n        \\"Mobile\\": \\"1389999****\\",\\n        \\"Uid\\": \\"167382665015****\\",\\n        \\"Email\\": \\"username@example.com\\",\\n        \\"DingRobot\\": \\"https://XXX.dingtalk.com/robot/send?access_token=9b7a4a562cbe7fcdea9962afac7b9d7b4504d564948083419750f9cafa78e4ef\\",\\n        \\"Webhook\\": \\"http://dms-XXX.aliyun.com:8***\\",\\n        \\"SignatureMethod\\": \\"HMAC_SHA1\\",\\n        \\"NotificationMode\\": \\"DINGROBOT\\"\\n      }\\n    ]\\n  },\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListUsersResponse>\\n    <TotalCount>3</TotalCount>\\n    <RequestId>69161997-6030-53BA-A333-DBEC83B732FF</RequestId>\\n    <UserList>\\n        <User>\\n            <NotificationMode/>\\n            <Email>test1_email</Email>\\n            <RoleNameList>\\n                <RoleNames>USER</RoleNames>\\n                <RoleNames>ADMIN</RoleNames>\\n            </RoleNameList>\\n            <NickName>王女士</NickName>\\n            <MaxExecuteCount>2000</MaxExecuteCount>\\n            <CurResultCount>0</CurResultCount>\\n            <LastLoginTime>2022-11-23 16:03:10</LastLoginTime>\\n            <Uid>23236106758310****</Uid>\\n            <RoleIdList>\\n                <RoleIds>1</RoleIds>\\n                <RoleIds>3</RoleIds>\\n            </RoleIdList>\\n            <MaxResultCount>50000</MaxResultCount>\\n            <State>NORMAL</State>\\n            <UserId>13***</UserId>\\n            <CurExecuteCount>0</CurExecuteCount>\\n            <ParentUid>140692647406****</ParentUid>\\n        </User>\\n        <User>\\n            <NotificationMode/>\\n            <Email>test2_email</Email>\\n            <RoleNameList>\\n                <RoleNames>ADMIN</RoleNames>\\n                <RoleNames>USER</RoleNames>\\n            </RoleNameList>\\n            <NickName>王先生</NickName>\\n            <MaxExecuteCount>2000</MaxExecuteCount>\\n            <CurResultCount>0</CurResultCount>\\n            <LastLoginTime>2022-11-17 14:50:22</LastLoginTime>\\n            <Uid>26984203785603****</Uid>\\n            <RoleIdList>\\n                <RoleIds>3</RoleIds>\\n                <RoleIds>1</RoleIds>\\n            </RoleIdList>\\n            <MaxResultCount>10000</MaxResultCount>\\n            <State>NORMAL</State>\\n            <UserId>12****</UserId>\\n            <CurExecuteCount>0</CurExecuteCount>\\n            <ParentUid>140692647406****</ParentUid>\\n        </User>\\n        <User>\\n            <NotificationMode/>\\n            <Email>username@example.com</Email>\\n            <RoleNameList>\\n                <RoleNames>USER</RoleNames>\\n                <RoleNames>ADMIN</RoleNames>\\n            </RoleNameList>\\n            <NickName>test_NickName</NickName>\\n            <MaxExecuteCount>2000</MaxExecuteCount>\\n            <CurResultCount>0</CurResultCount>\\n            <LastLoginTime>2021-07-09 18:48:57</LastLoginTime>\\n            <Uid>167382665015****</Uid>\\n            <RoleIdList>\\n                <RoleIds>1</RoleIds>\\n                <RoleIds>3</RoleIds>\\n            </RoleIdList>\\n            <MaxResultCount>10000</MaxResultCount>\\n            <State>NORMAL</State>\\n            <UserId>8****</UserId>\\n            <CurExecuteCount>0</CurExecuteCount>\\n            <Webhook>http://****.aliyun.com:8080</Webhook>\\n            <SignatureMethod>HMAC_SHA1</SignatureMethod>\\n            <DingRobot>https://****.dingtalk.com/robot/send?access_token=9b7a4a562cbe7fcdea9962afac7b9d7b4504d564948083419750f9cafa78****</DingRobot>\\n            <ParentUid>140692647406****</ParentUid>\\n        </User>\\n    </UserList>\\n    <Success>true</Success>\\n</ListUsersResponse>","errorExample":""}]',
      'title' => '获取用户详情列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetUser' => 
    array (
      'summary' => '获取特定的用户信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'Uid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户UID。您可以通过DMS控制台右上角头像处查看您的UID。',
            'type' => 'string',
            'required' => false,
            'example' => '22973492647626****',
          ),
        ),
        2 => 
        array (
          'name' => 'UserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户ID，可通过调用接口[ListUsers](~~141938~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => '51****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'User' => 
              array (
                'description' => '用户信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'State' => 
                  array (
                    'description' => '用户状态，返回值说明如下：
- **NORMAL**：正常
- **DISABLE**：禁用
- **DELETE**：已删除',
                    'type' => 'string',
                    'example' => 'NORMAL',
                  ),
                  'CurResultCount' => 
                  array (
                    'description' => '当天查询行数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '28',
                  ),
                  'UserId' => 
                  array (
                    'description' => '用户ID。',
                    'type' => 'string',
                    'example' => '51****',
                  ),
                  'LastLoginTime' => 
                  array (
                    'description' => '最后登录控制台时间。',
                    'type' => 'string',
                    'example' => '2021-11-08 11:26:21',
                  ),
                  'MaxResultCount' => 
                  array (
                    'description' => '当天最高查询行数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '10000',
                  ),
                  'ParentUid' => 
                  array (
                    'description' => '主账号UID。
>同一主账号UID下包含多个子账号UID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '140692647406****',
                  ),
                  'RoleIdList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'RoleIds' => 
                      array (
                        'description' => '角色ID列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '角色ID列表，具体角色ID的返回值说明如下：
- **1**：表示角色为普通用户。
- **2**：表示角色为DBA。
- **3**：表示角色为管理员。
- **4**：表示角色为安全管理员。
- **6**：表示角色为结构只读。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                  'RoleNameList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'RoleNames' => 
                      array (
                        'description' => '角色名称列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '角色名称列表，具体的角色名称返回值说明如下：
- **USER**：普通用户
- **DBA**：DBA
- **ADMIN**：管理员
- **SECURITY_ADMIN**：安全管理员
- **STRUCT\\_READ\\_ONLY**：结构只读',
                          'type' => 'string',
                          'example' => 'USER',
                        ),
                      ),
                    ),
                  ),
                  'NickName' => 
                  array (
                    'description' => '用户昵称。',
                    'type' => 'string',
                    'example' => 'User_NickName',
                  ),
                  'MaxExecuteCount' => 
                  array (
                    'description' => '当天最高查询次数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2000',
                  ),
                  'CurExecuteCount' => 
                  array (
                    'description' => '当天查询次数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '3',
                  ),
                  'Mobile' => 
                  array (
                    'description' => '用户手机号码。

> - 如果您已经在控制台界面右上角头像处的**通知**里配置过手机号码，此处将返回。
> - 如果您没有配置过手机号码，此处则没有返回。',
                    'type' => 'string',
                    'example' => '1389223****',
                  ),
                  'Uid' => 
                  array (
                    'description' => '目标用户UID。',
                    'type' => 'string',
                    'example' => '22275482072787****',
                  ),
                  'Email' => 
                  array (
                    'description' => '电子邮箱，用于接收消息通知。

> - 如果您已经在控制台界面右上角头像处的**通知**里配置过电子邮箱，此处将返回。
> - 如果您没有配置过电子邮箱，此处则没有返回。',
                    'type' => 'string',
                    'example' => 'Uesr_email',
                  ),
                  'DingRobot' => 
                  array (
                    'description' => '钉钉机器人，用于接收消息通知。

> - 如果您已经在控制台界面右上角头像处的**通知**里配置过钉钉机器人，此处将返回。
> - 如果您没有配置过钉钉机器人，此处则没有返回。',
                    'type' => 'string',
                    'example' => 'https://XXX.dingtalk.com/robot/send?access_token=***',
                  ),
                  'Webhook' => 
                  array (
                    'description' => 'Webhook，用于接收消息通知。

> - 如果您已经配置过Webhook，当DMS中有消息通知时，系统会将消息通知发送到您指定的URL地址。
> - 如果您没有配置过，此处则没有返回。',
                    'type' => 'string',
                    'example' => 'http://dms-XXX.aliyun.com:8***',
                  ),
                  'SignatureMethod' => 
                  array (
                    'description' => 'Webhook签名方式。返回值说明如下：
- **NONE**：不签名
- **HMAC\\_SHA1**：HMAC\\_SHA1',
                    'type' => 'string',
                    'example' => 'NONE',
                  ),
                  'NotificationMode' => 
                  array (
                    'description' => '消息通知方式，返回值可能为多个值，单个返回值说明如下：

- **SMS**：短信
- **EMAIL**：电子邮箱
- **DINGDING**：钉钉
- **DINGROBOT**：钉钉机器人
- **WEBHOOK**：Webhook',
                    'type' => 'string',
                    'example' => 'EMAIL',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '804BB128-CAFA-5DD0-BA1E-43DDE488****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Unknown server error',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"User\\": {\\n    \\"State\\": \\"NORMAL\\",\\n    \\"CurResultCount\\": 28,\\n    \\"UserId\\": \\"51****\\",\\n    \\"LastLoginTime\\": \\"2021-11-08 11:26:21\\",\\n    \\"MaxResultCount\\": 10000,\\n    \\"ParentUid\\": 0,\\n    \\"RoleIdList\\": {\\n      \\"RoleIds\\": [\\n        1\\n      ]\\n    },\\n    \\"RoleNameList\\": {\\n      \\"RoleNames\\": [\\n        \\"USER\\"\\n      ]\\n    },\\n    \\"NickName\\": \\"User_NickName\\",\\n    \\"MaxExecuteCount\\": 2000,\\n    \\"CurExecuteCount\\": 3,\\n    \\"Mobile\\": \\"1389223****\\",\\n    \\"Uid\\": \\"22275482072787****\\",\\n    \\"Email\\": \\"Uesr_email\\",\\n    \\"DingRobot\\": \\"https://XXX.dingtalk.com/robot/send?access_token=***\\",\\n    \\"Webhook\\": \\"http://dms-XXX.aliyun.com:8***\\",\\n    \\"SignatureMethod\\": \\"NONE\\",\\n    \\"NotificationMode\\": \\"EMAIL\\"\\n  },\\n  \\"RequestId\\": \\"804BB128-CAFA-5DD0-BA1E-43DDE488****\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"Unknown server error\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetUserResponse>\\n    <User>\\n        <NotificationMode/>\\n        <Email>Uesr_email</Email>\\n        <RoleNameList>\\n            <RoleNames>USER</RoleNames>\\n            <RoleNames>ADMIN</RoleNames>\\n        </RoleNameList>\\n        <NickName>User_NickName</NickName>\\n        <MaxExecuteCount>2000</MaxExecuteCount>\\n        <CurResultCount>28</CurResultCount>\\n        <LastLoginTime>2021-11-09 13:39:21</LastLoginTime>\\n        <Uid>22275482072787****</Uid>\\n        <RoleIdList>\\n            <RoleIds>1</RoleIds>\\n            <RoleIds>3</RoleIds>\\n        </RoleIdList>\\n        <MaxResultCount>10000</MaxResultCount>\\n        <State>NORMAL</State>\\n        <UserId>51****</UserId>\\n        <CurExecuteCount>3</CurExecuteCount>\\n        <ParentUid>140692647406****</ParentUid>\\n    </User>\\n    <RequestId>804BB128-CAFA-5DD0-BA1E-43DDE488****</RequestId>\\n    <Success>true</Success>\\n</GetUserResponse>","errorExample":""}]',
      'title' => '获取用户信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetUserActiveTenant' => 
    array (
      'summary' => '获取当前所处的租户信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Tenant' => 
              array (
                'description' => '租户信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Status' => 
                  array (
                    'description' => '租户状态，返回值如下：

- **ACTIVE**：活跃，表示用户正处于当前租户下。
- **IN_ACTIVE**：非活跃。',
                    'type' => 'string',
                    'example' => 'ACTIVE',
                  ),
                  'Tid' => 
                  array (
                    'description' => '租户ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '3***',
                  ),
                  'TenantName' => 
                  array (
                    'description' => '租户名称。',
                    'type' => 'string',
                    'example' => 'test_name',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4B63CAC5-BD7F-5C7C-82C9-59DFFBC3C5C2',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'TenantNotExist',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified tenant does not exist.',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：

- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Tenant\\": {\\n    \\"Status\\": \\"ACTIVE\\",\\n    \\"Tid\\": 0,\\n    \\"TenantName\\": \\"test_name\\"\\n  },\\n  \\"RequestId\\": \\"4B63CAC5-BD7F-5C7C-82C9-59DFFBC3C5C2\\",\\n  \\"ErrorCode\\": \\"TenantNotExist\\",\\n  \\"ErrorMessage\\": \\"The specified tenant does not exist.\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetUserActiveTenantResponse>\\n    <Tenant>\\n        <Status>ACTIVE</Status>\\n        <TenantName>test_name</TenantName>\\n        <Tid>3***</Tid>\\n    </Tenant>\\n    <RequestId>4B63CAC5-BD7F-5C7C-82C9-59DFFBC3****</RequestId>\\n    <Success>true</Success>\\n</GetUserActiveTenantResponse>","errorExample":""}]',
      'title' => '获取当前所处的租户信息',
    ),
    'ListUserTenants' => 
    array (
      'summary' => '获取当前的租户列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C478D9DA-3615-50F6-A2BC-7855AD65****',
              ),
              'TenantList' => 
              array (
                'description' => '租户信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '租户信息列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Status' => 
                    array (
                      'description' => '租户状态，返回值如下：

- **ACTIVE**：活跃，表示用户正处于当前租户下。
- **IN_ACTIVE**：非活跃。',
                      'type' => 'string',
                      'example' => 'ACTIVE',
                    ),
                    'Tid' => 
                    array (
                      'description' => '租户ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3***',
                    ),
                    'TenantName' => 
                    array (
                      'description' => '租户名称。',
                      'type' => 'string',
                      'example' => 'test_name',
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'TenantNotExist',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'The specified tenant does not exist.',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C478D9DA-3615-50F6-A2BC-7855AD65****\\",\\n  \\"TenantList\\": [\\n    {\\n      \\"Status\\": \\"ACTIVE\\",\\n      \\"Tid\\": 0,\\n      \\"TenantName\\": \\"test_name\\"\\n    }\\n  ],\\n  \\"ErrorCode\\": \\"TenantNotExist\\",\\n  \\"ErrorMessage\\": \\"The specified tenant does not exist.\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListUserTenantsResponse>\\n    <RequestId>C478D9DA-3615-50F6-A2BC-7855AD65****</RequestId>\\n    <TenantList>\\n        <Status>ACTIVE</Status>\\n        <TenantName>test_name</TenantName>\\n        <Tid>3***</Tid>\\n    </TenantList>\\n    <Success>true</Success>\\n</ListUserTenantsResponse>","errorExample":""}]',
      'title' => '获取当前的租户列表',
    ),
    'RegisterUser' => 
    array (
      'summary' => '录入本企业的新用户。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'Uid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '需要录入用户的阿里云Uid',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '12345678',
          ),
        ),
        2 => 
        array (
          'name' => 'UserNick',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户昵称',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'dmstest',
          ),
        ),
        3 => 
        array (
          'name' => 'RoleNames',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户角色，取值和说明如下：
- **USER**：普通用户
- **DBA**：DBA
- **ADMIN**：管理员
- **SECURITY_ADMIN**：安全管理员

> 为空则初始化为“普通用户”，可选”普通用户”、”DBA”、”管理员”、”安全管理员”四个的任意组合，组合多个角色，传递时用*英文逗号*拼接。',
            'type' => 'string',
            'required' => false,
            'example' => 'USER,DBA',
          ),
        ),
        4 => 
        array (
          'name' => 'Mobile',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '电话。',
            'type' => 'string',
            'required' => false,
            'example' => '130000000xx',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求唯一ID',
                'type' => 'string',
                'example' => '34E01EDD-6A16-4CF0-9541-C644D1BE01AA',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码',
                'type' => 'string',
                'example' => '403',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息',
                'type' => 'string',
                'example' => 'The specified user already exists.',
              ),
              'Success' => 
              array (
                'description' => '- true：录入成功
- false：录入失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"34E01EDD-6A16-4CF0-9541-C644D1BE01AA\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"ErrorMessage\\": \\"The specified user already exists.\\",\\n  \\"Success\\": true\\n}","errorExample":"{\\n    \\"RequestId\\": \\"34E01EDD-6A16-4CF0-9541-C644D1BE01AA\\",\\n    \\"HostId\\": \\"dms-enterprise.aliyuncs.com\\",\\n    \\"Code\\": \\"UserExisted\\",\\n    \\"Message\\": \\"The specified user already exists.\\"\\n}"},{"type":"xml","example":"<RegisterUserResponse>\\n    <RequestId>ADE24A7C-DB8B-4D32-94AD-E50E3B921197</RequestId>\\n    <Success>true</Success>\\n</RegisterUserResponse>\\n","errorExample":"<Error>\\n    <RequestId>ADE24A7C-DB8B-4D32-94AD-E50E3B921197</RequestId>\\n    <HostId>dms-enterprise.aliyuncs.com</HostId>\\n    <Code>UserExisted</Code>\\n    <Message>The specified user already exists.</Message>\\n</Error>"}]',
      'title' => '录入新用户',
      'description' => 'DMS企业版用户的**管理员**（即产品内【系统管理】-【用户管理】中的管理员角色的用户）都可以通过这个接口增加录入本企业的新用户。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'AddInstance' => 
    array (
      'summary' => '调用该API可以实现将您的数据库实例录入至DMS中，同时，可以为实例开启安全托管能力。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '201773',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdms19SL1H',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自DMS控制台页面右上角头像处悬停展示的租户ID信息。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '23****',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库类型，取值请参见[DbType参数说明](~~198106~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'MySQL',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例来源，取值如下：

- **PUBLIC_OWN**：表示公网自建实例。
- **RDS**：表示RDS实例。
- **ECS_OWN**：表示ECS自建实例。
- **VPC_IDC**：表示VPC IDC自建实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RDS',
          ),
        ),
        3 => 
        array (
          'name' => 'NetworkType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络类型，取值如下：

- **CLASSIC**：经典网络
- **VPC**：VPC网络
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        4 => 
        array (
          'name' => 'EnvType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境类型，取值如下：
- **product**：生产环境
- **dev**：开发环境
- **pre**：预发环境
- **test**：测试环境
- **sit**：SIT环境
- **uat**：UAT环境
- **pet**：压测环境
- **stag**：STAG环境',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'product',
          ),
        ),
        5 => 
        array (
          'name' => 'EcsInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS的实例ID。

> 如果InstanceSource取值为ECS_OWN，此值必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-2zei9gs1t7h8l7ac****',
          ),
        ),
        6 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例VPC ID。

> 如果InstanceSource取值为VPC_IDC时，此值必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-2zef4o1hu7ljd****',
          ),
        ),
        7 => 
        array (
          'name' => 'EcsRegion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS实例所在地域。

> 如果InstanceSource取值为RDS、ECS\\_OWN或VPC\\_IDC，此值必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        8 => 
        array (
          'name' => 'Host',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标数据库的主机地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '172.XX.XXX.254',
          ),
        ),
        9 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库的连接端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '3306',
          ),
        ),
        10 => 
        array (
          'name' => 'Sid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例Sid。

> 如果InstanceType为ORACLE，此项必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'testSid',
          ),
        ),
        11 => 
        array (
          'name' => 'DatabaseUser',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库账号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'testsdb',
          ),
        ),
        12 => 
        array (
          'name' => 'DatabasePassword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库密码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test***',
          ),
        ),
        13 => 
        array (
          'name' => 'InstanceAlias',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例别名，帮助用户快速区分定位该实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '测试实例',
          ),
        ),
        14 => 
        array (
          'name' => 'DbaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例DBA角色的用户ID，可调用接口[ListUsers](~~141938~~)或[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '27****',
          ),
        ),
        15 => 
        array (
          'name' => 'QueryTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询超时时间，单位：s（秒）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '7200',
          ),
        ),
        16 => 
        array (
          'name' => 'ExportTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '导出超时时间，单位：s（秒）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '86400',
          ),
        ),
        17 => 
        array (
          'name' => 'EnableSellTrust',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '- Y：开启安全托管模式
- NULL或其它：不开启安全托管模式',
            'description' => '实例是否需要开启安全托管。
- Y：开启安全托管模式。
- NULL或其它：不开启安全托管模式。',
            'type' => 'string',
            'required' => true,
            'example' => 'Y',
          ),
        ),
        18 => 
        array (
          'name' => 'EnableSellStable',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '- Y：开启稳定变更
- NULL或其它：不开启稳定变更',
            'description' => '实例是否需要开通稳定变更功能。
- Y：开通。
- NULL或其它：不开通。',
            'type' => 'string',
            'required' => false,
            'example' => 'NULL',
          ),
        ),
        19 => 
        array (
          'name' => 'EnableSellCommon',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '- Y：开启安全协同
- NULL或其它：不开启安全协同',
            'description' => '实例是否需要开通安全协同功能。
- Y：开启。
- NULL或其它：不开启。',
            'type' => 'string',
            'required' => false,
            'example' => 'Y',
          ),
        ),
        20 => 
        array (
          'name' => 'SafeRule',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '仅在开启安全协同后有效，实例的安全规则集（GroupName），可通过调用接口ListStandardGroups或GetInstance获取该参数的值。',
            'description' => '若您需要开通安全协同功能包，则需要为该实例设置安全规则集（GroupName）。您可调用[ListStandardGroups](~~465940~~)或[GetInstance](~~465826~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => '金融线-生产',
          ),
        ),
        21 => 
        array (
          'name' => 'EnableSellSitd',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '- Y：开启敏感数据保护
- NULL或其它：不开启敏感数据保护',
            'description' => '是否需要为该实例开启敏感数据保护功能。
- Y：开启。
- NULL或其它：不开启。',
            'type' => 'string',
            'required' => false,
            'example' => 'Y',
          ),
        ),
        22 => 
        array (
          'name' => 'DataLinkName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '输入跨库查询datalink名称。

> - 如果UseDsql取值为1，此值必填。
> - DBLink名称只能使用小写字母和下划线（_）。
>- DBLink名称需要在租户内保持全局唯一性。',
            'type' => 'string',
            'required' => false,
            'example' => 'dblink_test',
          ),
        ),
        23 => 
        array (
          'name' => 'DdlOnline',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启DMS结构变更优先，取值如下：
- **0** ：不使用。
- **1** ：原生Online DDL优先。
- **2** ：DMS无锁表结构变更优先。

> 支持的数据库类型：RDS MySQL、PolarDB MySQL引擎、MyBase MySQL、其他来源MySQL。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
            'enum' => 
            array (
              0 => '0',
              1 => '1',
              2 => '2',
            ),
          ),
        ),
        24 => 
        array (
          'name' => 'UseDsql',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用跨实例查询，取值如下：
- **0**：不开启。
- **1**：开启。

> 支持的数据库类型：MySQL、SQL Server、PostgreSQL、PolarDB O引擎、Redis。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'enum' => 
            array (
              0 => '0',
              1 => '1',
            ),
          ),
        ),
        25 => 
        array (
          'name' => 'SkipTest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例是否忽略测试连通性。取值如下：
- **true**：忽略。
- **false**：不忽略。',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'false',
          ),
        ),
        26 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分类分级模板ID，可从ListClassificationTemplates获取',
            'description' => '分类分级模板ID。您可调用[ListClassificationTemplates](~~465947~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '31***',
          ),
        ),
        27 => 
        array (
          'name' => 'TemplateType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分类分级模板类型，可从ListClassificationTemplates获取',
            'description' => '分类分级模板类型。您可调用[ListClassificationTemplates](~~465947~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'INNER',
          ),
        ),
        28 => 
        array (
          'name' => 'UseSsl',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '选择是否开启SSL连接，开启后，DMS将通过SSL连接到数据库。使用该参数的前提是数据库已开启SSL连接，当前支持如下选项：

- **0**：默认值（DMS与数据库服务自动协商是否开启）系统将自动识别目标数据库是否已开启SSL连接，若数据库已开启SSL连接，则DMS将通过SSL连接数据库；若数据库未开启SSL连接，则通过普通方式进行连接。
- **1**：开启SSL连接。若数据库未开启SSL连接，则该参数无效。
- **-1**：关闭SSL连接。

> - 该配置项仅在数据库为MySQL或Redis时出现。
> - SSL（Secure Sockets Layer）能在传输层对网络连接进行加密，提升通信数据的安全性和完整性，但会增加网络连接响应时间。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '1',
            'minimum' => '-1',
            'example' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '录入数据库实例',
      'description' => '系统角色为DBA或管理员。查看系统角色的操作，请参见[查看我的系统角色](~~324212~~)。',
    ),
    'ModifyInstance' => 
    array (
      'summary' => '当您需要修改实例的托管模式、数据库账密、功能包等基本信息，及环境类型、实例在DMS的名称、查询和导出数据的超时时间等高级信息时，可调用该API。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '201929',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdms19SL1H',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可调用[ListInstances](~~141936~~)或[GetInstance](~~141567~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'example' => '183****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自DMS控制台页面右上角头像处悬停展示的租户ID信息。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '23****
',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库类型，取值请参见[DbType参数说明](~~198106~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'MySQL',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例来源，取值如下：

- **PUBLIC_OWN**：表示公网自建实例。
- **RDS**：表示RDS实例。
- **ECS_OWN**：表示ECS自建实例。
- **VPC_IDC**：表示VPC IDC自建实例。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'RDS',
          ),
        ),
        4 => 
        array (
          'name' => 'NetworkType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络类型，取值如下：

- **CLASSIC**：经典网络。
- **VPC**：VPC网络。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'VPC',
          ),
        ),
        5 => 
        array (
          'name' => 'EnvType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境类型，取值如下：
- **product**：生产环境。
- **dev**：开发环境。
- **pre**：预发环境。
- **test**：测试环境。
- **sit**：SIT环境。
- **uat**：UAT环境。
- **pet**：压测环境。
- **stag**：STAG环境。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'dev',
          ),
        ),
        6 => 
        array (
          'name' => 'EcsInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS的实例ID。

> 如果InstanceSource取值为ECS_OWN，此值必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-2zei9gs1t7h8l7ac****',
          ),
        ),
        7 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例VPC ID。

> 如果InstanceSource取值为VPC_IDC时，此值必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-bp10wnlcmor****',
          ),
        ),
        8 => 
        array (
          'name' => 'EcsRegion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所在地域。

> 如果InstanceSource取值为RDS、ECS\\_OWN或VPC\\_IDC，此值必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        9 => 
        array (
          'name' => 'Host',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例连接地址。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '192.XXX.0.56',
          ),
        ),
        10 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例访问端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '3306',
          ),
        ),
        11 => 
        array (
          'name' => 'Sid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例Sid。

> 如果InstanceType为ORACLE，此项必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'testSid',
          ),
        ),
        12 => 
        array (
          'name' => 'DatabaseUser',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库账号。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'testsdb
',
          ),
        ),
        13 => 
        array (
          'name' => 'DatabasePassword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库密码。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'test***
',
          ),
        ),
        14 => 
        array (
          'name' => 'InstanceAlias',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例别名，帮助用户快速区分定位该实例。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'instance_test',
          ),
        ),
        15 => 
        array (
          'name' => 'DbaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例DBA角色的用户ID，可调用接口[ListUsers](~~141938~~)或[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '27****',
          ),
        ),
        16 => 
        array (
          'name' => 'QueryTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询超时时间，单位：s（秒）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '7200',
          ),
        ),
        17 => 
        array (
          'name' => 'ExportTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '导出超时时间，单位：s（秒）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '86400',
          ),
        ),
        18 => 
        array (
          'name' => 'EnableSellTrust',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '- Y：开启安全托管模式
- NULL或其它：不开启安全托管模式',
            'description' => '实例是否需要开启安全托管。

- Y：开启安全托管模式。
- NULL或其它：不开启安全托管模式。',
            'type' => 'string',
            'required' => false,
            'example' => 'Y',
          ),
        ),
        19 => 
        array (
          'name' => 'EnableSellStable',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '- Y：开启稳定变更
- NULL或其它：不开启稳定变更',
            'description' => '实例是否需要开通稳定变更功能。

- Y：开通。
- NULL或其它：不开通。',
            'type' => 'string',
            'required' => false,
            'example' => 'NULL',
          ),
        ),
        20 => 
        array (
          'name' => 'EnableSellCommon',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '- Y：开启安全协同
- NULL或其它：不开启安全协同',
            'description' => '实例是否需要开通安全协同功能。

- Y：开启。
- NULL或其它：不开启。',
            'type' => 'string',
            'required' => false,
            'example' => 'Y',
          ),
        ),
        21 => 
        array (
          'name' => 'SafeRule',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '仅在开启安全协同后有效，实例的安全规则集（GroupName），可通过调用接口ListStandardGroups或GetInstance获取该参数的值。',
            'description' => '若您需要开通安全协同功能包，则需要为该实例设置安全规则集（GroupName）。您可调用[ListStandardGroups](~~465940~~)或[GetInstance](~~465826~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '金融线-生产',
          ),
        ),
        22 => 
        array (
          'name' => 'EnableSellSitd',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '- Y：开启敏感数据保护
- NULL或其它：不开启敏感数据保护',
            'description' => '是否需要为该实例开启敏感数据保护功能。
- Y：开启敏感数据保护。
- NULL或其它：不开启敏感数据保护。',
            'type' => 'string',
            'required' => false,
            'example' => 'Y',
          ),
        ),
        23 => 
        array (
          'name' => 'DataLinkName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '输入跨库查询datalink名称。

> - 如果UseDsql取值为1，此值必填。
> - DBLink名称只能使用小写字母和下划线（_）。
>- DBLink名称需要在租户内保持全局唯一性。',
            'type' => 'string',
            'required' => false,
            'example' => 'dblink_test',
          ),
        ),
        24 => 
        array (
          'name' => 'DdlOnline',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启结构变更优先，取值如下：
- **0** ：不使用。
- **1** ：原生Online DDL优先。
- **2** ：DMS无锁表结构变更优先。

> 支持的数据库类型：RDS MySQL、PolarDB MySQL引擎、MyBase MySQL、其他来源MySQL。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
            'enum' => 
            array (
              0 => '0',
              1 => '1',
              2 => '2',
            ),
          ),
        ),
        25 => 
        array (
          'name' => 'UseDsql',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用跨实例查询，取值如下：
- **0**：不开启。
- **1**：开启。

> 支持的数据库类型：MySQL、SQL Server、PostgreSQL、PolarDB O引擎、Redis。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'enum' => 
            array (
              0 => '0',
              1 => '1',
            ),
          ),
        ),
        26 => 
        array (
          'name' => 'SkipTest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例是否忽略测试连通性。取值如下：
- **true**：忽略。
- **false**：不忽略。',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'false',
          ),
        ),
        27 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分类分级模板ID，可从ListClassificationTemplates获取',
            'description' => '分类分级模板ID。您可调用[ListClassificationTemplates](~~465947~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '31***',
          ),
        ),
        28 => 
        array (
          'name' => 'TemplateType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分类分级模板类型，可从ListClassificationTemplates获取',
            'description' => '分类分级模板类型。您可调用[ListClassificationTemplates](~~465947~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'INNER',
          ),
        ),
        29 => 
        array (
          'name' => 'UseSsl',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '',
            'description' => '选择是否开启SSL连接，开启后，DMS将通过SSL连接到数据库。使用该参数的前提是数据库已开启SSL连接，当前支持如下选项：

- **0**：默认值（DMS与数据库服务自动协商是否开启）系统将自动识别目标数据库是否已开启SSL连接，若数据库已开启SSL连接，则DMS将通过SSL连接数据库；若数据库未开启SSL连接，则通过普通方式进行连接。
- **1**：开启SSL连接。若数据库未开启SSL连接，则该参数无效。
- **-1**：关闭SSL连接。

> - 该配置项仅在数据库为MySQL或Redis时出现。
> - SSL（Secure Sockets Layer）能在传输层对网络连接进行加密，提升通信数据的安全性和完整性，但会增加网络连接响应时间。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '1',
            'minimum' => '-1',
            'example' => '0',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。

',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '修改实例信息',
    ),
    'ListInstances' => 
    array (
      'summary' => '调用ListInstances接口，获取实例信息列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'SearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键字。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'DbType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库类型，取值请参见[DbType参数说明](~~198106~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'MySQL',
          ),
        ),
        3 => 
        array (
          'name' => 'EnvType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境类型，取值如下：
- **product**：生产环境
- **dev**：开发环境
- **pre**：预发环境
- **test**：测试环境
- **sit**：SIT环境
- **uat**：UAT环境
- **pet**：压测环境
- **stag**：STAG环境',
            'type' => 'string',
            'required' => false,
            'example' => 'product',
          ),
        ),
        4 => 
        array (
          'name' => 'InstanceSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例来源，取值如下：

- **PUBLIC_OWN**：代表公网自建实例
- **RDS**：代表RDS实例
- **ECS_OWN**：代表ECS自建实例
- **VPC_IDC**：代表VPC IDC自建实例',
            'type' => 'string',
            'required' => false,
            'example' => 'RDS',
          ),
        ),
        5 => 
        array (
          'name' => 'NetType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例网络类型，取值如下：
- **CLASSIC**：经典网络
- **VPC**：VPC网络',
            'type' => 'string',
            'required' => false,
            'example' => 'VPC',
          ),
        ),
        6 => 
        array (
          'name' => 'InstanceState',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例状态，取值如下：
- **NORMAL**：正常使用
- **DISABLE**：禁用',
            'type' => 'string',
            'required' => false,
            'example' => 'NORMAL',
          ),
        ),
        7 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页多少条数据，取值不超过100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '50',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '描述。',
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '满足条件的实例总个数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B4B07137-F6AE-4756-8474-7F92BB6C4E04',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'InstanceList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Instance' => 
                  array (
                    'description' => '实例列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '实例信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'VpcId' => 
                        array (
                          'description' => '实例所属VPC的ID。',
                          'type' => 'string',
                          'example' => 'vpc-o6wrloqsdqc9io3mg****',
                        ),
                        'DatabaseUser' => 
                        array (
                          'description' => '数据库用户名。',
                          'type' => 'string',
                          'example' => 'dbUser',
                        ),
                        'DbaId' => 
                        array (
                          'description' => '实例DBA ID。',
                          'type' => 'string',
                          'example' => '31****',
                        ),
                        'UseDsql' => 
                        array (
                          'description' => '实例是否开启跨库查询：

- **0**：不开启
- **1**：开启',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Port' => 
                        array (
                          'description' => '实例连接端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3306',
                        ),
                        'EcsInstanceId' => 
                        array (
                          'description' => '实例ECS ID。',
                          'type' => 'string',
                          'example' => '150****',
                        ),
                        'EnvType' => 
                        array (
                          'description' => '实例环境类型，返回值如下：
- **product**：生产环境
- **dev**：开发环境
- **pre**：预发环境
- **test**：测试环境
- **sit**：SIT环境
- **uat**：UAT环境
- **pet**：压测环境
- **stag**：STAG环境',
                          'type' => 'string',
                          'example' => 'product',
                        ),
                        'Sid' => 
                        array (
                          'description' => '实例Sid。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'OwnerIdList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerIds' => 
                            array (
                              'description' => '实例Owner UserId列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '实例Owner UserId。',
                                'type' => 'string',
                                'example' => '12****',
                              ),
                            ),
                          ),
                        ),
                        'SafeRuleId' => 
                        array (
                          'description' => '实例安全规则ID。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'OwnerNameList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerNames' => 
                            array (
                              'description' => '实例Owner昵称列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '实例Owner昵称。',
                                'type' => 'string',
                                'example' => 'yuyang_test',
                              ),
                            ),
                          ),
                        ),
                        'DbaNickName' => 
                        array (
                          'description' => '实例DBA昵称。',
                          'type' => 'string',
                          'example' => 'dbaName',
                        ),
                        'QueryTimeout' => 
                        array (
                          'description' => '实例查询超时时间。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '60',
                        ),
                        'InstanceSource' => 
                        array (
                          'description' => '实例来源。',
                          'type' => 'string',
                          'example' => 'RDS',
                        ),
                        'Host' => 
                        array (
                          'description' => '实例连接地址。',
                          'type' => 'string',
                          'example' => '****.mysql.rds.aliyuncs.com',
                        ),
                        'State' => 
                        array (
                          'description' => '实例状态。',
                          'type' => 'string',
                          'example' => 'NORMAL',
                        ),
                        'DataLinkName' => 
                        array (
                          'description' => 'DataLink名称。',
                          'type' => 'string',
                          'example' => 'dblink_test',
                        ),
                        'ExportTimeout' => 
                        array (
                          'description' => '导出超时时间。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '86400',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => '150***',
                        ),
                        'InstanceType' => 
                        array (
                          'description' => '实例DB类型。',
                          'type' => 'string',
                          'example' => 'mysql',
                        ),
                        'DatabasePassword' => 
                        array (
                          'description' => '数据库用户密码。',
                          'type' => 'string',
                          'example' => '******',
                        ),
                        'InstanceAlias' => 
                        array (
                          'description' => '实例别名。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'DdlOnline' => 
                        array (
                          'description' => '实例DdlOnline配置。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'EcsRegion' => 
                        array (
                          'description' => '实例所属地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'StandardGroup' => 
                        array (
                          'description' => '实例对应的管控模式信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'GroupName' => 
                            array (
                              'description' => '管控模式对应的安全规则名称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'GroupMode' => 
                            array (
                              'description' => '管控模式类型，取值如下：
- **COMMON**：安全协同模式
- **NONE_CONTROL**： 自由操作模式
- **STABLE**：稳定变更模式',
                              'type' => 'string',
                              'example' => 'COMMON',
                            ),
                          ),
                        ),
                        'SellSitd' => 
                        array (
                          'title' => '为true，敏感数据保护开启，否则未开启',
                          'description' => '敏感数据保护是否开启，取值：

- **true**：开启

- **false**：关闭',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功：

- **true**：执行成功。
- **false**：执行失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"B4B07137-F6AE-4756-8474-7F92BB6C4E04\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"InstanceList\\": {\\n    \\"Instance\\": [\\n      {\\n        \\"VpcId\\": \\"vpc-o6wrloqsdqc9io3mg****\\",\\n        \\"DatabaseUser\\": \\"dbUser\\",\\n        \\"DbaId\\": \\"31****\\",\\n        \\"UseDsql\\": 1,\\n        \\"Port\\": 3306,\\n        \\"EcsInstanceId\\": \\"150****\\",\\n        \\"EnvType\\": \\"product\\",\\n        \\"Sid\\": \\"test\\",\\n        \\"OwnerIdList\\": {\\n          \\"OwnerIds\\": [\\n            \\"12****\\"\\n          ]\\n        },\\n        \\"SafeRuleId\\": \\"1\\",\\n        \\"OwnerNameList\\": {\\n          \\"OwnerNames\\": [\\n            \\"yuyang_test\\"\\n          ]\\n        },\\n        \\"DbaNickName\\": \\"dbaName\\",\\n        \\"QueryTimeout\\": 60,\\n        \\"InstanceSource\\": \\"RDS\\",\\n        \\"Host\\": \\"****.mysql.rds.aliyuncs.com\\",\\n        \\"State\\": \\"NORMAL\\",\\n        \\"DataLinkName\\": \\"dblink_test\\",\\n        \\"ExportTimeout\\": 86400,\\n        \\"InstanceId\\": \\"150***\\",\\n        \\"InstanceType\\": \\"mysql\\",\\n        \\"DatabasePassword\\": \\"******\\",\\n        \\"InstanceAlias\\": \\"test\\",\\n        \\"DdlOnline\\": 1,\\n        \\"EcsRegion\\": \\"cn-hangzhou\\",\\n        \\"StandardGroup\\": {\\n          \\"GroupName\\": \\"test\\",\\n          \\"GroupMode\\": \\"COMMON\\"\\n        },\\n        \\"SellSitd\\": true\\n      }\\n    ]\\n  },\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListInstancesResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>B4B07137-F6AE-4756-8474-7F92BB6C4E04</RequestId>\\n    <InstanceList>\\n        <VpcId>vpc-o6wrloqsdqc9io3mg****</VpcId>\\n        <DatabaseUser>dbUser</DatabaseUser>\\n        <DbaId>31****</DbaId>\\n        <UseDsql>1</UseDsql>\\n        <Port>3306</Port>\\n        <EcsInstanceId>150****</EcsInstanceId>\\n        <EnvType>product</EnvType>\\n        <Sid>test</Sid>\\n        <OwnerIdList>123453</OwnerIdList>\\n        <SafeRuleId>1</SafeRuleId>\\n        <OwnerNameList>yuyang_test</OwnerNameList>\\n        <DbaNickName>dbaName</DbaNickName>\\n        <QueryTimeout>60</QueryTimeout>\\n        <InstanceSource>RDS</InstanceSource>\\n        <Host>****.mysql.rds.aliyuncs.com</Host>\\n        <State>NORMAL</State>\\n        <DataLinkName>dblink_test</DataLinkName>\\n        <ExportTimeout>86400</ExportTimeout>\\n        <InstanceId>150***</InstanceId>\\n        <InstanceType>mysql</InstanceType>\\n        <DatabasePassword>******</DatabasePassword>\\n        <InstanceAlias>test</InstanceAlias>\\n        <DdlOnline>1</DdlOnline>\\n        <EcsRegion>cn-hangzhou</EcsRegion>\\n        <StandardGroup>\\n            <GroupName>test</GroupName>\\n            <GroupMode>COMMON</GroupMode>\\n        </StandardGroup>\\n        <SellSitd>true</SellSitd>\\n    </InstanceList>\\n    <Success>true</Success>\\n</ListInstancesResponse>","errorExample":""}]',
      'title' => '获取实例信息列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetInstance' => 
    array (
      'summary' => '获取实例详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '2***',
          ),
        ),
        1 => 
        array (
          'name' => 'Host',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例连接地址，可通过调用接口[ListInstances](~~141936~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '172.17.XXX.XXX',
          ),
        ),
        2 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例连接端口，可通过调用接口[ListInstances](~~141936~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '5432',
          ),
        ),
        3 => 
        array (
          'name' => 'Sid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例Sid，可调用接口[ListInstances](~~141936~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F6C80B69-3203-56AC-8021-18BA72A6F4E1',
              ),
              'Instance' => 
              array (
                'description' => '实例详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'VpcId' => 
                  array (
                    'description' => '实例所属VPC的ID。',
                    'type' => 'string',
                    'example' => 'vpc-o6wrloqsdqc9io3mg****',
                  ),
                  'DatabaseUser' => 
                  array (
                    'description' => '实例登录用户名。',
                    'type' => 'string',
                    'example' => 'dbuser',
                  ),
                  'DbaId' => 
                  array (
                    'description' => '实例DBA ID。',
                    'type' => 'string',
                    'example' => '29****',
                  ),
                  'UseDsql' => 
                  array (
                    'description' => '实例是否开启跨库查询：

- **0**：不开启
- **1**：开启',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'Port' => 
                  array (
                    'description' => '实例连接端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '5432',
                  ),
                  'EcsInstanceId' => 
                  array (
                    'description' => '实例ECS ID。',
                    'type' => 'string',
                    'example' => 'i-bp124ldpklqz59y3****',
                  ),
                  'EnvType' => 
                  array (
                    'description' => '实例环境类型，返回值如下：

- **product**：生产环境
- **dev**：开发环境
- **pre**：预发环境
- **test**：测试环境
- **sit**：SIT环境
- **uat**：UAT环境
- **pet**：压测环境
- **stag**：STAG环境

',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Sid' => 
                  array (
                    'description' => '实例Sid。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'OwnerIdList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'OwnerIds' => 
                      array (
                        'description' => '实例Owner UserId列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '实例Owner UserId。',
                          'type' => 'string',
                          'example' => '10****',
                        ),
                      ),
                    ),
                  ),
                  'SafeRuleId' => 
                  array (
                    'description' => '实例安全规则ID。',
                    'type' => 'string',
                    'example' => '3****',
                  ),
                  'OwnerNameList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'OwnerNames' => 
                      array (
                        'description' => '实例Owner昵称列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '实例Owner昵称。',
                          'type' => 'string',
                          'example' => 'yang_test',
                        ),
                      ),
                    ),
                  ),
                  'DbaNickName' => 
                  array (
                    'description' => '实例DBA昵称。',
                    'type' => 'string',
                    'example' => 'dbaname',
                  ),
                  'QueryTimeout' => 
                  array (
                    'description' => '实例查询超时时间。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '7200',
                  ),
                  'InstanceSource' => 
                  array (
                    'description' => '实例来源。',
                    'type' => 'string',
                    'example' => 'ECS_OWN',
                  ),
                  'Host' => 
                  array (
                    'description' => '实例连接地址。',
                    'type' => 'string',
                    'example' => '192.168.XXX.XXX',
                  ),
                  'State' => 
                  array (
                    'description' => '实例状态，返回值如下：

- **NORMAL**：正常使用
- **DISABLE**：禁用',
                    'type' => 'string',
                    'example' => 'NORMAL',
                  ),
                  'DataLinkName' => 
                  array (
                    'description' => '实例Datalink名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'ExportTimeout' => 
                  array (
                    'description' => '实例导出超时时间。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '86400',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => '188****',
                  ),
                  'InstanceType' => 
                  array (
                    'description' => '实例DB类型。',
                    'type' => 'string',
                    'example' => 'postgresql',
                  ),
                  'DatabasePassword' => 
                  array (
                    'description' => '数据库用户密码。',
                    'type' => 'string',
                    'example' => '******',
                  ),
                  'InstanceAlias' => 
                  array (
                    'description' => '实例别名。',
                    'type' => 'string',
                    'example' => '测试',
                  ),
                  'DdlOnline' => 
                  array (
                    'description' => '实例DdlOnline配置。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '0',
                  ),
                  'EcsRegion' => 
                  array (
                    'description' => '实例所属地域。',
                    'type' => 'string',
                    'example' => 'cn-beijing',
                  ),
                  'StandardGroup' => 
                  array (
                    'description' => '实例对应的管控模式信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'GroupName' => 
                      array (
                        'description' => '管控模式对应的安全规则名称。',
                        'type' => 'string',
                        'example' => '自由操作',
                      ),
                      'GroupMode' => 
                      array (
                        'description' => '管控模式类型，返回值如下：
- **COMMON**：安全协同模式
- **NONE_CONTROL**：自由操作模式
- **STABLE**：稳定变更模式',
                        'type' => 'string',
                        'example' => 'NONE_CONTROL',
                      ),
                    ),
                  ),
                  'SellSitd' => 
                  array (
                    'title' => '为true，敏感数据保护开启，否则未开启',
                    'description' => '敏感数据保护是否开启，取值：

- **true**：开启

- **false**：关闭',
                    'type' => 'string',
                    'example' => 'false',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F6C80B69-3203-56AC-8021-18BA72A6F4E1\\",\\n  \\"Instance\\": {\\n    \\"VpcId\\": \\"vpc-o6wrloqsdqc9io3mg****\\",\\n    \\"DatabaseUser\\": \\"dbuser\\",\\n    \\"DbaId\\": \\"29****\\",\\n    \\"UseDsql\\": 0,\\n    \\"Port\\": 5432,\\n    \\"EcsInstanceId\\": \\"i-bp124ldpklqz59y3****\\",\\n    \\"EnvType\\": \\"test\\",\\n    \\"Sid\\": \\"test\\",\\n    \\"OwnerIdList\\": {\\n      \\"OwnerIds\\": [\\n        \\"10****\\"\\n      ]\\n    },\\n    \\"SafeRuleId\\": \\"3****\\",\\n    \\"OwnerNameList\\": {\\n      \\"OwnerNames\\": [\\n        \\"yang_test\\"\\n      ]\\n    },\\n    \\"DbaNickName\\": \\"dbaname\\",\\n    \\"QueryTimeout\\": 7200,\\n    \\"InstanceSource\\": \\"ECS_OWN\\",\\n    \\"Host\\": \\"192.168.XXX.XXX\\",\\n    \\"State\\": \\"NORMAL\\",\\n    \\"DataLinkName\\": \\"test\\",\\n    \\"ExportTimeout\\": 86400,\\n    \\"InstanceId\\": \\"188****\\",\\n    \\"InstanceType\\": \\"postgresql\\",\\n    \\"DatabasePassword\\": \\"******\\",\\n    \\"InstanceAlias\\": \\"测试\\",\\n    \\"DdlOnline\\": 0,\\n    \\"EcsRegion\\": \\"cn-beijing\\",\\n    \\"StandardGroup\\": {\\n      \\"GroupName\\": \\"自由操作\\",\\n      \\"GroupMode\\": \\"NONE_CONTROL\\"\\n    },\\n    \\"SellSitd\\": \\"false\\"\\n  },\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetInstanceResponse>\\n    <RequestId>F6C80B69-3203-56AC-8021-18BA72A6F4E1</RequestId>\\n    <Instance>\\n        <Port>5432</Port>\\n        <DatabasePassword>******</DatabasePassword>\\n        <ExportTimeout>86400</ExportTimeout>\\n        <EnvType>test</EnvType>\\n        <DbaId>12****</DbaId>\\n        <InstanceAlias>测试</InstanceAlias>\\n        <EcsRegion>cn-beijing</EcsRegion>\\n        <InstanceType>postgresql</InstanceType>\\n        <QueryTimeout>7200</QueryTimeout>\\n        <DataLinkName>dbl_postgresql_2</DataLinkName>\\n        <SafeRuleId>3****</SafeRuleId>\\n        <SellSitd>false</SellSitd>\\n        <InstanceSource>ECS_OWN</InstanceSource>\\n        <StandardGroup>\\n            <GroupName>自由操作</GroupName>\\n            <GroupMode>NONE_CONTROL</GroupMode>\\n        </StandardGroup>\\n        <InstanceId>188****</InstanceId>\\n        <Host>172.17.XXX.XXX</Host>\\n        <DdlOnline>0</DdlOnline>\\n        <UseDsql>0</UseDsql>\\n        <EcsInstanceId>i-bp124ldpklqz59y3****</EcsInstanceId>\\n        <State>NORMAL</State>\\n        <DatabaseUser>postgres</DatabaseUser>\\n        <OwnerNameList>\\n            <OwnerNames>yang_test</OwnerNames>\\n        </OwnerNameList>\\n        <DbaNickName>dbaname</DbaNickName>\\n        <OwnerIdList>\\n            <OwnerIds>10****</OwnerIds>\\n        </OwnerIdList>\\n    </Instance>\\n    <Success>true</Success>\\n</GetInstanceResponse>","errorExample":""}]',
      'title' => '获取实例详细信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'DeleteInstance' => 
    array (
      'summary' => '调用deleteinstance接口，在DMS中删除指定实例。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'Host',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除的实例连接地址，可通过调用接口[ListInstances](~~141936~~)或[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'xxx.mysql.rds.aliyuncs.com',
          ),
        ),
        2 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除的实例链接端口，可通过调用接口[ListInstances](~~141936~~)或[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '3306',
          ),
        ),
        3 => 
        array (
          'name' => 'Sid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除的实例SID，可通过调用接口[ListInstances](~~141936~~)或[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'testSid',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B4B07137-F6AE-4756-8474-7F92BB6C4E04',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B4B07137-F6AE-4756-8474-7F92BB6C4E04\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteInstanceResponse>\\n    <RequestId>B4B07137-F6AE-4756-8474-7F92BB6C4E04</RequestId>\\n    <Success>true</Success>\\n</DeleteInstanceResponse>","errorExample":""}]',
      'title' => '删除指定实例',
      'description' => '注意：删除实例是指将实例从DMS实例列表中移除，不会导致您的实例被删除或下线。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RegisterInstance' => 
    array (
      'summary' => '在DMS中录入新的数据库实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库类型，取值请参见[DbType参数说明](~~198106~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'MySQL',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库实例来源，取值如下：

- **PUBLIC_OWN**：代表公网自建实例
- **RDS**：代表RDS实例
- **ECS_OWN**：代表ECS自建实例
- **VPC_IDC**：代表VPC IDC自建实例
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'RDS',
          ),
        ),
        3 => 
        array (
          'name' => 'NetworkType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '网络类型，取值如下：

- **CLASSIC**：经典网络
- **VPC**：VPC网络
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'VPC',
          ),
        ),
        4 => 
        array (
          'name' => 'EnvType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境类型，取值如下：
- product：生产环境
- dev：开发环境
- pre：预发环境
- test：测试环境
- sit：SIT环境
- uat：UAT环境
- pet：压测环境
- stag：STAG环境
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'product',
          ),
        ),
        5 => 
        array (
          'name' => 'EcsInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS的实例ID。

>如果InstanceSource取值为ECS_OWN，此值必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-2zei9gs1t7h8l7ac****',
          ),
        ),
        6 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'VPC ID。

> 如果InstanceSource取值为VPC_IDC时，此值必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-xxxxxxxxxxxxxxxxxxxxx',
          ),
        ),
        7 => 
        array (
          'name' => 'EcsRegion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所在区域。

>如果InstanceSource取值为RDS、ECS\\_OWN或VPC_IDC，此值必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        8 => 
        array (
          'name' => 'Host',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标数据库的主机地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '172.XX.XXX.254',
          ),
        ),
        9 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标数据库的访问端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '3306',
          ),
        ),
        10 => 
        array (
          'name' => 'Sid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库SID。

>如果InstanceType为ORACLE，此项必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'XXX',
          ),
        ),
        11 => 
        array (
          'name' => 'DatabaseUser',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库访问账号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dmstest',
          ),
        ),
        12 => 
        array (
          'name' => 'DatabasePassword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库访问密码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '******',
          ),
        ),
        13 => 
        array (
          'name' => 'InstanceAlias',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例别名，可以帮助用户快速区分定位实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '测试实例',
          ),
        ),
        14 => 
        array (
          'name' => 'DbaUid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例DBA角色的用户UID，可通过调用接口[ListUsers](~~141938~~)或[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '22275482072787****',
          ),
        ),
        15 => 
        array (
          'name' => 'SafeRule',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的安全规则集（GroupName），可通过调用接口[ListStandardGroups](~~417891~~)或[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '测试使用',
          ),
        ),
        16 => 
        array (
          'name' => 'QueryTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询超时时间，单位：s（秒）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '60',
          ),
        ),
        17 => 
        array (
          'name' => 'ExportTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '导出超时时间，单位：s（秒）。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '600',
          ),
        ),
        18 => 
        array (
          'name' => 'DataLinkName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '输入跨库查询datalink名称。

> - 如果UseDsql取值为1，此值必填。
> - DBLink名称只能使用小写字母和下划线（_）。
> - DBLink名称需要在租户内保持全局唯一性。',
            'type' => 'string',
            'required' => false,
            'example' => 'dblink_test',
          ),
        ),
        19 => 
        array (
          'name' => 'DdlOnline',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启结构变更优先，取值如下：
- **0** ：不使用
- **1** ：原生无锁优先，失败转DMS执行
- **2** ：DMS无锁变更执行

> 支持的数据库类型：RDS MySQL、PolarDB MySQL引擎、MyBase MySQL、其他来源MySQL。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '2',
            'enum' => 
            array (
              0 => '0',
              1 => '1',
              2 => '2',
            ),
          ),
        ),
        20 => 
        array (
          'name' => 'UseDsql',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用跨实例查询，取值如下：
- **0**：不开启
- **1**：开启

> 支持的数据库类型：MySQL、SQL Server、PostgreSQL、PolarDB PostgreSQL版（兼容Oracle）、Redis。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'enum' => 
            array (
              0 => '0',
              1 => '1',
            ),
          ),
        ),
        21 => 
        array (
          'name' => 'SkipTest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例是否忽略测试连通性。取值如下：
- **true**：忽略
- **false**：不忽略',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'true',
          ),
        ),
        22 => 
        array (
          'name' => 'EnableSellSitd',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '- Y：开启敏感数据保护
- NULL或其它：不开启敏感数据保护',
            'description' => '- **Y**：开启敏感数据保护
- **NULL或其它**：不开启敏感数据保护',
            'type' => 'string',
            'required' => false,
            'example' => 'Y',
          ),
        ),
        23 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分类分级模板ID，可从ListClassificationTemplates获取',
            'description' => '分类分级模板ID。您可以调用[ListClassificationTemplates](~~460613~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '31***',
          ),
        ),
        24 => 
        array (
          'name' => 'TemplateType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '分类分级模板类型，可从ListClassificationTemplates获取',
            'description' => '分类分级模板类型。您可以调用[ListClassificationTemplates](~~460613~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'INNER',
          ),
        ),
        25 => 
        array (
          'name' => 'DbaUidByString',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '用于替换DbaUid字段，可输入角色账号等非数字DbaUid',
            'description' => '用于替换DbaUid字段，可输入角色账号等非数字DbaUid',
            'type' => 'string',
            'required' => false,
            'example' => '22275482072787****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F4E2A94B-604F-43FF-93E7-F4EE3DCF412E',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F4E2A94B-604F-43FF-93E7-F4EE3DCF412E\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RegisterInstanceResponse>\\n    <RequestId>F4E2A94B-604F-43FF-93E7-F4EE3DCF412E</RequestId>\\n    <Success>true</Success>\\n</RegisterInstanceResponse>","errorExample":""}]',
      'title' => '录入新的数据库实例（旧）',
      'description' => '前提条件：
您的用户角色为管理员或DBA。可通过调用接口[ListUsers](~~141938~~)或[GetUser](~~147098~~)获取用户角色RoleIdList。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => '### Python sdk示例

示例为VPC专线实例的录入。

```
#coding=utf-8
from aliyunsdkcore.client import AcsClient
from aliyunsdkdms_enterprise.request.v20181101.RegisterInstanceRequest import RegisterInstanceRequest
client = AcsClient(
    "<your-access-key-id>",
    "<your-access-key-secret>",
    "<your-region-id>"
)
# VPC_IDC实例注册示例
request = RegisterInstanceRequest()
# 租户ID
request.set_Tid(1)
# 实例host
request.set_Host("192.168.16.113")
# 实例port
request.set_Port(3314)
# 实例db类型 eg : MySQL
request.set_InstanceType("MySQL")
# 实例来源 eg : VPC_IDC
request.set_InstanceSource("VPC_IDC")
# 网络类型 type: eg : VPC
request.set_NetworkType("VPC")
request.set_EnvType("PRODUCT")
# request.set_EcsInstanceId()
# 实例 vpc id
request.set_VpcId（"实例 VPC ID"）
# 实例 ecs region eg: cn-hangzhou
request.set_EcsRegion（"实例 ecs region"）
# request.set_Sid();
# 实例db登录用户
request.set_DatabaseUser（"实例db登录用户"）
# 实例db登录密码
request.set_DatabasePassword（"实例db登录密码"）
# 实例别名, 方便DMS企业版里面区分实例用
request.set_InstanceAlias（"实例别名"）
# 实例dba 阿里云uid（此用户必须先在DMS企业版录入, 或者使用API提前录入）
request.set_DbaUid(-1)
request.set_SafeRule（"DMS企业版里面配置的安全规则的规则名"）
request.set_QueryTimeout(60)
request.set_ExportTimeout(600)
response = client.do_action_with_exception(request)
print response
```',
    ),
    'UpdateInstance' => 
    array (
      'summary' => '更新实例信息，同时检查该实例连通性。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库类型，取值请参见[DbType参数说明](~~198106~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mysql',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库实例来源，取值如下：
- **PUBLIC_OWN**：代表公网自建实例
- **RDS**：代表RDS实例
- **ECS_OWN**：代表ECS自建实例
- **VPC_IDC**：代表VPC IDC自建实例',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ECS_OWN',
          ),
        ),
        3 => 
        array (
          'name' => 'EnvType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境类型，取值如下：
- **product**：生产环境
- **dev**：开发环境
- **pre**：预发环境
- **test**：测试环境
- **sit**：SIT环境
- **uat**：UAT环境
- **pet**：压测环境
- **stag**：STAG环境',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
              'product' => 'product',
              'pre' => 'pre',
              'dev' => 'dev',
              'test' => 'test',
            ),
            'example' => 'product',
          ),
        ),
        4 => 
        array (
          'name' => 'EcsInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ECS的实例ID。

> 如果InstanceSource取值为ECS_OWN，此值必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'i-2zei9gs1t7h8l7ac****',
          ),
        ),
        5 => 
        array (
          'name' => 'VpcId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例VPC ID。

> 如果InstanceSource取值为VPC_IDC时，此值必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'vpc-xxx',
          ),
        ),
        6 => 
        array (
          'name' => 'EcsRegion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例所在地域。

> 如果InstanceSource取值为RDS、ECS\\_OWN或VPC\\_IDC，此值必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'cn-hangzhou',
          ),
        ),
        7 => 
        array (
          'name' => 'Host',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例连接地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.XXX.0.56',
          ),
        ),
        8 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例访问端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '3306',
          ),
        ),
        9 => 
        array (
          'name' => 'Sid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例Sid。

> 如果InstanceType为ORACLE，此项必填。',
            'type' => 'string',
            'required' => false,
            'example' => 'XXX',
          ),
        ),
        10 => 
        array (
          'name' => 'DatabaseUser',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库账号。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'dbuser',
          ),
        ),
        11 => 
        array (
          'name' => 'DatabasePassword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库访问密码。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '******',
          ),
        ),
        12 => 
        array (
          'name' => 'InstanceAlias',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例别名，帮助用户快速区分定位该实例。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'instance_test',
          ),
        ),
        13 => 
        array (
          'name' => 'DbaId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例DBA角色的用户ID，可通过调用接口[ListUsers](~~141938~~)或[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '27****',
          ),
        ),
        14 => 
        array (
          'name' => 'SafeRuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例的安全规则集（GroupName），可通过调用接口[ListStandardGroups](~~417891~~)或[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '3****',
          ),
        ),
        15 => 
        array (
          'name' => 'QueryTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例查询超时时间。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '60',
          ),
        ),
        16 => 
        array (
          'name' => 'ExportTimeout',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例导出超时时间。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '600',
          ),
        ),
        17 => 
        array (
          'name' => 'DataLinkName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '输入跨库查询datalink名称。

> - 如果UseDsql取值为1，此值必填。
> - DBLink名称只能使用小写字母和下划线（_）。
> - DBLink名称需要在租户内保持全局唯一性。',
            'type' => 'string',
            'required' => false,
            'example' => 'datalink_test',
          ),
        ),
        18 => 
        array (
          'name' => 'DdlOnline',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例是否开启无锁结构变更，取值如下：

- **0** ：不使用
- **1** ：原生无锁优先，失败转DMS执行
- **2** ：DMS无锁变更执行',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
            'enum' => 
            array (
              0 => '0',
              1 => '1',
              2 => '2',
            ),
          ),
        ),
        19 => 
        array (
          'name' => 'UseDsql',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否启用跨实例查询，取值如下：
- **0**：不开启
- **1**：开启

> 支持的数据库类型：MySQL、SQL Server、PostgreSQL、PolarDB PostgreSQL版（兼容Oracle）、Redis。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '0',
            'enum' => 
            array (
              0 => '0',
              1 => '1',
            ),
          ),
        ),
        20 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，可通过调用接口[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '126****',
          ),
        ),
        21 => 
        array (
          'name' => 'SkipTest',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例是否忽略测试连通性。取值如下：
- **true**：忽略
- **false**：不忽略',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'false',
          ),
        ),
        22 => 
        array (
          'name' => 'EnableSellSitd',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '- Y：开启敏感数据保护
- N：关闭敏感数据保护
- 为NULL或其它：不更新敏感数据保护的状态（保持原始的开启或关闭状态）',
            'description' => '- **Y**：开启敏感数据保护
- **N**：关闭敏感数据保护
- **NULL或其它**：不更新敏感数据保护的状态，即保持原始的开启或关闭状态。',
            'type' => 'string',
            'required' => false,
            'example' => 'Y',
          ),
        ),
        23 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '更新分类分级模板ID，可从ListClassificationTemplates获取',
            'description' => '更新分类分级模板ID。您可以调用[ListClassificationTemplates](~~460613~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
        24 => 
        array (
          'name' => 'TemplateType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '更新分类分级模板类型，可从ListClassificationTemplates获取',
            'description' => '更新分类分级模板类型。您可以调用[ListClassificationTemplates](~~460613~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'INNER',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E9BEBF41-4F69-4605-A5D5-A67955173941',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'false',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E9BEBF41-4F69-4605-A5D5-A67955173941\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": false\\n}","errorExample":""},{"type":"xml","example":"<RequestId>E9BEBF41-4F69-4605-A5D5-A67955173941</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '更新实例信息（旧）',
      'description' => '调用UpdateInstance更新实例信息前，请先通过调用接口[GetInstance](~~141567~~)或[ListInstances](~~141936~~)获取实例的完整信息。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetOpLog' => 
    array (
      'summary' => '获取指定时间内的操作日志详情列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'Module',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '功能模块，缺省则返回对应时间段内所有功能模块，取值如下：
- **PERMISSION**：权限
- **OWNER**：数据Owner
- **SQL_CONSOLE**：SQL窗口
- **SQL\\_CONSOLE\\_EXPORT**：SQL窗口结果导出
- **DATA_CHANGE**：数据变更
- **DATA_EXPORT**：数据导出
- **SQL_REVIEW**：SQL审核
- **DT_SYNC**：库表同步
- **DT_DETAIL**：库表详情
- **DB_TASK**：任务管理
- **INSTANCE_MANAGE**：实例管理
- **USER_MANAGE**：用户管理
- **SECURITY_RULE**：安全规则
- **CONFIG_MANAGE**：配置管理
- **RESOURCE_AUTH**：资源授权
- **ACCESS_WHITE_IP**：访问IP白名单
- **NDDL**：结构设计
- **DSQL_CONSOLE**：跨库数据查询
- **DSQL_CONSOLE_EXPORT**：跨库查询结果导出
- **DATA_TRACT**：数据追踪
- **DATA_QUALITY**：数据质量
- **DATALINK_MANAGE**：DBLink管理
- **DATASEC_MANAGE**：敏感数据管理
- **SELL**：售卖',
            'type' => 'string',
            'required' => false,
            'example' => 'SECURITY_RULE',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，时间格式为yyyy-MM-DD HH:mm:ss。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-03-23 10:00:00',
          ),
        ),
        3 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，时间格式为yyyy-MM-DD HH:mm:ss。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-03-29 10:00:00',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数，取值如下：
- 30
- 50
- 100',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '30',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，从1开始。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'UserNick',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户在DMS上的显示名。',
            'type' => 'string',
            'required' => false,
            'example' => 'test_name',
          ),
        ),
        7 => 
        array (
          'name' => 'DatabaseName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'dmstest@rm-bp1qb97d4b****.mysql.rds.aliyuncs.com:3306【poc_dev】',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '操作日志总条数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '47D56208-DB1D-4FD3-BE32-300E43185488',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '403',
              ),
              'OpLogDetails' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'OpLogDetail' => 
                  array (
                    'description' => '操作日志详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '操作日志详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Module' => 
                        array (
                          'description' => '功能模块。',
                          'type' => 'string',
                          'example' => '安全规则',
                        ),
                        'Database' => 
                        array (
                          'description' => '数据库访问地址。

> - 仅实例类型为LocalInstance时有这个属性。
> - 仅任务类型区域的各功能模块操作有这个属性。',
                          'type' => 'string',
                          'example' => 'dmstest@rm-bp1qb97d4b****.mysql.rds.aliyuncs.com:3306【poc_dev】',
                        ),
                        'UserId' => 
                        array (
                          'description' => '用户UID。',
                          'type' => 'string',
                          'example' => '22275482072787****',
                        ),
                        'OpUserId' => 
                        array (
                          'description' => '操作人员的用户ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '51****',
                        ),
                        'OpContent' => 
                        array (
                          'description' => '操作内容。',
                          'type' => 'string',
                          'example' => 'SELECT * FROM `orders` \\n LIMIT 20',
                        ),
                        'UserNick' => 
                        array (
                          'description' => '用户显示名。',
                          'type' => 'string',
                          'example' => 'test_name',
                        ),
                        'OrderId' => 
                        array (
                          'description' => '工单号或任务号。


> 仅任务类型区域的各功能模块操作与系统管理任务管理功能模块的操作才有这个属性。
',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '509****',
                        ),
                        'OpTime' => 
                        array (
                          'description' => '操作时间。',
                          'type' => 'string',
                          'example' => '2022-03-28 16:45:19',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"47D56208-DB1D-4FD3-BE32-300E43185488\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"OpLogDetails\\": {\\n    \\"OpLogDetail\\": [\\n      {\\n        \\"Module\\": \\"安全规则\\",\\n        \\"Database\\": \\"dmstest@rm-bp1qb97d4b****.mysql.rds.aliyuncs.com:3306【poc_dev】\\",\\n        \\"UserId\\": \\"22275482072787****\\",\\n        \\"OpUserId\\": 0,\\n        \\"OpContent\\": \\"SELECT * FROM `orders` \\\\\\\\n LIMIT 20\\",\\n        \\"UserNick\\": \\"test_name\\",\\n        \\"OrderId\\": 0,\\n        \\"OpTime\\": \\"2022-03-28 16:45:19\\"\\n      }\\n    ]\\n  },\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetOpLogResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>47D56208-DB1D-4FD3-BE32-300E43185488</RequestId>\\n    <OpLogDetails>\\n        <OpUserId>51****</OpUserId>\\n        <UserId>22275482072787****</UserId>\\n        <Database>dmstest_prod_database@dmstest.rds...【测试实例】</Database>\\n        <OpContent>SELECT * FROM `orders` \\\\n LIMIT 20</OpContent>\\n        <UserNick>test_name</UserNick>\\n        <Module>安全规则</Module>\\n        <OpTime>2022-03-28 16:39:44</OpTime>\\n    </OpLogDetails>\\n    <Success>true</Success>\\n</GetOpLogResponse>","errorExample":""}]',
      'title' => '获取指定时间内的操作日志详情列表',
      'description' => '仅用户角色为管理员、DBA或安全管理员，可调用[ListUsers](~~141938~~)或[GetUser](~~147098~~)接口获取用户角色（RoleIdList）。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => '## SDK示例

SDK使用基础信息参考：[阿里云Python SDK](~~315437~~)

示例如下：

```
from aliyunsdkcore.client import AcsClient
from aliyunsdkdms_enterprise.request.v20181101.GetOpLogRequest import GetOpLogRequest
client = AcsClient(
    "<your-access-key-id>",
   "<your-access-key-secret>",
   "<your-region-id>"
)
request = GetOpLogRequest()
request.set_Tid("请输入你的企业租户id")
request.set_StartTime("2018-11-20 00:00:00")
request.set_EndTime("2018-11-23 00:00:00")
request.set_PageNumber(1)
request.set_PageSize(50)
response = client.do_action_with_exception(request)
print response
```',
    ),
    'ListInstanceLoginAuditLog' => 
    array (
      'summary' => '获取实例登录列表信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始操作的时间。
> 开始时间可模糊输入，时间格式为YYYY-MM-DD hh:mm:ss。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2021-11-18 11:00:00',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束操作的时间。
> 结束时间可模糊输入，时间格式为YYYY-MM-DD hh:mm:ss，建议您输入的开始时间和结束时间间隔不要超过一天，方便分页拉取，提升效率。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2021-11-18 18:00:00',
          ),
        ),
        2 => 
        array (
          'name' => 'SearchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索名称。
> 此处的搜索名称可输入数据库名，如果是实例级别的SQL操作，则可输入实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test_SearchName',
          ),
        ),
        3 => 
        array (
          'name' => 'OpUserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '操作人昵称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test_OpUserName',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。最大值不超过100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'exclusiveMaximum' => false,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '操作总记录数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '074CE7C9-4F9C-5B62-89BC-7B4914A3****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'InvalidPageSize',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Specified parameter PageSize is not valid.',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'InstanceLoginAuditLogList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'InstanceLoginAuditLog' => 
                  array (
                    'description' => '实例登录审计信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '实例登录审计信息列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'OpTime' => 
                        array (
                          'description' => '操作时间。',
                          'type' => 'string',
                          'example' => '2021-11-18 11:13:26',
                        ),
                        'UserName' => 
                        array (
                          'description' => '操作人昵称。',
                          'type' => 'string',
                          'example' => 'test_UserName',
                        ),
                        'UserId' => 
                        array (
                          'description' => '操作人ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '12****',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => 'rm-bp144d5ky4l4rli0417****.mysql.rds.aliyuncs.com:3306【rm-bp144d5ky4l4r****】',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '177****',
                        ),
                        'DbUser' => 
                        array (
                          'description' => '使用数据库的账号名称。',
                          'type' => 'string',
                          'example' => 'test_User',
                        ),
                        'RequestIp' => 
                        array (
                          'description' => '请求来源IP。',
                          'type' => 'string',
                          'example' => '117.36.XX.XX,100.104.XX.XX',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"074CE7C9-4F9C-5B62-89BC-7B4914A3****\\",\\n  \\"ErrorCode\\": \\"InvalidPageSize\\",\\n  \\"ErrorMessage\\": \\"Specified parameter PageSize is not valid.\\",\\n  \\"Success\\": true,\\n  \\"InstanceLoginAuditLogList\\": {\\n    \\"InstanceLoginAuditLog\\": [\\n      {\\n        \\"OpTime\\": \\"2021-11-18 11:13:26\\",\\n        \\"UserName\\": \\"test_UserName\\",\\n        \\"UserId\\": 0,\\n        \\"InstanceName\\": \\"rm-bp144d5ky4l4rli0417****.mysql.rds.aliyuncs.com:3306【rm-bp144d5ky4l4r****】\\",\\n        \\"InstanceId\\": 0,\\n        \\"DbUser\\": \\"test_User\\",\\n        \\"RequestIp\\": \\"117.36.XX.XX,100.104.XX.XX\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListInstanceLoginAuditLogResponse>\\n    <InstanceLoginAuditLogList>\\n        <InstanceLoginAuditLog>\\n            <InstanceName>rm-bp144d5ky4l4rli0417****.mysql.rds.aliyuncs.com:3306【rm-bp144d5ky4l4r****】</InstanceName>\\n            <UserName>test_UserName</UserName>\\n            <InstanceId>177****</InstanceId>\\n            <UserId>12****</UserId>\\n            <RequestIp>117.36.XX.XX, 100.104.XX.XX</RequestIp>\\n            <OpTime>2021-11-18 11:13:26</OpTime>\\n            <DbUser>test_User</DbUser>\\n        </InstanceLoginAuditLog>\\n    </InstanceLoginAuditLogList>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>074CE7C9-4F9C-5B62-89BC-7B4914A3****</RequestId>\\n    <Success>true</Success>\\n</ListInstanceLoginAuditLogResponse>","errorExample":""}]',
      'title' => '获取实例登录日志',
    ),
    'ListProxySQLExecAuditLog' => 
    array (
      'summary' => '获取安全访问代理审计信息列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始操作的时间戳，格式为标准的UNIX_TIMESTAMP时间戳形式，您可以根据您的操作时间进行转化。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1636876446000',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束操作的时间戳，格式为标准的UNIX_TIMESTAMP时间戳形式，您可以根据您的操作时间进行转化。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1636962846000',
          ),
        ),
        2 => 
        array (
          'name' => 'SearchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'OpUserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '操作人昵称。',
            'type' => 'string',
            'required' => false,
            'example' => 'testNickName',
          ),
        ),
        4 => 
        array (
          'name' => 'SQLType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SQL类型，常见SQL类型取值说明如下：

- **SELECT**：查询
- **INSERT**：插入
- **DELETE**：删除
- **CREATE_TABLE**：创建表

> 您可以在控制台页面上方操作审计->安全访问代理中查看更多SQL类型取值。',
            'type' => 'string',
            'required' => false,
            'example' => 'SELECT',
          ),
        ),
        5 => 
        array (
          'name' => 'ExecState',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '执行状态，取值说明如下：
- **FAIL**：执行失败
- **CANCEL**：取消执行
- **SUCCESS**：执行成功',
            'type' => 'string',
            'required' => false,
            'example' => 'SUCCESS',
            'enum' => 
            array (
              0 => 'FAIL',
              1 => 'SUCCESS',
              2 => 'CANCEL',
            ),
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量，最大值不超过100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '100',
            'default' => '20',
          ),
        ),
        7 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'exclusiveMaximum' => false,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '14****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '操作总记录数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '50ECB006-2C35-5FCA-91B9-01987A0B****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'InvalidStartTime',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Specified parameter StartTime is not valid.',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ProxySQLExecAuditLogList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ProxySQLExecAuditLog' => 
                  array (
                    'description' => '安全代理审计信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '安全代理审计信息列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'OpTime' => 
                        array (
                          'description' => '操作时间戳，格式为标准的UNIX_TIMESTAMP时间戳形式。',
                          'type' => 'string',
                          'example' => '1636876446000',
                        ),
                        'UserName' => 
                        array (
                          'description' => '操作人昵称。',
                          'type' => 'string',
                          'example' => 'testNickName',
                        ),
                        'UserId' => 
                        array (
                          'description' => '操作人ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '4****',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '实例名称。',
                          'type' => 'string',
                          'example' => 'pc-uf662nrg017c6****.mysql.polardb.rds.aliyuncs.com:3306【test】',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '4***',
                        ),
                        'SchemaName' => 
                        array (
                          'description' => '数据库名称。',
                          'type' => 'string',
                          'example' => 'test_db',
                        ),
                        'SQLType' => 
                        array (
                          'description' => 'SQL类型，常见SQL类型返回值说明如下：

- **SELECT**：查询
- **INSERT**：插入
- **DELETE**：删除
- **CREATE_TABLE**：创建表

> 您可以在控制台页面上方操作审计->安全访问代理中查看更多SQL类型返回值。',
                          'type' => 'string',
                          'example' => 'SELECT',
                        ),
                        'SQL' => 
                        array (
                          'description' => '已执行的SQL语句。',
                          'type' => 'string',
                          'example' => 'select 1;',
                        ),
                        'ExecState' => 
                        array (
                          'description' => '执行状态，返回值说明如下：
- **FAIL**：执行失败
- **CANCEL**：取消执行
- **SUCCESS**：执行成功',
                          'type' => 'string',
                          'example' => 'SUCCESS',
                        ),
                        'AffectRows' => 
                        array (
                          'description' => '表示执行SQL语句后返回的总行数。比如，SQL语句为查询语句，此参数返回的是查询数据的总行数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'ElapsedTime' => 
                        array (
                          'description' => '操作耗时，单位为毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1324',
                        ),
                        'Remark' => 
                        array (
                          'description' => '备注信息。',
                          'type' => 'string',
                          'example' => 'success',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"50ECB006-2C35-5FCA-91B9-01987A0B****\\",\\n  \\"ErrorCode\\": \\"InvalidStartTime\\",\\n  \\"ErrorMessage\\": \\"Specified parameter StartTime is not valid.\\",\\n  \\"Success\\": true,\\n  \\"ProxySQLExecAuditLogList\\": {\\n    \\"ProxySQLExecAuditLog\\": [\\n      {\\n        \\"OpTime\\": \\"1636876446000\\",\\n        \\"UserName\\": \\"testNickName\\",\\n        \\"UserId\\": 0,\\n        \\"InstanceName\\": \\"pc-uf662nrg017c6****.mysql.polardb.rds.aliyuncs.com:3306【test】\\",\\n        \\"InstanceId\\": 0,\\n        \\"SchemaName\\": \\"test_db\\",\\n        \\"SQLType\\": \\"SELECT\\",\\n        \\"SQL\\": \\"select 1;\\",\\n        \\"ExecState\\": \\"SUCCESS\\",\\n        \\"AffectRows\\": 1,\\n        \\"ElapsedTime\\": 1324,\\n        \\"Remark\\": \\"success\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListProxySQLExecAuditLogResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>50ECB006-2C35-5FCA-91B9-01987A0B****</RequestId>\\n    <Success>true</Success>\\n    <ProxySQLExecAuditLogList>\\n        <OpTime>1636876446000</OpTime>\\n        <UserName>testNickName</UserName>\\n        <UserId>4****</UserId>\\n        <InstanceName>rm-xxx:3306</InstanceName>\\n        <InstanceId>4***</InstanceId>\\n        <SchemaName>test_db</SchemaName>\\n        <SQLType>SELECT</SQLType>\\n        <SQL>select 1;</SQL>\\n        <ExecState>SUCCESS</ExecState>\\n        <AffectRows>1</AffectRows>\\n        <ElapsedTime>1324</ElapsedTime>\\n        <Remark>success</Remark>\\n    </ProxySQLExecAuditLogList>\\n</ListProxySQLExecAuditLogResponse>","errorExample":""}]',
      'title' => '获取SQL资源审计日志',
    ),
    'ListSQLExecAuditLog' => 
    array (
      'summary' => '获取在DMS进行SQL操作的审计日志列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始操作的时间。

> 开始时间可模糊输入，时间格式为YYYY-MM-DD hh:mm:ss。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2021-11-08 11:04:00',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束操作的时间。
> 结束时间可模糊输入，时间格式为YYYY-MM-DD hh:mm:ss，建议您输入的开始时间和结束时间间隔不要超过一天，方便分页拉取，提升效率。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2021-11-08 11:00:00',
          ),
        ),
        2 => 
        array (
          'name' => 'SearchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索名称。
> 此处的搜索名称可输入数据库名，如果是实例级别的SQL操作，则可输入实例名称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test_SearchName',
          ),
        ),
        3 => 
        array (
          'name' => 'OpUserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '操作人昵称。',
            'type' => 'string',
            'required' => false,
            'example' => 'test_OpUserName',
          ),
        ),
        4 => 
        array (
          'name' => 'SqlType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SQL类型，常见SQL类型取值说明如下：
- **SELECT**：查询
- **INSERT**：插入
- **DELETE**：删除
- **CREATE_TABLE**：创建表

> 您可以在控制台页面上方**操作审计**->**SQL类型**中查看更多SQL类型取值。',
            'type' => 'string',
            'required' => false,
            'example' => 'SELECT',
          ),
        ),
        5 => 
        array (
          'name' => 'ExecState',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '执行状态，取值说明如下：
- **-1**：执行失败
- **0**：暂未执行
- **2**：执行中
- **-2**：取消执行
- **1**：执行成功',
            'type' => 'string',
            'required' => false,
            'example' => '1',
            'enum' => 
            array (
            ),
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。最大值不超过100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '20',
            'default' => '20',
          ),
        ),
        7 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始页码。请输入合理的页码，若页码填写超过日志总页数，可能会操作总记录数不为0，但是操作审计日志列表信息为空的情况。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'exclusiveMaximum' => false,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        8 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '操作总记录数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '39BC9C86-95AE-58F2-9862-A7C3D896****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'MissingStartTime',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'StartTime is mandatory for this action.',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'SQLExecAuditLogList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SQLExecAuditLog' => 
                  array (
                    'description' => 'SQL操作审计列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'SQL操作审计信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'OpTime' => 
                        array (
                          'description' => '操作时间。',
                          'type' => 'string',
                          'example' => '2021-11-08 11:04:27',
                        ),
                        'UserName' => 
                        array (
                          'description' => '操作人昵称。',
                          'type' => 'string',
                          'example' => 'test_UserName',
                        ),
                        'UserId' => 
                        array (
                          'description' => '操作人ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '12****',
                        ),
                        'InstanceName' => 
                        array (
                          'description' => '数据库名称。
> 如果此处为实例级别的操作，则返回实例名称。',
                          'type' => 'string',
                          'example' => 'polar123@pc-bp1h9tgq4st9g****.mysql.polardb.rds.aliyuncs.com:3306【polar_qw_测试】',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '185***',
                        ),
                        'SchemaName' => 
                        array (
                          'description' => '数据库名称。',
                          'type' => 'string',
                          'example' => 'polar123',
                        ),
                        'DbId' => 
                        array (
                          'description' => '数据库ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2157****',
                        ),
                        'Logic' => 
                        array (
                          'description' => '是否为逻辑库，返回值说明如下：
- **true**：逻辑库
- **false**：物理库',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'SQLType' => 
                        array (
                          'description' => 'SQL类型，常见SQL类型返回值说明如下：
- **SELECT**：查询
- **INSERT**：插入
- **DELETE**：删除
- **CREATE_TABLE**：创建表

> 您可以在控制台页面上方**操作审计**->**SQL类型**中查看更多SQL类型返回值。',
                          'type' => 'string',
                          'example' => 'SELECT',
                        ),
                        'SQL' => 
                        array (
                          'description' => '已执行的SQL语句。',
                          'type' => 'string',
                          'example' => 'SELECT * FROM `polar123`.`p_qw` ORDER BY `id` DESC',
                        ),
                        'ExecState' => 
                        array (
                          'description' => '执行状态，返回值说明如下：
- **FAIL**：执行失败
- **NOEXE**：暂未执行
- **RUNNING**：执行中
- **CANCEL**：取消执行
- **SUCCESS**：执行成功',
                          'type' => 'string',
                          'example' => 'SUCCESS',
                        ),
                        'AffectRows' => 
                        array (
                          'description' => '表示执行SQL语句后返回的总行数。比如，SQL语句为查询语句，此参数返回的是查询数据的总行数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'ElapsedTime' => 
                        array (
                          'description' => '操作耗时，单位为毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '18',
                        ),
                        'Remark' => 
                        array (
                          'description' => '备注信息。',
                          'type' => 'string',
                          'example' => 'success',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"39BC9C86-95AE-58F2-9862-A7C3D896****\\",\\n  \\"ErrorCode\\": \\"MissingStartTime\\",\\n  \\"ErrorMessage\\": \\"StartTime is mandatory for this action.\\",\\n  \\"Success\\": true,\\n  \\"SQLExecAuditLogList\\": {\\n    \\"SQLExecAuditLog\\": [\\n      {\\n        \\"OpTime\\": \\"2021-11-08 11:04:27\\",\\n        \\"UserName\\": \\"test_UserName\\",\\n        \\"UserId\\": 0,\\n        \\"InstanceName\\": \\"polar123@pc-bp1h9tgq4st9g****.mysql.polardb.rds.aliyuncs.com:3306【polar_qw_测试】\\",\\n        \\"InstanceId\\": 0,\\n        \\"SchemaName\\": \\"polar123\\",\\n        \\"DbId\\": 0,\\n        \\"Logic\\": false,\\n        \\"SQLType\\": \\"SELECT\\",\\n        \\"SQL\\": \\"SELECT * FROM `polar123`.`p_qw` ORDER BY `id` DESC\\",\\n        \\"ExecState\\": \\"SUCCESS\\",\\n        \\"AffectRows\\": 2,\\n        \\"ElapsedTime\\": 18,\\n        \\"Remark\\": \\"success\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListSQLExecAuditLogResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>39BC****-95AE-58F2-9862-A7C3D896****</RequestId>\\n    <Success>true</Success>\\n    <SQLExecAuditLogList>\\n        <SQLExecAuditLog>\\n            <UserName>test_UserName</UserName>\\n            <InstanceId>185****</InstanceId>\\n            <ElapsedTime>18</ElapsedTime>\\n            <ExecState>SUCCESS</ExecState>\\n            <OpTime>2021-11-08 11:04:27</OpTime>\\n            <SQL>SELECT * FROM `polar123`.`p_qw` ORDER BY `id` DESC</SQL>\\n            <Remark/>\\n            <InstanceName>polar123@pc-bp1h9tgq4st9g****.mysql.polardb.rds.aliyuncs.com:3306【polar_qw_测试】</InstanceName>\\n            <UserId>12****</UserId>\\n            <DbId>2157****</DbId>\\n            <Logic>false</Logic>\\n            <SQLType>SELECT</SQLType>\\n            <SchemaName>polar123</SchemaName>\\n            <AffectRows>2</AffectRows>\\n        </SQLExecAuditLog>\\n    </SQLExecAuditLogList>\\n</ListSQLExecAuditLogResponse>","errorExample":""}]',
      'title' => '获取SQL审计日志列表',
    ),
    'ListWorkFlowTemplates' => 
    array (
      'summary' => '获取审批模板列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'SearchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索模板名。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'Admin',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '41067071-0243-4AAB-B3CF-4DE6D54F53B4',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'WorkFlowTemplates' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'WorkFlowTemplate' => 
                  array (
                    'description' => '审批模板列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'IsSystem' => 
                        array (
                          'description' => '是否系统定义的审批模板，取值和说明如下：
- 1：是
- 0：否',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'WorkflowNodes' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'WorkflowNode' => 
                            array (
                              'description' => '审批节点信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Comment' => 
                                  array (
                                    'description' => '备注。',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                  'NodeType' => 
                                  array (
                                    'description' => '节点类型，取值和说明如下：
- SYS：系统定义
- USER_LIST：用户自定义',
                                    'type' => 'string',
                                    'example' => 'SYS',
                                  ),
                                  'NodeName' => 
                                  array (
                                    'description' => '节点名称。',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                  'Position' => 
                                  array (
                                    'description' => '顺序。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'CreateUserId' => 
                                  array (
                                    'description' => '创建人ID。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1234',
                                  ),
                                  'TemplateId' => 
                                  array (
                                    'description' => '模板ID。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '12345',
                                  ),
                                  'NodeId' => 
                                  array (
                                    'description' => '节点ID。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '123',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'Comment' => 
                        array (
                          'description' => '备注。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'Enabled' => 
                        array (
                          'description' => '模板是否启用，取值和说明如下：
- Y：启用
- N：禁用',
                          'type' => 'string',
                          'example' => 'Y',
                        ),
                        'TemplateName' => 
                        array (
                          'description' => '模板名称。',
                          'type' => 'string',
                          'example' => 'Admin',
                        ),
                        'TemplateId' => 
                        array (
                          'description' => '模板ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '12345',
                        ),
                        'CreateUserId' => 
                        array (
                          'description' => '创建人ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1234',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"41067071-0243-4AAB-B3CF-4DE6D54F53B4\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"WorkFlowTemplates\\": {\\n    \\"WorkFlowTemplate\\": [\\n      {\\n        \\"IsSystem\\": 1,\\n        \\"WorkflowNodes\\": {\\n          \\"WorkflowNode\\": [\\n            {\\n              \\"Comment\\": \\"test\\",\\n              \\"NodeType\\": \\"SYS\\",\\n              \\"NodeName\\": \\"test\\",\\n              \\"Position\\": 1,\\n              \\"CreateUserId\\": 1234,\\n              \\"TemplateId\\": 12345,\\n              \\"NodeId\\": 123\\n            }\\n          ]\\n        },\\n        \\"Comment\\": \\"test\\",\\n        \\"Enabled\\": \\"Y\\",\\n        \\"TemplateName\\": \\"Admin\\",\\n        \\"TemplateId\\": 12345,\\n        \\"CreateUserId\\": 1234\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>41067071-0243-4AAB-B3CF-4DE6D54F53B4</RequestId>\\n<Success>true</Success>\\n<WorkFlowTemplates>\\n    <WorkFlowTemplate>\\n        <Comment>系统定义审批线，仅需管理员审批</Comment>\\n        <WorkFlowNodes>\\n            <WorkFlowNode>\\n                <Comment>系统节点，动态计算，由管理员来完成审批</Comment>\\n                <NodeName>Admin</NodeName>\\n                <Position>0</Position>\\n                <NodeType>SYS</NodeType>\\n                <NodeId>3763</NodeId>\\n                <TemplateId>6243</TemplateId>\\n            </WorkFlowNode>\\n        </WorkFlowNodes>\\n        <TemplateName>Admin</TemplateName>\\n        <Enabled>Y</Enabled>\\n        <IsSystem>1</IsSystem>\\n        <TemplateId>6243</TemplateId>\\n    </WorkFlowTemplate>\\n    <WorkFlowTemplate>\\n        <Comment>系统定义审批线，先数据Owner审批，再DBA审批，最后Admin审批</Comment>\\n        <WorkflowNodes>\\n            <WorkFlowNode>\\n                <Comment>系统节点，动态计算，由用户操作的资源对应的Owner来完成审批</Comment>\\n                <NodeName>Owner</NodeName>\\n                <Position>0</Position>\\n                <NodeType>SYS</NodeType>\\n                <NodeId>3762</NodeId>\\n                <TemplateId>6244</TemplateId>\\n            </WorkFlowNode>\\n            <WorkFlowNode>\\n                <Comment>系统节点，动态计算，由用户操作的资源对应的DBA来完成审批</Comment>\\n                <NodeName>DBA</NodeName>\\n                <Position>0</Position>\\n                <NodeType>SYS</NodeType>\\n                <NodeId>3761</NodeId>\\n                <TemplateId>6244</TemplateId>\\n            </WorkFlowNode>\\n            <WorkFlowNode>\\n                <Comment>系统节点，动态计算，由管理员来完成审批</Comment>\\n                <NodeName>Admin</NodeName>\\n                <Position>0</Position>\\n                <NodeType>SYS</NodeType>\\n                <NodeId>3763</NodeId>\\n                <TemplateId>6244</TemplateId>\\n            </WorkFlowNode>\\n        </WorkflowNodes>\\n        <TemplateName>Owner--&gt;DBA--&gt;Admin</TemplateName>\\n        <Enabled>Y</Enabled>\\n        <IsSystem>1</IsSystem>\\n        <TemplateId>6244</TemplateId>\\n    </WorkFlowTemplate>\\n</WorkFlowTemplates>","errorExample":""}]',
      'title' => '获取审批模板列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListWorkFlowNodes' => 
    array (
      'summary' => '获取审批节点列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'SearchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索审批节点名称。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'admin',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CFD8FE00-36D9-4C1B-940D-65A7B73D9066',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'WorkflowNodes' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'WorkflowNode' => 
                  array (
                    'description' => '审批节点信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Comment' => 
                        array (
                          'description' => '备注。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'CreateUserNickName' => 
                        array (
                          'description' => '创建人昵称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'NodeType' => 
                        array (
                          'description' => '节点类型，取值和说明如下：
- SYS：系统定义
- USER_LIST：用户自定义',
                          'type' => 'string',
                          'example' => 'SYS',
                        ),
                        'NodeName' => 
                        array (
                          'description' => '节点名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'AuditUsers' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AuditUser' => 
                            array (
                              'description' => '审批人信息。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'RealName' => 
                                  array (
                                    'description' => '审批人真实名。',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                  'UserId' => 
                                  array (
                                    'description' => '审批人用户ID，注意不是阿里云Uid。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '123',
                                  ),
                                  'NickName' => 
                                  array (
                                    'description' => '审批人昵称。',
                                    'type' => 'string',
                                    'example' => 'test',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'CreateUserId' => 
                        array (
                          'description' => '创建者用户ID，注意不是阿里云uid。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123',
                        ),
                        'NodeId' => 
                        array (
                          'description' => '节点ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '123',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CFD8FE00-36D9-4C1B-940D-65A7B73D9066\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"WorkflowNodes\\": {\\n    \\"WorkflowNode\\": [\\n      {\\n        \\"Comment\\": \\"test\\",\\n        \\"CreateUserNickName\\": \\"test\\",\\n        \\"NodeType\\": \\"SYS\\",\\n        \\"NodeName\\": \\"test\\",\\n        \\"AuditUsers\\": {\\n          \\"AuditUser\\": [\\n            {\\n              \\"RealName\\": \\"test\\",\\n              \\"UserId\\": 123,\\n              \\"NickName\\": \\"test\\"\\n            }\\n          ]\\n        },\\n        \\"CreateUserId\\": 123,\\n        \\"NodeId\\": 123\\n      }\\n    ]\\n  },\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<WorkFlowNodes>\\n    <WorkflowNode>\\n        <Comment>系统节点，动态计算，由管理员来完成审批</Comment>\\n        <NodeName>Admin</NodeName>\\n        <NodeType>SYS</NodeType>\\n        <NodeId>3763</NodeId>\\n        <AuditUsers>\\n        </AuditUsers>\\n    </WorkflowNode>\\n</WorkFlowNodes>\\n<RequestId>CFD8FE00-36D9-4C1B-940D-65A7B73D9066</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '获取审批节点列表',
      'description' => '仅系统角色为管理员或DBA的用户可使用此API。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateLogicDatabase' => 
    array (
      'summary' => '创建DMS逻辑库。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Alias',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '输入逻辑库别名。',
            'type' => 'string',
            'required' => true,
            'example' => 'test_logic_db',
          ),
        ),
        1 => 
        array (
          'name' => 'DatabaseIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '组成逻辑库的所有物理库。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '组成逻辑库的所有物理库ID（DatabaseId），可通过调用接口[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => true,
              'example' => '1860****',
            ),
            'required' => true,
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C51420E3-144A-4A94-B473-8662FCF4AD10',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'LogicDbId' => 
              array (
                'description' => '创建的逻辑库ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1***',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C51420E3-144A-4A94-B473-8662FCF4AD10\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"LogicDbId\\": 0\\n}","errorExample":""},{"type":"xml","example":"<CreateLogicDatabaseResponse>\\n    <LogicDbId>1***</LogicDbId>\\n    <RequestId>EFF67767-7D49-5833-8B83-F87C9CBDE33A</RequestId>\\n    <Success>true</Success>\\n</CreateLogicDatabaseResponse>","errorExample":""}]',
      'title' => '创建逻辑库',
    ),
    'AddLogicTableRouteConfig' => 
    array (
      'summary' => '为逻辑表添加路由算法配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '逻辑库的表ID，可通过调用接口[ListLogicTables](~~141875~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '4****',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由算法唯一键。

> - 您可以自定义路由算法唯一键，无任何约束格式。
> - 同一个逻辑表下的路由算法配置唯一键不能重复。',
            'type' => 'string',
            'required' => true,
            'example' => 'id-hash-mod16',
          ),
        ),
        2 => 
        array (
          'name' => 'RouteExpr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由算法表达式，您可以参考DMS的文档配置路由算法表达式，详情请参见[路由算法配置](~~107594~~)。',
            'type' => 'string',
            'required' => true,
            'example' => '#id#%16',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '4***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B43AD641-49C2-5299-9E06-1B37EC1B****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'can not find table, tableId : 11133',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B43AD641-49C2-5299-9E06-1B37EC1B****\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"can not find table, tableId : 11133\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<AddLogicTableRouteConfigResponse>\\n    <RequestId>B43AD641-49C2-5299-9E06-1B37EC1B****</RequestId>\\n    <Success>true</Success>\\n</AddLogicTableRouteConfigResponse>","errorExample":""}]',
      'title' => '逻辑表中配置路由算法',
    ),
    'DeleteLogicDatabase' => 
    array (
      'summary' => '删除DMS逻辑库。仅删除逻辑库，并不会对物理分库做任何物理删除操作。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogicDbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '逻辑库ID，可通过调用接口[ListLogicDatabases](~~141874~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1***',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C51420E3-144A-4A94-B473-8662FCF4AD10',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C51420E3-144A-4A94-B473-8662FCF4AD10\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteLogicDatabaseResponse>\\n    <RequestId>C51420E3-144A-4A94-B473-8662FCF4AD10</RequestId>\\n    <Success>true</Success>\\n</DeleteLogicDatabaseResponse>","errorExample":""}]',
      'title' => '删除逻辑库中的物理库',
    ),
    'DeleteLogicTableRouteConfig' => 
    array (
      'summary' => '删除逻辑表路由算法配置信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '逻辑库的表ID，可通过调用接口[ListLogicTables](~~141875~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1****',
          ),
        ),
        1 => 
        array (
          'name' => 'RouteKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '路由算法唯一键，可通过调用接口[ListLogicTableRouteConfig](~~363030~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'id-hash-mod15',
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A916A004-A88C-5B39-ABDB-DE808E80****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'MissingRouteKey',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'RouteKey is mandatory for this action.',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A916A004-A88C-5B39-ABDB-DE808E80****\\",\\n  \\"ErrorCode\\": \\"MissingRouteKey\\",\\n  \\"ErrorMessage\\": \\"RouteKey is mandatory for this action.\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteLogicTableRouteConfigResponse>\\n    <RequestId>A916A004-A88C-5B39-ABDB-DE808E80****</RequestId>\\n    <Success>true</Success>\\n</DeleteLogicTableRouteConfigResponse>","errorExample":""}]',
      'title' => '删除逻辑表路由算法',
    ),
    'ListLogicDatabases' => 
    array (
      'summary' => '调用ListLogicDatabases接口，返回逻辑库详情列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '50',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '逻辑库总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '7',
              ),
              'LogicDatabaseList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'LogicDatabase' => 
                  array (
                    'description' => '逻辑库列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '逻辑库列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DatabaseId' => 
                        array (
                          'description' => '逻辑库ID。',
                          'type' => 'string',
                          'example' => '1***',
                        ),
                        'OwnerIdList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerIds' => 
                            array (
                              'description' => '逻辑库Owner的用户ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '逻辑库Owner的用户ID。',
                                'type' => 'string',
                                'example' => '51****',
                              ),
                            ),
                          ),
                        ),
                        'DbType' => 
                        array (
                          'description' => '逻辑库的数据库类型，返回值请参见[DbType参数说明](~~198106~~)。',
                          'type' => 'string',
                          'example' => 'POLARDB',
                        ),
                        'OwnerNameList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerNames' => 
                            array (
                              'description' => '逻辑库Owner的昵称列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '逻辑库Owner的昵称。',
                                'type' => 'string',
                                'example' => 'owner_name',
                              ),
                            ),
                          ),
                        ),
                        'Logic' => 
                        array (
                          'description' => '是否为逻辑库，返回值为True。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'SchemaName' => 
                        array (
                          'description' => '逻辑库名。',
                          'type' => 'string',
                          'example' => 'logic_db',
                        ),
                        'SearchName' => 
                        array (
                          'description' => '逻辑库搜索名。
> 建议您的业务不要强依赖该参数，后续版本的格式可能会发生变化。',
                          'type' => 'string',
                          'example' => 'logic_db[logic_db_alias]',
                        ),
                        'EnvType' => 
                        array (
                          'description' => '逻辑库所属环境类型，返回值如下：
- **product**：生产环境
- **dev**：开发环境
- **pre**：预发环境
- **test**：测试环境
- **sit**：SIT环境
- **uat**：UAT环境
- **pet**：压测环境
- **stag**：STAG环境',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'Alias' => 
                        array (
                          'description' => '逻辑库别名。',
                          'type' => 'string',
                          'example' => 'logic_db_alias',
                        ),
                        'DatabaseIds' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DatabaseIds' => 
                            array (
                              'description' => '逻辑库分库ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '逻辑库分库ID。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '12****',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8068AF82-8A1A-592C-AC2E-6B75338BAB87',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 7,\\n  \\"LogicDatabaseList\\": {\\n    \\"LogicDatabase\\": [\\n      {\\n        \\"DatabaseId\\": \\"1***\\",\\n        \\"OwnerIdList\\": {\\n          \\"OwnerIds\\": [\\n            \\"51****\\"\\n          ]\\n        },\\n        \\"DbType\\": \\"POLARDB\\",\\n        \\"OwnerNameList\\": {\\n          \\"OwnerNames\\": [\\n            \\"owner_name\\"\\n          ]\\n        },\\n        \\"Logic\\": true,\\n        \\"SchemaName\\": \\"logic_db\\",\\n        \\"SearchName\\": \\"logic_db[logic_db_alias]\\",\\n        \\"EnvType\\": \\"test\\",\\n        \\"Alias\\": \\"logic_db_alias\\",\\n        \\"DatabaseIds\\": {\\n          \\"DatabaseIds\\": [\\n            0\\n          ]\\n        }\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"8068AF82-8A1A-592C-AC2E-6B75338BAB87\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListLogicDatabasesResponse>\\n    <TotalCount>7</TotalCount>\\n    <LogicDatabaseList>\\n        <DatabaseId>1***</DatabaseId>\\n        <OwnerIdList>51****</OwnerIdList>\\n        <DbType>polardb</DbType>\\n        <OwnerNameList>owner_name</OwnerNameList>\\n        <Logic>true</Logic>\\n        <SchemaName>logic_db</SchemaName>\\n        <SearchName>logic_db【logic_db_alias】</SearchName>\\n        <EnvType>test</EnvType>\\n        <Alias>logic_db_alias</Alias>\\n    </LogicDatabaseList>\\n    <RequestId>8068AF82-8A1A-592C-AC2E-6B75338BAB87</RequestId>\\n    <Success>true</Success>\\n</ListLogicDatabasesResponse>","errorExample":""}]',
      'title' => '返回逻辑库详情列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetLogicDatabase' => 
    array (
      'summary' => '获取逻辑库详情信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '逻辑库ID（DatabaseId），可通过调用接口[ListLogicDatabases](~~141874~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'LogicDatabase' => 
              array (
                'description' => '逻辑库详情信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'DatabaseId' => 
                  array (
                    'description' => '逻辑库ID。',
                    'type' => 'string',
                    'example' => '1***',
                  ),
                  'OwnerIdList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'OwnerIds' => 
                      array (
                        'description' => '逻辑库Owner的用户ID列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '逻辑库Owner的用户ID。',
                          'type' => 'string',
                          'example' => '51****',
                        ),
                      ),
                    ),
                  ),
                  'DbType' => 
                  array (
                    'description' => '数据库类型。返回值请参见[DbType参数说明](~~198106~~)。',
                    'type' => 'string',
                    'example' => 'POLARDB',
                  ),
                  'OwnerNameList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'OwnerNames' => 
                      array (
                        'description' => '逻辑库Owner的昵称列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '逻辑库Owner的昵称。',
                          'type' => 'string',
                          'example' => 'owner_name',
                        ),
                      ),
                    ),
                  ),
                  'Logic' => 
                  array (
                    'description' => '是否为逻辑库，返回值为true。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'SchemaName' => 
                  array (
                    'description' => '逻辑库名。',
                    'type' => 'string',
                    'example' => 'test_logic_db',
                  ),
                  'SearchName' => 
                  array (
                    'description' => '逻辑库搜索名。',
                    'type' => 'string',
                    'example' => 'test_logic_db[test_logic_alias]',
                  ),
                  'EnvType' => 
                  array (
                    'description' => '环境类型，返回值如下：
- product：生产环境
- dev：开发环境
- pre：预发环境
- test：测试环境
- sit：SIT环境
- uat：UAT环境
- pet：压测环境
- stag：STAG环境',
                    'type' => 'string',
                    'example' => 'dev',
                  ),
                  'Alias' => 
                  array (
                    'description' => '逻辑库别名。',
                    'type' => 'string',
                    'example' => 'test_logic_alias',
                  ),
                  'DatabaseIds' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'DatabaseIds' => 
                      array (
                        'description' => '逻辑库分库ID列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '逻辑库分库ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '12****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '90260530-565C-42B9-A6E8-893481FE6AB6',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"LogicDatabase\\": {\\n    \\"DatabaseId\\": \\"1***\\",\\n    \\"OwnerIdList\\": {\\n      \\"OwnerIds\\": [\\n        \\"51****\\"\\n      ]\\n    },\\n    \\"DbType\\": \\"POLARDB\\",\\n    \\"OwnerNameList\\": {\\n      \\"OwnerNames\\": [\\n        \\"owner_name\\"\\n      ]\\n    },\\n    \\"Logic\\": true,\\n    \\"SchemaName\\": \\"test_logic_db\\",\\n    \\"SearchName\\": \\"test_logic_db[test_logic_alias]\\",\\n    \\"EnvType\\": \\"dev\\",\\n    \\"Alias\\": \\"test_logic_alias\\",\\n    \\"DatabaseIds\\": {\\n      \\"DatabaseIds\\": [\\n        0\\n      ]\\n    }\\n  },\\n  \\"RequestId\\": \\"90260530-565C-42B9-A6E8-893481FE6AB6\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetLogicDatabaseResponse>\\n    <LogicDatabase>\\n        <SearchName>test_logic_db【test_logic_alias】</SearchName>\\n        <Alias>test_logic_alias</Alias>\\n        <DatabaseId>1***</DatabaseId>\\n        <OwnerNameList>\\n            <OwnerNames>owner_name</OwnerNames>\\n        </OwnerNameList>\\n        <Logic>true</Logic>\\n        <DbType>polardb</DbType>\\n        <SchemaName>test_logic_db</SchemaName>\\n        <EnvType>dev</EnvType>\\n        <OwnerIdList>\\n            <OwnerIds>51****</OwnerIds>\\n        </OwnerIdList>\\n    </LogicDatabase>\\n    <RequestId>E057F5F6-298E-5A3D-B948-0E5328D56B54</RequestId>\\n    <Success>true</Success>\\n</GetLogicDatabaseResponse>","errorExample":""}]',
      'title' => '获取逻辑库信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListLogicTables' => 
    array (
      'summary' => '获取指定逻辑库下面的逻辑表详情列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'DatabaseId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '逻辑库ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'SearchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '逻辑表搜索关键字，前缀匹配。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'ReturnGuid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否返回表的GUID。',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '满足条件记录数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'LogicTableList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'LogicTable' => 
                  array (
                    'description' => '逻辑表详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DatabaseId' => 
                        array (
                          'description' => '逻辑库ID。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'TableName' => 
                        array (
                          'description' => '逻辑表表名。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'TableCount' => 
                        array (
                          'description' => '分表个数。',
                          'type' => 'string',
                          'example' => '4',
                        ),
                        'OwnerIdList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerIds' => 
                            array (
                              'description' => '逻辑表Owner ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '逻辑表Owner ID。',
                                'type' => 'string',
                                'example' => '1',
                              ),
                            ),
                          ),
                        ),
                        'OwnerNameList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerNames' => 
                            array (
                              'description' => '逻辑表Owner昵称列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '逻辑表Owner昵称。',
                                'type' => 'string',
                                'example' => 'owner_name',
                              ),
                            ),
                          ),
                        ),
                        'SchemaName' => 
                        array (
                          'description' => '逻辑表对应逻辑库名。',
                          'type' => 'string',
                          'example' => 'yuyang_test',
                        ),
                        'Logic' => 
                        array (
                          'description' => '是否逻辑表，恒为true。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'TableExpr' => 
                        array (
                          'description' => '逻辑表表达式。',
                          'type' => 'string',
                          'example' => 'test[1-4]',
                        ),
                        'TableGuid' => 
                        array (
                          'description' => '逻辑表GUID。',
                          'type' => 'string',
                          'example' => 'IDB_L_308302.yuyang_test.test_ch',
                        ),
                        'TableId' => 
                        array (
                          'description' => '逻辑表ID。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F1E6484F-9DF1-4406-9BDE-0861C4629B69',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"LogicTableList\\": {\\n    \\"LogicTable\\": [\\n      {\\n        \\"DatabaseId\\": \\"1\\",\\n        \\"TableName\\": \\"test\\",\\n        \\"TableCount\\": \\"4\\",\\n        \\"OwnerIdList\\": {\\n          \\"OwnerIds\\": [\\n            \\"1\\"\\n          ]\\n        },\\n        \\"OwnerNameList\\": {\\n          \\"OwnerNames\\": [\\n            \\"owner_name\\"\\n          ]\\n        },\\n        \\"SchemaName\\": \\"yuyang_test\\",\\n        \\"Logic\\": true,\\n        \\"TableExpr\\": \\"test[1-4]\\",\\n        \\"TableGuid\\": \\"IDB_L_308302.yuyang_test.test_ch\\",\\n        \\"TableId\\": \\"1\\"\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"F1E6484F-9DF1-4406-9BDE-0861C4629B69\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<TotalCount>1</TotalCount>\\n<RequestId>F1E6484F-9DF1-4406-9BDE-0861C4629B69</RequestId>\\n<LogicTableList>\\n    <LogicTable>\\n        <Logic>true</Logic>\\n        <OwnerNameList>\\n            <OwnerNames>xxx</OwnerNames>\\n            <OwnerNames>xxx</OwnerNames>\\n        </OwnerNameList>\\n        <TableExpr>t[1-4]</TableExpr>\\n        <DatabaseId>267</DatabaseId>\\n        <SchemaName>yuyang_test</SchemaName>\\n        <TableName>t</TableName>\\n        <TableGuid>IDB_L_3057.yuyang_test.t</TableGuid>\\n        <TableCount>4</TableCount>\\n        <OwnerIdList>\\n            <OwnerIds>88653</OwnerIds>\\n            <OwnerIds>104442</OwnerIds>\\n        </OwnerIdList>\\n        <TableId>3057</TableId>\\n    </LogicTable>\\n</LogicTableList>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '获取逻辑库中的逻辑表详情列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDBTopology' => 
    array (
      'summary' => '获取逻辑库与其对应物理分库的拓扑信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'LogicDbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '逻辑库ID。
> 您可以通过调用[ListLogicDatabases](~~141874~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '134325',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '43215',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C5B8E84B-42B6-4374-AD5A-6264E1753378',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'DBTopology' => 
              array (
                'description' => '拓扑信息',
                'type' => 'object',
                'properties' => 
                array (
                  'LogicDbId' => 
                  array (
                    'description' => '逻辑库ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1234',
                  ),
                  'LogicDbName' => 
                  array (
                    'description' => '逻辑库名。',
                    'type' => 'string',
                    'example' => 'logic_db_test',
                  ),
                  'SearchName' => 
                  array (
                    'description' => '逻辑库搜索名。',
                    'type' => 'string',
                    'example' => 'logic_db_test',
                  ),
                  'Alias' => 
                  array (
                    'description' => '逻辑库别名。',
                    'type' => 'string',
                    'example' => 'logic_db_test',
                  ),
                  'DbType' => 
                  array (
                    'description' => '数据库类型，取值请参考[dbType参数说明](~~198106~~)。',
                    'type' => 'string',
                    'example' => 'polardb',
                  ),
                  'EnvType' => 
                  array (
                    'description' => '逻辑库的环境类型，取值和说明如下：
- **product**：生产环境
- **dev**：开发环境
- **pre**：预发环境
- **test**：测试环境
- **sit**：SIT环境
- **uat**：UAT环境
- **pet**：压测环境
- **stag**：STAG环境

> 更多信息，请参见[实例环境说明](~~163309~~)。',
                    'type' => 'string',
                    'example' => 'dev',
                  ),
                  'DBTopologyInfoList' => 
                  array (
                    'description' => '分库拓扑信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '分库拓扑信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DbId' => 
                        array (
                          'description' => '库ID',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '423532',
                        ),
                        'SchemaName' => 
                        array (
                          'description' => '库名。
> 若数据库类型是PG系列，此处为PG模式名。',
                          'type' => 'string',
                          'example' => 'db_test@rm-xxx:3306',
                        ),
                        'CatalogName' => 
                        array (
                          'description' => '数据库目录名。
> 若数据库类型为PG系列，此处表示PG数据库名。',
                          'type' => 'string',
                          'example' => 'def',
                        ),
                        'SearchName' => 
                        array (
                          'description' => '库搜索名。',
                          'type' => 'string',
                          'example' => 'db_test',
                        ),
                        'DbType' => 
                        array (
                          'description' => '数据库类型，取值请参考[dbType参数说明](~~198106~~)。',
                          'type' => 'string',
                          'example' => 'polardb',
                        ),
                        'EnvType' => 
                        array (
                          'description' => '逻辑库的环境类型，取值和说明如下：
- **product**：生产环境
- **dev**：开发环境
- **pre**：预发环境
- **test**：测试环境
- **sit**：SIT环境
- **uat**：UAT环境
- **pet**：压测环境
- **stag**：STAG环境

> 更多信息，请参见[实例环境说明](~~163309~~)。',
                          'type' => 'string',
                          'example' => 'dev',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '4325325',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '实例所在地域。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'InstanceResourceId' => 
                        array (
                          'description' => '实例资源ID，取值如下：
- RDS：阿里云数据库实例ID
- ECS_OWN：阿里云ECS实例ID
- PUBLIC_OWN：空
- VPC_ID：VPC ID
- GATEWAY：数据库网关实例ID',
                          'type' => 'string',
                          'example' => 'rm-xxx',
                        ),
                        'InstanceSource' => 
                        array (
                          'description' => '实例来源，取值如下：
- **RDS**：阿里云数据库实例
- **ECS_OWN**：阿里云ECS自建库实例
- **PUBLIC_OWN**：公网自建库实例
- **VPC_ID**：VPC专线IDC数据库实例
- **GATEWAY**：数据库网关实例',
                          'type' => 'string',
                          'example' => 'RDS',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C5B8E84B-42B6-4374-AD5A-6264E1753378\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"DBTopology\\": {\\n    \\"LogicDbId\\": 1234,\\n    \\"LogicDbName\\": \\"logic_db_test\\",\\n    \\"SearchName\\": \\"logic_db_test\\",\\n    \\"Alias\\": \\"logic_db_test\\",\\n    \\"DbType\\": \\"polardb\\",\\n    \\"EnvType\\": \\"dev\\",\\n    \\"DBTopologyInfoList\\": [\\n      {\\n        \\"DbId\\": 423532,\\n        \\"SchemaName\\": \\"db_test@rm-xxx:3306\\",\\n        \\"CatalogName\\": \\"def\\",\\n        \\"SearchName\\": \\"db_test\\",\\n        \\"DbType\\": \\"polardb\\",\\n        \\"EnvType\\": \\"dev\\",\\n        \\"InstanceId\\": 4325325,\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"InstanceResourceId\\": \\"rm-xxx\\",\\n        \\"InstanceSource\\": \\"RDS\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>C5B8E84B-42B6-4374-AD5A-6264E1753378</RequestId>\\n<Success>true</Success>\\n<ErrorMessage>UnknownError</ErrorMessage>\\n<ErrorCode>UnknownError</ErrorCode>\\n<DBTopology>\\n    <LogicDbId>1234</LogicDbId>\\n    <LogicDbName>logic_db_test</LogicDbName>\\n    <SearchName>logic_db_test</SearchName>\\n    <Alias>logic_db_test</Alias>\\n    <DbType>polardb</DbType>\\n    <EnvType>dev</EnvType>\\n    <DBTopologyInfoList>\\n        <DbId>423532</DbId>\\n        <SchemaName>db_test@rm-xxx:3306</SchemaName>\\n        <CatalogName>def</CatalogName>\\n        <SearchName>db_test</SearchName>\\n        <DbType>polardb</DbType>\\n        <EnvType>dev</EnvType>\\n        <InstanceId>4325325</InstanceId>\\n        <RegionId>cn-hangzhou</RegionId>\\n        <InstanceResourceId>rm-xxx</InstanceResourceId>\\n        <InstanceSource>RDS</InstanceSource>\\n    </DBTopologyInfoList>\\n</DBTopology>","errorExample":""}]',
      'title' => '获取逻辑库拓扑信息',
    ),
    'GetTableDBTopology' => 
    array (
      'summary' => '获取数据表的拓扑图。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'TableGuid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表在DMS中的唯一识别码GUID（Globally Unique Identifier）。

> - 逻辑库：可调用[ListLogicTables](~~141875~~)接口获取，需要将ReturnGuid参数设置为true。
> - 物理库：可调用[ListTables](~~141878~~)接口获取，需要将ReturnGuid参数设置为true。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'IDB_L_9032.db-test.yuyang_test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '853F7FD4-D922-4EFB-931C-D253EF159E06',
              ),
              'DBTopology' => 
              array (
                'description' => 'DB拓扑信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'TableName' => 
                  array (
                    'description' => '表名。
> - 如果查询逻辑表，将返回逻辑表表名。
> - 如果查询物理表，将返回物理表表名。',
                    'type' => 'string',
                    'example' => 'yuyang_test',
                  ),
                  'DataSourceList' => 
                  array (
                    'description' => '数据源列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => 'Schema of Response',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Sid' => 
                        array (
                          'description' => '数据源SID。',
                          'type' => 'string',
                          'example' => 'def',
                        ),
                        'Host' => 
                        array (
                          'description' => '数据源的连接地址。',
                          'type' => 'string',
                          'example' => 'xxx.mysql.polardb.rds.aliyuncs.com',
                        ),
                        'DbType' => 
                        array (
                          'description' => '数据库类型，取值请参考[dbType参数说明](~~198106~~)。
',
                          'type' => 'string',
                          'example' => 'MySQL',
                        ),
                        'DatabaseList' => 
                        array (
                          'description' => '物理分库列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => 'Schema of Response',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'DbId' => 
                              array (
                                'description' => '库ID。',
                                'type' => 'string',
                                'example' => '489347',
                              ),
                              'DbName' => 
                              array (
                                'description' => '物理库库名。',
                                'type' => 'string',
                                'example' => 'db-test',
                              ),
                              'DbType' => 
                              array (
                                'description' => '数据库类型，取值请参考[dbType参数说明](~~198106~~)。',
                                'type' => 'string',
                                'example' => 'MySQL',
                              ),
                              'TableList' => 
                              array (
                                'description' => '物理分表列表。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => 'Schema of Response',
                                  'type' => 'object',
                                  'properties' => 
                                  array (
                                    'TableName' => 
                                    array (
                                      'description' => '物理表表名。',
                                      'type' => 'string',
                                      'example' => '151977812',
                                    ),
                                    'TableType' => 
                                    array (
                                      'description' => '表类型，保留字段。',
                                      'type' => 'string',
                                      'example' => 'yuyang_test_0000',
                                    ),
                                    'TableId' => 
                                    array (
                                      'description' => '表ID。',
                                      'type' => 'string',
                                      'example' => 'NORMAL',
                                    ),
                                  ),
                                ),
                              ),
                              'EnvType' => 
                              array (
                                'description' => '环境类型，取值和说明如下：
- **product**：生产环境
- **dev**：开发环境
- **pre**：预发环境
- **test**：测试环境
- **sit**：SIT环境
- **uat**：UAT环境
- **pet**：压测环境
- **stag**：STAG环境

> 更多信息，请参见[实例环境说明](~~163309~~)。',
                                'type' => 'string',
                                'example' => 'pre',
                              ),
                            ),
                          ),
                        ),
                        'Port' => 
                        array (
                          'description' => '数据源连接端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3306',
                        ),
                      ),
                    ),
                  ),
                  'TableGuid' => 
                  array (
                    'description' => '表在DMS中的唯一识别码GUID（Globally Unique Identifier）。',
                    'type' => 'string',
                    'example' => 'IDB_L_9032.db-test.yuyang_test',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"853F7FD4-D922-4EFB-931C-D253EF159E06\\",\\n  \\"DBTopology\\": {\\n    \\"TableName\\": \\"yuyang_test\\",\\n    \\"DataSourceList\\": [\\n      {\\n        \\"Sid\\": \\"def\\",\\n        \\"Host\\": \\"xxx.mysql.polardb.rds.aliyuncs.com\\",\\n        \\"DbType\\": \\"MySQL\\",\\n        \\"DatabaseList\\": [\\n          {\\n            \\"DbId\\": \\"489347\\",\\n            \\"DbName\\": \\"db-test\\",\\n            \\"DbType\\": \\"MySQL\\",\\n            \\"TableList\\": [\\n              {\\n                \\"TableName\\": \\"151977812\\",\\n                \\"TableType\\": \\"yuyang_test_0000\\",\\n                \\"TableId\\": \\"NORMAL\\"\\n              }\\n            ],\\n            \\"EnvType\\": \\"pre\\"\\n          }\\n        ],\\n        \\"Port\\": 3306\\n      }\\n    ],\\n    \\"TableGuid\\": \\"IDB_L_9032.db-test.yuyang_test\\"\\n  },\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetTableDBTopologyResponse>\\n    <RequestId>78F78156-2BBE-414A-8A9D-BE61CF6FA60F</RequestId>\\n    <DBTopology>\\n        <TableName>big_table</TableName>\\n        <TableGuid>IDB_270000001.film.big_table</TableGuid>\\n        <DataSourceList>\\n            <DatabaseList>\\n                <DbId>4000000</DbId>\\n                <DbName>film</DbName>\\n                <TableList>\\n                    <TableId>200000000</TableId>\\n                    <TableName>big_table</TableName>\\n                    <TableType>NORMAL</TableType>\\n                </TableList>\\n                <EnvType>product</EnvType>\\n                <DbType>mysql</DbType>\\n            </DatabaseList>\\n            <Port>3306</Port>\\n            <Host>rm-uf000000z0000002l.mysql.rds.aliyuncs.com</Host>\\n            <DbType>mysql</DbType>\\n        </DataSourceList>\\n    </DBTopology>\\n    <Success>true</Success>    \\n</GetTableDBTopologyResponse>","errorExample":""}]',
      'title' => '获取逻辑表的拓扑图',
    ),
    'ListLogicTableRouteConfig' => 
    array (
      'summary' => '获取逻辑表的路由算法配置列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '逻辑库的表ID，可通过调用接口[ListLogicTables](~~141875~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7C6A0D7D-B034-59F6-854C-32425AC6****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'MissingTableId',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'TableId is mandatory for this action.',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'LogicTableRouteConfigList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'LogicTableRouteConfig' => 
                  array (
                    'description' => '路由算法配置列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '路由算法配置列表信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'RouteKey' => 
                        array (
                          'description' => '路由算法唯一键。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'RouteExpr' => 
                        array (
                          'description' => '路由算法表达式。',
                          'type' => 'string',
                          'example' => '#id#%16\\t',
                        ),
                        'TableId' => 
                        array (
                          'description' => '逻辑表ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '4****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7C6A0D7D-B034-59F6-854C-32425AC6****\\",\\n  \\"ErrorCode\\": \\"MissingTableId\\",\\n  \\"ErrorMessage\\": \\"TableId is mandatory for this action.\\",\\n  \\"Success\\": true,\\n  \\"LogicTableRouteConfigList\\": {\\n    \\"LogicTableRouteConfig\\": [\\n      {\\n        \\"RouteKey\\": \\"1\\",\\n        \\"RouteExpr\\": \\"#id#%16\\\\\\\\t\\",\\n        \\"TableId\\": 0\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListLogicTableRouteConfigResponse>\\n    <RequestId>7C6A0D7D-B034-59F6-854C-32425AC6****</RequestId>\\n    <LogicTableRouteConfigList>\\n        <LogicTableRouteConfig>\\n            <TableId>1****</TableId>\\n            <RouteExpr>#id#%16\\t</RouteExpr>\\n            <RouteKey>1</RouteKey>\\n        </LogicTableRouteConfig>\\n        <LogicTableRouteConfig>\\n            <TableId>1****</TableId>\\n            <RouteExpr>#id#%16\\t</RouteExpr>\\n            <RouteKey>id-hash-mod17\\t</RouteKey>\\n        </LogicTableRouteConfig>\\n        <LogicTableRouteConfig>\\n            <TableId>1****</TableId>\\n            <RouteExpr>#id#%16\\t</RouteExpr>\\n            <RouteKey>id-test</RouteKey>\\n        </LogicTableRouteConfig>\\n    </LogicTableRouteConfigList>\\n    <Success>true</Success>\\n</ListLogicTableRouteConfigResponse>","errorExample":""}]',
      'title' => '获取逻辑表的路由算法列表',
    ),
    'EditLogicDatabase' => 
    array (
      'summary' => '编辑逻辑库信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Alias',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '- 如果需要修改逻辑库别名，请填入新的逻辑库别名。
- 如果不需要修改逻辑库别名，可通过调用接口[GetLogicDatabase](~~141872~~)或[GetDBTopology](~~211425~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'test_logic_db',
          ),
        ),
        1 => 
        array (
          'name' => 'LogicDbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '逻辑库ID，可通过调用接口[ListLogicDatabases](~~141874~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1***',
          ),
        ),
        2 => 
        array (
          'name' => 'DatabaseIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '逻辑库对应的所有物理库。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '- 如需修改逻辑库对应的物理分库，可通过调用接口[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)获取物理库ID（DatabaseId）的值。
- 如果不需要修改逻辑库对应的物理分库，可通过调用接口[GetDBTopology](~~211425~~)获取该辑逻辑库对应的物理库ID（DbId）的值。
',
              'type' => 'integer',
              'format' => 'int64',
              'required' => true,
              'example' => '1860****',
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C51420E3-144A-4A94-B473-8662FCF4AD10',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C51420E3-144A-4A94-B473-8662FCF4AD10\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\"\\n}","errorExample":""},{"type":"xml","example":"<EditLogicDatabaseResponse>\\n    <RequestId>C51420E3-144A-4A94-B473-8662FCF4AD10</RequestId>\\n    <Success>true</Success>\\n</EditLogicDatabaseResponse>","errorExample":""}]',
      'title' => '返回逻辑库详情信息',
    ),
    'SearchDatabase' => 
    array (
      'summary' => '搜索库详情信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'SearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索数据库名称的关键字。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'testdb',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'EnvType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库的环境类型，更多信息，请参见[实例环境说明](~~163309~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'SearchRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限范围，取值如下：
- **HAS_PERMSSION**：有权限的数据库
- **OWNER**：我Owner的数据库
- **MY_FOCUS**：我关注的数据库
- **UNKNOWN**：不限',
            'type' => 'string',
            'required' => false,
            'example' => 'HAS_PERMSSION',
          ),
        ),
        6 => 
        array (
          'name' => 'SearchTarget',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索目标，取值如下：
- **DB**：不限（不区分单库或逻辑库）
- **SINGLE_DB**：单库
- **LOGIC_DB**：逻辑库',
            'type' => 'string',
            'required' => false,
            'example' => 'SINGLE_DB',
          ),
        ),
        7 => 
        array (
          'name' => 'DbType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库类型，取值请参见[DbType参数说明](~~198106~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'MYSQL',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '满足条件的记录总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E0D21075-CD3E-4D98-8264-FD8AD04A63B6',
              ),
              'SearchDatabaseList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SearchDatabase' => 
                  array (
                    'description' => '搜索库详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '搜索库详情列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DatabaseId' => 
                        array (
                          'description' => '数据库ID。',
                          'type' => 'string',
                          'example' => '2528****',
                        ),
                        'Host' => 
                        array (
                          'description' => '数据库所在实例的连接地址。',
                          'type' => 'string',
                          'example' => 'rm-xxxx.mysql.rds.aliyuncs.com',
                        ),
                        'DbaId' => 
                        array (
                          'description' => '实例DBA角色的用户ID。',
                          'type' => 'string',
                          'example' => '10****',
                        ),
                        'SchemaName' => 
                        array (
                          'description' => '数据库名称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'Logic' => 
                        array (
                          'description' => '是否逻辑库，取值：
- **true**：是
- **false**：否',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'DatalinkName' => 
                        array (
                          'description' => '跨库查询Datalink名称。',
                          'type' => 'string',
                          'example' => 'datalink_name',
                        ),
                        'Port' => 
                        array (
                          'description' => '数据库所在实例的端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3306',
                        ),
                        'EnvType' => 
                        array (
                          'description' => '数据库的环境类型，更多信息，请参见[实例环境说明](~~163309~~)。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'Sid' => 
                        array (
                          'description' => '数据库所在实例Sid。',
                          'type' => 'string',
                          'example' => 'testSid',
                        ),
                        'OwnerIdList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerIds' => 
                            array (
                              'description' => '数据库Owner的用户ID。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '数据库Owner的用户ID列表。',
                                'type' => 'string',
                                'example' => '1',
                              ),
                            ),
                          ),
                        ),
                        'Encoding' => 
                        array (
                          'description' => '数据库的编码方式。',
                          'type' => 'string',
                          'example' => 'utf8',
                        ),
                        'DbType' => 
                        array (
                          'description' => '数据库类型。',
                          'type' => 'string',
                          'example' => 'mysql',
                        ),
                        'OwnerNameList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerNames' => 
                            array (
                              'description' => '库owner昵称列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '库Owner昵称列表。',
                                'type' => 'string',
                                'example' => 'user1',
                              ),
                            ),
                          ),
                        ),
                        'SearchName' => 
                        array (
                          'description' => '数据库搜索名。',
                          'type' => 'string',
                          'example' => 'test@xxx.xxx.xxx.xxx:3306',
                        ),
                        'Alias' => 
                        array (
                          'description' => '数据库别名。',
                          'type' => 'string',
                          'example' => 'test_rds',
                        ),
                        'CatalogName' => 
                        array (
                          'description' => '数据库目录名。
> PG系列的数据库将显示数据库名。',
                          'type' => 'string',
                          'example' => 'dmstest',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"E0D21075-CD3E-4D98-8264-FD8AD04A63B6\\",\\n  \\"SearchDatabaseList\\": {\\n    \\"SearchDatabase\\": [\\n      {\\n        \\"DatabaseId\\": \\"2528****\\",\\n        \\"Host\\": \\"rm-xxxx.mysql.rds.aliyuncs.com\\",\\n        \\"DbaId\\": \\"10****\\",\\n        \\"SchemaName\\": \\"test\\",\\n        \\"Logic\\": false,\\n        \\"DatalinkName\\": \\"datalink_name\\",\\n        \\"Port\\": 3306,\\n        \\"EnvType\\": \\"test\\",\\n        \\"Sid\\": \\"testSid\\",\\n        \\"OwnerIdList\\": {\\n          \\"OwnerIds\\": [\\n            \\"1\\"\\n          ]\\n        },\\n        \\"Encoding\\": \\"utf8\\",\\n        \\"DbType\\": \\"mysql\\",\\n        \\"OwnerNameList\\": {\\n          \\"OwnerNames\\": [\\n            \\"user1\\"\\n          ]\\n        },\\n        \\"SearchName\\": \\"test@xxx.xxx.xxx.xxx:3306\\",\\n        \\"Alias\\": \\"test_rds\\",\\n        \\"CatalogName\\": \\"dmstest\\"\\n      }\\n    ]\\n  },\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SearchDatabaseResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>E0D21075-CD3E-4D98-8264-FD8AD04A63B6</RequestId>\\n    <SearchDatabaseList>\\n        <DatabaseId>2528****</DatabaseId>\\n        <Host>rm-xxxx.mysql.rds.aliyuncs.com</Host>\\n        <DbaId>10****</DbaId>\\n        <SchemaName>test</SchemaName>\\n        <Logic>false</Logic>\\n        <DatalinkName>datalink_name</DatalinkName>\\n        <Port>3306</Port>\\n        <EnvType>test</EnvType>\\n        <Sid>testSid</Sid>\\n        <OwnerIdList>1</OwnerIdList>\\n        <Encoding>utf8</Encoding>\\n        <DbType>mysql</DbType>\\n        <OwnerNameList>user1</OwnerNameList>\\n        <SearchName>test@xxx.xxx.xxx.xxx:3306</SearchName>\\n        <Alias>test_rds</Alias>\\n    </SearchDatabaseList>\\n    <Success>true</Success>\\n</SearchDatabaseResponse>","errorExample":""}]',
      'title' => '搜索数据库详情列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SearchTable' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'SearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索表名称的关键字。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'EnvType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库的环境类型，更多信息，请参见[实例环境说明](~~163309~~)。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'PRODUCT',
          ),
        ),
        5 => 
        array (
          'name' => 'SearchRange',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限范围，取值和说明：
- **HAS_PERMSSION**：有权限的
- **OWNER**：我Owner的
- **MY_FOCUS**：我关注的
- **UNKNOWN**：不限',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'OWNER',
          ),
        ),
        6 => 
        array (
          'name' => 'SearchTarget',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索表类型，取值如下：
- **TABLE**：表，包含物理表和逻辑表
- **SINGLE_TABLE**：物理表
- **LOGIC_TABLE**：逻辑表',
            'type' => 'string',
            'required' => false,
            'example' => 'LOGIC_TABLE',
          ),
        ),
        7 => 
        array (
          'name' => 'DbType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库类型，取值为：
- **MySQL**
- **SQLServer**
- **PostgreSQL**
- **Oracle**
- **DRDS**
- **OceanBase**
- **Mongo**
- **Redis**',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'MySQL',
          ),
        ),
        8 => 
        array (
          'name' => 'ReturnGuid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否返回表GUID。',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SearchTableList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SearchTable' => 
                  array (
                    'description' => '搜索表详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DatabaseId' => 
                        array (
                          'description' => '所属的库ID。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'TableName' => 
                        array (
                          'description' => '表名。',
                          'type' => 'string',
                          'example' => 'test_table',
                        ),
                        'DBSearchName' => 
                        array (
                          'description' => '表所对应的库搜索名。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'Logic' => 
                        array (
                          'description' => '是否为逻辑表，取值：
- **true**：是
- **false**：否',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'EnvType' => 
                        array (
                          'description' => '环境类型。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'DbName' => 
                        array (
                          'description' => '库名。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'OwnerIdList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerIds' => 
                            array (
                              'description' => '表Owner ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '表Owner ID。',
                                'type' => 'string',
                                'example' => '1',
                              ),
                            ),
                          ),
                        ),
                        'Description' => 
                        array (
                          'description' => '描述信息。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'Encoding' => 
                        array (
                          'description' => '表编码。',
                          'type' => 'string',
                          'example' => 'utf8',
                        ),
                        'DbType' => 
                        array (
                          'description' => '数据库类型，取值为：
- **MySQL**
- **SQLServer**
- **PostgreSQL**
- **Oracle**
- **DRDS**
- **OceanBase**
- **Mongo**
- **Redis**',
                          'type' => 'string',
                          'example' => 'mysql',
                        ),
                        'OwnerNameList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerNames' => 
                            array (
                              'description' => '表Owner昵称列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '表Owner昵称。',
                                'type' => 'string',
                                'example' => 'user',
                              ),
                            ),
                          ),
                        ),
                        'TableSchemaName' => 
                        array (
                          'description' => '表所对应库名。',
                          'type' => 'string',
                          'example' => 'test@xxx.xxx.xxx.xxx:3306',
                        ),
                        'TableGuid' => 
                        array (
                          'description' => '表GUID。',
                          'type' => 'string',
                          'example' => 'IDB_L_9032.db-test.yuyang_test',
                        ),
                        'Engine' => 
                        array (
                          'description' => '表引擎。',
                          'type' => 'string',
                          'example' => 'innodb',
                        ),
                        'TableId' => 
                        array (
                          'description' => '表ID。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '满足搜索条件的记录总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1489257F-1B5D-4B5B-89EF-923C12CEEBD1',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"SearchTableList\\": {\\n    \\"SearchTable\\": [\\n      {\\n        \\"DatabaseId\\": \\"1\\",\\n        \\"TableName\\": \\"test_table\\",\\n        \\"DBSearchName\\": \\"test\\",\\n        \\"Logic\\": false,\\n        \\"EnvType\\": \\"test\\",\\n        \\"DbName\\": \\"test\\",\\n        \\"OwnerIdList\\": {\\n          \\"OwnerIds\\": [\\n            \\"1\\"\\n          ]\\n        },\\n        \\"Description\\": \\"test\\",\\n        \\"Encoding\\": \\"utf8\\",\\n        \\"DbType\\": \\"mysql\\",\\n        \\"OwnerNameList\\": {\\n          \\"OwnerNames\\": [\\n            \\"user\\"\\n          ]\\n        },\\n        \\"TableSchemaName\\": \\"test@xxx.xxx.xxx.xxx:3306\\",\\n        \\"TableGuid\\": \\"IDB_L_9032.db-test.yuyang_test\\",\\n        \\"Engine\\": \\"innodb\\",\\n        \\"TableId\\": \\"1\\"\\n      }\\n    ]\\n  },\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"1489257F-1B5D-4B5B-89EF-923C12CEEBD1\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SearchTableList>\\n    <SearchTable>\\n        <TableGuid>IDB_L_9032.db-test.yuyang_test</TableGuid>\\n        <Logic>false</Logic>\\n        <TableSchemaName>xxx_0000</TableSchemaName>\\n        <OwnerNameList>\\n            <OwnerNames>xxx</OwnerNames>\\n            <OwnerNames>xxx</OwnerNames>\\n            <OwnerNames>xxx</OwnerNames>\\n        </OwnerNameList>\\n        <DBSearchName>xxx_0000@pc-xxx.mysql.polardb.rds.aliyuncs.com:3306【xxx线下库】</DBSearchName>\\n        <DatabaseId>117567</DatabaseId>\\n        <Encoding>utf8mb4</Encoding>\\n        <TableName>test_aaaa</TableName>\\n        <OwnerIdList>\\n            <OwnerIds>88653</OwnerIds>\\n            <OwnerIds>88656</OwnerIds>\\n            <OwnerIds>104442</OwnerIds>\\n        </OwnerIdList>\\n        <EnvType>dev</EnvType>\\n        <Engine>InnoDB</Engine>\\n        <TableId>18396767</TableId>\\n    </SearchTable>\\n</SearchTableList>\\n<TotalCount>1</TotalCount>\\n<RequestId>1489257F-1B5D-4B5B-89EF-923C12CEEBD1</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '搜索表详情列表',
      'summary' => '搜索表详情列表。',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListDatabases' => 
    array (
      'summary' => '调用ListDatabases获取一个实例下的数据库列表详情信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，取值来自ListInstances接口返回的实例信息中的实例ID，注意不是RDS的实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '12***',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页记录数。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '实例下面库的个数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5541CDA6-F674-435C-81BD-40C2FB926CE3',
              ),
              'DatabaseList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Database' => 
                  array (
                    'description' => '数据库详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DatabaseId' => 
                        array (
                          'description' => '库ID',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'Host' => 
                        array (
                          'description' => '库所属实例的连接地址。',
                          'type' => 'string',
                          'example' => 'xxx.xxx.xxx.xxx',
                        ),
                        'CatalogName' => 
                        array (
                          'description' => '数据库目录名。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'DbaName' => 
                        array (
                          'description' => '库所属DBA昵称。',
                          'type' => 'string',
                          'example' => 'dba_user',
                        ),
                        'State' => 
                        array (
                          'description' => '库状态，取值和说明如下：
- NORMAL： 正常
- DISABLE：禁用
- OFFLINE：下线
- NOT_EXIST：不存在',
                          'type' => 'string',
                          'example' => 'NORMAL',
                        ),
                        'DbaId' => 
                        array (
                          'description' => 'DBA的ID。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'SchemaName' => 
                        array (
                          'description' => '库名。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '库所属实例的ID。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'Port' => 
                        array (
                          'description' => '库所属实例连接端口。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '3306',
                        ),
                        'EnvType' => 
                        array (
                          'description' => '库所属环境类型。',
                          'type' => 'string',
                          'example' => 'dev',
                        ),
                        'Sid' => 
                        array (
                          'description' => '库所属实例的Sid。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'OwnerIdList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerIds' => 
                            array (
                              'description' => '库Owner ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '库Owner ID。',
                                'type' => 'string',
                                'example' => '1',
                              ),
                            ),
                          ),
                        ),
                        'Encoding' => 
                        array (
                          'description' => '库编码。',
                          'type' => 'string',
                          'example' => 'utf-8',
                        ),
                        'DbType' => 
                        array (
                          'description' => '数据库类型。',
                          'type' => 'string',
                          'example' => 'mysql',
                        ),
                        'OwnerNameList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerNames' => 
                            array (
                              'description' => '库Owner昵称列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '库Owner昵称。',
                                'type' => 'string',
                                'example' => 'owner_name',
                              ),
                            ),
                          ),
                        ),
                        'SearchName' => 
                        array (
                          'description' => '搜索数据库的名称。',
                          'type' => 'string',
                          'example' => 'test@xxx.xxx.xxx.xxx:3306',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"5541CDA6-F674-435C-81BD-40C2FB926CE3\\",\\n  \\"DatabaseList\\": {\\n    \\"Database\\": [\\n      {\\n        \\"DatabaseId\\": \\"1\\",\\n        \\"Host\\": \\"xxx.xxx.xxx.xxx\\",\\n        \\"CatalogName\\": \\"1\\",\\n        \\"DbaName\\": \\"dba_user\\",\\n        \\"State\\": \\"NORMAL\\",\\n        \\"DbaId\\": \\"1\\",\\n        \\"SchemaName\\": \\"test\\",\\n        \\"InstanceId\\": \\"1\\",\\n        \\"Port\\": 3306,\\n        \\"EnvType\\": \\"dev\\",\\n        \\"Sid\\": \\"test\\",\\n        \\"OwnerIdList\\": {\\n          \\"OwnerIds\\": [\\n            \\"1\\"\\n          ]\\n        },\\n        \\"Encoding\\": \\"utf-8\\",\\n        \\"DbType\\": \\"mysql\\",\\n        \\"OwnerNameList\\": {\\n          \\"OwnerNames\\": [\\n            \\"owner_name\\"\\n          ]\\n        },\\n        \\"SearchName\\": \\"test@xxx.xxx.xxx.xxx:3306\\"\\n      }\\n    ]\\n  },\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<TotalCount>1</TotalCount>\\n<RequestId>5541CDA6-F674-435C-81BD-40C2FB926CE3</RequestId>\\n<Success>true</Success>\\n<DatabaseList>\\n    <Database>\\n        <Encoding>utf8</Encoding>\\n        <Host>pc-xxx.rwlb.rds.aliyuncs.com</Host>\\n        <InstanceId>24710</InstanceId>\\n        <DbType>polardb</DbType>\\n        <EnvType>product</EnvType>\\n        <OwnerIdList>\\n            <OwnerIds>88653</OwnerIds>\\n        </OwnerIdList>\\n        <DbaId>104442</DbaId>\\n        <OwnerNameList>\\n            <OwnerNames>dmstest</OwnerNames>\\n        </OwnerNameList>\\n        <Port>3306</Port>\\n        <DatabaseId>116366</DatabaseId>\\n        <State>NORMAL</State>\\n        <SearchName>xxx_test@pc-xxx.rwlb.rds.aliyuncs.com:3306【xxx_test】</SearchName>\\n        <DbaName>xxx[子账号]</DbaName>\\n        <SchemaName>xxx_test</SchemaName>\\n    </Database>\\n</DatabaseList>","errorExample":""}]',
      'title' => '获取实例的数据库详情列表',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListTables' => 
    array (
      'summary' => '调用ListTables获取一个库下面的表详情列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DatabaseId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理库ID，可通过调用接口[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1860****',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        4 => 
        array (
          'name' => 'SearchName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表搜索名，支持模糊搜索。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'ReturnGuid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否返回表的唯一识别码GUID（Globally Unique Identifier），取值如下：
- **true**：返回表的GUID
- **false**：不返回表的GUID',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '满足条件的表总个数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B16FB618-5E96-4FFD-BB0D-490C890A4030',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'TableList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Table' => 
                  array (
                    'description' => '表详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DatabaseId' => 
                        array (
                          'description' => '物理库ID。',
                          'type' => 'string',
                          'example' => '1860****',
                        ),
                        'TableName' => 
                        array (
                          'description' => '表名。',
                          'type' => 'string',
                          'example' => 'consumption_records',
                        ),
                        'StoreCapacity' => 
                        array (
                          'description' => '表占用存储空间容量（统计值，非精确容量），单位为MB。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1024',
                        ),
                        'OwnerIdList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerIds' => 
                            array (
                              'description' => '表Owner的用户ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '表Owner的用户ID。',
                                'type' => 'string',
                                'example' => '51****',
                              ),
                            ),
                          ),
                        ),
                        'Description' => 
                        array (
                          'description' => '表描述信息。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'Encoding' => 
                        array (
                          'description' => '表编码。',
                          'type' => 'string',
                          'example' => 'utf8',
                        ),
                        'OwnerNameList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OwnerNames' => 
                            array (
                              'description' => '表Owner的用户昵称列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '表Owner的用户昵称。',
                                'type' => 'string',
                                'example' => 'owner_name',
                              ),
                            ),
                          ),
                        ),
                        'TableSchemaName' => 
                        array (
                          'description' => '表所在的数据库。',
                          'type' => 'string',
                          'example' => 'qntest',
                        ),
                        'TableType' => 
                        array (
                          'description' => '表类型，默认为NORMAL。',
                          'type' => 'string',
                          'example' => 'NORMAL',
                        ),
                        'TableGuid' => 
                        array (
                          'description' => '表在DMS中的唯一识别码GUID（Globally Unique Identifier）。',
                          'type' => 'string',
                          'example' => 'IDB_44743****.qntest.consumption_records',
                        ),
                        'Engine' => 
                        array (
                          'description' => '表引擎。',
                          'type' => 'string',
                          'example' => 'InnoDB',
                        ),
                        'NumRows' => 
                        array (
                          'description' => '表行数（统计值，非精确行数）。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '10085',
                        ),
                        'TableId' => 
                        array (
                          'description' => '表ID。',
                          'type' => 'string',
                          'example' => '44743****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"B16FB618-5E96-4FFD-BB0D-490C890A4030\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"TableList\\": {\\n    \\"Table\\": [\\n      {\\n        \\"DatabaseId\\": \\"1860****\\",\\n        \\"TableName\\": \\"consumption_records\\",\\n        \\"StoreCapacity\\": 1024,\\n        \\"OwnerIdList\\": {\\n          \\"OwnerIds\\": [\\n            \\"51****\\"\\n          ]\\n        },\\n        \\"Description\\": \\"test\\",\\n        \\"Encoding\\": \\"utf8\\",\\n        \\"OwnerNameList\\": {\\n          \\"OwnerNames\\": [\\n            \\"owner_name\\"\\n          ]\\n        },\\n        \\"TableSchemaName\\": \\"qntest\\",\\n        \\"TableType\\": \\"NORMAL\\",\\n        \\"TableGuid\\": \\"IDB_44743****.qntest.consumption_records\\",\\n        \\"Engine\\": \\"InnoDB\\",\\n        \\"NumRows\\": 10085,\\n        \\"TableId\\": \\"44743****\\"\\n      }\\n    ]\\n  },\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListTablesResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>B16FB618-5E96-4FFD-BB0D-490C890A4030</RequestId>\\n    <TableList>\\n        <DatabaseId>1860****</DatabaseId>\\n        <TableName>consumption_records</TableName>\\n        <StoreCapacity>1024</StoreCapacity>\\n        <OwnerIdList>51****</OwnerIdList>\\n        <Description>test</Description>\\n        <Encoding>utf8</Encoding>\\n        <OwnerNameList>owner_name</OwnerNameList>\\n        <TableSchemaName>qntest</TableSchemaName>\\n        <TableType>NORMAL</TableType>\\n        <TableGuid>IDB_44743****.qntest.consumption_records</TableGuid>\\n        <Engine>InnoDB</Engine>\\n        <NumRows>10085</NumRows>\\n        <TableId>44743****</TableId>\\n    </TableList>\\n    <Success>true</Success>\\n</ListTablesResponse>","errorExample":""}]',
      'title' => '获取数据库的表详情列表',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListColumns' => 
    array (
      'summary' => '返回表的列信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'TableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表ID，可通过调用接口[ListTables](~~141878~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '39281****',
          ),
        ),
        2 => 
        array (
          'name' => 'Logic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为逻辑库，取值如下：
- **true**：逻辑库
- **false**：物理库',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0AD9AC55-5873-474A-9F33-4285806A3619',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ColumnList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Column' => 
                  array (
                    'description' => '列信息详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '字段列表信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ColumnType' => 
                        array (
                          'description' => '字段类型。',
                          'type' => 'string',
                          'example' => 'varchar',
                        ),
                        'AutoIncrement' => 
                        array (
                          'description' => '当前字段是否自增。返回值如下：
- true：自增。
- false：不自增。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'ColumnId' => 
                        array (
                          'description' => '字段ID。',
                          'type' => 'string',
                          'example' => '62589****',
                        ),
                        'DefaultValue' => 
                        array (
                          'description' => '字段默认值。',
                          'type' => 'string',
                          'example' => 'def_value',
                        ),
                        'Sensitive' => 
                        array (
                          'description' => '是否敏感字段，返回值如下：
- **true**：敏感字段
- **false**：非敏感字段',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'ColumnName' => 
                        array (
                          'description' => '字段名。',
                          'type' => 'string',
                          'example' => 'name',
                        ),
                        'SecurityLevel' => 
                        array (
                          'description' => '安全级别，返回值如下：
- INNER：内部（非敏感）
- SENSITIVE：敏感
- CONFIDENTIAL：机密

> 更多信息，请参见[字段安全等级](~~66091~~)。',
                          'type' => 'string',
                          'example' => 'INNER',
                        ),
                        'Description' => 
                        array (
                          'description' => '字段描述。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'DataPrecision' => 
                        array (
                          'description' => '字段的有效数字位数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'DataScale' => 
                        array (
                          'description' => '字段的小数位数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'FunctionType' => 
                        array (
                          'description' => '字段遮掩算法类型，返回值如下：
- null：无遮掩
- DEFAULT：全遮掩
- FIX_POS：固定位置遮掩
- FIX_CHAR：固定字符替换',
                          'type' => 'string',
                          'example' => 'DEFAULT',
                        ),
                        'Nullable' => 
                        array (
                          'description' => '字段是否可空，返回值如下：
- **true**：可空
- **false**：不可空',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'DataLength' => 
                        array (
                          'description' => '字段长度。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '4',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0AD9AC55-5873-474A-9F33-4285806A3619\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ColumnList\\": {\\n    \\"Column\\": [\\n      {\\n        \\"ColumnType\\": \\"varchar\\",\\n        \\"AutoIncrement\\": false,\\n        \\"ColumnId\\": \\"62589****\\",\\n        \\"DefaultValue\\": \\"def_value\\",\\n        \\"Sensitive\\": false,\\n        \\"ColumnName\\": \\"name\\",\\n        \\"SecurityLevel\\": \\"INNER\\",\\n        \\"Description\\": \\"test\\",\\n        \\"DataPrecision\\": 0,\\n        \\"DataScale\\": 0,\\n        \\"FunctionType\\": \\"DEFAULT\\",\\n        \\"Nullable\\": false,\\n        \\"DataLength\\": 4\\n      }\\n    ]\\n  },\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListColumnsResponse>\\n    <RequestId>0AD9AC55-5873-474A-9F33-4285806A3619</RequestId>\\n    <ColumnList>\\n        <ColumnId>62589****</ColumnId>\\n        <ColumnName>name</ColumnName>\\n        <Description/>\\n        <ColumnType>varchar(4)</ColumnType>\\n        <AutoIncrement>false</AutoIncrement>\\n        <SecurityLevel>INNER</SecurityLevel>\\n        <DataLength>4</DataLength>\\n        <Sensitive>false</Sensitive>\\n        <Nullable>false</Nullable>\\n    </ColumnList>\\n    <Success>true</Success>\\n</ListColumnsResponse>","errorExample":""}]',
      'title' => '获取表的列信息',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListIndexes' => 
    array (
      'summary' => '调用ListIndexes返回表索引信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '0',
          ),
        ),
        1 => 
        array (
          'name' => 'TableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'Logic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否逻辑表。',
            'type' => 'boolean',
            'required' => false,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1F4DE2F1-5B47-462A-A973-E02EB7AF386B',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'IndexList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Index' => 
                  array (
                    'description' => '索引详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'IndexName' => 
                        array (
                          'description' => '索引名称',
                          'type' => 'string',
                          'example' => 'idx_test',
                        ),
                        'IndexType' => 
                        array (
                          'description' => '索引类型，取值如下：
- Primary
- Unique
- Normal
- FullText
- Spatial',
                          'type' => 'string',
                          'example' => 'Primary',
                        ),
                        'TableId' => 
                        array (
                          'description' => '表ID',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'IndexId' => 
                        array (
                          'description' => '索引ID',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'IndexComment' => 
                        array (
                          'description' => '索引描述',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1F4DE2F1-5B47-462A-A973-E02EB7AF386B\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"IndexList\\": {\\n    \\"Index\\": [\\n      {\\n        \\"IndexName\\": \\"idx_test\\",\\n        \\"IndexType\\": \\"Primary\\",\\n        \\"TableId\\": \\"1\\",\\n        \\"IndexId\\": \\"1\\",\\n        \\"IndexComment\\": \\"test\\"\\n      }\\n    ]\\n  },\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>1F4DE2F1-5B47-462A-A973-E02EB7AF386B</RequestId>\\n<IndexList>\\n    <Index>\\n        <IndexComment/>\\n        <IndexType>Primary</IndexType>\\n        <IndexName>PRIMARY</IndexName>\\n        <IndexId>49331416</IndexId>\\n        <TableId>18396274</TableId>\\n    </Index>\\n</IndexList>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '获取表的索引信息',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDatabase' => 
    array (
      'summary' => '调用GetDatabase获取具体库详情信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。您可以通过调用[GetUserActiveTenant](~~198073~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'Host',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库连接地址。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '192.168.XX.XX',
          ),
        ),
        2 => 
        array (
          'name' => 'Port',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库的连接端口。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '3306',
          ),
        ),
        3 => 
        array (
          'name' => 'Sid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库Sid。
>数据库Sid是Oracle数据库的唯一标识符。当建立一个数据库时，系统将自动赋予一个初始ID。',
            'type' => 'string',
            'required' => false,
            'example' => 'test_sid',
          ),
        ),
        4 => 
        array (
          'name' => 'SchemaName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库名称。
 
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'mysql',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3CDB8601-AD74-4A47-8114-08E08CD6****',
              ),
              'Database' => 
              array (
                'description' => '数据库详情信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'DatabaseId' => 
                  array (
                    'description' => '数据库ID。',
                    'type' => 'string',
                    'example' => '984****',
                  ),
                  'Host' => 
                  array (
                    'description' => '数据库连接地址。',
                    'type' => 'string',
                    'example' => '192.168.XX.XX',
                  ),
                  'CatalogName' => 
                  array (
                    'description' => '数据库目录名。',
                    'type' => 'string',
                    'example' => 'def',
                  ),
                  'DbaName' => 
                  array (
                    'description' => '目标数据库的DBA昵称。',
                    'type' => 'string',
                    'example' => 'dba_name',
                  ),
                  'State' => 
                  array (
                    'description' => '数据库状态，返回值说明如下：
- **NORMAL**： 正常。
- **DISABL**E：禁用。
- **OFFLINE**：下线。
- **NOT_EXIST**：不存在。
',
                    'type' => 'string',
                    'example' => 'NORMAL',
                  ),
                  'DbaId' => 
                  array (
                    'description' => '目标数据库的DBA的用户ID。',
                    'type' => 'string',
                    'example' => '27****',
                  ),
                  'SchemaName' => 
                  array (
                    'description' => '数据库名称。',
                    'type' => 'string',
                    'example' => 'mysql',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'string',
                    'example' => '149****',
                  ),
                  'Port' => 
                  array (
                    'description' => '数据库连接端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3306',
                  ),
                  'EnvType' => 
                  array (
                    'description' => '数据库环境类型，返回值如下：
- **product**：生产环境。
- **dev**：开发环境。
- **pre**：预发环境。
- **test**：测试环境。
- **sit**：SIT环境。
- **uat**：UAT环境。
- **pet**：压测环境。
- **stag**：STAG环境。',
                    'type' => 'string',
                    'example' => 'product',
                  ),
                  'Sid' => 
                  array (
                    'description' => '数据库Sid。
> 仅Oracle数据库显示。',
                    'type' => 'string',
                    'example' => 'test_sid',
                  ),
                  'OwnerIdList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'OwnerIds' => 
                      array (
                        'description' => '数据库Owner的用户ID列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '数据库Owner的用户ID。',
                          'type' => 'string',
                          'example' => '27****',
                        ),
                      ),
                    ),
                  ),
                  'Encoding' => 
                  array (
                    'description' => '数据库编码。',
                    'type' => 'string',
                    'example' => 'utf8mb4',
                  ),
                  'DbType' => 
                  array (
                    'description' => '数据库类型，返回值请参见[DbType参数说明](~~198106~~)。',
                    'type' => 'string',
                    'example' => 'mysql',
                  ),
                  'OwnerNameList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'OwnerNames' => 
                      array (
                        'description' => '数据库Owner昵称列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '数据库Owner昵称。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                      ),
                    ),
                  ),
                  'SearchName' => 
                  array (
                    'description' => '数据库的搜索名称。',
                    'type' => 'string',
                    'example' => 'mysql@192.168.XX.XX:3306',
                  ),
                  'InstanceAlias' => 
                  array (
                    'description' => '实例别名。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'An unknown error occurred.',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值说明如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3CDB8601-AD74-4A47-8114-08E08CD6****\\",\\n  \\"Database\\": {\\n    \\"DatabaseId\\": \\"984****\\",\\n    \\"Host\\": \\"192.168.XX.XX\\",\\n    \\"CatalogName\\": \\"def\\",\\n    \\"DbaName\\": \\"dba_name\\",\\n    \\"State\\": \\"NORMAL\\",\\n    \\"DbaId\\": \\"27****\\",\\n    \\"SchemaName\\": \\"mysql\\",\\n    \\"InstanceId\\": \\"149****\\",\\n    \\"Port\\": 3306,\\n    \\"EnvType\\": \\"product\\",\\n    \\"Sid\\": \\"test_sid\\",\\n    \\"OwnerIdList\\": {\\n      \\"OwnerIds\\": [\\n        \\"27****\\"\\n      ]\\n    },\\n    \\"Encoding\\": \\"utf8mb4\\",\\n    \\"DbType\\": \\"mysql\\",\\n    \\"OwnerNameList\\": {\\n      \\"OwnerNames\\": [\\n        \\"test\\"\\n      ]\\n    },\\n    \\"SearchName\\": \\"mysql@192.168.XX.XX:3306\\",\\n    \\"InstanceAlias\\": \\"test\\"\\n  },\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"An unknown error occurred.\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetDatabaseResponse>\\n<RequestId>2EF65A2C-FCDC-5E14-A8B5-8D28F33A****</RequestId>\\n<Database>\\n    <SearchName>mysql@192.168.XX.XX:3306【bw-mysql-el8】</SearchName>\\n    <InstanceId>149****</InstanceId>\\n    <Port>3306</Port>\\n    <Encoding>utf8mb4</Encoding>\\n    <Host>192.168.XX.XX</Host>\\n    <DatabaseId>984****</DatabaseId>\\n    <DbType>mysql</DbType>\\n    <EnvType>product</EnvType>\\n    <DbaName>dba_name</DbaName>\\n    <DbaId>27****</DbaId>\\n    <State>NORMAL</State>\\n    <CatalogName>def</CatalogName>\\n    <OwnerNameList>\\n        <OwnerNames>test</OwnerNames>\\n    </OwnerNameList>\\n    <SchemaName>mysql</SchemaName>\\n    <OwnerIdList>\\n        <OwnerIds>27****</OwnerIds>\\n    </OwnerIdList>\\n</Database>\\n<Success>true</Success>\\n</GetDatabaseResponse>","errorExample":""}]',
      'title' => '获取具体库详情信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetPhysicalDatabase' => 
    array (
      'summary' => '调用GetPhysicalDatabase获取物理库的详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '物理库ID，您可以调用[SearchDatabase](~~141876~~)接口获取该值。
',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '43153',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，您可以调用[GetUserActiveTenant](~~198073~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '请求返回。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7FAD400F-7A5C-4193-8F9A-39D86C4F0231',
              ),
              'Database' => 
              array (
                'description' => '物理库信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'DatabaseId' => 
                  array (
                    'description' => '物理库ID。',
                    'type' => 'string',
                    'example' => '43125312',
                  ),
                  'Host' => 
                  array (
                    'description' => '数据库连接地址。',
                    'type' => 'string',
                    'example' => 'rm-xxxab3r272.mysql.rds.aliyuncs.com',
                  ),
                  'CatalogName' => 
                  array (
                    'description' => '数据库目录名。
> PG系列的数据库将显示数据库名。',
                    'type' => 'string',
                    'example' => 'def',
                  ),
                  'DbaName' => 
                  array (
                    'description' => '目标库的DBA昵称。',
                    'type' => 'string',
                    'example' => 'dmstest',
                  ),
                  'State' => 
                  array (
                    'description' => '库状态，取值说明：
- **NORMAL**： 正常
- **DISABLE**：禁用
- **OFFLINE**：下线
- **NOT_EXIST**：不存在',
                    'type' => 'string',
                    'example' => 'NORMAL',
                  ),
                  'DbaId' => 
                  array (
                    'description' => '目标库的DBA的用户ID。',
                    'type' => 'string',
                    'example' => '43253',
                  ),
                  'SchemaName' => 
                  array (
                    'description' => '数据库名。
> PG系列的数据库将显示模式名。',
                    'type' => 'string',
                    'example' => 'dmstest',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '目标库的实例ID。',
                    'type' => 'string',
                    'example' => '43215325',
                  ),
                  'Port' => 
                  array (
                    'description' => '数据库的连接端口。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '3306',
                  ),
                  'EnvType' => 
                  array (
                    'description' => '数据库的环境类型，更多信息，请参见[环境说明](~~163309~~)。',
                    'type' => 'string',
                    'example' => 'product',
                  ),
                  'Sid' => 
                  array (
                    'description' => '数据库SID。
> 仅Oracle数据库显示。',
                    'type' => 'string',
                    'example' => 'def',
                  ),
                  'OwnerIdList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'OwnerIds' => 
                      array (
                        'description' => '库Owner User ID列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '库Owner User ID。',
                          'type' => 'string',
                          'example' => '43215325',
                        ),
                      ),
                    ),
                  ),
                  'Encoding' => 
                  array (
                    'description' => '数据库编码。',
                    'type' => 'string',
                    'example' => 'utf8mb4',
                  ),
                  'DbType' => 
                  array (
                    'description' => '数据库类型。',
                    'type' => 'string',
                    'example' => 'mysql',
                  ),
                  'OwnerNameList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'OwnerNames' => 
                      array (
                        'description' => '库Owner昵称列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '库Owner昵称。',
                          'type' => 'string',
                          'example' => 'dmstest',
                        ),
                      ),
                    ),
                  ),
                  'SearchName' => 
                  array (
                    'description' => '库搜索名称。',
                    'type' => 'string',
                    'example' => 'dmstest@rm-xxxab3r272.mysql.rds.aliyuncs.com:3306',
                  ),
                  'InstanceAlias' => 
                  array (
                    'description' => '实例别名。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7FAD400F-7A5C-4193-8F9A-39D86C4F0231\\",\\n  \\"Database\\": {\\n    \\"DatabaseId\\": \\"43125312\\",\\n    \\"Host\\": \\"rm-xxxab3r272.mysql.rds.aliyuncs.com\\",\\n    \\"CatalogName\\": \\"def\\",\\n    \\"DbaName\\": \\"dmstest\\",\\n    \\"State\\": \\"NORMAL\\",\\n    \\"DbaId\\": \\"43253\\",\\n    \\"SchemaName\\": \\"dmstest\\",\\n    \\"InstanceId\\": \\"43215325\\",\\n    \\"Port\\": 3306,\\n    \\"EnvType\\": \\"product\\",\\n    \\"Sid\\": \\"def\\",\\n    \\"OwnerIdList\\": {\\n      \\"OwnerIds\\": [\\n        \\"43215325\\"\\n      ]\\n    },\\n    \\"Encoding\\": \\"utf8mb4\\",\\n    \\"DbType\\": \\"mysql\\",\\n    \\"OwnerNameList\\": {\\n      \\"OwnerNames\\": [\\n        \\"dmstest\\"\\n      ]\\n    },\\n    \\"SearchName\\": \\"dmstest@rm-xxxab3r272.mysql.rds.aliyuncs.com:3306\\",\\n    \\"InstanceAlias\\": \\"test\\"\\n  },\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetPhysicalDatabaseResponse>\\n    <RequestId>4EE2B004-9131-44B7-B6EE-6151B6329F68</RequestId>\\n    <Database>\\n        <SearchName>film@rm-uf64e.mysql.rds.aliyuncs.com:3306</SearchName>\\n        <InstanceId>1400000</InstanceId>\\n        <Port>3306</Port>\\n        <Encoding>utf8</Encoding>\\n        <Host>rm-uf64e.mysql.rds.aliyuncs.com</Host>\\n        <DatabaseId>7000000</DatabaseId>\\n        <DbType>mysql</DbType>\\n        <EnvType>dev</EnvType>\\n        <DbaName>enlun00</DbaName>\\n        <DbaId>260000</DbaId>\\n        <State>NORMAL</State>\\n        <CatalogName>def</CatalogName>\\n        <OwnerNameList>\\n            <OwnerNames>enlun</OwnerNames>\\n        </OwnerNameList>\\n        <SchemaName>film</SchemaName>\\n        <OwnerIdList>\\n            <OwnerIds>26000</OwnerIds>\\n        </OwnerIdList>\\n    </Database>\\n    <Success>true</Success>\\n</GetPhysicalDatabaseResponse>","errorExample":""}]',
      'title' => '获取物理库的详情',
    ),
    'GetTableTopology' => 
    array (
      'summary' => '调用GetTableTopology获取数据表的拓扑信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TableGuid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表在DMS中的唯一识别码GUID（Globally Unique Identifier）。

> - 逻辑库：可调用[ListLogicTables](~~141875~~)接口获取，需要将ReturnGuid参数设置为true。
> - 物理库：可调用[ListTables](~~141878~~)接口获取，需要将ReturnGuid参数设置为true。',
            'type' => 'string',
            'required' => true,
            'example' => 'IDB_L_308302.yuyang_test.test_ch',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F5ED6A40-F344-4C7D-A8F0-5685CA584CA7',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'TableTopology' => 
              array (
                'description' => '拓扑信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'TableGuid' => 
                  array (
                    'description' => '表在DMS中的唯一识别码GUID（Globally Unique Identifier）。',
                    'type' => 'string',
                    'example' => 'IDB_L_308302.yuyang_test.test_ch',
                  ),
                  'TableName' => 
                  array (
                    'description' => '表名。',
                    'type' => 'string',
                    'example' => 'test_ch',
                  ),
                  'TableTopologyInfoList' => 
                  array (
                    'description' => '表拓扑信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '表拓扑信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TableNameList' => 
                        array (
                          'description' => '表名列表。
> 以逗号隔开。',
                          'type' => 'string',
                          'example' => 'test_ch_0000,test_ch_0001,test_ch_0002,test_ch_0003,test_ch_0004,test_ch_0005',
                        ),
                        'TableNameExpr' => 
                        array (
                          'description' => '逻辑表的表名表达式。
> 物理表则不会显示该参数。',
                          'type' => 'string',
                          'example' => 'test_ch_[0000-0005]',
                        ),
                        'TableCount' => 
                        array (
                          'description' => '表数量。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '6',
                        ),
                        'DbId' => 
                        array (
                          'description' => '物理库ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '43215',
                        ),
                        'DbSearchName' => 
                        array (
                          'description' => '库搜索名。
> 建议您的业务不要强依赖该参数，后续版本的格式可能会发生变化。',
                          'type' => 'string',
                          'example' => 'yuyang_test@localhost:3306[yuyang_test_dev]',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '物理库对应的实例ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '4325325',
                        ),
                        'RegionId' => 
                        array (
                          'description' => '实例RegionId。',
                          'type' => 'string',
                          'example' => 'cn-hangzhou',
                        ),
                        'InstanceResourceId' => 
                        array (
                          'description' => '实例资源ID。',
                          'type' => 'string',
                          'example' => 'rm-xxx',
                        ),
                        'InstanceSource' => 
                        array (
                          'description' => '实例来源，取值如下：
- **RDS**：阿里云数据库实例
- **ECS_OWN**：阿里云ECS自建库实例
- **PUBLIC_OWN**：公网自建库实例
- **VPC_ID**：VPC专线IDC数据库实例
- **GATEWAY**：数据库网关实例',
                          'type' => 'string',
                          'example' => 'RDS',
                        ),
                        'DbName' => 
                        array (
                          'description' => '库名。',
                          'type' => 'string',
                          'example' => 'yuyang_test',
                        ),
                        'DbType' => 
                        array (
                          'description' => '数据库类型。',
                          'type' => 'string',
                          'example' => 'mysql',
                        ),
                      ),
                    ),
                  ),
                  'Logic' => 
                  array (
                    'description' => '是否为逻辑表，取值：
- **true**：是
- **false**：否',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F5ED6A40-F344-4C7D-A8F0-5685CA584CA7\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"TableTopology\\": {\\n    \\"TableGuid\\": \\"IDB_L_308302.yuyang_test.test_ch\\",\\n    \\"TableName\\": \\"test_ch\\",\\n    \\"TableTopologyInfoList\\": [\\n      {\\n        \\"TableNameList\\": \\"test_ch_0000,test_ch_0001,test_ch_0002,test_ch_0003,test_ch_0004,test_ch_0005\\",\\n        \\"TableNameExpr\\": \\"test_ch_[0000-0005]\\",\\n        \\"TableCount\\": 6,\\n        \\"DbId\\": 43215,\\n        \\"DbSearchName\\": \\"yuyang_test@localhost:3306[yuyang_test_dev]\\",\\n        \\"InstanceId\\": 4325325,\\n        \\"RegionId\\": \\"cn-hangzhou\\",\\n        \\"InstanceResourceId\\": \\"rm-xxx\\",\\n        \\"InstanceSource\\": \\"RDS\\",\\n        \\"DbName\\": \\"yuyang_test\\",\\n        \\"DbType\\": \\"mysql\\"\\n      }\\n    ],\\n    \\"Logic\\": true\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetTableTopologyResponse>\\n    <RequestId>7A7F0E34-8E21-4CF7-93C8-27212B122145</RequestId>\\n    <TableTopology>\\n        <TableName>big_table</TableName>\\n        <TableGuid>IDB_279000000.film.big_table</TableGuid>\\n        <Logic>false</Logic>\\n        <TableTopologyInfoList>\\n            <DbSearchName>film@rm-uf00000000240000l.mysql.rds.aliyuncs.com:3306【nissi go】</DbSearchName>\\n            <InstanceSource>RDS</InstanceSource>\\n            <InstanceResourceId>rm-uf00000000240000l</InstanceResourceId>\\n            <InstanceId>1000000</InstanceId>\\n            <TableNameList>big_table</TableNameList>\\n            <TableCount>1</TableCount>\\n            <DbId>4000000</DbId>\\n            <DbName>film</DbName>\\n            <RegionId>cn-shanghai</RegionId>\\n            <DbType>mysql</DbType>\\n        </TableTopologyInfoList>\\n    </TableTopology>\\n    <Success>true</Success>    \\n</GetTableTopologyResponse>","errorExample":""}]',
      'title' => '获取数据表的拓扑信息',
    ),
    'GetMetaTableDetailInfo' => 
    array (
      'summary' => '调用GetMetaTableDetailInfo接口获取表的字段、索引等信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '123',
          ),
        ),
        1 => 
        array (
          'name' => 'TableGuid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表在DMS中的唯一识别码GUID（Globally Unique Identifier）。

> - 逻辑库：可调用[ListLogicTables](~~141875~~)接口获取，需要将ReturnGuid参数设置为true。
> - 物理库：可调用[ListTables](~~141878~~)接口获取，需要将ReturnGuid参数设置为true。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'IDB_L_9032.db-test.yuyang_test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E881CB2F-DE42-42E5-90EB-8B3173DCB9B9',
              ),
              'DetailInfo' => 
              array (
                'description' => '表详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'IndexList' => 
                  array (
                    'description' => '索引列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'IndexColumns' => 
                        array (
                          'description' => '索引字段列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '索引字段。',
                            'type' => 'string',
                            'example' => 'id',
                          ),
                        ),
                        'IndexName' => 
                        array (
                          'description' => '索引名。',
                          'type' => 'string',
                          'example' => 'PRIMARY',
                        ),
                        'Unique' => 
                        array (
                          'description' => '是否为唯一索引。取值：
- true：是唯一索引。
- false：不是唯一索引。
',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'IndexType' => 
                        array (
                          'description' => '索引类型。例如：Primary、Unique、Normal。',
                          'type' => 'string',
                          'example' => 'Primary',
                        ),
                        'IndexId' => 
                        array (
                          'description' => '索引ID。',
                          'type' => 'string',
                          'example' => '123',
                        ),
                      ),
                    ),
                  ),
                  'ColumnList' => 
                  array (
                    'description' => '字段列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ColumnName' => 
                        array (
                          'description' => '字段名。',
                          'type' => 'string',
                          'example' => 'id',
                        ),
                        'Description' => 
                        array (
                          'description' => '字段描述。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'DataScale' => 
                        array (
                          'description' => '该字段小数后的位数。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'DataPrecision' => 
                        array (
                          'description' => '字段精度。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'ColumnType' => 
                        array (
                          'description' => '字段的数据类型。例如：Bigint 、Int、Varchar。',
                          'type' => 'string',
                          'example' => 'bigint(20) unsigned',
                        ),
                        'AutoIncrement' => 
                        array (
                          'description' => '当前字段是否自增。取值：
- true：自增。
- false：不自增。',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Position' => 
                        array (
                          'description' => '字段在表中的顺序。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                        'Nullable' => 
                        array (
                          'description' => '是否可空。取值：
- true：允许为空。
- false：不允许为空。
',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'ColumnId' => 
                        array (
                          'description' => '字段ID。',
                          'type' => 'string',
                          'example' => '191234849',
                        ),
                        'DataLength' => 
                        array (
                          'description' => '字段长度。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E881CB2F-DE42-42E5-90EB-8B3173DCB9B9\\",\\n  \\"DetailInfo\\": {\\n    \\"IndexList\\": [\\n      {\\n        \\"IndexColumns\\": [\\n          \\"id\\"\\n        ],\\n        \\"IndexName\\": \\"PRIMARY\\",\\n        \\"Unique\\": false,\\n        \\"IndexType\\": \\"Primary\\",\\n        \\"IndexId\\": \\"123\\"\\n      }\\n    ],\\n    \\"ColumnList\\": [\\n      {\\n        \\"ColumnName\\": \\"id\\",\\n        \\"Description\\": \\"test\\",\\n        \\"DataScale\\": 0,\\n        \\"DataPrecision\\": 0,\\n        \\"ColumnType\\": \\"bigint(20) unsigned\\",\\n        \\"AutoIncrement\\": true,\\n        \\"Position\\": \\"1\\",\\n        \\"Nullable\\": false,\\n        \\"ColumnId\\": \\"191234849\\",\\n        \\"DataLength\\": 0\\n      }\\n    ]\\n  },\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>E881CB2F-DE42-42E5-90EB-8B3173DCB9B9</RequestId>\\n<DetailInfo>\\n    <ColumnList>\\n        <ColumnId>191234849</ColumnId>\\n        <ColumnName>id</ColumnName>\\n        <Description>test</Description>\\n        <ColumnType>bigint(20) unsigned</ColumnType>\\n        <Position>1</Position>\\n        <AutoIncrement>true</AutoIncrement>\\n        <DataScale>0</DataScale>\\n        <DataPrecision>20</DataPrecision>\\n        <Nullable>false</Nullable>\\n    </ColumnList>\\n    <ColumnList>\\n        <ColumnId>191234850</ColumnId>\\n        <ColumnName>gmt_create</ColumnName>\\n        <Description>test</Description>\\n        <ColumnType>datetime</ColumnType>\\n        <Position>2</Position>\\n        <AutoIncrement>false</AutoIncrement>\\n        <Nullable>false</Nullable>\\n    </ColumnList>\\n    <ColumnList>\\n        <ColumnId>191234851</ColumnId>\\n        <ColumnName>gmt_modified</ColumnName>\\n        <Description>test</Description>\\n        <ColumnType>datetime</ColumnType>\\n        <Position>3</Position>\\n        <AutoIncrement>false</AutoIncrement>\\n        <Nullable>false</Nullable>\\n    </ColumnList>\\n    <IndexList>\\n        <IndexName>PRIMARY</IndexName>\\n        <IndexId>33008763</IndexId>\\n        <IndexColumns>id</IndexColumns>\\n        <Unique>false</Unique>\\n        <IndexType>Primary</IndexType>\\n    </IndexList>\\n</DetailInfo>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '获取表的字段、索引等信息',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetMetaTableColumn' => 
    array (
      'summary' => '调用GetMetaTableColumn接口获取表的字段信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'TableGuid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表在DMS中的唯一识别码（Globally Unique Identifier，简称GUID）。

- 如果数据库为逻辑库，可通过调用接口[ListLogicTables](~~141875~~)获取该参数的值。
- 如果数据库为物理库，可通过调用接口[ListTables](~~141878~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'IDB_40753****.qntest2.activity_setting',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '087DFBA1-378B-5D25-B13B-31F6409F****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'MissingTableGuid',
              ),
              'ColumnList' => 
              array (
                'description' => '字段列表信息。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ColumnType' => 
                    array (
                      'description' => '字段的数据类型。
> 字段的数据类型返回值不唯一，例如：**bigint**、**int**。',
                      'type' => 'string',
                      'example' => 'bigint(1)',
                    ),
                    'AutoIncrement' => 
                    array (
                      'description' => '字段是否自增，返回值说明如下：
- **true**：自增
- **false**：不自增',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'ColumnId' => 
                    array (
                      'description' => '字段ID。',
                      'type' => 'string',
                      'example' => '63513****',
                    ),
                    'ColumnName' => 
                    array (
                      'description' => '字段名。',
                      'type' => 'string',
                      'example' => 'has_promotion',
                    ),
                    'SecurityLevel' => 
                    array (
                      'description' => '字段的安全级别，返回值说明如下：

- **INNER**：内部（非敏感）
- **SENSITIVE**：敏感
- **CONFIDENTIAL**：机密

> 更多字段的安全信息，请参见[字段安全等级](~~66091~~)。',
                      'type' => 'string',
                      'example' => 'INNER',
                    ),
                    'PrimaryKey' => 
                    array (
                      'description' => '字段是否为主键，返回值说明如下：
- **true**：主键
- **false**：非主键',
                      'type' => 'string',
                      'example' => 'true',
                    ),
                    'Description' => 
                    array (
                      'description' => '字段描述。',
                      'type' => 'string',
                      'example' => '是否有优惠活动',
                    ),
                    'DataPrecision' => 
                    array (
                      'description' => '字段精度。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '19',
                    ),
                    'DataScale' => 
                    array (
                      'description' => '字段小数位数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '0',
                    ),
                    'Position' => 
                    array (
                      'description' => '字段在表中的顺序。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'Nullable' => 
                    array (
                      'description' => '字段是否允许为空，返回值说明如下：
- **true**：允许为空
- **false**：不允许为空',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'DataLength' => 
                    array (
                      'description' => '字段长度。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '0',
                    ),
                  ),
                ),
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'TableGuid is mandatory for this action.',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"087DFBA1-378B-5D25-B13B-31F6409F****\\",\\n  \\"ErrorCode\\": \\"MissingTableGuid\\",\\n  \\"ColumnList\\": [\\n    {\\n      \\"ColumnType\\": \\"bigint(1)\\",\\n      \\"AutoIncrement\\": false,\\n      \\"ColumnId\\": \\"63513****\\",\\n      \\"ColumnName\\": \\"has_promotion\\",\\n      \\"SecurityLevel\\": \\"INNER\\",\\n      \\"PrimaryKey\\": \\"true\\",\\n      \\"Description\\": \\"是否有优惠活动\\",\\n      \\"DataPrecision\\": 19,\\n      \\"DataScale\\": 0,\\n      \\"Position\\": 1,\\n      \\"Nullable\\": false,\\n      \\"DataLength\\": 0\\n    }\\n  ],\\n  \\"ErrorMessage\\": \\"TableGuid is mandatory for this action.\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetMetaTableColumnResponse>\\n    <RequestId>087DFBA1-378B-5D25-B13B-31F6409F****</RequestId>\\n    <ColumnList>\\n        <ColumnId>63513****</ColumnId>\\n        <ColumnName>has_promotion</ColumnName>\\n        <Description>是否有优惠活动</Description>\\n        <ColumnType>bigint(1)</ColumnType>\\n        <Position>1</Position>\\n        <AutoIncrement>false</AutoIncrement>\\n        <SecurityLevel>INNER</SecurityLevel>\\n        <DataScale>0</DataScale>\\n        <DataPrecision>19</DataPrecision>\\n        <PrimaryKey>true</PrimaryKey>\\n        <Nullable>false</Nullable>\\n    </ColumnList>\\n    <ColumnList>\\n        <ColumnId>63513****</ColumnId>\\n        <ColumnName>consumption_limit</ColumnName>\\n        <Description>消费额限制</Description>\\n        <ColumnType>int(11)</ColumnType>\\n        <Position>2</Position>\\n        <AutoIncrement>false</AutoIncrement>\\n        <SecurityLevel>INNER</SecurityLevel>\\n        <DataScale>0</DataScale>\\n        <DataPrecision>10</DataPrecision>\\n        <PrimaryKey>false</PrimaryKey>\\n        <Nullable>false</Nullable>\\n    </ColumnList>\\n    <ColumnList>\\n        <ColumnId>63513****</ColumnId>\\n        <ColumnName>quota</ColumnName>\\n        <Description>发放优惠券额度</Description>\\n        <ColumnType>int(11)</ColumnType>\\n        <Position>3</Position>\\n        <AutoIncrement>false</AutoIncrement>\\n        <SecurityLevel>INNER</SecurityLevel>\\n        <DataScale>0</DataScale>\\n        <DataPrecision>10</DataPrecision>\\n        <PrimaryKey>false</PrimaryKey>\\n        <Nullable>false</Nullable>\\n    </ColumnList>\\n    <Success>true</Success>\\n</GetMetaTableColumnResponse>","errorExample":""}]',
      'title' => '获取表的字段信息',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'SyncInstanceMeta' => 
    array (
      'summary' => '调用SyncInstanceMeta同步实例下所有数据库字典元数据。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '12***',
          ),
        ),
        2 => 
        array (
          'name' => 'IgnoreTable',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否忽略表字典元数据同步。取值：

- **true**

- **false**',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A99CD576-1E18-4E86-931E-C3CCE56DC030',
              ),
              'ErrorCode' => 
              array (
                'description' => 'DB拓扑信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，取值：

- **true**
- **false**',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A99CD576-1E18-4E86-931E-C3CCE56DC030\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SyncInstanceMetaResponse>\\n    <RequestId>A99CD576-1E18-4E86-931E-C3CCE56DC030</RequestId>\\n    <Success>true</Success>\\n</SyncInstanceMetaResponse>","errorExample":""}]',
      'title' => '同步实例下所有数据库的元数据',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'SyncDatabaseMeta' => 
    array (
      'summary' => '同步数据库字典元数据。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '123',
          ),
        ),
        2 => 
        array (
          'name' => 'Logic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为逻辑库。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A99CD576-1E18-4E86-931E-C3CCE56DC030',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"A99CD576-1E18-4E86-931E-C3CCE56DC030\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '同步数据库元数据',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'CreateOrder' => 
    array (
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '输入工单描述信息。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'PluginParam',
          'in' => 'formData',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '创建工单参数，格式为JSON形式的字符串。每个工单类型的参数设置不一致，详情请参见表格下方的**PluginParam参数补充说明**。',
            'type' => 'object',
            'required' => true,
            'docRequired' => true,
            'example' => '{PluginParam_test}',
          ),
        ),
        3 => 
        array (
          'name' => 'RelatedUserList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单相关人用户ID列表，多个相关人用半角逗号（,）隔开。',
            'type' => 'string',
            'required' => false,
            'docRequired' => true,
            'example' => 'user1,user2',
          ),
        ),
        4 => 
        array (
          'name' => 'PluginType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单类型，取值请参见[PluginType参数说明](~~429109~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DATA_EXPORT',
          ),
        ),
        5 => 
        array (
          'name' => 'AttachmentKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '上传附件成功后返回的附件Key，可通过调用接口[GetUserUploadFileJob](~~206069~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'test_AttachmentKey',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'CreateOrderResult' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'OrderIds' => 
                  array (
                    'description' => '创建成功的工单信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '工单号。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12***',
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '427688B8-ADFB-4C4E-9D45-EF5C1FD6****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"CreateOrderResult\\": {\\n    \\"OrderIds\\": [\\n      0\\n    ]\\n  },\\n  \\"RequestId\\": \\"427688B8-ADFB-4C4E-9D45-EF5C1FD6****\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateOrderResponse>\\n    <RequestId>427688B8-ADFB-4C4E-9D45-EF5C1FD6****</RequestId>\\n    <CreateOrderResult>\\n        <OrderIds>12***</OrderIds>\\n    </CreateOrderResult>\\n    <Success>true</Success>\\n</CreateOrderResponse>","errorExample":""}]',
      'title' => '创建工单',
      'summary' => '创建工单。',
      'description' => '为了降低创建工单的难度，如果您需要创建以下类型的工单，请调用专用接口创建。
- 普通数据变更工单：调用[CreateDataCorrectOrder](~~208388~~)接口。
- 历史数据清理工单：调用[CreateDataCronClearOrder](~~208385~~)接口。
- 数据导入工单：调用[CreateDataImportOrder](~~208387~~)接口。
- 无锁变更工单：调用[CreateFreeLockCorrectOrder](~~208386~~)接口。',
      'requestParamsDescription' => '### PluginParam参数补充说明

```
# 结构设计
 {
    "title": "test", // 标题
    "description": "test", // 描述
    "dbId": 11****, // 基准库
    "logic": false, // 是否逻辑库
    "relatedIds": [], // 变更相关人用户ID
  }

# 数据导出
 {
  "classify": "原因分类", // 原因分类
  "dbId": 17****, // 导出库id
  "exeSQL": "select 1", // 导出SQL
  "logic": false, // 是否逻辑库
  "ignoreAffectRows": false, // 是否忽略校验影响行数
  "affectRows": 1, // 用户预估影响行数
  "ignoreAffectRowsReason": "" // 忽略影响行数校验原因
 }

如果您需要创建更多类型的工单，请提交工单咨询。
```',
    ),
    'GetApprovalDetail' => 
    array (
      'summary' => '调用GetApprovalDetail获取工单审批详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'WorkflowInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '审批流ID，可通过调用接口[GetOrderBaseInfo](~~144642~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '184****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '66DE630B-ECA1-52A3-9198-602066F9****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'MissingWorkflowInstanceId',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'WorkflowInstanceId is mandatory for this action.',
              ),
              'ApprovalDetail' => 
              array (
                'description' => '工单审批详情信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'WorkflowNodes' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'WorkflowNode' => 
                      array (
                        'description' => '审批流程节点信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'OperateTime' => 
                            array (
                              'description' => '提交工单审批流程的时间。',
                              'type' => 'string',
                              'example' => '2019-10-15 13:47:54',
                            ),
                            'OperatorId' => 
                            array (
                              'description' => '提交工单审批流程的用户ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1****',
                            ),
                            'NodeName' => 
                            array (
                              'description' => '审批节点名称。',
                              'type' => 'string',
                              'example' => 'DBA',
                            ),
                            'AuditUserIdList' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'AuditUserIds' => 
                                array (
                                  'description' => '审批工单的用户ID列表。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'description' => '审批工单的用户ID列表，此处具体返回审批工单的用户ID。',
                                    'type' => 'string',
                                    'example' => '10****',
                                  ),
                                ),
                              ),
                            ),
                            'OperateComment' => 
                            array (
                              'description' => '审批操作备注。',
                              'type' => 'string',
                              'example' => '理由：同意',
                            ),
                            'WorkflowInsCode' => 
                            array (
                              'description' => '工单审批状态，返回值说明如下：
- **START**：初始状态
- **ERROR**：异常状态
- **AUDITING**：审批中
- **REJECT**：审批拒绝
- **CANCEL**：撤销审批
- **APPROVED**：已批准',
                              'type' => 'string',
                              'example' => 'APPROVED',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Description' => 
                  array (
                    'description' => '审批描述信息。',
                    'type' => 'string',
                    'example' => '【实例权限】申请<br/>权限类型：「登录」<br/>申请期限：30.0 days<br/>背景描述：【实例权限】test登录<br/><br/>【申请列表】<br/><span style=\'color:red\'>product</span> rm-bp144d5ky4l4rli0417****.mysql.rds.aliyuncs.com:3306 - PRODUCT<br/>',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '审批流程创建时间。',
                    'type' => 'string',
                    'example' => '2021-10-29 14:17:25',
                  ),
                  'CurrentHandlers' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'CurrentHandler' => 
                      array (
                        'description' => '当前审批处理人信息。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'NickName' => 
                            array (
                              'description' => '用户昵称。',
                              'type' => 'string',
                              'example' => 'nickName',
                            ),
                            'Id' => 
                            array (
                              'description' => '用户ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'OrderType' => 
                  array (
                    'description' => '工单类型，返回值说明如下：
- **NDDL**：结构设计
- **DATA_TRACK**：数据追踪
- **TABLE_SYNC**：库表同步
- **PERM_APPLY**：权限申请
- **DATA_EXPORT**：数据导出
- **DATA_CORRECT**：数据变更
- **OWNER_APPLY**：Owner申请
- **SENSITIVITY**：敏感列等级调整',
                    'type' => 'string',
                    'example' => 'PERM_APPLY',
                  ),
                  'Title' => 
                  array (
                    'description' => '审批标题。',
                    'type' => 'string',
                    'example' => '权限申请工单-384****',
                  ),
                  'AuditId' => 
                  array (
                    'description' => '审核单ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '184****',
                  ),
                  'OrderId' => 
                  array (
                    'description' => '工单ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '384****',
                  ),
                  'WorkflowInsCode' => 
                  array (
                    'description' => '工单审批状态，返回值说明如下：
- **AUDITING**：审批中
- **REJECT**：审批拒绝
- **CANCEL**：撤销审批
- **APPROVED**：已批准

> 一个审批流程包含了多层审批，每层都有其审批的状态码。',
                    'type' => 'string',
                    'example' => 'APPROVED',
                  ),
                  'ReasonList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Reasons' => 
                      array (
                        'description' => '审批原因列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '审批原因。',
                          'type' => 'string',
                          'example' => '根据安全规则，权限申请需要审批',
                        ),
                      ),
                    ),
                  ),
                  'TemplateId' => 
                  array (
                    'title' => '工作流模板ID',
                    'description' => '工作流模板ID',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1234',
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"66DE630B-ECA1-52A3-9198-602066F9****\\",\\n  \\"ErrorCode\\": \\"MissingWorkflowInstanceId\\",\\n  \\"ErrorMessage\\": \\"WorkflowInstanceId is mandatory for this action.\\",\\n  \\"ApprovalDetail\\": {\\n    \\"WorkflowNodes\\": {\\n      \\"WorkflowNode\\": [\\n        {\\n          \\"OperateTime\\": \\"2019-10-15 13:47:54\\",\\n          \\"OperatorId\\": 0,\\n          \\"NodeName\\": \\"DBA\\",\\n          \\"AuditUserIdList\\": {\\n            \\"AuditUserIds\\": [\\n              \\"10****\\"\\n            ]\\n          },\\n          \\"OperateComment\\": \\"理由：同意\\",\\n          \\"WorkflowInsCode\\": \\"APPROVED\\"\\n        }\\n      ]\\n    },\\n    \\"Description\\": \\"【实例权限】申请<br/>权限类型：「登录」<br/>申请期限：30.0 days<br/>背景描述：【实例权限】test登录<br/><br/>【申请列表】<br/><span style=\'color:red\'>product</span> rm-bp144d5ky4l4rli0417****.mysql.rds.aliyuncs.com:3306 - PRODUCT<br/>\\",\\n    \\"CreateTime\\": \\"2021-10-29 14:17:25\\",\\n    \\"CurrentHandlers\\": {\\n      \\"CurrentHandler\\": [\\n        {\\n          \\"NickName\\": \\"nickName\\",\\n          \\"Id\\": 1\\n        }\\n      ]\\n    },\\n    \\"OrderType\\": \\"PERM_APPLY\\",\\n    \\"Title\\": \\"权限申请工单-384****\\",\\n    \\"AuditId\\": 0,\\n    \\"OrderId\\": 0,\\n    \\"WorkflowInsCode\\": \\"APPROVED\\",\\n    \\"ReasonList\\": {\\n      \\"Reasons\\": [\\n        \\"根据安全规则，权限申请需要审批\\"\\n      ]\\n    },\\n    \\"TemplateId\\": 1234\\n  },\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetApprovalDetailResponse>\\n    <RequestId>66DE630B-ECA1-52A3-9198-602066F9****</RequestId>\\n    <ErrorCode>MissingWorkflowInstanceId</ErrorCode>\\n    <ErrorMessage>WorkflowInstanceId is mandatory for this action.</ErrorMessage>\\n    <ApprovalDetail>\\n        <WorkflowNodes>\\n            <OperateTime>2019-10-15 13:47:54</OperateTime>\\n            <NodeName>DBA</NodeName>\\n            <AuditUserIdList>10****</AuditUserIdList>\\n            <OperateComment>理由：同意</OperateComment>\\n            <WorkflowInsCode>APPROVED</WorkflowInsCode>\\n        </WorkflowNodes>\\n        <Description>【实例权限】申请&lt;br/&gt;权限类型：「登录」&lt;br/&gt;申请期限：30.0 days&lt;br/&gt;背景描述：【实例权限】test登录&lt;br/&gt;&lt;br/&gt;【申请列表】&lt;br/&gt;&lt;span style=\'color:red\'&gt;product&lt;/span&gt; rm-bp144d5ky4l4rli0417****.mysql.rds.aliyuncs.com:3306 - PRODUCT&lt;br/&gt;</Description>\\n        <CreateTime>2021-10-29 14:17:25</CreateTime>\\n        <CurrentHandlers>\\n            <NickName>nickName</NickName>\\n            <Id>1</Id>\\n        </CurrentHandlers>\\n        <OrderType>PERM_APPLY</OrderType>\\n        <Title>权限申请工单-384****</Title>\\n        <WorkflowInsCode>APPROVED</WorkflowInsCode>\\n        <ReasonList>根据安全规则，权限申请需要审批</ReasonList>\\n        <TemplateId>1234</TemplateId>\\n    </ApprovalDetail>\\n    <Success>true</Success>\\n</GetApprovalDetailResponse>","errorExample":""}]',
      'title' => '获取工单审批详情',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListOrders' => 
    array (
      'summary' => '调用ListOrders获取工单列表信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'PluginType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单类型，取值请参见[PluginType参数说明](~~429109~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'DC_COMMON',
          ),
        ),
        2 => 
        array (
          'name' => 'OrderResultType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索类型。若您不填写此参数，则默认获取您发起的工单（AS_COMMITTER）信息。取值及说明如下：
- **AS_ADMIN**：工单大盘
- **AS_COMMITTER**：我发起的工单
- **AS_HANDLER**：待我处理的工单
- **AS_OWNER**：我已处理的工单
- **AS_Related**：与我相关',
            'type' => 'string',
            'required' => false,
            'example' => 'AS_COMMITTER',
          ),
        ),
        3 => 
        array (
          'name' => 'SearchDateType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '时间搜索条件，取值如下：
- **CREATE_TIME**： 创建时间
- **MODIFY_TIME**： 修改时间',
            'type' => 'string',
            'required' => false,
            'example' => 'CREATE_TIME',
          ),
        ),
        4 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-04-08 11:00:00',
          ),
        ),
        5 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-04-09 11:00:00',
          ),
        ),
        6 => 
        array (
          'name' => 'SearchContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索内容。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        7 => 
        array (
          'name' => 'OrderStatus',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单状态，取值如下：
- **ALL**：不限
- **FINISHED**：已结束
- **RUNNING**：进行中',
            'type' => 'string',
            'required' => false,
            'example' => 'ALL',
          ),
        ),
        8 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
        9 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Orders' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Order' => 
                  array (
                    'description' => '工单列表信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Comment' => 
                        array (
                          'description' => '工单备注信息。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'LastModifyTime' => 
                        array (
                          'description' => '工单最后修改时间。',
                          'type' => 'string',
                          'example' => '2022-04-08 11:27:45',
                        ),
                        'StatusCode' => 
                        array (
                          'description' => '工单状态码，返回值如下：
- **fail**：执行失败
- **toaudit**：等待审批
- **cancel**：用户撤销工单
- **processing**：执行中
- **approved**：审批完成
- **reject**：审批撤销
- **success**：执行成功
- **closed**：工单关闭',
                          'type' => 'string',
                          'example' => 'success',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '工单创建时间。',
                          'type' => 'string',
                          'example' => '2022-04-08 11:15:46',
                        ),
                        'Committer' => 
                        array (
                          'description' => '工单提交者。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'CommitterId' => 
                        array (
                          'description' => '工单提交者的用户ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '51****',
                        ),
                        'StatusDesc' => 
                        array (
                          'description' => '工单状态描述。',
                          'type' => 'string',
                          'example' => '变更成功',
                        ),
                        'PluginType' => 
                        array (
                          'description' => '工单类型。',
                          'type' => 'string',
                          'example' => 'DC_COMMON',
                        ),
                        'OrderId' => 
                        array (
                          'description' => '工单ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '51****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '记录总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"Orders\\": {\\n    \\"Order\\": [\\n      {\\n        \\"Comment\\": \\"test\\",\\n        \\"LastModifyTime\\": \\"2022-04-08 11:27:45\\",\\n        \\"StatusCode\\": \\"success\\",\\n        \\"CreateTime\\": \\"2022-04-08 11:15:46\\",\\n        \\"Committer\\": \\"test\\",\\n        \\"CommitterId\\": 0,\\n        \\"StatusDesc\\": \\"变更成功\\",\\n        \\"PluginType\\": \\"DC_COMMON\\",\\n        \\"OrderId\\": 0\\n      }\\n    ]\\n  },\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListOrdersResponse>\\n    <Orders>\\n        <Comment>test</Comment>\\n        <LastModifyTime>2022-04-08 11:27:45</LastModifyTime>\\n        <StatusCode>success</StatusCode>\\n        <CreateTime>2022-04-08 11:15:46</CreateTime>\\n        <Committer>test</Committer>\\n        <StatusDesc>变更成功</StatusDesc>\\n        <PluginType>DC_COMMON</PluginType>\\n    </Orders>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>true</Success>\\n</ListOrdersResponse>","errorExample":""}]',
      'title' => '获取工单列表信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetOrderBaseInfo' => 
    array (
      'summary' => '调用GetOrderBaseInfo获取工单基本信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '12345',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'OrderBaseInfo' => 
              array (
                'description' => '工单基本信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'RelatedUserNickList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'UserNicks' => 
                      array (
                        'description' => '工单相关人昵称列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '工单相关人昵称。',
                          'type' => 'string',
                          'example' => 'nickname',
                        ),
                      ),
                    ),
                  ),
                  'Comment' => 
                  array (
                    'description' => '备注信息。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '工单创建时间。',
                    'type' => 'string',
                    'example' => '2019-10-10 00:00:00',
                  ),
                  'Committer' => 
                  array (
                    'description' => '提交者。',
                    'type' => 'string',
                    'example' => 'xxx',
                  ),
                  'WorkflowInstanceId' => 
                  array (
                    'description' => '审批流ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'CommitterId' => 
                  array (
                    'description' => '提交者ID，注意不是提交者的阿里云UID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'LastModifyTime' => 
                  array (
                    'description' => '工单最后修改时间。',
                    'type' => 'string',
                    'example' => '2019-10-10 00:00:00',
                  ),
                  'StatusCode' => 
                  array (
                    'description' => '工单状态码，取值如下：
- **new**：新建
- **toaudit**：审批中
- **approved**：审批通过
- **reject**：审批拒绝
- **processing**：执行中
- **success**：执行成功
- **closed**：已关闭',
                    'type' => 'string',
                    'example' => 'success',
                  ),
                  'RelatedUserList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'UserIds' => 
                      array (
                        'description' => '工单相关人ID列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '工单相关人ID。',
                          'type' => 'string',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                  'WorkflowStatusDesc' => 
                  array (
                    'description' => '审批描述信息。',
                    'type' => 'string',
                    'example' => 'approved',
                  ),
                  'StatusDesc' => 
                  array (
                    'description' => '状态描述信息。',
                    'type' => 'string',
                    'example' => 'success',
                  ),
                  'PluginType' => 
                  array (
                    'description' => '工单类型。取值及说明可参考[CreateOrder](~~465865~~)接口的相应入参说明。',
                    'type' => 'string',
                    'example' => 'DC_COMMON',
                  ),
                  'OrderId' => 
                  array (
                    'description' => '工单号。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12345',
                  ),
                  'AttachmentKey' => 
                  array (
                    'description' => '工单附件Key。仅当工单创建时上传了附件，才会返回此信息。',
                    'type' => 'string',
                    'example' => 'upload_order_info_856887_f356366f-f0f8-42fc-ba57-4a509303e814_18072d8a9bce876e3073bc655c2865f.png',
                  ),
                  'OriginAttachmentName' => 
                  array (
                    'description' => '工单附件原始文件名。仅当工单创建时上传了附件，才会返回此信息。',
                    'type' => 'string',
                    'example' => '18072d8a9bce876e3073bc655c2865f.png',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7133DF67-5B25-460F-8285-C4CC93472C2F',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"OrderBaseInfo\\": {\\n    \\"RelatedUserNickList\\": {\\n      \\"UserNicks\\": [\\n        \\"nickname\\"\\n      ]\\n    },\\n    \\"Comment\\": \\"test\\",\\n    \\"CreateTime\\": \\"2019-10-10 00:00:00\\",\\n    \\"Committer\\": \\"xxx\\",\\n    \\"WorkflowInstanceId\\": 1,\\n    \\"CommitterId\\": 1,\\n    \\"LastModifyTime\\": \\"2019-10-10 00:00:00\\",\\n    \\"StatusCode\\": \\"success\\",\\n    \\"RelatedUserList\\": {\\n      \\"UserIds\\": [\\n        \\"1\\"\\n      ]\\n    },\\n    \\"WorkflowStatusDesc\\": \\"approved\\",\\n    \\"StatusDesc\\": \\"success\\",\\n    \\"PluginType\\": \\"DC_COMMON\\",\\n    \\"OrderId\\": 12345,\\n    \\"AttachmentKey\\": \\"upload_order_info_856887_f356366f-f0f8-42fc-ba57-4a509303e814_18072d8a9bce876e3073bc655c2865f.png\\",\\n    \\"OriginAttachmentName\\": \\"18072d8a9bce876e3073bc655c2865f.png\\"\\n  },\\n  \\"RequestId\\": \\"7133DF67-5B25-460F-8285-C4CC93472C2F\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<OrderBaseInfo>\\n    <Comment>test</Comment>\\n    <CreateTime>2019-10-10 00:00:00</CreateTime>\\n    <LastModifyTime>2019-10-10 00:00:00</LastModifyTime>\\n    <OrderId>12345</OrderId>\\n    <CommitterId>1</CommitterId>\\n    <PluginType>DC_COMMON</PluginType>\\n    <StatusCode>success</StatusCode>\\n    <RelatedUserNickList>\\n        <UserNicks>a,b,c</UserNicks>\\n    </RelatedUserNickList>\\n    <StatusDesc>success</StatusDesc>\\n    <WorkflowStatusDesc>approved</WorkflowStatusDesc>\\n    <WorkflowInstanceId>1</WorkflowInstanceId>\\n    <Committer>xxx</Committer>\\n    <RelatedUserList>\\n        <UserIds>1,2,3</UserIds>\\n    </RelatedUserList>\\n</OrderBaseInfo>\\n<RequestId>7133DF67-5B25-460F-8285-C4CC93472C2F</RequestId>\\n<ErrorCode>UnknownError</ErrorCode>\\n<ErrorMessage>UnknownError</ErrorMessage>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '获取工单基本信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'SubmitOrderApproval' => 
    array (
      'summary' => '调用SubmitOrderApproval提交工单审批。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '12345',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>7AC17A86-9E6F-484B-AE8D-F9416986A108</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '提交工单审批',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ApproveOrder' => 
    array (
      'summary' => '调用ApproveOrder接口审批工单。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '12542',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdms25Q07S',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'WorkflowInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '审批流ID，可通过调用接口[GetOrderBaseInfo](~~144642~~) 获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'minimum' => '1',
            'example' => '1234',
          ),
        ),
        2 => 
        array (
          'name' => 'ApprovalType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '审批动作，取值及说明如下：
- **AGREE**：同意。
- **CANCEL**：取消。
- **REJECT**：拒绝。
- **TRANSFER**：转交。
- **ADD_APPROVAL_NODE**：加签。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
              'REJECT' => 'REJECT',
              'ADD_APPROVAL_NODE' => 'ADD_APPROVAL_NODE',
              'TRANSFER' => 'TRANSFER',
              'CANCEL' => 'CANCEL',
              'AGREE' => 'AGREE',
            ),
            'example' => 'AGREE',
            'enum' => 
            array (
              0 => 'AGREE',
              1 => 'CANCEL',
              2 => 'REJECT',
              3 => 'TRANSFER',
              4 => 'ADD_APPROVAL_NODE',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '备注信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        4 => 
        array (
          'name' => 'NewApprover',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '被转交用户的ID。ApprovalType参数为TRANSFER时必填。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '12***',
          ),
        ),
        5 => 
        array (
          'name' => 'OldApprover',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '转交用户的ID，默认为当前操作用户的ID。当用户为管理员或DBA时，可指定其他相关人员的ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '23***',
          ),
        ),
        6 => 
        array (
          'name' => 'ApprovalNodeId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ApprovalType为ADD_APPROVAL_NODE时必填。
添加的审批节点ID，该节点必须为用户自定义审批节点。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        7 => 
        array (
          'name' => 'ApprovalNodePos',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'ApprovalType为ADD_APPROVAL_NODE时必填。
加签的位置，取值及说明如下：

- **PRE_ADD_APPROVAL_NODE**：前加签。
- **POST_ADD_APPROVAL_NODE**：后加签。',
            'type' => 'string',
            'required' => false,
            'example' => 'POST_ADD_APPROVAL_NODE',
            'enum' => 
            array (
              0 => 'POST_ADD_APPROVAL_NODE',
              1 => 'PRE_ADD_APPROVAL_NODE',
            ),
          ),
        ),
        8 => 
        array (
          'name' => 'NewApproverList',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '> ApprovalType为TRANSFER（转交）时填写。NewApprover参数与本参数二选一填写即可。

被转交用户的ID列表，用户ID之间使用英文逗号分隔。',
            'type' => 'string',
            'required' => false,
            'example' => '154***,155***,156***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ApproveOrderResponse>\\n    <RequestId>427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D</RequestId>\\n    <Success>true</Success>\\n</ApproveOrderResponse>","errorExample":""}]',
      'title' => '审批工单',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CloseOrder' => 
    array (
      'summary' => '调用CloseOrder关闭工单。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1343',
          ),
        ),
        2 => 
        array (
          'name' => 'CloseReason',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '关闭原因。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'close reason',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '操作是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '关闭工单',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetOrderAttachmentFile' => 
    array (
      'summary' => '调用GetOrderAttachmentFile接口，获取工单附件下载地址。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID。可通过调用[ListOrders](~~144643~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '51****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FE8EE2F1-4880-46BC-A704-5CF63EAF9A04',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。取值说明如下：

- 请求成功不返回**ErrorCode**字段。
- 请求失败返回**ErrorCode**字段。具体信息，请参见返回示例下方的**错误码**。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'FileUrl' => 
              array (
                'description' => '附件下载地址。',
                'type' => 'string',
                'example' => 'https://dmsxxx',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FE8EE2F1-4880-46BC-A704-5CF63EAF9A04\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"FileUrl\\": \\"https://dmsxxx\\"\\n}","errorExample":""},{"type":"xml","example":"<GetOrderAttachmentFileResponse>\\n    <RequestId>FE8EE2F1-4880-46BC-A704-5CF63EAF9A04</RequestId>\\n    <Success>true</Success>\\n    <FileUrl>https://dmsxxx</FileUrl>\\n</GetOrderAttachmentFileResponse>","errorExample":""}]',
      'title' => '获取工单附件下载地址',
      'description' => '仅当工单创建时上传了附件，才可通过此接口获取附件下载地址。

> 您可通过调用[GetOrderBaseInfo](~~465868~~)接口，以AttachmentKey参数是否有返回值来判断工单创建时是否上传了附件。',
    ),
    'GetPagedInstance' => 
    array (
      'summary' => '返回指定工单的任务信息。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据归档工单号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '868*****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TraceId' => 
              array (
                'title' => 'Id of the request',
                'description' => '用于跟踪服务请求。',
                'type' => 'string',
                'example' => '0a06e1e316757357507896067d3780',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，取值：

- **true**：请求成功。

- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'PageIndex' => 
              array (
                'description' => '分页页码。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。请求的唯一标识，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '7FAD400F-7A5C-4193-8F9A-39D86C4F0231',
              ),
              'PageSize' => 
              array (
                'description' => '每页数据量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
              'Total' => 
              array (
                'description' => '任务实例总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '2',
              ),
              'Data' => 
              array (
                'description' => '返回的数据信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'Instance' => 
                  array (
                    'description' => '任务实例。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '任务实例详细信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'BusinessTime' => 
                        array (
                          'description' => '业务时间。',
                          'type' => 'string',
                          'example' => '2023-05-14 16:00:57',
                        ),
                        'CheckStatus' => 
                        array (
                          'description' => '归档校验状态，返回值如下：
- **0**：校验成功
- **1**：校验不一致
- **2**：未执行校验
- **3**：正在运行
- **4**：校验中断',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3',
                        ),
                        'DagId' => 
                        array (
                          'description' => '任务流ID，任务流的唯一标识。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '33***',
                        ),
                        'Delete' => 
                        array (
                          'description' => '是否删除归档文件。取值：

- **true**：删除。
- **false**：不删除。',
                          'type' => 'string',
                          'example' => 'false',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '任务结束的时间。',
                          'type' => 'string',
                          'example' => '2023-04-23 10:23:20',
                        ),
                        'GmtCreate' => 
                        array (
                          'description' => '创建任务流的时间。',
                          'type' => 'string',
                          'example' => '2023-03-28 10:50:45',
                        ),
                        'GmtModified' => 
                        array (
                          'description' => '更新任务流的时间。',
                          'type' => 'string',
                          'example' => '2023-04-18 15:28:16',
                        ),
                        'HistoryDagId' => 
                        array (
                          'description' => '历史任务流ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '68***',
                        ),
                        'Id' => 
                        array (
                          'description' => '任务流ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '24****',
                        ),
                        'LastRunningContext' => 
                        array (
                          'description' => '上次任务流运行的情况。',
                          'type' => 'string',
                          'example' => '{”nodes":[11***,11***]"}',
                        ),
                        'Msg' => 
                        array (
                          'description' => '本次任务运行的详细信息。',
                          'type' => 'string',
                          'example' => '”归档任务日志：xxxx“',
                        ),
                        'Status' => 
                        array (
                          'description' => '归档任务状态。
- **0**：待调度。
- **1**：正在执行。
- **2**：已暂停。
- **3**：执行失败。
- **4**：执行成功。
- **5**：完成。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'TaskType' => 
                        array (
                          'description' => '链路类型。
- **1**：归档。
- **2**：归档恢复。
- **2**：归档校验。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'TenantId' => 
                        array (
                          'description' => '租户ID。',
                          'type' => 'string',
                          'example' => '34***',
                        ),
                        'TriggerType' => 
                        array (
                          'description' => '触发类型，取值如下：
- **0**：周期调度。
- **1**：手动运行。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'Version' => 
                        array (
                          'description' => '版本号。',
                          'type' => 'string',
                          'example' => '13***',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"TraceId\\": \\"0a06e1e316757357507896067d3780\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"PageIndex\\": 1,\\n  \\"RequestId\\": \\"7FAD400F-7A5C-4193-8F9A-39D86C4F0231\\",\\n  \\"PageSize\\": 10,\\n  \\"Total\\": 2,\\n  \\"Data\\": {\\n    \\"Instance\\": [\\n      {\\n        \\"BusinessTime\\": \\"2023-05-14 16:00:57\\",\\n        \\"CheckStatus\\": 3,\\n        \\"DagId\\": 0,\\n        \\"Delete\\": \\"false\\",\\n        \\"EndTime\\": \\"2023-04-23 10:23:20\\",\\n        \\"GmtCreate\\": \\"2023-03-28 10:50:45\\",\\n        \\"GmtModified\\": \\"2023-04-18 15:28:16\\",\\n        \\"HistoryDagId\\": 0,\\n        \\"Id\\": 0,\\n        \\"LastRunningContext\\": \\"{”nodes\\\\\\":[11***,11***]\\\\\\"}\\",\\n        \\"Msg\\": \\"”归档任务日志：xxxx“\\",\\n        \\"Status\\": 1,\\n        \\"TaskType\\": 1,\\n        \\"TenantId\\": \\"34***\\",\\n        \\"TriggerType\\": 1,\\n        \\"Version\\": \\"13***\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '获取工单任务信息',
    ),
    'PreviewWorkflow' => 
    array (
      'summary' => '该API用于在正式提交审批前，预览工单审批流。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID。您可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1069****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '23****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码，请求异常时返回。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息，请求异常时返回。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'WorkflowDetail' => 
              array (
                'description' => '工作流详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'WfCateName' => 
                  array (
                    'description' => '审批模板名称。',
                    'type' => 'string',
                    'example' => 'Owner与DBA',
                  ),
                  'Comment' => 
                  array (
                    'description' => '审批模板备注。',
                    'type' => 'string',
                    'example' => '系统定义审批线，先数据Owner审批，再DBA审批。',
                  ),
                  'WorkflowNodeList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'WorkflowNode' => 
                      array (
                        'description' => '审批节点列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'NodeName' => 
                            array (
                              'description' => '审批节点名称。',
                              'type' => 'string',
                              'example' => 'Owner',
                            ),
                            'NodeType' => 
                            array (
                              'description' => '节点类型。',
                              'type' => 'string',
                              'enumValueTitles' => 
                              array (
                                'USER_LIST' => '用户自定义',
                                'UNKNOWN' => '未知',
                                'SYS' => '系统定义',
                              ),
                              'example' => 'SYS',
                            ),
                            'Comment' => 
                            array (
                              'description' => '审批节点备注。',
                              'type' => 'string',
                              'example' => '系统节点，动态计算，由用户操作的资源对应的Owner来完成审批。',
                            ),
                            'AuditUserList' => 
                            array (
                              'type' => 'object',
                              'properties' => 
                              array (
                                'AuditUser' => 
                                array (
                                  'description' => '审批用户列表。',
                                  'type' => 'array',
                                  'items' => 
                                  array (
                                    'type' => 'object',
                                    'properties' => 
                                    array (
                                      'UserId' => 
                                      array (
                                        'description' => '用户ID。',
                                        'type' => 'integer',
                                        'format' => 'int64',
                                        'example' => '16***',
                                      ),
                                      'NickName' => 
                                      array (
                                        'description' => '用户昵称。',
                                        'type' => 'string',
                                        'example' => 'Owner',
                                      ),
                                      'RealName' => 
                                      array (
                                        'description' => '用户名称。',
                                        'type' => 'string',
                                        'example' => 'db_test',
                                      ),
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"WorkflowDetail\\": {\\n    \\"WfCateName\\": \\"Owner与DBA\\",\\n    \\"Comment\\": \\"系统定义审批线，先数据Owner审批，再DBA审批。\\",\\n    \\"WorkflowNodeList\\": {\\n      \\"WorkflowNode\\": [\\n        {\\n          \\"NodeName\\": \\"Owner\\",\\n          \\"NodeType\\": \\"SYS\\",\\n          \\"Comment\\": \\"系统节点，动态计算，由用户操作的资源对应的Owner来完成审批。\\",\\n          \\"AuditUserList\\": {\\n            \\"AuditUser\\": [\\n              {\\n                \\"UserId\\": 0,\\n                \\"NickName\\": \\"Owner\\",\\n                \\"RealName\\": \\"db_test\\"\\n              }\\n            ]\\n          }\\n        }\\n      ]\\n    }\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '预览工单审批流',
    ),
    'GetOwnerApplyOrderDetail' => 
    array (
      'summary' => '获取申请库-Owner、表-Owner、实例-Owner的工单详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '730000',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'CB784055-E8CB-4461-AB0B-483A1DA32BB5',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'OwnerApplyOrderDetail' => 
              array (
                'description' => '工单详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'ApplyType' => 
                  array (
                    'description' => '申请类型，取值和说明如下：
- **INSTANCE**：实例Owner
- **DB**：库Owner
- **TABLE**：表Owner',
                    'type' => 'string',
                    'example' => 'DB',
                  ),
                  'Resources' => 
                  array (
                    'description' => '申请资源详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '资源详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Logic' => 
                        array (
                          'description' => '是否为逻辑库，取值：
- **true**：是
- **false**：否',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'TargetId' => 
                        array (
                          'description' => '资源ID。',
                          'type' => 'string',
                          'example' => '12345',
                        ),
                        'ResourceDetail' => 
                        array (
                          'description' => '资源详情。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SearchName' => 
                            array (
                              'description' => '资源搜索名。
> 建议您的业务不要强依赖该参数，后续版本的格式可能会发生变化。',
                              'type' => 'string',
                              'example' => 'yuyang[test]',
                            ),
                            'DbType' => 
                            array (
                              'description' => '数据库类型。',
                              'type' => 'string',
                              'example' => 'MYSQL',
                            ),
                            'EnvType' => 
                            array (
                              'description' => '实例的环境类型，更多信息，请参见[实例环境说明](~~163309~~)。',
                              'type' => 'string',
                              'example' => 'PRODUCT',
                            ),
                            'TableName' => 
                            array (
                              'description' => '表名。
> 申请表Owner时，将返回此参数。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'OwnerIds' => 
                            array (
                              'description' => '原Owner ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'Owner ID。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '132453',
                              ),
                            ),
                            'OwnerNickNames' => 
                            array (
                              'description' => '原Owner昵称列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'Owner昵称。',
                                'type' => 'string',
                                'example' => 'test_user',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CB784055-E8CB-4461-AB0B-483A1DA32BB5\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"OwnerApplyOrderDetail\\": {\\n    \\"ApplyType\\": \\"DB\\",\\n    \\"Resources\\": [\\n      {\\n        \\"Logic\\": true,\\n        \\"TargetId\\": \\"12345\\",\\n        \\"ResourceDetail\\": {\\n          \\"SearchName\\": \\"yuyang[test]\\",\\n          \\"DbType\\": \\"MYSQL\\",\\n          \\"EnvType\\": \\"PRODUCT\\",\\n          \\"TableName\\": \\"test\\",\\n          \\"OwnerIds\\": [\\n            132453\\n          ],\\n          \\"OwnerNickNames\\": [\\n            \\"test_user\\"\\n          ]\\n        }\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetOwnerApplyOrderDetailResponse>\\n    <OwnerApplyOrderDetail>\\n    <ApplyType>DB</ApplyType>\\n    <Resources>\\n        <ResourceDetail>\\n            <SearchName>gp_toolkit@gp-bp18anxxxxxxxt48z.gpdb.rds.aliyuncs.com:3432</SearchName>\\n            <OwnerNickNames>gctest</OwnerNickNames>\\n            <EnvType>PRODUCT</EnvType>\\n            <DbType>ADB_POSTGRESQL</DbType>\\n            <OwnerIds>128000</OwnerIds>\\n        </ResourceDetail>\\n        <Logic>false</Logic>\\n        <TargetId>116000</TargetId>\\n    </Resources>\\n    </OwnerApplyOrderDetail>\\n    <RequestId>6976762B-AEA4-4EF0-9C42-46EC5477D780</RequestId>\\n    <Success>true</Success>\\n</GetOwnerApplyOrderDetailResponse>","errorExample":""}]',
      'title' => '获取申请数据权限工单详情',
    ),
    'GetPermApplyOrderDetail' => 
    array (
      'summary' => '调用GetPermApplyOrderDetail获取权限申请的工单详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID。可调用[ListOrders](~~465867~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '73****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'A4C4499E-5AC2-4318-9FCF-03E426781A04',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '调用失败时，返回的错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'PermApplyOrderDetail' => 
              array (
                'description' => '权限申请详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'Resources' => 
                  array (
                    'description' => '资源详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '资源详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DatabaseInfo' => 
                        array (
                          'description' => '数据库信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DbId' => 
                            array (
                              'description' => '数据库ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '12345',
                            ),
                            'Logic' => 
                            array (
                              'description' => '是否为逻辑库，取值：
- **true**：是
- **false**：否',
                              'type' => 'boolean',
                              'example' => 'false',
                            ),
                            'DbType' => 
                            array (
                              'description' => '数据库类型。',
                              'type' => 'string',
                              'example' => 'MySQL',
                            ),
                            'SearchName' => 
                            array (
                              'description' => '数据库搜索名。

> 建议您的业务不要强依赖该参数，后续版本的格式可能会发生变化。',
                              'type' => 'string',
                              'example' => 'test@xxxx:3306[test]',
                            ),
                            'OwnerIds' => 
                            array (
                              'description' => '库Owner ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'Owner ID。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '12345',
                              ),
                            ),
                            'OwnerNickNames' => 
                            array (
                              'description' => '库Owner昵称列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'Owner昵称。',
                                'type' => 'string',
                                'example' => 'test_user',
                              ),
                            ),
                            'EnvType' => 
                            array (
                              'description' => '实例的环境类型，更多信息，请参见[实例环境说明](~~163309~~)。',
                              'type' => 'string',
                              'example' => 'product',
                            ),
                          ),
                        ),
                        'TableInfo' => 
                        array (
                          'description' => '表信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TableName' => 
                            array (
                              'description' => '表名。',
                              'type' => 'string',
                              'example' => 'test_tb',
                            ),
                          ),
                        ),
                        'ColumnInfo' => 
                        array (
                          'description' => '字段信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TableName' => 
                            array (
                              'description' => '表名。',
                              'type' => 'string',
                              'example' => 'test_tb',
                            ),
                            'ColumnName' => 
                            array (
                              'description' => '字段名。',
                              'type' => 'string',
                              'example' => 'test_col',
                            ),
                          ),
                        ),
                        'InstanceInfo' => 
                        array (
                          'description' => '实例信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'InstanceId' => 
                            array (
                              'description' => '实例ID。',
                              'type' => 'string',
                              'example' => '12345',
                            ),
                            'SearchName' => 
                            array (
                              'description' => '搜索名。',
                              'type' => 'string',
                              'example' => 'xxxx:3306',
                            ),
                            'DbType' => 
                            array (
                              'description' => '数据库类型。',
                              'type' => 'string',
                              'example' => 'MySQL',
                            ),
                            'EnvType' => 
                            array (
                              'description' => '实例的环境类型，更多信息，请参见[实例环境说明](~~163309~~)。',
                              'type' => 'string',
                              'example' => 'product',
                            ),
                            'Host' => 
                            array (
                              'description' => '连接地址。',
                              'type' => 'string',
                              'example' => 'xxxx',
                            ),
                            'Port' => 
                            array (
                              'description' => '连接端口。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '3306',
                            ),
                            'OwnerIds' => 
                            array (
                              'description' => '实例Owner ID列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'Owner ID。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '12345',
                              ),
                            ),
                            'OwnerNickName' => 
                            array (
                              'description' => '实例Owner昵称。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => 'Owner昵称。',
                                'type' => 'string',
                                'example' => 'test_owner',
                              ),
                            ),
                            'DbaId' => 
                            array (
                              'description' => '实例DBA的ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '123****',
                            ),
                            'DbaNickName' => 
                            array (
                              'description' => '实例DBA昵称。',
                              'type' => 'string',
                              'example' => 'test_dba',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'PermType' => 
                  array (
                    'description' => '权限类型，取值和说明如下：
- **1**：查询
- **2**：导出
- **3**：查询和导出
- **4**：变更
- **5**：查询和变更
- **6**：导出和变更
- **7**：查询、导出和变更
- **8**：登录',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '7',
                  ),
                  'Seconds' => 
                  array (
                    'description' => '权限时长，单位为秒。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '3600',
                  ),
                  'ApplyType' => 
                  array (
                    'description' => '申请权限类型，取值和说明如下：
- **DB**：库权限
- **TAB**：表权限
- **COL**：列权限
- **INSTANT**：实例权限',
                    'type' => 'string',
                    'example' => 'DB',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A4C4499E-5AC2-4318-9FCF-03E426781A04\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"PermApplyOrderDetail\\": {\\n    \\"Resources\\": [\\n      {\\n        \\"DatabaseInfo\\": {\\n          \\"DbId\\": 12345,\\n          \\"Logic\\": false,\\n          \\"DbType\\": \\"MySQL\\",\\n          \\"SearchName\\": \\"test@xxxx:3306[test]\\",\\n          \\"OwnerIds\\": [\\n            12345\\n          ],\\n          \\"OwnerNickNames\\": [\\n            \\"test_user\\"\\n          ],\\n          \\"EnvType\\": \\"product\\"\\n        },\\n        \\"TableInfo\\": {\\n          \\"TableName\\": \\"test_tb\\"\\n        },\\n        \\"ColumnInfo\\": {\\n          \\"TableName\\": \\"test_tb\\",\\n          \\"ColumnName\\": \\"test_col\\"\\n        },\\n        \\"InstanceInfo\\": {\\n          \\"InstanceId\\": \\"12345\\",\\n          \\"SearchName\\": \\"xxxx:3306\\",\\n          \\"DbType\\": \\"MySQL\\",\\n          \\"EnvType\\": \\"product\\",\\n          \\"Host\\": \\"xxxx\\",\\n          \\"Port\\": 3306,\\n          \\"OwnerIds\\": [\\n            12345\\n          ],\\n          \\"OwnerNickName\\": [\\n            \\"test_owner\\"\\n          ],\\n          \\"DbaId\\": 0,\\n          \\"DbaNickName\\": \\"test_dba\\"\\n        }\\n      }\\n    ],\\n    \\"PermType\\": 7,\\n    \\"Seconds\\": 3600,\\n    \\"ApplyType\\": \\"DB\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetPermApplyOrderDetailResponse>\\n    <PermApplyOrderDetail>\\n        <ApplyType>DB</ApplyType>\\n        <PermType>1</PermType>\\n        <Seconds>2592000</Seconds>\\n        <Resources>\\n            <DatabaseInfo>\\n                <SearchName>rds_db@rm-bpxxxxxxxxffxxxxxxi.mysql.rds.aliyuncs.com:3306</SearchName>\\n                <OwnerNickNames>gctest</OwnerNickNames>\\n                <DbId>1250000</DbId>\\n                <Logic>false</Logic>\\n                <EnvType>dev</EnvType>\\n                <DbType>mysql</DbType>\\n                <OwnerIds>120000</OwnerIds>\\n            </DatabaseInfo>\\n            <ColumnInfo/>\\n            <TableInfo/>\\n            <InstanceInfo/>\\n        </Resources>\\n    </PermApplyOrderDetail>\\n    <RequestId>806FBC5B-2AED-401C-9E00-0B91C1DB2F1A</RequestId>\\n    <Success>true</Success>\\n</GetPermApplyOrderDetailResponse>","errorExample":""}]',
      'title' => '获取申请操作权限的工单详情',
      'description' => '本接口适用获取：**库-权限**、**表-权限**、**敏感列-权限**。',
    ),
    'CreateStructSyncOrder' => 
    array (
      'summary' => '创建变更工单。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单备注。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'RelatedUserList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '相关人ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '相关人ID。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '432***',
            ),
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'Param',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '工单参数。',
            'type' => 'object',
            'properties' => 
            array (
              'Source' => 
              array (
                'description' => '基准库信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'DbId' => 
                  array (
                    'description' => '库ID，可调用[SearchDatabases](~~141876~~)接口获取。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => true,
                    'example' => '432****',
                  ),
                  'DbSearchName' => 
                  array (
                    'description' => '库搜索名，可调用[SearchDatabases](~~141876~~)接口获取。',
                    'type' => 'string',
                    'required' => true,
                    'example' => 'test',
                  ),
                  'Logic' => 
                  array (
                    'description' => '是否为逻辑库，取值：
- **true**：是
- **false**：否',
                    'type' => 'boolean',
                    'required' => false,
                    'example' => 'false',
                  ),
                  'VersionId' => 
                  array (
                    'description' => '版本号，默认为最新的表结构版本，更多信息，请参见[管理表结构版本](~~202275~~)。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'e179bbb8163dcdcfacda24858bedb4d8006ae2b8',
                  ),
                ),
                'required' => true,
              ),
              'Target' => 
              array (
                'description' => '目标库信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'DbId' => 
                  array (
                    'description' => '库ID，可调用[SearchDatabases](~~141876~~)接口获取。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'required' => true,
                    'example' => '432***',
                  ),
                  'DbSearchName' => 
                  array (
                    'description' => '库搜索名，可调用[SearchDatabases](~~141876~~)接口获取。',
                    'type' => 'string',
                    'required' => true,
                    'example' => 'test',
                  ),
                  'Logic' => 
                  array (
                    'description' => '是否为逻辑库，取值：
- **true**：是
- **false**：否',
                    'type' => 'boolean',
                    'required' => false,
                    'example' => 'false',
                  ),
                  'VersionId' => 
                  array (
                    'description' => '版本号。
> 当您输入目标库的表结构版本号时，该工单仅会对比两个库之间的表结构。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'e179bbb8163dcdcfacda24858bedb4d8006ae2b8',
                  ),
                ),
                'required' => true,
              ),
              'IgnoreError' => 
              array (
                'description' => '是否忽略报错，取值：
- **true**：忽略，遇到错误会跳过当前失败SQL脚本，继续执行。
- **false**：不忽略，遇到出错则中断后面的SQL脚本，不再执行。',
                'type' => 'boolean',
                'required' => false,
                'example' => 'false',
              ),
              'TableInfoList' => 
              array (
                'description' => '同步的表信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '同步的表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SourceTableName' => 
                    array (
                      'description' => '源表表名。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'test_tbl',
                    ),
                    'TargetTableName' => 
                    array (
                      'description' => '目标表表名。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'test_tbl',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => false,
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'AttachmentKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '上传附件成功后返回的附件Key，您可以调用[GetUserUploadFileJob](~~206069~~)接口获取。',
            'type' => 'string',
            'required' => false,
            'example' => 'upload_3c7edea3-e4c3-4403-857d-737043036f69_test.sql',
          ),
        ),
        4 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E1D2B4D-3E53-4ABC-999D-1D2520B3471A',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'CreateOrderResult' => 
              array (
                'description' => '创建工单结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '工单号。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'example' => '432****',
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4E1D2B4D-3E53-4ABC-999D-1D2520B3471A\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"CreateOrderResult\\": [\\n    0\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CreateStructSyncOrderResponse>\\n    <CreateOrderResult>2000000</CreateOrderResult>\\n    <RequestId>0DF19315-DCAF-4376-8006-1CEB0BBC6B13</RequestId>\\n    <Success>true</Success>\\n</CreateStructSyncOrderResponse>","errorExample":""}]',
      'title' => '创建结构同步工单',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'GetStructSyncOrderDetail' => 
    array (
      'summary' => '调用GetStructSyncOrderDetail获取结构同步的工单详情信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '43****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E1D2B4D-3E53-4ABC-999D-1D2520B3471A',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'StructSyncOrderDetail' => 
              array (
                'description' => '结构同步工单详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'SourceDatabaseInfo' => 
                  array (
                    'description' => '源库信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'DbId' => 
                      array (
                        'description' => '库ID。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '432532',
                      ),
                      'SearchName' => 
                      array (
                        'description' => '库搜索名。',
                        'type' => 'string',
                        'example' => 'test',
                      ),
                      'DbType' => 
                      array (
                        'description' => '数据库类型。',
                        'type' => 'string',
                        'example' => 'MySQL',
                      ),
                      'EnvType' => 
                      array (
                        'description' => '实例的环境类型，更多信息，请参见[实例环境说明](~~163309~~)。',
                        'type' => 'string',
                        'example' => 'dev',
                      ),
                      'Logic' => 
                      array (
                        'description' => '是否为逻辑库，取值：
- **true**：是
- **false**：否',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                    ),
                  ),
                  'TargetDatabaseInfo' => 
                  array (
                    'description' => '目标库信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'DbId' => 
                      array (
                        'description' => '库ID。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '432543',
                      ),
                      'SearchName' => 
                      array (
                        'description' => '库搜索名。',
                        'type' => 'string',
                        'example' => 'test',
                      ),
                      'DbType' => 
                      array (
                        'description' => '数据库类型。',
                        'type' => 'string',
                        'example' => 'MySQL',
                      ),
                      'EnvType' => 
                      array (
                        'description' => '实例的环境类型，更多信息，请参见[实例环境说明](~~163309~~)。',
                        'type' => 'string',
                        'example' => 'dev',
                      ),
                      'Logic' => 
                      array (
                        'description' => '是否为逻辑库，取值：
- **true**：是
- **false**：否',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                    ),
                  ),
                  'SourceType' => 
                  array (
                    'description' => '表结构类型，取值和说明如下：
- **DATASOURCE**：系统默认的最新版。
- **VERSION**：手动输入的历史版本。',
                    'type' => 'string',
                    'example' => 'VERSION',
                  ),
                  'SourceVersionInfo' => 
                  array (
                    'description' => '源版本信息。
> 仅当**SourceType**为**VERSION**时显示。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'VersionId' => 
                      array (
                        'description' => '版本号。',
                        'type' => 'string',
                        'example' => 'e179bbb8163dcdcfacda24858bedb4d8006ae2b8',
                      ),
                    ),
                  ),
                  'TargetType' => 
                  array (
                    'description' => '表结构类型，取值和说明如下：
- **DATASOURCE**：系统默认的最新版。
- **VERSION**：手动输入的历史版本。',
                    'type' => 'string',
                    'example' => 'DATASOURCE',
                  ),
                  'TargetVersionInfo' => 
                  array (
                    'description' => '目标版本信息。
> 仅当**SourceType**为**VERSION**时显示。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'VersionId' => 
                      array (
                        'description' => '版本号。',
                        'type' => 'string',
                        'example' => 'e179bbb8163dcdcfacda24858bedb4d8006ae2b8',
                      ),
                    ),
                  ),
                  'TableInfoList' => 
                  array (
                    'description' => '同步的表信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '同步的表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SourceTableName' => 
                        array (
                          'description' => '源表表名。',
                          'type' => 'string',
                          'example' => 'test_tbl',
                        ),
                        'TargetTableName' => 
                        array (
                          'description' => '目标表表名。',
                          'type' => 'string',
                          'example' => 'test_tbl',
                        ),
                      ),
                    ),
                  ),
                  'IgnoreError' => 
                  array (
                    'description' => '是否忽略报错，取值：
- **true**：忽略，遇到错误会跳过当前失败SQL脚本，继续执行。
- **false**：不忽略，遇到出错则中断后面的SQL脚本，不再执行。',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4E1D2B4D-3E53-4ABC-999D-1D2520B3471A\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"StructSyncOrderDetail\\": {\\n    \\"SourceDatabaseInfo\\": {\\n      \\"DbId\\": 432532,\\n      \\"SearchName\\": \\"test\\",\\n      \\"DbType\\": \\"MySQL\\",\\n      \\"EnvType\\": \\"dev\\",\\n      \\"Logic\\": false\\n    },\\n    \\"TargetDatabaseInfo\\": {\\n      \\"DbId\\": 432543,\\n      \\"SearchName\\": \\"test\\",\\n      \\"DbType\\": \\"MySQL\\",\\n      \\"EnvType\\": \\"dev\\",\\n      \\"Logic\\": false\\n    },\\n    \\"SourceType\\": \\"VERSION\\",\\n    \\"SourceVersionInfo\\": {\\n      \\"VersionId\\": \\"e179bbb8163dcdcfacda24858bedb4d8006ae2b8\\"\\n    },\\n    \\"TargetType\\": \\"DATASOURCE\\",\\n    \\"TargetVersionInfo\\": {\\n      \\"VersionId\\": \\"e179bbb8163dcdcfacda24858bedb4d8006ae2b8\\"\\n    },\\n    \\"TableInfoList\\": [\\n      {\\n        \\"SourceTableName\\": \\"test_tbl\\",\\n        \\"TargetTableName\\": \\"test_tbl\\"\\n      }\\n    ],\\n    \\"IgnoreError\\": false\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetStructSyncOrderDetailResponse>\\n    <RequestId>CA4E966B-1A57-4230-B0BB-CBB9CAF2CEDC</RequestId>\\n    <StructSyncOrderDetail>\\n        <SourceDatabaseInfo>\\n            <SearchName>poc_dev@rm-uxxxxx.mysql.rds.aliyuncs.com:3306</SearchName>\\n            <DbId>800000</DbId>\\n            <Logic>false</Logic>\\n            <EnvType>dev</EnvType>\\n            <DbType>mysql</DbType>\\n        </SourceDatabaseInfo>\\n        <SourceType>DATASOURCE</SourceType>\\n        <TargetType>DATASOURCE</TargetType>\\n        <IgnoreError>false</IgnoreError>\\n        <TargetDatabaseInfo>\\n            <SearchName>film@rm-uf64xxxxe.mysql.rds.aliyuncs.com:3306</SearchName>\\n            <DbId>700000</DbId>\\n            <Logic>false</Logic>\\n            <EnvType>dev</EnvType>\\n            <DbType>mysql</DbType>\\n        </TargetDatabaseInfo>\\n        <TableInfoList>\\n            <SourceTableName>*</SourceTableName>\\n            <TargetTableName>*</TargetTableName>\\n        </TableInfoList>\\n    </StructSyncOrderDetail>\\n    <Success>true</Success>\\n</GetStructSyncOrderDetailResponse>","errorExample":""}]',
      'title' => '获取结构同步的工单详情信息',
    ),
    'GetStructSyncJobDetail' => 
    array (
      'summary' => '调用GetStructSyncJobDetail获取结构同步的任务详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '4324321',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '48602B78-0DDF-414C-8688-70CAB6070115',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'StructSyncJobDetail' => 
              array (
                'description' => '结构同步任务详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'JobStatus' => 
                  array (
                    'description' => '任务状态，取值和说明如下：
- **NEW**：新创建。
- **COMPARING**：正在对比结构。
- **COMPARE_BREAK**：对比手动中断。
- **COMPARE_FINISH**：对比完成。
- **NOT_SCRIPTS**：对比完成, 没有可执行脚本。
- **SUBMITED_DBTASK**：已提交DBTask。
- **DBTASK_SUCCESS**：DBTask执行成功。
- **SUBMITED_WORKFLOW**：提交审批。
- **WORKFLOW_SUCCESS**：审批结束。',
                    'type' => 'string',
                    'example' => 'DBTASK_SUCCESS',
                  ),
                  'Message' => 
                  array (
                    'description' => '任务描述信息。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'TableAnalyzed' => 
                  array (
                    'description' => '已经分析的表。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2',
                  ),
                  'TableCount' => 
                  array (
                    'description' => '表的总数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2',
                  ),
                  'SqlCount' => 
                  array (
                    'description' => 'SQL总数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'ExecuteCount' => 
                  array (
                    'description' => '已执行的SQL数量。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'SecurityRule' => 
                  array (
                    'description' => '安全规则描述，取值：
- **CANNOT_SYNC**：不允许同步。
- **WITH_APPROVE**：需通过审批后进行同步，可调用[SubmitStructSyncOrderApproval](~~206166~~)接口发起审批流程。
- **WITHOUT_APPROVE**：不需要审批即可进行同步。',
                    'type' => 'string',
                    'example' => 'WITHOUT_APPROVE',
                  ),
                  'DBTaskGroupId' => 
                  array (
                    'description' => 'SQL任务分组ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12345',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"48602B78-0DDF-414C-8688-70CAB6070115\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"StructSyncJobDetail\\": {\\n    \\"JobStatus\\": \\"DBTASK_SUCCESS\\",\\n    \\"Message\\": \\"test\\",\\n    \\"TableAnalyzed\\": 2,\\n    \\"TableCount\\": 2,\\n    \\"SqlCount\\": 1,\\n    \\"ExecuteCount\\": 1,\\n    \\"SecurityRule\\": \\"WITHOUT_APPROVE\\",\\n    \\"DBTaskGroupId\\": 12345\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetStructSyncJobDetailResponse>\\n    <RequestId>C29D0A5F-BB9B-4CB9-A6B7-19B5433983CA</RequestId>\\n    <StructSyncJobDetail>\\n        <JobStatus>COMPARE_FINISH</JobStatus>\\n        <Message>结构对比完成, 预览SQL已经生成</Message>\\n        <TableAnalyzed>6</TableAnalyzed>\\n        <TableCount>6</TableCount>\\n        <SecurityRule>WITH_APPROVE</SecurityRule>\\n        <DBTaskGroupId>3000000</DBTaskGroupId>\\n    </StructSyncJobDetail>\\n    <Success>true</Success>\\n</GetStructSyncJobDetailResponse>","errorExample":""}]',
      'title' => '获取结构同步任务详情',
    ),
    'GetStructSyncJobAnalyzeResult' => 
    array (
      'summary' => '调用GetStructSyncJobAnalyzeResult获取结构同步的任务分析结果。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单号',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1342355',
          ),
        ),
        1 => 
        array (
          'name' => 'CompareType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '比较类型，取值：
- **CREATE_TABLE**：创建表
- **ALTER_TABLE**：修改表
- **EQUAL_TABLE**：相同的表
- **PASS_TABLE**：跳过的表
- **NOT_COMPARE**：待分析的表',
            'type' => 'string',
            'required' => false,
            'example' => 'CREATE_TABLE',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '20',
          ),
        ),
        4 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1810E635-A2D7-428B-BAA9-85DAEB9B1A77',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'StructSyncJobAnalyzeResult' => 
              array (
                'description' => '结构同步任务分析结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'SummaryList' => 
                  array (
                    'description' => '统计结果列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '统计结果。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'CompareType' => 
                        array (
                          'description' => '比较类型，取值：
- **CREATE_TABLE**：创建表
- **ALTER_TABLE**：修改表
- **EQUAL_TABLE**：相同的表
- **PASS_TABLE**：跳过的表
- **NOT_COMPARE**：待分析的表',
                          'type' => 'string',
                          'example' => 'CREATE_TABLE',
                        ),
                        'Count' => 
                        array (
                          'description' => '表的数量。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                      ),
                    ),
                  ),
                  'ResultList' => 
                  array (
                    'description' => '分析结果详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '分析结果详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SourceTableName' => 
                        array (
                          'description' => '源表表名。',
                          'type' => 'string',
                          'example' => 'helloz_bak',
                        ),
                        'TargetTableName' => 
                        array (
                          'description' => '目标表表名。',
                          'type' => 'string',
                          'example' => 'helloz_bak',
                        ),
                        'Script' => 
                        array (
                          'description' => 'SQL脚本。',
                          'type' => 'string',
                          'example' => '/* origin table[helloz_bak] exist, target table[helloz_bak] not exist */\\n/* generate [helloz_bak] create table sql */\\ncreate table `helloz_bak`(\\n\\t`id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT \'主键\',\\n\\t`gmt_create` datetime NOT NULL COMMENT \'创建时间\',\\n\\t`gmt_modified` datetime NOT NULL COMMENT \'修改时间\',\\n\\t`num` int(11) NOT NULL COMMENT \'编号\',\\n\\t`addr` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT \'地址\',\\n\\tPRIMARY KEY (`id`)\\n)\\nDEFAULT CHARACTER SET=utf8 COLLATE=utf8_general_ci\\nCOMMENT=\'test\'\\n\\n;',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1810E635-A2D7-428B-BAA9-85DAEB9B1A77\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"StructSyncJobAnalyzeResult\\": {\\n    \\"SummaryList\\": [\\n      {\\n        \\"CompareType\\": \\"CREATE_TABLE\\",\\n        \\"Count\\": 1\\n      }\\n    ],\\n    \\"ResultList\\": [\\n      {\\n        \\"SourceTableName\\": \\"helloz_bak\\",\\n        \\"TargetTableName\\": \\"helloz_bak\\",\\n        \\"Script\\": \\"/* origin table[helloz_bak] exist, target table[helloz_bak] not exist */\\\\\\\\n/* generate [helloz_bak] create table sql */\\\\\\\\ncreate table `helloz_bak`(\\\\\\\\n\\\\\\\\t`id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT \'主键\',\\\\\\\\n\\\\\\\\t`gmt_create` datetime NOT NULL COMMENT \'创建时间\',\\\\\\\\n\\\\\\\\t`gmt_modified` datetime NOT NULL COMMENT \'修改时间\',\\\\\\\\n\\\\\\\\t`num` int(11) NOT NULL COMMENT \'编号\',\\\\\\\\n\\\\\\\\t`addr` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT \'地址\',\\\\\\\\n\\\\\\\\tPRIMARY KEY (`id`)\\\\\\\\n)\\\\\\\\nDEFAULT CHARACTER SET=utf8 COLLATE=utf8_general_ci\\\\\\\\nCOMMENT=\'test\'\\\\\\\\n\\\\\\\\n;\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetStructSyncJobAnalyzeResultResponse>\\n    <StructSyncJobAnalyzeResult>\\n        <ResultList>\\n            <SourceTableName>data_modify</SourceTableName>\\n            <Script>/* origin table[data_modify] exist, target table[data_modify] not exist */\\n                /* generate [data_modify] create table sql */\\n                create table `data_modify` (\\n                `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT \'主键\',\\n                `name` varchar(256) NOT NULL COMMENT \'姓名\',\\n                `phone` varchar(32) DEFAULT NULL COMMENT \'电话\',\\n                `sex` varchar(32) DEFAULT NULL COMMENT \'性别\',\\n                `email` varchar(256) DEFAULT NULL COMMENT \'邮箱\',\\n                `user_desc` varchar(1024) DEFAULT NULL COMMENT \'备注\',\\n                PRIMARY KEY (`id`)\\n                ) DEFAULT CHARSET=utf8 COMMENT=\'数据修改测试表\';</Script>\\n            <TargetTableName>data_modify</TargetTableName>\\n        </ResultList>\\n        <ResultList>\\n            <SourceTableName>task_data</SourceTableName>\\n            <Script>/* origin table[task_data] exist, target table[task_data] not exist */\\n                /* generate [task_data] create table sql */\\n                create table `task_data` (\\n                `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT \'主键\',\\n                `gmt_create` datetime NOT NULL COMMENT \'创建时间\',\\n                `gmt_modified` datetime NOT NULL COMMENT \'修改时间\',\\n                `content` text COMMENT \'测试数据\',\\n                PRIMARY KEY (`id`)\\n                ) DEFAULT CHARSET=utf8mb4 COMMENT=\'任务编排测试表\';</Script>\\n            <TargetTableName>task_data</TargetTableName>\\n        </ResultList>\\n        <SummaryList>\\n            <CompareType>CREATE_TABLE</CompareType>\\n            <Count>2</Count>\\n        </SummaryList>\\n        <SummaryList>\\n            <CompareType>EQUAL_TABLE</CompareType>\\n            <Count>1</Count>\\n        </SummaryList>\\n    </StructSyncJobAnalyzeResult>\\n    <RequestId>472C5F33-198B-4A41-BF83-B2322636B583</RequestId>\\n    <Success>true</Success>\\n</GetStructSyncJobAnalyzeResultResponse>","errorExample":""}]',
      'title' => '获取结构同步的任务分析结果',
    ),
    'GetStructSyncExecSqlDetail' => 
    array (
      'summary' => '调用GetStructSyncExecSqlDetail获取结构同步的执行SQL脚本。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '342153',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '1810E635-A2D7-428B-BAA9-85DAEB9B1A77',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'StructSyncExecSqlDetail' => 
              array (
                'description' => '执行SQL脚本的详情信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'TotalSqlCount' => 
                  array (
                    'description' => 'SQL总数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'ExecSql' => 
                  array (
                    'description' => '执行的SQL脚本。',
                    'type' => 'string',
                    'example' => '/* origin table[helloz_bak] exist, target table[helloz_bak] not exist */\\n/* generate [helloz_bak] create table sql */\\ncreate table `helloz_bak`(\\n\\t`id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT \'主键\',\\n\\t`gmt_create` datetime NOT NULL COMMENT \'创建时间\',\\n\\t`gmt_modified` datetime NOT NULL COMMENT \'修改时间\',\\n\\t`num` int(11) NOT NULL COMMENT \'编号\',\\n\\t`addr` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT \'地址\',\\n\\tPRIMARY KEY (`id`)\\n)\\nDEFAULT CHARACTER SET=utf8 COLLATE=utf8_general_ci\\nCOMMENT=\'test\'\\n\\n;',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"1810E635-A2D7-428B-BAA9-85DAEB9B1A77\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"StructSyncExecSqlDetail\\": {\\n    \\"TotalSqlCount\\": 1,\\n    \\"ExecSql\\": \\"/* origin table[helloz_bak] exist, target table[helloz_bak] not exist */\\\\\\\\n/* generate [helloz_bak] create table sql */\\\\\\\\ncreate table `helloz_bak`(\\\\\\\\n\\\\\\\\t`id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT \'主键\',\\\\\\\\n\\\\\\\\t`gmt_create` datetime NOT NULL COMMENT \'创建时间\',\\\\\\\\n\\\\\\\\t`gmt_modified` datetime NOT NULL COMMENT \'修改时间\',\\\\\\\\n\\\\\\\\t`num` int(11) NOT NULL COMMENT \'编号\',\\\\\\\\n\\\\\\\\t`addr` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT \'地址\',\\\\\\\\n\\\\\\\\tPRIMARY KEY (`id`)\\\\\\\\n)\\\\\\\\nDEFAULT CHARACTER SET=utf8 COLLATE=utf8_general_ci\\\\\\\\nCOMMENT=\'test\'\\\\\\\\n\\\\\\\\n;\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetStructSyncExecSqlDetailResponse>\\n    <StructSyncExecSqlDetail>\\n        <ExecSql>/****** 目标库: film@rm-uxxxxxxxx.mysql.rds.aliyuncs.com:3306 ******/\\n            \\n            /* origin table[data_modify] exist, target table[data_modify] not exist */\\n            /* generate [data_modify] create table sql */\\n            create table `data_modify` (\\n            `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT \'主键\',\\n            `name` varchar(256) NOT NULL COMMENT \'姓名\',\\n            `phone` varchar(32) DEFAULT NULL COMMENT \'电话\',\\n            `sex` varchar(32) DEFAULT NULL COMMENT \'性别\',\\n            `email` varchar(256) DEFAULT NULL COMMENT \'邮箱\',\\n            `user_desc` varchar(1024) DEFAULT NULL COMMENT \'备注\',\\n            PRIMARY KEY (`id`)\\n            ) DEFAULT CHARSET=utf8 COMMENT=\'数据修改测试表\';\\n            \\n            /* origin table[task_data] exist, target table[task_data] not exist */\\n            /* generate [task_data] create table sql */\\n            create table `task_data` (\\n            `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT \'主键\',\\n            `gmt_create` datetime NOT NULL COMMENT \'创建时间\',\\n            `gmt_modified` datetime NOT NULL COMMENT \'修改时间\',\\n            `content` text COMMENT \'测试数据\',\\n            PRIMARY KEY (`id`)\\n            ) DEFAULT CHARSET=utf8mb4 COMMENT=\'任务编排测试表\';\\n            \\n            \\n            \\n        </ExecSql>\\n        <TotalSqlCount>2</TotalSqlCount>\\n    </StructSyncExecSqlDetail>\\n    <RequestId>1E4E71DA-9346-4254-B19D-BC5FF6BF34EC</RequestId>\\n    <Success>true</Success>\\n</GetStructSyncExecSqlDetailResponse>","errorExample":""}]',
      'title' => '获取结构同步的执行SQL脚本',
    ),
    'SubmitStructSyncOrderApproval' => 
    array (
      'summary' => '调用SubmitStructSyncOrderApproval提交结构同步工单至审批流程。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'exclusiveMaximum' => false,
            'minimum' => '1',
            'example' => '4324535',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E1D2B4D-3E53-4ABC-999D-1D2520B3471D',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'WorkflowInstanceId' => 
              array (
                'description' => '审批流程ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '432523',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4E1D2B4D-3E53-4ABC-999D-1D2520B3471D\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"WorkflowInstanceId\\": 432523\\n}","errorExample":""},{"type":"xml","example":"<SubmitStructSyncOrderApprovalResponse>\\n    <RequestId>72768811-B970-4733-85BE-A8659613BF23</RequestId>\\n    <WorkflowInstanceId>1000000</WorkflowInstanceId>\\n    <Success>true</Success>\\n</SubmitStructSyncOrderApprovalResponse>","errorExample":""}]',
      'title' => '提交结构同步工单至审批流程',
    ),
    'ExecuteStructSync' => 
    array (
      'summary' => '调用此API执行结构同步工单。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'exclusiveMaximum' => false,
            'minimum' => '1',
            'example' => '112345',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E1D2B4D-3E53-4ABC-999D-1D2520B3471A',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4E1D2B4D-3E53-4ABC-999D-1D2520B3471A\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\"\\n}","errorExample":""},{"type":"xml","example":"<ExecuteStructSyncResponse>\\n    <RequestId>4E1D2B4D-3E53-4ABC-999D-1D2520B3471A</RequestId>\\n    <Success>true</Success>\\n</ExecuteStructSyncResponse>","errorExample":""}]',
      'title' => '执行结构同步工单',
      'description' => '- 仅管控模式为安全协同的数据库实例可调用此API。
- 若实例的安全规则需要通过审批才能进行同步，请先调用[SubmitStructSyncOrderApproval](~~206166~~)接口发起审批流程，并完成审批。
   > 您可以调用[GetStructSyncJobDetail](~~206160~~)查询目标实例是否需要审批。',
    ),
    'CreateDataCorrectOrder' => 
    array (
      'summary' => '创建普通数据变更工单。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务背景，以减少沟通成本。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'RelatedUserList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '相关人列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '变更相关人的用户ID，设置的相关人员可查看工单，并协同工作，非相关人员则不能查看工单（管理员、DBA除外）。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '51****',
            ),
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'Param',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '工单参数。',
            'type' => 'object',
            'properties' => 
            array (
              'Classify' => 
              array (
                'description' => '数据变更原因。',
                'type' => 'string',
                'required' => false,
                'example' => 'test',
              ),
              'EstimateAffectRows' => 
              array (
                'description' => '预估本次变更会影响的数据行数。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
              'ExecSQL' => 
              array (
                'description' => '变更SQL语句。

>  如果**SqlType**为**TEXT**，该参数必填。

',
                'type' => 'string',
                'required' => false,
                'example' => 'update base_user set id = 1 where id  = 1;',
              ),
              'SqlType' => 
              array (
                'description' => '变更SQL的提交方式，取值如下：
- **TEXT**：文本
- **ATTACHMENT**：附件',
                'type' => 'string',
                'required' => true,
                'example' => 'TEXT',
                'enum' => 
                array (
                  0 => 'TEXT',
                  1 => 'ATTACHMENT',
                ),
              ),
              'AttachmentName' => 
              array (
                'description' => '变更SQL附件Key（AttachmentKey），可通过调用[GetUserUploadFileJob](~~206069~~)接口获取该参数的值。

> 如果**SqlType**为**ATTACHMENT**，该参数必填。',
                'type' => 'string',
                'required' => false,
                'example' => 'test.sql',
              ),
              'RollbackSQL' => 
              array (
                'description' => '回滚SQL语句。
> - 如果**RollbackSqlType**为**TEXT**，该参数必填。',
                'type' => 'string',
                'required' => false,
                'example' => 'update base_user set id = 1 where id  = 1;',
              ),
              'RollbackAttachmentName' => 
              array (
                'description' => '回滚SQL附件Key（AttachmentKey），可通过调用[GetUserUploadFileJob](~~206069~~)接口获取该参数的值。

> 如果**RollbackSqlType**为**ATTACHMENT**，该参数必填。',
                'type' => 'string',
                'required' => false,
                'example' => 'test_rollback.sql',
              ),
              'RollbackSqlType' => 
              array (
                'description' => '回滚SQL的提交方式，取值如下：
- **TEXT**：文本
- **ATTACHMENT**：附件',
                'type' => 'string',
                'required' => false,
                'example' => 'TEXT',
                'enum' => 
                array (
                  0 => 'TEXT',
                  1 => 'ATTACHMENT',
                ),
              ),
              'DbItemList' => 
              array (
                'description' => '变更的数据库列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据库信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DbId' => 
                    array (
                      'description' => '数据库ID（DatabaseId），数据库分为物理库和逻辑库两种：
- 物理库ID：可通过调用接口[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)获取该参数的值。
- 逻辑库ID：可通过调用接口[ListLogicDatabases](~~141874~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '1860****',
                    ),
                    'Logic' => 
                    array (
                      'description' => '是否为逻辑库，取值如下：
- **true**：逻辑库
- **false**：物理库',
                      'type' => 'boolean',
                      'required' => true,
                      'example' => 'false',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => true,
              ),
              'ExecMode' => 
              array (
                'description' => '工单执行方式，取值如下：

- **COMMITOR** : 审批通过后，提交者执行。
- **AUTO** : 审批通过后，自动执行。
- **LAST_AUDITOR** : 审批通过后，最后一个审批人执行。',
                'type' => 'string',
                'required' => false,
                'example' => 'COMMITOR',
                'default' => 'COMMITOR',
                'enum' => 
                array (
                  0 => 'COMMITOR',
                  1 => 'AUTO',
                  2 => 'LAST_AUDITOR',
                ),
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'AttachmentKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单附件Key，补充当前工单信息。可通过调用[GetUserUploadFileJob](~~206069~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'order_attachment.txt',
          ),
        ),
        4 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'CreateOrderResult' => 
              array (
                'description' => '工单创建结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '普通数据变更工单号。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'example' => '142****',
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"CreateOrderResult\\": [\\n    0\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CreateDataCorrectOrderResponse>\\n    <RequestId>0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931</RequestId>\\n    <Success>true</Success>\\n    <CreateOrderResult>142****</CreateOrderResult>\\n</CreateDataCorrectOrderResponse>","errorExample":""}]',
      'title' => '创建普通数据变更工单',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。

关于该功能的更多说明，请参见[普通数据变更](~~58419~~)。',
    ),
    'CreateDataCronClearOrder' => 
    array (
      'summary' => '创建历史数据清理工单。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '
业务背景，以减少沟通成本。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'RelatedUserList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '相关人列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '相关人ID，设置的相关人员可查看工单，并协同工作，非相关人员则不能查看工单（管理员、DBA除外）。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '243253',
            ),
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'Param',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '工单参数。',
            'type' => 'object',
            'properties' => 
            array (
              'Classify' => 
              array (
                'description' => '数据变更原因。',
                'type' => 'string',
                'required' => false,
                'example' => 'test',
              ),
              'DbItemList' => 
              array (
                'description' => '变更的数据库列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据库信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DbId' => 
                    array (
                      'description' => '数据库ID，可调用[SearchDatabases](~~141876~~)接口获取。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '10****',
                    ),
                    'Logic' => 
                    array (
                      'description' => '是否为逻辑库，取值：
- **true**：是
- **false**：否',
                      'type' => 'boolean',
                      'required' => true,
                      'example' => 'false',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => true,
              ),
              'CronFormat' => 
              array (
                'description' => 'Crontab表达式，以便定期执行任务，更多信息，请参见[Crontab表达式](~~206581~~)。',
                'type' => 'string',
                'required' => true,
                'example' => '0 0 2 * * ?',
              ),
              'CronClearItemList' => 
              array (
                'description' => '待清理的数据表列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '待清理的数据表信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TableName' => 
                    array (
                      'description' => '表名，您可以调用[ListTables](~~141878~~)接口获取该参数。',
                      'type' => 'string',
                      'required' => true,
                      'example' => 't1',
                    ),
                    'ColumnName' => 
                    array (
                      'description' => '字段名。字段为日期类型。',
                      'type' => 'string',
                      'required' => true,
                      'example' => 'gmt_create',
                    ),
                    'RemainDays' => 
                    array (
                      'description' => '保留时长，即历史数据清理的规则，单位为天。例如您配置为7天，DMS将在执行时删除7天前的数据。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '7',
                    ),
                    'TimeUnit' => 
                    array (
                      'description' => '时间精度类型，当选择字段为日期数值型存储时使用，取值：
- **MILLISECONDS**：毫秒
- **SECONDS**：秒',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'MILLISECONDS',
                      'default' => 'MILLISECONDS',
                      'enum' => 
                      array (
                        0 => 'MILLISECONDS',
                        1 => 'SECONDS',
                      ),
                    ),
                    'FilterSQL' => 
                    array (
                      'description' => '过滤条件。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'where 1 = 1',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => true,
              ),
              'specifyDuration' => 
              array (
                'description' => '是否指定执行时长，取值：
- **true**：指定执行时长，到达指定时间后即停止执行。
- **false**：不指定执行时长，直到清理结束。',
                'type' => 'boolean',
                'required' => true,
                'example' => 'true',
              ),
              'DurationHour' => 
              array (
                'description' => '执行时长，单位为小时。
> 当**specifyDuration**参数为**true**时，该参数必填。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '4',
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'AttachmentKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单补充附件，对本次操作进行补充说明。

您可以调用[GetUserUploadFileJob](~~206069~~)接口获取该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'order_attachement.txt',
          ),
        ),
        4 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '123454324',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'CreateOrderResult' => 
              array (
                'description' => '工单创建结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '工单号。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'example' => '1341532',
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"CreateOrderResult\\": [\\n    1341532\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CreateDataCronClearOrderResponse>\\n    <RequestId>0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931</RequestId>\\n    <Success>true</Success>\\n    <CreateOrderResult>1341532</CreateOrderResult>\\n</CreateDataCronClearOrderResponse>","errorExample":""}]',
      'title' => '创建历史数据清理工单',
      'description' => '目前仅支持安全协同管控模式的MySQL实例调用该接口。

关于该功能的更多说明，请参见[历史数据清理](~~162507~~)。',
    ),
    'CreateDataImportOrder' => 
    array (
      'summary' => '创建数据导入工单。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '
数据导入的业务背景，以减少沟通成本。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'RelatedUserList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '相关人列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '变更相关人的用户ID，设置的相关人员可查看工单，并协同工作，非相关人员则不能查看工单（管理员、DBA除外）。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '51****',
            ),
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'Param',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '工单参数。',
            'type' => 'object',
            'properties' => 
            array (
              'Classify' => 
              array (
                'description' => '数据导入原因。',
                'type' => 'string',
                'required' => false,
                'example' => 'test',
              ),
              'AttachmentName' => 
              array (
                'description' => '导入数据的附件Key（AttachmentKey），可通过调用接口[GetUserUploadFileJob](~~206069~~)获取该参数的值。',
                'type' => 'string',
                'required' => true,
                'example' => 'upload_big_file_test_orders',
              ),
              'DbItemList' => 
              array (
                'description' => '待导入的数据库列表，当前仅支持导入一个库。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据库信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DbId' => 
                    array (
                      'description' => '数据库ID（DatabaseId），数据库分为物理库和逻辑库两种：
- 物理库ID：可通过调用接口[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)获取该参数的值。
- 逻辑库ID：可通过调用接口[ListLogicDatabases](~~141874~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '1860****',
                    ),
                    'Logic' => 
                    array (
                      'description' => '是否为逻辑库，取值如下：
- **true**：逻辑库
- **false**：物理库

> 如果取值为**true**，目标数据库必须为逻辑库。',
                      'type' => 'boolean',
                      'required' => true,
                      'example' => 'false',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => true,
              ),
              'FileType' => 
              array (
                'description' => '文件类型，取值如下：
- **SQL**：SQL文件
- **CSV**：CSV文件',
                'type' => 'string',
                'required' => true,
                'example' => 'CSV',
                'enum' => 
                array (
                  0 => 'SQL',
                  1 => 'CSV',
                  2 => 'JSON',
                ),
              ),
              'FileEncoding' => 
              array (
                'description' => '文件编码，取值如下：
- **AUTO**：自动识别
- **UTF-8**：UTF8编码
- **GBK**：GBK编码
- **ISO-8859-1**：ISO-8859-1编码',
                'type' => 'string',
                'required' => false,
                'example' => 'AUTO',
              ),
              'TableName' => 
              array (
                'description' => '选择CSV格式文件导入数据的目标表。
> 如果**FileType**为**CSV**，该参数必填。',
                'type' => 'string',
                'required' => false,
                'example' => 'Table_text',
              ),
              'InsertType' => 
              array (
                'description' => '插入类型，取值如下：

- **INSERT**：插入数据时数据库会检查主键（PrimaryKey），如果出现重复会报错。
-  **INSERT_IGNORE**：如果表中已经存在相同的记录，则忽略当前新数据。
- **REPLACE_INTO**：如果表中已经有某行数据（根据主键或者唯一索引判断），则先删除此行数据，然后插入新的数据。

> 如果**FileType**为**CSV**，该参数必填。',
                'type' => 'string',
                'required' => false,
                'example' => 'INSERT',
                'default' => 'INSERT',
                'enum' => 
                array (
                  0 => 'INSERT',
                  1 => 'INSERT_IGNORE',
                  2 => 'REPLACE_INTO',
                ),
              ),
              'CsvFirstRowIsColumnDef' => 
              array (
                'description' => 'CSV格式的类型，取值如下：
- **true**：CSV表格首行是字段名。
- **false**：CSV表格首行是数据。

> 如果**FileType**为**CSV**，该参数必填。',
                'type' => 'boolean',
                'required' => false,
                'example' => 'true',
              ),
              'IgnoreError' => 
              array (
                'description' => '是否忽略报错，取值如下：
- **true**：忽略，遇到错误会跳过当前失败SQL脚本，继续执行。
- **false**：不忽略，遇到出错则中断后面的SQL脚本，不再执行。',
                'type' => 'boolean',
                'required' => false,
                'example' => 'false',
              ),
              'ImportMode' => 
              array (
                'description' => '导入模式，取值如下：
- **FAST_MODE**：极速模式，在执行阶段读取文件，将SQL语句直接执行到指定的目标库。该模式安全性相比安全模式要低，但是执行时效较高。
- **SAFE_MODE**：安全模式，在预检查阶段会解析文件并将SQL或CSV数据缓存入库，执行时再从缓存库中读出来执行到指定的目标库。该模式安全性较好，但是执行时效相比极速模式要低。',
                'type' => 'string',
                'required' => false,
                'example' => 'FAST_MODE',
                'default' => 'SAFE_MODE',
                'enum' => 
                array (
                  0 => 'SAFE_MODE',
                  1 => 'FAST_MODE',
                ),
              ),
              'RollbackSQL' => 
              array (
                'description' => '回滚SQL语句。
> 如果**RollbackSqlType**为**TEXT**，该参数必填。',
                'type' => 'string',
                'required' => false,
                'example' => 'empty',
              ),
              'RollbackAttachmentName' => 
              array (
                'description' => '回滚SQL附件Key（AttachmentKey），可通过调用接口[GetUserUploadFileJob](~~206069~~)获取该参数的值。

> 如果**RollbackSqlType**为**ATTACHMENT**，该参数必填。',
                'type' => 'string',
                'required' => false,
                'example' => 'rollback.sql',
              ),
              'RollbackSqlType' => 
              array (
                'description' => '回滚SQL的提交方式，取值如下：
- **TEXT**：文本
- **ATTACHMENT**：附件',
                'type' => 'string',
                'required' => false,
                'example' => 'TEXT',
                'enum' => 
                array (
                  0 => 'TEXT',
                  1 => 'ATTACHMENT',
                ),
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'AttachmentKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单附件Key，补充当前工单信息。可通过调用接口[GetUserUploadFileJob](~~206069~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'order_attachment.txt',
          ),
        ),
        4 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'CreateOrderResult' => 
              array (
                'description' => '工单创建结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '工单号。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'example' => '1****',
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"CreateOrderResult\\": [\\n    0\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CreateDataImportOrderResponse>\\n    <RequestId>0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931</RequestId>\\n    <Success>true</Success>\\n    <CreateOrderResult>1****</CreateOrderResult>\\n</CreateDataImportOrderResponse>","errorExample":""}]',
      'title' => '创建数据导入工单',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。

关于该功能的更多说明，请参见[数据导入](~~161439~~)。',
    ),
    'CreateFreeLockCorrectOrder' => 
    array (
      'summary' => '创建无锁变更工单。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '
业务背景，以减少沟通成本。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'RelatedUserList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '相关人列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '变更相关人的用户ID，设置的相关人员可查看工单，并协同工作，非相关人员则不能查看工单（管理员、DBA除外）。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '51****',
            ),
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'Param',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '工单参数。',
            'type' => 'object',
            'properties' => 
            array (
              'Classify' => 
              array (
                'description' => '数据变更原因。',
                'type' => 'string',
                'required' => false,
                'example' => 'test',
              ),
              'ExecSQL' => 
              array (
                'description' => '变更SQL语句。
',
                'type' => 'string',
                'required' => true,
                'example' => 'delete from base_user where 1 = 1;',
              ),
              'SqlType' => 
              array (
                'description' => '变更SQL的提交方式，取值如下：
- **TEXT**：文本
- **ATTACHMENT**：附件，暂不支持。',
                'type' => 'string',
                'required' => true,
                'example' => 'TEXT',
                'default' => 'TEXT',
                'enum' => 
                array (
                  0 => 'TEXT',
                ),
              ),
              'AttachmentName' => 
              array (
                'description' => '变更SQL附件Key，暂不支持该参数。',
                'type' => 'string',
                'required' => false,
                'example' => 'test.sql',
              ),
              'RollbackSQL' => 
              array (
                'description' => '回滚SQL语句。',
                'type' => 'string',
                'required' => false,
                'example' => 'empty',
              ),
              'RollbackAttachmentName' => 
              array (
                'description' => '回滚SQL附件Key，暂不支持该参数。',
                'type' => 'string',
                'required' => false,
                'example' => 'test_rollback.sql',
              ),
              'RollbackSqlType' => 
              array (
                'description' => '回滚SQL的提交方式，取值：
- **TEXT**：文本
- **ATTACHMENT**：附件，暂不支持。',
                'type' => 'string',
                'required' => false,
                'example' => 'TEXT',
                'enum' => 
                array (
                  0 => 'TEXT',
                  1 => 'ATTACHMENT',
                ),
              ),
              'DbItemList' => 
              array (
                'description' => '变更的数据库列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据库信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DbId' => 
                    array (
                      'description' => '数据库ID（DatabaseId），数据库分为物理库和逻辑库两种：
- 物理库ID：可通过调用接口[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)获取该参数的值。
- 逻辑库ID：可通过调用接口[ListLogicDatabases](~~141874~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '1860****',
                    ),
                    'Logic' => 
                    array (
                      'description' => '是否为逻辑库，取值如下：
- **true**：逻辑库
- **false**：物理库',
                      'type' => 'boolean',
                      'required' => true,
                      'example' => 'false',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => true,
              ),
              'ExecMode' => 
              array (
                'description' => '工单执行方式，取值如下：

- **COMMITOR** : 审批通过后，提交者执行。
- **AUTO** : 审批通过后，自动执行。
- **LAST_AUDITOR** : 审批通过后，最后一个审批人执行。',
                'type' => 'string',
                'required' => false,
                'example' => 'COMMITOR',
                'default' => 'COMMITOR',
                'enum' => 
                array (
                  0 => 'COMMITOR',
                  1 => 'AUTO',
                  2 => 'LAST_AUDITOR',
                ),
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'AttachmentKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单附件Key，补充当前工单信息。可通过调用[GetUserUploadFileJob](~~206069~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'order_attachment.txt',
          ),
        ),
        4 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'CreateOrderResult' => 
              array (
                'description' => '工单创建结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '工单号。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'example' => '134****',
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"CreateOrderResult\\": [\\n    0\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CreateFreeLockCorrectOrderResponse>\\n    <RequestId>0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931</RequestId>\\n    <Success>true</Success>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <CreateOrderResult>1340000</CreateOrderResult>\\n</CreateFreeLockCorrectOrderResponse>","errorExample":""}]',
      'title' => '创建无锁变更工单',
      'description' => '- 目前仅支持管控模式为安全协同的实例调用该API。更多信息，请参见[无锁数据变更](~~96145~~)、[无锁结构变更](~~98373~~)。
- 成功调用CreateFreeLockCorrectOrder后，还需要调用[SubmitOrderApproval](~~465869~~)接口提交工单审批、[ApproveOrder](~~465870~~)接口审批工单以及[ExecuteDataCorrect](~~466296~~)接口执行数据变更。',
    ),
    'ModifyDataCorrectExecSQL' => 
    array (
      'summary' => '修改数据变更工单提交的SQL脚本。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据变更工单号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '4328****',
          ),
        ),
        1 => 
        array (
          'name' => 'ExecSQL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改后的SQL脚本。',
            'type' => 'string',
            'required' => true,
            'example' => 'update tb set id = 1 where id = 1;',
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '4****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Specified parameter OrderId is not valid.',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'InvalidOrderId',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52****\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"Specified parameter OrderId is not valid.\\",\\n  \\"ErrorCode\\": \\"InvalidOrderId\\"\\n}","errorExample":""},{"type":"xml","example":"<ModifyDataCorrectExecSQLResponse>\\n    <RequestId>0C1CB646-1DE4-4AD0-B4A4-7D47DD52****</RequestId>\\n    <Success>true</Success>\\n</ModifyDataCorrectExecSQLResponse>","errorExample":""}]',
      'title' => '修改数据变更工单SQL脚本',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'PauseDataCorrectSQLJob' => 
    array (
      'summary' => '暂停执行数据变更工单SQL任务。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据变更工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '43253',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '暂停类型，取值如下：

- ALL：全部暂停
- SINGLE：暂停单个任务',
            'type' => 'string',
            'required' => true,
            'example' => 'SINGLE',
            'enum' => 
            array (
              0 => 'ALL',
              1 => 'SINGLE',
            ),
          ),
        ),
        2 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SQL任务ID，可通过调用接口[GetDataCorrectTaskDetail](~~208481~~)和[ListDBTaskSQLJob](~~207049~~)获取该参数的值。
> 如果type = SINGLE，需要传递JobId确认需要重试的SQL任务ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '43253',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '4325',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '335C5BC8-490C-56EF-BDDE-94A4B53FEB72',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"335C5BC8-490C-56EF-BDDE-94A4B53FEB72\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\"\\n}","errorExample":""},{"type":"xml","example":"<PauseDataCorrectSQLJobResponse>\\n    <RequestId>335C5BC8-490C-56EF-BDDE-94A4B53FEB72</RequestId>\\n    <Success>true</Success>\\n</PauseDataCorrectSQLJobResponse>","errorExample":""}]',
      'title' => '暂停执行数据变更工单SQL任务',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'GetDataCorrectTaskDetail' => 
    array (
      'summary' => '获取普通数据变更、无锁变更、数据导入工单任务详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单号，您可以调用[CreateDataCorrectOrder](~~208388~~)、[CreateDataImportOrder](~~208387~~)、[CreateFreeLockCorrectOrder](~~208386~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '12435523',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '14325432',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B5FD0BC8-2D90-4478-B8EC-A0E92E0B1773',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'DataCorrectTaskDetail' => 
              array (
                'description' => '变更任务执行详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'DBTaskGroupId' => 
                  array (
                    'description' => 'SQL任务分组ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1234235',
                  ),
                  'jobStatus' => 
                  array (
                    'description' => 'SQL详情状态，取值：
- **INIT**：初始化状态
- **PENDING**：等待任务抓取
- **BE_SCHEDULED**：待调度
- **FAIL**：执行失败
- **SUCCESS**：执行成功
- **PAUSE**：暂停
- **DELETE**：删除
- **RUNNING**：正在执行',
                    'type' => 'string',
                    'example' => 'SUCCESS',
                  ),
                  'ActualAffectRows' => 
                  array (
                    'description' => '影响行数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '任务创建时间。',
                    'type' => 'string',
                    'example' => '2021-03-05 15:08:55',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"B5FD0BC8-2D90-4478-B8EC-A0E92E0B1773\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"DataCorrectTaskDetail\\": {\\n    \\"DBTaskGroupId\\": 1234235,\\n    \\"jobStatus\\": \\"SUCCESS\\",\\n    \\"ActualAffectRows\\": 1,\\n    \\"CreateTime\\": \\"2021-03-05 15:08:55\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<RequestId>B5FD0BC8-2D90-4478-B8EC-A0E92E0B1773</RequestId>\\n<Success>true</Success>\\n<DataCorrectTaskDetail>\\n    <DBTaskGroupId>1234235</DBTaskGroupId>\\n    <jobStatus>SUCCESS</jobStatus>\\n    <ActualAffectRows>1</ActualAffectRows>\\n    <CreateTime>2021-03-05 15:08:55</CreateTime>\\n</DataCorrectTaskDetail>","errorExample":""}]',
      'title' => '获取工单任务详情',
    ),
    'GetDataCronClearTaskDetailList' => 
    array (
      'summary' => '获取历史数据清理工单任务详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单号，您可以调用[CreateDataCronClearOrder](~~208385~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '432532',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '12345',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C1D39814-9808-47F8-AFE0-AF167239AC9B',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'DataCronClearTaskDetailList' => 
              array (
                'description' => '历史数据清理任务执行列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '任务执行详情。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DBTaskGroupId' => 
                    array (
                      'description' => 'SQL任务分组ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '432523',
                    ),
                    'jobStatus' => 
                    array (
                      'description' => 'SQL详情状态，取值：
- **INIT**：初始化状态
- **PENDING**：等待任务抓取
- **BE_SCHEDULED**：待调度
- **FAIL**：执行失败
- **SUCCESS**：执行成功
- **PAUSE**：暂停
- **DELETE**：删除
- **RUNNING**：正在执行',
                      'type' => 'string',
                      'example' => 'SUCCESS',
                    ),
                    'ActualAffectRows' => 
                    array (
                      'description' => '影响行数。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '任务创建时间。',
                      'type' => 'string',
                      'example' => '2021-01-14 10:00:00',
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => 'SQL任务列表总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C1D39814-9808-47F8-AFE0-AF167239AC9B\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"DataCronClearTaskDetailList\\": [\\n    {\\n      \\"DBTaskGroupId\\": 432523,\\n      \\"jobStatus\\": \\"SUCCESS\\",\\n      \\"ActualAffectRows\\": 1,\\n      \\"CreateTime\\": \\"2021-01-14 10:00:00\\"\\n    }\\n  ],\\n  \\"TotalCount\\": 1\\n}","errorExample":""},{"type":"xml","example":"<GetDataCronClearTaskDetailListResponse>\\n    <RequestId>C1D39814-9808-47F8-AFE0-AF167239AC9B</RequestId>\\n    <Success>true</Success>\\n    <DataCronClearTaskDetailList>\\n        <DBTaskGroupId>432523</DBTaskGroupId>\\n        <jobStatus>SUCCESS</jobStatus>\\n        <ActualAffectRows>1</ActualAffectRows>\\n        <CreateTime>2021-01-14 10:00:00</CreateTime>\\n    </DataCronClearTaskDetailList>\\n    <TotalCount>1</TotalCount>\\n</GetDataCronClearTaskDetailListResponse>","errorExample":""}]',
      'title' => '获取历史数据清理工单任务详情',
    ),
    'GetDataCorrectRollbackFile' => 
    array (
      'summary' => '调用GetDataCorrectRollbackFile接口，获取数据变更工单提交的回滚附件下载地址。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID。可通过调用[ListOrders](~~144643~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '51****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3CDB8601-AD74-4A47-8114-08E08CD6****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '请求异常时返回的错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'FileUrl' => 
              array (
                'description' => '附件下载地址。',
                'type' => 'string',
                'example' => 'https://dmsxxx',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3CDB8601-AD74-4A47-8114-08E08CD6****\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"FileUrl\\": \\"https://dmsxxx\\"\\n}","errorExample":""},{"type":"xml","example":"<GetDataCorrectRollbackFileResponse>\\n    <RequestId>3CDB8601-AD74-4A47-8114-08E08CD6****</RequestId>\\n    <Success>true</Success>\\n    <FileUrl>https://dmsxxx</FileUrl>\\n</GetDataCorrectRollbackFileResponse>","errorExample":""}]',
      'title' => '获取数据变更工单提交的回滚附件下载地址',
    ),
    'GetDataCorrectBackupFiles' => 
    array (
      'summary' => '获取数据变更工单备份文件下载地址。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '4200000',
            'default' => '',
          ),
        ),
        2 => 
        array (
          'name' => 'ActionDetail',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '操作参数，无需传递。',
            'type' => 'object',
            'required' => false,
            'example' => '{}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4AFF4109-FEFB-44E8-96A3-923B1FA8C46E',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DataCorrectBackupFiles' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'FileUrl' => 
                  array (
                    'description' => '备份文件附件下载地址信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '备份文件附件下载地址信息。',
                      'type' => 'string',
                      'example' => 'https://xxx.oss-cn-hangzhou.aliyuncs.com/xxx.zip',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4AFF4109-FEFB-44E8-96A3-923B1FA8C46E\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"DataCorrectBackupFiles\\": {\\n    \\"FileUrl\\": [\\n      \\"https://xxx.oss-cn-hangzhou.aliyuncs.com/xxx.zip\\"\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetDataCorrectBackupFilesResponse>\\n    <DataCorrectBackupFiles>\\n        <FileUrl>https://xxx.oss-cn-hangzhou.aliyuncs.com/xxx.zip</FileUrl>\\n    </DataCorrectBackupFiles>\\n    <RequestId>4AFF4109-FEFB-44E8-96A3-923B1FA8C46E</RequestId>\\n    <Success>true</Success>\\n</GetDataCorrectBackupFilesResponse>","errorExample":""}]',
      'title' => '获取备份文件下载地址',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDataCorrectOrderDetail' => 
    array (
      'summary' => '获取数据变更工单详细信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'abilityTreeCode' => '12557',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsILBT4A',
          1 => 'FEATUREdms1AAQ1Q',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '420****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D',
              ),
              'DataCorrectOrderDetail' => 
              array (
                'description' => '数据变更工单详情信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'PreCheckDetail' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'TaskCheckDO' => 
                      array (
                        'description' => '预校验详情信息列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '预校验详情信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'UserTip' => 
                            array (
                              'description' => '校验步骤提示信息。',
                              'type' => 'string',
                              'example' => 'tip messsage',
                            ),
                            'CheckStatus' => 
                            array (
                              'description' => '预校验状态，返回值如下：
- **WAITING**：等待检查
- **RUNNING**：检查中
- **SUCCESS**：通过
- **FAIL**：不通过',
                              'type' => 'string',
                              'example' => 'SUCCESS',
                            ),
                            'CheckStep' => 
                            array (
                              'description' => '检查步骤，返回值如下：
- **SQL_PARSE**：解析
- **SQL_TYPE_CHECK**：类型检查
- **PERMISSION_CHECK**：权限检查
- **ROW_CHECK**：行数检查',
                              'type' => 'string',
                              'example' => 'PERMISSION_CHECK',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'OrderDetail' => 
                  array (
                    'description' => '工单详情信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'RbSQL' => 
                      array (
                        'description' => '回滚SQL。',
                        'type' => 'string',
                        'example' => 'empty',
                      ),
                      'RbAttachmentName' => 
                      array (
                        'description' => '回滚SQL附件。',
                        'type' => 'string',
                        'example' => 'test',
                      ),
                      'Classify' => 
                      array (
                        'description' => '变更原因分类。',
                        'type' => 'string',
                        'example' => 'test',
                      ),
                      'ExeSQL' => 
                      array (
                        'description' => '执行的SQL语句。',
                        'type' => 'string',
                        'example' => 'update t1 set name = \'xxx\' where id <= 100',
                      ),
                      'EstimateAffectRows' => 
                      array (
                        'description' => '预估影响行数 。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '100',
                      ),
                      'RbSQLType' => 
                      array (
                        'description' => '回滚SQL类型，返回值如下：
- **TEXT**：文本
-  **ATTACHMENT**：附件',
                        'type' => 'string',
                        'example' => 'text',
                      ),
                      'ActualAffectRows' => 
                      array (
                        'description' => '系统校验的影响行数。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '100',
                      ),
                      'IgnoreAffectRows' => 
                      array (
                        'description' => '是否忽略预校验，返回值如下：
- **true**：忽略预校验
- **false**：不忽略预校验',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'AttachmentName' => 
                      array (
                        'description' => 'SQL附件。',
                        'type' => 'string',
                        'example' => 'xxx',
                      ),
                      'SqlType' => 
                      array (
                        'description' => 'SQL类型，返回值如下：
- **TEXT**：文本
-  **ATTACHMENT**：附件',
                        'type' => 'string',
                        'example' => 'text',
                      ),
                      'IgnoreAffectRowsReason' => 
                      array (
                        'description' => '忽略预校验原因。',
                        'type' => 'string',
                        'example' => 'test',
                      ),
                    ),
                  ),
                  'DatabaseList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Database' => 
                      array (
                        'description' => '变更库信息列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DbId' => 
                            array (
                              'description' => '数据库ID。',
                              'type' => 'integer',
                              'format' => 'int32',
                              'example' => '1860****',
                            ),
                            'DbType' => 
                            array (
                              'description' => '数据库类型。',
                              'type' => 'string',
                              'example' => 'mysql',
                            ),
                            'Logic' => 
                            array (
                              'description' => '是否为逻辑库，返回值如下：
- **true**：逻辑库。
- **false**：物理库。',
                              'type' => 'boolean',
                              'example' => 'false',
                            ),
                            'SearchName' => 
                            array (
                              'description' => '数据库搜索名。',
                              'type' => 'string',
                              'example' => 'xxx@xxx:3306',
                            ),
                            'EnvType' => 
                            array (
                              'description' => '环境类型，返回值如下：
- product：生产环境
- dev：开发环境
- pre：预发环境
- test：测试环境
- sit：SIT环境
- uat：UAT环境
- pet：压测环境
- stag：STAG环境',
                              'type' => 'string',
                              'example' => 'product',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Status' => 
                  array (
                    'description' => '数据变更工单特有的状态，返回值如下：
> 此状态与工单状态码不完全等价，若需要得到工单状态，请通过[GetOrderBaseInfo](~~465868~~)返回的StatusCode属性获取。
- **new**：新建。
- **precheck**：预检查阶段。
- **precheck_fail**：预检查失败。
- **precheck_success**：预检查成功, 等待提交审批。
- **toaudit**：审批中。
- **approved**：审批通过。
- **reject**：审批拒绝。
- **waiting**：任务已提交，待调度处理。
- **processing**：执行中。
- **success**：执行成功。',
                    'type' => 'string',
                    'example' => 'approved',
                  ),
                  'ExecMode' => 
                  array (
                    'description' => '工单执行方式，返回值如下：
- **COMMITOR** : 审批通过后，提交者执行。
- **AUTO** : 审批通过后，自动执行。
- **LAST_AUDITOR** : 审批通过后，最后一个审批人执行。',
                    'type' => 'string',
                    'example' => 'COMMITOR',
                  ),
                  'ConfigDetail' => 
                  array (
                    'description' => '工单配置信息，主要用于存储不同数据变更工单类型的差异化配置信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'DetailType' => 
                      array (
                        'description' => '标识变更工单信息类型，取值和说明如下：
- COMMON：普通数据变更。
- CHUNK_DML：无锁变更。
- BIG_FILE：数据导入。
- CRON_CLEAR_DATA：历史数据清理。
- PROCEDURE：可编程对象。',
                        'type' => 'string',
                        'example' => 'BIG_FILE',
                      ),
                      'FileType' => 
                      array (
                        'description' => '当 DetailType为 BIG_FILE时，标识数据导入的文件类型，取值如下：
- **SQL**：SQL文件。
- **CSV**：CSV文件。
- **EXCEL**：Excel文件。
- **JSON**：JSON文件，仅MongoDB支持。',
                        'type' => 'string',
                        'example' => 'CSV',
                      ),
                      'CsvTableName' => 
                      array (
                        'description' => '数据导入表名，仅当DetailType为BIG_FILE时有效，若FileType取值为SQL，则此属性为空。',
                        'type' => 'string',
                        'example' => 'tb_import_tb_name',
                      ),
                      'FileEncoding' => 
                      array (
                        'description' => '文件编码，注意取值可能为空，为空则代表AUTO，取值如下：
- **AUTO**：自动识别
- **UTF-8**：UTF8编码
- **GBK**：GBK编码
- **ISO-8859-1**：ISO-8859-1编码',
                        'type' => 'string',
                        'example' => 'UTF-8',
                      ),
                      'Cron' => 
                      array (
                        'description' => '是否为历史数据清理定时任务，预留字段，当且仅当DetailType为CRON_CLEAR_DATA有效。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'CronCallTimes' => 
                      array (
                        'description' => '当DetailType为CRON_CLEAR_DATA时有效，表示已调度次数。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '0',
                      ),
                      'CronFormat' => 
                      array (
                        'description' => '当DetailType为CRON_CLEAR_DATA时有效，表示定时任务Cron表达式。',
                        'type' => 'string',
                        'example' => '0 0 2 * * ?',
                      ),
                      'Duration' => 
                      array (
                        'description' => '当DetailType为CRON_CLEAR_DATA时有效，表示定时清理执行时长，单位为小时。当取值大于0，表示设置了清理时长。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '1',
                      ),
                      'CronStatus' => 
                      array (
                        'description' => '定时任务状态，为空表示未调度，其他取值和说明如下：

- PAUSE：调度暂停。
- WAITING：待调度。
- SUCCESS：调度完成。',
                        'type' => 'string',
                        'example' => 'SUCCESS',
                      ),
                      'CronLastCallStartTime' => 
                      array (
                        'description' => '最近一次调度时间。',
                        'type' => 'string',
                        'example' => '2024-04-19 02:00:00.0',
                      ),
                      'CronNextCallTime' => 
                      array (
                        'description' => '下一次调度时间。仅当调度状态为SUCCESS时才会有显示。',
                        'type' => 'string',
                        'example' => '2024-04-19 02:00:00
',
                      ),
                      'CurrentTaskId' => 
                      array (
                        'description' => '当前数据变更任务ID，保留字段，业务暂时不依赖。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '13***',
                      ),
                      'ImportExtConfig' => 
                      array (
                        'description' => '当DetailType为BIG_FILE，即为数据导入工单时，此处提供数据导入附加配置信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'InsertType' => 
                          array (
                            'description' => '插入类型，取值如下：

- **INSERT**：插入数据时数据库会检查主键（PrimaryKey），如果出现重复会报错。
-  **INSERT_IGNORE**：如果表中已经存在相同的记录，则忽略当前新数据。
- **REPLACE_INTO**：如果表中已经有某行数据（根据主键或者唯一索引判断），则先删除此行数据，然后插入新的数据。

> 如果FileType为CSV或者为EXCEL，该参数有效。',
                            'type' => 'string',
                            'example' => 'INSERT',
                          ),
                          'CsvFirstRowIsColumnDef' => 
                          array (
                            'description' => 'CSV格式的类型，取值如下：
- **true**：CSV表格首行是字段名。
- **false**：CSV表格首行是数据。

> 如果**FileType**为**CSV**或者为**EXCEL**，该参数有效。',
                            'type' => 'boolean',
                            'example' => 'true',
                          ),
                          'IgnoreError' => 
                          array (
                            'description' => '是否忽略报错，取值：
- **true**：忽略，遇到错误会跳过当前失败SQL脚本，继续执行。
- **false**：不忽略，遇到出错则中断后面的SQL脚本，不再执行。',
                            'type' => 'boolean',
                            'example' => 'false',
                          ),
                          'ImportMode' => 
                          array (
                            'description' => '导入模式，取值如下：
- **FAST_MODE**：极速模式，在执行阶段读取文件，将SQL语句直接执行到指定的目标库。该模式安全性相比安全模式要低，但是执行时效较高。
- **SAFE_MODE**：安全模式，在预检查阶段会解析文件并将SQL或CSV数据缓存入库，执行时再从缓存库中读出来执行到指定的目标库。该模式安全性较好，但是执行时效相比极速模式要低。',
                            'type' => 'string',
                            'example' => 'FAST_MODE',
                          ),
                        ),
                      ),
                      'CronExtConfig' => 
                      array (
                        'description' => '当且仅当DetailType为CRON_CLEAR_DATA，即为历史数据清理工单时，此处提供历史数据清理额外配置信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'OptimizeTableAfterEveryClearTimes' => 
                          array (
                            'description' => '是否启用自动Optimize table，取值：

- **0**：不启用。
- **大于0**：启用，表示每隔多少次清理以后再进行Optimize table。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '0',
                          ),
                          'CurrentClearTaskCount' => 
                          array (
                            'description' => '已进行自动optimize table的次数。仅当OptimizeTableAfterEveryClearTimes大于0时有效。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '0',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D\\",\\n  \\"DataCorrectOrderDetail\\": {\\n    \\"PreCheckDetail\\": {\\n      \\"TaskCheckDO\\": [\\n        {\\n          \\"UserTip\\": \\"tip messsage\\",\\n          \\"CheckStatus\\": \\"SUCCESS\\",\\n          \\"CheckStep\\": \\"PERMISSION_CHECK\\"\\n        }\\n      ]\\n    },\\n    \\"OrderDetail\\": {\\n      \\"RbSQL\\": \\"empty\\",\\n      \\"RbAttachmentName\\": \\"test\\",\\n      \\"Classify\\": \\"test\\",\\n      \\"ExeSQL\\": \\"update t1 set name = \'xxx\' where id <= 100\\",\\n      \\"EstimateAffectRows\\": 100,\\n      \\"RbSQLType\\": \\"text\\",\\n      \\"ActualAffectRows\\": 100,\\n      \\"IgnoreAffectRows\\": false,\\n      \\"AttachmentName\\": \\"xxx\\",\\n      \\"SqlType\\": \\"text\\",\\n      \\"IgnoreAffectRowsReason\\": \\"test\\"\\n    },\\n    \\"DatabaseList\\": {\\n      \\"Database\\": [\\n        {\\n          \\"DbId\\": 0,\\n          \\"DbType\\": \\"mysql\\",\\n          \\"Logic\\": false,\\n          \\"SearchName\\": \\"xxx@xxx:3306\\",\\n          \\"EnvType\\": \\"product\\"\\n        }\\n      ]\\n    },\\n    \\"Status\\": \\"approved\\",\\n    \\"ExecMode\\": \\"COMMITOR\\",\\n    \\"ConfigDetail\\": {\\n      \\"DetailType\\": \\"BIG_FILE\\",\\n      \\"FileType\\": \\"CSV\\",\\n      \\"CsvTableName\\": \\"tb_import_tb_name\\",\\n      \\"FileEncoding\\": \\"UTF-8\\",\\n      \\"Cron\\": true,\\n      \\"CronCallTimes\\": 0,\\n      \\"CronFormat\\": \\"0 0 2 * * ?\\",\\n      \\"Duration\\": 1,\\n      \\"CronStatus\\": \\"SUCCESS\\",\\n      \\"CronLastCallStartTime\\": \\"2024-04-19 02:00:00.0\\",\\n      \\"CronNextCallTime\\": \\"2024-04-19 02:00:00\\\\n\\",\\n      \\"CurrentTaskId\\": 0,\\n      \\"ImportExtConfig\\": {\\n        \\"InsertType\\": \\"INSERT\\",\\n        \\"CsvFirstRowIsColumnDef\\": true,\\n        \\"IgnoreError\\": false,\\n        \\"ImportMode\\": \\"FAST_MODE\\"\\n      },\\n      \\"CronExtConfig\\": {\\n        \\"OptimizeTableAfterEveryClearTimes\\": 0,\\n        \\"CurrentClearTaskCount\\": 0\\n      }\\n    }\\n  },\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetDataCorrectOrderDetailResponse>\\n    <RequestId>427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D</RequestId>\\n    <DataCorrectOrderDetail>\\n        <PreCheckDetail>\\n            <UserTip>tip messsage</UserTip>\\n            <CheckStatus>SUCCESS</CheckStatus>\\n            <CheckStep>PERMISSION_CHECK</CheckStep>\\n        </PreCheckDetail>\\n        <OrderDetail>\\n            <RbSQL>empty</RbSQL>\\n            <RbAttachmentName>test</RbAttachmentName>\\n            <Classify>test</Classify>\\n            <ExeSQL>update t1 set name = \'xxx\' where id &lt;= 100</ExeSQL>\\n            <EstimateAffectRows>100</EstimateAffectRows>\\n            <RbSQLType>text</RbSQLType>\\n            <ActualAffectRows>100</ActualAffectRows>\\n            <IgnoreAffectRows>false</IgnoreAffectRows>\\n            <AttachmentName>xxx</AttachmentName>\\n            <SqlType>text</SqlType>\\n            <IgnoreAffectRowsReason>test</IgnoreAffectRowsReason>\\n        </OrderDetail>\\n        <DatabaseList>\\n            <DbId>1860****</DbId>\\n            <DbType>mysql</DbType>\\n            <Logic>false</Logic>\\n            <SearchName>xxx@xxx:3306</SearchName>\\n            <EnvType>product</EnvType>\\n        </DatabaseList>\\n        <Status>approved</Status>\\n        <ExecMode>COMMITOR</ExecMode>\\n    </DataCorrectOrderDetail>\\n    <Success>true</Success>\\n</GetDataCorrectOrderDetailResponse>","errorExample":""}]',
      'title' => '获取数据变更工单详细信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDataCronClearConfig' => 
    array (
      'summary' => '查询历史数据清理工单的定时配置。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '51****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '283C461F-11D8-48AA-B695-DF092DA32AF3',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'DataCronClearConfig' => 
              array (
                'description' => '数据配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'CronFormat' => 
                  array (
                    'description' => 'Crontab表达式，以便定期执行任务。更多信息，请参见[Crontab表达式](~~206581~~)。',
                    'type' => 'string',
                    'example' => '0 0 23 ? * 7,1',
                  ),
                  'Duration' => 
                  array (
                    'description' => '执行时长（单位：小时）。取值为**0**时，说明不指定执行时长。',
                    'type' => 'string',
                    'example' => '1',
                  ),
                  'CronStatus' => 
                  array (
                    'description' => '定时任务状态，为**空**表示未调度，其他取值及说明如下：

- **PAUSE**：调度暂停。
- **WAITING**：待调度。
- **SUCCESS**：调度完成。',
                    'type' => 'string',
                    'example' => 'SUCCESS',
                  ),
                  'CronCallTimes' => 
                  array (
                    'description' => '调度次数。',
                    'type' => 'string',
                    'example' => '2',
                  ),
                  'CronLastCallStartTime' => 
                  array (
                    'description' => '最近一次调度时间。',
                    'type' => 'string',
                    'example' => '2022-11-18 00:00:00',
                  ),
                  'CronNextCallTime' => 
                  array (
                    'description' => '下一次调度时间。

> 仅当调度状态为**SUCCESS**时才会显示。',
                    'type' => 'string',
                    'example' => '2022-11-19 00:00:00',
                  ),
                  'OptimizeTableAfterEveryClearTimes' => 
                  array (
                    'description' => '是否启用自动Optimize table，取值：

- **0**：不启用。
- **大于0**：启用，表示每隔多少次清理以后下次调用进行Optimize table。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '0',
                  ),
                  'CurrentClearTaskCount' => 
                  array (
                    'description' => '已进行自动Optimize table的次数，仅当OptimizeTableAfterEveryClearTimes大于0时有效。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '0',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"283C461F-11D8-48AA-B695-DF092DA32AF3\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"DataCronClearConfig\\": {\\n    \\"CronFormat\\": \\"0 0 23 ? * 7,1\\",\\n    \\"Duration\\": \\"1\\",\\n    \\"CronStatus\\": \\"SUCCESS\\",\\n    \\"CronCallTimes\\": \\"2\\",\\n    \\"CronLastCallStartTime\\": \\"2022-11-18 00:00:00\\",\\n    \\"CronNextCallTime\\": \\"2022-11-19 00:00:00\\",\\n    \\"OptimizeTableAfterEveryClearTimes\\": 0,\\n    \\"CurrentClearTaskCount\\": 0\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetDataCronClearConfigResponse>\\n    <RequestId>283C461F-11D8-48AA-B695-DF092DA32AF3</RequestId>\\n    <Success>true</Success>\\n    <DataCronClearConfig>\\n        <CronFormat>0 0 23 ? * 7,1</CronFormat>\\n        <Duration>1</Duration>\\n        <CronStatus>SUCCESS</CronStatus>\\n        <CronCallTimes>2</CronCallTimes>\\n        <CronLastCallStartTime>2022-11-18 00:00:00</CronLastCallStartTime>\\n        <CronNextCallTime>2022-11-19 00:00:00</CronNextCallTime>\\n        <OptimizeTableAfterEveryClearTimes>0</OptimizeTableAfterEveryClearTimes>\\n        <CurrentClearTaskCount>0</CurrentClearTaskCount>\\n    </DataCronClearConfig>\\n</GetDataCronClearConfigResponse>","errorExample":""}]',
      'title' => '查询历史数据清理工单的定时配置',
    ),
    'GetDataCorrectSQLFile' => 
    array (
      'summary' => '获取数据变更工单的SQL脚本附件下载地址。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'exclusiveMaximum' => false,
            'minimum' => '1',
            'example' => '730000',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '283C461F-11D8-48AA-B695-DF092DA32AF3',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '请求异常信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'FileUrl' => 
              array (
                'description' => 'SQL附件下载地址。',
                'type' => 'string',
                'example' => 'https://dmsxxx',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"283C461F-11D8-48AA-B695-DF092DA32AF3\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"FileUrl\\": \\"https://dmsxxx\\"\\n}","errorExample":""},{"type":"xml","example":"<GetDataCorrectSQLFileResponse>\\n    <FileUrl>https://dms-idb-hangzhou.oss-cn-hangzhou.aliyuncs.com/uplJMIpQ%3D</FileUrl>\\n    <RequestId>386EAA20-67FB-4D06-B7BF-2ABA11241185</RequestId>\\n    <Success>true</Success>\\n</GetDataCorrectSQLFileResponse>","errorExample":""}]',
      'title' => '获取数据变更工单SQL脚本下载地址',
      'description' => '本接口适用：[普通数据变更](~~58419~~)和[批量数据导入](~~144643~~)。',
    ),
    'ListDataCorrectPreCheckSQL' => 
    array (
      'summary' => '获取数据变更工单中预检查环节的SQL信息列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据变更工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '453****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10',
          ),
        ),
        3 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库ID（DatabaseId），数据库分为物理库和逻辑库两种：
- 物理库ID：可通过调用接口[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)获取该参数的值。
- 逻辑库ID：可通过调用接口[ListLogicDatabases](~~141874~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1930****',
          ),
        ),
        4 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '31853A2B-DC9D-5B39-8492-D2AC8BCF550E',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'PreCheckSQLList' => 
              array (
                'description' => '预检查环节的SQL信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '预检查环节的SQL详情。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CheckSQL' => 
                    array (
                      'description' => 'SQL语句。',
                      'type' => 'string',
                      'example' => 'OPTIMIZE TABLE `Text_TableNames`',
                    ),
                    'AffectRows' => 
                    array (
                      'description' => '预估影响行数。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '0',
                    ),
                    'DbId' => 
                    array (
                      'description' => '数据库ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1930****',
                    ),
                    'SQLReviewQueryKey' => 
                    array (
                      'description' => 'SQL审核优化建议详情信息的查询KEY。根据此Key调用[GetSQLReviewOptimizeDetail](~~265977~~)获取SQL审核优化建议的详情。',
                      'type' => 'string',
                      'example' => 'b9e771fc6ec247dea6d06a32c777****',
                    ),
                    'SqlReviewStatus' => 
                    array (
                      'description' => 'SQL审核状态，返回值如下：
- **WAITING**：等待审核。
- **RUNNING**：正在审核。
- **IGNORE**：忽略审核。
- **PASS**：审核通过。
- **BLOCK**：审核不通过。',
                      'type' => 'string',
                      'example' => 'WAITING',
                    ),
                    'SqlType' => 
                    array (
                      'description' => 'SQL类型，例如，DELETE、UPDATE、ALTER_TABLE等。',
                      'type' => 'string',
                      'example' => 'OPTIMIZE',
                    ),
                    'TableNames' => 
                    array (
                      'description' => '数据变更的表名。',
                      'type' => 'string',
                      'example' => 'Text_TableNames',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"31853A2B-DC9D-5B39-8492-D2AC8BCF550E\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"PreCheckSQLList\\": [\\n    {\\n      \\"CheckSQL\\": \\"OPTIMIZE TABLE `Text_TableNames`\\",\\n      \\"AffectRows\\": 0,\\n      \\"DbId\\": 0,\\n      \\"SQLReviewQueryKey\\": \\"b9e771fc6ec247dea6d06a32c777****\\",\\n      \\"SqlReviewStatus\\": \\"WAITING\\",\\n      \\"SqlType\\": \\"OPTIMIZE\\",\\n      \\"TableNames\\": \\"Text_TableNames\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListDataCorrectPreCheckSQLResponse>\\n    <RequestId>31853A2B-DC9D-5B39-8492-D2AC8BCF550E</RequestId>\\n    <PreCheckSQLList>\\n        <CheckSQL>OPTIMIZE TABLE `Text_TableNames`</CheckSQL>\\n        <SqlReviewStatus>WAITING</SqlReviewStatus>\\n        <TableNames>`Text_TableNames`,</TableNames>\\n        <DbId>1930****</DbId>\\n        <SqlType>OPTIMIZE</SqlType>\\n        <AffectRows>0</AffectRows>\\n    </PreCheckSQLList>\\n    <Success>true</Success>\\n</ListDataCorrectPreCheckSQLResponse>","errorExample":""}]',
      'title' => '获预检查环节的SQL详情',
      'description' => '关于该功能的更多说明，请参见[普通数据变更](~~58419~~)。',
    ),
    'ListDataCorrectPreCheckDB' => 
    array (
      'summary' => '获取数据变更工单中预检查环节的数据库列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据变更工单号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '432****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '当前页数。
取值范围：大于0的整数。
默认值：1。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页返回的结果个数。
',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。可通过调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '4321****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '95A972AF-FAED-4768-9360-7C0DF5D594D0',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'PreCheckDBList' => 
              array (
                'description' => '预检查环节的数据库信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '预检查环节的数据库信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DbId' => 
                    array (
                      'description' => '数据库ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '43***',
                    ),
                    'SearchName' => 
                    array (
                      'description' => '数据库名称。',
                      'type' => 'string',
                      'example' => 'test@localhost:3306',
                    ),
                    'SqlNum' => 
                    array (
                      'description' => 'SQL条数。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"95A972AF-FAED-4768-9360-7C0DF5D594D0\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"PreCheckDBList\\": [\\n    {\\n      \\"DbId\\": 0,\\n      \\"SearchName\\": \\"test@localhost:3306\\",\\n      \\"SqlNum\\": 1\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListDataCorrectPreCheckDBResponse>\\n    <RequestId>A793B353-2D13-47A3-AF45-53798FBD864F</RequestId>\\n    <PreCheckDBList>\\n        <SqlNum>1</SqlNum>\\n        <SearchName>poc_dev@rm-uf61****1w0926d66.mysql.rds.aliyuncs.com:3306【poc_dev】</SearchName>\\n        <DbId>8050000</DbId>\\n    </PreCheckDBList>\\n    <Success>true</Success>\\n</ListDataCorrectPreCheckDBResponse>","errorExample":""}]',
      'title' => '获取预检查环节的数据库列表',
      'description' => '关于该功能的更多说明，请参见[普通数据变更](~~58419~~)。',
    ),
    'ExecuteDataCorrect' => 
    array (
      'summary' => '执行数据变更工单。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '406****',
          ),
        ),
        2 => 
        array (
          'name' => 'ActionDetail',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '执行数据变更的参数设置：

```
json
"actionDetail" : {
    "startTime" :"2021-07-01 00:00:00", // 设置定时执行的执行时间，若您选择立即执行不需要设置该参数。
    "endTime" : "2021-07-01 01:00:00", // 设置定时执行的结束时间，若您选择立即执行不需要设置该参数。
    "transaction" : false,  // 选择是否以事务方式运行。
    "backupData" : true // 选择是否备份数据。
  }
```',
            'type' => 'object',
            'required' => false,
            'example' => '{ "startTime" : "2021-07-01 00:00:00", "endTime" : "2021-07-01 01:00:00", "transaction" : false, "backupData" : true }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EADDA791-2809-58CE-A303-743A77FF****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Unknown server error',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"EADDA791-2809-58CE-A303-743A77FF****\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"Unknown server error\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ExecuteDataCorrectResponse>\\n    <RequestId>EADDA791-2809-58CE-A303-743A77FF****</RequestId>\\n    <Success>true</Success>\\n</ExecuteDataCorrectResponse>","errorExample":""}]',
      'title' => '执行数据变更工单',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'RetryDataCorrectPreCheck' => 
    array (
      'summary' => '重新执行数据变更工单预检查步骤。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据变更工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '414****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5BC081C7-5F77-5C92-9758-E1ED17CA****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'OrderId is mandatory for this action.',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'MissingOrderId',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5BC081C7-5F77-5C92-9758-E1ED17CA****\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"OrderId is mandatory for this action.\\",\\n  \\"ErrorCode\\": \\"MissingOrderId\\"\\n}","errorExample":""},{"type":"xml","example":"<RetryDataCorrectPreCheckResponse>\\n    <RequestId>5BC081C7-5F77-5C92-9758-E1ED17CA****</RequestId>\\n    <Success>true</Success>\\n</RetryDataCorrectPreCheckResponse>","errorExample":""}]',
      'title' => '重新执行数据变更工单预检查',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'RestartDataCorrectSQLJob' => 
    array (
      'summary' => '对已经执行失败的数据变更SQL任务进行重试。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据变更工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '453****',
          ),
        ),
        1 => 
        array (
          'name' => 'Type',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '重试类型，取值如下：

- **ALL**：全部重试
- **SINGLE**：重试单个任务',
            'type' => 'string',
            'required' => true,
            'example' => 'ALL',
            'enum' => 
            array (
              0 => 'ALL',
              1 => 'SINGLE',
            ),
          ),
        ),
        2 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SQL任务ID，可通过调用接口[GetDataCorrectTaskDetail](~~208481~~)和
[ListDBTaskSQLJob](~~207049~~)获取该参数的值。
如果type = SINGLE，需要传递JobId确认需要重试的SQL任务ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '43253',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '809B52F2-CD2B-53DA-88C8-F7042787E673',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"809B52F2-CD2B-53DA-88C8-F7042787E673\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\"\\n}","errorExample":""},{"type":"xml","example":"<RestartDataCorrectSQLJobResponse>\\n    <RequestId>809B52F2-CD2B-53DA-88C8-F7042787E673</RequestId>\\n    <Success>true</Success>\\n</RestartDataCorrectSQLJobResponse>","errorExample":""}]',
      'title' => '重新执行失败的数据变更SQL任务',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'ListDataImportSQLPreCheckDetail' => 
    array (
      'summary' => '获取数据导入预检SQL详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，您可调用[ListOrders](~~144643~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '11****',
          ),
        ),
        1 => 
        array (
          'name' => 'SqlType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SQL类型，常见SQL类型取值说明如下：
- **SELECT**：查询
- **INSERT**：插入
- **DELETE**：删除
- **CREATE_TABLE**：创建表

> 您可以在顶部菜单栏中，选择**安全与规范**>**操作审计**，查看更多SQL类型取值。',
            'type' => 'string',
            'required' => false,
            'example' => 'INSERT',
          ),
        ),
        2 => 
        array (
          'name' => 'StatusCode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单状态。若不填，则默认选择所有状态，其他取值如下：
- **INIT**：初始化。
- **RUNNING**：执行中。
- **SUCCESS**：已完成。
- **TIMEOUT**：超时跳过。
- **FAIL**：已失败。',
            'type' => 'string',
            'required' => false,
            'example' => 'SUCCESS',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumer',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '页码，从1开始。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        5 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。您可调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。可用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '31853A2B-DC9D-5B39-8492-D2AC8BCF550E',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'PreCheckSQLDetailList' => 
              array (
                'description' => '预检查SQL详情列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '预检查SQL详情。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SqlId' => 
                    array (
                      'description' => 'SQL ID，表示是第几个SQL，从1开始。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'SqlType' => 
                    array (
                      'description' => 'SQL类型。例如DELETE、UPDATE、ALTER_TABLE等。',
                      'type' => 'string',
                      'example' => 'INSERT',
                    ),
                    'StatusCode' => 
                    array (
                      'description' => '工单状态。取值如下：
- **INIT**：初始化。
- **RUNNING**：执行中。
- **SUCCESS**：已完成。
- **TIMEOUT**：超时跳过。
- **FAIL**：已失败。',
                      'type' => 'string',
                      'example' => 'SUCCESS',
                    ),
                    'Skip' => 
                    array (
                      'description' => '是否存在跳过预检查SQL的情况。取值如下：
- **true**：存在。
- **false**：不存在。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => 'SQL条数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"31853A2B-DC9D-5B39-8492-D2AC8BCF550E\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"PreCheckSQLDetailList\\": [\\n    {\\n      \\"SqlId\\": 1,\\n      \\"SqlType\\": \\"INSERT\\",\\n      \\"StatusCode\\": \\"SUCCESS\\",\\n      \\"Skip\\": true\\n    }\\n  ],\\n  \\"TotalCount\\": 1\\n}","type":"json"}]',
      'title' => '获取数据导入预检SQL详情',
      'description' => '仅支持导入模式为安全模式的数据导入工单使用此API，不支持极速模式的数据导入使用此API。',
    ),
    'ListDataImportSQLType' => 
    array (
      'summary' => '获取数据导入SQL类型。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据导入工单ID。您可调用[ListOrders](~~144643~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '420****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。您可调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。可用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'E5EE2B9E-2F95-57FA-B284-CB441CEE49D6',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'SqlTypeResult' => 
              array (
                'description' => 'SQL类型列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'SQL类型。例如DELETE、UPDATE、INSERT等。',
                  'type' => 'string',
                  'example' => 'INSERT',
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E5EE2B9E-2F95-57FA-B284-CB441CEE49D6\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"SqlTypeResult\\": [\\n    \\"INSERT\\"\\n  ]\\n}","type":"json"}]',
      'title' => '获取数据导入SQL类型',
      'description' => '仅支持导入模式为安全模式的数据导入工单使用此API，不支持极速模式的数据导入使用此API。',
    ),
    'GetDataImportSQL' => 
    array (
      'summary' => '获取数据导入的SQL。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，您可调用[ListOrders](~~144643~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '14****',
          ),
        ),
        1 => 
        array (
          'name' => 'SqlId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SQL ID。您可调用[ListDataImportSQLPreCheckDetail](~~2249345~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '15****',
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。您可调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回参数。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。可用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'B43AD641-49C2-5299-9E06-1B37EC1B****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'SQLDetail' => 
              array (
                'description' => 'SQL详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'ExecSql' => 
                  array (
                    'description' => 'SQL脚本。',
                    'type' => 'string',
                    'example' => 'insert into t1 values (1);',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B43AD641-49C2-5299-9E06-1B37EC1B****\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"SQLDetail\\": {\\n    \\"ExecSql\\": \\"insert into t1 values (1);\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取数据导入的SQL',
      'description' => '仅支持导入模式为安全模式的数据导入工单使用此API，不支持极速模式的数据导入使用此API。',
    ),
    'SkipDataCorrectRowCheck' => 
    array (
      'summary' => '跳过数据变更预检查行数校验。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID。您可调用[ListOrders](~~144643~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '420****',
          ),
        ),
        1 => 
        array (
          'name' => 'Reason',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '跳过数据变更预检查行数校验的原因。',
            'type' => 'string',
            'required' => true,
            'example' => '节省测试时间',
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。您可以调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7FAD400F-7A5C-4193-8F9A-39D86C4F0231',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '调用失败时，返回的错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"7FAD400F-7A5C-4193-8F9A-39D86C4F0231\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\"\\n}","type":"json"}]',
      'title' => '跳过数据变更预检查行数校验',
    ),
    'CreateProcCorrectOrder' => 
    array (
      'summary' => '使用此API创建可编程对象变更工单。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单备注。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'RelatedUserList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '工单相关人列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '工单相关人ID。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '1342**',
            ),
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'Param',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '工单参数。',
            'type' => 'object',
            'properties' => 
            array (
              'Classify' => 
              array (
                'description' => '变更原因。',
                'type' => 'string',
                'required' => false,
                'example' => 'test',
              ),
              'DbItemList' => 
              array (
                'description' => '数据库信息。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据库信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'DbId' => 
                    array (
                      'description' => '数据库ID（DatabaseId）。数据库分为物理库和逻辑库两种：
- 物理库ID：可调用接口[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)获取该参数的值。
- 逻辑库ID：可调用接口[ListLogicDatabases](~~141874~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'required' => true,
                      'example' => '1972****',
                    ),
                    'Logic' => 
                    array (
                      'description' => '是否为逻辑库，取值如下：
- **true**：逻辑库
- **false**：物理库',
                      'type' => 'boolean',
                      'required' => true,
                      'example' => 'false',
                    ),
                  ),
                  'required' => false,
                ),
                'required' => true,
              ),
              'RollbackSQL' => 
              array (
                'description' => '回滚SQL语句。
> 如果**RollbackSqlType**为**TEXT**，该参数必填。',
                'type' => 'string',
                'required' => false,
                'example' => 'empty',
              ),
              'RollbackAttachmentName' => 
              array (
                'description' => '回滚SQL附件Key（AttachmentKey），可通过调用[GetUserUploadFileJob](~~206069~~)接口获取该参数的值。

> 如果**RollbackSqlType**为**ATTACHMENT**，该参数必填。',
                'type' => 'string',
                'required' => false,
                'example' => 'test_rollback.sql',
              ),
              'RollbackSqlType' => 
              array (
                'description' => '回滚SQL的提交方式，取值如下：
- **TEXT**：文本
- **ATTACHMENT**：附件',
                'type' => 'string',
                'required' => false,
                'example' => 'TEXT',
                'enum' => 
                array (
                  0 => 'TEXT',
                  1 => 'ATTACHMENT',
                ),
              ),
              'ExecSQL' => 
              array (
                'description' => '变更SQL语句。',
                'type' => 'string',
                'required' => true,
                'docRequired' => false,
                'example' => 'DELIMITER ///
CREATE PROCEDURE GetAllProducts()
BEGIN
SELECT *  FROM base_user;
END ///',
              ),
              'ExecMode' => 
              array (
                'description' => '工单执行方式，取值如下：

- **COMMITOR** : 审批通过后，提交者执行。
- **AUTO** : 审批通过后，自动执行。
- **LAST_AUDITOR** : 审批通过后，最后一个审批人执行。',
                'type' => 'string',
                'required' => false,
                'example' => 'COMMITOR',
                'default' => 'COMMITOR',
                'enum' => 
                array (
                  0 => 'COMMITOR',
                  1 => 'AUTO',
                  2 => 'LAST_AUDITOR',
                ),
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'AttachmentKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单补充附件，对本次操作进行补充说明。

您可以调用[GetUserUploadFileJob](~~206069~~)接口获取该参数。',
            'type' => 'string',
            'required' => false,
            'example' => 'order_attachment.txt',
          ),
        ),
        4 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '4***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。仅请求失败时返回错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'CreateOrderResult' => 
              array (
                'description' => '工单ID。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '工单ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'example' => '12*****',
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"CreateOrderResult\\": [\\n    0\\n  ]\\n}","type":"json"}]',
      'title' => '创建可编程对象变更工单',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'CreatePublishGroupTask' => 
    array (
      'summary' => '执行结构设计工单。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '10****',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '34****',
          ),
        ),
        2 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库ID，可通过调用接口[ListDatabases](~~141873~~)获取物理库ID的值，调用接口[ListLogicDatabases](~~141874~~)获取逻辑库ID的值。
>DatabaseId的值即为DbId的值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1860****',
          ),
        ),
        3 => 
        array (
          'name' => 'Logic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为逻辑库。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'PublishStrategy',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '执行策略。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'enumValueTitles' => 
            array (
              'IMMEDIATELY' => '立即执行',
              'REGULARLY' => '定时执行',
            ),
            'example' => 'IMMEDIATELY',
            'enum' => 
            array (
              0 => 'IMMEDIATELY',
              1 => 'REGULARLY',
            ),
          ),
        ),
        5 => 
        array (
          'name' => 'PlanTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务计划开始时间。',
            'type' => 'string',
            'required' => false,
            'example' => '2023-10-09 15:24:11',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TaskId' => 
              array (
                'description' => '任务ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '522***',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '28A1B16E-8CC7-51C3-A298-B8FC79AEB0A0',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"TaskId\\": 0,\\n  \\"RequestId\\": \\"28A1B16E-8CC7-51C3-A298-B8FC79AEB0A0\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '执行结构设计工单',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'ListDDLPublishRecords' => 
    array (
      'summary' => '获取结构设计工单的发布详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID。
> 您可以在控制台（请参见[结构设计](~~69711~~)）或通过[CreateOrder](~~144649~~)接口创建结构设计工单，并获取工单ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3214325',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A1549FB0-D4B8-4140-919F-17322C1072B8',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'DDLPublishRecordList' => 
              array (
                'description' => '发布记录列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '发布记录。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'AuditStatus' => 
                    array (
                      'description' => '审批状态，取值如下：
- **EXEMPT_PASS**：免批通过
- **TO_AUDIT**：等待审批
- **CANCEL**：撤销审批
- **SUCCESS**：审批通过
- **FAIL**：未通过',
                      'type' => 'string',
                      'example' => 'CANCEL',
                    ),
                    'AuditExpireTime' => 
                    array (
                      'description' => '审批过期时间。',
                      'type' => 'string',
                      'example' => '2020-12-14 20:52:38',
                    ),
                    'CreatorId' => 
                    array (
                      'description' => '工单创建人的用户ID（可通过[GetUser](~~147098~~)接口获取的UserId参数），非阿里云UID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1423',
                    ),
                    'Finality' => 
                    array (
                      'description' => '是否终止，取值为：
- **true**：是
- **false**：否
> 导致终止的原因有审批撤回或在指定执行时间前未完成审批等。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'FinalityReason' => 
                    array (
                      'description' => '终止原因。',
                      'type' => 'string',
                      'example' => 'CANCEL',
                    ),
                    'PublishStatus' => 
                    array (
                      'description' => '发布状态，取值如下：
- **START**：创建
- **ANALYZE**：分析
- **AUDIT**：审批
- **DISPATCH**：调度
- **SUCCESS**：成功',
                      'type' => 'string',
                      'example' => 'AUDIT',
                    ),
                    'RiskLevel' => 
                    array (
                      'description' => '风险等级，取值如下：
- **NONE_RISK**：无风险
- **LOW_RISK**：低风险
- **MIDDLE_RISK**：中风险
- **HIGH_RISK**：高风险',
                      'type' => 'string',
                      'example' => 'LOW_RISK',
                    ),
                    'StatusDesc' => 
                    array (
                      'description' => '发布状态描述。',
                      'type' => 'string',
                      'example' => 'CANCEL',
                    ),
                    'WorkflowInstanceId' => 
                    array (
                      'description' => '审批流ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '432153',
                    ),
                    'Comment' => 
                    array (
                      'title' => '发布备注',
                      'description' => '发布备注',
                      'type' => 'string',
                      'example' => '发布备注',
                    ),
                    'PublishTaskInfoList' => 
                    array (
                      'description' => '发布任务信息列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '发布任务信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'DbId' => 
                          array (
                            'description' => '数据库ID。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '4325',
                          ),
                          'Logic' => 
                          array (
                            'description' => '是否为逻辑库，取值：
- **true**：是
- **false**：否',
                            'type' => 'boolean',
                            'example' => 'false',
                          ),
                          'PlanTime' => 
                          array (
                            'description' => '计划发布时间。',
                            'type' => 'string',
                            'example' => '2020-12-14 20:52:38',
                          ),
                          'PublishStrategy' => 
                          array (
                            'description' => '发布策略，取值：
- **IMMEDIATELY**：立即执行
- **REGULARLY**：定时执行',
                            'type' => 'string',
                            'example' => 'IMMEDIATELY',
                          ),
                          'StatusDesc' => 
                          array (
                            'description' => '状态描述。',
                            'type' => 'string',
                            'example' => 'NONE',
                          ),
                          'TaskJobStatus' => 
                          array (
                            'description' => '任务状态。',
                            'type' => 'string',
                            'example' => 'NONE',
                          ),
                          'PublishJobList' => 
                          array (
                            'description' => '发布任务列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => '发布任务。',
                              'type' => 'object',
                              'properties' => 
                              array (
                                'ExecuteCount' => 
                                array (
                                  'description' => '已经执行的SQL数量。',
                                  'type' => 'integer',
                                  'format' => 'int64',
                                  'example' => '0',
                                ),
                                'Scripts' => 
                                array (
                                  'description' => '变更脚本。',
                                  'type' => 'string',
                                  'example' => 'ALTER TABLE test_toolkit_rename_table_after_rename MODIFY COLUMN gmt_modified datetime NOT NULL',
                                ),
                                'TableName' => 
                                array (
                                  'description' => '变更的表名。',
                                  'type' => 'string',
                                  'example' => 'test_toolkit_rename_table_after_rename',
                                ),
                                'StatusDesc' => 
                                array (
                                  'description' => '状态描述。',
                                  'type' => 'string',
                                  'example' => 'NONE',
                                ),
                                'TaskJobStatus' => 
                                array (
                                  'description' => '发布任务状态，取值如下：
- **NONE**：未知
- **SUCCESS**：执行成功
- **FAIL**：执行失败',
                                  'type' => 'string',
                                  'example' => 'NONE',
                                ),
                                'DBTaskGroupId' => 
                                array (
                                  'description' => 'SQL任务分组ID。',
                                  'type' => 'integer',
                                  'format' => 'int64',
                                  'example' => '423515',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A1549FB0-D4B8-4140-919F-17322C1072B8\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"DDLPublishRecordList\\": [\\n    {\\n      \\"AuditStatus\\": \\"CANCEL\\",\\n      \\"AuditExpireTime\\": \\"2020-12-14 20:52:38\\",\\n      \\"CreatorId\\": 1423,\\n      \\"Finality\\": true,\\n      \\"FinalityReason\\": \\"CANCEL\\",\\n      \\"PublishStatus\\": \\"AUDIT\\",\\n      \\"RiskLevel\\": \\"LOW_RISK\\",\\n      \\"StatusDesc\\": \\"CANCEL\\",\\n      \\"WorkflowInstanceId\\": 432153,\\n      \\"Comment\\": \\"发布备注\\",\\n      \\"PublishTaskInfoList\\": [\\n        {\\n          \\"DbId\\": 4325,\\n          \\"Logic\\": false,\\n          \\"PlanTime\\": \\"2020-12-14 20:52:38\\",\\n          \\"PublishStrategy\\": \\"IMMEDIATELY\\",\\n          \\"StatusDesc\\": \\"NONE\\",\\n          \\"TaskJobStatus\\": \\"NONE\\",\\n          \\"PublishJobList\\": [\\n            {\\n              \\"ExecuteCount\\": 0,\\n              \\"Scripts\\": \\"ALTER TABLE test_toolkit_rename_table_after_rename MODIFY COLUMN gmt_modified datetime NOT NULL\\",\\n              \\"TableName\\": \\"test_toolkit_rename_table_after_rename\\",\\n              \\"StatusDesc\\": \\"NONE\\",\\n              \\"TaskJobStatus\\": \\"NONE\\",\\n              \\"DBTaskGroupId\\": 423515\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListDDLPublishRecordsResponse>\\n    <RequestId>A1549FB0-D4B8-4140-919F-17322C1072B8</RequestId>\\n    <Success>true</Success>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <DDLPublishRecordList>\\n        <AuditStatus>CANCEL</AuditStatus>\\n        <AuditExpireTime>2020-12-14 20:52:38</AuditExpireTime>\\n        <CreatorId>1423</CreatorId>\\n        <Finality>true</Finality>\\n        <FinalityReason>CANCEL</FinalityReason>\\n        <PublishStatus>AUDIT</PublishStatus>\\n        <RiskLevel>LOW_RISK</RiskLevel>\\n        <StatusDesc>CANCEL</StatusDesc>\\n        <WorkflowInstanceId>432153</WorkflowInstanceId>\\n        <Comment>我是发布备注</Comment>\\n        <PublishTaskInfoList>\\n            <DbId>4325</DbId>\\n            <Logic>false</Logic>\\n            <PlanTime>2020-12-14 20:52:38</PlanTime>\\n            <PublishStrategy>IMMEDIATELY</PublishStrategy>\\n            <StatusDesc>NONE</StatusDesc>\\n            <TaskJobStatus>NONE</TaskJobStatus>\\n            <PublishJobList>\\n                <ExecuteCount>0</ExecuteCount>\\n                <Scripts>ALTER TABLE test_toolkit_rename_table_after_rename MODIFY COLUMN gmt_modified datetime NOT NULL</Scripts>\\n                <TableName>test_toolkit_rename_table_after_rename</TableName>\\n                <StatusDesc>NONE</StatusDesc>\\n                <TaskJobStatus>NONE</TaskJobStatus>\\n                <DBTaskGroupId>423515</DBTaskGroupId>\\n            </PublishJobList>\\n        </PublishTaskInfoList>\\n    </DDLPublishRecordList>\\n</ListDDLPublishRecordsResponse>","errorExample":""}]',
      'title' => '获取结构设计工单详情',
    ),
    'GetTableDesignProjectFlow' => 
    array (
      'summary' => '调用此API可获取结构设计工单当前所在环节、是否允许返回结构设计节点、执行发布的策略等信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
        'abilityTreeCode' => '219318',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdms867K9R',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '工单号',
            'description' => '结构设计工单ID。您可调用[ListOrders](~~144643~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '95****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'B5FD0BC8-2D90-4478-B8EC-A0E92E0B1773',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值说明如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码，请求异常时返回。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ProjectFlow' => 
              array (
                'description' => '结构设计流程信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'FlowNodeArray' => 
                  array (
                    'description' => '流程节点列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'NodeRole' => 
                        array (
                          'description' => '流程节点角色：

- START：开始。
- DESIGN：结构设计。
- PUBLISH：发布。
- END：结束。',
                          'type' => 'string',
                          'example' => 'DESIGN',
                        ),
                        'NodeTitle' => 
                        array (
                          'description' => '节点的标题。',
                          'type' => 'string',
                          'example' => '设计阶段',
                        ),
                        'Position' => 
                        array (
                          'description' => '流程所在环节，从1开始。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'PublishAnchor' => 
                        array (
                          'description' => '定义该节点是否为发布锚点。
一个结构设计流程中有且仅有一个发布锚点，负责执行发布操作。发布锚点发布后，将生成发布后镜像、释放DDL元数据锁。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'BackToDesign' => 
                        array (
                          'description' => '是否允许流程返回结构设计阶段，取值：

- **1**：允许。

- **0**：不允许，只能定义在PUBLISH（发布）节点上。',
                          'type' => 'boolean',
                          'example' => '1',
                        ),
                        'CanSkip' => 
                        array (
                          'description' => '是否允许跳过该当前节点，取值：

- **1**：可以。
- **0**：不可以，只能定义在PUBLISH（发布）节点上。',
                          'type' => 'boolean',
                          'example' => '0',
                        ),
                        'PublishStrategies' => 
                        array (
                          'description' => '提交发布可选择执行策略列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '选择执行发布策略：

- **IMMEDIATELY**：立即执行。
- **REGULARLY**：定时执行。',
                            'type' => 'string',
                            'example' => 'IMMEDIATELY',
                          ),
                        ),
                      ),
                    ),
                  ),
                  'CurrentPosition' => 
                  array (
                    'description' => '当前结构设计流程所在节点位置。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2',
                  ),
                  'RuleName' => 
                  array (
                    'description' => '结构设计应用的安全规则集名称。',
                    'type' => 'string',
                    'example' => 'mysql default',
                  ),
                  'RuleComment' => 
                  array (
                    'description' => '结构设计应用的安全规则集描述。',
                    'type' => 'string',
                    'example' => 'mysql缺省规则集',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B5FD0BC8-2D90-4478-B8EC-A0E92E0B1773\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ProjectFlow\\": {\\n    \\"FlowNodeArray\\": [\\n      {\\n        \\"NodeRole\\": \\"DESIGN\\",\\n        \\"NodeTitle\\": \\"设计阶段\\",\\n        \\"Position\\": 1,\\n        \\"PublishAnchor\\": false,\\n        \\"BackToDesign\\": true,\\n        \\"CanSkip\\": true,\\n        \\"PublishStrategies\\": [\\n          \\"IMMEDIATELY\\"\\n        ]\\n      }\\n    ],\\n    \\"CurrentPosition\\": 2,\\n    \\"RuleName\\": \\"mysql default\\",\\n    \\"RuleComment\\": \\"mysql缺省规则集\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取结构设计项目流程信息',
    ),
    'GetTableDesignProjectInfo' => 
    array (
      'summary' => '调用此API可获取指定结构设计工单的项目信息以及工单的变更基准库的信息，包含结构设计工单的状态、工单创建者ID、基准库的名称和ID等。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
        'abilityTreeCode' => '219310',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdms867K9R',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '工单号',
            'description' => '结构设计工单ID。您可调用[ListOrders](~~465867~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '95****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '48778434-5796-571A-8455-A59146588401',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码，请求异常时返回。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ProjectInfo' => 
              array (
                'description' => '结构设计项目信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'OrderId' => 
                  array (
                    'description' => '工单ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '95****',
                  ),
                  'ProjectId' => 
                  array (
                    'description' => '项目ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12****',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '工单的创建时间。',
                    'type' => 'string',
                    'example' => '2024-04-23 02:57:01',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '最后一次修改工单的时间。',
                    'type' => 'string',
                    'example' => '2024-04-23 02:57:01',
                  ),
                  'Status' => 
                  array (
                    'description' => '结构设计项目的状态：
- **DESIGN**：设计中。
- **PUBLISHED**：已发布。
- **CLOSE**：已关闭。',
                    'type' => 'string',
                    'example' => 'DESIGN',
                  ),
                  'Title' => 
                  array (
                    'description' => '结构设计项目名称。',
                    'type' => 'string',
                    'example' => '用户增长战役',
                  ),
                  'Description' => 
                  array (
                    'description' => '结构设计项目描述。',
                    'type' => 'string',
                    'example' => '测试',
                  ),
                  'CreatorId' => 
                  array (
                    'description' => '工单创建者的用户ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '71****',
                  ),
                  'BaseDatabase' => 
                  array (
                    'description' => '结构设计中变更基准库的信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'SearchName' => 
                      array (
                        'description' => '搜索数据库的名称。',
                        'type' => 'string',
                        'example' => 'schema_name@127.0.XX.XX',
                      ),
                      'SchemaName' => 
                      array (
                        'description' => '数据库名称。',
                        'type' => 'string',
                        'example' => 'bk_atc020',
                      ),
                      'DbId' => 
                      array (
                        'description' => '数据库ID。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '11****',
                      ),
                      'Logic' => 
                      array (
                        'description' => '是否为逻辑库，取值：
- **true**：是。
- **false**：否。',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'Alias' => 
                      array (
                        'description' => '实例别名。',
                        'type' => 'string',
                        'example' => '核心交易库',
                      ),
                      'EnvType' => 
                      array (
                        'description' => '环境类型，取值如下：
- **product**：生产环境。
- **dev**：开发环境。
- **pre**：预发环境。
- **test**：测试环境。
- **sit**：SIT环境。
- **uat**：UAT环境。
- **pet**：压测环境。
- **stag**：STAG环境。',
                        'type' => 'string',
                        'example' => 'dev',
                      ),
                      'DbType' => 
                      array (
                        'description' => '数据库类型，返回值请参见[DbType参数说明](~~198106~~)。',
                        'type' => 'string',
                        'example' => 'POLARDB',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"48778434-5796-571A-8455-A59146588401\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ProjectInfo\\": {\\n    \\"OrderId\\": 0,\\n    \\"ProjectId\\": 0,\\n    \\"GmtCreate\\": \\"2024-04-23 02:57:01\\",\\n    \\"GmtModified\\": \\"2024-04-23 02:57:01\\",\\n    \\"Status\\": \\"DESIGN\\",\\n    \\"Title\\": \\"用户增长战役\\",\\n    \\"Description\\": \\"测试\\",\\n    \\"CreatorId\\": 0,\\n    \\"BaseDatabase\\": {\\n      \\"SearchName\\": \\"schema_name@127.0.XX.XX\\",\\n      \\"SchemaName\\": \\"bk_atc020\\",\\n      \\"DbId\\": 0,\\n      \\"Logic\\": false,\\n      \\"Alias\\": \\"核心交易库\\",\\n      \\"EnvType\\": \\"dev\\",\\n      \\"DbType\\": \\"POLARDB\\"\\n    }\\n  }\\n}","type":"json"}]',
      'title' => '获取结构设计项目信息',
    ),
    'CreateDatabaseExportOrder' => 
    array (
      'summary' => '创建数据库导出工单。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ParentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '父工单ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => ' 877****',
          ),
        ),
        1 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务背景，描述提工单的原因，以减少沟通成本。',
            'type' => 'string',
            'required' => true,
            'example' => '文档测试',
          ),
        ),
        2 => 
        array (
          'name' => 'AttachmentKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单附件Key，补充当前工单信息。可通过调用接口[GetUserUploadFileJob](~~206069~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'order_attachment.txt',
          ),
        ),
        3 => 
        array (
          'name' => 'PluginParam',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '工单参数。',
            'type' => 'object',
            'properties' => 
            array (
              'Classify' => 
              array (
                'description' => '导出原因。',
                'type' => 'string',
                'required' => true,
                'example' => '文档测试',
              ),
              'DbId' => 
              array (
                'description' => '数据库ID。您可通过调用[GetDatabase](~~465856~~)获取该参数的值。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '17****',
              ),
              'InstanceId' => 
              array (
                'description' => '实例ID。您可通过调用[GetInstance](~~465826~~)接口获取该参数的值。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '137****',
              ),
              'Logic' => 
              array (
                'description' => '是否为逻辑库，取值如下：
- **true**：是
- **false**：否',
                'type' => 'boolean',
                'required' => true,
                'example' => 'false',
              ),
              'Config' => 
              array (
                'description' => '导出配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'SQLExtOption' => 
                  array (
                    'description' => 'SQL脚本拓展选项。列表长度可为0。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '选项列表：

- **DROP**：在CREATE语句前生成DROP TABLE语句。
- **TRUNCATE**：在INSERT语句前生成TRUNCATE TABLE语句。
- **COMPRESS**：压缩INSERT语句，将VALUES合并为5 M大小。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'DROP',
                    ),
                    'required' => true,
                  ),
                  'DataOption' => 
                  array (
                    'description' => '大数据导出选项，用于筛选需要导出哪些大数据类型。列表长度可为0。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '导出选项：

- **BLOB**：导出BLOG、TINYBLOB等类型。
- **TEXT**：导出TEXT、TNIYTEXT等类型。
- **BINARY**：导出BINARY、VARBINARY等类型。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'BLOB',
                    ),
                    'required' => true,
                  ),
                  'ExportContent' => 
                  array (
                    'description' => '导出内容。取值如下：

- **DATA**：数据。
- **STRUCT**：结构。
- **DATA_STRUCT**：数据和结构。',
                    'type' => 'string',
                    'required' => true,
                    'example' => 'DATA',
                  ),
                  'ExportTypes' => 
                  array (
                    'description' => '导出结构类型。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '取值如下（可多选）：

- **PROCEDURE**：存储过程。
- **FUNCTION**：函数。
- **TRIGGER**：触发器。
- **VIEW**：视图。
- **EVENT**：事件。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'PROCEDURE',
                    ),
                    'required' => false,
                  ),
                  'SelectedTables' => 
                  array (
                    'description' => '导出的表列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '选中导出哪些表。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'dmstest_table',
                    ),
                    'required' => false,
                  ),
                  'Tables' => 
                  array (
                    'description' => '导出表过滤条件。',
                    'type' => 'object',
                    'required' => false,
                    'additionalProperties' => 
                    array (
                      'type' => 'string',
                      'description' => '过滤条件。',
                      'example' => 'where 1=1',
                    ),
                  ),
                  'TargetOption' => 
                  array (
                    'description' => '导出格式。取值如下：

- **SQL**
- **CSV**
- **XLSX**',
                    'type' => 'string',
                    'required' => true,
                    'example' => 'SQL',
                  ),
                ),
                'required' => true,
              ),
              'SearchName' => 
              array (
                'description' => '数据库搜索名称。',
                'type' => 'string',
                'required' => true,
                'example' => 'test@xxx.xxx.xxx.xxx:3306',
              ),
            ),
            'required' => true,
          ),
        ),
        4 => 
        array (
          'name' => 'RelatedUserList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '相关人列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '变更相关人的用户ID。设置的相关人员可查看工单，并协同工作，非相关人员则不能查看工单（管理员、DBA除外）。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '2452345113****',
            ),
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'CreateOrderResult' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CreateOrderResult' => 
                  array (
                    'description' => '创建的工单包含的信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '工单ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12***',
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"CreateOrderResult\\": {\\n    \\"CreateOrderResult\\": [\\n      0\\n    ]\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '创建数据库导出工单',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'CreateDataExportOrder' => 
    array (
      'summary' => '创建SQL结果集导出工单。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ParentId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '父工单ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '877****',
          ),
        ),
        1 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务背景，描述提工单的原因，以减少沟通成本。',
            'type' => 'string',
            'required' => true,
            'example' => '业务测试。',
          ),
        ),
        2 => 
        array (
          'name' => 'AttachmentKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单附件Key，补充当前工单信息。可通过调用接口[GetUserUploadFileJob](~~206069~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'order_attachment.txt',
          ),
        ),
        3 => 
        array (
          'name' => 'RelatedUserList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '相关人列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '变更相关人的用户ID，非阿里云UID。设置的相关人员可查看工单，并协同工作，非相关人员则不能查看工单（管理员、DBA除外）。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '2452345113****',
            ),
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'PluginParam',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '工单参数。',
            'type' => 'object',
            'properties' => 
            array (
              'AffectRows' => 
              array (
                'description' => '预估影响SQL行数。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '1',
              ),
              'Classify' => 
              array (
                'description' => '导出工单的原因类别。',
                'type' => 'string',
                'required' => true,
                'example' => '测试',
              ),
              'InstanceId' => 
              array (
                'description' => '实例ID。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '132****',
              ),
              'DbId' => 
              array (
                'description' => '数据库ID。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '18****',
              ),
              'Logic' => 
              array (
                'description' => '是否为逻辑库，取值如下：
- **true**：逻辑库
- **false**：物理库

> 如果取值为**true**，目标数据库必须为逻辑库。',
                'type' => 'boolean',
                'required' => true,
                'example' => 'true',
              ),
              'IgnoreAffectRows' => 
              array (
                'description' => '是否跳过SQL行数校验，返回值如下：
- **true**
- **false**',
                'type' => 'boolean',
                'required' => true,
                'example' => 'true',
              ),
              'IgnoreAffectRowsReason' => 
              array (
                'description' => '跳过SQL行数校验的原因。当您需要跳过行数校验时必须填该参数。',
                'type' => 'string',
                'required' => false,
                'example' => '仅测试，不影响业务，无需校验。',
              ),
              'ExeSQL' => 
              array (
                'description' => '执行的导出SQL语句。',
                'type' => 'string',
                'required' => true,
                'example' => 'SELECT * FROM DMS_test
 LIMIT 20;',
              ),
              'Watermark' => 
              array (
                'description' => '水印相关信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'WatermarkTypes' => 
                  array (
                    'description' => '水印嵌入类型。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '取值如下：
- **DATA**：数据水印。
- **FILE**：文件水印。

水印的详细信息，请参见[数据水印](~~444281~~)。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'DATA',
                    ),
                    'required' => false,
                  ),
                  'Keys' => 
                  array (
                    'description' => '主键或唯一键。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '主键或唯一键信息，多个数据之间使用英文逗号（,）分割。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'ID',
                    ),
                    'required' => false,
                  ),
                  'ColumnName' => 
                  array (
                    'description' => '数据水印嵌入字段名称。',
                    'type' => 'string',
                    'required' => false,
                    'example' => 'user_number',
                  ),
                  'DataWatermark' => 
                  array (
                    'description' => '数据水印信息。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '测试',
                  ),
                  'FileWatermark' => 
                  array (
                    'description' => '文件水印信息。',
                    'type' => 'string',
                    'required' => false,
                    'example' => '测试',
                  ),
                ),
                'required' => false,
              ),
            ),
            'required' => true,
          ),
        ),
        5 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '7FAD400F-7A5C-4193-8F9A-39D86C4F0231',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'CreateOrderResult' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'CreateOrderResult' => 
                  array (
                    'description' => '创建的工单内容。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '工单ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '819****',
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"7FAD400F-7A5C-4193-8F9A-39D86C4F0231\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"CreateOrderResult\\": {\\n    \\"CreateOrderResult\\": [\\n      0\\n    ]\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '创建SQL结果集导出工单',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'ExecuteDataExport' => 
    array (
      'summary' => '调用ExecuteDataExport执行数据导出工单。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1234',
          ),
        ),
        2 => 
        array (
          'name' => 'ActionDetail',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '执行操作参数：

```json
{
  "mode" : "FAST",  // 数据导出模式，默认FAST，NORMAL允许进行中断
  "encoding" : "UTF8",  //编码
  "startTime" : "2022-12-22 00:00:00",  // 开始导出时间
  "transaction" : false,    // 是否启用事务
  "fileType" : "SQL"    // 导出格式
}
```

> 除如上示例的取值，mode、encoding、fileType还支持如下取值：
>- mode：NORMAL。
>- encoding：UTF8MB4、GB2312、ISO_8859_1、GBK、LATAIN1、CP1252。
>- fileType：XLSX、CSV、JSON、TXT。',
            'type' => 'object',
            'required' => false,
            'docRequired' => true,
            'example' => '{    "fileType": "CSV",    "encoding": ""  }',
            'default' => '',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FE8EE2F1-4880-46BC-A704-5CF63EAF9A04',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FE8EE2F1-4880-46BC-A704-5CF63EAF9A04\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>FE8EE2F1-4880-46BC-A704-5CF63EAF9A04</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '执行数据导出工单',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDataExportPreCheckDetail' => 
    array (
      'summary' => '查看SQL结果集导出工单预检查详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '34****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C1D39814-9808-47F8-AFE0-AF167239AC9B',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'PreCheckResult' => 
              array (
                'description' => '预检查结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'IgnoreAffectRows' => 
                  array (
                    'description' => '是否忽略预校验，返回值如下：
- **true**：忽略预校验。
- **false**：不忽略预校验。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'PreCheckDetailList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PreCheckDetailList' => 
                      array (
                        'description' => '预检查详情列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'AffectRows' => 
                            array (
                              'description' => '预估影响SQL行数。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1',
                            ),
                            'SQL' => 
                            array (
                              'description' => '实际SQL。',
                              'type' => 'string',
                              'example' => 'SELECT * FROM tmp_table LIMIT 1',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C1D39814-9808-47F8-AFE0-AF167239AC9B\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"PreCheckResult\\": {\\n    \\"IgnoreAffectRows\\": true,\\n    \\"PreCheckDetailList\\": {\\n      \\"PreCheckDetailList\\": [\\n        {\\n          \\"AffectRows\\": 1,\\n          \\"SQL\\": \\"SELECT * FROM tmp_table LIMIT 1\\"\\n        }\\n      ]\\n    }\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '查看SQL结果集导出预检查详情',
    ),
    'GetDataExportDownloadURL' => 
    array (
      'summary' => '调用GetDataExportDownloadURL获取数据导出结果附件下载地址。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '546****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'DownloadURLResult' => 
              array (
                'description' => '导出文件下载地址。',
                'type' => 'object',
                'properties' => 
                array (
                  'HasResult' => 
                  array (
                    'description' => '是否有下载结果，返回值如下：
- **true**：有下载结果
- **false**：没有下载结果',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'TipMessage' => 
                  array (
                    'description' => '异常提示信息。',
                    'type' => 'string',
                    'example' => 'tip message',
                  ),
                  'URL' => 
                  array (
                    'description' => '导出文件下载地址。',
                    'type' => 'string',
                    'example' => 'https://dms-idb-hangzhou.oss-cn-hangzhou.aliyuncs.com/xxx.zip',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4BF24EA5-9013-4C85-AE68-6C23AF5E0097',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"DownloadURLResult\\": {\\n    \\"HasResult\\": true,\\n    \\"TipMessage\\": \\"tip message\\",\\n    \\"URL\\": \\"https://dms-idb-hangzhou.oss-cn-hangzhou.aliyuncs.com/xxx.zip\\"\\n  },\\n  \\"RequestId\\": \\"4BF24EA5-9013-4C85-AE68-6C23AF5E0097\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GetDataExportDownloadURLResponse>\\n    <DownloadURLResult>\\n        <URL>https://dms-idb-hangzhou.oss-cn-hangzhou.aliyuncs.com/xxx.zip</URL>\\n        <HasResult>true</HasResult>\\n    </DownloadURLResult>\\n    <RequestId>4BF24EA5-9013-4C85-AE68-6C23AF5E0097</RequestId>\\n    <Success>true</Success>\\n</GetDataExportDownloadURLResponse>","errorExample":""}]',
      'title' => '获取数据导出结果附件下载地址',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDatabaseExportOrderDetail' => 
    array (
      'summary' => '获取数据库导出工单详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '工单ID，可调用[ListOrders](~~144643~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '821****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。
',
                'type' => 'string',
                'example' => 'CFD8FE00-36D9-4C1B-940D-65A7B73D9066',
              ),
              'DatabaseExportOrderDetail' => 
              array (
                'description' => '数据库导出工单详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '工单ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '821****',
                  ),
                  'Committer' => 
                  array (
                    'description' => '工单提交者。',
                    'type' => 'string',
                    'example' => 'dmsuser',
                  ),
                  'CommitterId' => 
                  array (
                    'description' => '工单提交者的用户ID，非阿里云UID。',
                    'type' => 'string',
                    'example' => '12***',
                  ),
                  'Comment' => 
                  array (
                    'description' => '提交数据导出工单的业务背景。',
                    'type' => 'string',
                    'example' => '测试',
                  ),
                  'SearchName' => 
                  array (
                    'description' => '数据库搜索名称。',
                    'type' => 'string',
                    'example' => 'test@xxx.xxx.xxx.xxx:3306',
                  ),
                  'StatusDesc' => 
                  array (
                    'description' => '工单状态描述。',
                    'type' => 'string',
                    'example' => '工单审批中。',
                  ),
                  'WorkflowStatusDesc' => 
                  array (
                    'description' => '工作流状态描述。',
                    'type' => 'string',
                    'example' => '工单审批中。',
                  ),
                  'KeyInfo' => 
                  array (
                    'description' => '关键信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'DbId' => 
                      array (
                        'description' => '数据库ID。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '2583****',
                      ),
                      'DownloadURL' => 
                      array (
                        'description' => '导出结果的下载地址。',
                        'type' => 'string',
                        'example' => 'https://oss.xxx.com',
                      ),
                      'AuditDate' => 
                      array (
                        'description' => '提交工单时间。',
                        'type' => 'string',
                        'example' => '2023-04-13 13:44:59',
                      ),
                      'Config' => 
                      array (
                        'description' => '配置信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'DbName' => 
                          array (
                            'description' => '数据库名称。',
                            'type' => 'string',
                            'example' => 'dmstest',
                          ),
                          'ExportContent' => 
                          array (
                            'description' => '导出内容。取值如下：

- **DATA**：数据。
- **STRUCT**：结构。
- **DATA_STRUCT**：数据和结构。',
                            'type' => 'string',
                            'example' => 'DATA',
                          ),
                          'TargetOption' => 
                          array (
                            'description' => '导出格式。取值如下：

- **SQL**
- **CSV**
- **XLSX**',
                            'type' => 'string',
                            'example' => 'SQL',
                          ),
                          'ExportTypes' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'ExportTypes' => 
                              array (
                                'description' => '导出结构类型。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '取值如下：

- **PROCEDURE**：存储过程。
- **FUNCTION**：函数。
- **TRIGGER**：触发器。
- **VIEW**：视图。
- **EVENT**：事件。',
                                  'type' => 'string',
                                  'example' => 'PROCEDURE',
                                ),
                              ),
                            ),
                          ),
                          'SelectedTables' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'SelectedTables' => 
                              array (
                                'description' => '选中导出哪些表。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '表名。',
                                  'type' => 'string',
                                  'example' => 'user_test',
                                ),
                              ),
                            ),
                          ),
                          'SQLExtOption' => 
                          array (
                            'type' => 'object',
                            'properties' => 
                            array (
                              'SQLExtOption' => 
                              array (
                                'description' => 'SQL脚本拓展选项。',
                                'type' => 'array',
                                'items' => 
                                array (
                                  'description' => '选项列表：

- **DROP**：在CREATE语句前生成DROP TABLE语句。
- **TRUNCATE**：在INSERT语句前生成TRUNCATE TABLE语句。
- **COMPRESS**：压缩INSERT语句，将VLAUES合并为5 M大小。',
                                  'type' => 'string',
                                  'example' => 'DROP',
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Log' => 
                  array (
                    'description' => '执行日志。',
                    'type' => 'string',
                    'example' => '2023-04-12 14:58:32:015 Database Dump Start.
2023-04-12 14:58:32:096 set server side query timeout, sql : set max_execution_time = 0',
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"CFD8FE00-36D9-4C1B-940D-65A7B73D9066\\",\\n  \\"DatabaseExportOrderDetail\\": {\\n    \\"Id\\": 0,\\n    \\"Committer\\": \\"dmsuser\\",\\n    \\"CommitterId\\": \\"12***\\",\\n    \\"Comment\\": \\"测试\\",\\n    \\"SearchName\\": \\"test@xxx.xxx.xxx.xxx:3306\\",\\n    \\"StatusDesc\\": \\"工单审批中。\\",\\n    \\"WorkflowStatusDesc\\": \\"工单审批中。\\",\\n    \\"KeyInfo\\": {\\n      \\"DbId\\": 0,\\n      \\"DownloadURL\\": \\"https://oss.xxx.com\\",\\n      \\"AuditDate\\": \\"2023-04-13 13:44:59\\",\\n      \\"Config\\": {\\n        \\"DbName\\": \\"dmstest\\",\\n        \\"ExportContent\\": \\"DATA\\",\\n        \\"TargetOption\\": \\"SQL\\",\\n        \\"ExportTypes\\": {\\n          \\"ExportTypes\\": [\\n            \\"PROCEDURE\\"\\n          ]\\n        },\\n        \\"SelectedTables\\": {\\n          \\"SelectedTables\\": [\\n            \\"user_test\\"\\n          ]\\n        },\\n        \\"SQLExtOption\\": {\\n          \\"SQLExtOption\\": [\\n            \\"DROP\\"\\n          ]\\n        }\\n      }\\n    },\\n    \\"Log\\": \\"2023-04-12 14:58:32:015 Database Dump Start.\\\\n2023-04-12 14:58:32:096 set server side query timeout, sql : set max_execution_time = 0\\"\\n  },\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '获取数据库导出工单详情',
    ),
    'GetDataExportOrderDetail' => 
    array (
      'summary' => '获取SQL结果集导出工单详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'formData',
          'schema' => 
          array (
            'description' => '工单ID。可调用[ListOrders](~~465867~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '818****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D',
              ),
              'DataExportOrderDetail' => 
              array (
                'description' => 'SQL结果集导出工单详情信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'KeyInfo' => 
                  array (
                    'description' => '状态信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'PreCheckId' => 
                      array (
                        'description' => '预校验ID。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '6393****',
                      ),
                      'JobStatus' => 
                      array (
                        'description' => '导出工单状态，取值如下：
- **PRE_CHECKING**：执行预校验。
- **PRE_CHECK_SUCCESS**：预校验成功。
- **PRE_CHECK_FAIL**：预校验失败。
- **WAITING_APPLY_AUDIT**：等待提交审批。
- **APPLY_AUDIT_SUCCESS**：提交审批成功。
- **ENABLE_EXPORT**：审批通过，允许导出。
- **WAITING_EXPORT**：等待调度进行导出。
- **DOING_EXPORT**：执行导出。
- **EXPORT_FAIL**：导出失败。
- **EXPORT_SUCCESS**：导出成功。',
                        'type' => 'string',
                        'example' => 'EXPORT_SUCCESS',
                      ),
                    ),
                  ),
                  'OrderDetail' => 
                  array (
                    'description' => '工单详情信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'DbId' => 
                      array (
                        'description' => '数据库ID。',
                        'type' => 'integer',
                        'format' => 'int32',
                        'example' => '3733****',
                      ),
                      'Database' => 
                      array (
                        'description' => '导出的数据库名称。',
                        'type' => 'string',
                        'example' => 'xxx@xxx:3306',
                      ),
                      'Classify' => 
                      array (
                        'description' => '导出工单的原因类别。',
                        'type' => 'string',
                        'example' => 'text',
                      ),
                      'ExeSQL' => 
                      array (
                        'description' => '执行的导出SQL语句。',
                        'type' => 'string',
                        'example' => 'SELECT * FROM DMS_test
 LIMIT 20;',
                      ),
                      'Logic' => 
                      array (
                        'description' => '是否为逻辑库。',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'ActualAffectRows' => 
                      array (
                        'description' => '系统校验影响的SQL行数。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1',
                      ),
                      'IgnoreAffectRows' => 
                      array (
                        'description' => '是否忽略影响行数。',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                      'IgnoreAffectRowsReason' => 
                      array (
                        'description' => '忽略校验原因。',
                        'type' => 'string',
                        'example' => 'empty',
                      ),
                      'EnvType' => 
                      array (
                        'description' => '导出数据库环境信息。',
                        'type' => 'string',
                        'example' => 'test',
                      ),
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。返回值如下：

- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D\\",\\n  \\"DataExportOrderDetail\\": {\\n    \\"KeyInfo\\": {\\n      \\"PreCheckId\\": 0,\\n      \\"JobStatus\\": \\"EXPORT_SUCCESS\\"\\n    },\\n    \\"OrderDetail\\": {\\n      \\"DbId\\": 0,\\n      \\"Database\\": \\"xxx@xxx:3306\\",\\n      \\"Classify\\": \\"text\\",\\n      \\"ExeSQL\\": \\"SELECT * FROM DMS_test\\\\n LIMIT 20;\\",\\n      \\"Logic\\": false,\\n      \\"ActualAffectRows\\": 1,\\n      \\"IgnoreAffectRows\\": false,\\n      \\"IgnoreAffectRowsReason\\": \\"empty\\",\\n      \\"EnvType\\": \\"test\\"\\n    }\\n  },\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DataExportOrderDetail>\\n    <KeyInfo>\\n        <PreCheckId>15544</PreCheckId>\\n        <JobStatus>EXPORT_SUCCESS</JobStatus>\\n    </KeyInfo>\\n    <OrderDetail>\\n        <Logic>false</Logic>\\n        <ActualAffectRows>1</ActualAffectRows>\\n        <ExeSQL>select 1;</ExeSQL>\\n        <Database>yuyang_test@xxx:3306【yuyang_test_xxx】杭州 非单元化</Database>\\n        <IgnoreAffectRows>false</IgnoreAffectRows>\\n        <DbId>116367</DbId>\\n        <Classify>测试</Classify>\\n        <EnvType>product</EnvType>\\n    </OrderDetail>\\n</DataExportOrderDetail>\\n<RequestId>78C93646-D9B1-4E6E-B5FD-C69F94A7905A</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '获取SQL结果集导出工单详情',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GetDbExportDownloadURL' => 
    array (
      'summary' => '调用GetDbExportDownloadURL接口，获取数据库导出结果附件下载地址。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。可通过调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID。您可调用[ListOrders](~~144643~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '73****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'DownloadURLResult' => 
              array (
                'description' => '导出文件下载地址。',
                'type' => 'object',
                'properties' => 
                array (
                  'HasResult' => 
                  array (
                    'description' => '是否有下载结果，返回值如下：
- **true**：有下载结果。
- **false**：没有下载结果。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'TipMessage' => 
                  array (
                    'description' => '异常提示信息。',
                    'type' => 'string',
                    'example' => 'tip message',
                  ),
                  'URL' => 
                  array (
                    'description' => '导出文件下载地址。',
                    'type' => 'string',
                    'example' => 'https://dms-idb-hangzhou.oss-cn-hangzhou.aliyuncs.com/xxx.zip',
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"DownloadURLResult\\": {\\n    \\"HasResult\\": true,\\n    \\"TipMessage\\": \\"tip message\\",\\n    \\"URL\\": \\"https://dms-idb-hangzhou.oss-cn-hangzhou.aliyuncs.com/xxx.zip\\"\\n  },\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '获取数据库导出结果附件下载地址',
    ),
    'CreateSQLReviewOrder' => 
    array (
      'summary' => '调用CreateSQLReviewOrder创建SQL审核工单。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务背景，描述任务的原因或目标，以减少沟通成本。',
            'type' => 'string',
            'required' => true,
            'example' => 'test',
          ),
        ),
        1 => 
        array (
          'name' => 'RelatedUserList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '相关人列表。设置的相关人可查看工单，并协同工作，非相关人员不能查看工单（管理员、DBA除外）。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '相关人ID。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '123443',
            ),
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'Param',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '工单参数。',
            'type' => 'object',
            'properties' => 
            array (
              'ProjectName' => 
              array (
                'description' => '项目名称。',
                'type' => 'string',
                'required' => true,
                'example' => 'xxx业务SQL审核',
              ),
              'DbId' => 
              array (
                'description' => '数据库ID，可调用[SearchDatabases](~~141876~~)接口获取。
> 当前仅支持物理库，暂不支持逻辑库。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => true,
                'example' => '123321',
              ),
              'AttachmentKeyList' => 
              array (
                'description' => 'SQL审核文件列表。审核的内容支持多个文件。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '附件Key，支持添加多个附件，您可以调用[GetUserUploadFileJob](~~206069~~)接口获取该参数。

> 仅支持iBatis框架或MyBatis框架的.xml文件与.txt格式的SQL文件。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'upload_xxxx.sql',
                ),
                'required' => true,
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。您可以调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '响应模式',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '200',
              ),
              'CreateOrderResult' => 
              array (
                'description' => '工单创建结果。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '工单号。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'example' => '1423532',
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"200\\",\\n  \\"CreateOrderResult\\": [\\n    1423532\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CreateSQLReviewOrderResponse>\\n    <RequestId>0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931</RequestId>\\n    <Success>true</Success>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <CreateOrderResult>1423532</CreateOrderResult>\\n</CreateSQLReviewOrderResponse>","errorExample":""}]',
      'title' => '创建SQL审核工单',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。

关于该功能的更多说明，请参见[SQL审核](~~60374~~)。',
    ),
    'GetSQLReviewCheckResultStatus' => 
    array (
      'summary' => '获取SQL审核工单的审核结果。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单号，您可以调用[CreateSQLReviewOrder](~~257777~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'exclusiveMaximum' => false,
            'minimum' => '1',
            'example' => '123321',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，您可以调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'CheckResultStatus' => 
              array (
                'description' => 'SQL审核结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'TotalSQLCount' => 
                  array (
                    'description' => '总SQL数量，单位：条。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '10',
                  ),
                  'CheckedCount' => 
                  array (
                    'description' => '已审核SQL数量，单位：条。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '10',
                  ),
                  'CheckStatusResult' => 
                  array (
                    'description' => '检测状态。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'New' => 
                      array (
                        'description' => '等待审核的SQL数量，单位：条。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '0',
                      ),
                      'Unknown' => 
                      array (
                        'description' => '解析异常的SQL数量，单位：条。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '0',
                      ),
                      'CheckNotPass' => 
                      array (
                        'description' => '检测不通过的SQL数量，单位：条。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1',
                      ),
                      'CheckPass' => 
                      array (
                        'description' => '检测通过的SQL数量，单位：条。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '8',
                      ),
                      'ForcePass' => 
                      array (
                        'description' => '人工通过的SQL数量，单位：条。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1',
                      ),
                      'ForceNotPass' => 
                      array (
                        'description' => '人工不通过的SQL数量，单位：条。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '0',
                      ),
                    ),
                  ),
                  'SQLReviewResult' => 
                  array (
                    'description' => 'SQL审核优化建议。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'MustImprove' => 
                      array (
                        'description' => '必须改进的SQL数量，单位：条。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '1',
                      ),
                      'PotentialIssue' => 
                      array (
                        'description' => '潜在问题的SQL数量，单位：条。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '0',
                      ),
                      'SuggestImprove' => 
                      array (
                        'description' => '建议改进的SQL数量，单位：条。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '3',
                      ),
                      'UseDmsToolkit' => 
                      array (
                        'description' => '推荐使用无锁结构变更的SQL数量，单位：条。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '0',
                      ),
                      'UseDmsDmlUnlock' => 
                      array (
                        'description' => '推荐使用无锁数据变更的SQL数量，单位：条。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '0',
                      ),
                      'TableIndexSuggest' => 
                      array (
                        'description' => '索引推荐的SQL数量，单位：条。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '2',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"CheckResultStatus\\": {\\n    \\"TotalSQLCount\\": 10,\\n    \\"CheckedCount\\": 10,\\n    \\"CheckStatusResult\\": {\\n      \\"New\\": 0,\\n      \\"Unknown\\": 0,\\n      \\"CheckNotPass\\": 1,\\n      \\"CheckPass\\": 8,\\n      \\"ForcePass\\": 1,\\n      \\"ForceNotPass\\": 0\\n    },\\n    \\"SQLReviewResult\\": {\\n      \\"MustImprove\\": 1,\\n      \\"PotentialIssue\\": 0,\\n      \\"SuggestImprove\\": 3,\\n      \\"UseDmsToolkit\\": 0,\\n      \\"UseDmsDmlUnlock\\": 0,\\n      \\"TableIndexSuggest\\": 2\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetSQLReviewCheckResultStatusResponse>\\n    <RequestId>E1ABE358-14A0-4DFA-9776-1A3CB59192DF</RequestId>\\n    <CheckResultStatus>\\n        <SQLReviewResult>\\n            <TableIndexSuggest>1</TableIndexSuggest>\\n            <MustImprove>1</MustImprove>\\n            <SuggestImprove>1</SuggestImprove>\\n            <PotentialIssue>2</PotentialIssue>\\n        </SQLReviewResult>\\n        <TotalSQLCount>4</TotalSQLCount>\\n        <CheckedCount>4</CheckedCount>\\n        <CheckStatusResult>\\n            <CheckNotPass>1</CheckNotPass>\\n            <CheckPass>3</CheckPass>\\n        </CheckStatusResult>\\n    </CheckResultStatus>\\n    <Success>true</Success>\\n</GetSQLReviewCheckResultStatusResponse>","errorExample":""}]',
      'title' => '获取SQL审核工单的审核结果',
      'description' => '关于该功能的更多说明，请参见[SQL审核](~~60374~~)。',
    ),
    'ListSQLReviewOriginSQL' => 
    array (
      'summary' => '获取SQL审核工单的SQL详情结果。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SQL审核工单号。您可以调用[CreateSQLReviewOrder](~~257777~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'exclusiveMaximum' => false,
            'minimum' => '1',
            'example' => '903****',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderActionDetail',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '工单参数（过滤条件）。',
            'type' => 'object',
            'properties' => 
            array (
              'FileId' => 
              array (
                'description' => '审核文件ID。',
                'type' => 'integer',
                'format' => 'int64',
                'required' => false,
                'example' => '85****',
              ),
              'SQLReviewResult' => 
              array (
                'description' => 'SQL审核优化建议。取值如下：
- **MUST_IMPROVE**：必须改进。
- **POTENTIAL_ISSUE**：潜在问题。
- **SUGGEST_IMPROVE**：建议改进。
- **USE_DMS_TOOLKIT**：使用无锁结构变更。
- **USE_DMS_DML_UNLOCK**：使用无锁数据变更。
- **TABLE_INDEX_SUGGEST**：索引推荐。',
                'type' => 'string',
                'required' => false,
                'example' => 'MUST_IMPROVE',
                'enum' => 
                array (
                  0 => 'MUST_IMPROVE',
                  1 => 'POTENTIAL_ISSUE',
                  2 => 'SUGGEST_IMPROVE',
                  3 => 'USE_DMS_TOOLKIT',
                  4 => 'USE_DMS_DML_UNLOCK',
                  5 => 'TABLE_INDEX_SUGGEST',
                ),
              ),
              'CheckStatusResult' => 
              array (
                'description' => '检测结果。取值及说明如下：
- **new**：等待分析。
- **unknown**：解析异常。
- **check_not_pass**：检测不通过。
- **check_pass**：检测通过。
- **force_pass**：人工通过。
- **force_not_pass**：人工不通过。',
                'type' => 'string',
                'required' => false,
                'example' => 'check_not_pass',
                'enum' => 
                array (
                  0 => 'new',
                  1 => 'unknown',
                  2 => 'check_not_pass',
                  3 => 'check_pass',
                  4 => 'force_pass',
                  5 => 'force_not_pass',
                ),
              ),
              'Page' => 
              array (
                'description' => '分页参数。',
                'type' => 'object',
                'properties' => 
                array (
                  'PageNumber' => 
                  array (
                    'description' => '从第几页开始。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'example' => '1',
                    'default' => '1',
                  ),
                  'PageSize' => 
                  array (
                    'description' => '每页数据量。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'required' => false,
                    'maximum' => '500',
                    'example' => '20',
                    'default' => '20',
                  ),
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。您可以调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '233***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。
',
                'type' => 'string',
                'example' => '0A00863F-6366-5583-9B96-891DC8D8F88A',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用API失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。返回值及说明如下：

- true：请求成功。
- false：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TotalCount' => 
              array (
                'description' => '文件中所包含的SQL条数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'OriginSQLList' => 
              array (
                'description' => '解析的SQL列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '单条SQL详情。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SQLId' => 
                    array (
                      'description' => 'SQL语句ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1111',
                    ),
                    'FileId' => 
                    array (
                      'description' => '文件ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '858***',
                    ),
                    'FileName' => 
                    array (
                      'description' => '文件名。',
                      'type' => 'string',
                      'example' => 'test.sql',
                    ),
                    'SQLContent' => 
                    array (
                      'description' => '文件中的SQL内容。',
                      'type' => 'string',
                      'example' => 'CREATE TABLE `test_sql_review_table` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `gmt_create` datetime NOT NULL,
  `name` varchar(256) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;',
                    ),
                    'CheckStatus' => 
                    array (
                      'description' => '检测结果。返回值及说明如下：
- **new**：等待分析。
- **unknown**：解析异常。
- **check_not_pass**：检测不通过。
- **check_pass**：检测通过。
- **force_pass**：人工通过。
- **force_not_pass**：人工不通过。',
                      'type' => 'string',
                      'example' => 'check_pass',
                    ),
                    'StatusDesc' => 
                    array (
                      'description' => '检测结果描述。',
                      'type' => 'string',
                      'example' => '检测通过',
                    ),
                    'CheckedTime' => 
                    array (
                      'description' => 'SQL检测时间。',
                      'type' => 'string',
                      'example' => '2021-06-09 21:07:00',
                    ),
                    'SqlHash' => 
                    array (
                      'description' => '对SQL内容进行MD5散列算法后得到的值。',
                      'type' => 'string',
                      'example' => 'c7992dc1b681c6733894aded7834f423',
                    ),
                    'ReviewSummary' => 
                    array (
                      'description' => 'SQL审核优化建议的统计信息（JSON字符串）。返回值及说明如下：
- **MUST_IMPROVE**：必须改进。
- **POTENTIAL_ISSUE**：潜在问题。
- **SUGGEST_IMPROVE**：建议改进。
- **USEDMSTOOLKIT**：使用无锁结构变更。
- **USEDMSDML_UNLOCK**：使用无锁数据变更。
- **TABLEINDEXSUGGEST**：索引推荐。',
                      'type' => 'string',
                      'example' => '{\\"SUGGEST_IMPROVE\\":2,\\"POTENTIAL_ISSUE\\":1}',
                    ),
                    'SQLReviewQueryKey' => 
                    array (
                      'description' => '查询SQL审核优化建议信息的Key。根据此Key调用[GetSQLReviewOptimizeDetail](~~465919~~)接口获取详情。',
                      'type' => 'string',
                      'example' => '6e9a4bc6867a4174a96b23c8b48b****',
                    ),
                    'SQLName' => 
                    array (
                      'description' => 'SQL名称。',
                      'type' => 'string',
                      'example' => 'getByPk',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0A00863F-6366-5583-9B96-891DC8D8F88A\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"TotalCount\\": 1,\\n  \\"OriginSQLList\\": [\\n    {\\n      \\"SQLId\\": 1111,\\n      \\"FileId\\": 0,\\n      \\"FileName\\": \\"test.sql\\",\\n      \\"SQLContent\\": \\"CREATE TABLE `test_sql_review_table` (\\\\n  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\\\\n  `gmt_create` datetime NOT NULL,\\\\n  `name` varchar(256) DEFAULT NULL\\\\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\\",\\n      \\"CheckStatus\\": \\"check_pass\\",\\n      \\"StatusDesc\\": \\"检测通过\\",\\n      \\"CheckedTime\\": \\"2021-06-09 21:07:00\\",\\n      \\"SqlHash\\": \\"c7992dc1b681c6733894aded7834f423\\",\\n      \\"ReviewSummary\\": \\"{\\\\\\\\\\\\\\"SUGGEST_IMPROVE\\\\\\\\\\\\\\":2,\\\\\\\\\\\\\\"POTENTIAL_ISSUE\\\\\\\\\\\\\\":1}\\",\\n      \\"SQLReviewQueryKey\\": \\"6e9a4bc6867a4174a96b23c8b48b****\\",\\n      \\"SQLName\\": \\"getByPk\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListSQLReviewOriginSQLResponse>\\n    <RequestId>0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>true</Success>\\n    <TotalCount>10</TotalCount>\\n    <OriginSQLList>\\n        <SQLId>1111</SQLId>\\n        <FileId>123321</FileId>\\n        <FileName>test.sql</FileName>\\n        <SQLContent>select id from table_name</SQLContent>\\n        <CheckStatus>check_pass</CheckStatus>\\n        <StatusDesc>检测通过</StatusDesc>\\n        <CheckedTime>2021-06-09 21:07:00</CheckedTime>\\n        <SqlHash>95adb6e77a0884d9e50232cb8c5c969d</SqlHash>\\n        <ReviewSummary>{\\"POTENTIAL_ISSUE\\":1,\\"SUGGEST_IMPROVE\\":1}</ReviewSummary>\\n        <SQLReviewQueryKey>a57e54ec5433475ea3082d882fdb89c5</SQLReviewQueryKey>\\n        <SQLName>getByPk</SQLName>\\n    </OriginSQLList>\\n</ListSQLReviewOriginSQLResponse>","errorExample":""}]',
      'title' => '获取SQL审核工单的SQL详情',
      'description' => 'SQL审核功能的更多信息，请参见[SQL审核](~~60374~~)。',
    ),
    'GetSQLReviewOptimizeDetail' => 
    array (
      'summary' => '获取SQL审核优化建议的详情，适用于数据变更工单和SQLReview工单。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SQLReviewQueryKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '查询SQL审核优化建议详情信息。您可以调用[ListSQLReviewOriginSQL](~~257870~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'a57e54ec5433475ea3082d882fdb****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。您可以调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'OptimizeDetail' => 
              array (
                'description' => '审核详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'QueryKey' => 
                  array (
                    'description' => 'SQL审核优化建议详情信息的查询KEY。',
                    'type' => 'string',
                    'example' => 'a57e54ec5433475ea3082d882fdb****',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '数据库所属实例ID。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '123321',
                  ),
                  'DbId' => 
                  array (
                    'description' => '数据库ID。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '111222',
                  ),
                  'SqlType' => 
                  array (
                    'description' => 'SQL类型，如DELETE、UPDATE、ALTER_TABLE等。',
                    'type' => 'string',
                    'example' => 'UPDATE',
                  ),
                  'QualityResult' => 
                  array (
                    'description' => 'SQL质量。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ErrorMessage' => 
                      array (
                        'description' => '错误信息。',
                        'type' => 'string',
                        'example' => 'syntax error',
                      ),
                      'Results' => 
                      array (
                        'description' => '规则审核结果。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '一条规则的审核详情。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'RuleName' => 
                            array (
                              'description' => '规则名。请参见[SQL审核优化建议](~~194114~~)。',
                              'type' => 'string',
                              'example' => 'SELECT_SUGGEST_ASSIGN_WHERE',
                            ),
                            'Feedback' => 
                            array (
                              'description' => 'SQL审核优化反馈结果。返回值如下：
- **MUST_IMPROVE**：必须改进。
- **POTENTIAL_ISSUE**：潜在问题。
- **SUGGEST_IMPROVE**：建议改进。
- **USEDMSTOOLKIT**：使用无锁结构变更。
- **USEDMSDML_UNLOCK**：使用无锁数据变更。
- **TABLEINDEXSUGGEST**：索引推荐。',
                              'type' => 'string',
                              'example' => 'MUST_IMPROVE',
                            ),
                            'Comments' => 
                            array (
                              'description' => '管理员进行SQL审核规则自定义配置时填写的**备注**信息。详细操作，请参见[SQL审核优化建议](~~194114~~)。',
                              'type' => 'string',
                              'example' => 'xxx业务规定：查询必须带where条件',
                            ),
                            'Messages' => 
                            array (
                              'description' => '审核信息列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '审核信息。',
                                'type' => 'string',
                                'example' => 'xxx表不存在',
                              ),
                            ),
                            'Scripts' => 
                            array (
                              'description' => '某些规则附带生成变更脚本。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '变更脚本。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'OpType' => 
                                  array (
                                    'description' => '执行脚本的目的。当前支持AddIndex（增加索引）。',
                                    'type' => 'string',
                                    'example' => 'AddIndex',
                                  ),
                                  'Content' => 
                                  array (
                                    'description' => '脚本内容。',
                                    'type' => 'string',
                                    'example' => 'alter table xxx add index idx_xx(yyy);',
                                  ),
                                  'TableName' => 
                                  array (
                                    'description' => '表名。',
                                    'type' => 'string',
                                    'example' => 'xxx',
                                  ),
                                ),
                              ),
                            ),
                            'RuleType' => 
                            array (
                              'description' => 'SQL审核规则。返回值如下：

- **REVIEW**：规范审核。
- **OPTIMIZE**：优化建议。',
                              'type' => 'string',
                              'example' => 'REVIEW',
                            ),
                          ),
                        ),
                      ),
                      'OccurError' => 
                      array (
                        'description' => '是否遇到错误。返回值如下：
- **true**：存在错误。
- **false**：不存在错误。',
                        'type' => 'boolean',
                        'example' => 'false',
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"OptimizeDetail\\": {\\n    \\"QueryKey\\": \\"a57e54ec5433475ea3082d882fdb****\\",\\n    \\"InstanceId\\": 123321,\\n    \\"DbId\\": 111222,\\n    \\"SqlType\\": \\"UPDATE\\",\\n    \\"QualityResult\\": {\\n      \\"ErrorMessage\\": \\"syntax error\\",\\n      \\"Results\\": [\\n        {\\n          \\"RuleName\\": \\"SELECT_SUGGEST_ASSIGN_WHERE\\",\\n          \\"Feedback\\": \\"MUST_IMPROVE\\",\\n          \\"Comments\\": \\"xxx业务规定：查询必须带where条件\\",\\n          \\"Messages\\": [\\n            \\"xxx表不存在\\"\\n          ],\\n          \\"Scripts\\": [\\n            {\\n              \\"OpType\\": \\"AddIndex\\",\\n              \\"Content\\": \\"alter table xxx add index idx_xx(yyy);\\",\\n              \\"TableName\\": \\"xxx\\"\\n            }\\n          ],\\n          \\"RuleType\\": \\"REVIEW\\"\\n        }\\n      ],\\n      \\"OccurError\\": false\\n    }\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetSQLReviewOptimizeDetailResponse>\\n    <RequestId>0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>true</Success>\\n    <OptimizeDetail>\\n        <QueryKey>a57e54ec5433475ea3082d882fdb****</QueryKey>\\n        <InstanceId>123321</InstanceId>\\n        <DbId>111222</DbId>\\n        <SqlType>UPDATE</SqlType>\\n        <QualityResult>\\n            <ErrorMessage>syntax error</ErrorMessage>\\n            <Results>\\n                <RuleName>SELECT_SUGGEST_ASSIGN_WHERE</RuleName>\\n                <Feedback>MUST_IMPROVE</Feedback>\\n                <Comments>xxx业务规定：查询必须带where条件</Comments>\\n                <Messages>xxx表不存在</Messages>\\n                <Scripts>\\n                    <OpType>AddIndex</OpType>\\n                    <Content>alter table xxx add index idx_xx(yyy);</Content>\\n                    <TableName>xxx</TableName>\\n                </Scripts>\\n                <RuleType>REVIEW</RuleType>\\n            </Results>\\n            <OccurError>false</OccurError>\\n        </QualityResult>\\n    </OptimizeDetail>\\n</GetSQLReviewOptimizeDetailResponse>","errorExample":""}]',
      'title' => '获取SQL审核优化建议的详情',
      'description' => 'SQL审核功能的更多信息，请参见[SQL审核](~~60374~~)。',
    ),
    'CreateDataTrackOrder' => 
    array (
      'summary' => '创建数据追踪工单。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务背景，以减少沟通成本。',
            'type' => 'string',
            'required' => true,
            'example' => '业务测试。',
          ),
        ),
        1 => 
        array (
          'name' => 'RelatedUserList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '工单相关人ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '工单相关人ID。',
              'type' => 'string',
              'required' => false,
              'example' => '123***',
            ),
            'required' => false,
          ),
        ),
        2 => 
        array (
          'name' => 'Param',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '工单参数。',
            'type' => 'object',
            'properties' => 
            array (
              'DbId' => 
              array (
                'description' => '数据库ID，可调用[SearchDatabases](~~141876~~)接口获取。
> 当前仅支持物理库，暂不支持逻辑库。',
                'type' => 'string',
                'required' => true,
                'example' => '123***',
              ),
              'JobStartTime' => 
              array (
                'description' => '数据追踪范围的起始时间，格式为yyyy-MM-dd HH:mm:ss。',
                'type' => 'string',
                'required' => true,
                'example' => '2023-04-23 00:00:00',
              ),
              'JobEndTime' => 
              array (
                'description' => '数据追踪范围的终止时间，格式为yyyy-MM-dd HH:mm:ss。',
                'type' => 'string',
                'required' => true,
                'example' => '2023-04-23 10:00:00',
              ),
              'TableNames' => 
              array (
                'description' => '追踪的表名列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '追踪的表名。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'table2',
                ),
                'required' => true,
              ),
              'TrackTypes' => 
              array (
                'description' => '追踪类型列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '追踪类型。取值如下：
- **INSERT**：插入。
- **UPDATE**：更新。
- **DELETE**：删除。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'INSERT',
                ),
                'required' => true,
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '283C461F-11D8-48AA-B695-DF092DA32AF3',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'CreateOrderResult' => 
              array (
                'description' => '数据追踪工单ID。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据追踪工单ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'example' => '12***',
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"283C461F-11D8-48AA-B695-DF092DA32AF3\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"CreateOrderResult\\": [\\n    0\\n  ]\\n}","type":"json"}]',
      'title' => '创建数据追踪工单',
      'description' => '目前仅支持安全协同模式的实例通过此API创建数据追踪工单。',
    ),
    'GetDataTrackJobDegree' => 
    array (
      'summary' => '获取数据追踪任务进度。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '321****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。可通过调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C51420E3-144A-4A94-B473-8662FCF4AD10',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'JobDegree' => 
              array (
                'description' => '任务进度详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'ListCompletionDegree' => 
                  array (
                    'description' => '获取日志处理进展。进度范围从0到1，1表示日志已处理完成。',
                    'type' => 'number',
                    'format' => 'double',
                    'example' => '1',
                  ),
                  'DownloadCompletionDegree' => 
                  array (
                    'description' => '下载日志文件进度。进度范围从0到1，1表示已完成下载日志文件。',
                    'type' => 'number',
                    'format' => 'double',
                    'example' => '1',
                  ),
                  'FilterCompletionDegree' => 
                  array (
                    'description' => '解析日志文件进度。进度范围从0到1，1表示已完成解析日志文件。',
                    'type' => 'number',
                    'format' => 'double',
                    'example' => '1',
                  ),
                  'JobStatus' => 
                  array (
                    'description' => '数据追踪任务状态，取值和说明如下：
- **INIT**：任务初始化。
- **LISTING**：正在获取Binlog列表。
- **LIST_SUCCESS**：获取Binlog列表完成。
- **DOWNLOADING**：正在下载Binlog。
- **DOWNLOAD_FAIL**：下载Binlog失败。
- **DOWNLOAD_SUCCESS**：下载Binlog完成。
- **FILTERING**：正在解析Binlog。
- **FILTER_FAIL**：解析Binlog失败。
- **FILTER_SUCCESS**：解析Binlog完成。',
                    'type' => 'string',
                    'example' => 'FILTER_SUCCESS',
                  ),
                  'StatusDesc' => 
                  array (
                    'description' => '状态描述信息。',
                    'type' => 'string',
                    'example' => 'searching success',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C51420E3-144A-4A94-B473-8662FCF4AD10\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"JobDegree\\": {\\n    \\"ListCompletionDegree\\": 1,\\n    \\"DownloadCompletionDegree\\": 1,\\n    \\"FilterCompletionDegree\\": 1,\\n    \\"JobStatus\\": \\"FILTER_SUCCESS\\",\\n    \\"StatusDesc\\": \\"searching success\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取数据追踪任务进度',
    ),
    'GetDataTrackJobTableMeta' => 
    array (
      'summary' => '获取数据追踪表元数据信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '12345',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'TableMetaList' => 
              array (
                'description' => '表元数据信息列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '表元数据信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'SchemaName' => 
                    array (
                      'description' => '数据库名称。',
                      'type' => 'string',
                      'example' => 'DB165',
                    ),
                    'TableName' => 
                    array (
                      'description' => '表名。',
                      'type' => 'string',
                      'example' => 'live_stat',
                    ),
                    'Columns' => 
                    array (
                      'description' => '字段信息列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '字段信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'ColumnName' => 
                          array (
                            'description' => '字段名。',
                            'type' => 'string',
                            'example' => 'claimantno',
                          ),
                          'ColumnPosition' => 
                          array (
                            'description' => '字段的位置。',
                            'type' => 'integer',
                            'format' => 'int32',
                            'example' => '1',
                          ),
                          'ColumnType' => 
                          array (
                            'description' => '字段的数据类型。例如：BIGINT 、INT、VARCHAR。',
                            'type' => 'string',
                            'example' => 'BIGINT',
                          ),
                          'Fictive' => 
                          array (
                            'description' => '字段是否是虚拟列。取值：

- **true**
- **false**',
                            'type' => 'boolean',
                            'example' => 'false',
                          ),
                          'Charset' => 
                          array (
                            'description' => '字符集名称。',
                            'type' => 'string',
                            'example' => 'utf8mb4',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"TableMetaList\\": [\\n    {\\n      \\"SchemaName\\": \\"DB165\\",\\n      \\"TableName\\": \\"live_stat\\",\\n      \\"Columns\\": [\\n        {\\n          \\"ColumnName\\": \\"claimantno\\",\\n          \\"ColumnPosition\\": 1,\\n          \\"ColumnType\\": \\"BIGINT\\",\\n          \\"Fictive\\": false,\\n          \\"Charset\\": \\"utf8mb4\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取数据追踪表元数据信息',
    ),
    'GetDataTrackOrderDetail' => 
    array (
      'summary' => '获取数据追踪工单详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '4328****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '283C461F-11D8-48AA-B695-DF092DA32AF3',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'DataTrackOrderDetail' => 
              array (
                'description' => '工单详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'DbId' => 
                  array (
                    'description' => '数据库ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '3431****',
                  ),
                  'Logic' => 
                  array (
                    'description' => '是否为逻辑库，取值：
- **true**：是
- **false**：否',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                  'DatabaseSearchName' => 
                  array (
                    'description' => '数据库搜索名。',
                    'type' => 'string',
                    'example' => 'xxx@yyy:3306',
                  ),
                  'TableNames' => 
                  array (
                    'description' => '追踪的表名列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '追踪的表名。',
                      'type' => 'string',
                      'example' => 'table2',
                    ),
                  ),
                  'TrackTypes' => 
                  array (
                    'description' => '追踪类型列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '追踪类型。',
                      'type' => 'string',
                      'example' => 'UPDATE',
                    ),
                  ),
                  'JobStartTime' => 
                  array (
                    'description' => '数据追踪范围的起始时间，格式为yyyy-MM-dd HH:mm:ss。',
                    'type' => 'string',
                    'example' => '2023-04-23 00:00:00',
                  ),
                  'JobEndTime' => 
                  array (
                    'description' => '数据追踪范围的结束时间，格式为yyyy-MM-dd HH:mm:ss。',
                    'type' => 'string',
                    'example' => '2023-04-23 10:00:00',
                  ),
                  'SchemaName' => 
                  array (
                    'description' => '数据库名。',
                    'type' => 'string',
                    'example' => 'as_task',
                  ),
                  'JobStatus' => 
                  array (
                    'description' => '数据追踪任务状态，取值和说明如下：
- **INIT**：任务初始化。
- **LISTING**：正在获取Binlog列表。
- **LIST_SUCCESS**：获取Binlog列表完成。
- **DOWNLOADING**：正在下载Binlog。
- **DOWNLOAD_FAIL**：下载Binlog失败。
- **DOWNLOAD_SUCCESS**：下载Binlog完成。
- **FILTERING**：正在解析Binlog。
- **FILTER_FAIL**：解析Binlog失败。
- **FILTER_SUCCESS**：解析Binlog完成。',
                    'type' => 'string',
                    'example' => 'FILTER_SUCCESS',
                  ),
                  'StatusDesc' => 
                  array (
                    'description' => '任务状态的描述信息。',
                    'type' => 'string',
                    'example' => 'searching success',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"283C461F-11D8-48AA-B695-DF092DA32AF3\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"DataTrackOrderDetail\\": {\\n    \\"DbId\\": 0,\\n    \\"Logic\\": false,\\n    \\"DatabaseSearchName\\": \\"xxx@yyy:3306\\",\\n    \\"TableNames\\": [\\n      \\"table2\\"\\n    ],\\n    \\"TrackTypes\\": [\\n      \\"UPDATE\\"\\n    ],\\n    \\"JobStartTime\\": \\"2023-04-23 00:00:00\\",\\n    \\"JobEndTime\\": \\"2023-04-23 10:00:00\\",\\n    \\"SchemaName\\": \\"as_task\\",\\n    \\"JobStatus\\": \\"FILTER_SUCCESS\\",\\n    \\"StatusDesc\\": \\"searching success\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取数据追踪工单详情',
    ),
    'SearchDataTrackResult' => 
    array (
      'summary' => '搜索数据追踪日志解析结果。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '420****',
          ),
        ),
        1 => 
        array (
          'name' => 'FilterStartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据追踪范围的起始时间，格式为yyyy-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => false,
            'example' => '2023-04-23 00:00:00',
          ),
        ),
        2 => 
        array (
          'name' => 'FilterEndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据追踪范围的结束时间，格式为yyyy-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => false,
            'example' => '2023-04-23 10:00:00',
          ),
        ),
        3 => 
        array (
          'name' => 'FilterTableList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '追踪的表名列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '追踪的表名。',
              'type' => 'string',
              'required' => false,
              'example' => 'table2',
            ),
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'FilterTypeList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '追踪类型列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '追踪类型。',
              'type' => 'string',
              'required' => false,
              'example' => 'UPDATE',
            ),
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'ColumnFilter',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '字段筛选条件。',
            'type' => 'object',
            'properties' => 
            array (
              'ColumnName' => 
              array (
                'description' => '字段名。',
                'type' => 'string',
                'required' => false,
                'example' => 'c_payer_name',
              ),
              'Operator' => 
              array (
                'description' => '操作类型，取值和说明如下：
- **EQUAL**：等于。
- **NOT_EQUAL**：不等于。
- **IN**：存在于IN列表中。
- **BETWEEN**：范围。
- **LESS**：小于。
- **MORE**：大于。
- **NOT_IN**：不存在于IN列表中。',
                'type' => 'string',
                'required' => false,
                'example' => 'EQUAL',
                'enum' => 
                array (
                  0 => 'EQUAL',
                  1 => 'NOT_EQUAL',
                  2 => 'IN',
                  3 => 'BETWEEN',
                  4 => 'LESS',
                  5 => 'MORE',
                  6 => 'NOT_IN',
                ),
              ),
              'Value' => 
              array (
                'description' => '匹配条件Value。',
                'type' => 'string',
                'required' => false,
                'example' => '1',
              ),
              'BetweenStart' => 
              array (
                'description' => '操作类型为BETWEEN，需要指定追踪范围的起始值。',
                'type' => 'string',
                'required' => false,
                'example' => '1',
              ),
              'BetweenEnd' => 
              array (
                'description' => '操作类型为BETWEEN，需要指定追踪范围的终止值。',
                'type' => 'string',
                'required' => false,
                'example' => '10',
              ),
              'InList' => 
              array (
                'description' => '操作类型为IN或NOT_INT，需要指定追踪的范围列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '操作类型为IN或NOT_INT，需要指定追踪范围值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '1',
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
        6 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '62***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'TrackResult' => 
              array (
                'description' => '追踪日志解析结果。',
                'type' => 'object',
                'properties' => 
                array (
                  'TotalCount' => 
                  array (
                    'description' => '追踪总数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '109',
                  ),
                  'EventList' => 
                  array (
                    'description' => '追踪日志事件详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '追踪日志事件详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DataAfter' => 
                        array (
                          'description' => '变更后的数据列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '变更后的数据。',
                            'type' => 'string',
                            'example' => '1',
                          ),
                        ),
                        'DataBefore' => 
                        array (
                          'description' => '变更前的数据列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '变更前的数据。',
                            'type' => 'string',
                            'example' => '2',
                          ),
                        ),
                        'EventLength' => 
                        array (
                          'description' => '日志文件事件Byte字节长度。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '4324',
                        ),
                        'EventTimestamp' => 
                        array (
                          'description' => '日志文件事件时间。',
                          'type' => 'string',
                          'example' => '2023-04-23 10:25:47',
                        ),
                        'EventType' => 
                        array (
                          'description' => '事件类型。取值如下：
- **WRITE_ROWS**：代表INSERT操作。
- **UPDATE_ROWS**：代表UPDATE操作。
- **DELETE_ROWS**：代表DELETE操作。
- **EXT_WRITE_ROWS**：同WRITE_ROWS，代表INSERT操作。
- **EXT_UPDATE_ROWS**：同UPDATE_ROWS，代表UPDATE操作。
- **EXT_DELETE_ROWS**：同DELETE_ROWS，代表DELETE操作。',
                          'type' => 'string',
                          'example' => 'UPDATE_ROWS',
                        ),
                        'EventId' => 
                        array (
                          'description' => '事件ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'RollSQL' => 
                        array (
                          'description' => '回滚SQL。',
                          'type' => 'string',
                          'example' => '-- Timestamp:2023-04-23 10:25:47 #1\\r\\nUPDATE `dc_test`.`tb_chunk_dml` SET `id`=1 , `gmt_create`=\'2021-09-30T00:00:00\' , `content`=\'2023-03-30 14:51:50\' , `c1`=\'2023-04-17 13:42:03\' , `c_id`=1 , `c13425`=\'b\\\\\'\' , `c432532535`= null , `c1432`= null , `c143243253`= null , `c1432535`= null , `c43125325`= null , `c3425325`= null WHERE  (`id`=1)"',
                        ),
                      ),
                    ),
                  ),
                  'TableInfoList' => 
                  array (
                    'description' => '追踪的表元数据信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '追踪的表元数据信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'SchemaName' => 
                        array (
                          'description' => '数据库名。',
                          'type' => 'string',
                          'example' => 'prod_eb_vas',
                        ),
                        'TableName' => 
                        array (
                          'description' => '表名。',
                          'type' => 'string',
                          'example' => 'import_table_test1',
                        ),
                        'Columns' => 
                        array (
                          'description' => '字段信息列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '字段信息。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'ColumnName' => 
                              array (
                                'description' => '字段名。',
                                'type' => 'string',
                                'example' => 'basic_platform',
                              ),
                              'ColumnPosition' => 
                              array (
                                'description' => '字段的位置。',
                                'type' => 'integer',
                                'format' => 'int32',
                                'example' => '1',
                              ),
                              'ColumnType' => 
                              array (
                                'description' => '字段的数据类型。例如：BIGINT、INT、VARCHAR。',
                                'type' => 'string',
                                'example' => 'BIGINT',
                              ),
                              'Fictive' => 
                              array (
                                'description' => '字段是否为虚拟列。取值为：

- **true**
- **false**',
                                'type' => 'boolean',
                                'example' => 'true',
                              ),
                            ),
                          ),
                        ),
                        'Description' => 
                        array (
                          'description' => '字段描述。',
                          'type' => 'string',
                          'example' => 'auto-description',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"TrackResult\\": {\\n    \\"TotalCount\\": 109,\\n    \\"EventList\\": [\\n      {\\n        \\"DataAfter\\": [\\n          \\"1\\"\\n        ],\\n        \\"DataBefore\\": [\\n          \\"2\\"\\n        ],\\n        \\"EventLength\\": 4324,\\n        \\"EventTimestamp\\": \\"2023-04-23 10:25:47\\",\\n        \\"EventType\\": \\"UPDATE_ROWS\\",\\n        \\"EventId\\": 1,\\n        \\"RollSQL\\": \\"-- Timestamp:2023-04-23 10:25:47 #1\\\\\\\\r\\\\\\\\nUPDATE `dc_test`.`tb_chunk_dml` SET `id`=1 , `gmt_create`=\'2021-09-30T00:00:00\' , `content`=\'2023-03-30 14:51:50\' , `c1`=\'2023-04-17 13:42:03\' , `c_id`=1 , `c13425`=\'b\\\\\\\\\\\\\\\\\'\' , `c432532535`= null , `c1432`= null , `c143243253`= null , `c1432535`= null , `c43125325`= null , `c3425325`= null WHERE  (`id`=1)\\\\\\"\\"\\n      }\\n    ],\\n    \\"TableInfoList\\": [\\n      {\\n        \\"SchemaName\\": \\"prod_eb_vas\\",\\n        \\"TableName\\": \\"import_table_test1\\",\\n        \\"Columns\\": [\\n          {\\n            \\"ColumnName\\": \\"basic_platform\\",\\n            \\"ColumnPosition\\": 1,\\n            \\"ColumnType\\": \\"BIGINT\\",\\n            \\"Fictive\\": true\\n          }\\n        ],\\n        \\"Description\\": \\"auto-description\\"\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '搜索数据追踪日志解析结果',
    ),
    'DownloadDataTrackResult' => 
    array (
      'summary' => '下载数据追踪日志解析结果。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，您可调用[ListOrders](~~144643~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '406****',
          ),
        ),
        1 => 
        array (
          'name' => 'RollbackSQLType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '生成SQL类型：
- **REVERSE**：撤销（回滚）已执行的SQL，相当于UNDO SQL。
- **FORWARD**：重新执行（重做）之前未执行成功的SQL，相当于REDO SQL。',
            'type' => 'string',
            'required' => true,
            'example' => 'REVERSE',
            'enum' => 
            array (
              0 => 'REVERSE',
              1 => 'FORWARD',
            ),
          ),
        ),
        2 => 
        array (
          'name' => 'FilterStartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据追踪的起始时间，格式为yyyy-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => false,
            'example' => '2023-04-23 00:00:00',
          ),
        ),
        3 => 
        array (
          'name' => 'FilterEndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据追踪的结束时间，格式为yyyy-MM-dd HH:mm:ss。',
            'type' => 'string',
            'required' => false,
            'example' => '2023-04-23 10:00:00',
          ),
        ),
        4 => 
        array (
          'name' => 'FilterTableList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '追踪的表列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '追踪的表。',
              'type' => 'string',
              'required' => false,
              'example' => 'table2',
            ),
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'FilterTypeList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '追踪类型列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '追踪类型。',
              'type' => 'string',
              'required' => false,
              'example' => 'UPDATE',
            ),
            'required' => false,
          ),
        ),
        6 => 
        array (
          'name' => 'ColumnFilter',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '字段筛选条件。',
            'type' => 'object',
            'properties' => 
            array (
              'ColumnName' => 
              array (
                'description' => '字段名。',
                'type' => 'string',
                'required' => false,
                'example' => 'account_name',
              ),
              'Operator' => 
              array (
                'description' => '操作类型，取值和说明如下：
- **EQUAL**：等于。
- **NOT_EQUAL**：不等于。
- **IN**：存在于IN列表中。
- **BETWEEN**：范围。
- **LESS**：小于。
- **MORE**：大于。
- **NOT_IN**：不存在于IN列表中。',
                'type' => 'string',
                'required' => false,
                'example' => 'EQUAL',
                'enum' => 
                array (
                  0 => 'EQUAL',
                  1 => 'NOT_EQUAL',
                  2 => 'IN',
                  3 => 'BETWEEN',
                  4 => 'LESS',
                  5 => 'MORE',
                  6 => 'NOT_IN',
                ),
              ),
              'Value' => 
              array (
                'description' => '常量值。',
                'type' => 'string',
                'required' => false,
                'example' => '1',
              ),
              'BetweenStart' => 
              array (
                'description' => '操作类型为BETWEEN 时，需要指定追踪范围起始值。',
                'type' => 'string',
                'required' => false,
                'example' => '1',
              ),
              'BetweenEnd' => 
              array (
                'description' => '操作类型为BETWEEN 时，需要指定追踪范围的终止值。',
                'type' => 'string',
                'required' => false,
                'example' => '10',
              ),
              'InList' => 
              array (
                'description' => '追踪范围列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '操作类型为IN或NOT_INT，需要指定追踪范围的值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => '1',
                ),
                'required' => false,
              ),
            ),
            'required' => false,
          ),
        ),
        7 => 
        array (
          'name' => 'EventIdList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '指定事件ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '事件ID。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '1',
            ),
            'required' => false,
          ),
        ),
        8 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B43AD641-49C2-5299-9E06-1B37EC1B****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'DownloadKeyId' => 
              array (
                'description' => '下载Key，用于后续下载追踪日志解析结果。',
                'type' => 'string',
                'example' => 'e23dd7ec-a19f-4a69-8eb3-8ffd26e6****',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B43AD641-49C2-5299-9E06-1B37EC1B****\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"DownloadKeyId\\": \\"e23dd7ec-a19f-4a69-8eb3-8ffd26e6****\\"\\n}","type":"json"}]',
      'title' => '下载数据追踪日志解析结果',
      'description' => '仅管控模式为安全协同的数据库实例可调用此API。',
    ),
    'QueryDataTrackResultDownloadStatus' => 
    array (
      'summary' => '查询下载数据追踪日志解析结果进度。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单ID，可通过调用接口[ListOrders](~~144643~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '11****',
          ),
        ),
        1 => 
        array (
          'name' => 'DownloadKeyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '下载key，定位数据追踪日志解析结果进度。可通过
[DownloadDataTrackResult](~~2261365~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'e23dd7ec-a19f-4a69-8eb3-8ffd26e6****',
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。可调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'StatusResult' => 
              array (
                'description' => '下载进度信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'DownloadStatus' => 
                  array (
                    'description' => '下载任务状态，取值和说明如下：
- **INIT**：任务初始化。
- **LISTING**：任务初始化中，短暂中间态。
- **DOWNLOADING**：下载中。
- **DOWNLOAD_SUCCESS**：下载成功。
- **DOWNLOAD_FAIL**：下载失败。',
                    'type' => 'string',
                    'example' => 'DOWNLOAD_SUCCESS',
                  ),
                  'DownloadUrl' => 
                  array (
                    'description' => '下载链接。仅当下载任务状态为DOWNLOAD_SUCCESS时返回。',
                    'type' => 'string',
                    'example' => 'https://idbsaasstore.oss-cn-zhangjiakou.aliyuncs.com/****_REDO_31201_207.zip?Expires=1682239593&OSSAccessKeyId=****&Signature=****
',
                  ),
                  'StatusDesc' => 
                  array (
                    'description' => '状态描述。',
                    'type' => 'string',
                    'example' => 'SUCCESS',
                  ),
                  'TotalCount' => 
                  array (
                    'description' => '记录总数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '69',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"StatusResult\\": {\\n    \\"DownloadStatus\\": \\"DOWNLOAD_SUCCESS\\",\\n    \\"DownloadUrl\\": \\"https://idbsaasstore.oss-cn-zhangjiakou.aliyuncs.com/****_REDO_31201_207.zip?Expires=1682239593&OSSAccessKeyId=****&Signature=****\\\\n\\",\\n    \\"StatusDesc\\": \\"SUCCESS\\",\\n    \\"TotalCount\\": 69\\n  }\\n}","type":"json"}]',
      'title' => '查询下载数据追踪日志解析结果进度',
    ),
    'CreateUploadFileJob' => 
    array (
      'summary' => '创建上传链接形式附件任务，获得附件任务Key。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'FileSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '上传附件的使用目的，取值说明如下：
- **datacorrect**：数据变更工单。
- **order_info_attachment**：工单附件。
- **big-file**：批量数据导入。
- **sqlreview**：SQL审核。',
            'type' => 'string',
            'required' => true,
            'example' => 'datacorrect',
            'enum' => 
            array (
              0 => 'datacorrect',
              1 => 'order_info_attachment',
              2 => 'big-file',
              3 => 'sqlreview',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'FileName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件名称。
> 文件名称需要以txt、sql结尾。例如test.txt、test.sql。',
            'type' => 'string',
            'required' => true,
            'example' => 'test.txt',
          ),
        ),
        2 => 
        array (
          'name' => 'UploadURL',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '上传附件URL链接，此处链接仅支持HTTP和HTTPS链接。
> 您可以将文件（Object）上传至存储空间（Bucket）后，获取文件的分享URL，更多信息，请参见[分享文件](~~195674~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'https://XXX.oss-cn-hangzhou.aliyuncs.com/test.txt',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 您可以通过调用[GetUserActiveTenant](~~198073~~)接口获取该参数。
',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E103C5F9-DE47-53F2-BF34-D71DF38F****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值说明如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Unsupported url scheme : null, scheme must be https or http',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'InvalidParameterValid',
              ),
              'JobKey' => 
              array (
                'description' => '上传附件任务值。
> 您可以通过调用[GetUserUploadFileJob](~~206069~~)接口查询附件上传的进展与任务详情。',
                'type' => 'string',
                'example' => '761f18031635736380812****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E103C5F9-DE47-53F2-BF34-D71DF38F****\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"Unsupported url scheme : null, scheme must be https or http\\",\\n  \\"ErrorCode\\": \\"InvalidParameterValid\\",\\n  \\"JobKey\\": \\"761f18031635736380812****\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateUploadFileJobResponse>\\n    <JobKey>761f18031635736380812****</JobKey>\\n    <RequestId>E103C5F9-DE47-53F2-BF34-D71DF38F****</RequestId>\\n    <Success>true</Success>\\n</CreateUploadFileJobResponse>","errorExample":""}]',
      'title' => '上传链接形式附件',
    ),
    'CreateUploadOSSFileJob' => 
    array (
      'summary' => '创建上传OSS附件任务，获得附件任务Key。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'FileSource',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '上传附件的使用目的，取值和说明如下：
- **datacorrect**：数据变更工单
- **order_info_attachment**：工单附件
- **big-file**：批量数据导入
- **sqlreview**：SQL审核',
            'type' => 'string',
            'required' => true,
            'example' => 'datacorrect',
            'enum' => 
            array (
              0 => 'datacorrect',
              1 => 'order_info_attachment',
              2 => 'big-file',
              3 => 'sqlreview',
            ),
          ),
        ),
        1 => 
        array (
          'name' => 'FileName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '文件名。
> 需要以txt、sql结尾，例如test.txt。',
            'type' => 'string',
            'required' => true,
            'example' => 'test.sql',
          ),
        ),
        2 => 
        array (
          'name' => 'UploadTarget',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'OSS信息。',
            'type' => 'object',
            'properties' => 
            array (
              'Endpoint' => 
              array (
                'description' => 'OSS的连接地址。',
                'type' => 'string',
                'required' => true,
                'example' => 'http://oss-cn-hangzhou.aliyuncs.com',
              ),
              'BucketName' => 
              array (
                'description' => 'OSS Bucket唯一标识。',
                'type' => 'string',
                'required' => true,
                'example' => 'test_bucket',
              ),
              'ObjectName' => 
              array (
                'description' => 'OSS对象名称。',
                'type' => 'string',
                'required' => true,
                'example' => 'test.sql',
              ),
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E1D2B4D-3E53-4ABC-999D-1D2520B3471A',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'JobKey' => 
              array (
                'description' => '上传附件任务Key，可查询附件上传进展与任务详情，详情请参见[GetUserUploadFileJob](~~206069~~)。',
                'type' => 'string',
                'example' => '65254a4c1614235217749100e',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4E1D2B4D-3E53-4ABC-999D-1D2520B3471A\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"JobKey\\": \\"65254a4c1614235217749100e\\"\\n}","errorExample":""},{"type":"xml","example":"<CreateUploadOSSFileJobResponse>\\n    <JobKey>7000005000007000009000000</JobKey>\\n    <RequestId>44355324-9534-4AF4-B7AA-8EDE3C767889</RequestId>\\n    <Success>true</Success>\\n</CreateUploadOSSFileJobResponse>","errorExample":""}]',
      'title' => '上传OSS附件',
    ),
    'GetUserUploadFileJob' => 
    array (
      'summary' => '获取上传附件的任务信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '上传附件任务JobKey，您可以通过调用[CreateUploadFileJob](~~206059~~)、[CreateUploadOSSFileJob](~~206060~~)接口获取该参数。',
            'type' => 'string',
            'required' => true,
            'example' => '65254a49100e',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '-1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'BDEFE9F2-B3B4-42D0-83AE-ECF9FC067DCD',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'UploadFileJobDetail' => 
              array (
                'description' => '上传附件任务详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'JobKey' => 
                  array (
                    'description' => '上传附件任务JobKey。',
                    'type' => 'string',
                    'example' => '65254a4c1614235217749100e',
                  ),
                  'FileName' => 
                  array (
                    'description' => '文件名。',
                    'type' => 'string',
                    'example' => 'test.sql',
                  ),
                  'FileSize' => 
                  array (
                    'description' => '文件大小，单位为字节。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2968269',
                  ),
                  'FileSource' => 
                  array (
                    'description' => '文件上传的使用目的，取值与说明如下：
- **datacorrect**：数据变更工单
- **order_info_attachment**：工单附件
- **big-file**：批量数据导入
- **sqlreview**：SQL审核',
                    'type' => 'string',
                    'example' => 'datacorrect',
                  ),
                  'UploadType' => 
                  array (
                    'description' => '上传附件任务类型，取值：
- **URL**
- **OSS**',
                    'type' => 'string',
                    'example' => 'URL',
                  ),
                  'UploadURL' => 
                  array (
                    'description' => '上传附件URL链接。
> 当**UploadType**参数为**URL**时显示。',
                    'type' => 'string',
                    'example' => 'http://xxxx/test.sql',
                  ),
                  'UploadOSSParam' => 
                  array (
                    'description' => '上传附件OSS信息。
> 当**UploadType**参数为**OSS**时显示。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Endpoint' => 
                      array (
                        'description' => 'OSS的连接地址。',
                        'type' => 'string',
                        'example' => 'http://oss-cn-hangzhou.aliyuncs.com',
                      ),
                      'BucketName' => 
                      array (
                        'description' => 'OSS Bucket唯一标识。',
                        'type' => 'string',
                        'example' => 'test_bucket',
                      ),
                      'ObjectName' => 
                      array (
                        'description' => 'OSS对象名称。',
                        'type' => 'string',
                        'example' => 'test.sql',
                      ),
                    ),
                  ),
                  'UploadedSize' => 
                  array (
                    'description' => '已上传的大小，单位为字节。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2968269',
                  ),
                  'JobStatus' => 
                  array (
                    'description' => '上传附件任务状态，取值和说明如下：
- **INIT**：初始化状态
- **PENDING**：等待任务抓取
- **BE_SCHEDULED**：待调度
- **FAIL**：执行失败
- **SUCCESS**：执行成功
- **RUNNING**：正在执行',
                    'type' => 'string',
                    'example' => 'SUCCESS',
                  ),
                  'JobStatusDesc' => 
                  array (
                    'description' => '任务状态描述。',
                    'type' => 'string',
                    'example' => 'success',
                  ),
                  'AttachmentKey' => 
                  array (
                    'description' => '上传附件成功后返回的附件Key，可在创建工单时使用。',
                    'type' => 'string',
                    'example' => 'upload_3c7edea3-e4c3-4403-857d-737043036f69_test.sql',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"BDEFE9F2-B3B4-42D0-83AE-ECF9FC067DCD\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"UploadFileJobDetail\\": {\\n    \\"JobKey\\": \\"65254a4c1614235217749100e\\",\\n    \\"FileName\\": \\"test.sql\\",\\n    \\"FileSize\\": 2968269,\\n    \\"FileSource\\": \\"datacorrect\\",\\n    \\"UploadType\\": \\"URL\\",\\n    \\"UploadURL\\": \\"http://xxxx/test.sql\\",\\n    \\"UploadOSSParam\\": {\\n      \\"Endpoint\\": \\"http://oss-cn-hangzhou.aliyuncs.com\\",\\n      \\"BucketName\\": \\"test_bucket\\",\\n      \\"ObjectName\\": \\"test.sql\\"\\n    },\\n    \\"UploadedSize\\": 2968269,\\n    \\"JobStatus\\": \\"SUCCESS\\",\\n    \\"JobStatusDesc\\": \\"success\\",\\n    \\"AttachmentKey\\": \\"upload_3c7edea3-e4c3-4403-857d-737043036f69_test.sql\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetUserUploadFileJobResponse>\\n    <RequestId>22FFF57C-6E85-4C3D-90AF-C1BFE79E1FAF</RequestId>\\n    <UploadFileJobDetail>\\n        <JobStatus>INIT</JobStatus>\\n        <JobKey>7000005000007000009000000</JobKey>\\n        <UploadURL>https://dbxxx.oss-cn-hangzhou.aliyuncs.com/dm/1.txt</UploadURL>\\n        <UploadedSize>0</UploadedSize>\\n        <JobStatusDesc/>\\n        <FileSource>datacorrect</FileSource>\\n        <FileName>1.txt</FileName>\\n        <UploadType>URL</UploadType>\\n        <FileSize>-1</FileSize>\\n    </UploadFileJobDetail>\\n    <Success>true</Success>\\n</GetUserUploadFileJobResponse>","errorExample":""}]',
      'title' => '获取上传附件的任务信息',
    ),
    'CreateDataArchiveOrder' => 
    array (
      'summary' => '使用此API可以创建数据归档工单，将数据归档至专属存储、RDS MySQL等目标中。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'riskType' => 'none',
        'chargeType' => 'free',
        'abilityTreeCode' => '185526',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsPWN318',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '任务描述信息',
            'description' => '任务描述信息。',
            'type' => 'string',
            'required' => true,
            'example' => '业务测试',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        2 => 
        array (
          'name' => 'PluginType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '插件类型信息，默认为DATA_ARCHIVE，非必填',
            'description' => '插件类型信息，默认为DATA_ARCHIVE。',
            'type' => 'string',
            'required' => false,
            'example' => 'DATA_ARCHIVE',
            'default' => 'DATA_ARCHIVE',
          ),
        ),
        3 => 
        array (
          'name' => 'RelatedUserList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '相关用户列表，非必填',
            'description' => '相关用户列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '工单相关人ID。',
              'type' => 'string',
              'required' => false,
              'example' => '123***',
            ),
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'ParentId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '父工单ID，非必填，由父工单创建子工单时才需填写',
            'description' => '父工单ID。创建子工单时才会有父工单。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '896****',
          ),
        ),
        5 => 
        array (
          'name' => 'Param',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'title' => '归档参数',
            'description' => '归档参数。',
            'type' => 'object',
            'properties' => 
            array (
              'ArchiveMethod' => 
              array (
                'title' => '目标端（除了内置存储方式，其他均需先在DMS控制台为已登录状态）
inner_oss：专属存储
oss_userself：用户OSS 
mysql：RDS MySQL
polardb：polardb mysql
adb_mysql：adb MySQL
lindorm：lindorm',
                'description' => '归档目标数据库。

> 除归档目标为内置存储，其他归档目标涉及的数据库需要先录入至DMS中，且实例在控制台显示已登录。

- **inner_oss**：专属存储（内置存储）。
- **oss_userself**：用户OSS 。
- **mysql**：RDS MySQL。
- **polardb**：PolarDB MySQL。
- **adb_mysql**：AnalyticDB MySQL 3.0。
- **lindorm**：lindorm。',
                'type' => 'string',
                'required' => true,
                'example' => 'adb_mysql',
              ),
              'RunMethod' => 
              array (
                'title' => '归档方式：
周期调度 “schedule”
立即执行 “now”',
                'description' => '归档任务的运行方式。

- **schedule**：周期调度。
- **now**：立即执行。',
                'type' => 'string',
                'required' => true,
                'example' => 'now',
              ),
              'Variables' => 
              array (
                'title' => '变量：对应归档变量配置，用于用户使用自定义时间变量来作为归档过滤条件。每一个有两个属性：1. name 2. pattern',
                'description' => '归档变量配置。用户可定义时间变量作为归档的过滤条件。每一个变量有两个属性：name和pattern。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '归档变量配置。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'title' => '时间变量名，若用于归档过滤条件，需与“过滤条件”中的变量名称一致。',
                      'description' => '时间变量名。
若用于归档过滤条件，需与**过滤条件**中的变量名称一致。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 't',
                    ),
                    'Pattern' => 
                    array (
                      'title' => '变量模式：用于定义时间变量的值。
形式及含义如下（可详见说明文档https://help.aliyun.com/document_detail/209323.html?spm=a2ccf.orders.0.0.369b250eb7TCic）：
yyyy-MM-dd|-3d：业务运行时间的前3天
yyyy-MM-dd|-1w：业务运行时间的前1周
yyyy-MM-dd|-4M：业务运行时间的前4个月
yyyy-MM-dd|-2y：业务运行时间的前2年
yyyy-MM-dd|-3h：业务运行时间的前3小时
yyyy-MM-dd|+5m：业务运行时间后5分钟
其中前半部分”yyyy-MM-dd|“为固定值，后半部分中-表示业务时间前，+表示业务时间后
',
                      'description' => '时间变量格式。用于定义时间变量的值。更多时间变量格式信息，请参见[配置变量](~~209323~~)。
时间变量格式示例如下：
- **yyyy-MM-dd|-3d**：业务运行时间的前3天。
- **yyyy-MM-dd|-1w**：业务运行时间的前1周。
- **yyyy-MM-dd|-4M**：业务运行时间的前4个月。
- **yyyy-MM-dd|-2y**：业务运行时间的前2年。
- **yyyy-MM-dd|-3h**：业务运行时间的前3小时。
- **yyyy-MM-dd|+5m**：业务运行时间的后5分钟。

> 其中前半部分yyyy-MM-dd|为固定值，后半部分中-表示业务时间前，+表示业务时间后。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'yyyy-MM-dd|-3d',
                    ),
                  ),
                  'required' => false,
                  'example' => '{name: "time", pattern: "yyyy-MM-dd|+2d"}',
                ),
                'required' => false,
              ),
              'Logic' => 
              array (
                'title' => '是否为逻辑库，默认为false。',
                'description' => '是否为逻辑库。',
                'type' => 'boolean',
                'required' => false,
                'example' => 'false',
                'default' => 'false',
              ),
              'TableIncludes' => 
              array (
                'title' => '需要归档的表的集合',
                'description' => '待归档的表的集合。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '归档表信息。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TableName' => 
                    array (
                      'title' => '表名',
                      'description' => '表名。',
                      'type' => 'string',
                      'required' => true,
                      'example' => 'table1',
                    ),
                    'TableWhere' => 
                    array (
                      'title' => '归档的where筛选条件，如：
id<10；
若使用时间变量过滤，写法如：字段名<=\'${变量名}\'，变量名与API variables中对应的name一致。',
                      'description' => '归档配置的WHERE过滤条件。
若过滤条件中使用时间变量，则过滤条件格式为：字段名<=\'${变量名}\'。其中变量名与Variables参数中对应的name保持一致。',
                      'type' => 'string',
                      'required' => false,
                      'example' => 'gmt_modified<\'${t}\'',
                    ),
                  ),
                  'required' => true,
                ),
                'required' => true,
              ),
              'TableMapping' => 
              array (
                'title' => '归档目标端的表名，api调用无需填写，采用默认值',
                'description' => '归档目标端的表名。使用API调用时，无需填写该参数，系统将使用默认值。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '归档表映射。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'table1',
                ),
                'required' => false,
              ),
              'OrderAfter' => 
              array (
                'title' => '后置行为：
清理源库：“delete”
数据校验：“check”',
                'description' => '后置行为。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '后置行为参数。取值及说明：

- **delete**：清理原表已归档数据。

- **check**：校验归档数据（此操作会存在耗时）。

- **clear**：删除临时表（该参数在同时配置以上两项参数时才生效）。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'delete',
                ),
                'required' => false,
              ),
              'SourceCatalogName' => 
              array (
                'title' => '源库catalog，
对于两层逻辑结构的数据库，如MySQL，polardb mysql，adb mysql，可不填，
对于lindorm与mongo，填入空字符串，
对于三层逻辑结构的数据库，如postgresql，填入catalog名',
                'description' => '源库目录（catalog）。
- **def**：对于两层逻辑结构的数据库，如MySQL，PolarDB MySQL，AnalyticDB MySQL，固定为def。
- **空字符串**： 对于lindorm与MongoDB，填入空字符串。
- **catalog名**：对于三层逻辑结构的数据库，如PostgreSQL，填入catalog名。',
                'type' => 'string',
                'required' => true,
                'example' => 'def',
                'default' => 'def',
              ),
              'SourceSchemaName' => 
              array (
                'title' => '源库schema，源库与目标库同名。
如MySQL为库名，postgresql为schema名。',
                'description' => '源库Schema，源库与目标库同名。
如MySQL为库名，PostgreSQL为Schema名。',
                'type' => 'string',
                'required' => true,
                'example' => 'schema_test',
              ),
              'SourceInstanceName' => 
              array (
                'title' => '源库实例名，可在控制台查看。',
                'description' => '源实例名称。
如果为自建/他云数据库，您可调用[GetInstance](~~465826~~)接口获取InstanceId参数值。',
                'type' => 'string',
                'required' => true,
                'example' => 'rm-bp187l****380w',
              ),
              'TargetInstanceHost' => 
              array (
                'title' => '目标库host，若目标实例同时开放了内网与公网，优先写入内网host。',
                'description' => '目标库Host，若目标实例同时开放了内网与公网，优先写入内网Host。

- 若归档目标为OSS，则为Bucket名。
- 若归档目标为专属存储，则为inner_oss。',
                'type' => 'string',
                'required' => true,
                'example' => 'amv-bp1****00444.ads.aliyuncs.com',
              ),
              'CronStr' => 
              array (
                'title' => '当归档类型为周期归档时必填。填写Crontab表达式，以便定期执行任务，更多信息，请参见https://help.aliyun.com/zh/dms/create-shadow-tables-for-synchronization',
                'description' => '填写Crontab表达式，以便定期执行任务，更多信息，请参见[Crontab表达式](~~206581~~)。
当运行方式为周期归档时需要填写该参数。',
                'type' => 'string',
                'required' => false,
                'example' => '00 05 11 * * ?',
              ),
              'DatabaseId' => 
              array (
                'description' => '数据库ID。
如果是自建/他云数据库，可调用[GetDatabase](~~465856~~)接口获取。
如果是阿里云实例，可忽略此参数。',
                'type' => 'string',
                'required' => false,
                'example' => '1***',
              ),
            ),
            'required' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '283C461F-11D8-48AA-B695-DF092DA32AF3',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '调用失败时，返回的错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'CreateOrderResult' => 
              array (
                'description' => '创建的数据归档工单ID。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '数据归档工单ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'example' => '12*****',
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"283C461F-11D8-48AA-B695-DF092DA32AF3\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"CreateOrderResult\\": [\\n    0\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<CreateDataArchiveOrderResponse>\\n    <RequestId>283C461F-11D8-48AA-B695-DF092DA32AF3</RequestId>\\n    <Success>true</Success>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <ErrorCode>UnknownError</ErrorCode>\\n</CreateDataArchiveOrderResponse>","errorExample":""}]',
      'title' => '创建数据归档工单',
      'description' => '仅安全协同的数据库实例可调用此API。',
    ),
    'GetDataArchiveOrderDetail' => 
    array (
      'summary' => '调用此API获取数据归档工单详情，包含工单的创建时间、任务调度信息、归档任务日志和归档数据库的信息等。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据归档工单号。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '868****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '5***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TraceId' => 
              array (
                'title' => 'Id of the request',
                'description' => '用于跟踪服务请求。',
                'type' => 'string',
                'example' => '0a06e1e316757357507896067d3780',
              ),
              'Success' => 
              array (
                'description' => '查询是否成功：

- **true**：成功。
- **false**：失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'User [199295823****] not exist',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'NoPermission',
              ),
              'RequestId' => 
              array (
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '4161CE36-28DF-5191-8A6F-A17076A0B124',
              ),
              'DataArchiveOrderDetail' => 
              array (
                'description' => '数据归档工单详情。',
                'type' => 'object',
                'properties' => 
                array (
                  'Comment' => 
                  array (
                    'description' => '数据归档工单的备注信息。',
                    'type' => 'string',
                    'example' => 'Archiving of test results',
                  ),
                  'Committer' => 
                  array (
                    'description' => '工单提交者。',
                    'type' => 'string',
                    'example' => 'dmstest',
                  ),
                  'CommitterId' => 
                  array (
                    'description' => '工单提交者的用户ID，非阿里云UID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '26***',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '工单的创建时间。',
                    'type' => 'string',
                    'example' => '2023-05-15 16:00:48',
                  ),
                  'GmtModified' => 
                  array (
                    'description' => '最后一次修改工单的时间。',
                    'type' => 'string',
                    'example' => '2023-05-23 16:00:48',
                  ),
                  'Id' => 
                  array (
                    'description' => '数据归档工单ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '868****',
                  ),
                  'PluginExtraData' => 
                  array (
                    'description' => '工单的额外信息。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'DagInfo' => 
                      array (
                        'description' => '工作流信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'CreatorId' => 
                          array (
                            'description' => '创建人的用户ID。',
                            'type' => 'string',
                            'example' => '59****',
                          ),
                          'CronBeginDate' => 
                          array (
                            'description' => '定时任务开始调度的时间。此时间点之前任务流不进行调度。',
                            'type' => 'string',
                            'example' => '1970-01-01',
                          ),
                          'CronEndDate' => 
                          array (
                            'description' => '定时任务结束调度的时间。此时间点之后任务流不再进行调度。',
                            'type' => 'string',
                            'example' => '9999-01-01',
                          ),
                          'CronTrigger' => 
                          array (
                            'description' => '归档任务是否是周期任务。返回值：

- **true**
- **false**',
                            'type' => 'boolean',
                            'example' => 'false',
                          ),
                          'DWDevelop' => 
                          array (
                            'description' => '是否用于数仓开发。

> 该字段为暂不使用的保留字段。',
                            'type' => 'boolean',
                            'example' => 'false',
                          ),
                          'DagName' => 
                          array (
                            'description' => '工作流名称。',
                            'type' => 'string',
                            'example' => 'data-archive-9099197',
                          ),
                          'DagOwnerId' => 
                          array (
                            'description' => '工作流Owner的用户ID。',
                            'type' => 'string',
                            'example' => '13****',
                          ),
                          'DeployId' => 
                          array (
                            'description' => '部署记录ID。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '93***',
                          ),
                          'Description' => 
                          array (
                            'description' => '工作流的描述信息。',
                            'type' => 'string',
                            'example' => 'order id:9099197',
                          ),
                          'EditDagId' => 
                          array (
                            'description' => '可编辑工作流版本的ID。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '24***',
                          ),
                          'GmtCreate' => 
                          array (
                            'description' => '创建工作流的时间。',
                            'type' => 'string',
                            'example' => '2023-05-15 16:00:48',
                          ),
                          'GmtModified' => 
                          array (
                            'description' => '最后修改工作流的时间。',
                            'type' => 'string',
                            'example' => '2023-06-15 16:00:48',
                          ),
                          'Id' => 
                          array (
                            'description' => '任务流ID。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '24***',
                          ),
                          'IsPublic' => 
                          array (
                            'description' => '是否公开该工作流。返回值：

- **0**：不公开。
- **1**：公开。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '0',
                          ),
                          'Legacy' => 
                          array (
                            'description' => '是否为历史任务。返回值：

- **true**
- **false**',
                            'type' => 'boolean',
                            'example' => 'false',
                          ),
                          'System' => 
                          array (
                            'description' => '是否为系统创建。返回值：

- **true**
- **false**',
                            'type' => 'boolean',
                            'example' => 'false',
                          ),
                          'TenantId' => 
                          array (
                            'description' => '租户ID。',
                            'type' => 'string',
                            'example' => '5***',
                          ),
                          'TriggerOnce' => 
                          array (
                            'description' => '该工作流是否触发运行一次。返回值：

- **true**
- **false**',
                            'type' => 'boolean',
                            'example' => 'false',
                          ),
                        ),
                      ),
                      'DbBaseInfo' => 
                      array (
                        'description' => '数据归档工单相关的数据库信息。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'Alias' => 
                          array (
                            'description' => '实例别名。',
                            'type' => 'string',
                            'example' => 'tf-testAccDMSEnterpriseLogicDatabase853****',
                          ),
                          'AlterTimeout' => 
                          array (
                            'description' => '数据库设置的查询超时时间。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '600',
                          ),
                          'AssetControl' => 
                          array (
                            'description' => '是否开启数据资产访问控制。返回值：

- **true**
- **false**',
                            'type' => 'boolean',
                            'example' => 'true',
                          ),
                          'CatalogName' => 
                          array (
                            'description' => '实例在实例列表中的名称。',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                          'ClusterNode' => 
                          array (
                            'description' => '实例增加DMS白名单的情况。',
                            'type' => 'string',
                            'example' => 'whitelist_done',
                          ),
                          'DbId' => 
                          array (
                            'description' => '数据库ID（DatabaseId），可调用[SearchDatabase](~~141876~~)接口获取该参数的值。
>您也可以调用[ListDatabases](~~141873~~)接口获取物理库的DatabaseId值，调用[ListLogicDatabases](~~141874~~)接口获取逻辑库的DatabaseId值。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '348****',
                          ),
                          'DbType' => 
                          array (
                            'description' => '数据库类型，取值请参见[DbType参数说明](~~198106~~)。',
                            'type' => 'string',
                            'example' => 'MySQL',
                          ),
                          'DbaId' => 
                          array (
                            'description' => '实例DBA的用户ID。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '16****',
                          ),
                          'DbaName' => 
                          array (
                            'description' => '实例DBA的昵称。',
                            'type' => 'string',
                            'example' => 'DBA',
                          ),
                          'Description' => 
                          array (
                            'description' => '完整的数据库地址。',
                            'type' => 'string',
                            'example' => 'test@rm-2ze756u8837****.mysql.rds.aliyuncs.com:3306 [test]',
                          ),
                          'Encoding' => 
                          array (
                            'description' => '数据库编码。',
                            'type' => 'string',
                            'example' => 'utf8',
                          ),
                          'EnvType' => 
                          array (
                            'description' => '数据库环境类型，返回值：
- **product**：生产环境。
- **dev**：开发环境。
- **pre**：预发环境。
- **test**：测试环境。
- **sit**：SIT环境。
- **uat**：UAT环境。
- **pet**：压测环境。
- **stag**：STAG环境。',
                            'type' => 'string',
                            'example' => 'product',
                          ),
                          'Follow' => 
                          array (
                            'description' => '是否为关注的实例。返回值：

- **true**
- **false**',
                            'type' => 'boolean',
                            'example' => 'false',
                          ),
                          'Host' => 
                          array (
                            'description' => '数据库连接地址。',
                            'type' => 'string',
                            'example' => 'rm-2ze756u8837****.mysql.rds.aliyuncs.com',
                          ),
                          'Idc' => 
                          array (
                            'description' => '数据库所在地域。',
                            'type' => 'string',
                            'example' => 'cn-beijing',
                          ),
                          'IdcTitle' => 
                          array (
                            'description' => '数据库所在地域的名称。',
                            'type' => 'string',
                            'example' => 'cn-beijing',
                          ),
                          'InstanceId' => 
                          array (
                            'description' => '数据库所属的实例ID。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '175****',
                          ),
                          'InstanceSource' => 
                          array (
                            'description' => '实例来源，返回值如下：
- **RDS**：阿里云数据库实例。
- **ECS_OWN**：阿里云ECS自建库实例。
- **PUBLIC_OWN**：公网自建库实例。
- **VPC_ID**：VPC专线IDC数据库实例。
- **GATEWAY**：数据库网关实例。',
                            'type' => 'string',
                            'example' => 'RDS',
                          ),
                          'LastSyncTime' => 
                          array (
                            'description' => '上一次获取数据库信息的时间。',
                            'type' => 'string',
                            'example' => '2023-05-14 18:34:45',
                          ),
                          'Level' => 
                          array (
                            'description' => '实例级别。',
                            'type' => 'string',
                            'example' => '中',
                          ),
                          'Logic' => 
                          array (
                            'description' => '数据库是否为逻辑库。返回值：

- **true**
- **false**',
                            'type' => 'boolean',
                            'example' => 'false',
                          ),
                          'OwnerIds' => 
                          array (
                            'description' => '数据库Owner的用户ID，多个用户ID将以数组形式保存。可调用[GetUser](~~147098~~)或[ListUsers](~~141938~~)接口获取UserId的值。
>用户ID的参数名为UserId。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => 'Owner ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '77****',
                            ),
                          ),
                          'OwnerNames' => 
                          array (
                            'description' => '数据库Owner的用户名列表。',
                            'type' => 'array',
                            'items' => 
                            array (
                              'description' => 'Owner的用户名。',
                              'type' => 'string',
                              'example' => '天天',
                            ),
                          ),
                          'Port' => 
                          array (
                            'description' => '数据库的连接端口。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '3306',
                          ),
                          'SchemaName' => 
                          array (
                            'description' => '数据库名。',
                            'type' => 'string',
                            'example' => 'test',
                          ),
                          'SearchName' => 
                          array (
                            'description' => '数据库搜索名。',
                            'type' => 'string',
                            'example' => 'test@rm-2ze756u8837****.mysql.rds.aliyuncs.com:3306 [test]',
                          ),
                          'StandardGroup' => 
                          array (
                            'description' => '实例的管控模式详情。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'DbType' => 
                              array (
                                'description' => '实例的引擎类型，取值请参见[DbType参数说明](~~198106~~)。',
                                'type' => 'string',
                                'example' => 'MySQL',
                              ),
                              'Description' => 
                              array (
                                'description' => '安全规则集描述。',
                                'type' => 'string',
                                'example' => 'adb_mysql default',
                              ),
                              'FreeOrStable' => 
                              array (
                                'description' => '实例的管控模式是否为自由操作或稳定变更。返回值：

- **true**
- **false**',
                                'type' => 'boolean',
                                'example' => 'false',
                              ),
                              'GmtCreate' => 
                              array (
                                'description' => '添加安全规则的时间。',
                                'type' => 'string',
                                'example' => '2020-05-24 14:12:32',
                              ),
                              'GmtModified' => 
                              array (
                                'description' => '修改安全规则的时间。',
                                'type' => 'string',
                                'example' => '2020-05-25 14:12:32',
                              ),
                              'GroupMode' => 
                              array (
                                'description' => '实例关联的管控模式类型。返回值：
- **COMMON**：安全协同。
- **NONE_CONTROL**：自由操作。
- **STABLE**：稳定变更。',
                                'type' => 'string',
                                'example' => 'COMMON',
                              ),
                              'GroupName' => 
                              array (
                                'description' => '管控模式对应的安全规则名称。',
                                'type' => 'string',
                                'example' => 'adb_mysql default',
                              ),
                              'Id' => 
                              array (
                                'description' => '安全规则ID。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '24***',
                              ),
                              'LastMenderId' => 
                              array (
                                'description' => '最近修改安全规则的用户ID。',
                                'type' => 'integer',
                                'format' => 'int64',
                                'example' => '12****',
                              ),
                            ),
                          ),
                          'State' => 
                          array (
                            'description' => '实例状态。返回值：
- **NORMAL**： 正常。
- **DISABL**E：禁用。
- **OFFLINE**：下线。
- **NOT_EXIST**：不存在。',
                            'type' => 'string',
                            'example' => 'NORMAL',
                          ),
                          'TableCount' => 
                          array (
                            'description' => '表数量。',
                            'type' => 'integer',
                            'format' => 'int64',
                            'example' => '201',
                          ),
                          'TnsName' => 
                          array (
                            'description' => 'tns名称。',
                            'type' => 'string',
                            'example' => 'TNS_4010',
                          ),
                          'UnitType' => 
                          array (
                            'description' => '单元化类型。',
                            'type' => 'string',
                            'example' => '-1',
                          ),
                        ),
                      ),
                      'InstanceTotal' => 
                      array (
                        'description' => '归档任务的总数量。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '2',
                      ),
                      'Instances' => 
                      array (
                        'description' => '归档任务列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '任务的详情信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'BusinessTime' => 
                            array (
                              'description' => '任务流的业务时间，时间格式为yyyy-MM-DD HH:mm:ss。',
                              'type' => 'string',
                              'example' => '2023-05-14 16:00:57',
                            ),
                            'DagId' => 
                            array (
                              'description' => '整个任务的ID，可调用[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)接口获取该参数的值。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '37***',
                            ),
                            'EndTime' => 
                            array (
                              'description' => '任务流结束运行的时间，时间格式为yyyy-MM-DD HH:mm:ss。',
                              'type' => 'string',
                              'example' => '2022-06-04 15:14:00',
                            ),
                            'GmtCreate' => 
                            array (
                              'description' => '创建任务流的时间。',
                              'type' => 'string',
                              'example' => '2023-05-14 16:00:57',
                            ),
                            'GmtModified' => 
                            array (
                              'description' => '更新任务流的时间。',
                              'type' => 'string',
                              'example' => '2023-05-14 16:00:57',
                            ),
                            'HistoryDagId' => 
                            array (
                              'description' => '历史任务流ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '32***',
                            ),
                            'Id' => 
                            array (
                              'description' => '在运行任务流中的实例ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '24***',
                            ),
                            'LastRunningContext' => 
                            array (
                              'description' => '上次任务流运行的情况。',
                              'type' => 'string',
                              'example' => '{
      "nodes": [
            48**
      ],
      "edges": {}
}',
                            ),
                            'Msg' => 
                            array (
                              'description' => '本次任务运行的详细信息。',
                              'type' => 'string',
                              'example' => '归档任务日志：2023-05-15 16:37:48[GMT+08:00] INFO - Resource Control is active!\\n2023-05-15 16:37:48[GMT+08:00] INFO - Starting job j_4834 at Mon May 15 16:37:48 CST 2023',
                            ),
                            'Status' => 
                            array (
                              'description' => '任务运行状态。返回值如下：

- **0**：等待执行。
- **1**：运行中。
- **2**：暂停。
- **3**：失败。
- **4**：成功。
- **5**：运行结束。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '4',
                            ),
                            'TenantId' => 
                            array (
                              'description' => '租户ID。',
                              'type' => 'string',
                              'example' => '5***',
                            ),
                            'TriggerType' => 
                            array (
                              'description' => '触发类型。返回值如下：
- **0**：周期调度。
- **1**：手动运行。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1',
                            ),
                            'Version' => 
                            array (
                              'description' => '版本号。',
                              'type' => 'string',
                              'example' => '1',
                            ),
                          ),
                        ),
                      ),
                      'NextFireTimeResult' => 
                      array (
                        'description' => '下次任务触发时间。',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'CronFireType' => 
                          array (
                            'description' => '周期触发类型。',
                            'type' => 'string',
                            'example' => 'NOT_SET',
                          ),
                        ),
                      ),
                      'PageIndex' => 
                      array (
                        'description' => '分页页码。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '10',
                      ),
                      'PageSize' => 
                      array (
                        'description' => '每页返回的结果个数。
',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '20',
                      ),
                      'TempTableNameMap' => 
                      array (
                        'description' => '归档生成的临时表名（根据归档任务ID区分）。',
                        'type' => 'object',
                        'example' => '{
      "803***": [
            "tmp_dms_21321_20230704144336_temp_test_check"
      ]
}',
                      ),
                    ),
                  ),
                  'PluginParam' => 
                  array (
                    'description' => '创建工单参数，格式为JSON形式的字符串。详细信息，请参见[PluginType参数说明](~~429109~~)。',
                    'type' => 'object',
                    'properties' => 
                    array (
                      'ArchiveMethod' => 
                      array (
                        'description' => '归档目标类型。',
                        'type' => 'string',
                        'example' => 'inner_oss',
                      ),
                      'DbSchema' => 
                      array (
                        'description' => '归档库表Schema。',
                        'type' => 'string',
                        'example' => 'test',
                      ),
                      'Logic' => 
                      array (
                        'description' => '是否为逻辑库，返回值：
- **true**：是。
- **false**：否。',
                        'type' => 'boolean',
                        'example' => 'true',
                      ),
                      'OrderAfter' => 
                      array (
                        'description' => '归档后置行为。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '归档后置行为。该后置行为主要使用Delete完成库表清理。',
                          'type' => 'string',
                          'example' => 'delete',
                        ),
                      ),
                      'RunMethod' => 
                      array (
                        'description' => '运行方法，指立刻运行还是指定时间运行任务。',
                        'type' => 'string',
                        'example' => 'now',
                      ),
                      'SourceDatabaseId' => 
                      array (
                        'description' => '源数据库的ID。',
                        'type' => 'integer',
                        'format' => 'int64',
                        'example' => '12***',
                      ),
                      'TableIncludes' => 
                      array (
                        'description' => '归档的表列表和过滤条件。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '表名和过滤条件。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'TableName' => 
                            array (
                              'description' => '表名。',
                              'type' => 'string',
                              'example' => 'tm_insured_cb',
                            ),
                            'TableWhere' => 
                            array (
                              'description' => '过滤条件。',
                              'type' => 'string',
                              'example' => 'id<1000或者gmt_create<\'2023-05-14 16:00:57\'',
                            ),
                          ),
                        ),
                      ),
                      'TableMapping' => 
                      array (
                        'description' => '库表映射。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '源表和目标表的表名、列名映射。',
                          'type' => 'string',
                          'example' => '{
                    "schema": "oracle_info",
                    "tarTb": "eoa_context_test",
                    "tbPartKey": [],
                    "oriTb": "eoa_context",
                    "columns": [
                        {
                            "tName": "dbid_test",
                            "oName": "dbid"
                        }
                    ],
                    "dbPartKey": [],
                    "customPk": [
                        "id"
                    ]
                }',
                        ),
                      ),
                      'TargetInstanceId' => 
                      array (
                        'description' => '目标实例ID。',
                        'type' => 'string',
                        'example' => '12***',
                      ),
                      'Variables' => 
                      array (
                        'description' => '定义的时间变量，用于周期归档。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'description' => '时间变量，根据当前时间的前一天进行偏移计算。',
                          'type' => 'string',
                          'example' => '{
                    "name": "test",
                    "pattern": "yyyy-MM-dd|-10d"
                }',
                        ),
                      ),
                    ),
                  ),
                  'PluginType' => 
                  array (
                    'description' => '工单类型对应的PluginType，数据归档的PluginType为DATA_ARCHIVE。更多信息，请参见[PluginType参数说明](~~429109~~)。',
                    'type' => 'string',
                    'example' => 'DATA_ARCHIVE',
                  ),
                  'RelatedUserList' => 
                  array (
                    'description' => '工单相关人的用户ID。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '工单相关人的用户ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '65****',
                    ),
                  ),
                  'RelatedUserNickList' => 
                  array (
                    'description' => '工单相关人的昵称列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '工单相关人的昵称。',
                      'type' => 'string',
                      'example' => 'publicyuhzou',
                    ),
                  ),
                  'StatusCode' => 
                  array (
                    'description' => '工单状态码，返回值：
- **new**：新建。
- **toaudit**：审批中。
- **approved**：审批通过。
- **reject**：审批拒绝。
- **processing**：执行中。
- **success**：执行成功。
- **closed**：已关闭。',
                    'type' => 'string',
                    'example' => 'processing',
                  ),
                  'StatusDesc' => 
                  array (
                    'description' => '工单状态描述。',
                    'type' => 'string',
                    'example' => '正在执行工单任务。',
                  ),
                  'WorkflowInstanceId' => 
                  array (
                    'description' => '审批流ID，可调用[GetOrderBaseInfo](~~144642~~)接口获取该参数的值。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '29****',
                  ),
                  'WorkflowStatusDesc' => 
                  array (
                    'description' => '审批描述信息。',
                    'type' => 'string',
                    'example' => '审批通过',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"TraceId\\": \\"0a06e1e316757357507896067d3780\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"User [199295823****] not exist\\",\\n  \\"ErrorCode\\": \\"NoPermission\\",\\n  \\"RequestId\\": \\"4161CE36-28DF-5191-8A6F-A17076A0B124\\",\\n  \\"DataArchiveOrderDetail\\": {\\n    \\"Comment\\": \\"Archiving of test results\\",\\n    \\"Committer\\": \\"dmstest\\",\\n    \\"CommitterId\\": 0,\\n    \\"GmtCreate\\": \\"2023-05-15 16:00:48\\",\\n    \\"GmtModified\\": \\"2023-05-23 16:00:48\\",\\n    \\"Id\\": 0,\\n    \\"PluginExtraData\\": {\\n      \\"DagInfo\\": {\\n        \\"CreatorId\\": \\"59****\\",\\n        \\"CronBeginDate\\": \\"1970-01-01\\",\\n        \\"CronEndDate\\": \\"9999-01-01\\",\\n        \\"CronTrigger\\": false,\\n        \\"DWDevelop\\": false,\\n        \\"DagName\\": \\"data-archive-9099197\\",\\n        \\"DagOwnerId\\": \\"13****\\",\\n        \\"DeployId\\": 0,\\n        \\"Description\\": \\"order id:9099197\\",\\n        \\"EditDagId\\": 0,\\n        \\"GmtCreate\\": \\"2023-05-15 16:00:48\\",\\n        \\"GmtModified\\": \\"2023-06-15 16:00:48\\",\\n        \\"Id\\": 0,\\n        \\"IsPublic\\": 0,\\n        \\"Legacy\\": false,\\n        \\"System\\": false,\\n        \\"TenantId\\": \\"5***\\",\\n        \\"TriggerOnce\\": false\\n      },\\n      \\"DbBaseInfo\\": {\\n        \\"Alias\\": \\"tf-testAccDMSEnterpriseLogicDatabase853****\\",\\n        \\"AlterTimeout\\": 600,\\n        \\"AssetControl\\": true,\\n        \\"CatalogName\\": \\"test\\",\\n        \\"ClusterNode\\": \\"whitelist_done\\",\\n        \\"DbId\\": 0,\\n        \\"DbType\\": \\"MySQL\\",\\n        \\"DbaId\\": 0,\\n        \\"DbaName\\": \\"DBA\\",\\n        \\"Description\\": \\"test@rm-2ze756u8837****.mysql.rds.aliyuncs.com:3306 [test]\\",\\n        \\"Encoding\\": \\"utf8\\",\\n        \\"EnvType\\": \\"product\\",\\n        \\"Follow\\": false,\\n        \\"Host\\": \\"rm-2ze756u8837****.mysql.rds.aliyuncs.com\\",\\n        \\"Idc\\": \\"cn-beijing\\",\\n        \\"IdcTitle\\": \\"cn-beijing\\",\\n        \\"InstanceId\\": 0,\\n        \\"InstanceSource\\": \\"RDS\\",\\n        \\"LastSyncTime\\": \\"2023-05-14 18:34:45\\",\\n        \\"Level\\": \\"中\\",\\n        \\"Logic\\": false,\\n        \\"OwnerIds\\": [\\n          0\\n        ],\\n        \\"OwnerNames\\": [\\n          \\"天天\\"\\n        ],\\n        \\"Port\\": 3306,\\n        \\"SchemaName\\": \\"test\\",\\n        \\"SearchName\\": \\"test@rm-2ze756u8837****.mysql.rds.aliyuncs.com:3306 [test]\\",\\n        \\"StandardGroup\\": {\\n          \\"DbType\\": \\"MySQL\\",\\n          \\"Description\\": \\"adb_mysql default\\",\\n          \\"FreeOrStable\\": false,\\n          \\"GmtCreate\\": \\"2020-05-24 14:12:32\\",\\n          \\"GmtModified\\": \\"2020-05-25 14:12:32\\",\\n          \\"GroupMode\\": \\"COMMON\\",\\n          \\"GroupName\\": \\"adb_mysql default\\",\\n          \\"Id\\": 0,\\n          \\"LastMenderId\\": 0\\n        },\\n        \\"State\\": \\"NORMAL\\",\\n        \\"TableCount\\": 201,\\n        \\"TnsName\\": \\"TNS_4010\\",\\n        \\"UnitType\\": \\"-1\\"\\n      },\\n      \\"InstanceTotal\\": 2,\\n      \\"Instances\\": [\\n        {\\n          \\"BusinessTime\\": \\"2023-05-14 16:00:57\\",\\n          \\"DagId\\": 0,\\n          \\"EndTime\\": \\"2022-06-04 15:14:00\\",\\n          \\"GmtCreate\\": \\"2023-05-14 16:00:57\\",\\n          \\"GmtModified\\": \\"2023-05-14 16:00:57\\",\\n          \\"HistoryDagId\\": 0,\\n          \\"Id\\": 0,\\n          \\"LastRunningContext\\": \\"{\\\\n      \\\\\\"nodes\\\\\\": [\\\\n            48**\\\\n      ],\\\\n      \\\\\\"edges\\\\\\": {}\\\\n}\\",\\n          \\"Msg\\": \\"归档任务日志：2023-05-15 16:37:48[GMT+08:00] INFO - Resource Control is active!\\\\\\\\n2023-05-15 16:37:48[GMT+08:00] INFO - Starting job j_4834 at Mon May 15 16:37:48 CST 2023\\",\\n          \\"Status\\": 4,\\n          \\"TenantId\\": \\"5***\\",\\n          \\"TriggerType\\": 1,\\n          \\"Version\\": \\"1\\"\\n        }\\n      ],\\n      \\"NextFireTimeResult\\": {\\n        \\"CronFireType\\": \\"NOT_SET\\"\\n      },\\n      \\"PageIndex\\": 10,\\n      \\"PageSize\\": 20,\\n      \\"TempTableNameMap\\": {\\n        \\"803***\\": [\\n          \\"tmp_dms_21321_20230704144336_temp_test_check\\"\\n        ]\\n      }\\n    },\\n    \\"PluginParam\\": {\\n      \\"ArchiveMethod\\": \\"inner_oss\\",\\n      \\"DbSchema\\": \\"test\\",\\n      \\"Logic\\": true,\\n      \\"OrderAfter\\": [\\n        \\"delete\\"\\n      ],\\n      \\"RunMethod\\": \\"now\\",\\n      \\"SourceDatabaseId\\": 0,\\n      \\"TableIncludes\\": [\\n        {\\n          \\"TableName\\": \\"tm_insured_cb\\",\\n          \\"TableWhere\\": \\"id<1000或者gmt_create<\'2023-05-14 16:00:57\'\\"\\n        }\\n      ],\\n      \\"TableMapping\\": [\\n        \\"{\\\\n                    \\\\\\"schema\\\\\\": \\\\\\"oracle_info\\\\\\",\\\\n                    \\\\\\"tarTb\\\\\\": \\\\\\"eoa_context_test\\\\\\",\\\\n                    \\\\\\"tbPartKey\\\\\\": [],\\\\n                    \\\\\\"oriTb\\\\\\": \\\\\\"eoa_context\\\\\\",\\\\n                    \\\\\\"columns\\\\\\": [\\\\n                        {\\\\n                            \\\\\\"tName\\\\\\": \\\\\\"dbid_test\\\\\\",\\\\n                            \\\\\\"oName\\\\\\": \\\\\\"dbid\\\\\\"\\\\n                        }\\\\n                    ],\\\\n                    \\\\\\"dbPartKey\\\\\\": [],\\\\n                    \\\\\\"customPk\\\\\\": [\\\\n                        \\\\\\"id\\\\\\"\\\\n                    ]\\\\n                }\\"\\n      ],\\n      \\"TargetInstanceId\\": \\"12***\\",\\n      \\"Variables\\": [\\n        \\"{\\\\n                    \\\\\\"name\\\\\\": \\\\\\"test\\\\\\",\\\\n                    \\\\\\"pattern\\\\\\": \\\\\\"yyyy-MM-dd|-10d\\\\\\"\\\\n                }\\"\\n      ]\\n    },\\n    \\"PluginType\\": \\"DATA_ARCHIVE\\",\\n    \\"RelatedUserList\\": [\\n      0\\n    ],\\n    \\"RelatedUserNickList\\": [\\n      \\"publicyuhzou\\"\\n    ],\\n    \\"StatusCode\\": \\"processing\\",\\n    \\"StatusDesc\\": \\"正在执行工单任务。\\",\\n    \\"WorkflowInstanceId\\": 0,\\n    \\"WorkflowStatusDesc\\": \\"审批通过\\"\\n  }\\n}","type":"json"}]',
      'title' => '获取数据归档工单详情',
    ),
    'GetDataArchiveCount' => 
    array (
      'summary' => '获取数据归档工单量统计，包括：归档成功的工单数、归档失败的工单数、正在进行归档的工单数和归档工单的总数。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PluginType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '插件类型，默认为DATA_ARCHIVE。',
            'type' => 'string',
            'required' => false,
            'example' => 'DATA_ARCHIVE',
            'default' => 'DATA_ARCHIVE',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderResultType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '身份类型。默认为管理员（AS_ADMIN）。',
            'type' => 'string',
            'required' => false,
            'example' => 'AS_ADMIN',
            'default' => 'AS_ADMIN',
          ),
        ),
        2 => 
        array (
          'name' => 'SearchDateType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '工单修改时间或创建时间。获取数据归档工单统计数目以创建时间为准。',
            'type' => 'string',
            'required' => false,
            'example' => 'CREATE_TIME',
            'default' => 'CREATE_TIME',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '2****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'Data' => 
              array (
                'description' => '返回的数据信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'FailCount' => 
                  array (
                    'title' => '失败的归档任务数目',
                    'description' => '归档失败的工单数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12',
                  ),
                  'ProcessingCount' => 
                  array (
                    'title' => '正在进行中的归档任务数目',
                    'description' => '正在进行归档的工单数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '180',
                  ),
                  'SuccessCount' => 
                  array (
                    'title' => '成功的归档任务数目',
                    'description' => '归档成功的工单数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '900',
                  ),
                  'TotalCount' => 
                  array (
                    'title' => '所有状态的归档任务数目',
                    'description' => '所有归档状态的工单数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1400',
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4B63CAC5-BD7F-5C7C-82C9-59DFFBC3C5C2',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"Data\\": {\\n    \\"FailCount\\": 12,\\n    \\"ProcessingCount\\": 180,\\n    \\"SuccessCount\\": 900,\\n    \\"TotalCount\\": 1400\\n  },\\n  \\"Success\\": true,\\n  \\"RequestId\\": \\"4B63CAC5-BD7F-5C7C-82C9-59DFFBC3C5C2\\"\\n}","type":"json"}]',
      'title' => '获取数据归档工单量统计',
    ),
    'ListDBTaskSQLJob' => 
    array (
      'summary' => '获取SQL任务列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DBTaskGroupId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SQL任务分组ID，您可以调用[GetStructSyncJobDetail](~~206160~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'exclusiveMaximum' => false,
            'minimum' => '1',
            'example' => '132****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始页码。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F6C47680-8D2D-43A4-8902-F2740D71A398',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'DBTaskSQLJobList' => 
              array (
                'description' => 'SQL任务列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'SQL任务。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'JobId' => 
                    array (
                      'description' => 'SQL任务ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12****',
                    ),
                    'JobType' => 
                    array (
                      'description' => 'SQL任务类型。',
                      'type' => 'string',
                      'example' => 'STRUCT_SYNC',
                    ),
                    'Comment' => 
                    array (
                      'description' => 'SQL任务备注信息。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'DbSearchName' => 
                    array (
                      'description' => '库搜索名。
> 建议您的业务不要强依赖该参数，后续版本的格式可能会发生变化。',
                      'type' => 'string',
                      'example' => 'test@xxx:3306[test]',
                    ),
                    'DbId' => 
                    array (
                      'description' => '库ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '43214523',
                    ),
                    'Logic' => 
                    array (
                      'description' => '是否为逻辑库，取值：
- **true**：是
- **false**：否',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'CreateTime' => 
                    array (
                      'description' => '创建时间。',
                      'type' => 'string',
                      'example' => '2021-02-18 17:49:20',
                    ),
                    'LastExecTime' => 
                    array (
                      'description' => '最后执行时间。',
                      'type' => 'string',
                      'example' => '2021-02-18 17:49:31',
                    ),
                    'DbTaskGroupId' => 
                    array (
                      'description' => 'SQL任务分组ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '432****',
                    ),
                    'Status' => 
                    array (
                      'description' => 'SQL详情状态，取值：
- **INIT**：初始化状态
- **PENDING**：等待任务抓取
- **BE_SCHEDULED**：待调度
- **FAIL**：执行失败
- **SUCCESS**：执行成功
- **PAUSE**：暂停
- **DELETE**：删除
- **RUNNING**：正在执行',
                      'type' => 'string',
                      'example' => 'SUCCESS',
                    ),
                    'Transactional' => 
                    array (
                      'description' => '是否以事务方式执行，取值：
- **true**：是
- **false**：否',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => 'SQL任务列表总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F6C47680-8D2D-43A4-8902-F2740D71A398\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"DBTaskSQLJobList\\": [\\n    {\\n      \\"JobId\\": 0,\\n      \\"JobType\\": \\"STRUCT_SYNC\\",\\n      \\"Comment\\": \\"test\\",\\n      \\"DbSearchName\\": \\"test@xxx:3306[test]\\",\\n      \\"DbId\\": 43214523,\\n      \\"Logic\\": false,\\n      \\"CreateTime\\": \\"2021-02-18 17:49:20\\",\\n      \\"LastExecTime\\": \\"2021-02-18 17:49:31\\",\\n      \\"DbTaskGroupId\\": 0,\\n      \\"Status\\": \\"SUCCESS\\",\\n      \\"Transactional\\": false\\n    }\\n  ],\\n  \\"TotalCount\\": 1\\n}","errorExample":""},{"type":"xml","example":"<ListDBTaskSQLJobResponse>\\n    <RequestId>F6C47680-8D2D-43A4-8902-F2740D71A398</RequestId>\\n    <Success>true</Success>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <DBTaskSQLJobList>\\n        <JobType>STRUCT_SYNC</JobType>\\n        <Comment>test</Comment>\\n        <DbSearchName>test@xxx:3306【test】</DbSearchName>\\n        <DbId>43214523</DbId>\\n        <Logic>false</Logic>\\n        <CreateTime>2021-02-18 17:49:20</CreateTime>\\n        <LastExecTime>2021-02-18 17:49:31</LastExecTime>\\n        <Status>SUCCESS</Status>\\n        <Transactional>false</Transactional>\\n    </DBTaskSQLJobList>\\n    <TotalCount>1</TotalCount>\\n</ListDBTaskSQLJobResponse>","errorExample":""}]',
      'title' => '获取SQL任务列表',
    ),
    'ListDBTaskSQLJobDetail' => 
    array (
      'summary' => '获取SQL任务的详情信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SQL任务ID，可通过调用接口[ListDBTaskSQLJob](~~207049~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1276****',
          ),
        ),
        1 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始页码。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3F044E33-FE09-58F1-8C61-A0F612EC****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'JobId is mandatory for this action.',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'MissingJobId',
              ),
              'DBTaskSQLJobDetailList' => 
              array (
                'description' => 'SQL任务详情列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => 'SQL任务详情列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'JobDetailId' => 
                    array (
                      'description' => 'SQL任务详情ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '24723****',
                    ),
                    'CurrentSql' => 
                    array (
                      'description' => '当前执行的SQL。',
                      'type' => 'string',
                      'example' => 'update a set id = 1 where id  = 1;',
                    ),
                    'ExecuteCount' => 
                    array (
                      'description' => '执行次数。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                    'JobId' => 
                    array (
                      'description' => 'SQL任务ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1276****',
                    ),
                    'DbId' => 
                    array (
                      'description' => '物理库ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1988****',
                    ),
                    'Logic' => 
                    array (
                      'description' => '是否为逻辑库，返回值如下：
- **true**：逻辑库
- **false**：物理库',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'Skip' => 
                    array (
                      'description' => '是否存在跳过执行SQL脚本的情况，返回值如下：
- **true**：存在
- **false**：不存在',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'SqlType' => 
                    array (
                      'description' => 'SQL类型，例如，DELETE、UPDATE、ALTER_TABLE等。',
                      'type' => 'string',
                      'example' => 'CREATE_TABLE',
                    ),
                    'Status' => 
                    array (
                      'description' => 'SQL详情状态，返回值如下：
- **INIT**：初始化状态
- **PENDING**：等待任务抓取
- **BE_SCHEDULED**：待调度
- **FAIL**：执行失败
- **SUCCESS**：执行成功
- **PAUSE**：暂停
- **DELETE**：删除
- **RUNNING**：正在执行',
                      'type' => 'string',
                      'example' => 'SUCCESS',
                    ),
                    'Log' => 
                    array (
                      'description' => '日志详情信息。',
                      'type' => 'string',
                      'example' => 'log_info',
                    ),
                    'StartTime' => 
                    array (
                      'description' => 'SQL执行开始时间。',
                      'type' => 'string',
                      'example' => '2021-12-16 00:00:00',
                    ),
                    'EndTime' => 
                    array (
                      'description' => 'SQL执行结束时间。',
                      'type' => 'string',
                      'example' => '2021-12-16 00:00:01',
                    ),
                    'TimeDelay' => 
                    array (
                      'description' => 'SQL执行耗时，单位为毫秒。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '38',
                    ),
                    'AffectRows' => 
                    array (
                      'description' => 'SQL执行影响行数。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '0',
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => 'SQL任务总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3F044E33-FE09-58F1-8C61-A0F612EC****\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"JobId is mandatory for this action.\\",\\n  \\"ErrorCode\\": \\"MissingJobId\\",\\n  \\"DBTaskSQLJobDetailList\\": [\\n    {\\n      \\"JobDetailId\\": 0,\\n      \\"CurrentSql\\": \\"update a set id = 1 where id  = 1;\\",\\n      \\"ExecuteCount\\": 1,\\n      \\"JobId\\": 0,\\n      \\"DbId\\": 0,\\n      \\"Logic\\": false,\\n      \\"Skip\\": false,\\n      \\"SqlType\\": \\"CREATE_TABLE\\",\\n      \\"Status\\": \\"SUCCESS\\",\\n      \\"Log\\": \\"log_info\\",\\n      \\"StartTime\\": \\"2021-12-16 00:00:00\\",\\n      \\"EndTime\\": \\"2021-12-16 00:00:01\\",\\n      \\"TimeDelay\\": 38,\\n      \\"AffectRows\\": 0\\n    }\\n  ],\\n  \\"TotalCount\\": 1\\n}","errorExample":""},{"type":"xml","example":"<ListDBTaskSQLJobDetailResponse>\\n    <RequestId>3F044E33-FE09-58F1-8C61-A0F612EC****</RequestId>\\n    <Success>true</Success>\\n    <ErrorMessage>JobId is mandatory for this action.</ErrorMessage>\\n    <ErrorCode>MissingJobId</ErrorCode>\\n    <DBTaskSQLJobDetailList>\\n        <CurrentSql>update a set id = 1 where id  = 1;</CurrentSql>\\n        <ExecuteCount>1</ExecuteCount>\\n        <Logic>false</Logic>\\n        <Skip>false</Skip>\\n        <SqlType>CREATE_TABLE</SqlType>\\n        <Status>SUCCESS</Status>\\n        <Log>log_info</Log>\\n        <StartTime>2021-12-16 00:00:00</StartTime>\\n        <EndTime>2021-12-16 00:00:01</EndTime>\\n        <TimeDelay>38</TimeDelay>\\n        <AffectRows>0</AffectRows>\\n    </DBTaskSQLJobDetailList>\\n    <TotalCount>1</TotalCount>\\n</ListDBTaskSQLJobDetailResponse>","errorExample":""}]',
      'title' => '获取SQL任务的详情信息',
    ),
    'GetDBTaskSQLJobLog' => 
    array (
      'summary' => '获取SQL任务调度详情日志。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'JobId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SQL任务ID，可通过调用接口[ListDBTaskSQLJob](~~207049~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1276****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4AC23904-55DE-550B-9676-E8946F07****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'JobId is mandatory for this action.',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'MissingJobId',
              ),
              'Log' => 
              array (
                'description' => '调度详情日志。',
                'type' => 'string',
                'example' => 'log_****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4AC23904-55DE-550B-9676-E8946F07****\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"JobId is mandatory for this action.\\",\\n  \\"ErrorCode\\": \\"MissingJobId\\",\\n  \\"Log\\": \\"log_****\\"\\n}","errorExample":""},{"type":"xml","example":"<GetDBTaskSQLJobLogResponse>\\n    <RequestId>4AC23904-55DE-550B-9676-E8946F07****</RequestId>\\n    <Log>\\r\\n------[2021-12-08 12:05:31]------\\r\\n创建任务：分组id：0;分组排序：0\\r\\n\\r\\n------[2021-12-08 12:05:32]------\\r\\n任务初始化...\\r\\n\\r\\n------[2021-12-08 12:05:32]------\\r\\nqn_bzbh5@rm-bp144d5ky4l4rli0417****.mysql.rds.****.com:3306【qn_rds mysql】\\r\\n\\r\\n------[2021-12-08 12:05:32]------\\r\\nuse normal connection :Normal\\r\\n\\r\\n------[2021-12-08 12:05:32]------\\r\\n事务：关闭.\\r\\n\\r\\n------[2021-12-08 12:05:32]------\\r\\n开始执行：共1条SQL待执行 queryKey: executeKey_12763320_598\\r\\n\\r\\n------[2021-12-08 12:05:33]------\\r\\nchange done!\\r\\n\\r\\n------[2021-12-08 12:05:33]------\\r\\n任务执行成功!\\r\\n\\r\\n------[2021-12-08 12:05:33]------\\r\\njobSuccess callback Start.\\r\\n\\r\\n------[2021-12-08 12:05:33]------\\r\\nstart database level metadata sync task [Master]...\\r\\n\\r\\ndatabase table level sync. cost：355 ms\\r\\n------[2021-12-08 12:05:33]------\\r\\ngroup success callback end !\\r\\n\\r\\n------[2021-12-08 12:05:33]------\\r\\njobSuccess callback End.\\r\\n</Log>\\n    <Success>true</Success>\\n</GetDBTaskSQLJobLogResponse>","errorExample":""}]',
      'title' => '获取SQL任务日志',
    ),
    'GetOnlineDDLProgress' => 
    array (
      'summary' => '调用GetOnlineDDLProgress接口，获取OnlineDDL任务执行进度详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'JobDetailId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'OnlineDDL SQL任务详情ID。您可通过调用[ListDBTaskSQLJobDetail](~~207073~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '15***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '34E01EDD-6A16-4CF0-9541-C644D1BE01AA',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。返回值如下：

- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '403',
              ),
              'OnlineDDLTaskDetail' => 
              array (
                'description' => '任务详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'JobStatus' => 
                  array (
                    'description' => '任务状态。返回值如下：

- **INIT**：初始化。
- **SUCCESS**：已完成。
- **RUNNING**：执行中。
- **WAITING_CUTOVER**：等待cut-over。
- **RESTARTING**：重启中。
- **PAUSE**：暂停中。
- **UNSUPPORTED**：不支持。
- **CANCELED**：已取消。
- **FAIL**：已失败。
- **INTERRUPT**：已中断。',
                    'type' => 'string',
                    'example' => 'SUCCESS',
                  ),
                  'StatusDesc' => 
                  array (
                    'description' => '任务状态描述信息。',
                    'type' => 'string',
                    'example' => 'Success',
                  ),
                  'DelaySeconds' => 
                  array (
                    'description' => 'DMS回放延迟，即回放原表的Binlog到临时表的延迟时间（单位：秒），与数据库的主备无关。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '0',
                  ),
                  'CopyTotal' => 
                  array (
                    'description' => '预估的数据总行数，取自information_schema库的统计数据，通常比表中的真实数据量小。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '10',
                  ),
                  'CopyCount' => 
                  array (
                    'description' => 'DMS无锁变更实际拷贝的原表数据量。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '9',
                  ),
                  'ProgressRatio' => 
                  array (
                    'description' => '预估的执行进度。具体以任务状态为准。',
                    'type' => 'string',
                    'example' => '90%',
                  ),
                  'CutoverLockTimeSeconds' => 
                  array (
                    'description' => '切换表时，锁表超时时间。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2',
                  ),
                  'CutoverFailRetryTimes' => 
                  array (
                    'description' => '切换表失败时重试次数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '3',
                  ),
                  'CleanStrategy' => 
                  array (
                    'description' => '完成切换表操作后，原表的清理策略，返回值如下：

- **DROP**：系统自动删除无效原表。
- **MOVE**：将无效原表移动到test数据库，再进行手动清理。
- **NOTHING**：原库中保留无效原表，再进行手动清理。',
                    'type' => 'string',
                    'example' => 'DROP',
                  ),
                  'CopyChunkSize' => 
                  array (
                    'description' => '全量拷贝大小。该参数用于指定每个小块的大小。单次拷贝块越大，全量拷贝时间越短，但同时对业务影响越大。

> 在全量拷贝阶段，将原表分为N个小块逐个拷贝到临时表，DMS缺省动态调整每个块的大小。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1000',
                  ),
                  'CopyChunkMode' => 
                  array (
                    'description' => '全量拷贝策略，返回值如下：

- **AUTO**：DMS根据数据库的性能动态调整，单次拷贝锁表时间控制在1.5秒以内。
- **RUNNING**：DMS根据您指定的CopyChunkSize大小（1-60000）拷贝原表数据，此模式下必须设置CopyChunkSize。',
                    'type' => 'string',
                    'example' => 'AUTO',
                  ),
                  'CutoverWindowStartTime' => 
                  array (
                    'description' => '切换表的时间窗口开始时间。默认为00:00:00。该参数可以控制切换表的时间窗口，指定当满足切换表条件且在时间窗口以内时才可以切换，未在窗口内时则一直等待窗口。',
                    'type' => 'string',
                    'example' => '12:00:00',
                  ),
                  'CutoverWindowEndTime' => 
                  array (
                    'description' => '切换表的时间窗口结束时间，与CutoverWindowStartTime至少间隔30分钟。默认为23:59:59。',
                    'type' => 'string',
                    'example' => '13:00:00',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"34E01EDD-6A16-4CF0-9541-C644D1BE01AA\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"OnlineDDLTaskDetail\\": {\\n    \\"JobStatus\\": \\"SUCCESS\\",\\n    \\"StatusDesc\\": \\"Success\\",\\n    \\"DelaySeconds\\": 0,\\n    \\"CopyTotal\\": 10,\\n    \\"CopyCount\\": 9,\\n    \\"ProgressRatio\\": \\"90%\\",\\n    \\"CutoverLockTimeSeconds\\": 2,\\n    \\"CutoverFailRetryTimes\\": 3,\\n    \\"CleanStrategy\\": \\"DROP\\",\\n    \\"CopyChunkSize\\": 1000,\\n    \\"CopyChunkMode\\": \\"AUTO\\",\\n    \\"CutoverWindowStartTime\\": \\"12:00:00\\",\\n    \\"CutoverWindowEndTime\\": \\"13:00:00\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetOnlineDDLProgressResponse>\\n    <RequestId>34E01EDD-6A16-4CF0-9541-C644D1BE01AA</RequestId>\\n    <Success>true</Success>\\n    <OnlineDDLTaskDetail>\\n        <JobStatus>SUCCESS</JobStatus>\\n        <StatusDesc>Success</StatusDesc>\\n        <DelaySeconds>0</DelaySeconds>\\n        <CopyTotal>10</CopyTotal>\\n        <CopyCount>9</CopyCount>\\n        <ProgressRatio>90</ProgressRatio>\\n        <CutoverLockTimeSeconds>2</CutoverLockTimeSeconds>\\n        <CutoverFailRetryTimes>3</CutoverFailRetryTimes>\\n        <CleanStrategy>DROP</CleanStrategy>\\n        <CopyChunkSize>1000</CopyChunkSize>\\n        <CopyChunkMode>AUTO</CopyChunkMode>\\n        <CutoverWindowStartTime>12:00:00</CutoverWindowStartTime>\\n        <CutoverWindowEndTime>13:00:00</CutoverWindowEndTime>\\n    </OnlineDDLTaskDetail>\\n</GetOnlineDDLProgressResponse>","errorExample":""}]',
      'title' => '获取OnlineDDL任务执行进度详情',
    ),
    'SetOwners' => 
    array (
      'summary' => '设置实例、库、表的Owner。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'ResourceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源ID。不同的Owner类型会指向不同的资源ID，Owner类型与资源ID的对应关系如下：
- INSTANCE：实例的InstanceId，可通过调用接口[ListInstances](~~141936~~)获取该参数的值。
- DATABASE： 物理库的DatabaseId，可通过调用接口[ListDatabases](~~141873~~)获取该参数的值。
- LOGIC_DATABASE：逻辑库的DatabaseId，可通过调用接口[ListLogicDatabases](~~141874~~)获取该参数的值。
- TABLE：物理表的TableId，可通过调用接口[ListTables](~~141878~~)获取该参数的值。
- LOGIC_TABLE：逻辑表的TableId，可通过调用接口[ListLogicTables](~~141875~~)获取该参数的值。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '174****',
          ),
        ),
        2 => 
        array (
          'name' => 'OwnerType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Owner类型，取值如下：
- INSTANCE：实例Owner
- DATABASE：物理库Owner
- LOGIC_DATABASE：逻辑库Owner
- TABLE：物理表Owner
- LOGIC_TABLE：逻辑表Owner',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'INSTANCE',
            'enum' => 
            array (
              0 => 'DATABASE',
              1 => 'LOGIC_DATABASE',
              2 => 'TABLE',
              3 => 'LOGIC_TABLE',
              4 => 'INSTANCE',
            ),
          ),
        ),
        3 => 
        array (
          'name' => 'OwnerIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'Owner的用户ID，多个用户ID用逗号分开。可通过调用接口[GetUser](~~147098~~)或[ListUsers](~~141938~~)获取UserId的值。
>用户ID的参数名为UserId。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '51****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A99CD576-1E18-4E86-931E-C3CCE56DC030',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A99CD576-1E18-4E86-931E-C3CCE56DC030\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SetOwnersResponse>\\n    <RequestId>A99CD576-1E18-4E86-931E-C3CCE56DC030</RequestId>\\n    <Success>true</Success>\\n</SetOwnersResponse>","errorExample":""}]',
      'title' => '设置资源Owner角色',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListInstanceUserPermissions' => 
    array (
      'summary' => '调用ListInstanceUserPermissions获取实例的用户权限列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，可通过调用接口[ListInstances](~~141936~~)或[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '174****',
          ),
        ),
        2 => 
        array (
          'name' => 'UserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户昵称，可通过调用接口[ListUsers](~~141938~~)或[GetUser](~~147098~~)获取该参数的值。
>NickName的值即为UserName的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'test_nick_name',
          ),
        ),
        3 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        4 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '100',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '数据总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7D162AAE-6501-5691-BF14-D7018F662895',
              ),
              'ErrorCode' => 
              array (
                'description' => '请求错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '请求错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'UserPermissions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'UserPermission' => 
                  array (
                    'description' => '实例对应的用户权限列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '用户权限详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'UserId' => 
                        array (
                          'description' => '用户ID。',
                          'type' => 'string',
                          'example' => '51****',
                        ),
                        'UserNickName' => 
                        array (
                          'description' => '用户昵称。',
                          'type' => 'string',
                          'example' => 'test_nick_name',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => '174****',
                        ),
                        'PermDetails' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PermDetail' => 
                            array (
                              'description' => '权限详情列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '权限详情。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'OriginFrom' => 
                                  array (
                                    'description' => '权限授予来源信息。',
                                    'type' => 'string',
                                    'example' => 'XXX授权',
                                  ),
                                  'PermType' => 
                                  array (
                                    'description' => '权限类型，返回值如下：
- LOGIN：登录权限
- PERF：实例性能查看权限',
                                    'type' => 'string',
                                    'example' => 'LOGIN',
                                  ),
                                  'ExpireDate' => 
                                  array (
                                    'description' => '授权到期时间。',
                                    'type' => 'string',
                                    'example' => '2020-12-12 00:00:00',
                                  ),
                                  'CreateDate' => 
                                  array (
                                    'description' => '权限授予时间。',
                                    'type' => 'string',
                                    'example' => '2019-12-12 00:00:00',
                                  ),
                                  'UserAccessId' => 
                                  array (
                                    'description' => '用户权限记录ID。',
                                    'type' => 'string',
                                    'example' => '773****',
                                  ),
                                  'ExtraData' => 
                                  array (
                                    'description' => '额外数据，预留参数。',
                                    'type' => 'string',
                                    'example' => 'XXX',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"7D162AAE-6501-5691-BF14-D7018F662895\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"UserPermissions\\": {\\n    \\"UserPermission\\": [\\n      {\\n        \\"UserId\\": \\"51****\\",\\n        \\"UserNickName\\": \\"test_nick_name\\",\\n        \\"InstanceId\\": \\"174****\\",\\n        \\"PermDetails\\": {\\n          \\"PermDetail\\": [\\n            {\\n              \\"OriginFrom\\": \\"XXX授权\\",\\n              \\"PermType\\": \\"LOGIN\\",\\n              \\"ExpireDate\\": \\"2020-12-12 00:00:00\\",\\n              \\"CreateDate\\": \\"2019-12-12 00:00:00\\",\\n              \\"UserAccessId\\": \\"773****\\",\\n              \\"ExtraData\\": \\"XXX\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  },\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListInstanceUserPermissionsResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>7D162AAE-6501-5691-BF14-D7018F662895</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <UserPermissions>\\n        <UserId>51****</UserId>\\n        <UserNickName>test_nick_name</UserNickName>\\n        <InstanceId>174****</InstanceId>\\n        <PermDetails>\\n            <OriginFrom>XXX授权</OriginFrom>\\n            <PermType>LOGIN</PermType>\\n            <ExpireDate>2020-12-12 00:00:00</ExpireDate>\\n            <CreateDate>2019-12-12 00:00:00</CreateDate>\\n            <UserAccessId>773****</UserAccessId>\\n            <ExtraData>XXX</ExtraData>\\n        </PermDetails>\\n    </UserPermissions>\\n    <Success>true</Success>\\n</ListInstanceUserPermissionsResponse>","errorExample":""}]',
      'title' => '获取实例的用户权限列表',
    ),
    'ListDatabaseUserPermssions' => 
    array (
      'summary' => '调用ListDatabaseUserPermssions展示具备指定数据库权限的用户权限详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '-1',
          ),
        ),
        1 => 
        array (
          'name' => 'PermType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限类型，取值和说明如下：
- DATABASE： 库权限
- TABLE：表权限
- COLUMN：列权限',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DATABASE',
          ),
        ),
        2 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '123',
          ),
        ),
        3 => 
        array (
          'name' => 'Logic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否逻辑库。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        4 => 
        array (
          'name' => 'UserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户昵称。',
            'type' => 'string',
            'required' => false,
            'example' => 'search_user_name',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '10',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '满足条件的记录总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '68075D06-7406-4887-83A7-F558A4D28C13',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'UserPermissions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'UserPermission' => 
                  array (
                    'description' => '用户权限详情。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DbId' => 
                        array (
                          'description' => '库ID。',
                          'type' => 'string',
                          'example' => '1234',
                        ),
                        'TableName' => 
                        array (
                          'description' => '表名。',
                          'type' => 'string',
                          'example' => 'table_name',
                        ),
                        'UserId' => 
                        array (
                          'description' => '用户ID。',
                          'type' => 'string',
                          'example' => '14324',
                        ),
                        'SchemaName' => 
                        array (
                          'description' => '数据库名。',
                          'type' => 'string',
                          'example' => 'xxx@xxxx:3306',
                        ),
                        'Logic' => 
                        array (
                          'description' => '是否逻辑库。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'UserNickName' => 
                        array (
                          'description' => '用户昵称。',
                          'type' => 'string',
                          'example' => 'user_nick_name',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => '1443',
                        ),
                        'PermDetails' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PermDetail' => 
                            array (
                              'description' => '用户权限详情。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'OriginFrom' => 
                                  array (
                                    'description' => '权限申请来源描述',
                                    'type' => 'string',
                                    'example' => 'xxx grant',
                                  ),
                                  'PermType' => 
                                  array (
                                    'description' => '权限类型，取值和说明如下：
- QUERY：查询
- EXPORT：导出
- CORRECT：变更',
                                    'type' => 'string',
                                    'example' => 'QUERY',
                                  ),
                                  'ExpireDate' => 
                                  array (
                                    'description' => '权限过期时间',
                                    'type' => 'string',
                                    'example' => '2020-12-12 00:00:00',
                                  ),
                                  'CreateDate' => 
                                  array (
                                    'description' => '权限创建时间',
                                    'type' => 'string',
                                    'example' => '2019-12-12 00:00:00',
                                  ),
                                  'UserAccessId' => 
                                  array (
                                    'description' => '权限记录ID',
                                    'type' => 'string',
                                    'example' => '13434',
                                  ),
                                  'ExtraData' => 
                                  array (
                                    'description' => '附加信息，预留属性',
                                    'type' => 'string',
                                    'example' => 'DEFAULT',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'EnvType' => 
                        array (
                          'description' => '数据库所属环境。',
                          'type' => 'string',
                          'example' => 'product',
                        ),
                        'ColumnName' => 
                        array (
                          'description' => '字段名。',
                          'type' => 'string',
                          'example' => 'column_name',
                        ),
                        'DbType' => 
                        array (
                          'description' => '数据库类型。',
                          'type' => 'string',
                          'example' => 'mysql',
                        ),
                        'DsType' => 
                        array (
                          'description' => '资源权限类型。',
                          'type' => 'string',
                          'example' => 'DATABASE',
                        ),
                        'TableId' => 
                        array (
                          'description' => '表ID。',
                          'type' => 'string',
                          'example' => '42345',
                        ),
                        'SearchName' => 
                        array (
                          'description' => '数据库搜索名。',
                          'type' => 'string',
                          'example' => 'xxx',
                        ),
                        'Alias' => 
                        array (
                          'description' => '实例别名。',
                          'type' => 'string',
                          'example' => 'instance_alias',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"68075D06-7406-4887-83A7-F558A4D28C13\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"UserPermissions\\": {\\n    \\"UserPermission\\": [\\n      {\\n        \\"DbId\\": \\"1234\\",\\n        \\"TableName\\": \\"table_name\\",\\n        \\"UserId\\": \\"14324\\",\\n        \\"SchemaName\\": \\"xxx@xxxx:3306\\",\\n        \\"Logic\\": false,\\n        \\"UserNickName\\": \\"user_nick_name\\",\\n        \\"InstanceId\\": \\"1443\\",\\n        \\"PermDetails\\": {\\n          \\"PermDetail\\": [\\n            {\\n              \\"OriginFrom\\": \\"xxx grant\\",\\n              \\"PermType\\": \\"QUERY\\",\\n              \\"ExpireDate\\": \\"2020-12-12 00:00:00\\",\\n              \\"CreateDate\\": \\"2019-12-12 00:00:00\\",\\n              \\"UserAccessId\\": \\"13434\\",\\n              \\"ExtraData\\": \\"DEFAULT\\"\\n            }\\n          ]\\n        },\\n        \\"EnvType\\": \\"product\\",\\n        \\"ColumnName\\": \\"column_name\\",\\n        \\"DbType\\": \\"mysql\\",\\n        \\"DsType\\": \\"DATABASE\\",\\n        \\"TableId\\": \\"42345\\",\\n        \\"SearchName\\": \\"xxx\\",\\n        \\"Alias\\": \\"instance_alias\\"\\n      }\\n    ]\\n  },\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UserPermissions>\\n    <UserPermission>\\n        <Logic>false</Logic>\\n        <UserNickName>xxx</UserNickName>\\n        <DsType>DATABASE</DsType>\\n        <Alias>beihe_ent_prod</Alias>\\n        <PermDetails>\\n            <PermDetail>\\n                <ExpireDate>2020-10-31 00:00:00</ExpireDate>\\n                <UserAccessId>390915</UserAccessId>\\n                <PermType>QUERY</PermType>\\n                <OriginFrom>xxx</OriginFrom>\\n                <CreateDate>2019-11-21 15:07:45</CreateDate>\\n            </PermDetail>\\n            <PermDetail>\\n                <ExpireDate>2020-10-31 00:00:00</ExpireDate>\\n                <UserAccessId>390916</UserAccessId>\\n                <PermType>EXPORT</PermType>\\n                <OriginFrom>xxx</OriginFrom>\\n                <CreateDate>2019-11-21 15:07:45</CreateDate>\\n            </PermDetail>\\n            <PermDetail>\\n                <ExpireDate>2020-10-31 00:00:00</ExpireDate>\\n                <UserAccessId>390917</UserAccessId>\\n                <PermType>CORRECT</PermType>\\n                <OriginFrom>xxx</OriginFrom>\\n                <CreateDate>2019-11-21 15:07:45</CreateDate>\\n            </PermDetail>\\n        </PermDetails>\\n        <InstanceId>1434</InstanceId>\\n        <SearchName>xxx@xxxx:3306</SearchName>\\n        <DbId>123434</DbId>\\n        <UserId>432423</UserId>\\n        <DbType>drds</DbType>\\n        <EnvType>product</EnvType>\\n        <SchemaName>xxx</SchemaName>\\n    </UserPermission>\\n</UserPermissions>\\n<TotalCount>1</TotalCount>\\n<RequestId>68075D06-7406-4887-83A7-F558A4D28C13</RequestId>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '展示具备指定数据库权限的用户权限详情',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ListUserPermissions' => 
    array (
      'summary' => '调用ListUserPermissions展示指定用户所具备的库表权限。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'PermType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '资源权限类型，取值如下：

- DATABASE： 库权限
- TABLE：表权限
- COLUMN：列权限
- INSTANCE: 实例权限',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DATABASE',
          ),
        ),
        2 => 
        array (
          'name' => 'UserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户ID，可通过调用接口[GetUser](~~147098~~)或[ListUsers](~~141938~~)获取该参数的值。
>用户ID不是用户的阿里云Uid。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '51****',
          ),
        ),
        3 => 
        array (
          'name' => 'DatabaseName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库名。',
            'type' => 'string',
            'required' => false,
            'example' => 'db_name',
          ),
        ),
        4 => 
        array (
          'name' => 'SearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索关键词。例如，搜索实例权限，此处可填入DMS中的实例地址，如：rm-bp144d5ky4l4r****。',
            'type' => 'string',
            'required' => false,
            'example' => 'rm-bp144d5ky4l4r****',
          ),
        ),
        5 => 
        array (
          'name' => 'Logic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否逻辑库，取值：
- true：逻辑库
- false：物理库',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'EnvType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '环境类型，取值如下：
- product：生产环境
- dev：开发环境
- pre：预发环境
- test：测试环境
- sit：SIT环境
- uat：UAT环境
- pet：压测环境
- stag：STAG环境',
            'type' => 'string',
            'required' => false,
            'example' => 'dev',
          ),
        ),
        7 => 
        array (
          'name' => 'DbType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库类型，取值请参见[DbType参数说明](~~198106~~)。',
            'type' => 'string',
            'required' => false,
            'example' => 'polardb',
          ),
        ),
        8 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '5',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '满足条件记录总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C51420E3-144A-4A94-B473-8662FCF4AD10',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'UserPermissions' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'UserPermission' => 
                  array (
                    'description' => '用户权限信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DbId' => 
                        array (
                          'description' => '库ID。',
                          'type' => 'string',
                          'example' => '1860****',
                        ),
                        'TableName' => 
                        array (
                          'description' => '表名。',
                          'type' => 'string',
                          'example' => 'test_table',
                        ),
                        'UserId' => 
                        array (
                          'description' => '用户ID。',
                          'type' => 'string',
                          'example' => '51****',
                        ),
                        'SchemaName' => 
                        array (
                          'description' => '数据库名。',
                          'type' => 'string',
                          'example' => 'test_db',
                        ),
                        'Logic' => 
                        array (
                          'description' => '是否逻辑库，取值：
- true：逻辑库
- false：物理库',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'UserNickName' => 
                        array (
                          'description' => '用户名。',
                          'type' => 'string',
                          'example' => 'nick_name',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'string',
                          'example' => '174****',
                        ),
                        'PermDetails' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'PermDetail' => 
                            array (
                              'description' => '权限详情。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '权限详情',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'OriginFrom' => 
                                  array (
                                    'description' => '权限授予来源信息。',
                                    'type' => 'string',
                                    'example' => 'xxx授权',
                                  ),
                                  'PermType' => 
                                  array (
                                    'description' => '权限类型，返回值如下：
- QUERY：查询
- EXPORT：导出
- CORRECT：变更',
                                    'type' => 'string',
                                    'example' => 'QUERY',
                                  ),
                                  'ExpireDate' => 
                                  array (
                                    'description' => '授权到期时间。',
                                    'type' => 'string',
                                    'example' => '2020-12-12 00:00:00',
                                  ),
                                  'CreateDate' => 
                                  array (
                                    'description' => '权限授予时间。',
                                    'type' => 'string',
                                    'example' => '2019-12-12 00:00:00',
                                  ),
                                  'UserAccessId' => 
                                  array (
                                    'description' => '授权记录ID。',
                                    'type' => 'string',
                                    'example' => '758****',
                                  ),
                                  'ExtraData' => 
                                  array (
                                    'description' => '额外数据，预留参数。',
                                    'type' => 'string',
                                    'example' => 'xxx',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                        'EnvType' => 
                        array (
                          'description' => '数据库所属环境类型，返回值如下：
- product：生产环境
- dev：开发环境
- pre：预发环境
- test：测试环境
- sit：SIT环境
- uat：UAT环境
- pet：压测环境
- stag：STAG环境',
                          'type' => 'string',
                          'example' => 'dev',
                        ),
                        'ColumnName' => 
                        array (
                          'description' => '字段名。',
                          'type' => 'string',
                          'example' => 'column_name',
                        ),
                        'DbType' => 
                        array (
                          'description' => '数据库类型，返回值请参见[DbType参数说明](~~198106~~)。',
                          'type' => 'string',
                          'example' => 'polardb',
                        ),
                        'DsType' => 
                        array (
                          'description' => '权限类型，取值如下：
- DATABASE： 物理库权限
- LOGIC_DATABASE：逻辑库权限
- TABLE：物理表权限
- LOGIC_TABLE：逻辑表权限',
                          'type' => 'string',
                          'example' => 'DATABASE',
                        ),
                        'TableId' => 
                        array (
                          'description' => '表ID。',
                          'type' => 'string',
                          'example' => '13434',
                        ),
                        'SearchName' => 
                        array (
                          'description' => '库搜索名。',
                          'type' => 'string',
                          'example' => 'test_db@xxx:3306',
                        ),
                        'Alias' => 
                        array (
                          'description' => '实例别名。',
                          'type' => 'string',
                          'example' => 'instance_alias',
                        ),
                        'Host' => 
                        array (
                          'description' => '实例地址。',
                          'type' => 'string',
                          'example' => 'rm-bp144d5ky4l4r****',
                        ),
                        'Port' => 
                        array (
                          'description' => '实例端口。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '3306',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"C51420E3-144A-4A94-B473-8662FCF4AD10\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"UserPermissions\\": {\\n    \\"UserPermission\\": [\\n      {\\n        \\"DbId\\": \\"1860****\\",\\n        \\"TableName\\": \\"test_table\\",\\n        \\"UserId\\": \\"51****\\",\\n        \\"SchemaName\\": \\"test_db\\",\\n        \\"Logic\\": false,\\n        \\"UserNickName\\": \\"nick_name\\",\\n        \\"InstanceId\\": \\"174****\\",\\n        \\"PermDetails\\": {\\n          \\"PermDetail\\": [\\n            {\\n              \\"OriginFrom\\": \\"xxx授权\\",\\n              \\"PermType\\": \\"QUERY\\",\\n              \\"ExpireDate\\": \\"2020-12-12 00:00:00\\",\\n              \\"CreateDate\\": \\"2019-12-12 00:00:00\\",\\n              \\"UserAccessId\\": \\"758****\\",\\n              \\"ExtraData\\": \\"xxx\\"\\n            }\\n          ]\\n        },\\n        \\"EnvType\\": \\"dev\\",\\n        \\"ColumnName\\": \\"column_name\\",\\n        \\"DbType\\": \\"polardb\\",\\n        \\"DsType\\": \\"DATABASE\\",\\n        \\"TableId\\": \\"13434\\",\\n        \\"SearchName\\": \\"test_db@xxx:3306\\",\\n        \\"Alias\\": \\"instance_alias\\",\\n        \\"Host\\": \\"rm-bp144d5ky4l4r****\\",\\n        \\"Port\\": 3306\\n      }\\n    ]\\n  },\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListUserPermissionsResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>C51420E3-144A-4A94-B473-8662FCF4AD10</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <UserPermissions>\\n        <DbId>1860****</DbId>\\n        <TableName>test_table</TableName>\\n        <UserId>51****</UserId>\\n        <SchemaName>test_db</SchemaName>\\n        <Logic>false</Logic>\\n        <UserNickName>nick_name</UserNickName>\\n        <InstanceId>174****</InstanceId>\\n        <PermDetails>\\n            <OriginFrom>xxx授权</OriginFrom>\\n            <PermType>QUERY</PermType>\\n            <ExpireDate>2020-12-12 00:00:00</ExpireDate>\\n            <CreateDate>2019-12-12 00:00:00</CreateDate>\\n            <UserAccessId>758****</UserAccessId>\\n            <ExtraData>xxx</ExtraData>\\n        </PermDetails>\\n        <EnvType>dev</EnvType>\\n        <ColumnName>column_name</ColumnName>\\n        <DbType>polardb</DbType>\\n        <DsType>DATABASE</DsType>\\n        <TableId>13434</TableId>\\n        <SearchName>test_db@xxx:3306</SearchName>\\n        <Alias>instance_alias</Alias>\\n        <Host>rm-bp144d5ky4l4r****</Host>\\n        <Port>3306</Port>\\n    </UserPermissions>\\n    <Success>true</Success>\\n</ListUserPermissionsResponse>","errorExample":""}]',
      'title' => '查询指定用户拥有的库表权限',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'GrantUserPermission' => 
    array (
      'summary' => '授予用户实例、库、表权限。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => true,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'UserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户ID，可通过调用接口[GetUser](~~147098~~)或[ListUsers](~~141938~~)获取该参数的值。
>用户ID不是用户的阿里云Uid。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '51****',
          ),
        ),
        2 => 
        array (
          'name' => 'DsType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限类型，取值：
- INSTANCE: 实例权限
- DATABASE： 物理库权限
- LOGIC_DATABASE：逻辑库权限
- TABLE：物理表权限
- LOGIC_TABLE：逻辑表权限',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DATABASE',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，授权实例权限时需要指定。可通过调用接口[ListInstances](~~141936~~)或[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '174****',
          ),
        ),
        4 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库ID，可通过调用接口[ListDatabases](~~141873~~)获取物理库ID的值，调用接口[ListLogicDatabases](~~141874~~)获取逻辑库ID的值。
>DatabaseId的值即为DbId的值。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '1***',
          ),
        ),
        5 => 
        array (
          'name' => 'Logic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否是逻辑库，授权数据库权限时需要指定。取值：
- true：逻辑库
- false：物理库',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'TableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表ID，授权表权限时需要指定。可通过调用接口[ListTables](~~141878~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => '132***',
          ),
        ),
        7 => 
        array (
          'name' => 'TableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表名，授权表权限时需要指定。',
            'type' => 'string',
            'required' => false,
            'example' => 'table_name',
          ),
        ),
        8 => 
        array (
          'name' => 'PermTypes',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限类型，取值如下：
- **QUERY**：查询
- **EXPORT**：导出
- **CORRECT**：变更
- **LOGIN**：登录权限
- **PERF**：实例性能查看权限',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'QUERY',
          ),
        ),
        9 => 
        array (
          'name' => 'ExpireDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限过期时间。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2021-12-12 00:00:00',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A99CD576-1E18-4E86-931E-C3CCE56DC030',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A99CD576-1E18-4E86-931E-C3CCE56DC030\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<GrantUserPermissionResponse>\\n    <RequestId>A99CD576-1E18-4E86-931E-C3CCE56DC030</RequestId>\\n    <Success>true</Success>\\n</GrantUserPermissionResponse>","errorExample":""}]',
      'title' => '授予用户库表权限',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'RevokeUserPermission' => 
    array (
      'summary' => '回收用户实例、库、表权限。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'UserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '
用户ID，可通过调用接口[ListUsers](~~141938~~)或[GetUser](~~147098~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '51****',
          ),
        ),
        2 => 
        array (
          'name' => 'DsType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限类型，取值如下：
- **INSTANCE**：实例权限
- **DATABASE**：物理库权限
- **LOGIC_DATABASE**：逻辑库权限
- **TABLE**：物理表权限
- **LOGIC_TABLE**：逻辑表权限',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'DATABASE',
          ),
        ),
        3 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，回收实例权限时需要指定。可通过调用接口[ListInstances](~~141936~~)或[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '174****',
          ),
        ),
        4 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库ID（DatabaseId），数据库分为物理库和逻辑库两种：
- 物理库ID：可通过调用接口[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)获取该参数的值。
- 逻辑库ID：可通过调用接口[ListLogicDatabases](~~141874~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '1860****',
          ),
        ),
        5 => 
        array (
          'name' => 'Logic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为逻辑库，取值如下：
- **true**：逻辑库
- **false**：物理库

> - 如果您的数据库ID为逻辑库ID，此参数取值为**true**。
> - 如果您的数据库ID为物理库ID，此参数取值为**false**。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        6 => 
        array (
          'name' => 'TableId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表ID，回收表权限时需要指定。可通过调用接口[ListTables](~~141878~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => '13****',
          ),
        ),
        7 => 
        array (
          'name' => 'TableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表名，可通过调用接口[ListTables](~~141878~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'table_name',
          ),
        ),
        8 => 
        array (
          'name' => 'PermTypes',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限类型，取值如下：
- **QUERY**：查询
- **EXPORT**：导出
- **CORRECT**：变更
- **LOGIN**：登录权限
- **PERF**：实例性能查看权限',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'CORRECT',
          ),
        ),
        9 => 
        array (
          'name' => 'UserAccessId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户权限记录ID，可通过调用接口[ListUserPermission](~~146957~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '774****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A99CD576-1E18-4E86-931E-C3CCE56D****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'MissingUserId',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UserId is mandatory for this action.',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A99CD576-1E18-4E86-931E-C3CCE56D****\\",\\n  \\"ErrorCode\\": \\"MissingUserId\\",\\n  \\"ErrorMessage\\": \\"UserId is mandatory for this action.\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RevokeUserPermissionResponse>\\n    <RequestId>A99CD576-1E18-4E86-931E-C3CCE56D****</RequestId>\\n    <Success>true</Success>\\n</RevokeUserPermissionResponse>","errorExample":""}]',
      'title' => '回收用户库表权限',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'CreateStandardGroup' => 
    array (
      'summary' => '调用CreateStandardGroup创建安全规则集。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => '安全规则集名称。',
            'type' => 'string',
            'required' => true,
            'example' => '金融线-生产',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全规则集描述。',
            'type' => 'string',
            'required' => true,
            'example' => '金融线生产环境实例规则',
          ),
        ),
        2 => 
        array (
          'name' => 'DbType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例引擎类型，取值请参见[DbType参数说明](~~198106~~)。',
            'type' => 'string',
            'required' => true,
            'example' => 'mysql',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '项目',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '34E01EDD-6A16-4CF0-9541-C644D1BE01AA',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息。',
                'type' => 'string',
                'example' => 'xxx',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '403',
              ),
              'StandardGroup' => 
              array (
                'description' => '新建的规则集。',
                'type' => 'object',
                'properties' => 
                array (
                  'GroupName' => 
                  array (
                    'title' => '',
                    'description' => '规则集名称。',
                    'type' => 'string',
                    'example' => '金融线-生产',
                  ),
                  'Description' => 
                  array (
                    'description' => '规则集描述。',
                    'type' => 'string',
                    'example' => '金融线生产环境实例规则',
                  ),
                  'DbType' => 
                  array (
                    'description' => '实例引擎类型，返回值请参见[DbType参数说明](~~198106~~)。',
                    'type' => 'string',
                    'example' => 'mysql',
                  ),
                  'LastMenderId' => 
                  array (
                    'description' => '最近修改者的用户ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '51****',
                  ),
                  'GroupMode' => 
                  array (
                    'description' => '管控模式，返回值如下：
- **NONE_CONTROL**：自由操作
- **STABLE**：稳定变更
- **COMMON**：安全协同',
                    'type' => 'string',
                    'example' => 'COMMON',
                  ),
                  'GroupId' => 
                  array (
                    'description' => '安全规则集ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '41****
',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"34E01EDD-6A16-4CF0-9541-C644D1BE01AA\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"xxx\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"StandardGroup\\": {\\n    \\"GroupName\\": \\"金融线-生产\\",\\n    \\"Description\\": \\"金融线生产环境实例规则\\",\\n    \\"DbType\\": \\"mysql\\",\\n    \\"LastMenderId\\": 0,\\n    \\"GroupMode\\": \\"COMMON\\",\\n    \\"GroupId\\": 0\\n  }\\n}","errorExample":""},{"type":"xml","example":"<CreateStandardGroupResponse>\\n    <RequestId>8EB6AE45-B52E-58DA-A400-58F4F31373DA</RequestId>\\n    <StandardGroup>\\n        <GroupName>金融线-生产</GroupName>\\n        <Description>金融线生产环境实例规则</Description>\\n        <LastMenderId>51****</LastMenderId>\\n        <GroupMode>COMMON</GroupMode>\\n        <DbType>mysql</DbType>\\n    </StandardGroup>\\n    <Success>true</Success>\\n</CreateStandardGroupResponse>","errorExample":""}]',
      'title' => '创建安全规则集',
    ),
    'ListStandardGroups' => 
    array (
      'summary' => '获取安全规则集列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '34E01EDD-6A16-4CF0-9541-C644D1BE01AA',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'xxx',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '403',
              ),
              'StandardGroupList' => 
              array (
                'description' => '安全规则集列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '安全规则集。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'GroupName' => 
                    array (
                      'title' => '',
                      'description' => '安全规则集名称。',
                      'type' => 'string',
                      'example' => '金融线-生产',
                    ),
                    'Description' => 
                    array (
                      'description' => '安全规则集描述。',
                      'type' => 'string',
                      'example' => '金融线生产环境实例规则',
                    ),
                    'DbType' => 
                    array (
                      'description' => '实例引擎类型，取值请参见[DbType参数说明](~~198106~~)。',
                      'type' => 'string',
                      'example' => 'mysql',
                    ),
                    'LastMenderId' => 
                    array (
                      'description' => '最近修改人的用户ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '51****',
                    ),
                    'GroupMode' => 
                    array (
                      'description' => '管控模式，返回值如下：
- **NONE_CONTROL**：自由操作
- **STABLE**：稳定变更
- **COMMON**：安全协同',
                      'type' => 'string',
                      'example' => 'COMMON',
                    ),
                    'GroupId' => 
                    array (
                      'description' => '安全规则集ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '41****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"34E01EDD-6A16-4CF0-9541-C644D1BE01AA\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"xxx\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"StandardGroupList\\": [\\n    {\\n      \\"GroupName\\": \\"金融线-生产\\",\\n      \\"Description\\": \\"金融线生产环境实例规则\\",\\n      \\"DbType\\": \\"mysql\\",\\n      \\"LastMenderId\\": 0,\\n      \\"GroupMode\\": \\"COMMON\\",\\n      \\"GroupId\\": 0\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListStandardGroupsResponse>\\n    <RequestId>34E01EDD-6A16-4CF0-9541-C644D1BE01AA</RequestId>\\n    <Success>true</Success>\\n    <StandardGroupList>\\n        <GroupName>金融线-生产</GroupName>\\n        <Description>金融线生产环境实例规则</Description>\\n        <DbType>mysql</DbType>\\n        <LastMenderId>51****</LastMenderId>\\n        <GroupMode>COMMON</GroupMode>\\n        <GroupId>41****</GroupId>\\n    </StandardGroupList>\\n</ListStandardGroupsResponse>","errorExample":""}]',
      'title' => '获取安全规则集列表',
    ),
    'UpdateStandardGroup' => 
    array (
      'summary' => '使用该API可以调整指定安全规则集的名称及描述信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '规则集ID，可通过 ListStandardGroups 获取',
            'description' => '安全规则集ID。您可调用[ListStandardGroups](~~465940~~)接口获取安全规则集ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '242***',
          ),
        ),
        1 => 
        array (
          'name' => 'GroupName',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '安全规则名称',
            'description' => '安全规则集名称。',
            'type' => 'string',
            'required' => true,
            'example' => 'poc_test',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '安全规则描述',
            'description' => '安全规则集的描述。',
            'type' => 'string',
            'required' => true,
            'example' => '生产环境测试规则
',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '23****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '4E1D2B4D-3E53-4ABC-999D-1D2520B3471A',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码，请求异常时返回。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'StandardGroup' => 
              array (
                'description' => '安全规则集。',
                'type' => 'object',
                'properties' => 
                array (
                  'GroupName' => 
                  array (
                    'title' => '',
                    'description' => '安全规则集名称。',
                    'type' => 'string',
                    'example' => 'poc_test',
                  ),
                  'Description' => 
                  array (
                    'description' => '安全规则集描述。',
                    'type' => 'string',
                    'example' => '生产环境测试规则
',
                  ),
                  'DbType' => 
                  array (
                    'description' => '安全规则服务的数据库类型。',
                    'type' => 'string',
                    'example' => 'mysql',
                  ),
                  'LastMenderId' => 
                  array (
                    'description' => '最近修改安全规则的用户ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '51****
',
                  ),
                  'GroupMode' => 
                  array (
                    'description' => '管控模式，返回值如下：
- **NONE_CONTROL**：自由操作。
- **STABLE**：稳定变更。
- **COMMON**：安全协同。',
                    'type' => 'string',
                    'example' => 'COMMON',
                  ),
                  'GroupId' => 
                  array (
                    'description' => '安全规则集ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '41****
',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4E1D2B4D-3E53-4ABC-999D-1D2520B3471A\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"StandardGroup\\": {\\n    \\"GroupName\\": \\"poc_test\\",\\n    \\"Description\\": \\"生产环境测试规则\\\\n\\",\\n    \\"DbType\\": \\"mysql\\",\\n    \\"LastMenderId\\": 0,\\n    \\"GroupMode\\": \\"COMMON\\",\\n    \\"GroupId\\": 0\\n  }\\n}","type":"json"}]',
      'title' => '调整安全规则集的配置信息',
    ),
    'DeleteStandardGroup' => 
    array (
      'summary' => '调用DeleteStandardGroup接口可以删除已创建的安全规则集。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '规则集ID，可通过 ListStandardGroups 获取',
            'description' => '安全规则集ID。您可调用[ListStandardGroups](~~465940~~)接口获取安全规则集ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '242***',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '23****
',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'C5B8E84B-42B6-4374-AD5A-6264E1753325',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C5B8E84B-42B6-4374-AD5A-6264E1753325\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\"\\n}","type":"json"}]',
      'title' => '删除安全规则集',
      'description' => '使用该API前，请确保该安全规则集没有关联实例。',
    ),
    'GetStandardGroup' => 
    array (
      'summary' => '调用GetStandardGroup接口可以获取到租户下已有的安全规则集信息，包含规则名称、描述及规则关联实例的类型等信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'GroupId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '规则集ID，可通过 ListStandardGroups 获取',
            'description' => '安全规则集ID。您可调用[ListStandardGroups](~~465940~~)接口获取安全规则集ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '242***',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '23****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'BF7E9543-F431-566A-991A-B5C493EA36C3',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError
',
              ),
              'StandardGroup' => 
              array (
                'description' => '安全规则集。',
                'type' => 'object',
                'properties' => 
                array (
                  'GroupName' => 
                  array (
                    'title' => '',
                    'description' => '安全规则集名称。',
                    'type' => 'string',
                    'example' => 'poc_test',
                  ),
                  'Description' => 
                  array (
                    'description' => '安全规则集描述。',
                    'type' => 'string',
                    'example' => '生产环境测试规则',
                  ),
                  'DbType' => 
                  array (
                    'description' => '引擎类型。',
                    'type' => 'string',
                    'example' => 'mysql',
                  ),
                  'LastMenderId' => 
                  array (
                    'description' => '最近修改安全规则的用户ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '513***',
                  ),
                  'GroupMode' => 
                  array (
                    'description' => '管控模式，返回值如下：
- **NONE_CONTROL**：自由操作。
- **STABLE**：稳定变更。
- **COMMON**：安全协同。',
                    'type' => 'string',
                    'example' => 'COMMON',
                  ),
                  'GroupId' => 
                  array (
                    'description' => '安全规则集ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '41****',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"BF7E9543-F431-566A-991A-B5C493EA36C3\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\\\n\\",\\n  \\"StandardGroup\\": {\\n    \\"GroupName\\": \\"poc_test\\",\\n    \\"Description\\": \\"生产环境测试规则\\",\\n    \\"DbType\\": \\"mysql\\",\\n    \\"LastMenderId\\": 0,\\n    \\"GroupMode\\": \\"COMMON\\",\\n    \\"GroupId\\": 0\\n  }\\n}","type":"json"}]',
      'title' => '获取安全规则集',
    ),
    'AddDesensitizationRule' => 
    array (
      'summary' => '添加脱敏规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则名称。',
            'type' => 'string',
            'required' => true,
            'example' => '脱敏算法测试',
          ),
        ),
        1 => 
        array (
          'name' => 'RuleType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '脱敏算法。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'PLAINTEXT' => '明文',
              'TRANSFORM' => '变换',
              'ENCRYPT' => '加密',
              'REPLACE' => '替换',
              'HASH' => '哈希',
              'MASK' => '遮掩',
            ),
            'example' => 'HASH',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleDescription',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '规则描述。',
            'type' => 'string',
            'required' => false,
            'example' => '哈希算法',
          ),
        ),
        3 => 
        array (
          'name' => 'FunctionType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '脱敏算法类型。',
            'type' => 'string',
            'required' => true,
            'enumValueTitles' => 
            array (
              'FIX_POS' => '固定位置遮掩',
              'DATE_ROUNDING' => '日期取整',
              'PLAINTEXT' => '明文',
              'SHA1' => 'SHA1',
              'HMAC' => 'HMAC',
              'STRING_TRANSFORM' => '字符位移',
              'NUMBER_ROUNDING' => '数字取整',
              'AES' => 'AES',
              'SHA256' => 'SHA256',
              'DES' => 'DES',
              'MAP_REPLACE' => '映射替换',
              'FIX_CHAR' => '固定字符遮掩',
              'DEFAULT' => '全遮掩',
              'RANDOM_REPLACE' => '随机替换',
              'MD5' => 'MD5',
            ),
            'example' => 'MD5',
          ),
        ),
        4 => 
        array (
          'name' => 'FunctionParams',
          'in' => 'formData',
          'style' => 'flat',
          'schema' => 
          array (
            'description' => '算法参数。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '参数名。',
              'type' => 'object',
              'required' => false,
              'additionalProperties' => 
              array (
                'type' => 'string',
                'description' => '参数值。',
                'example' => '{paramName: salt,  paramValue: 1}',
              ),
            ),
            'required' => false,
          ),
        ),
        5 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，取值：

- **true**：请求成功。

- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RuleId' => 
              array (
                'description' => '生成的脱敏规则ID。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '35***',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"RuleId\\": 0\\n}","errorExample":""},{"type":"xml","example":"<AddDesensitizationRuleResponse>\\n    <RequestId>0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>true</Success>\\n</AddDesensitizationRuleResponse>","errorExample":""}]',
      'title' => '添加脱敏规则',
    ),
    'ListDesensitizationRule' => 
    array (
      'summary' => '获取脱敏规则列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。最大值不超过100。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
          ),
        ),
        2 => 
        array (
          'name' => 'RuleType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '脱敏算法。',
            'type' => 'string',
            'required' => false,
            'example' => 'HASH',
          ),
        ),
        3 => 
        array (
          'name' => 'FuncType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '脱敏算法类型。',
            'type' => 'string',
            'required' => false,
            'example' => 'MD5',
          ),
        ),
        4 => 
        array (
          'name' => 'RuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '脱敏规则名称。',
            'type' => 'string',
            'required' => false,
            'example' => '脱敏规则测试',
          ),
        ),
        5 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '脱敏规则ID。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => '返回值。',
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'title' => 'TotalCount本次请求条件下的数据总量，此参数为可选参数，默认可不返回',
                'description' => '本次请求条件下的数据总量，此参数为可选参数，默认不返回。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E76DD2E7-EBAC-5724-B163-19AAC233F8F2',
              ),
              'ErrorCode' => 
              array (
                'title' => '表示当前调用返回读取到的位置，空代表数据已经读取完毕',
                'description' => '错误码。',
                'type' => 'string',
                'required' => true,
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，取值：
- true：请求成功。
- false：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DesensitizationRuleList' => 
              array (
                'description' => '脱敏规则列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '结构体。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'RuleName' => 
                    array (
                      'description' => '脱敏规则名称。',
                      'type' => 'string',
                      'example' => '脱敏规则测试',
                    ),
                    'RuleType' => 
                    array (
                      'description' => '脱敏算法。',
                      'type' => 'string',
                      'example' => 'HASH',
                    ),
                    'RuleDesc' => 
                    array (
                      'description' => '规则描述。',
                      'type' => 'string',
                      'example' => '哈希脱敏算法',
                    ),
                    'FunctionType' => 
                    array (
                      'description' => '算法类型。',
                      'type' => 'string',
                      'example' => 'MD5',
                    ),
                    'FuncParams' => 
                    array (
                      'description' => '参数。',
                      'type' => 'string',
                      'example' => '{paramName: salt, paramValue: 1}',
                    ),
                    'FuncSample' => 
                    array (
                      'description' => '示例。',
                      'type' => 'string',
                      'example' => '[{paramName: testStr, paramValue: 1}]',
                    ),
                    'LastModifierId' => 
                    array (
                      'description' => '近期修改脱敏规则用户ID。',
                      'type' => 'string',
                      'example' => '2',
                    ),
                    'LastModifierName' => 
                    array (
                      'description' => '最后修改脱敏规则的用户名称。',
                      'type' => 'string',
                      'example' => '测试用户',
                    ),
                    'ReferenceCount' => 
                    array (
                      'description' => '使用脱敏规则次数。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '1',
                    ),
                    'RuleId' => 
                    array (
                      'description' => '脱敏规则ID。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '23',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
        201 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"E76DD2E7-EBAC-5724-B163-19AAC233F8F2\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"DesensitizationRuleList\\": [\\n    {\\n      \\"RuleName\\": \\"脱敏规则测试\\",\\n      \\"RuleType\\": \\"HASH\\",\\n      \\"RuleDesc\\": \\"哈希脱敏算法\\",\\n      \\"FunctionType\\": \\"MD5\\",\\n      \\"FuncParams\\": \\"{paramName: salt, paramValue: 1}\\",\\n      \\"FuncSample\\": \\"[{paramName: testStr, paramValue: 1}]\\",\\n      \\"LastModifierId\\": \\"2\\",\\n      \\"LastModifierName\\": \\"测试用户\\",\\n      \\"ReferenceCount\\": 1,\\n      \\"RuleId\\": 23\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListDesensitizationRuleResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>E76DD2E7-EBAC-5724-B163-19AAC233F8F2</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>true</Success>\\n    <DesensitizationRuleList>\\n        <RuleName>脱敏规则测试</RuleName>\\n        <RuleType>HASH</RuleType>\\n        <RuleDesc>哈希脱敏算法</RuleDesc>\\n        <FunctionType>MD5</FunctionType>\\n        <FuncParams>{paramName: salt, paramValue: 1}</FuncParams>\\n        <FuncSample>[{paramName: testStr, paramValue: 1}]</FuncSample>\\n        <LastModifierId>2</LastModifierId>\\n        <LastModifierName>测试用户</LastModifierName>\\n        <ReferenceCount>1</ReferenceCount>\\n        <RuleId>23</RuleId>\\n    </DesensitizationRuleList>\\n</ListDesensitizationRuleResponse>","errorExample":""}]',
      'title' => '获取脱敏规则列表',
      'extraInfo' => '
',
    ),
    'ModifyDesensitizationStrategy' => 
    array (
      'summary' => '修改字段绑定的脱敏规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库ID，可以调用[ListDatabases](~~141873~~)接口获取。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '123',
          ),
        ),
        1 => 
        array (
          'name' => 'IsLogic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库是逻辑库，取值：
- **true**：物理库。
- **false**：逻辑库。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'false',
          ),
        ),
        2 => 
        array (
          'name' => 'SchemaName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库名，可以调用[ListSensitiveColumns](~~188103~~)接口获取该参数的值。
> - 物理库名：您还可以调用[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)接口获取该参数的值。
> - 逻辑库名：您还可以调用[ListLogicDatabases](~~141874~~)或[SearchDatabase](~~141876~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'test_schema',
          ),
        ),
        3 => 
        array (
          'name' => 'TableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表名，可以调用[ListSensitiveColumns](~~188103~~)接口获取该参数的值。
>您也可以调用[ListTables](~~141878~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'test_table',
          ),
        ),
        4 => 
        array (
          'name' => 'ColumnName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '字段名，可调用[ListSensitiveColumns](~~188103~~)接口获取该参数的值。
>您也可以调用[ListColumns](~~141870~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'test_column',
          ),
        ),
        5 => 
        array (
          'name' => 'RuleId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '脱敏规则ID。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '53',
          ),
        ),
        6 => 
        array (
          'name' => 'IsReset',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否重置脱敏规则。取值：
- **true**：重置脱敏规则。
- **false（默认）**：不重置脱敏规则。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        7 => 
        array (
          'name' => 'IsDefault',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '字段设置的脱敏算法，默认值为false。取值如下：

- **true**：默认的脱敏算法。
- **false**：半脱敏算法。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
        8 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '283C461F-11D8-48AA-B695-DF092DA32AF3',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，取值：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'false',
              ),
              'Result' => 
              array (
                'description' => '结果值。',
                'type' => 'boolean',
                'example' => 'True',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"283C461F-11D8-48AA-B695-DF092DA32AF3\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": false,\\n  \\"Result\\": true\\n}","errorExample":""},{"type":"xml","example":"<ModifyDesensitizationStrategyResponse>\\n    <RequestId>283C461F-11D8-48AA-B695-DF092DA32AF3</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>false</Success>\\n    <Result>true</Result>\\n</ModifyDesensitizationStrategyResponse>","errorExample":""}]',
      'title' => '修改字段绑定的脱敏规则',
      'extraInfo' => '
',
    ),
    'ListClassificationTemplates' => 
    array (
      'summary' => '调用ListClassificationTemplates接口，获取分类分级模板列表信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。

> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '90260530-565C-42B9-A6E8-893481FE6AB6',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'TemplateList' => 
              array (
                'description' => '模板列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'TemplateId' => 
                    array (
                      'title' => '分类分级模板ID',
                      'description' => '分类分级模板ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '3**',
                    ),
                    'Name' => 
                    array (
                      'title' => '分类分级模板名称',
                      'description' => '分类分级模板名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'TemplateType' => 
                    array (
                      'title' => '分类分级模板类型
- INNER：内置
- USER_DEFINE：自定义',
                      'description' => '分类分级模板类型。取值：
- **INNER**：内置
- **USER_DEFINE**：自定义',
                      'type' => 'string',
                      'example' => 'USER_DEFINE',
                    ),
                    'Remark' => 
                    array (
                      'title' => '备注信息',
                      'description' => '备注信息。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"90260530-565C-42B9-A6E8-893481FE6AB6\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"TemplateList\\": [\\n    {\\n      \\"TemplateId\\": 0,\\n      \\"Name\\": \\"test\\",\\n      \\"TemplateType\\": \\"USER_DEFINE\\",\\n      \\"Remark\\": \\"test\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListClassificationTemplatesResponse>\\n    <RequestId>90260530-565C-42B9-A6E8-893481FE6AB6</RequestId>\\n    <Success>true</Success>\\n    <TemplateList>\\n        <Name>test</Name>\\n        <TemplateType>USER_DEFINE</TemplateType>\\n        <Remark>test</Remark>\\n    </TemplateList>\\n</ListClassificationTemplatesResponse>","errorExample":""}]',
      'title' => '获取分类分级模板列表',
    ),
    'ListSensitiveDataAuditLog' => 
    array (
      'summary' => '调用ListSensitiveDataAuditLog接口，查看敏感信息审计日志详情。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'StartTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始时间，时间格式为yyyy-MM-DD HH:mm:ss。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-11-18 10:00:00',
          ),
        ),
        1 => 
        array (
          'name' => 'EndTime',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '结束时间，时间格式为yyyy-MM-DD HH:mm:ss。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2022-11-18 11:00:00',
          ),
        ),
        2 => 
        array (
          'name' => 'ModuleName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '功能模块，缺省则返回所有功能模块的敏感数据日志。取值如下：

- **SQL_CONSOLE**：数据查询
- **SQL_CONSOLE_EXPORT**：查询结果导出
- **DATA_CHANGE**：数据变更
- **DATA_EXPORT**：数据导出',
            'type' => 'string',
            'required' => false,
            'example' => 'SQL_CONSOLE',
          ),
        ),
        3 => 
        array (
          'name' => 'OpUserName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '操作人昵称。',
            'type' => 'string',
            'required' => false,
            'example' => 'ExampleOpUserName',
          ),
        ),
        4 => 
        array (
          'name' => 'DbName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '敏感数据所在数据库名。',
            'type' => 'string',
            'required' => false,
            'example' => 'ExampleDbName',
          ),
        ),
        5 => 
        array (
          'name' => 'TableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '敏感数据所在数据表名。',
            'type' => 'string',
            'required' => false,
            'example' => 'ExampleTableName',
          ),
        ),
        6 => 
        array (
          'name' => 'ColumnName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '敏感数据字段名。',
            'type' => 'string',
            'required' => false,
            'example' => 'ExampleColumnName',
          ),
        ),
        7 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。例如：100条。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'maximum' => '100',
            'minimum' => '1',
            'example' => '100',
            'default' => '20',
          ),
        ),
        8 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开始页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'minimum' => '1',
            'example' => '1',
          ),
        ),
        9 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E0D21075-CD3E-4D98-8264-FD8AD04A63B6',
              ),
              'TotalCount' => 
              array (
                'description' => '日志总数据量。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '100',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '403',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'SensitiveDataAuditLogList' => 
              array (
                'description' => '敏感数据审核日志列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'UserName' => 
                    array (
                      'description' => '操作人员名称。',
                      'type' => 'string',
                      'example' => 'ExampleUserName',
                    ),
                    'UserId' => 
                    array (
                      'description' => '操作人员ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1**',
                    ),
                    'ModuleName' => 
                    array (
                      'description' => '功能模块名称。',
                      'type' => 'string',
                      'example' => 'SQL_CONSOLE',
                    ),
                    'DbDisplayName' => 
                    array (
                      'description' => '搜索的数据库名。',
                      'type' => 'string',
                      'example' => 'ExampleDbName@xxx.xxx.xxx.xxx:3306',
                    ),
                    'OpTime' => 
                    array (
                      'description' => '操作时间，时间格式为yyyy-MM-DD HH:mm:ss。',
                      'type' => 'string',
                      'example' => '2022-11-18 10:01:00',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12****',
                    ),
                    'TargetName' => 
                    array (
                      'description' => '操作对象详情。格式为：
- 操作对象名称-操作对象ID
- 操作对象名称（操作对象ID）',
                      'type' => 'string',
                      'example' => '工单 - 1****',
                    ),
                    'SensitiveDataLog' => 
                    array (
                      'description' => '敏感数据日志信息。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'type' => 'object',
                        'properties' => 
                        array (
                          'TableName' => 
                          array (
                            'description' => '敏感数据所在数据表名。',
                            'type' => 'string',
                            'example' => 'ExampleTableName',
                          ),
                          'ColumnName' => 
                          array (
                            'description' => '敏感数据字段名。',
                            'type' => 'string',
                            'example' => 'ExampleColumnName',
                          ),
                          'SecurityLevel' => 
                          array (
                            'description' => '敏感等级，可分为：
- **低敏感**
- **中敏感**
- **高敏感**',
                            'type' => 'string',
                            'example' => '低敏感',
                          ),
                          'ColumnPermissionType' => 
                          array (
                            'description' => '用户的字段权限。说明如下：
- **无权限**
- **半脱敏权限**
- **明文权限**
- **变更权限**
- **开启脱敏配置**
- **关闭脱敏配置**',
                            'type' => 'string',
                            'example' => '变更权限',
                          ),
                          'DesensitizationRule' => 
                          array (
                            'description' => '脱敏算法。',
                            'type' => 'string',
                            'example' => '系统默认-全遮掩',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E0D21075-CD3E-4D98-8264-FD8AD04A63B6\\",\\n  \\"TotalCount\\": 100,\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"SensitiveDataAuditLogList\\": [\\n    {\\n      \\"UserName\\": \\"ExampleUserName\\",\\n      \\"UserId\\": 0,\\n      \\"ModuleName\\": \\"SQL_CONSOLE\\",\\n      \\"DbDisplayName\\": \\"ExampleDbName@xxx.xxx.xxx.xxx:3306\\",\\n      \\"OpTime\\": \\"2022-11-18 10:01:00\\",\\n      \\"InstanceId\\": 0,\\n      \\"TargetName\\": \\"工单 - 1****\\",\\n      \\"SensitiveDataLog\\": [\\n        {\\n          \\"TableName\\": \\"ExampleTableName\\",\\n          \\"ColumnName\\": \\"ExampleColumnName\\",\\n          \\"SecurityLevel\\": \\"低敏感\\",\\n          \\"ColumnPermissionType\\": \\"变更权限\\",\\n          \\"DesensitizationRule\\": \\"系统默认-全遮掩\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListSensitiveDataAuditLogResponse>\\n    <RequestId>E0D21075-CD3E-4D98-8264-FD8AD04A63B6</RequestId>\\n    <TotalCount>100</TotalCount>\\n    <Success>true</Success>\\n    <SensitiveDataAuditLogList>\\n        <UserName>ExampleUserName</UserName>\\n        <ModuleName>SQL_CONSOLE</ModuleName>\\n        <DbDisplayName>ExampleDbName@xxx.xxx.xxx.xxx:3306</DbDisplayName>\\n        <OpTime>2022-11-18 10:01:00</OpTime>\\n        <TargetName>工单 - 1****</TargetName>\\n        <SensitiveDataLog>\\n            <TableName>ExampleTableName</TableName>\\n            <ColumnName>ExampleColumnName</ColumnName>\\n            <SecurityLevel>低敏感</SecurityLevel>\\n            <ColumnPermissionType>变更权限</ColumnPermissionType>\\n            <DesensitizationRule>系统默认-全遮掩</DesensitizationRule>\\n        </SensitiveDataLog>\\n    </SensitiveDataAuditLogList>\\n</ListSensitiveDataAuditLogResponse>","errorExample":""}]',
      'title' => '查看敏感信息审计日志详情',
    ),
    'ListSensitiveColumns' => 
    array (
      'summary' => '调用ListSensitiveColumns搜索敏感字段列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3',
          ),
        ),
        1 => 
        array (
          'name' => 'SchemaName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库名，可通过调用接口[SearchDatabase](~~141876~~)获取该参数的值。
>您也可以通过调用接口[ListDatabases](~~141873~~)获取物理库的SchemaName值，调用接口[ListLogicDatabases](~~141874~~)获取逻辑库的SchemaName值。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'test_schema',
          ),
        ),
        2 => 
        array (
          'name' => 'TableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表名，可通过调用接口[ListTables](~~141878~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'test_table',
          ),
        ),
        3 => 
        array (
          'name' => 'ColumnName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '字段名，可通过调用接口[ListColumns](~~141870~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'test_column',
          ),
        ),
        4 => 
        array (
          'name' => 'SecurityLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '字段敏感等级，取值如下：
- SENSITIVE： 中敏感
- CONFIDENTIAL： 高敏感',
            'type' => 'string',
            'required' => false,
            'example' => 'SENSITIVE',
          ),
        ),
        5 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        6 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '100',
          ),
        ),
        7 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库ID（DatabaseId），可通过调用接口[SearchDatabase](~~141876~~)获取该参数的值。
>您也可以通过调用接口[ListDatabases](~~141873~~)获取物理库ID的值，调用接口[ListLogicDatabases](~~141874~~)获取逻辑库ID的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1860',
          ),
        ),
        8 => 
        array (
          'name' => 'Logic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为逻辑库，取值：
- true：逻辑库
- false：物理库',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'TotalCount' => 
              array (
                'description' => '数据总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '09D82FD7-F87F-59EF-AA82-AEF71B09E306',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'SensitiveColumnList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SensitiveColumn' => 
                  array (
                    'description' => '敏感字段列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '字段详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ColumnName' => 
                        array (
                          'description' => '字段名。',
                          'type' => 'string',
                          'example' => 'test_column',
                        ),
                        'TableName' => 
                        array (
                          'description' => '表名。',
                          'type' => 'string',
                          'example' => 'test_table',
                        ),
                        'SecurityLevel' => 
                        array (
                          'description' => '字段敏感等级，返回值如下：
- SENSITIVE： 敏感
- CONFIDENTIAL： 机密',
                          'type' => 'string',
                          'example' => 'SENSITIVE',
                        ),
                        'ColumnCount' => 
                        array (
                          'description' => '敏感字段个数。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'SchemaName' => 
                        array (
                          'description' => '数据库名。',
                          'type' => 'string',
                          'example' => 'test_schema',
                        ),
                        'FunctionType' => 
                        array (
                          'description' => '脱敏算法类型，返回值如下：

- DEFAULT：全遮掩（默认）
- FIX_POS：固定位置
- FIX_CHAR：固定字符',
                          'type' => 'string',
                          'example' => 'DEFAULT',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"TotalCount\\": 1,\\n  \\"RequestId\\": \\"09D82FD7-F87F-59EF-AA82-AEF71B09E306\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"SensitiveColumnList\\": {\\n    \\"SensitiveColumn\\": [\\n      {\\n        \\"ColumnName\\": \\"test_column\\",\\n        \\"TableName\\": \\"test_table\\",\\n        \\"SecurityLevel\\": \\"SENSITIVE\\",\\n        \\"ColumnCount\\": 1,\\n        \\"SchemaName\\": \\"test_schema\\",\\n        \\"FunctionType\\": \\"DEFAULT\\"\\n      }\\n    ]\\n  },\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListSensitiveColumnsResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>09D82FD7-F87F-59EF-AA82-AEF71B09E306</RequestId>\\n    <SensitiveColumnList>\\n        <ColumnName>test_column</ColumnName>\\n        <TableName>test_table</TableName>\\n        <SecurityLevel>SENSITIVE</SecurityLevel>\\n        <ColumnCount>1</ColumnCount>\\n        <SchemaName>test_schema</SchemaName>\\n        <FunctionType>DEFAULT</FunctionType>\\n    </SensitiveColumnList>\\n    <Success>true</Success>\\n</ListSensitiveColumnsResponse>","errorExample":""}]',
      'title' => '搜索敏感字段列表',
      'description' => '此API已废弃，文档不再维护，建议您使用[ListSensitiveColumnInfo](~~2539519~~)接口获取敏感字段的脱敏算法相关信息。',
    ),
    'ListSensitiveColumnsDetail' => 
    array (
      'summary' => '调用ListSensitiveColumnsDetail获取敏感字段详情信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'SchemaName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库名，可通过调用接口[ListSensitiveColumns](~~188103~~)获取该参数的值。

> - 物理库名：您还可以通过调用接口[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)获取该参数的值。
> - 逻辑库名：您还可以通过调用接口[ListLogicDatabases](~~141874~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'SchemaName_test',
          ),
        ),
        2 => 
        array (
          'name' => 'TableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表名，可通过调用接口[ListSensitiveColumns](~~188103~~)获取该参数的值。
>您也可以通过调用接口[ListTables](~~141878~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'ColumnName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '字段名，可通过调用接口[ListSensitiveColumns](~~188103~~)获取该参数的值。
>您也可以通过调用接口[ListColumns](~~141870~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ColumnName_test',
          ),
        ),
        4 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库ID（DatabaseId），数据库分为物理库和逻辑库两种：
- 物理库ID：可通过调用接口[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)获取该参数的值。
- 逻辑库ID：可通过调用接口[ListLogicDatabases](~~141874~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1860****',
          ),
        ),
        5 => 
        array (
          'name' => 'Logic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否为逻辑库，取值如下：
- **true**：逻辑库
- **false**：物理库',
            'type' => 'boolean',
            'required' => false,
            'example' => 'false',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7629888F-C9FB-4D16-A7D3-B443FE06FBD4',
              ),
              'SensitiveColumnsDetailList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SensitiveColumnsDetail' => 
                  array (
                    'description' => '敏感字段详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '敏感字段详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DbId' => 
                        array (
                          'description' => '数据库ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1860****',
                        ),
                        'ColumnName' => 
                        array (
                          'description' => '字段名。',
                          'type' => 'string',
                          'example' => 'ColumnName_test',
                        ),
                        'ColumnDescription' => 
                        array (
                          'description' => '字段描述。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'TableName' => 
                        array (
                          'description' => '表名。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'DbType' => 
                        array (
                          'description' => '数据库类型。',
                          'type' => 'string',
                          'example' => 'mysql',
                        ),
                        'ColumnType' => 
                        array (
                          'description' => '字段类型。',
                          'type' => 'string',
                          'example' => 'varchar(32)',
                        ),
                        'Logic' => 
                        array (
                          'description' => '是否为逻辑库，返回值如下：
- **true**：是
- **false**：否',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'SchemaName' => 
                        array (
                          'description' => '数据库名。',
                          'type' => 'string',
                          'example' => 'SchemaName_test',
                        ),
                        'SearchName' => 
                        array (
                          'description' => '数据库搜索名。',
                          'type' => 'string',
                          'example' => 'test@xxx:3306',
                        ),
                        'EnvType' => 
                        array (
                          'description' => '环境类型。',
                          'type' => 'string',
                          'example' => 'product',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：

- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7629888F-C9FB-4D16-A7D3-B443FE06FBD4\\",\\n  \\"SensitiveColumnsDetailList\\": {\\n    \\"SensitiveColumnsDetail\\": [\\n      {\\n        \\"DbId\\": 0,\\n        \\"ColumnName\\": \\"ColumnName_test\\",\\n        \\"ColumnDescription\\": \\"test\\",\\n        \\"TableName\\": \\"test\\",\\n        \\"DbType\\": \\"mysql\\",\\n        \\"ColumnType\\": \\"varchar(32)\\",\\n        \\"Logic\\": false,\\n        \\"SchemaName\\": \\"SchemaName_test\\",\\n        \\"SearchName\\": \\"test@xxx:3306\\",\\n        \\"EnvType\\": \\"product\\"\\n      }\\n    ]\\n  },\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListSensitiveColumnsDetailResponse>\\n    <RequestId>7629888F-C9FB-4D16-A7D3-B443FE06FBD4</RequestId>\\n    <SensitiveColumnsDetailList>\\n        <ColumnName>ColumnName_test</ColumnName>\\n        <ColumnDescription>test</ColumnDescription>\\n        <TableName>test</TableName>\\n        <DbType>mysql</DbType>\\n        <ColumnType>varchar(32)</ColumnType>\\n        <Logic>false</Logic>\\n        <SchemaName>SchemaName_test</SchemaName>\\n        <SearchName>test@xxx:3306</SearchName>\\n        <EnvType>product</EnvType>\\n    </SensitiveColumnsDetailList>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>true</Success>\\n</ListSensitiveColumnsDetailResponse>","errorExample":""}]',
      'title' => '获取敏感字段详情信息',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'ChangeColumnSecLevel' => 
    array (
      'summary' => '调整字段敏感等级。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'docRequired' => false,
            'example' => '43253',
          ),
        ),
        1 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库ID（DatabaseId），可通过调用接口[SearchDatabase](~~141876~~)获取该参数的值。
>您也可以通过调用接口[ListDatabases](~~141873~~)获取物理库的DatabaseId值，调用接口[ListLogicDatabases](~~141874~~)获取逻辑库的DatabaseId值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '325',
          ),
        ),
        2 => 
        array (
          'name' => 'IsLogic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库是逻辑库，取值：
- true：物理库
- false：逻辑库',
            'type' => 'boolean',
            'required' => true,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'SchemaName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库名，可通过调用接口[ListSensitiveColumns](~~188103~~)获取该参数的值。

- 您也可以通过调用接口[SearchDatabase](~~141876~~)获取该参数的值。
- 您也可以通过调用接口[ListDatabases](~~141873~~)获取物理库的SchemaName值，调用接口[ListLogicDatabases](~~141874~~)获取逻辑库的SchemaName值。',
            'type' => 'string',
            'required' => true,
            'example' => 'test_schema',
          ),
        ),
        4 => 
        array (
          'name' => 'TableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表名，可通过调用接口[ListSensitiveColumns](~~188103~~)获取该参数的值。
>您也可以通过调用接口[ListTables](~~141878~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'test_table',
          ),
        ),
        5 => 
        array (
          'name' => 'ColumnName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '字段名，可通过调用接口[ListSensitiveColumns](~~188103~~)获取该参数的值。
>您也可以通过调用接口[ListColumns](~~141870~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'test_column',
          ),
        ),
        6 => 
        array (
          'name' => 'NewLevel',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '新的敏感等级',
            'description' => '输入新的字段敏感等级，取值如下：

- INNER：低敏感
- SENSITIVE： 中敏感
- CONFIDENTIAL： 高敏感',
            'type' => 'string',
            'required' => true,
            'example' => 'SENSITIVE',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C51420E3-144A-4A94-B473-8662FCF4AD10',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'false',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C51420E3-144A-4A94-B473-8662FCF4AD10\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": false\\n}","errorExample":""},{"type":"xml","example":"<ChangeColumnSecLevelResponse>\\n    <RequestId>C51420E3-144A-4A94-B473-8662FCF4AD10</RequestId>\\n    <Success>false</Success>\\n</ChangeColumnSecLevelResponse>","errorExample":""}]',
      'title' => '调整字段敏感等级',
      'description' => 'ChangeColumnSecLevel即将废弃，建议您调用[ChangeColumnSecurityLevel](~~2536099~~)接口调整字段的敏感等级。',
    ),
    'ChangeColumnSecurityLevel' => 
    array (
      'summary' => '调整字段的安全级别。',
      'methods' => 
      array (
        0 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'riskType' => 'none',
        'chargeType' => 'free',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '10****',
          ),
        ),
        1 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库ID（DatabaseId），数据库分为物理库和逻辑库两种：
- 物理库ID：可通过调用[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)接口获取该参数的值。
- 逻辑库ID：可通过调用[ListLogicDatabases](~~141874~~)或[SearchDatabase](~~141876~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '325**',
          ),
        ),
        2 => 
        array (
          'name' => 'IsLogic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库是否为逻辑库，取值：
- **true**：逻辑库。
- **false**：物理库。',
            'type' => 'boolean',
            'required' => true,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'SchemaName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库名称。可调用[ListSensitiveColumns](~~188103~~)或[SearchDatabase](~~141876~~)接口获取该参数的值。

> 您可以调用[ListDatabases](~~141873~~)接口获取物理库的SchemaName值，调用[ListLogicDatabases](~~141874~~)接口获取逻辑库的SchemaName值。',
            'type' => 'string',
            'required' => true,
            'example' => 'test_schema',
          ),
        ),
        4 => 
        array (
          'name' => 'TableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表名。可调用[ListSensitiveColumns](~~188103~~)或[ListTables](~~141878~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'test_table',
          ),
        ),
        5 => 
        array (
          'name' => 'ColumnName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '字段名。可调用[ListSensitiveColumns](~~188103~~)或[ListColumns](~~141870~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'example' => 'test_column',
          ),
        ),
        6 => 
        array (
          'name' => 'NewSensitivityLevel',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '字段新的安全级别，安全级别取值范围为实例绑定的分类分级模板的敏感序列。您可以调用[ListSensitivityLevel](~~2539519~~)接口来获取模板的敏感序列列表。',
            'type' => 'string',
            'required' => true,
            'example' => 'S2',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'E103C5F9-DE47-53F2-BF34-D71DF38F****',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E103C5F9-DE47-53F2-BF34-D71DF38F****\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '调整字段安全级别',
    ),
    'GetClassificationTemplate' => 
    array (
      'summary' => '使用此API获取实例绑定的分类分级模板信息，包含模板ID、模板类型等信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。可调用[ListInstances](~~141936~~)或[GetInstance](~~141567~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '169****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '23***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ClassificationResourceTemplateMap' => 
              array (
                'description' => '实例绑定的分类分级模板信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'TemplateId' => 
                  array (
                    'description' => '分类分级模板ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '3***',
                  ),
                  'TemplateType' => 
                  array (
                    'description' => '分类分级模板类型。取值：
- **INNER**：内置模板。
- **USER_DEFINE**：自定义模板。',
                    'type' => 'string',
                    'enumValueTitles' => 
                    array (
                      'USER_DEFINE' => 'USER_DEFINE',
                      'INNER' => 'INNER',
                    ),
                    'example' => 'INNER',
                  ),
                  'ResourceId' => 
                  array (
                    'description' => '资源ID。目前支持的资源类型为INSTANCE，该ID对应为实例的InstanceId，可调用[ListInstances](~~141936~~)接口获取该参数的值。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '24****',
                  ),
                  'ResourceType' => 
                  array (
                    'description' => '资源类型。取值为**INSTANCE**（实例）。',
                    'type' => 'string',
                    'example' => 'INSTANCE',
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值说明如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"427688B8-ADFB-4C4E-9D45-EF5C1FD6E23D\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ClassificationResourceTemplateMap\\": {\\n    \\"TemplateId\\": 0,\\n    \\"TemplateType\\": \\"INNER\\",\\n    \\"ResourceId\\": 0,\\n    \\"ResourceType\\": \\"INSTANCE\\"\\n  },\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '获取实例绑定的分类分级模板',
    ),
    'ListSensitivityLevel' => 
    array (
      'summary' => '获取分类分级模板对应的敏感序列列表。',
      'methods' => 
      array (
        0 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '20***',
          ),
        ),
        1 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分类分级模板ID。您可以调用[ListClassificationTemplates](~~460613~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '15**',
          ),
        ),
        2 => 
        array (
          'name' => 'TemplateType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分类分级模板类型。您可以调用[ListClassificationTemplates](~~460613~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'enumValueTitles' => 
            array (
              'USER_DEFINE' => '自定义模板',
              'INNER' => '内置模板',
            ),
            'example' => 'INNER',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '4E1D2B4D-3E53-4ABC-999D-1D2520B3471A',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'SensitivityLevelList' => 
              array (
                'description' => '敏感序列列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '敏感序列详情。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Name' => 
                    array (
                      'description' => '敏感序列名称。',
                      'type' => 'string',
                      'example' => 'S2',
                    ),
                    'TemplateId' => 
                    array (
                      'description' => '分类分级模板ID。',
                      'type' => 'string',
                      'example' => '1070',
                    ),
                    'TemplateType' => 
                    array (
                      'description' => '分类分级模板类型。取值：
- **INNER**：内置模板。
- **USER_DEFINE**：自定义模板。',
                      'type' => 'string',
                      'enumValueTitles' => 
                      array (
                        'USER_DEFINE' => '自定义模板',
                        'INNER' => '内置模板',
                      ),
                      'example' => 'INNER',
                      'enum' => 
                      array (
                        0 => 'INNER',
                        1 => 'USER_DEFINE',
                      ),
                    ),
                    'IsPlain' => 
                    array (
                      'description' => '标注该敏感序列的字段是否以明文展示。',
                      'type' => 'boolean',
                      'enumValueTitles' => 
                      array (
                        'true' => 'true',
                        'false' => 'false',
                      ),
                      'example' => 'true',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'staticInfo' => 
      array (
        'returnType' => 'synchronous',
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4E1D2B4D-3E53-4ABC-999D-1D2520B3471A\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"SensitivityLevelList\\": [\\n    {\\n      \\"Name\\": \\"S2\\",\\n      \\"TemplateId\\": \\"1070\\",\\n      \\"TemplateType\\": \\"INNER\\",\\n      \\"IsPlain\\": true\\n    }\\n  ]\\n}","type":"json"}]',
      'title' => '获取分类分级模板的敏感序列列表',
    ),
    'ListSensitiveColumnInfo' => 
    array (
      'summary' => '调用此接口可以获取到敏感字段所使用的脱敏算法ID、名称，以及字段的安全级别等信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '217034',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsG96PX9',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID。您可调用[ListInstances](~~141936~~)或[GetInstance](~~141567~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '183****',
          ),
        ),
        1 => 
        array (
          'name' => 'SchemaName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库名。您可调用接口[SearchDatabase](~~141876~~)获取该参数的值。
>您也可以调用接口[ListDatabases](~~141873~~)获取物理库的SchemaName值，调用接口[ListLogicDatabases](~~141874~~)获取逻辑库的SchemaName值。',
            'type' => 'string',
            'required' => false,
            'example' => 'test_schema',
          ),
        ),
        2 => 
        array (
          'name' => 'TableName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '表名。您可通过调用接口[ListSensitiveColumns](~~188103~~)获取该参数的值。
>您也可以通过调用接口[ListTables](~~141878~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'test_table',
          ),
        ),
        3 => 
        array (
          'name' => 'ColumnName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '字段名。您可调用接口[ListSensitiveColumns](~~188103~~)获取该参数的值。
>您也可以通过调用接口[ListColumns](~~141870~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => 'test_column',
          ),
        ),
        4 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '分页查询时，设置当前页面的页码。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '100',
          ),
        ),
        6 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求 ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码，请求异常时返回。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'SensitiveColumnList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SensitiveColumn' => 
                  array (
                    'description' => '敏感字段详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '字段详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '183****',
                        ),
                        'SchemaName' => 
                        array (
                          'description' => '数据库名。',
                          'type' => 'string',
                          'example' => 'test_schema',
                        ),
                        'TableName' => 
                        array (
                          'description' => '表名。',
                          'type' => 'string',
                          'example' => 'test_table',
                        ),
                        'ColumnName' => 
                        array (
                          'description' => '字段名。',
                          'type' => 'string',
                          'example' => 'test_column',
                        ),
                        'CategoryName' => 
                        array (
                          'description' => '分类名称。',
                          'type' => 'string',
                          'example' => '默认分类',
                        ),
                        'IsPlain' => 
                        array (
                          'description' => '标注该敏感序列的字段是否以明文展示。',
                          'type' => 'boolean',
                          'example' => 'False',
                        ),
                        'SecurityLevel' => 
                        array (
                          'description' => '字段敏感等级，返回值如下：
- 低
- 中
- 高',
                          'type' => 'string',
                          'example' => '低',
                        ),
                        'UserSensitivityLevel' => 
                        array (
                          'description' => '用户定义的敏感等级。',
                          'type' => 'string',
                          'example' => 'S1',
                        ),
                        'SampleData' => 
                        array (
                          'description' => '抽样数据。',
                          'type' => 'string',
                          'example' => '西安市',
                        ),
                        'DefaultDesensitizationRule' => 
                        array (
                          'description' => '默认的脱敏算法信息。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'RuleId' => 
                            array (
                              'description' => '脱敏算法ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '101**',
                            ),
                            'RuleName' => 
                            array (
                              'description' => '脱敏算法名称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                          ),
                        ),
                        'SemiDesensitizationRuleList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'SemiDesensitizationRule' => 
                            array (
                              'description' => '半脱敏算法列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '半脱敏算法详情。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'RuleId' => 
                                  array (
                                    'description' => '半脱敏算法ID。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '10***',
                                  ),
                                  'RuleName' => 
                                  array (
                                    'description' => '半脱敏算法名称。',
                                    'type' => 'string',
                                    'example' => 'test01',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。返回值如下：

- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TotalCount' => 
              array (
                'description' => '数据总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"SensitiveColumnList\\": {\\n    \\"SensitiveColumn\\": [\\n      {\\n        \\"InstanceId\\": 0,\\n        \\"SchemaName\\": \\"test_schema\\",\\n        \\"TableName\\": \\"test_table\\",\\n        \\"ColumnName\\": \\"test_column\\",\\n        \\"CategoryName\\": \\"默认分类\\",\\n        \\"IsPlain\\": true,\\n        \\"SecurityLevel\\": \\"低\\",\\n        \\"UserSensitivityLevel\\": \\"S1\\",\\n        \\"SampleData\\": \\"西安市\\",\\n        \\"DefaultDesensitizationRule\\": {\\n          \\"RuleId\\": 0,\\n          \\"RuleName\\": \\"test\\"\\n        },\\n        \\"SemiDesensitizationRuleList\\": {\\n          \\"SemiDesensitizationRule\\": [\\n            {\\n              \\"RuleId\\": 0,\\n              \\"RuleName\\": \\"test01\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  },\\n  \\"Success\\": true,\\n  \\"TotalCount\\": 1\\n}","type":"json"}]',
      'title' => '获取敏感字段的脱敏算法相关信息',
    ),
    'CreateProxy' => 
    array (
      'summary' => '调用CreateProxy接口，开启实例的数据安全访问功能。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '43589',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsKBRCZC',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '实例ID，可通过调用接口[ListInstances](~~141936~~)或[GetInstance](~~141567~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '183****',
          ),
        ),
        1 => 
        array (
          'name' => 'Username',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库账号。',
            'type' => 'string',
            'required' => true,
            'example' => 'username',
          ),
        ),
        2 => 
        array (
          'name' => 'Password',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库密码。',
            'type' => 'string',
            'required' => true,
            'example' => '******',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4FFD154E-F57F-5374-B568-D6276F15****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => '实例代理已存在',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'InvalidParameterValid',
              ),
              'ProxyId' => 
              array (
                'description' => '安全访问代理ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '4**',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4FFD154E-F57F-5374-B568-D6276F15****\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"实例代理已存在\\",\\n  \\"ErrorCode\\": \\"InvalidParameterValid\\",\\n  \\"ProxyId\\": 0\\n}","errorExample":""},{"type":"xml","example":"<CreateProxyResponse>\\n    <RequestId>4FFD154E-F57F-5374-B568-D6276F15****</RequestId>\\n    <ProxyId>4**</ProxyId>\\n    <Success>true</Success>\\n</CreateProxyResponse>","errorExample":""}]',
      'title' => '开启数据安全访问',
      'description' => '- 实例的数据库类型为MySQL与MariaDB，包括阿里云RDS MySQL引擎、PolarDB MySQL引擎、PolarDB-X、AnalyticDB MySQL，也支持自建MySQL与MariaDB库、第三方云MySQL与MariaDB库。
- 数据库实例所在地区为华东1（杭州）、华北2（北京）。
- 您的用户角色是管理员角色、DBA角色，或者是目标实例Owner。',
    ),
    'DeleteProxy' => 
    array (
      'summary' => '关闭实例的安全访问代理。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProxyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全访问代理ID。您可以调用[ListProxies](~~295371~~)或[GetProxy](~~295382~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。您可以调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"200\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteProxyResponse>\\n    <RequestId>EEC84F7F-E60E-5513-8DE6-F22EF368BD4D</RequestId>\\n    <Success>true</Success>\\n</DeleteProxyResponse>","errorExample":""}]',
      'title' => '关闭安全访问代理',
      'description' => '关闭后，您的数据库实例将失去JDBC协议方式的安全访问能力，所有的授权信息都会被回收。',
    ),
    'ListProxies' => 
    array (
      'summary' => '获取安全访问代理列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5812180E-555F-5F90-BE4F-280576F4****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：

- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。
',
                'type' => 'string',
                'example' => 'User can not access to Tenant [123445]',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ProxyList' => 
              array (
                'description' => '安全访问代理列表。',
                'type' => 'array',
                'items' => 
                array (
                  'description' => '安全访问代理列表。',
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ProxyId' => 
                    array (
                      'description' => '安全访问代理ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '4**',
                    ),
                    'CreatorId' => 
                    array (
                      'description' => '安全访问代理创建人的用户ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '12****',
                    ),
                    'CreatorName' => 
                    array (
                      'description' => '安全访问代理创建人的用户昵称。',
                      'type' => 'string',
                      'example' => 'test_name',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '183****',
                    ),
                    'PrivateEnable' => 
                    array (
                      'description' => '是否开启内网。默认返回值为**true**。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'PrivateHost' => 
                    array (
                      'description' => '内网地址。',
                      'type' => 'string',
                      'example' => 'dphzmy-5j8oimjsz6ze****.proxy.dms.aliyuncs.com',
                    ),
                    'PublicEnable' => 
                    array (
                      'description' => '是否开启公网，返回值如下：

- **true**：启用
- **false**：禁用 ',
                      'type' => 'boolean',
                      'example' => 'false',
                    ),
                    'PublicHost' => 
                    array (
                      'description' => '公网地址，公网地址始终都会返回。

> - 当公网地址的开启状态为**true**时，此处返回的公网地址为有DNS解析能力的有效地址。
> - 当公网地址的开启状态为**false**时，此处返回的公网地址为无DNS解析能力的无效地址。',
                      'type' => 'string',
                      'example' => 'dphzmy-5j8oimjsz6ze****-pub.proxy.dms.aliyuncs.com',
                    ),
                    'HttpsPort' => 
                    array (
                      'description' => 'HTTPS协议端口号。',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '443',
                    ),
                    'ProtocolType' => 
                    array (
                      'title' => '数据库协议类型，例如：MYSQL',
                      'description' => '数据库协议类型，例如：MYSQL',
                      'type' => 'string',
                      'example' => 'MYSQL',
                    ),
                    'ProtocolPort' => 
                    array (
                      'title' => '数据库协议连接端口号',
                      'description' => '数据库协议连接端口号',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '3306',
                    ),
                    'RegionId' => 
                    array (
                      'title' => '区域',
                      'description' => '实例地区',
                      'type' => 'string',
                      'example' => 'cn-hangzhou',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5812180E-555F-5F90-BE4F-280576F4****\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"User can not access to Tenant [123445]\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ProxyList\\": [\\n    {\\n      \\"ProxyId\\": 0,\\n      \\"CreatorId\\": 0,\\n      \\"CreatorName\\": \\"test_name\\",\\n      \\"InstanceId\\": 0,\\n      \\"PrivateEnable\\": true,\\n      \\"PrivateHost\\": \\"dphzmy-5j8oimjsz6ze****.proxy.dms.aliyuncs.com\\",\\n      \\"PublicEnable\\": false,\\n      \\"PublicHost\\": \\"dphzmy-5j8oimjsz6ze****-pub.proxy.dms.aliyuncs.com\\",\\n      \\"HttpsPort\\": 443,\\n      \\"ProtocolType\\": \\"MYSQL\\",\\n      \\"ProtocolPort\\": 3306,\\n      \\"RegionId\\": \\"cn-hangzhou\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListProxiesResponse>\\n    <ProxyList>\\n        <PublicHost>dphzmy-5j8oimjsz6ze****-pub.proxy.dms.aliyuncs.com</PublicHost>\\n        <PrivateHost>dphzmy-5j8oimjsz6ze****.proxy.dms.aliyuncs.com</PrivateHost>\\n        <InstanceId>183****</InstanceId>\\n        <ProxyId>4**</ProxyId>\\n        <CreatorId>12****</CreatorId>\\n        <MysqlPort>3306</MysqlPort>\\n        <PrivateEnable>true</PrivateEnable>\\n        <CreatorName>test_name</CreatorName>\\n        <PublicEnable>false</PublicEnable>\\n        <HttpsPort>443</HttpsPort>\\n    </ProxyList>\\n    <ProxyList>\\n        <PublicHost>dphzmy-vwjxfkclz17bb7y****.proxy.dms.aliyuncs.com</PublicHost>\\n        <PrivateHost>dphzmy-vwjxfkclz17b****.proxy.dms.aliyuncs.com</PrivateHost>\\n        <InstanceId>164****</InstanceId>\\n        <ProxyId>4*</ProxyId>\\n        <CreatorId>47****</CreatorId>\\n        <MysqlPort>3306</MysqlPort>\\n        <PrivateEnable>true</PrivateEnable>\\n        <CreatorName>test1_name</CreatorName>\\n        <PublicEnable>true</PublicEnable>\\n        <HttpsPort>443</HttpsPort>\\n    </ProxyList>\\n    <RequestId>5812180E-555F-5F90-BE4F-280576F4****</RequestId>\\n    <Success>true</Success>\\n</ListProxiesResponse>","errorExample":""}]',
      'title' => '获取安全访问代理列表',
    ),
    'GetProxy' => 
    array (
      'summary' => '获取数据安全访问代理的详细信息。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProxyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全访问代理ID，可通过调用接口[ListProxies](~~295371~~)获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '4**',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'headers' => 
          array (
          ),
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F49D4598-2B3C-5723-865E-2CCB818E****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。
',
                'type' => 'string',
                'example' => 'The condition cannot be empty!',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ProxyId' => 
              array (
                'description' => '安全访问代理ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '4**',
              ),
              'CreatorId' => 
              array (
                'description' => '安全访问代理创建人的用户ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '12****',
              ),
              'CreatorName' => 
              array (
                'description' => '安全访问代理创建人的用户昵称。',
                'type' => 'string',
                'example' => 'test_name',
              ),
              'InstanceId' => 
              array (
                'description' => '实例ID。
',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '183****',
              ),
              'PrivateEnable' => 
              array (
                'description' => '是否开启内网地址，默认返回值为**true**。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'PrivateHost' => 
              array (
                'description' => '内网地址。',
                'type' => 'string',
                'example' => 'dphzmy-5j8oimjsz6ze****.proxy.dms.aliyuncs.com',
              ),
              'PublicEnable' => 
              array (
                'description' => '是否开启公网地址，返回值如下：

- **true**：启用
- **false**：禁用',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'PublicHost' => 
              array (
                'description' => '公网地址，公网地址始终都会返回。

> - 当公网地址的开启状态为**true**时，此处返回的公网地址为有DNS解析能力的有效地址。
> - 当公网地址的开启状态为**false**时，此处返回的公网地址为无DNS解析能力的无效地址。',
                'type' => 'string',
                'example' => 'dphzmy-5j8oimjsz6zed7k****.proxy.dms.aliyuncs.com',
              ),
              'HttpsPort' => 
              array (
                'description' => 'HTTPS协议端口号。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '443',
              ),
              'ProtocolType' => 
              array (
                'title' => '数据库协议类型，例如：MYSQL',
                'description' => '数据库协议类型，例如：MYSQL',
                'type' => 'string',
                'example' => 'MYSQL',
              ),
              'ProtocolPort' => 
              array (
                'title' => '数据库协议连接端口号',
                'description' => '数据库协议连接端口号',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '3306',
              ),
              'RegionId' => 
              array (
                'title' => '区域',
                'description' => '实例地区',
                'type' => 'string',
                'example' => 'cn-hangzhou',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F49D4598-2B3C-5723-865E-2CCB818E****\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"The condition cannot be empty!\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ProxyId\\": 0,\\n  \\"CreatorId\\": 0,\\n  \\"CreatorName\\": \\"test_name\\",\\n  \\"InstanceId\\": 0,\\n  \\"PrivateEnable\\": true,\\n  \\"PrivateHost\\": \\"dphzmy-5j8oimjsz6ze****.proxy.dms.aliyuncs.com\\",\\n  \\"PublicEnable\\": true,\\n  \\"PublicHost\\": \\"dphzmy-5j8oimjsz6zed7k****.proxy.dms.aliyuncs.com\\",\\n  \\"HttpsPort\\": 443,\\n  \\"ProtocolType\\": \\"MYSQL\\",\\n  \\"ProtocolPort\\": 3306,\\n  \\"RegionId\\": \\"cn-hangzhou\\"\\n}","errorExample":""},{"type":"xml","example":"<GetProxyResponse>\\n    <PublicHost>dphzmy-5j8oimjsz6zed7k****.proxy.dms.aliyuncs.com</PublicHost>\\n    <PrivateHost>dphzmy-5j8oimjsz6ze****.proxy.dms.aliyuncs.com</PrivateHost>\\n    <RequestId>F49D4598-2B3C-5723-865E-2CCB818E****</RequestId>\\n    <InstanceId>183****</InstanceId>\\n    <ProxyId>4**</ProxyId>\\n    <CreatorId>12****</CreatorId>\\n    <Success>true</Success>\\n    <MysqlPort>3306</MysqlPort>\\n    <CreatorName>test_name</CreatorName>\\n    <HttpsPort>443</HttpsPort>\\n</GetProxyResponse>","errorExample":""}]',
      'title' => '获取数据安全访问代理的详细信息',
    ),
    'CreateProxyAccess' => 
    array (
      'summary' => '授予用户安全访问代理权限。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '43700',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsKBRCZC',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'UserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户ID。您可以调用[ListUsers](~~141938~~)或[GetUser](~~147098~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'ProxyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全访问代理ID。您可以调用[ListProxies](~~295371~~)或[GetProxy](~~295382~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'IndepAccount',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库账号。',
            'type' => 'string',
            'required' => false,
            'example' => 'xxx',
          ),
        ),
        3 => 
        array (
          'name' => 'IndepPassword',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库密码。',
            'type' => 'string',
            'required' => false,
            'example' => 'xxx',
          ),
        ),
        4 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。您可以调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '200',
              ),
              'ProxyAccessId' => 
              array (
                'description' => '安全访问授权ID，当安全访问代理授权目标用户后，系统会自动生成一个安全访问授权ID，该ID全局唯一。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"200\\",\\n  \\"ProxyAccessId\\": 1\\n}","errorExample":""},{"type":"xml","example":"<CreateProxyAccessResponse>\\n    <RequestId>22A0495C-566D-5A90-A51A-7E737AD5980A</RequestId>\\n    <ProxyAccessId>1</ProxyAccessId>\\n    <Success>true</Success>\\n</CreateProxyAccessResponse>","errorExample":""}]',
      'title' => '授予安全访问代理权限',
      'description' => '- 实例已开启数据安全访问。
- 您的用户角色是管理员角色、DBA角色，或者是当前实例的数据安全访问责任人。',
    ),
    'DeleteProxyAccess' => 
    array (
      'summary' => '回收目标用户的安全访问代理权限。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'abilityTreeCode' => '43701',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsKBRCZC',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProxyAccessId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全访问授权ID，当安全访问代理授权目标用户后，系统会自动生成一个安全访问授权ID，该ID全局唯一。您可以调用[ListProxyAccesses](~~295386~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。您可以调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '200',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"200\\"\\n}","errorExample":""},{"type":"xml","example":"<DeleteProxyAccessResponse>\\n    <RequestId>7640A4CB-B988-5CDB-B428-11952D7E7682</RequestId>\\n    <Success>true</Success>\\n</DeleteProxyAccessResponse>","errorExample":""}]',
      'title' => '回收安全访问代理权限',
    ),
    'ListProxyAccesses' => 
    array (
      'summary' => '获取安全访问代理的授权列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProxyId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全访问代理ID。
> 您可以通过调用[ListProxies](~~295371~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '47',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
>您可以通过调用[GetUserActiveTenant](~~198073~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E53D178A-85E9-5E1F-88B6-3CB1FCF2****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'ProxyId is mandatory for this action.',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'MissingProxyId',
              ),
              'ProxyAccessList' => 
              array (
                'description' => '安全访问代理授权列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ProxyAccessId' => 
                    array (
                      'description' => '安全访问代理授权ID，当安全访问代理授权目标用户后，系统会自动生成一个安全访问授权ID，该ID全局唯一。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '****',
                    ),
                    'GmtCreate' => 
                    array (
                      'description' => '安全访问代理权限的授权时间。',
                      'type' => 'string',
                      'example' => '2021-03-31 10:34:18',
                    ),
                    'AccessId' => 
                    array (
                      'description' => '安全访问代理授权账号。',
                      'type' => 'string',
                      'example' => 'MXPL8HalI22m****',
                    ),
                    'OriginInfo' => 
                    array (
                      'description' => '开通安全访问代理权限的来源信息，返回值如下：

- **责任人授权（）**：括号中为责任人的UID。
- **工单授权（）**：括号中为用户申请权限的工单号。',
                      'type' => 'string',
                      'example' => '责任人授权（29490401597700****）',
                    ),
                    'IndepAccount' => 
                    array (
                      'description' => '独立账号。',
                      'type' => 'string',
                      'example' => '****',
                    ),
                    'UserId' => 
                    array (
                      'description' => '用户ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '26****',
                    ),
                    'UserUid' => 
                    array (
                      'description' => '用户UID。',
                      'type' => 'string',
                      'example' => '25936669186260****',
                    ),
                    'UserName' => 
                    array (
                      'description' => '用户昵称。',
                      'type' => 'string',
                      'example' => 'user',
                    ),
                    'ProxyId' => 
                    array (
                      'description' => '安全访问代理ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '47',
                    ),
                    'InstanceId' => 
                    array (
                      'description' => '实例ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '164****',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E53D178A-85E9-5E1F-88B6-3CB1FCF2****\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"ProxyId is mandatory for this action.\\",\\n  \\"ErrorCode\\": \\"MissingProxyId\\",\\n  \\"ProxyAccessList\\": [\\n    {\\n      \\"ProxyAccessId\\": 0,\\n      \\"GmtCreate\\": \\"2021-03-31 10:34:18\\",\\n      \\"AccessId\\": \\"MXPL8HalI22m****\\",\\n      \\"OriginInfo\\": \\"责任人授权（29490401597700****）\\",\\n      \\"IndepAccount\\": \\"****\\",\\n      \\"UserId\\": 0,\\n      \\"UserUid\\": \\"25936669186260****\\",\\n      \\"UserName\\": \\"user\\",\\n      \\"ProxyId\\": 47,\\n      \\"InstanceId\\": 0\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListProxyAccessesResponse>\\n    <RequestId>E53D178A-85E9-5E1F-88B6-3CB1FCF2****</RequestId>\\n    <Success>true</Success>\\n    <ProxyAccessList>\\n        <GmtCreate>2021-03-31 10:34:18</GmtCreate>\\n        <UserName>user</UserName>\\n        <AccessId>MXPL8HalI22m****</AccessId>\\n        <InstanceId>164****</InstanceId>\\n        <UserId>26****</UserId>\\n        <UserUid>25936669186260****</UserUid>\\n        <ProxyId>47</ProxyId>\\n        <ProxyAccessId>**</ProxyAccessId>\\n        <OriginInfo>责任人授权(29490401597700****)</OriginInfo>\\n    </ProxyAccessList>\\n    <ProxyAccessList>\\n        <GmtCreate>2021-03-30 10:44:15</GmtCreate>\\n        <UserName>user1</UserName>\\n        <AccessId>8t1RshbwmWOQ****</AccessId>\\n        <InstanceId>164****</InstanceId>\\n        <UserId>47****</UserId>\\n        <UserUid>188097248834****</UserUid>\\n        <ProxyId>47</ProxyId>\\n        <ProxyAccessId>**</ProxyAccessId>\\n        <OriginInfo>责任人授权(29490401597700****)</OriginInfo>\\n    </ProxyAccessList>\\n</ListProxyAccessesResponse>","errorExample":""}]',
      'title' => '获取安全访问代理的授权列表',
    ),
    'InspectProxyAccessSecret' => 
    array (
      'summary' => '获取安全访问代理的授权密码。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProxyAccessId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全访问授权ID，当安全访问代理授权目标用户后，系统会自动生成一个安全访问授权ID，该ID全局唯一。您可以调用[ListProxyAccesses](~~295386~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。您可以调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '1',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '200',
              ),
              'AccessSecret' => 
              array (
                'description' => '安全访问代理授权密码。',
                'type' => 'string',
                'example' => 'xxx',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"200\\",\\n  \\"AccessSecret\\": \\"xxx\\"\\n}","errorExample":""},{"type":"xml","example":"<InspectProxyAccessSecretResponse>\\n    <AccessSecret>nxxxxxxuxxxxxxxi</AccessSecret>\\n    <RequestId>E6F2971A-CDCC-5451-86EB-328868715619</RequestId>\\n    <Success>true</Success>\\n</InspectProxyAccessSecretResponse>","errorExample":""}]',
      'title' => '获取安全访问代理的授权密码',
    ),
    'GetProxyAccess' => 
    array (
      'summary' => '获取安全访问代理的授权。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ProxyAccessId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '安全访问授权ID，当安全访问代理授权目标用户后，系统会自动生成一个安全访问授权ID，该ID全局唯一。您可以调用[ListProxyAccesses](~~295386~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '3CDB8601-AD74-4A47-8114-08E08CD6****',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'The specified user not exists.',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UserNotExist',
              ),
              'ProxyAccess' => 
              array (
                'description' => '安全访问代理授权信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'ProxyAccessId' => 
                  array (
                    'description' => '安全访问授权ID，当安全访问代理授权目标用户后，系统会自动生成一个安全访问授权ID，该ID全局唯一。您可以调用[ListProxyAccesses](~~295386~~)接口获取该参数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2002',
                  ),
                  'GmtCreate' => 
                  array (
                    'description' => '安全访问代理权限的授权时间。',
                    'type' => 'string',
                    'example' => '1643034647',
                  ),
                  'AccessId' => 
                  array (
                    'description' => '安全访问代理授权账号。',
                    'type' => 'string',
                    'example' => 'hObpgEXoca42q***',
                  ),
                  'OriginInfo' => 
                  array (
                    'description' => '开通安全访问代理权限的来源信息，返回值如下：

- **责任人授权（）**：括号中为责任人的UID。
- **工单授权（）**：括号中为用户申请权限的工单号。',
                    'type' => 'string',
                    'example' => '责任人授权（29490401597700****）',
                  ),
                  'IndepAccount' => 
                  array (
                    'description' => '独立账号。',
                    'type' => 'string',
                    'example' => '***',
                  ),
                  'UserId' => 
                  array (
                    'description' => '用户ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12***',
                  ),
                  'UserUid' => 
                  array (
                    'description' => '用户UID。',
                    'type' => 'string',
                    'example' => '25936669186260****',
                  ),
                  'UserName' => 
                  array (
                    'description' => '用户昵称。',
                    'type' => 'string',
                    'example' => 'user',
                  ),
                  'ProxyId' => 
                  array (
                    'description' => '安全访问代理ID。
> 您可以通过调用[ListProxies](~~295371~~)接口获取该参数。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1905',
                  ),
                  'InstanceId' => 
                  array (
                    'description' => '实例ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1922545',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"3CDB8601-AD74-4A47-8114-08E08CD6****\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"The specified user not exists.\\",\\n  \\"ErrorCode\\": \\"UserNotExist\\",\\n  \\"ProxyAccess\\": {\\n    \\"ProxyAccessId\\": 2002,\\n    \\"GmtCreate\\": \\"1643034647\\",\\n    \\"AccessId\\": \\"hObpgEXoca42q***\\",\\n    \\"OriginInfo\\": \\"责任人授权（29490401597700****）\\",\\n    \\"IndepAccount\\": \\"***\\",\\n    \\"UserId\\": 0,\\n    \\"UserUid\\": \\"25936669186260****\\",\\n    \\"UserName\\": \\"user\\",\\n    \\"ProxyId\\": 1905,\\n    \\"InstanceId\\": 1922545\\n  }\\n}","type":"json"}]',
      'title' => '获取安全访问代理授权信息',
    ),
    'GrantTemplateAuthority' => 
    array (
      'summary' => '授予用户权限模板中的资源权限。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限模板ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1563',
          ),
        ),
        1 => 
        array (
          'name' => 'UserIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待授予模板权限的用户ID列表。',
            'type' => 'string',
            'required' => true,
            'example' => '[12***,34***,56***]',
          ),
        ),
        2 => 
        array (
          'name' => 'ExpireDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限到期时间。时间格式为yyyy-MM-DD HH:mm:ss。',
            'type' => 'string',
            'required' => true,
            'example' => '2023-03-08 17:58:53',
          ),
        ),
        3 => 
        array (
          'name' => 'Comment',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '为用户授权该权限模板的原因。',
            'type' => 'string',
            'required' => false,
            'example' => '业务测试。',
          ),
        ),
        4 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。可通过调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '34E01EDD-6A16-4CF0-9541-C644D1BE01AA',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Result' => 
              array (
                'description' => '是否授权成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"34E01EDD-6A16-4CF0-9541-C644D1BE01AA\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"Result\\": true\\n}","type":"json"}]',
      'title' => '授予用户权限模板中的资源权限',
      'description' => '您在数据管理DMS中的系统角色为管理员或DBA。查看系统角色的具体操作，请参见[查看我的系统角色](~~324212~~)。',
    ),
    'RevokeTemplateAuthority' => 
    array (
      'summary' => '回收权限模板中的资源权限。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限模板ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1563',
          ),
        ),
        1 => 
        array (
          'name' => 'UserIds',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待回收资源权限的用户ID列表。',
            'type' => 'string',
            'required' => true,
            'example' => '[12***,34***,56***]',
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C51420E3-144A-4A94-B473-8662FCF4AD10',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Result' => 
              array (
                'description' => '是否已回收该用户的模板权限。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"C51420E3-144A-4A94-B473-8662FCF4AD10\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Result\\": true,\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '回收权限模板中的资源权限',
      'description' => '您在数据管理DMS中的系统角色为管理员或DBA。查看系统角色的具体操作，请参见[查看我的系统角色](~~324212~~)。',
    ),
    'CreateAuthorityTemplate' => 
    array (
      'summary' => '创建权限模板。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限模板名称。',
            'type' => 'string',
            'required' => true,
            'example' => '测试模板。',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限模板描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => '此模板用于业务测试。',
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'AuthorityTemplateView' => 
              array (
                'description' => '权限模板详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'TemplateId' => 
                  array (
                    'description' => '权限模板ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1563',
                  ),
                  'Name' => 
                  array (
                    'description' => '权限模板名称。',
                    'type' => 'string',
                    'example' => '测试模板。',
                  ),
                  'CreatorId' => 
                  array (
                    'description' => '权限模板创建者ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12***',
                  ),
                  'Description' => 
                  array (
                    'description' => '权限模板描述内容。',
                    'type' => 'string',
                    'example' => '此模板用于业务测试。',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '权限模板的创建时间，时间格式为yyyy-MM-DD HH:mm:ss。',
                    'type' => 'string',
                    'example' => '2023-01-11 14:17:33',
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Tid' => 
              array (
                'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '3***',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"AuthorityTemplateView\\": {\\n    \\"TemplateId\\": 1563,\\n    \\"Name\\": \\"测试模板。\\",\\n    \\"CreatorId\\": 0,\\n    \\"Description\\": \\"此模板用于业务测试。\\",\\n    \\"CreateTime\\": \\"2023-01-11 14:17:33\\"\\n  },\\n  \\"Success\\": true,\\n  \\"Tid\\": 0\\n}","type":"json"}]',
      'title' => '创建权限模板',
      'description' => '您在数据管理DMS中的系统角色为管理员或DBA。查看系统角色的具体操作，请参见[查看我的系统角色](~~324212~~)。',
    ),
    'UpdateAuthorityTemplate' => 
    array (
      'summary' => '更新权限模板。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限模板ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1563',
          ),
        ),
        1 => 
        array (
          'name' => 'Name',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限模板名称。',
            'type' => 'string',
            'required' => true,
            'example' => '测试模板。',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限模板描述信息。',
            'type' => 'string',
            'required' => true,
            'example' => '此模板用于业务测试。',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E1D2B4D-3E53-4ABC-999D-1D2520B3471A',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误消息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'AuthorityTemplateView' => 
              array (
                'description' => '权限模板详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'TemplateId' => 
                  array (
                    'description' => '权限模板ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1563',
                  ),
                  'CreatorId' => 
                  array (
                    'description' => '权限模板创建者ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12***',
                  ),
                  'Name' => 
                  array (
                    'description' => '权限模板名称。',
                    'type' => 'string',
                    'example' => '测试模板。',
                  ),
                  'Description' => 
                  array (
                    'description' => '权限模板描述信息。',
                    'type' => 'string',
                    'example' => '此模板用于业务测试。',
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值说明如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Tid' => 
              array (
                'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '3***',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"4E1D2B4D-3E53-4ABC-999D-1D2520B3471A\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"AuthorityTemplateView\\": {\\n    \\"TemplateId\\": 1563,\\n    \\"CreatorId\\": 0,\\n    \\"Name\\": \\"测试模板。\\",\\n    \\"Description\\": \\"此模板用于业务测试。\\"\\n  },\\n  \\"Success\\": true,\\n  \\"Tid\\": 0\\n}","type":"json"}]',
      'title' => '更新权限模板',
      'description' => '您在数据管理DMS中的系统角色为管理员或DBA。查看系统角色的具体操作，请参见[查看我的系统角色](~~324212~~)。',
    ),
    'GetAuthorityTemplateItem' => 
    array (
      'summary' => '获取权限模板中的资源列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '165972',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdms6MV762',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限模板ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1563',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '5B96E35F-A58E-5399-9041-09CF9A1E46EA',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'AuthorityTemplateItemList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AuthorityTemplateItem' => 
                  array (
                    'description' => '权限模版列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'ItemId' => 
                        array (
                          'description' => '资源ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '12***',
                        ),
                        'TemplateId' => 
                        array (
                          'description' => '权限模板ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1563',
                        ),
                        'ModifierId' => 
                        array (
                          'description' => '资源修改者ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '51***',
                        ),
                        'ResourceType' => 
                        array (
                          'description' => '资源类型。取值如下：

- **INSTANCE**：实例。

- **LOGIC_DB**：逻辑库。

- **META_DB**：物理库。

- **LOGIC_TABLE**：逻辑表。

- **LOGIC_TABLE**：物理表。',
                          'type' => 'string',
                          'example' => 'INSTANCE',
                        ),
                        'InstanceId' => 
                        array (
                          'description' => '实例ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '188****',
                        ),
                        'DbId' => 
                        array (
                          'description' => '数据库ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '43***',
                        ),
                        'TableName' => 
                        array (
                          'description' => '表名。',
                          'type' => 'string',
                          'example' => 'ExampleTable',
                        ),
                        'Attribute' => 
                        array (
                          'description' => '其他补充信息。例如在该权限模板中，添加某个实例的登录权限。',
                          'type' => 'string',
                          'example' => '"permissionTypes": [
            "LOGIN"
          ]',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。返回值如下：

- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Tid' => 
              array (
                'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '3***',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"5B96E35F-A58E-5399-9041-09CF9A1E46EA\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"AuthorityTemplateItemList\\": {\\n    \\"AuthorityTemplateItem\\": [\\n      {\\n        \\"ItemId\\": 0,\\n        \\"TemplateId\\": 1563,\\n        \\"ModifierId\\": 0,\\n        \\"ResourceType\\": \\"INSTANCE\\",\\n        \\"InstanceId\\": 0,\\n        \\"DbId\\": 0,\\n        \\"TableName\\": \\"ExampleTable\\",\\n        \\"Attribute\\": \\"\\\\\\"permissionTypes\\\\\\": [\\\\n            \\\\\\"LOGIN\\\\\\"\\\\n          ]\\"\\n      }\\n    ]\\n  },\\n  \\"Success\\": true,\\n  \\"Tid\\": 0\\n}","type":"json"}]',
      'title' => '获取权限模板中的资源列表',
      'description' => '您在数据管理DMS中的系统角色为管理员或DBA。查看系统角色的具体操作，请参见[查看我的系统角色](~~324212~~)。',
    ),
    'GetAuthorityTemplate' => 
    array (
      'summary' => '获取权限模板详情。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限模板ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '1563',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。

',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'AuthorityTemplateView' => 
              array (
                'description' => '权限模板的详细信息。',
                'type' => 'object',
                'properties' => 
                array (
                  'TemplateId' => 
                  array (
                    'description' => '权限模板ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1563',
                  ),
                  'CreatorId' => 
                  array (
                    'description' => '权限模板创建者ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '12***',
                  ),
                  'Name' => 
                  array (
                    'description' => '权限模板名称。',
                    'type' => 'string',
                    'example' => '测试模板。',
                  ),
                  'Description' => 
                  array (
                    'description' => '模板描述。',
                    'type' => 'string',
                    'example' => '此模板用于业务测试。',
                  ),
                  'CreateTime' => 
                  array (
                    'description' => '权限模板的创建时间，时间格式为yyyy-MM-DD HH:mm:ss。',
                    'type' => 'string',
                    'example' => '2023-01-01 00:00:00',
                  ),
                  'AuthorityTemplateItemList' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'AuthorityTemplateItem' => 
                      array (
                        'description' => '权限模板资源列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ItemId' => 
                            array (
                              'description' => '资源ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '12***',
                            ),
                            'TemplateId' => 
                            array (
                              'description' => '权限模板ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '1563',
                            ),
                            'ModifierId' => 
                            array (
                              'description' => '资源修改者ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '51***',
                            ),
                            'ResourceType' => 
                            array (
                              'description' => '资源类型。取值如下：

- **INSTANCE**：实例。

- **LOGIC_DB**：逻辑库。

- **META_DB**：物理库。

- **LOGIC_TABLE**：逻辑表。

- **SINGLE_TABLE**：物理表。',
                              'type' => 'string',
                              'example' => 'INSTANCE',
                            ),
                            'InstanceId' => 
                            array (
                              'description' => '实例ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '188****',
                            ),
                            'DbId' => 
                            array (
                              'description' => '数据库ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '43***',
                            ),
                            'TableName' => 
                            array (
                              'description' => '表名。',
                              'type' => 'string',
                              'example' => 'ExampleTable',
                            ),
                            'Attribute' => 
                            array (
                              'description' => '其他补充信息。例如在该权限模板中，添加某个实例的登录权限。',
                              'type' => 'string',
                              'example' => '"permissionTypes": [
            "LOGIN"
          ]',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Tid' => 
              array (
                'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '3***',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"AuthorityTemplateView\\": {\\n    \\"TemplateId\\": 1563,\\n    \\"CreatorId\\": 0,\\n    \\"Name\\": \\"测试模板。\\",\\n    \\"Description\\": \\"此模板用于业务测试。\\",\\n    \\"CreateTime\\": \\"2023-01-01 00:00:00\\",\\n    \\"AuthorityTemplateItemList\\": {\\n      \\"AuthorityTemplateItem\\": [\\n        {\\n          \\"ItemId\\": 0,\\n          \\"TemplateId\\": 1563,\\n          \\"ModifierId\\": 0,\\n          \\"ResourceType\\": \\"INSTANCE\\",\\n          \\"InstanceId\\": 0,\\n          \\"DbId\\": 0,\\n          \\"TableName\\": \\"ExampleTable\\",\\n          \\"Attribute\\": \\"\\\\\\"permissionTypes\\\\\\": [\\\\n            \\\\\\"LOGIN\\\\\\"\\\\n          ]\\"\\n        }\\n      ]\\n    }\\n  },\\n  \\"Success\\": true,\\n  \\"Tid\\": 0\\n}","type":"json"}]',
      'title' => '获取权限模板详情',
      'description' => '您在数据管理DMS中的系统角色为管理员或DBA。查看系统角色的具体操作，请参见[查看我的系统角色](~~324212~~)。',
    ),
    'ListAuthorityTemplate' => 
    array (
      'summary' => '调用ListAuthorityTemplate接口获取权限模板列表，包含模板创建者、模板名称、模板创建者及模板总数等信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '填入权限模板名称关键字。',
            'type' => 'string',
            'required' => false,
            'example' => '测试模板',
          ),
        ),
        1 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页显示权限模板的数目。取值如下：

- 5
- 10
- 20',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'maximum' => '200',
            'minimum' => '1',
            'example' => '10',
            'default' => '10',
          ),
        ),
        2 => 
        array (
          'name' => 'PageNumber',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '1',
            'default' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '31853A2B-DC9D-5B39-8492-D2AC8BCF550E',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码，请求异常时返回。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。返回值如下：

- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Tid' => 
              array (
                'description' => '租户ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '3***',
              ),
              'AuthorityTemplateViewList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'AuthorityTemplateView' => 
                  array (
                    'description' => '权限模板列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'TemplateId' => 
                        array (
                          'description' => '权限模板ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2592',
                        ),
                        'CreatorId' => 
                        array (
                          'description' => '权限模板创建者ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '522****',
                        ),
                        'Name' => 
                        array (
                          'description' => '权限模板名称。',
                          'type' => 'string',
                          'example' => '权限模板测试',
                        ),
                        'Description' => 
                        array (
                          'description' => '权限模板描述信息。',
                          'type' => 'string',
                          'example' => '该模板为测试使用。',
                        ),
                        'CreateTime' => 
                        array (
                          'description' => '权限模板的创建时间，时间格式为yyyy-MM-DD HH:mm:ss。',
                          'type' => 'string',
                          'example' => '2023-10-26 11:37:47',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '权限模板总数。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '10',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"31853A2B-DC9D-5B39-8492-D2AC8BCF550E\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"Tid\\": 0,\\n  \\"AuthorityTemplateViewList\\": {\\n    \\"AuthorityTemplateView\\": [\\n      {\\n        \\"TemplateId\\": 2592,\\n        \\"CreatorId\\": 0,\\n        \\"Name\\": \\"权限模板测试\\",\\n        \\"Description\\": \\"该模板为测试使用。\\",\\n        \\"CreateTime\\": \\"2023-10-26 11:37:47\\"\\n      }\\n    ]\\n  },\\n  \\"TotalCount\\": 10\\n}","type":"json"}]',
      'title' => '获取权限模板列表',
    ),
    'DeleteAuthorityTemplate' => 
    array (
      'summary' => '调用DeleteAuthorityTemplate接口可以删除已创建的权限模板。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'write',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'TemplateId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '权限模板ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'example' => '2592',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Tid' => 
              array (
                'description' => '租户ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '3***',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"0C1CB646-1DE4-4AD0-B4A4-7D47DD52E931\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"Tid\\": 0\\n}","type":"json"}]',
      'title' => '删除权限模板',
    ),
    'ExecuteScript' => 
    array (
      'summary' => '调用ExecuteScript执行SQL脚本。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库ID。
> 该参数对应为[SearchDatabase](~~141876~~)、[ListDatabases](~~141873~~)、[GetDatabase](~~141869~~)等接口中的DatabaseId参数，您可以调用这些接口获取。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'minimum' => '1',
            'example' => '123',
          ),
        ),
        1 => 
        array (
          'name' => 'Script',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '要执行的具体SQL脚本。包括DQL、DDL和DML，其中DDL和DML是否允许依赖于实例的安全管控配置。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'select dt from report_daily',
          ),
        ),
        2 => 
        array (
          'name' => 'Logic',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否逻辑库。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '234',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FE8EE2F1-4880-46BC-A704-5CF63EAF9A04',
              ),
              'Results' => 
              array (
                'description' => '脚本执行返回结果列表，列表中每一项对应一个脚本执行结果。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'ColumnNames' => 
                    array (
                      'description' => '执行查询脚本时，返回的结果集字段列表。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '结果集字段。',
                        'type' => 'string',
                        'example' => 'col1',
                      ),
                    ),
                    'Rows' => 
                    array (
                      'description' => '执行查询脚本时，返回的结果数据行。',
                      'type' => 'array',
                      'items' => 
                      array (
                        'description' => '执行查询脚本时，返回的结果数据。',
                        'type' => 'object',
                        'example' => '[{"col1": "value1", "col2":"value2"}]',
                      ),
                    ),
                    'Success' => 
                    array (
                      'description' => '单个脚本执行是否成功。',
                      'type' => 'boolean',
                      'example' => 'true',
                    ),
                    'Message' => 
                    array (
                      'description' => '执行失败时，返回的错误信息。',
                      'type' => 'string',
                      'example' => 'UnknownError',
                    ),
                    'RowCount' => 
                    array (
                      'description' => '返回的结果记录数。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '1',
                    ),
                  ),
                ),
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FE8EE2F1-4880-46BC-A704-5CF63EAF9A04\\",\\n  \\"Results\\": [\\n    {\\n      \\"ColumnNames\\": [\\n        \\"col1\\"\\n      ],\\n      \\"Rows\\": [\\n        [\\n          {\\n            \\"col1\\": \\"value1\\",\\n            \\"col2\\": \\"value2\\"\\n          }\\n        ]\\n      ],\\n      \\"Success\\": true,\\n      \\"Message\\": \\"UnknownError\\",\\n      \\"RowCount\\": 1\\n    }\\n  ],\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<RequestId>FE8EE2F1-4880-46BC-A704-5CF63EAF9A04</RequestId>\\n<Results>\\n    <Message>UnknownError</Message>\\n    <RowCount>1</RowCount>\\n    <Success>true</Success>\\n</Results>\\n<Results>\\n    <ColumnNames>[\\"col1\\", \\"col2\\"]</ColumnNames>\\n    <Rows>[{\\"col1\\": \\"value1\\", \\"col2\\":\\"value2\\"}]</Rows>\\n</Results>\\n<ErrorCode>UnknownError</ErrorCode>\\n<ErrorMessage>UnknownError</ErrorMessage>\\n<Success>true</Success>","errorExample":""}]',
      'title' => '执行SQL脚本',
      'description' => '- 目前仅支持开启安全托管的实例调用该API。开启安全托管操作，请参见[安全托管](~~2637012~~)。

- 目前不支持NoSQL类型的数据库调用此API。',
      'requestParamsDescription' => ' ',
      'responseParamsDescription' => ' ',
      'extraInfo' => ' ',
    ),
    'UpdateTaskFlowConstants' => 
    array (
      'summary' => '调用UpdateTaskFlowConstants接口，更新任务流常量列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '149649',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '3****',
          ),
        ),
        2 => 
        array (
          'name' => 'DagConstants',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '任务流常量列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Key' => 
                array (
                  'description' => '任务流常量键名。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'poc_test',
                ),
                'Value' => 
                array (
                  'description' => '任务流常量键值。',
                  'type' => 'string',
                  'required' => false,
                  'example' => 'poc_test',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'docRequired' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。可用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'C4CCC000-C193-5A32-B701-573F497BF729',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C4CCC000-C193-5A32-B701-573F497BF729\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateTaskFlowConstantsResponse>\\n    <RequestId>C4CCC000-C193-5A32-B701-573F497BF729</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>true</Success>\\n</UpdateTaskFlowConstantsResponse>","errorExample":""}]',
      'title' => '更新任务流常量列表',
    ),
    'DeleteTaskFlow' => 
    array (
      'summary' => '调用DeleteTaskFlow接口，删除任务流。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'abilityTreeCode' => '133185',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '134137***',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9AFE13F6-A4FD-581B-BFDE-B63B1CDC2336',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '403',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：

- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9AFE13F6-A4FD-581B-BFDE-B63B1CDC2336\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteTaskFlowResponse>\\n    <RequestId>9AFE13F6-A4FD-581B-BFDE-B63B1CDC2336</RequestId>\\n    <Success>true</Success>\\n</DeleteTaskFlowResponse>","errorExample":""}]',
      'title' => '删除任务流',
    ),
    'OfflineTaskFlow' => 
    array (
      'summary' => '调用OfflineTaskFlow接口，在DMS中下线已发布的任务流。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '135062',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '7***',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A8FE12AA-300D-5FDF-806F-C2CB99161F32',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A8FE12AA-300D-5FDF-806F-C2CB99161F32\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<OfflineTaskFlowResponse>\\n    <RequestId>A8FE12AA-300D-5FDF-806F-C2CB99161F32</RequestId>\\n    <Success>true</Success>\\n</OfflineTaskFlowResponse>","errorExample":""}]',
      'title' => '下线已发布的任务流',
    ),
    'ListTaskFlow' => 
    array (
      'summary' => '调用ListTaskFlow接口，获取任务流信息列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '133045',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4116147E-C628-5816-8779-8EEAF8E973F4',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '403',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TaskFlowList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TaskFlow' => 
                  array (
                    'description' => '任务流信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '任务流程列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '任务流ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '134137****',
                        ),
                        'CreatorId' => 
                        array (
                          'description' => '创建人的用户ID。',
                          'type' => 'string',
                          'example' => '51****',
                        ),
                        'CreatorNickName' => 
                        array (
                          'description' => '创建人的昵称。

',
                          'type' => 'string',
                          'example' => 'Creator_NickName',
                        ),
                        'DagOwnerNickName' => 
                        array (
                          'description' => '任务流Owner的昵称。',
                          'type' => 'string',
                          'example' => 'Owner_NickName',
                        ),
                        'DeployId' => 
                        array (
                          'description' => '最近一次部署记录的ID。

',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '12**',
                        ),
                        'Status' => 
                        array (
                          'description' => '任务流状态，返回值如下：
- **0**：无效 
- **1**：无调度配置 
- **2**：等待调度',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'LatestInstanceStatus' => 
                        array (
                          'description' => '最后一个运行记录的状态，返回值如下：
- **0**：无效
- **1**：无调度配置
- **2**：等待调度',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'LatestInstanceTime' => 
                        array (
                          'description' => '最近一个运行记录的创建时间。',
                          'type' => 'string',
                          'example' => '2022-04-13',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4116147E-C628-5816-8779-8EEAF8E973F4\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"TaskFlowList\\": {\\n    \\"TaskFlow\\": [\\n      {\\n        \\"Id\\": 0,\\n        \\"CreatorId\\": \\"51****\\",\\n        \\"CreatorNickName\\": \\"Creator_NickName\\",\\n        \\"DagOwnerNickName\\": \\"Owner_NickName\\",\\n        \\"DeployId\\": 0,\\n        \\"Status\\": 2,\\n        \\"LatestInstanceStatus\\": 0,\\n        \\"LatestInstanceTime\\": \\"2022-04-13\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListTaskFlowResponse>\\n    <RequestId>4116147E-C628-5816-8779-8EEAF8E973F4</RequestId>\\n    <Success>true</Success>\\n    <TaskFlowList>\\n        <CreatorId>51****</CreatorId>\\n        <CreatorNickName>Creator_NickName</CreatorNickName>\\n        <DagOwnerNickName>Owner_NickName</DagOwnerNickName>\\n        <Status>2</Status>\\n        <LatestInstanceStatus>0</LatestInstanceStatus>\\n        <LatestInstanceTime>2022-04-13</LatestInstanceTime>\\n    </TaskFlowList>\\n</ListTaskFlowResponse>","errorExample":""}]',
      'title' => '获取任务流信息列表',
    ),
    'GetTaskInstanceRelation' => 
    array (
      'summary' => '调用GetTaskInstanceRelation接口，获取任务流运行记录的节点信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '7***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流运行记录ID（Id），可通过调用接口[ListTaskFlowInstance](~~424689~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '47****',
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '028BF827-3801-5869-8548-F4A039256304',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'NodeList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Node' => 
                  array (
                    'description' => '任务流运行记录的节点信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '运行记录的节点信息列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '任务节点运行记录ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '14059',
                        ),
                        'NodeId' => 
                        array (
                          'description' => '任务节点ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '14059',
                        ),
                        'NodeName' => 
                        array (
                          'description' => '任务节点名称。',
                          'type' => 'string',
                          'example' => 'Spark SQL-1',
                        ),
                        'NodeType' => 
                        array (
                          'description' => '任务节点类型，返回值请参见[NodeType参数说明](~~424705~~)。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '36',
                        ),
                        'BusinessTime' => 
                        array (
                          'description' => '业务时间。',
                          'type' => 'string',
                          'example' => '2021-11-09 14:37:26',
                        ),
                        'Status' => 
                        array (
                          'description' => '任务节点运行状态，取值如下：
- **0**：等待调度
- **1**：正在运行
- **2**：挂起
- **3**：运行失败
- **4**：运行成功
- **5**：已完成',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '4',
                        ),
                        'Message' => 
                        array (
                          'description' => '任务描述信息。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'ExecuteTime' => 
                        array (
                          'description' => '任务执行时间，单位为毫秒。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '170655',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '任务流运行结束时间，时间格式为yyyy-MM-DD HH:mm:ss。',
                          'type' => 'string',
                          'example' => '2021-11-11 14:38:57',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"028BF827-3801-5869-8548-F4A039256304\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"NodeList\\": {\\n    \\"Node\\": [\\n      {\\n        \\"Id\\": 14059,\\n        \\"NodeId\\": 14059,\\n        \\"NodeName\\": \\"Spark SQL-1\\",\\n        \\"NodeType\\": 36,\\n        \\"BusinessTime\\": \\"2021-11-09 14:37:26\\",\\n        \\"Status\\": 4,\\n        \\"Message\\": \\"test\\",\\n        \\"ExecuteTime\\": 170655,\\n        \\"EndTime\\": \\"2021-11-11 14:38:57\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetTaskInstanceRelationResponse>\\n    <RequestId>028BF827-3801-5869-8548-F4A039256304</RequestId>\\n    <Success>true</Success>\\n    <NodeList>\\n        <Id>14059</Id>\\n        <NodeId>14059</NodeId>\\n        <NodeName>Spark SQL-1</NodeName>\\n        <NodeType>36</NodeType>\\n        <BusinessTime>2021-11-09 14:37:26</BusinessTime>\\n        <Status>4</Status>\\n        <Message>test</Message>\\n        <ExecuteTime>170655</ExecuteTime>\\n        <EndTime>2021-11-11 14:38:57</EndTime>\\n    </NodeList>\\n</GetTaskInstanceRelationResponse>","errorExample":""}]',
      'title' => '获取任务流运行记录的节点信息',
    ),
    'ListTaskFlowInstance' => 
    array (
      'summary' => '调用ListTaskFlowInstance接口，获取任务流运行记录。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '132914',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '7***',
          ),
        ),
        1 => 
        array (
          'name' => 'TriggerType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发类型，取值如下：
- **0**：周期调度
- **1**：手动运行',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'StartTimeBegin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '筛选出指定时间之后开始的任务流运行记录。时间格式为yyyy-MM-DD。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2022-01-07',
          ),
        ),
        3 => 
        array (
          'name' => 'StartTimeEnd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '筛选出指定时间之前开始的任务流运行记录。时间格式为yyyy-MM-DD。

',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2022-04-08',
          ),
        ),
        4 => 
        array (
          'name' => 'PageIndex',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '20',
          ),
        ),
        6 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。您可以调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        7 => 
        array (
          'name' => 'UseBizDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '调整筛选条件：  
**true**: StartTimeBegin和StartTimeEnd为筛选业务时间区间范围。   
**false**: StartTimeBegin和StartTimeEnd为任务运行时间区间范围。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        8 => 
        array (
          'name' => 'Status',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务节点运行状态，取值如下：
- **0**：等待调度
- **1**：正在运行
- **2**：挂起
- **3**：运行失败
- **4**：运行成功
- **5**：已完成',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '3',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '8CFF2295-8249-5287-B888-DBD4F0D76CB0',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DAGInstanceList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DAGInstance' => 
                  array (
                    'description' => '任务流运行记录列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '任务流运行记录列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '运行记录ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '9234',
                        ),
                        'BusinessTime' => 
                        array (
                          'description' => '任务流业务时间，时间格式为yyyy-MM-DD HH:mm:ss。',
                          'type' => 'string',
                          'example' => '2021-11-10 14:37:26',
                        ),
                        'startTime' => 
                        array (
                          'description' => '任务流运行开始时间，时间格式为yyyy-MM-DD HH:mm:ss。',
                          'type' => 'string',
                          'example' => '2021-11-11 14:35:57
',
                        ),
                        'EndTime' => 
                        array (
                          'description' => '任务流运行结束时间，时间格式为yyyy-MM-DD HH:mm:ss。',
                          'type' => 'string',
                          'example' => '2021-11-11 14:38:57',
                        ),
                        'DagId' => 
                        array (
                          'description' => '任务流ID。',
                          'type' => 'string',
                          'example' => '7***',
                        ),
                        'TriggerType' => 
                        array (
                          'description' => '触发类型。返回值如下：
- **0**：周期调度
- **1**：手动运行',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'Status' => 
                        array (
                          'description' => '任务流状态，返回值如下：

- **0**：等待调度
- **1**：运行中
- **2**：暂停
- **3**：失败
- **4**：成功
- **5**：完成',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '4',
                        ),
                        'Message' => 
                        array (
                          'description' => '任务描述信息。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'HistoryDagId' => 
                        array (
                          'description' => '历史任务流版本ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2****',
                        ),
                        'DagName' => 
                        array (
                          'description' => '任务流名称。',
                          'type' => 'string',
                          'example' => 'Spark_SQL_test',
                        ),
                        'OwnerName' => 
                        array (
                          'description' => '任务流Owner的名称。',
                          'type' => 'string',
                          'example' => 'test_name',
                        ),
                        'DagVersion' => 
                        array (
                          'description' => '任务流版本。
',
                          'type' => 'string',
                          'example' => '[]',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '满足条件运行记录总个数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8CFF2295-8249-5287-B888-DBD4F0D76CB0\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"DAGInstanceList\\": {\\n    \\"DAGInstance\\": [\\n      {\\n        \\"Id\\": 9234,\\n        \\"BusinessTime\\": \\"2021-11-10 14:37:26\\",\\n        \\"startTime\\": \\"2021-11-11 14:35:57\\\\n\\",\\n        \\"EndTime\\": \\"2021-11-11 14:38:57\\",\\n        \\"DagId\\": \\"7***\\",\\n        \\"TriggerType\\": 1,\\n        \\"Status\\": 4,\\n        \\"Message\\": \\"test\\",\\n        \\"HistoryDagId\\": 0,\\n        \\"DagName\\": \\"Spark_SQL_test\\",\\n        \\"OwnerName\\": \\"test_name\\",\\n        \\"DagVersion\\": \\"[]\\"\\n      }\\n    ]\\n  },\\n  \\"TotalCount\\": 1\\n}","errorExample":""},{"type":"xml","example":"<ListTaskFlowInstanceResponse>\\n    <RequestId>8CFF2295-8249-5287-B888-DBD4F0D76CB0</RequestId>\\n    <Success>true</Success>\\n    <DAGInstanceList>\\n        <Id>9234</Id>\\n        <BusinessTime>2021-11-10 14:37:26</BusinessTime>\\n        <EndTime>2021-11-11 14:38:57</EndTime>\\n        <DagId>7***</DagId>\\n        <TriggerType>1</TriggerType>\\n        <Status>4</Status>\\n        <Message>test</Message>\\n        <DagName>Spark_SQL_test</DagName>\\n        <OwnerName>test_name</OwnerName>\\n    </DAGInstanceList>\\n    <TotalCount>1</TotalCount>\\n</ListTaskFlowInstanceResponse>","errorExample":""}]',
      'title' => '获取任务流运行记录',
    ),
    'ListDAGVersions' => 
    array (
      'summary' => '调用ListDAGVersions接口，获取任务流历史发布版本信息列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '133412',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '7***',
          ),
        ),
        1 => 
        array (
          'name' => 'PageIndex',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '20',
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C7775630-7901-51B9-8782-9B585EC0799A',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '403',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：

- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TotalCount' => 
              array (
                'description' => '查询结果总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '1',
              ),
              'DagVersionList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DagVersion' => 
                  array (
                    'description' => '发布版本列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '发布版本列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'DagName' => 
                        array (
                          'description' => '任务流名称。',
                          'type' => 'string',
                          'example' => 'Spark SQL',
                        ),
                        'DagOwnerId' => 
                        array (
                          'description' => '任务流Owner的用户ID。',
                          'type' => 'string',
                          'example' => '51****',
                        ),
                        'DagOwnerNickName' => 
                        array (
                          'description' => '任务流Owner的昵称。',
                          'type' => 'string',
                          'example' => 'name',
                        ),
                        'VersionComments' => 
                        array (
                          'description' => '任务流版本描述。',
                          'type' => 'string',
                          'example' => 'test_OSS',
                        ),
                        'VersionId' => 
                        array (
                          'description' => '任务流版本ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2****',
                        ),
                        'LastVersionId' => 
                        array (
                          'description' => '上一个发布版本ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C7775630-7901-51B9-8782-9B585EC0799A\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"TotalCount\\": 1,\\n  \\"DagVersionList\\": {\\n    \\"DagVersion\\": [\\n      {\\n        \\"DagName\\": \\"Spark SQL\\",\\n        \\"DagOwnerId\\": \\"51****\\",\\n        \\"DagOwnerNickName\\": \\"name\\",\\n        \\"VersionComments\\": \\"test_OSS\\",\\n        \\"VersionId\\": 0,\\n        \\"LastVersionId\\": 0\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListDAGVersionsResponse>\\n    <TotalCount>1</TotalCount>\\n    <RequestId>C7775630-7901-51B9-8782-9B585EC0799A</RequestId>\\n    <DagVersionList>\\n        <DagVersion>\\n            <VersionId>2****</VersionId>\\n            <DagOwnerId>51****</DagOwnerId>\\n            <VersionComments>test_OSS</VersionComments>\\n            <DagName>Spark SQL</DagName>\\n            <DagOwnerNickName>name</DagOwnerNickName>\\n        </DagVersion>\\n    </DagVersionList>\\n    <Success>true</Success>\\n</ListDAGVersionsResponse>","errorExample":""}]',
      'title' => '获取任务流历史发布版本信息列表',
    ),
    'ReDeployLhDagVersion' => 
    array (
      'summary' => '调用ReDeployLhDagVersion接口，重新部署任务流历史版本。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '131692',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '7***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流版本ID（VersionId），可通过调用接口[ListDAGVersions](~~424682~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '2****',
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，您可以调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '035C92E0-2EAD-50E5-A6DD-550F5F73D7CE',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '403',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DeployId' => 
              array (
                'description' => '部署记录ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '15990',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"035C92E0-2EAD-50E5-A6DD-550F5F73D7CE\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"DeployId\\": 15990\\n}","errorExample":""},{"type":"xml","example":"<ReDeployLhDagVersionResponse>\\n    <RequestId>035C92E0-2EAD-50E5-A6DD-550F5F73D7CE</RequestId>\\n    <DeployId>15990</DeployId>\\n    <Success>true</Success>\\n</ReDeployLhDagVersionResponse>","errorExample":""}]',
      'title' => '重新部署任务流历史版本',
    ),
    'UpdateScenario' => 
    array (
      'summary' => '调用UpdateScenario接口，更新任务流业务场景名称和描述。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '149050',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务场景ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '12***',
          ),
        ),
        2 => 
        array (
          'name' => 'ScenarioName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务场景名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '业务场景-测试',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务场景描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7FAD400F-7A5C-4193-8F9A-39D86C4F0231',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7FAD400F-7A5C-4193-8F9A-39D86C4F0231\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateScenarioResponse>\\n    <RequestId>7FAD400F-7A5C-4193-8F9A-39D86C4F0231</RequestId>\\n    <Success>true</Success>\\n</UpdateScenarioResponse>","errorExample":""}]',
      'title' => '更新任务流业务场景名称和描述',
    ),
    'ResumeTaskFlowInstance' => 
    array (
      'summary' => '调用ResumeTaskFlowInstance接口，恢复已暂停运行的任务流。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '149248',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。可通过调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '11****',
          ),
        ),
        2 => 
        array (
          'name' => 'DagInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流运行记录ID（Id），可通过调用[ListTaskFlowInstance](~~424689~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '3****',
          ),
        ),
        3 => 
        array (
          'name' => 'DagVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流版本号。可通过调用[ListDAGVersions](~~424682~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '[]',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7FF2E325-763F-5E27-9157-C3CFA02F4CBF',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7FF2E325-763F-5E27-9157-C3CFA02F4CBF\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ResumeTaskFlowInstanceResponse>\\n    <RequestId>7FF2E325-763F-5E27-9157-C3CFA02F4CBF</RequestId>\\n    <Success>true</Success>\\n</ResumeTaskFlowInstanceResponse>","errorExample":""}]',
      'title' => '恢复已暂停运行的任务流',
      'description' => '此接口仅适用于已暂停运行的任务流。',
    ),
    'UpdateTaskContent' => 
    array (
      'summary' => '调用UpdateTaskContent接口，更新任务流中的任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '149054',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'NodeId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务节点ID，可调用[GetTaskInstanceRelation](~~424711~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '43****',
          ),
        ),
        2 => 
        array (
          'name' => 'NodeContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '修改后的节点配置内容。',
            'type' => 'string',
            'required' => false,
            'example' => '{ "dbId":12****, "sql":"select * from test_table",   "dbType":"lindorm_sql"  }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '39557312-28D5-528F-9554-80C0700EB489',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"39557312-28D5-528F-9554-80C0700EB489\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateTaskContentResponse>\\n    <RequestId>39557312-28D5-528F-9554-80C0700EB489</RequestId>\\n    <Success>true</Success>\\n</UpdateTaskContentResponse>","errorExample":""}]',
      'title' => '更新任务流中的任务',
      'description' => '该接口可用于修改节点配置内容。',
    ),
    'ListTaskFlowsByPage' => 
    array (
      'summary' => '调用ListTaskFlowsByPage接口，分页获取任务流详情列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '149056',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '过滤条件，应用场景ID',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '12***',
          ),
        ),
        2 => 
        array (
          'name' => 'DagIdList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '过滤条件，任务流ID列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '过滤条件，任务流ID。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '4512',
            ),
            'required' => false,
            'maxItems' => 100,
          ),
        ),
        3 => 
        array (
          'name' => 'SearchKey',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '搜索任务流名称关键字。',
            'type' => 'string',
            'required' => false,
            'example' => '测试节点',
          ),
        ),
        4 => 
        array (
          'name' => 'PageIndex',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '第几页。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '1',
            'default' => '1',
          ),
        ),
        5 => 
        array (
          'name' => 'PageSize',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '每页数据量。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'example' => '20',
            'default' => '20',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '6CB28697-BFE2-5739-9228-3971990E982C',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TaskFlowList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TaskFlow' => 
                  array (
                    'description' => '任务流信息列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '任务流ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '7***',
                        ),
                        'DagName' => 
                        array (
                          'description' => '任务流名称。',
                          'type' => 'string',
                          'example' => 'poc_task_test',
                        ),
                        'Description' => 
                        array (
                          'description' => '任务流描述。',
                          'type' => 'string',
                          'example' => 'test',
                        ),
                        'CreatorId' => 
                        array (
                          'description' => '创建人的用户ID。',
                          'type' => 'string',
                          'example' => '51****',
                        ),
                        'CreatorNickName' => 
                        array (
                          'description' => '创建任务流用户的昵称。

',
                          'type' => 'string',
                          'example' => 'Creator_NickName',
                        ),
                        'DagOwnerNickName' => 
                        array (
                          'description' => '任务流Owner的昵称。',
                          'type' => 'string',
                          'example' => 'Owner_NickName',
                        ),
                        'DeployId' => 
                        array (
                          'description' => '最近一次部署记录的ID。

',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '65***',
                        ),
                        'Status' => 
                        array (
                          'description' => '任务流状态，返回值如下：
- **0**：无效。
- **1**：无调度配置。
- **2**：等待调度。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1',
                        ),
                        'LatestInstanceStatus' => 
                        array (
                          'description' => '最后一个运行记录的状态，返回值如下：
- **0**：无效。
- **1**：无调度配置。
- **2**：等待调度。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'LatestInstanceTime' => 
                        array (
                          'description' => '最近一个运行记录的创建时间。',
                          'type' => 'string',
                          'example' => '2022-04-13',
                        ),
                        'ScenarioId' => 
                        array (
                          'description' => '应用场景ID。

',
                          'type' => 'string',
                          'example' => '1245',
                        ),
                        'CronSwitch' => 
                        array (
                          'description' => '是否开启定时调度。',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'CronStr' => 
                        array (
                          'description' => '定时调度Cron。',
                          'type' => 'string',
                          'example' => '0 0 1 * * ? *',
                        ),
                        'ScheduleParam' => 
                        array (
                          'description' => '事件调度配置，JSON字符串格式。',
                          'type' => 'string',
                          'example' => '{\\"triggerType\\":\\"1\\",\\"specificTime\\":\'2022-11-15 11:59\'}',
                        ),
                        'TriggerType' => 
                        array (
                          'description' => '触发类型。返回值如下：
- **0**：周期调度
- **1**：手动运行',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'CronType' => 
                        array (
                          'description' => '调度周期类型。取值如下：
- **2**: 小时级调度
- **3**: 日级调度
- **4**: 周级调度
- **5**: 月级调度',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'CronBeginDate' => 
                        array (
                          'description' => '定时调度开始时间，此时间点之前任务流不进行调度。',
                          'type' => 'string',
                          'example' => '1970-01-01',
                        ),
                        'CronEndDate' => 
                        array (
                          'description' => '定时调度结束时间，此时间点之后任务流不进行调度。',
                          'type' => 'string',
                          'example' => '2023-01-01',
                        ),
                        'TimeZoneId' => 
                        array (
                          'description' => '时区设置，默认为东八区（Asia/Shanghai）。',
                          'type' => 'string',
                          'example' => 'Asia/Shanghai',
                        ),
                        'DagOwnerId' => 
                        array (
                          'description' => '任务流负责人的用户ID。',
                          'type' => 'string',
                          'example' => '12***89',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'TotalCount' => 
              array (
                'description' => '记录总数。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '24',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"6CB28697-BFE2-5739-9228-3971990E982C\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"TaskFlowList\\": {\\n    \\"TaskFlow\\": [\\n      {\\n        \\"Id\\": 0,\\n        \\"DagName\\": \\"poc_task_test\\",\\n        \\"Description\\": \\"test\\",\\n        \\"CreatorId\\": \\"51****\\",\\n        \\"CreatorNickName\\": \\"Creator_NickName\\",\\n        \\"DagOwnerNickName\\": \\"Owner_NickName\\",\\n        \\"DeployId\\": 0,\\n        \\"Status\\": 1,\\n        \\"LatestInstanceStatus\\": 0,\\n        \\"LatestInstanceTime\\": \\"2022-04-13\\",\\n        \\"ScenarioId\\": \\"1245\\",\\n        \\"CronSwitch\\": false,\\n        \\"CronStr\\": \\"0 0 1 * * ? *\\",\\n        \\"ScheduleParam\\": \\"{\\\\\\\\\\\\\\"triggerType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"specificTime\\\\\\\\\\\\\\":\'2022-11-15 11:59\'}\\",\\n        \\"TriggerType\\": 0,\\n        \\"CronType\\": 2,\\n        \\"CronBeginDate\\": \\"1970-01-01\\",\\n        \\"CronEndDate\\": \\"2023-01-01\\",\\n        \\"TimeZoneId\\": \\"Asia/Shanghai\\",\\n        \\"DagOwnerId\\": \\"12***89\\"\\n      }\\n    ]\\n  },\\n  \\"TotalCount\\": 24\\n}","errorExample":""},{"type":"xml","example":"<ListTaskFlowsByPageResponse>\\n    <RequestId>6CB28697-BFE2-5739-9228-3971990E982C</RequestId>\\n    <Success>true</Success>\\n    <TaskFlowList>\\n        <DagName>poc_task_test</DagName>\\n        <Description>test</Description>\\n        <CreatorId>51****</CreatorId>\\n        <CreatorNickName>Creator_NickName</CreatorNickName>\\n        <DagOwnerNickName>Owner_NickName</DagOwnerNickName>\\n        <Status>1</Status>\\n        <LatestInstanceStatus>0</LatestInstanceStatus>\\n        <LatestInstanceTime>2022-04-13</LatestInstanceTime>\\n    </TaskFlowList>\\n    <TotalCount>24</TotalCount>\\n</ListTaskFlowsByPageResponse>","errorExample":""}]',
      'title' => '分页获取任务流详情列表',
      'requestParamsDescription' => '过滤条件之间的关系为AND。',
    ),
    'ListScenarios' => 
    array (
      'summary' => '调用ListScenarios接口，获取业务场景列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '149049',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7FAD400F-7A5C-4193-8F9A-39D86C4F0231',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ScenarioList' => 
              array (
                'description' => '业务场景列表。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'Id' => 
                    array (
                      'description' => '业务场景ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '41***',
                    ),
                    'ScenarioName' => 
                    array (
                      'description' => '业务场景名称。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                    'CreatorId' => 
                    array (
                      'description' => '创建人的用户ID。',
                      'type' => 'string',
                      'example' => '23***',
                    ),
                    'Description' => 
                    array (
                      'description' => '业务场景描述。',
                      'type' => 'string',
                      'example' => 'test',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7FAD400F-7A5C-4193-8F9A-39D86C4F0231\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"ScenarioList\\": [\\n    {\\n      \\"Id\\": 0,\\n      \\"ScenarioName\\": \\"test\\",\\n      \\"CreatorId\\": \\"23***\\",\\n      \\"Description\\": \\"test\\"\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListScenariosResponse>\\n    <RequestId>7FAD400F-7A5C-4193-8F9A-39D86C4F0231</RequestId>\\n    <Success>true</Success>\\n    <ScenarioList>\\n        <ScenarioName>test</ScenarioName>\\n        <CreatorId>23***</CreatorId>\\n        <Description>test</Description>\\n    </ScenarioList>\\n</ListScenariosResponse>","errorExample":""}]',
      'title' => '获取业务场景列表',
    ),
    'UpdateTaskConfig' => 
    array (
      'summary' => '调用UpdateTaskConfig接口，更新任务高级配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '149772',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'NodeId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务节点ID，可调用[GetTaskInstanceRelation](~~424711~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '43****',
          ),
        ),
        2 => 
        array (
          'name' => 'NodeConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点高级配置。取值为JSON字符串格式。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{ "rerun":{ "rerunEnable":true,  "rerunCount":1,   "rerunInterval":10 } }',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F4E2A94B-604F-43FF-93E7-F4EE3DCF412E',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F4E2A94B-604F-43FF-93E7-F4EE3DCF412E\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateTaskConfigResponse>\\n    <RequestId>F4E2A94B-604F-43FF-93E7-F4EE3DCF412E</RequestId>\\n    <Success>true</Success>\\n</UpdateTaskConfigResponse>","errorExample":""}]',
      'title' => '更新任务高级配置',
      'description' => '调用此接口也可以配置失败任务、重跑任务。',
      'requestParamsDescription' => 'NodeConfig为JSON字符串格式，如下：
```Json
{
    "rerun":{ // 必填固定值
        "rerunEnable":true, // 是否开启重跑
        "rerunCount":1, // 重跑次数
        "rerunInterval":10 // 重跑间隔
    }
}
```',
    ),
    'ListTaskFlowConstants' => 
    array (
      'summary' => '调用ListTaskFlowConstants接口获取任务流常量列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '149650',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '3****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '028BF827-3801-5869-8548-F4A039256304',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，取值：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DagConstants' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'DagConstant' => 
                  array (
                    'description' => '任务流常量键值对列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Key' => 
                        array (
                          'description' => '常量键。',
                          'type' => 'string',
                          'example' => 'example',
                        ),
                        'Value' => 
                        array (
                          'description' => '常量值。',
                          'type' => 'string',
                          'example' => '0',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"028BF827-3801-5869-8548-F4A039256304\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"DagConstants\\": {\\n    \\"DagConstant\\": [\\n      {\\n        \\"Key\\": \\"example\\",\\n        \\"Value\\": \\"0\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListTaskFlowConstantsResponse>\\n    <RequestId>028BF827-3801-5869-8548-F4A039256304</RequestId>\\n    <Success>true</Success>\\n    <DagConstants>\\n        <Key>example</Key>\\n        <Value>0</Value>\\n    </DagConstants>\\n</ListTaskFlowConstantsResponse>","errorExample":""}]',
      'title' => '获取任务流常量列表',
    ),
    'BackFill' => 
    array (
      'summary' => '调用BackFill接口，给任务编排补数据。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '149001',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '15***',
          ),
        ),
        2 => 
        array (
          'name' => 'StartNodeIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '补数据开始节点ID列表。

> 参数缺省时运行整个任务流。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '待补数据的任务节点数。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '2',
            ),
            'required' => false,
          ),
        ),
        3 => 
        array (
          'name' => 'FilterNodeIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '过滤条件，指定任务流中无需补数据的节点Id列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '任务流中无需补数据的节点ID。',
              'type' => 'integer',
              'format' => 'int64',
              'required' => false,
              'example' => '12***',
            ),
            'required' => false,
          ),
        ),
        4 => 
        array (
          'name' => 'IsTriggerSubTree',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否运行下游节点。缺省时默认为true。',
            'type' => 'boolean',
            'required' => false,
            'example' => 'true',
          ),
        ),
        5 => 
        array (
          'name' => 'BackFillDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '补数据业务时间。指定时间补数据需要填写该参数。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-01-14',
          ),
        ),
        6 => 
        array (
          'name' => 'BackFillDateBegin',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '补数据开始业务时间。指定时间范围补数据需要填写该参数。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-01-14',
          ),
        ),
        7 => 
        array (
          'name' => 'BackFillDateEnd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '补数据结束业务时间。指定时间范围补数据需要填写该参数。',
            'type' => 'string',
            'required' => false,
            'example' => '2022-09-29',
          ),
        ),
        8 => 
        array (
          'name' => 'Interval',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '补数据时间间隔，单位：小时。最小值：1，默认值：24。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => false,
            'minimum' => '1',
            'example' => '24',
          ),
        ),
        9 => 
        array (
          'name' => 'Asc',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '补数据任务流运行顺序。取值：
- **0**：降序。从大日期到小日期。
- **1**：默认值，升序。从小日期到大日期。',
            'type' => 'boolean',
            'required' => false,
            'example' => '0',
          ),
        ),
        10 => 
        array (
          'name' => 'HistoryDagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '历史任务流ID。

> 若您未填写该参数，在调用API时，系统会自动获取最近发布的任务流版本ID作为该参数的值。若没有发布过任务流，系统获取不到任务流版本ID，则调用会出错。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '16***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7FAD400F-7A5C-4193-8F9A-39D86C4F0231',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DagInstanceId' => 
              array (
                'description' => '任务流运行记录ID，可通过调用接口[ListTaskFlowInstance](~~424689~~)获取该参数的值。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '47****',
              ),
              'NodeId' => 
              array (
                'description' => '同DagInstanceId。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '47****
',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7FAD400F-7A5C-4193-8F9A-39D86C4F0231\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"DagInstanceId\\": 0,\\n  \\"NodeId\\": 0\\n}","errorExample":""},{"type":"xml","example":"<BackFillResponse>\\n    <RequestId>7FAD400F-7A5C-4193-8F9A-39D86C4F0231</RequestId>\\n    <Success>true</Success>\\n</BackFillResponse>","errorExample":""}]',
      'title' => '给任务编排补数据',
      'description' => '补充数据时，任务流按照日期串行执行，可指定按日期升序或降序执行。补充数据完成后，可指定日期或日期范围，以及节点范围来运行任务流。',
      'requestParamsDescription' => '指定日期补数据，需提供BackFillDate参数。  
指定时间范围补数据，需提供BackFillDateBegin和BackFillDateEnd参数。',
    ),
    'UpdateTaskTimeVariables' => 
    array (
      'summary' => '更新任务时间变量。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '148809',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'NodeId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务节点ID，可调用[GetTaskInstanceRelation](~~424711~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '43****',
          ),
        ),
        2 => 
        array (
          'name' => 'TimeVariables',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点变量，时间变量配置。取值类型为JSON格式的字符串。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{"variables":[ {"name":"var", "pattern":"yyyy-MM-dd|+0m+0h-2d+0w+0M+1y"} ]}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '39557312-28D5-528F-9554-80C0700EB489',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"39557312-28D5-528F-9554-80C0700EB489\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateTaskTimeVariablesResponse>\\n    <RequestId>39557312-28D5-528F-9554-80C0700EB489</RequestId>\\n    <Success>true</Success>\\n</UpdateTaskTimeVariablesResponse>","errorExample":""}]',
      'title' => '更新任务时间变量',
    ),
    'ListTaskFlowTimeVariables' => 
    array (
      'summary' => '调用ListTaskFlowTimeVariables接口，获取任务流时间变量列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '148791',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '11****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'EC12A3BE-149F-5365-AF33-12CC8C963923',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TimeVariables' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'TimeVariable' => 
                  array (
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Name' => 
                        array (
                          'type' => 'string',
                        ),
                        'Pattern' => 
                        array (
                          'type' => 'string',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"EC12A3BE-149F-5365-AF33-12CC8C963923\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"TimeVariables\\": {\\n    \\"timeVariable\\": [\\n      {\\n        \\"Name\\": \\"time_test\\",\\n        \\"Pattern\\": \\"2018-09-26|+7h\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListTaskFlowTimeVariablesResponse>\\n    <RequestId>EC12A3BE-149F-5365-AF33-12CC8C963923</RequestId>\\n    <TimeVariables>\\n        <TimeVariable>\\n            <Pattern>2018-09-26|+7h</Pattern>\\n            <Name>test</Name>\\n        </TimeVariable>\\n        <TimeVariable>\\n            <Pattern>yyyy-MM-dd|+0d</Pattern>\\n            <Name>test01</Name>\\n        </TimeVariable>\\n    </TimeVariables>\\n    <Success>true</Success>\\n</ListTaskFlowTimeVariablesResponse>","errorExample":""}]',
      'title' => '获取任务流时间变量列表',
    ),
    'UpdateTaskFlowTimeVariables' => 
    array (
      'summary' => '调用UpdateTaskFlowTimeVariables接口，更新任务流时间变量。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '148792',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可调用[GetTaskInstanceRelation](~~424711~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '43****',
          ),
        ),
        2 => 
        array (
          'name' => 'TimeVariables',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流时间变量。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{"variables":[ {"name":"var", "pattern":"yyyy-MM-dd|+0m+0h-2d+0w+0M+1y"} ]}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '39557312-28D5-528F-9554-80C0700EB489',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"39557312-28D5-528F-9554-80C0700EB489\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateTaskFlowTimeVariablesResponse>\\n    <RequestId>39557312-28D5-528F-9554-80C0700EB489</RequestId>\\n    <Success>true</Success>\\n</UpdateTaskFlowTimeVariablesResponse>","errorExample":""}]',
      'title' => '更新任务流时间变量',
      'requestParamsDescription' => 'TimeVariables为JSON字符串格式，示例说明如下：
```JSON
{
    "variables":[
        {
            "name":"var",// 变量命名
            /*
            变量格式
            语法示例如示例值所示——在运行时日期的基础上，偏移“分”、“时”、“日”、“周”、“月”、“年”(可缺省，可不按照此顺序)。
            */
            "pattern":"yyyy-MM-dd|+0d" 
        },
        {
            "name":"test",
            "pattern":"yyyy-MM-dd|+0d"
        }
    ]
}
```',
    ),
    'UpdateTaskFlowCooperators' => 
    array (
      'summary' => '调用UpdateTaskFlowCooperators接口，更新任务流相关人员列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '148725',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '11****',
          ),
        ),
        2 => 
        array (
          'name' => 'CooperatorIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '待更新的相关人员用户Id列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '相关人员的用户ID。

',
              'type' => 'string',
              'required' => false,
              'example' => '12****',
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'D05B3EE1-B6D3-5B17-8CA6-A8054828E5B2',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D05B3EE1-B6D3-5B17-8CA6-A8054828E5B2\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateTaskFlowCooperatorsResponse>\\n    <RequestId>D05B3EE1-B6D3-5B17-8CA6-A8054828E5B2</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>true</Success>\\n</UpdateTaskFlowCooperatorsResponse>","errorExample":""}]',
      'title' => '更新任务流相关人员列表',
    ),
    'CreateScenario' => 
    array (
      'summary' => '调用CreateScenario接口，创建业务场景，也可以将任务流按业务场景进行分组。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '149047',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'ScenarioName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务场景名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '业务场景-测试',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务场景描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '4E1D2B4D-3E53-4ABC-999D-1D2520B3471A',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ScenarioId' => 
              array (
                'description' => '业务场景ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '36***',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"4E1D2B4D-3E53-4ABC-999D-1D2520B3471A\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"ScenarioId\\": 0\\n}","errorExample":""},{"type":"xml","example":"<CreateScenarioResponse>\\n    <RequestId>4E1D2B4D-3E53-4ABC-999D-1D2520B3471A</RequestId>\\n    <ScenarioId>36***</ScenarioId>\\n    <Success>true</Success>\\n</CreateScenarioResponse>","errorExample":""}]',
      'title' => '创建业务场景',
    ),
    'DeleteScenario' => 
    array (
      'summary' => '调用DeleteScenario接口，删除业务场景。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'abilityTreeCode' => '149048',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '业务场景ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '12***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '12***',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。

',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"12***\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteScenarioResponse>\\n    <RequestId>12***</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>true</Success>\\n</DeleteScenarioResponse>","errorExample":""}]',
      'title' => '删除业务场景',
      'description' => '使用此接口时，您需要保证当前业务场景下的任务流为空。',
    ),
    'UpdateSLARules' => 
    array (
      'summary' => '调用此API可以更新任务流SLA超时提醒。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '148629',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '11****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        2 => 
        array (
          'name' => 'SlaRuleList',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => 'SLA规则列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'DagId' => 
                array (
                  'description' => '任务流ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'example' => '15***',
                ),
                'NodeId' => 
                array (
                  'description' => '任务节点ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '0',
                ),
                'Type' => 
                array (
                  'description' => '规则类型：  
- **0**：任务流SLA规则。  
- **1**：任务节点SLA规则。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => true,
                  'example' => '0',
                ),
                'IntervalMinutes' => 
                array (
                  'description' => '超时时间（单位：分钟）。',
                  'type' => 'integer',
                  'format' => 'int32',
                  'required' => true,
                  'example' => '1080',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '88E053F7-347B-52DD-A186-1F340EEC0C27',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"88E053F7-347B-52DD-A186-1F340EEC0C27\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateSLARulesResponse>\\n    <RequestId>88E053F7-347B-52DD-A186-1F340EEC0C27</RequestId>\\n    <Success>true</Success>\\n</UpdateSLARulesResponse>","errorExample":""}]',
      'title' => '更新任务流SLA超时提醒',
      'description' => 'SLA规则随着任务流的部署、发布而生效。',
    ),
    'GetRuleNumLimitOfSLA' => 
    array (
      'summary' => '调用GetRuleNumLimitOfSLA接口，获取任务编排自定义SLA规则的限制数量，自定义的SLA规则数量不可超过该限制数。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '11****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'D05B3EE1-B6D3-5B17-8CA6-A8054828E5B2',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'RuleNumLimit' => 
              array (
                'description' => 'SLA规则数量限制。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '12',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D05B3EE1-B6D3-5B17-8CA6-A8054828E5B2\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"RuleNumLimit\\": 12\\n}","errorExample":""},{"type":"xml","example":"<GetRuleNumLimitOfSLAResponse>\\n    <RequestId>8EE72AAA-88DE-5747-A63B-43887BFE5480</RequestId>\\n    <RuleNumLimit>20</RuleNumLimit>\\n    <Success>true</Success>\\n</GetRuleNumLimitOfSLAResponse>","errorExample":""}]',
      'title' => '获取自定义SLA规则数量限制',
    ),
    'GetIntervalLimitOfSLA' => 
    array (
      'summary' => '调用GetIntervalLimitOfSLA接口，获取任务流允许配置SLA超时规则时，其最小调度周期限制。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '11****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '5B96E35F-A58E-5399-9041-09CF9A1E46EA',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：

- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'IntervalLimit' => 
              array (
                'description' => '周期限制（单位：分钟）。',
                'type' => 'integer',
                'format' => 'int32',
                'example' => '59',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"5B96E35F-A58E-5399-9041-09CF9A1E46EA\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"IntervalLimit\\": 59\\n}","errorExample":""},{"type":"xml","example":"<GetIntervalLimitOfSLAResponse>\\n    <RequestId>5B96E35F-A58E-5399-9041-09CF9A1E46EA</RequestId>\\n    <Success>true</Success>\\n    <IntervalLimit>59</IntervalLimit>\\n</GetIntervalLimitOfSLAResponse>","errorExample":""}]',
      'title' => '获取超时规则最小调度周期',
      'description' => '设置SLA规则时，任务流的调度周期需要大于SLA规则数量限制。',
    ),
    'ListDefaultSLARules' => 
    array (
      'summary' => '调用ListDefaultSLARules，获取默认SLA超时提醒规则。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '148628',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '11****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '3E8AF4C3-A822-53A8-970C-059EE83BBD5A',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'SLARuleList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SLARule' => 
                  array (
                    'description' => 'SLA规则列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => 'SLA规则ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'DagId' => 
                        array (
                          'description' => '任务流ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        'NodeId' => 
                        array (
                          'description' => '任务流节点ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '0',
                        ),
                        'RuleType' => 
                        array (
                          'description' => '规则类型：
- **0**：任务流SLA规则。
- **1**：任务节点SLA规则。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'IntervalMinutes' => 
                        array (
                          'description' => '超时时间(单位: 分钟)。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1080',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3E8AF4C3-A822-53A8-970C-059EE83BBD5A\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"SLARuleList\\": {\\n    \\"SLARule\\": [\\n      {\\n        \\"Id\\": 1,\\n        \\"DagId\\": 0,\\n        \\"NodeId\\": 0,\\n        \\"RuleType\\": 0,\\n        \\"IntervalMinutes\\": 1080\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListDefaultSLARulesResponse>\\n    <RequestId>3E8AF4C3-A822-53A8-970C-059EE83BBD5A</RequestId>\\n    <SLARuleList>\\n        <SLARule>\\n            <IntervalMinutes>1080</IntervalMinutes>\\n            <RuleType>0</RuleType>\\n            <Id>1</Id>\\n            <DagId>0</DagId>\\n            <NodeId>0</NodeId>\\n        </SLARule>\\n    </SLARuleList>\\n    <Success>true</Success>\\n</ListDefaultSLARulesResponse>","errorExample":""}]',
      'title' => '获取默认SLA超时规则',
    ),
    'ListTaskFlowCooperators' => 
    array (
      'summary' => '获取任务流相关人列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '147902',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '15****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。
',
                'type' => 'string',
                'example' => '54C99C70-2DFF-5A8C-A252-EBAA1EB668EC',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'CooperatorList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Cooperator' => 
                  array (
                    'description' => '相关人员列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '相关人员信息。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'NickName' => 
                        array (
                          'description' => '用户昵称。',
                          'type' => 'string',
                          'example' => 'name',
                        ),
                        'Email' => 
                        array (
                          'description' => '用户邮箱。',
                          'type' => 'string',
                          'example' => 'test@XX.com',
                        ),
                        'LoginName' => 
                        array (
                          'description' => '用户名。',
                          'type' => 'string',
                          'example' => 'name',
                        ),
                        'UserId' => 
                        array (
                          'description' => '用户ID。',
                          'type' => 'string',
                          'example' => '123',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"54C99C70-2DFF-5A8C-A252-EBAA1EB668EC\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"CooperatorList\\": {\\n    \\"Cooperator\\": [\\n      {\\n        \\"NickName\\": \\"name\\",\\n        \\"Email\\": \\"test@XX.com\\",\\n        \\"LoginName\\": \\"name\\",\\n        \\"UserId\\": \\"123\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListTaskFlowCooperatorsResponse>\\n    <RequestId>54C99C70-2DFF-5A8C-A252-EBAA1EB668EC</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>true</Success>\\n    <CooperatorList>\\n        <NickName>name</NickName>\\n        <Email>test@XX.com</Email>\\n        <LoginName>name</LoginName>\\n    </CooperatorList>\\n</ListTaskFlowCooperatorsResponse>","errorExample":""}]',
      'title' => '获取任务流相关人列表',
    ),
    'ListSLARules' => 
    array (
      'summary' => '调用此API可以获取自定义SLA规则列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '148618',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '11****',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '3D1A59F4-EB2B-5D24-80A5-90C446A00DE2',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'SLARuleList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'SLARule' => 
                  array (
                    'description' => 'SLA规则列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => 'SLA规则ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2',
                        ),
                        'DagId' => 
                        array (
                          'description' => '任务流ID。
',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '11****',
                        ),
                        'NodeId' => 
                        array (
                          'description' => '任务流节点ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'RuleType' => 
                        array (
                          'description' => '规则类型：
- **0**：任务流SLA规则。
- **1**：任务节点SLA规则。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'IntervalMinutes' => 
                        array (
                          'description' => '超时时间（单位：分钟）。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '1080',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3D1A59F4-EB2B-5D24-80A5-90C446A00DE2\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"SLARuleList\\": {\\n    \\"SLARule\\": [\\n      {\\n        \\"Id\\": 2,\\n        \\"DagId\\": 0,\\n        \\"NodeId\\": 1,\\n        \\"RuleType\\": 0,\\n        \\"IntervalMinutes\\": 1080\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListSLARulesResponse>\\n    <RequestId>BD7055C8-798E-5AA7-8E42-9690A0C344B6</RequestId>\\n    <SLARuleList>\\n        <SLARule>\\n            <id>2</id>\\n            <DagId>11312</DagId>\\n            <RuleType>0</RuleType>\\n            <IntervalMinutes>1080</IntervalMinutes>\\n            <NodeId>1</NodeId>\\n        </SLARule>\\n    </SLARuleList>\\n    <Success>true</Success>\\n</ListSLARulesResponse>","errorExample":""}]',
      'title' => '获取自定义SLA规则列表',
    ),
    'GetTask' => 
    array (
      'summary' => '调用GetTask接口，按照任务流节点ID获取指定节点的配置，包括任务的时间变量。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'NodeId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务节点ID。可调用[GetTaskInstanceRelation](~~424711~~)接口获取此参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '51***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '7838266C-E17B-58F4-B072-4DC356B58258',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Task' => 
              array (
                'description' => '任务流任务。',
                'type' => 'object',
                'properties' => 
                array (
                  'DagId' => 
                  array (
                    'description' => '节点所在的任务流ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '7321',
                  ),
                  'NodeName' => 
                  array (
                    'description' => '任务节点名称。',
                    'type' => 'string',
                    'example' => '跨库Spark SQL-1',
                  ),
                  'NodeType' => 
                  array (
                    'description' => '任务节点类型，返回值请参见[NodeType参数说明](~~424705~~)。',
                    'type' => 'string',
                    'example' => 'SPARK_SQL',
                  ),
                  'NodeContent' => 
                  array (
                    'description' => '节点配置内容。',
                    'type' => 'string',
                    'example' => '{\\"dbList\\":[{\\"instanceId\\":177****}"   }',
                  ),
                  'TimeVariables' => 
                  array (
                    'description' => '节点变量（时间变量配置）。',
                    'type' => 'string',
                    'example' => '{\\"variables\\":[{\\"name\\":\\"Today\\",\\"pattern\\":\\"yyyy-MM-dd|+1d\\"}]}',
                  ),
                  'NodeConfig' => 
                  array (
                    'description' => '节点高级配置。',
                    'type' => 'string',
                    'example' => '{\\"dbId\\":39****,\\"dbType\\":\\"mysql\\",\\"locale\\":\\"zh\\",\\"sql\\":\\"/* 请确认以下SQL符合您的变更需求，务必确认无误后再提交执行 */\\\\n\\\\nCREATE TABLE IF NOT EXISTS `momo_weekGather` (\\\\n\\\\t`id` bigint AUTO_INCREMENT DEFAULT \'0\',\\\\n\\\\t`age` bit NULL,\\\\n\\\\t`action` varchar(150) NULL,\\\\n\\\\t`elapse_time` datetime NULL,\\\\n\\\\tPRIMARY KEY (`id`)\\\\n) ENGINE=InnoDB\\\\nDEFAULT CHARACTER SET=utf8;\\"}',
                  ),
                  'NodeOutput' => 
                  array (
                    'description' => '节点输出变量，仅部分类型节点存在此参数。',
                    'type' => 'string',
                    'example' => '{ "outputs":[ "extractMethod":"json" , "variableName":"var",   "description":"demo desc" } ] }',
                  ),
                  'GraphParam' => 
                  array (
                    'description' => '节点在图上的显示位置。

',
                    'type' => 'string',
                    'example' => '{"{\\"x\\":0,\\"y\\":0,\\"layoutType\\":\\"Horizontal\\"}",  "id": 51***}',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7838266C-E17B-58F4-B072-4DC356B58258\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"Task\\": {\\n    \\"DagId\\": 7321,\\n    \\"NodeName\\": \\"跨库Spark SQL-1\\",\\n    \\"NodeType\\": \\"SPARK_SQL\\",\\n    \\"NodeContent\\": \\"{\\\\\\\\\\\\\\"dbList\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"instanceId\\\\\\\\\\\\\\":177****}\\\\\\"   }\\",\\n    \\"TimeVariables\\": \\"{\\\\\\\\\\\\\\"variables\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Today\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"pattern\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"yyyy-MM-dd|+1d\\\\\\\\\\\\\\"}]}\\",\\n    \\"NodeConfig\\": \\"{\\\\\\\\\\\\\\"dbId\\\\\\\\\\\\\\":39****,\\\\\\\\\\\\\\"dbType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"mysql\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"locale\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"zh\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"sql\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"/* 请确认以下SQL符合您的变更需求，务必确认无误后再提交执行 */\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nCREATE TABLE IF NOT EXISTS `momo_weekGather` (\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t`id` bigint AUTO_INCREMENT DEFAULT \'0\',\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t`age` bit NULL,\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t`action` varchar(150) NULL,\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t`elapse_time` datetime NULL,\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\tPRIMARY KEY (`id`)\\\\\\\\\\\\\\\\n) ENGINE=InnoDB\\\\\\\\\\\\\\\\nDEFAULT CHARACTER SET=utf8;\\\\\\\\\\\\\\"}\\",\\n    \\"NodeOutput\\": \\"{ \\\\\\"outputs\\\\\\":[ \\\\\\"extractMethod\\\\\\":\\\\\\"json\\\\\\" , \\\\\\"variableName\\\\\\":\\\\\\"var\\\\\\",   \\\\\\"description\\\\\\":\\\\\\"demo desc\\\\\\" } ] }\\",\\n    \\"GraphParam\\": \\"{\\\\\\"{\\\\\\\\\\\\\\"x\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"y\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"layoutType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Horizontal\\\\\\\\\\\\\\"}\\\\\\",  \\\\\\"id\\\\\\": 51***}\\"\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetTaskResponse>\\n    <Task>\\n        <NodeName>跨库Spark SQL-1</NodeName>\\n        <NodeType>SPARK_SQL</NodeType>\\n        <DagId>73***</DagId>\\n        <NodeContent>{\\"dbId\\":39****,\\"dbType\\":\\"mysql\\",\\"locale\\":\\"zh\\",\\"sql\\":\\"\\\\n\\\\nCREATE TABLE IF NOT EXISTS `momo_weekGather` (\\\\n\\\\t`id` bigint AUTO_INCREMENT DEFAULT \'0\',\\\\n\\\\t`age` bit NULL,\\\\n\\\\t`action` varchar(150) NULL,\\\\n\\\\t`elapse_time` datetime NULL,\\\\n\\\\tPRIMARY KEY (`id`)\\\\n) ENGINE=InnoDB\\\\nDEFAULT CHARACTER SET=utf8;\\"}</NodeContent>\\n        <NodeConfig>{\\"rerun\\":{\\"rerunEnable\\":false}}</NodeConfig>\\n        <GraphParam>{\\"x\\":0,\\"y\\":0,\\"layoutType\\":\\"Horizontal\\"}</GraphParam>\\n    </Task>\\n    <RequestId>7838266C-E17B-58F4-B072-4DC356B58258</RequestId>\\n    <Success>true</Success>\\n</GetTaskResponse>","errorExample":""}]',
      'title' => '获取任务流节点配置',
      'responseParamsDescription' => 'TimeVariables为JSON字符串格式，示例及说明如下：
```JSON
{
    "variables":[
        {
            "name":"var",// 变量命名
            /*
            变量格式
            语法示例如示例值所示——在运行时日期的基础上，偏移“分”、“时”、“日”、“周”、“月”、“年”(可缺省，可不按照此顺序)。
            */
            "pattern":"yyyy-MM-dd|+0d" 
        },
        {
            "name":"test",
            "pattern":"yyyy-MM-dd|+0d"
        }
    ]
}
```',
    ),
    'MoveTaskFlowToScenario' => 
    array (
      'summary' => '调用MoveTaskFlowToScenario接口，移动任务流至指定业务场景。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '148613',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID。可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '11****',
          ),
        ),
        2 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '目标业务场景ID。参数缺省或小于等于0时移动至默认业务场景。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '1****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。
',
                'type' => 'string',
                'example' => 'D85FD18C-4322-5D49-8C14-5A10E668F86C',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D85FD18C-4322-5D49-8C14-5A10E668F86C\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<MoveTaskFlowToScenarioResponse>\\n    <RequestId>D85FD18C-4322-5D49-8C14-5A10E668F86C</RequestId>\\n    <Success>true</Success>\\n</MoveTaskFlowToScenarioResponse>","errorExample":""}]',
      'title' => '移动任务流至指定业务场景',
    ),
    'GetTaskFlowNotification' => 
    array (
      'summary' => '调用GetTaskFlowNotification接口，获取任务流通知设置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '15***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'F19D575F-EBEA-5683-AFA3-A8F6D9A7DE03',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值说明如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Notification' => 
              array (
                'description' => '用户指定消息通知配置。',
                'type' => 'object',
                'properties' => 
                array (
                  'DagNotificationFail' => 
                  array (
                    'description' => '任务流运行失败通知开关。返回值说明如下：
- **true**：开启。
- **false**：关闭。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'DagNotificationSuccess' => 
                  array (
                    'description' => '任务流运行成功通知开关。返回值说明如下：
- **true**：开启。
- **false**：关闭。',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                  'DagNotificationSla' => 
                  array (
                    'description' => '任务流SLA通知全局开关。返回值说明如下：
- **true**：开启。
- **false**：关闭。

',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F19D575F-EBEA-5683-AFA3-A8F6D9A7DE03\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"Notification\\": {\\n    \\"DagNotificationFail\\": true,\\n    \\"DagNotificationSuccess\\": true,\\n    \\"DagNotificationSla\\": true\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetTaskFlowNotificationResponse>\\n    <RequestId>F19D575F-EBEA-5683-AFA3-A8F6D9A7DE03</RequestId>\\n    <Success>true</Success>\\n    <Notification>\\n        <DagNotificationSuccess>true</DagNotificationSuccess>\\n        <DagNotificationSla>true</DagNotificationSla>\\n        <DagNotificationFail>true</DagNotificationFail>\\n    </Notification>\\n</GetTaskFlowNotificationResponse>","errorExample":""}]',
      'title' => '获取任务流通知设置',
    ),
    'UpdateTaskName' => 
    array (
      'summary' => '调用UpdateTaskName接口，更新任务名称。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '147910',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'NodeId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务节点ID。可调用[GetTaskInstanceRelation](~~424711~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '449***',
          ),
        ),
        2 => 
        array (
          'name' => 'NodeName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务节点名称。可调用[GetTaskInstanceRelation](~~424711~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Spark-test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'C4604178-3BE1-5973-ACF0-7D561AEEF3A8',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C4604178-3BE1-5973-ACF0-7D561AEEF3A8\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateTaskNameResponse>\\n    <RequestId>C4604178-3BE1-5973-ACF0-7D561AEEF3A8</RequestId>\\n    <Success>true</Success>\\n</UpdateTaskNameResponse>","errorExample":""}]',
      'title' => '更新任务名称',
    ),
    'UpdateTaskOutput' => 
    array (
      'summary' => '调用UpdateTaskOutput接口，更新任务节点的输出变量。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '147898',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'NodeId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务节点ID。可调用[GetTaskInstanceRelation](~~424711~~)接口获取此参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '14059',
          ),
        ),
        2 => 
        array (
          'name' => 'NodeOutput',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务输出变量。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '{“outputs”:[{"row":0, "column":-1,"combiner":","}"extractMethod":"{\\"row\\":0,\\"column\\":-1,\\"combiner\\":\\",\\"}",   "variableName":"var", // 变量  "description":"For demo" // 变量介绍}]}',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。
',
                'type' => 'string',
                'example' => 'AB524768-8A5F-523A-91BD-1147187FCD62',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：

- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"AB524768-8A5F-523A-91BD-1147187FCD62\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"","errorExample":""}]',
      'title' => '更新任务节点的输出变量',
      'description' => '仅单实例SQL赋值、脚本代码、ECS远程命令任务节点具有输出变量。',
      'requestParamsDescription' => '## 单实例SQL赋值
- NodeOutput样例如下：
```Json
{
    "outputs":[
        {
            /*
            变量提取设置
            {
                "row":0, // 行，-1为所有行
                "column":-1, // 列，-1为所有列
                /*
                分隔符
                当选中所有行或所有列时，需要指定连接符。变量返回值为字符串
                */
                "combiner":"," 
            }
            */
            "extractMethod":"{\\"row\\":0,\\"column\\":-1,\\"combiner\\":\\",\\"}", 
            "variableName":"var", // 变量名
            "description":"For demo" // 变量介绍
        }
    ]
}
```
## 脚本代码/ECS远程命令
- NodeOutput样例如下：
```Json
{
    "outputs":[
        {
            "extractMethod":"json", // 固定为JSON
            "variableName":"var",  // 变量名
            "description":"demo desc" // 变量描述
        }
    ]
}
```
',
    ),
    'DeleteTaskFlowEdgesByCondition' => 
    array (
      'summary' => '调用DeleteTaskFlowEdgesByCondition接口，按照多条件删除任务流边。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'abilityTreeCode' => '147813',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '15****',
          ),
        ),
        2 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除任务流边的ID。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '24***',
          ),
        ),
        3 => 
        array (
          'name' => 'NodeFrom',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除边的起点节点ID。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '44***',
          ),
        ),
        4 => 
        array (
          'name' => 'NodeEnd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除边的终点节点ID。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '44***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。

',
                'type' => 'string',
                'example' => '21234B66-6859-5558-9E5B-006EFE915CD0',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"21234B66-6859-5558-9E5B-006EFE915CD0\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteTaskFlowEdgesByConditionResponse>\\n    <RequestId>21234B66-6859-5558-9E5B-006EFE915CD0</RequestId>\\n    <Success>true</Success>\\n</DeleteTaskFlowEdgesByConditionResponse>","errorExample":""}]',
      'title' => '按照多条件删除任务流边',
      'description' => '此接口为多条件查询接口，可用于删除指定任务流中，满足所有指定条件的任务流边，请谨慎操作。',
    ),
    'ListTaskFlowEdgesByCondition' => 
    array (
      'summary' => '调用ListTaskFlowEdgesByCondition接口，多条件获取指定任务流DAG图的边。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '147812',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '15***',
          ),
        ),
        2 => 
        array (
          'name' => 'Id',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流边ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '24***',
          ),
        ),
        3 => 
        array (
          'name' => 'NodeFrom',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边的起点节点ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '44***',
          ),
        ),
        4 => 
        array (
          'name' => 'NodeEnd',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '边的终点节点Id。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '44***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'D86249CD-422F-5ACF-85BA-9187C986AE0B',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Edges' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Edge' => 
                  array (
                    'description' => '任务流边列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '任务流边ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '24***',
                        ),
                        'NodeEnd' => 
                        array (
                          'description' => '边的终点节点ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '44***',
                        ),
                        'NodeFrom' => 
                        array (
                          'description' => '边的起点节点ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '44***',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D86249CD-422F-5ACF-85BA-9187C986AE0B\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"Edges\\": {\\n    \\"Edge\\": [\\n      {\\n        \\"Id\\": 0,\\n        \\"NodeEnd\\": 0,\\n        \\"NodeFrom\\": 0\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListTaskFlowEdgesByConditionResponse>\\n    <RequestId>D86249CD-422F-5ACF-85BA-9187C986AE0B</RequestId>\\n    <Edges>\\n        <Edge>\\n            <NodeFrom>44***</NodeFrom>\\n            <NodeEnd>44***</NodeEnd>\\n            <Id>24***</Id>\\n        </Edge>\\n    </Edges>\\n    <Success>true</Success>\\n</ListTaskFlowEdgesByConditionResponse>","errorExample":""}]',
      'title' => '获取指定任务流DAG图的边',
      'description' => '此接口为多条件查询接口，可用于获取指定任务流中，满足所有指定条件的任务流边。',
    ),
    'AddTaskFlowEdges' => 
    array (
      'summary' => '为已存在的任务流节点建立有向边。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '146064',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '15***',
          ),
        ),
        2 => 
        array (
          'name' => 'Edges',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '任务流边列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '任务流边信息。',
              'type' => 'object',
              'properties' => 
              array (
                'NodeEnd' => 
                array (
                  'description' => '边的终点节点ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'docRequired' => true,
                  'example' => '44***',
                ),
                'NodeFrom' => 
                array (
                  'description' => '边的起点节点ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'docRequired' => true,
                  'example' => '44***',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'docRequired' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。请求的唯一标识，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'E5EE2B9E-2F95-57FA-B284-CB441CEE49D6',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的出错信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'EdgeIds' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'EdgeId' => 
                  array (
                    'description' => '任务流边ID列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '任务流边ID。',
                      'type' => 'integer',
                      'format' => 'int64',
                      'example' => '24***',
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"E5EE2B9E-2F95-57FA-B284-CB441CEE49D6\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"EdgeIds\\": {\\n    \\"EdgeId\\": [\\n      0\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '任务流节点建立有向边',
      'description' => '### 注意事项
新增的边需要满足以下限制，否则将无法成功添加：
1. 指定的边端点存在于DagId指定的任务流DAG图中。 
2. 添加后有向边后，DAG图不出现环。',
    ),
    'UpdateTaskFlowNameAndDesc' => 
    array (
      'summary' => '调用UpdateTaskFlowNameAndDesc接口，更新任务流名称和描述。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '145766',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，任务流的唯一标识。可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '15***',
          ),
        ),
        2 => 
        array (
          'name' => 'DagName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待更新的任务流名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test',
          ),
        ),
        3 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待更新的任务流描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'F73CCB9D-0CF3-5D3D-97B0-D852A8022663',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F73CCB9D-0CF3-5D3D-97B0-D852A8022663\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateTaskFlowNameAndDescResponse>\\n    <RequestId>F73CCB9D-0CF3-5D3D-97B0-D852A8022663</RequestId>\\n    <Success>true</Success>\\n</UpdateTaskFlowNameAndDescResponse>","errorExample":""}]',
      'title' => '更新任务流名称和描述',
    ),
    'GetTaskFlowGraph' => 
    array (
      'summary' => '调用GetTaskFlowGraph接口获取任务流的DAG图。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '15***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'D9D91166-A626-5F4E-9CA6-7AB10C59DBD8',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：

- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'TaskFlowGraph' => 
              array (
                'description' => '任务流的DAG图变量列表。',
                'type' => 'object',
                'properties' => 
                array (
                  'DagName' => 
                  array (
                    'description' => '任务流名称。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Nodes' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Node' => 
                      array (
                        'description' => '任务流节点列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DagId' => 
                            array (
                              'description' => '任务流ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '15***',
                            ),
                            'NodeId' => 
                            array (
                              'description' => '任务节点ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '44***',
                            ),
                            'NodeName' => 
                            array (
                              'description' => '任务节点名称。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                            'NodeType' => 
                            array (
                              'description' => '任务节点类型，返回值请参见[NodeType参数说明](~~424705~~)。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '36',
                            ),
                            'NodeContent' => 
                            array (
                              'description' => '节点配置内容。',
                              'type' => 'string',
                              'example' => '{ODI3OTNRVC****UHVFT29"}',
                            ),
                            'TimeVariables' => 
                            array (
                              'description' => '节点变量（时间变量配置）。',
                              'type' => 'string',
                              'example' => '{\\"variables\\":[{\\"name\\":\\"Today\\",\\"pattern\\":\\"yyyy-MM-dd|+1d\\"}]}',
                            ),
                            'NodeConfig' => 
                            array (
                              'description' => '节点高级配置。',
                              'type' => 'string',
                              'example' => '{\\"dbId\\":39****,\\"dbType\\":\\"mysql\\",\\"locale\\":\\"zh\\",\\"sql\\":\\"/* 请确认以下SQL符合您的变更需求，务必确认无误后再提交执行 */\\\\n\\\\nCREATE TABLE IF NOT EXISTS `momo_weekGather` (\\\\n\\\\t`id` bigint AUTO_INCREMENT DEFAULT \'0\',\\\\n\\\\t`age` bit NULL,\\\\n\\\\t`action` varchar(150) NULL,\\\\n\\\\t`elapse_time` datetime NULL,\\\\n\\\\tPRIMARY KEY (`id`)\\\\n) ENGINE=InnoDB\\\\nDEFAULT CHARACTER SET=utf8;\\"}',
                            ),
                            'GraphParam' => 
                            array (
                              'description' => '节点在图上的显示位置。',
                              'type' => 'string',
                              'example' => '{\\"x\\":541,\\"y\\":322,\\"layoutType\\":\\"Horizontal\\"}',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Edges' => 
                  array (
                    'type' => 'object',
                    'properties' => 
                    array (
                      'Edge' => 
                      array (
                        'description' => '任务流边列表。',
                        'type' => 'array',
                        'items' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'DagId' => 
                            array (
                              'description' => '任务流ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '15***',
                            ),
                            'Id' => 
                            array (
                              'description' => '任务流边ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '24***',
                            ),
                            'NodeEnd' => 
                            array (
                              'description' => '边的终点节点ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '44***',
                            ),
                            'NodeFrom' => 
                            array (
                              'description' => '边的起点节点ID。',
                              'type' => 'integer',
                              'format' => 'int64',
                              'example' => '44***',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'Status' => 
                  array (
                    'description' => '任务流状态，返回值如下：
- **0**：无效 
- **1**：无调度配置 
- **2**：等待调度',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '2',
                  ),
                  'CanEdit' => 
                  array (
                    'description' => '任务流是否支持编辑，返回值如下：
- **true**：支持修改
- **false**：不支持修改',
                    'type' => 'boolean',
                    'example' => 'true',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"D9D91166-A626-5F4E-9CA6-7AB10C59DBD8\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"TaskFlowGraph\\": {\\n    \\"DagName\\": \\"test\\",\\n    \\"Nodes\\": {\\n      \\"Node\\": [\\n        {\\n          \\"DagId\\": 0,\\n          \\"NodeId\\": 0,\\n          \\"NodeName\\": \\"test\\",\\n          \\"NodeType\\": 36,\\n          \\"NodeContent\\": \\"{ODI3OTNRVC****UHVFT29\\\\\\"}\\",\\n          \\"TimeVariables\\": \\"{\\\\\\\\\\\\\\"variables\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Today\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"pattern\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"yyyy-MM-dd|+1d\\\\\\\\\\\\\\"}]}\\",\\n          \\"NodeConfig\\": \\"{\\\\\\\\\\\\\\"dbId\\\\\\\\\\\\\\":39****,\\\\\\\\\\\\\\"dbType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"mysql\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"locale\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"zh\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"sql\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"/* 请确认以下SQL符合您的变更需求，务必确认无误后再提交执行 */\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\nCREATE TABLE IF NOT EXISTS `momo_weekGather` (\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t`id` bigint AUTO_INCREMENT DEFAULT \'0\',\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t`age` bit NULL,\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t`action` varchar(150) NULL,\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t`elapse_time` datetime NULL,\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\tPRIMARY KEY (`id`)\\\\\\\\\\\\\\\\n) ENGINE=InnoDB\\\\\\\\\\\\\\\\nDEFAULT CHARACTER SET=utf8;\\\\\\\\\\\\\\"}\\",\\n          \\"GraphParam\\": \\"{\\\\\\\\\\\\\\"x\\\\\\\\\\\\\\":541,\\\\\\\\\\\\\\"y\\\\\\\\\\\\\\":322,\\\\\\\\\\\\\\"layoutType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Horizontal\\\\\\\\\\\\\\"}\\"\\n        }\\n      ]\\n    },\\n    \\"Edges\\": {\\n      \\"Edge\\": [\\n        {\\n          \\"DagId\\": 0,\\n          \\"Id\\": 0,\\n          \\"NodeEnd\\": 0,\\n          \\"NodeFrom\\": 0\\n        }\\n      ]\\n    },\\n    \\"Status\\": 2,\\n    \\"CanEdit\\": true\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetTaskFlowGraphResponse>\\n    <RequestId>D9D91166-A626-5F4E-9CA6-7AB10C59DBD8</RequestId>\\n    <TaskFlowGraph>\\n        <Status>2</Status>\\n        <DagName>testSpark</DagName>\\n        <CanEdit>true</CanEdit>\\n        <Edges>\\n        </Edges>\\n        <Nodes>\\n            <Node>\\n                <NodeName>Lindorm Spark-1</NodeName>\\n                <TimeVariables>{\\"variables\\":[{\\"name\\":\\"my_bizdate\\",\\"pattern\\":\\"yyyy-MM-dd|+6d\\"}]}</TimeVariables>\\n                <NodeType>LINDORM_SPARK</NodeType>\\n                <NodeId>44***</NodeId>\\n                <DagId>15***</DagId>\\n                <NodeContent>ODI3OTNRVC****UHVFT29</NodeContent>\\n                <GraphParam>{\\"x\\":254,\\"y\\":239,\\"layoutType\\":\\"Horizontal\\"}</GraphParam>\\n            </Node>\\n            <Node>\\n                <NodeName>Lindorm Spark-2</NodeName>\\n                <NodeType>LINDORM_SPARK</NodeType>\\n                <NodeId>44***</NodeId>\\n                <DagId>15***</DagId>\\n                <GraphParam>{\\"x\\":538,\\"y\\":161,\\"layoutType\\":\\"Horizontal\\"}</GraphParam>\\n            </Node>\\n            <Node>\\n                <NodeName>Lindorm Spark-3</NodeName>\\n                <NodeType>LINDORM_SPARK</NodeType>\\n                <NodeId>44***</NodeId>\\n                <DagId>15***</DagId>\\n                <GraphParam>{\\"x\\":541,\\"y\\":322,\\"layoutType\\":\\"Horizontal\\"}</GraphParam>\\n            </Node>\\n        </Nodes>\\n    </TaskFlowGraph>\\n    <Success>true</Success>\\n</GetTaskFlowGraphResponse>","errorExample":""}]',
      'title' => '获取任务流的DAG图',
    ),
    'UpdateTaskFlowEdges' => 
    array (
      'summary' => '批量更新指定任务流的指定边的起点节点和终点节点。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '146068',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '15***',
          ),
        ),
        2 => 
        array (
          'name' => 'Edges',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '更新后的任务流边列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Id' => 
                array (
                  'description' => '任务流边ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'docRequired' => true,
                  'example' => '24***',
                ),
                'NodeEnd' => 
                array (
                  'description' => '边的终点节点ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'docRequired' => true,
                  'example' => '44***',
                ),
                'NodeFrom' => 
                array (
                  'description' => '边的起点节点ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'docRequired' => true,
                  'example' => '44***',
                ),
              ),
              'required' => false,
            ),
            'required' => true,
            'docRequired' => true,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求的ID，可用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '93FC1AE1-EC54-52B1-B146-650180FB82E8',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"93FC1AE1-EC54-52B1-B146-650180FB82E8\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","type":"json"}]',
      'title' => '更新指定任务流边的起始节点',
      'description' => '### 注意事项
更新的边需要满足以下限制，否则将无法成功更新：
1. 指定的边存在于DagId指定的任务流DAG图中。 
2. 指定的边端点存在于DagId指定的任务流DAG图中。 
3. 更新后，DAG图不出现环。',
    ),
    'UpdateTaskFlowOwner' => 
    array (
      'summary' => '调用UpdateTaskFlowOwner接口，更新任务流Owner。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '145744',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，任务流的唯一标识。可通过调用[ListTaskFlowInstance](~~424689~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '15***',
          ),
        ),
        2 => 
        array (
          'name' => 'NewOwnerId',
          'in' => 'query',
          'allowEmptyValue' => false,
          'schema' => 
          array (
            'description' => '新Owner的用户ID。可通过调用接口[GetUser](~~147098~~)或[ListUsers](~~141938~~)获取UserId的值。
',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '51****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。
',
                'type' => 'string',
                'example' => '482C61C1-2537-5BFB-8E58-34D9F17AD3C3',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"482C61C1-2537-5BFB-8E58-34D9F17AD3C3\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateTaskFlowOwnerResponse>\\n    <RequestId>482C61C1-2537-5BFB-8E58-34D9F17AD3C3</RequestId>\\n    <Success>true</Success>\\n</UpdateTaskFlowOwnerResponse>","errorExample":""}]',
      'title' => '更新任务流Owner',
      'description' => '转交限制：新的任务流Owner必须在同一租户下。',
    ),
    'UpdateTaskFlowSchedule' => 
    array (
      'summary' => '调用UpdateTaskFlowSchedule接口，更新任务流调度配置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '145506',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，任务流的唯一标识。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '7***',
          ),
        ),
        2 => 
        array (
          'name' => 'ScheduleSwitch',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '是否开启调度。

- **true**
- **false**',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'false',
          ),
        ),
        3 => 
        array (
          'name' => 'CronBeginDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '此时间点之前任务流不进行调度。',
            'type' => 'string',
            'required' => false,
            'example' => 'CronBeginDate_test',
          ),
        ),
        4 => 
        array (
          'name' => 'CronEndDate',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '定时调度结束时间，此时间点之后任务流不进行调度。',
            'type' => 'string',
            'required' => false,
            'example' => 'CronEndDate_test',
          ),
        ),
        5 => 
        array (
          'name' => 'ScheduleParam',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '事件调度配置，JSON字符串格式。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'ScheduleParam_test',
          ),
        ),
        6 => 
        array (
          'name' => 'CronStr',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '定时调度Cron。',
            'type' => 'string',
            'required' => false,
            'example' => 'CronStr_test',
          ),
        ),
        7 => 
        array (
          'name' => 'TriggerType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '触发类型，取值如下：
- **Cron**：定时调度
- **Event**：事件触发',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Event',
          ),
        ),
        8 => 
        array (
          'name' => 'CronType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '调度周期类型。取值如下：
- **HOUR**：小时级调度
- **DAY**：日级调度
- **WEEK**: 周级调度
- **MONTH**：月级调度',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => 'HOUR',
          ),
        ),
        9 => 
        array (
          'name' => 'TimeZoneId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '时区设置，默认为东八区（Asia/Shanghai）。',
            'type' => 'string',
            'required' => false,
            'example' => 'Asia/Shanghai',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数详情如下。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '7BF38A13-C181-5B5E-97F1-8643F8A10093',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'InvalidParameterValid',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'InvalidParameterValid',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"7BF38A13-C181-5B5E-97F1-8643F8A10093\\",\\n  \\"ErrorCode\\": \\"InvalidParameterValid\\",\\n  \\"ErrorMessage\\": \\"InvalidParameterValid\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateTaskFlowScheduleResponse>\\n    <RequestId>7BF38A13-C181-5B5E-97F1-8643F8A10093</RequestId>\\n    <ErrorCode>InvalidParameterValid</ErrorCode>\\n    <ErrorMessage>InvalidParameterValid</ErrorMessage>\\n    <Success>true</Success>\\n</UpdateTaskFlowScheduleResponse>","errorExample":""}]',
      'title' => '更新任务流调度配置',
      'description' => '该接口用于更新编辑态任务流的调度设置。可配置**定时调度**、**周期调度**、**事件调度**；其中**定时调度**可配置调度一次或周期调度，**事件调度**可配置的订阅包括任务流和任务流节点。  
配置更新后，将任务流重新发布并部署，新的任务流实例将按照配置的调度设置进行调度。',
      'requestParamsDescription' => '### 调度配置相关参数说明

配置定时调度：可配置周期调度或调度一次。

必填参数如下：
- ScheduleSwitch：True
- TriggerType：Cron
- CronBeginDate
- CronEndDate
- CronStr
- CronType
- ScheduleParam：分为按天、周、月、调度一次。

示例如下：

**按“天”调度：**
```json
{
    "triggerType":"0",
    "dateTime":"00:00"
}
```
**按“周”调度**：周日为1，周一为2，…，周六为7。
```json
{
    "triggerType":"0",
    "dateWeek":[
        "1",
        "5"
    ],
    "weekTime":"00:00"
}
```
**按“月”调度：**
```json
{
    "triggerType":"0",
    "dateMonth":"1",
    "MonthTime":"00:00"
}
```
**调度一次：**
```json
{
    "triggerType":"1",
    "specificTime":"2022-09-02 00:00"
}
```
**参数说明**

1. CronStr：任务流实际调度以CronStr指定为准。
2. CronBeginDate和CronEndDate：周期调度时，CronBeginDate、CronEndDate及CronStr共同定义了任务流调度。若CronStr指定的时间点在CronBeginDate、CronEndDate的时间范围内，任务将被触发。
3. CronType：验证使用，按照CronStr定义的周期填写。
4. ScheduleParam：需按照CronStr指定的调度填写。

**配置事件调度**（跨任务流自动触发）

必填参数如下：
- ScheduleSwitch：True
- TriggerType： Event
- ScheduleParam

示例如下：
```json
{
    "triggerType":"2" // 事件调度时置为2
    "deps":[ // 任务流、节点订阅配置
        {
            "eventType":1, // 订阅类型: 0为任务流; 1为任务节点
            "lisDagId":12345, // 订阅节点所在的任务流
            "lisNodeId":2134 // 订阅节点的Id
        },
        {
            "eventType":0,
            "lisDagId":12343 // 订阅任务流的Id
        },
        {
            "eventType":0,
            "lisDagId":23456
        }
    ],
    "maxWait":21600 // 在所有以上订阅运行成功前，最大等待时间
}
```',
    ),
    'UpdateTaskFlowRelations' => 
    array (
      'summary' => '调用UpdateTaskFlowRelations接口，全量更新任务流边。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '145901',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '15***',
          ),
        ),
        2 => 
        array (
          'name' => 'Edges',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '待更新的任务流边列表。',
            'type' => 'array',
            'items' => 
            array (
              'type' => 'object',
              'properties' => 
              array (
                'Id' => 
                array (
                  'description' => '任务流边ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '24***',
                ),
                'NodeEnd' => 
                array (
                  'description' => '边的终点节点ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '44***',
                ),
                'NodeFrom' => 
                array (
                  'description' => '边的起点节点ID。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => false,
                  'example' => '44***',
                ),
              ),
              'required' => false,
            ),
            'required' => false,
            'docRequired' => false,
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '15D9E71C-405B-57D7-BE6E-707C2C7A8E0B',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"15D9E71C-405B-57D7-BE6E-707C2C7A8E0B\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateTaskFlowRelationsResponse>\\n    <RequestId>15D9E71C-405B-57D7-BE6E-707C2C7A8E0B</RequestId>\\n    <Success>true</Success>\\n</UpdateTaskFlowRelationsResponse>","errorExample":""}]',
      'title' => '全量更新任务流边',
      'description' => '此接口为全量更新接口。如需增量调整，请参考：[AddTaskFlowEdges](~~466023~~)、[UpdateTaskFlowEdges](~~466026~~)、[DeleteTaskFlowEdgesByCondition](~~466021~~)。',
    ),
    'UpdateTaskFlowNotification' => 
    array (
      'summary' => '调用UpdateTaskFlowNotification接口，更新任务流通知设置。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '147858',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，任务流的唯一标识。可通过调用[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)接口获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '15***',
          ),
        ),
        2 => 
        array (
          'name' => 'DagNotificationFail',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流运行失败通知开关。默认关闭，请手动开启。',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        3 => 
        array (
          'name' => 'DagNotificationSuccess',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流运行成功通知开关。默认关闭，请手动开启。
',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
        4 => 
        array (
          'name' => 'DagNotificationSla',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流SLA通知全局开关。默认关闭，请手动开启。

',
            'type' => 'boolean',
            'required' => true,
            'docRequired' => true,
            'example' => 'true',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '3BDC762F-2525-5E47-8748-D6C58BDB3B38',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值说明如下：
- **true**：请求成功。
- **false**：请求失败。',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3BDC762F-2525-5E47-8748-D6C58BDB3B38\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<UpdateTaskFlowNotificationResponse>\\n    <RequestId>3BDC762F-2525-5E47-8748-D6C58BDB3B38</RequestId>\\n    <Success>true</Success>\\n</UpdateTaskFlowNotificationResponse>","errorExample":""}]',
      'title' => '更新任务流通知设置',
    ),
    'ListTasksInTaskFlow' => 
    array (
      'summary' => '调用ListTasksInTaskFlow接口，获取指定任务流的任务节点列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '145478',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 鼠标移动到界面右上角的头像处，查看租户ID。具体操作，请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '32***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数详情如下。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '8B36B063-6B7D-5595-9FCF-3844B7B7ACD4',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => '任务流不存在或没有权限',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'Tasks' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Task' => 
                  array (
                    'description' => '任务列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '任务列表详情如下。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'NodeName' => 
                        array (
                          'description' => '节点名称。',
                          'type' => 'string',
                          'example' => 'Cross-Database Spark SQL-1',
                        ),
                        'NodeType' => 
                        array (
                          'description' => '任务节点类型，返回值请参见[NodeType参数说明](~~424705~~)。',
                          'type' => 'string',
                          'example' => 'SPARK_SQL',
                        ),
                        'NodeContent' => 
                        array (
                          'description' => '节点配置内容。',
                          'type' => 'string',
                          'example' => '{     "dbId":123456, // 数据库Id     "sql":"/* 请使用当前节点所选择的数据库语法编写SQL */", // sql语句     "dbType":"polardb" // 数据库类型 }',
                        ),
                        'TimeVariables' => 
                        array (
                          'description' => '节点变量（时间变量配置）。',
                          'type' => 'string',
                          'example' => '{   "variables":[     // "variables"为固定值     {       "name":"var", // name指定变量名       "pattern":"yyyy-MM-dd|+0m+0h-2d+0w+0M+1y" // 见后面解释     }   ] }',
                        ),
                        'NodeConfig' => 
                        array (
                          'description' => '节点高级配置。',
                          'type' => 'string',
                          'example' => '{     "rerun":{ // 必填固定值         "rerunEnable":true, // 是否开启重跑         "rerunCount":1, // 重跑次数         "rerunInterval":10 // 重跑间隔     } }',
                        ),
                        'NodeOutput' => 
                        array (
                          'description' => '任务输出变量。',
                          'type' => 'string',
                          'example' => '{     "outputs":[         {             /*             变量提取设置             {                 "row":0, // 行，-1为所有行                 "column":-1, // 列，-1为所有列                 /*                 分隔符                 当选中所有行或所有列时，需要指定连接符。变量返回值为字符串                 */                 "combiner":","              }             */             "extractMethod":"{\\"row\\":0,\\"column\\":-1,\\"combiner\\":\\",\\"}",              "variableName":"var", // 变量名             "description":"For demo" // 变量介绍         }     ] }',
                        ),
                        'GraphParam' => 
                        array (
                          'description' => '节点在图上的显示位置。',
                          'type' => 'string',
                          'example' => '{\\"x\\":435,\\"y\\":192,\\"layoutType\\":\\"Horizontal\\"}',
                        ),
                        'NodeId' => 
                        array (
                          'description' => '节点ID。',
                          'type' => 'string',
                          'example' => '92***',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8B36B063-6B7D-5595-9FCF-3844B7B7ACD4\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"任务流不存在或没有权限\\",\\n  \\"Success\\": true,\\n  \\"Tasks\\": {\\n    \\"Task\\": [\\n      {\\n        \\"NodeName\\": \\"Cross-Database Spark SQL-1\\",\\n        \\"NodeType\\": \\"SPARK_SQL\\",\\n        \\"NodeContent\\": \\"{     \\\\\\"dbId\\\\\\":123456, // 数据库Id     \\\\\\"sql\\\\\\":\\\\\\"/* 请使用当前节点所选择的数据库语法编写SQL */\\\\\\", // sql语句     \\\\\\"dbType\\\\\\":\\\\\\"polardb\\\\\\" // 数据库类型 }\\",\\n        \\"TimeVariables\\": \\"{   \\\\\\"variables\\\\\\":[     // \\\\\\"variables\\\\\\"为固定值     {       \\\\\\"name\\\\\\":\\\\\\"var\\\\\\", // name指定变量名       \\\\\\"pattern\\\\\\":\\\\\\"yyyy-MM-dd|+0m+0h-2d+0w+0M+1y\\\\\\" // 见后面解释     }   ] }\\",\\n        \\"NodeConfig\\": \\"{     \\\\\\"rerun\\\\\\":{ // 必填固定值         \\\\\\"rerunEnable\\\\\\":true, // 是否开启重跑         \\\\\\"rerunCount\\\\\\":1, // 重跑次数         \\\\\\"rerunInterval\\\\\\":10 // 重跑间隔     } }\\",\\n        \\"NodeOutput\\": \\"{     \\\\\\"outputs\\\\\\":[         {             /*             变量提取设置             {                 \\\\\\"row\\\\\\":0, // 行，-1为所有行                 \\\\\\"column\\\\\\":-1, // 列，-1为所有列                 /*                 分隔符                 当选中所有行或所有列时，需要指定连接符。变量返回值为字符串                 */                 \\\\\\"combiner\\\\\\":\\\\\\",\\\\\\"              }             */             \\\\\\"extractMethod\\\\\\":\\\\\\"{\\\\\\\\\\\\\\"row\\\\\\\\\\\\\\":0,\\\\\\\\\\\\\\"column\\\\\\\\\\\\\\":-1,\\\\\\\\\\\\\\"combiner\\\\\\\\\\\\\\":\\\\\\\\\\\\\\",\\\\\\\\\\\\\\"}\\\\\\",              \\\\\\"variableName\\\\\\":\\\\\\"var\\\\\\", // 变量名             \\\\\\"description\\\\\\":\\\\\\"For demo\\\\\\" // 变量介绍         }     ] }\\",\\n        \\"GraphParam\\": \\"{\\\\\\\\\\\\\\"x\\\\\\\\\\\\\\":435,\\\\\\\\\\\\\\"y\\\\\\\\\\\\\\":192,\\\\\\\\\\\\\\"layoutType\\\\\\\\\\\\\\":\\\\\\\\\\\\\\"Horizontal\\\\\\\\\\\\\\"}\\",\\n        \\"NodeId\\": \\"92***\\"\\n      }\\n    ]\\n  }\\n}","errorExample":""},{"type":"xml","example":"<ListTasksInTaskFlowResponse>\\n    <RequestId>8B36B063-6B7D-5595-9FCF-3844B7B7ACD4</RequestId>\\n    <Success>true</Success>\\n    <Tasks>\\n        <NodeName>Cross-Database Spark SQL-1</NodeName>\\n        <NodeType>SPARK_SQL</NodeType>\\n        <NodeContent>{     \\"dbId\\":123456, // 数据库Id     \\"sql\\":\\"/* 请使用当前节点所选择的数据库语法编写SQL */\\", // sql语句     \\"dbType\\":\\"polardb\\" // 数据库类型 }</NodeContent>\\n        <TimeVariables>{   \\"variables\\":[     // \\"variables\\"为固定值     {       \\"name\\":\\"var\\", // name指定变量名       \\"pattern\\":\\"yyyy-MM-dd|+0m+0h-2d+0w+0M+1y\\" // 见后面解释     }   ] }</TimeVariables>\\n        <NodeConfig>{     \\"rerun\\":{ // 必填固定值         \\"rerunEnable\\":true, // 是否开启重跑         \\"rerunCount\\":1, // 重跑次数         \\"rerunInterval\\":10 // 重跑间隔     } }</NodeConfig>\\n        <NodeOutput>{     \\"outputs\\":[         {             /*             变量提取设置             {                 \\"row\\":0, // 行，-1为所有行                 \\"column\\":-1, // 列，-1为所有列                 /*                 分隔符                 当选中所有行或所有列时，需要指定连接符。变量返回值为字符串                 */                 \\"combiner\\":\\",\\"              }             */             \\"extractMethod\\":\\"{\\\\\\"row\\\\\\":0,\\\\\\"column\\\\\\":-1,\\\\\\"combiner\\\\\\":\\\\\\",\\\\\\"}\\",              \\"variableName\\":\\"var\\", // 变量名             \\"description\\":\\"For demo\\" // 变量介绍         }     ] }</NodeOutput>\\n        <GraphParam>{\\\\\\"x\\\\\\":435,\\\\\\"y\\\\\\":192,\\\\\\"layoutType\\\\\\":\\\\\\"Horizontal\\\\\\"}</GraphParam>\\n        <NodeId>92***</NodeId>\\n    </Tasks>\\n</ListTasksInTaskFlowResponse>","errorExample":""}]',
      'title' => '获取指定任务流的任务节点列表',
    ),
    'CreateTaskFlow' => 
    array (
      'summary' => '调用CreateTaskFlow接口，创建任务流。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '144894',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'Dag_Name',
          ),
        ),
        2 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'zht_test',
          ),
        ),
        3 => 
        array (
          'name' => 'ScenarioId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '应用场景ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '2**',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数详情如下。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。此次请求的唯一标识，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '19DA51A9-AC3E-5C36-8351-07EBCD2B89A1',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'User can not access to Tenant [1]',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DagId' => 
              array (
                'description' => '任务流ID，任务流的唯一标识。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '33***',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"19DA51A9-AC3E-5C36-8351-07EBCD2B89A1\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"User can not access to Tenant [1]\\",\\n  \\"Success\\": true,\\n  \\"DagId\\": 0\\n}","errorExample":""},{"type":"xml","example":"<CreateTaskFlowResponse>\\n    <RequestId>19DA51A9-AC3E-5C36-8351-07EBCD2B89A1</RequestId>\\n    <Success>true</Success>\\n    <DagId>33***</DagId>\\n</CreateTaskFlowResponse>","errorExample":""}]',
      'title' => '创建任务流',
      'requestParamsDescription' => 'DagName具有唯一性，指定已存在的DagName会导致调用失败。',
    ),
    'SuspendTaskFlowInstance' => 
    array (
      'summary' => '调用SuspendTaskFlowInstance接口，暂停运行中的任务流实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '145426',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '7***',
          ),
        ),
        2 => 
        array (
          'name' => 'DagInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流运行记录ID，可通过调用接口[ListTaskFlowInstance](~~424689~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '47****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '028BF827-3801-5869-8548-F4A039256305',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：

- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"028BF827-3801-5869-8548-F4A039256305\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<SuspendTaskFlowInstanceResponse>\\n    <RequestId>028BF827-3801-5869-8548-F4A039256305</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>true</Success>\\n</SuspendTaskFlowInstanceResponse>","errorExample":""}]',
      'title' => '暂停任务流实例',
    ),
    'ReRunTaskFlowInstance' => 
    array (
      'summary' => '调用ReRunTaskFlowInstance接口，重跑任务流实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '145425',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '7***',
          ),
        ),
        2 => 
        array (
          'name' => 'DagInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流运行记录ID（Id），可通过调用接口[ListTaskFlowInstance](~~424689~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '47****',
          ),
        ),
        3 => 
        array (
          'name' => 'DagVersion',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流版本号，可调用[ListDAGVersions](~~465989~~)接口获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'docRequired' => false,
            'example' => '2****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数值如下。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '8CFF2295-8249-5287-B888-DBD4F0D76CB0',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"8CFF2295-8249-5287-B888-DBD4F0D76CB0\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ReRunTaskFlowInstanceResponse>\\n    <RequestId>8CFF2295-8249-5287-B888-DBD4F0D76CB0</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>true</Success>\\n</ReRunTaskFlowInstanceResponse>","errorExample":""}]',
      'title' => '重跑任务流实例',
    ),
    'MakeTaskFlowInstanceSuccess' => 
    array (
      'summary' => '调用MakeTaskFlowInstanceSuccess接口，将指定任务流的状态设置为成功。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '145423',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '7***',
          ),
        ),
        2 => 
        array (
          'name' => 'DagInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流运行记录ID，可通过调用接口[ListTaskFlowInstance](~~424689~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '47****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数如下。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '028BF827-3801-5869-8548-F4A039256304',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"028BF827-3801-5869-8548-F4A039256304\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<MakeTaskFlowInstanceSuccessResponse>\\n    <RequestId>028BF827-3801-5869-8548-F4A039256304</RequestId>\\n    <Success>true</Success>\\n</MakeTaskFlowInstanceSuccessResponse>","errorExample":""}]',
      'title' => '将指定任务流的状态设置为成功',
    ),
    'DeleteTask' => 
    array (
      'summary' => '调用DeleteTask接口，删除任务流任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'abilityTreeCode' => '145358',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'NodeId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '待删除任务流节点的ID。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '54****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数详情如下。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '3B460770-40D9-5F07-B68A-173D1D708B72',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。
',
                'type' => 'string',
                'example' => 'Unknown server error',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"3B460770-40D9-5F07-B68A-173D1D708B72\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"Unknown server error\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteTaskResponse>\\n    <RequestId>3B460770-40D9-5F07-B68A-173D1D708B72</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>Unknown server error</ErrorMessage>\\n    <Success>true</Success>\\n</DeleteTaskResponse>","errorExample":""}]',
      'title' => '删除任务流任务',
    ),
    'PublishAndDeployTaskFlow' => 
    array (
      'summary' => '调用PublishAndDeployTaskFlow接口，发布并部署指定任务流。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '145472',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '36***',
          ),
        ),
        2 => 
        array (
          'name' => 'VersionComments',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流版本描述。',
            'type' => 'string',
            'required' => false,
            'example' => 'vc_test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数详情如下。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求的ID。用于定位日志，排查问题。',
                'type' => 'string',
                'example' => 'A7160423-2A83-592B-97E2-D8AE7B11C520',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'Unknown server error',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'DeployId' => 
              array (
                'description' => '部署记录ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '61***',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A7160423-2A83-592B-97E2-D8AE7B11C520\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"Unknown server error\\",\\n  \\"Success\\": true,\\n  \\"DeployId\\": 0\\n}","errorExample":""},{"type":"xml","example":"<PublishAndDeployTaskFlowResponse>\\n    <RequestId>A7160423-2A83-592B-97E2-D8AE7B11C520</RequestId>\\n    <DeployId>61***</DeployId>\\n    <Success>true</Success>\\n</PublishAndDeployTaskFlowResponse>","errorExample":""}]',
      'title' => '发布并部署指定任务流',
    ),
    'StopTaskFlowInstance' => 
    array (
      'summary' => '调用StopTaskFlowInstance接口，停止运行中的任务流实例。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'none',
        'abilityTreeCode' => '145428',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '7***',
          ),
        ),
        2 => 
        array (
          'name' => 'DagInstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流运行记录ID，可通过调用接口[ListTaskFlowInstance](~~424689~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '47****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数详情如下。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。',
                'type' => 'string',
                'example' => '028BF827-3801-5869-8548-F4A039256308',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：

- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"028BF827-3801-5869-8548-F4A039256308\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<StopTaskFlowInstanceResponse>\\n    <RequestId>028BF827-3801-5869-8548-F4A039256308</RequestId>\\n    <ErrorCode>UnknownError</ErrorCode>\\n    <ErrorMessage>UnknownError</ErrorMessage>\\n    <Success>true</Success>\\n</StopTaskFlowInstanceResponse>","errorExample":""}]',
      'title' => '停止运行中的任务流实例',
    ),
    'CreateTask' => 
    array (
      'summary' => '调用CreateTask接口，创建任务流任务。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '145318',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListTaskFlow](~~424565~~)或[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '7***',
          ),
        ),
        2 => 
        array (
          'name' => 'NodeName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务节点名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'zhttest',
          ),
        ),
        3 => 
        array (
          'name' => 'NodeType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务节点类型，取值请参见[NodeType参数说明](~~424705~~)。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '36',
          ),
        ),
        4 => 
        array (
          'name' => 'NodeContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点配置内容。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        5 => 
        array (
          'name' => 'TimeVariables',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点变量（时间变量配置）。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        6 => 
        array (
          'name' => 'NodeOutput',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务输出变量。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        7 => 
        array (
          'name' => 'GraphParam',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '节点在图上的显示位置。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'description' => '返回参数值如下。',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID，用于定位日志，排查问题。
',
                'type' => 'string',
                'example' => 'CFD8FE00-36D9-4C1B-940D-65A7B73D9066',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'InvalidParameterValid',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'InvalidParameterValid',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'NodeId' => 
              array (
                'description' => '创建成功时，返回的任务节点ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '3***',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"CFD8FE00-36D9-4C1B-940D-65A7B73D9066\\",\\n  \\"ErrorCode\\": \\"InvalidParameterValid\\",\\n  \\"ErrorMessage\\": \\"InvalidParameterValid\\",\\n  \\"Success\\": true,\\n  \\"NodeId\\": 0\\n}","errorExample":""},{"type":"xml","example":"<CreateTaskResponse>\\n    <RequestId>CFD8FE00-36D9-4C1B-940D-65A7B73D9066</RequestId>\\n    <ErrorCode>InvalidParameterValid</ErrorCode>\\n    <ErrorMessage>InvalidParameterValid</ErrorMessage>\\n    <Success>true</Success>\\n</CreateTaskResponse>","errorExample":""}]',
      'title' => '创建任务流任务',
      'requestParamsDescription' => '# 节点配置相关参数说明
根据节点类型的不同，节点的配置有所区别。此文档为任务流任务相关接口，如CreateTask、UpdateTaskOutput等接口的补充说明，其中NodeParam、NodeContent、GraphParam的配置具有通用性。  
当前仅“单实例SQL赋值”、“脚本代码”、“Ecs远程命令”任务节点具有输出变量，配置方式有所区别，详情可参考UpdateTaskOutput接口文档说明。

##  单实例SQL
- DagId
- NodeName
- NodeType: 1
- NodeParam
- GraphParam
- NodeContent: 样例如下
```Json
{
    "dbId":123456, // 数据库Id
    "sql":"/* 请使用当前节点所选择的数据库语法编写SQL */", // sql语句
    "dbType":"lindorm_sql" // 数据库类型
}
```

##  脚本代码
- DagId
- NodeName
- NodeType: 28
- NodeParam
- GraphParam
- NodeOutput
```Json
{
    "outputs":[
        {
            "extractMethod":"json", // 固定为json
            "variableName":"var",  // 变量名
            "description":"demo desc" // 变量描述
        }
    ]
}
```
- NodeContent：样例如下  
```json
{
    "regionId":"cn-hangzhou", // 地域
    "gatewayId":"dg-xxxxxxxxxxxxxx", // 网关ID
    "gatewayInstanceId":"dg-node-xxxxxxxxxxxxxx", // 网关实例ID
    "scriptFileName":"demo.sh", // 文件名
    "args":[ // 运行参数
        "-n value",
        "-n1 value1"
    ]
}
```

## 无锁数据变更
- DagId
- NodeName
- NodeType: 24
- NodeParam
- GraphParam
- NodeContent: 样例如下  
```json
{
    "dbId":123456, // 数据库Id
    "sql":"/* 请使用当前节点所选择的数据库语法编写SQL */", // sql语句
    "dbType":"polardb" // 数据库类型
}
```

## 单实例SQL赋值
- DagId
- NodeName
- NodeType: 32
- NodeParam
- GraphParam
- NodeOutput: 样例如下
```Json
{
    "outputs":[
        {
            /*
            // 变量提取设置
            {
                "row":0, // 行，-1为所有行
                "column":-1, // 列，-1为所有列
                "combiner":"," // 分隔符,当选中所有行或所有列时，需要指定连接符。变量返回值为字符串
            }
            */
            "extractMethod":"{\\"row\\":0,\\"column\\":-1,\\"combiner\\":\\",\\"}", 
            "variableName":"var", // 变量名
            "description":"For demo" // 变量介绍
        }
    ]
}
```
- NodeContent: 样例如下  
```json
{
    "dbId":123456, // 数据库Id
    "sql":"/* 请使用当前节点所选择的数据库语法编写SQL，仅支持SELECT语句，且默认返回最大行数为30 *", // sql语句
    "dbType":"lindorm_cql" // 数据库类型
}
```

## 依赖检查
- DagId
- NodeName
- NodeType: 2
- NodeParam
- GraphParam
- NodeContent: 样例如下  
```Json
{
    "dependentDAGId":132,  // 依赖项：任务流
    "dependentNodeId":"", // 依赖项：单个节点，缺省时依赖项为指定的任务流
    "dependentStartTimePattern":"yyyy-MM-dd HH:mm|-2d+0h+0m", // 开始时间偏移点
    "dependentEndTimePattern":"yyyy-MM-dd HH:mm|+1d+0h+0m", // 结束时间偏移点
    "multiSuccessStrategy":2, //  实例检查策略： 0.最后一次成功； 1.全部成功； 2.指定单次成功
    "multiSuccessStrategyIndex":1 // 实例检查策略： 第 x+1 次
}
```

## 表时间列状态检查
- DagId
- NodeName
- NodeType: 2
- NodeParam
- GraphParam
- NodeContent: 样例如下  
```Json
{
    "dependentDAGId":132,  // 依赖项：任务流
    "dependentNodeId":"", // 依赖项：单个节点，缺省时依赖项为指定的任务流
    "dependentStartTimePattern":"yyyy-MM-dd HH:mm|-2d+0h+0m", // 开始时间偏移点
    "dependentEndTimePattern":"yyyy-MM-dd HH:mm|+1d+0h+0m", // 结束时间偏移点
    "multiSuccessStrategy":2, //  实例检查策略： 0.最后一次成功； 1.全部成功； 2.指定单次成功
    "multiSuccessStrategyIndex":1 // 实例检查策略： 第 x+1 次
}
```


## SQL状态检查
- DagId
- NodeName
- NodeType: 25
- NodeParam
- GraphParam
- NodeContent: 样例如下  
```Json
{
    "dbId":123456,
    "sql":"/* 请使用当前节点所选择的数据库语法编写SQL */ \\n\\n select 1 from abc",
    "dbType":"lindorm_cql"
}
```',
    ),
    'CreateLakeHouseSpace' => 
    array (
      'summary' => '调用CreateLakeHouseSpace接口，在DMS数仓开发中创建新的项目空间。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
        'abilityTreeCode' => '130576',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SpaceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '项目空间名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test_space',
          ),
        ),
        1 => 
        array (
          'name' => 'Description',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '项目空间的描述信息。',
            'type' => 'string',
            'required' => false,
            'example' => 'test',
          ),
        ),
        2 => 
        array (
          'name' => 'Mode',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '项目空间模式，取值如下：
- **0**：简单模式，暂不支持。
- **1**：标准模式。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        3 => 
        array (
          'name' => 'DwDbType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库类型，当前仅支持：

- **14**：AnalyticDB MySQL版
- **18**：AnalyticDB PostgreSQL版',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '14',
          ),
        ),
        4 => 
        array (
          'name' => 'SpaceConfig',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '项目空间配置，支持的配置项：
- **skipManualRunCheck**：试运行免安全规则检查。
- **skipPublishApprove**：发布、运维免审批。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '{\\"skipManualRunCheck\\":true,\\"skipPublishApprove\\":true}',
          ),
        ),
        5 => 
        array (
          'name' => 'DevDbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '开发库的数据库ID（DatabaseId），可通过调用接口[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => '2435****',
          ),
        ),
        6 => 
        array (
          'name' => 'ProdDbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '生产库的数据库ID（DatabaseId），可通过调用接口[ListDatabases](~~141873~~)或[SearchDatabase](~~141876~~)获取该参数的值。',
            'type' => 'string',
            'required' => false,
            'example' => '2442****',
          ),
        ),
        7 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'SpaceId' => 
              array (
                'description' => '项目空间ID。',
                'type' => 'integer',
                'format' => 'int64',
                'example' => '24',
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '7FAD400F-7A5C-4193-8F9A-39D86C4F0231',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'InvalidParameterValid',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'Invalid parameters: space name、mode、prod db id、db type、config.',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"SpaceId\\": 24,\\n  \\"RequestId\\": \\"7FAD400F-7A5C-4193-8F9A-39D86C4F0231\\",\\n  \\"ErrorCode\\": \\"InvalidParameterValid\\",\\n  \\"ErrorMessage\\": \\"Invalid parameters: space name、mode、prod db id、db type、config.\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<CreateLakeHouseSpaceResponse>\\n    <RequestId>7FAD400F-7A5C-4193-8F9A-39D86C4F0231</RequestId>\\n    <SpaceId>24</SpaceId>\\n    <Success>true</Success>\\n</CreateLakeHouseSpaceResponse>","errorExample":""}]',
      'title' => '创建新项目空间',
      'description' => '- 同一租户下项目空间名称唯一，使用重复的项目空间名称调用此接口会导致调用失败。  
- 管理员或DBA可调用[GetLhSpaceByName](~~424379~~)查询是否存在该名称的项目空间。',
    ),
    'GetLhSpaceByName' => 
    array (
      'summary' => '调用GetLhSpaceByName接口，根据DMS数仓开发项目空间名查询项目空间信息。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SpaceName',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '项目空间名称。',
            'type' => 'string',
            'required' => true,
            'docRequired' => true,
            'example' => 'test_space',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'FE8CA4A8-AB2D-55B7-BD30-01A4609F40D8',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'LakehouseSpace' => 
              array (
                'description' => '数仓开发项目空间。',
                'type' => 'object',
                'properties' => 
                array (
                  'Id' => 
                  array (
                    'description' => '项目空间ID。',
                    'type' => 'integer',
                    'format' => 'int64',
                    'example' => '1',
                  ),
                  'SpaceName' => 
                  array (
                    'description' => '项目空间名称。',
                    'type' => 'string',
                    'example' => 'test_space',
                  ),
                  'CreatorId' => 
                  array (
                    'description' => '项目空间创建者的用户ID。',
                    'type' => 'string',
                    'example' => '51***',
                  ),
                  'TenantId' => 
                  array (
                    'description' => '项目空间所在的租户ID。',
                    'type' => 'string',
                    'example' => '3***',
                  ),
                  'Description' => 
                  array (
                    'description' => '项目空间的描述。',
                    'type' => 'string',
                    'example' => 'test',
                  ),
                  'Mode' => 
                  array (
                    'description' => '项目空间模式，返回值如下：
- **0**：简单模式
- **1**：标准模式',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '1',
                  ),
                  'DwDbType' => 
                  array (
                    'description' => '数据库类型，当前仅支持：
- **14**：AnalyticDB MySQL版
- **18**：AnalyticDB PostgreSQL版',
                    'type' => 'string',
                    'example' => '14',
                  ),
                  'SpaceConfig' => 
                  array (
                    'description' => '项目空间配置，支持的配置项：
- **skipManualRunCheck**：试运行免安全规则检查。
- **skipPublishApprove**：发布、运维免审批。',
                    'type' => 'string',
                    'example' => '{\\"skipManualRunCheck\\":true,\\"skipPublishApprove\\":true}',
                  ),
                  'DevDbId' => 
                  array (
                    'description' => '开发库的数据库ID。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2435****',
                  ),
                  'ProdDbId' => 
                  array (
                    'description' => '生产库的数据库ID。',
                    'type' => 'integer',
                    'format' => 'int32',
                    'example' => '2442****',
                  ),
                  'IsDeleted' => 
                  array (
                    'description' => '是否已删除。返回值如下：
- **true**：项目空间已删除
- **false**：项目空间没有被删除',
                    'type' => 'boolean',
                    'example' => 'false',
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"FE8CA4A8-AB2D-55B7-BD30-01A4609F40D8\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true,\\n  \\"LakehouseSpace\\": {\\n    \\"Id\\": 1,\\n    \\"SpaceName\\": \\"test_space\\",\\n    \\"CreatorId\\": \\"51***\\",\\n    \\"TenantId\\": \\"3***\\",\\n    \\"Description\\": \\"test\\",\\n    \\"Mode\\": 1,\\n    \\"DwDbType\\": \\"14\\",\\n    \\"SpaceConfig\\": \\"{\\\\\\\\\\\\\\"skipManualRunCheck\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\"skipPublishApprove\\\\\\\\\\\\\\":true}\\",\\n    \\"DevDbId\\": 0,\\n    \\"ProdDbId\\": 0,\\n    \\"IsDeleted\\": false\\n  }\\n}","errorExample":""},{"type":"xml","example":"<GetLhSpaceByNameResponse>\\n    <RequestId>FE8CA4A8-AB2D-55B7-BD30-01A4609F40D8</RequestId>\\n    <LakehouseSpace>\\n        <TenantId>3***</TenantId>\\n        <IsDeleted>false</IsDeleted>\\n        <SpaceName>test_space</SpaceName>\\n        <CreatorId>51***</CreatorId>\\n        <Mode>1</Mode>\\n        <DwDbType>14</DwDbType>\\n        <Id>1</Id>\\n        <SpaceConfig>{\\"skipManualRunCheck\\":true,\\"skipPublishApprove\\":true}</SpaceConfig>\\n        <DevDbId>2435****</DevDbId>\\n        <ProdDbId>2442****</ProdDbId>\\n    </LakehouseSpace>\\n    <Success>true</Success>\\n</GetLhSpaceByNameResponse>","errorExample":""}]',
      'title' => '查询项目空间信息',
      'description' => '用户角色为管理员或DBA。',
    ),
    'DeleteLakeHouseSpace' => 
    array (
      'summary' => '调用DeleteLakeHouseSpace接口，删除数仓开发中的项目空间。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'abilityTreeCode' => '132905',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SpaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '项目空间ID，可通过调用接口[GetLhSpaceByName](~~424379~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '24',
          ),
        ),
        1 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'E76DD2E7-EBAC-5724-B163-19AAC233F8F2',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'NoPermission',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'You are not authorized to perform this operation.',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- true：请求成功
- false：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"E76DD2E7-EBAC-5724-B163-19AAC233F8F2\\",\\n  \\"ErrorCode\\": \\"NoPermission\\",\\n  \\"ErrorMessage\\": \\"You are not authorized to perform this operation.\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteLakeHouseSpaceResponse>\\n    <RequestId>E76DD2E7-EBAC-5724-B163-19AAC233F8F2</RequestId>\\n    <Success>true</Success>\\n</DeleteLakeHouseSpaceResponse>","errorExample":""}]',
      'title' => '删除项目空间',
    ),
    'ListLhTaskFlowAndScenario' => 
    array (
      'summary' => '查询DMS数仓开发项目空间中业务场景对应的任务流列表。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
        'abilityTreeCode' => '130971',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'SpaceId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '项目空间ID（Id），可通过调用接口[GetLhSpaceByName](~~424379~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '24',
          ),
        ),
        1 => 
        array (
          'name' => 'UserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '用户ID，可通过调用接口[ListUsers](~~141938~~)或[GetUser](~~147098~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'example' => '51****',
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RawDAGList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'Dag' => 
                  array (
                    'description' => '默认业务场景的任务流列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '默认业务场景的任务流列表。
',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Id' => 
                        array (
                          'description' => '任务流ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '134137****',
                        ),
                        'CreatorId' => 
                        array (
                          'description' => '创建人的用户ID。',
                          'type' => 'string',
                          'example' => '51****',
                        ),
                        'IsDeleted' => 
                        array (
                          'description' => '任务流是否已被删除，返回值如下：
- **true**：已删除
- **false**：没有删除',
                          'type' => 'boolean',
                          'example' => 'false',
                        ),
                        'DemoId' => 
                        array (
                          'description' => '扩展字段，暂无含义。',
                          'type' => 'string',
                          'example' => '-',
                        ),
                        'DeployId' => 
                        array (
                          'description' => '最近一次部署记录的ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '12**',
                        ),
                        'DataFlowId' => 
                        array (
                          'description' => '扩展字段，暂无含义。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '-',
                        ),
                        'ScenarioId' => 
                        array (
                          'description' => '应用场景ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '2**',
                        ),
                        'SpaceId' => 
                        array (
                          'description' => '项目空间ID。',
                          'type' => 'integer',
                          'format' => 'int64',
                          'example' => '1',
                        ),
                        'CreatorNickName' => 
                        array (
                          'description' => '创建人的昵称。',
                          'type' => 'string',
                          'example' => 'Creator_Name',
                        ),
                        'DagOwnerNickName' => 
                        array (
                          'description' => '任务流Owner的昵称。',
                          'type' => 'string',
                          'example' => 'Owner_Name',
                        ),
                        'CanEdit' => 
                        array (
                          'description' => '任务流是否支持编辑，返回值如下：
- **true**：支持修改
- **false**：不支持修改',
                          'type' => 'boolean',
                          'example' => 'true',
                        ),
                        'Status' => 
                        array (
                          'description' => '任务流状态，返回值如下：
- **0**：无效 
- **1**：无调度配置 
- **2**：等待调度',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2',
                        ),
                        'LatestInstanceStatus' => 
                        array (
                          'description' => '最近一个运行记录的状态，返回值如下：
- **0**：无效
- **1**：无调度配置
- **2**：等待调度',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '0',
                        ),
                        'LatestInstanceTime' => 
                        array (
                          'description' => '最近一个运行记录的创建时间。',
                          'type' => 'integer',
                          'format' => 'int32',
                          'example' => '2022-04-14',
                        ),
                        'DagName' => 
                        array (
                          'description' => '任务流名称。',
                          'type' => 'string',
                          'example' => 'Dag_Name',
                        ),
                        'DagOwnerId' => 
                        array (
                          'description' => '任务流Owner的用户ID。',
                          'type' => 'string',
                          'example' => '51****',
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'ScenarioDAGList' => 
              array (
                'type' => 'object',
                'properties' => 
                array (
                  'ScenarioDAG' => 
                  array (
                    'description' => '其他业务场景的任务流列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '业务场景的任务流列表。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Scenario' => 
                        array (
                          'description' => '业务场景信息列表。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'ScenarioName' => 
                            array (
                              'description' => '应用场景名称。',
                              'type' => 'string',
                              'example' => 'Scenario_2',
                            ),
                            'CreatorId' => 
                            array (
                              'description' => '创建人的用户ID。',
                              'type' => 'string',
                              'example' => '51****',
                            ),
                            'Description' => 
                            array (
                              'description' => '描述信息。',
                              'type' => 'string',
                              'example' => 'test',
                            ),
                          ),
                        ),
                        'DagList' => 
                        array (
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Dag' => 
                            array (
                              'title' => '',
                              'description' => '任务流信息列表。',
                              'type' => 'array',
                              'items' => 
                              array (
                                'description' => '任务流信息列表。',
                                'type' => 'object',
                                'properties' => 
                                array (
                                  'Id' => 
                                  array (
                                    'description' => '任务流ID。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '9***',
                                  ),
                                  'CreatorId' => 
                                  array (
                                    'description' => '创建人的用户ID。',
                                    'type' => 'string',
                                    'example' => '51****',
                                  ),
                                  'IsDeleted' => 
                                  array (
                                    'description' => '任务流是否已被删除，返回值如下：
- **true**：已删除
- **false**：没有删除',
                                    'type' => 'boolean',
                                    'example' => 'false',
                                  ),
                                  'DemoId' => 
                                  array (
                                    'description' => '扩展字段，暂无含义。',
                                    'type' => 'string',
                                    'example' => '-',
                                  ),
                                  'DeployId' => 
                                  array (
                                    'description' => '最近一次部署记录的ID。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '12**',
                                  ),
                                  'DataFlowId' => 
                                  array (
                                    'description' => '扩展字段，暂无含义。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '-',
                                  ),
                                  'ScenarioId' => 
                                  array (
                                    'description' => '应用场景ID。

',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '2**',
                                  ),
                                  'SpaceId' => 
                                  array (
                                    'description' => '项目空间ID。',
                                    'type' => 'integer',
                                    'format' => 'int64',
                                    'example' => '1',
                                  ),
                                  'CreatorNickName' => 
                                  array (
                                    'description' => '创建人的昵称。',
                                    'type' => 'string',
                                    'example' => 'Creator_Name',
                                  ),
                                  'DagOwnerNickName' => 
                                  array (
                                    'description' => '任务流Owner昵称。',
                                    'type' => 'string',
                                    'example' => 'Owner_Name',
                                  ),
                                  'CanEdit' => 
                                  array (
                                    'description' => '任务流是否支持编辑。返回值如下：
- **true**：支持修改
- **false**：不支持修改',
                                    'type' => 'boolean',
                                    'example' => 'true',
                                  ),
                                  'Status' => 
                                  array (
                                    'description' => '任务流状态，返回值如下：
- **0**：无效 
- **1**：无调度配置 
- **2**：等待调度',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'LatestInstanceStatus' => 
                                  array (
                                    'description' => '最近一个运行实例的状态，返回值如下：
- 0：无效
- 1：无调度配置
- 2：等待调度',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '1',
                                  ),
                                  'LatestInstanceTime' => 
                                  array (
                                    'description' => '最近一个运行记录的创建时间。',
                                    'type' => 'integer',
                                    'format' => 'int32',
                                    'example' => '2022-04-14',
                                  ),
                                  'DagName' => 
                                  array (
                                    'description' => '任务流名称。',
                                    'type' => 'string',
                                    'example' => 'Dag_Name',
                                  ),
                                  'DagOwnerId' => 
                                  array (
                                    'description' => '任务流Owner的用户ID。',
                                    'type' => 'string',
                                    'example' => '51****',
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '48602B78-0DDF-414C-8688-70CAB6070115',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RawDAGList\\": {\\n    \\"Dag\\": [\\n      {\\n        \\"Id\\": 0,\\n        \\"CreatorId\\": \\"51****\\",\\n        \\"IsDeleted\\": false,\\n        \\"DemoId\\": \\"-\\",\\n        \\"DeployId\\": 0,\\n        \\"DataFlowId\\": 0,\\n        \\"ScenarioId\\": 0,\\n        \\"SpaceId\\": 1,\\n        \\"CreatorNickName\\": \\"Creator_Name\\",\\n        \\"DagOwnerNickName\\": \\"Owner_Name\\",\\n        \\"CanEdit\\": true,\\n        \\"Status\\": 2,\\n        \\"LatestInstanceStatus\\": 0,\\n        \\"LatestInstanceTime\\": 0,\\n        \\"DagName\\": \\"Dag_Name\\",\\n        \\"DagOwnerId\\": \\"51****\\"\\n      }\\n    ]\\n  },\\n  \\"ScenarioDAGList\\": {\\n    \\"ScenarioDAG\\": [\\n      {\\n        \\"Scenario\\": {\\n          \\"ScenarioName\\": \\"Scenario_2\\",\\n          \\"CreatorId\\": \\"51****\\",\\n          \\"Description\\": \\"test\\"\\n        },\\n        \\"DagList\\": {\\n          \\"Dag\\": [\\n            {\\n              \\"Id\\": 0,\\n              \\"CreatorId\\": \\"51****\\",\\n              \\"IsDeleted\\": false,\\n              \\"DemoId\\": \\"-\\",\\n              \\"DeployId\\": 0,\\n              \\"DataFlowId\\": 0,\\n              \\"ScenarioId\\": 0,\\n              \\"SpaceId\\": 1,\\n              \\"CreatorNickName\\": \\"Creator_Name\\",\\n              \\"DagOwnerNickName\\": \\"Owner_Name\\",\\n              \\"CanEdit\\": true,\\n              \\"Status\\": 1,\\n              \\"LatestInstanceStatus\\": 1,\\n              \\"LatestInstanceTime\\": 0,\\n              \\"DagName\\": \\"Dag_Name\\",\\n              \\"DagOwnerId\\": \\"51****\\"\\n            }\\n          ]\\n        }\\n      }\\n    ]\\n  },\\n  \\"RequestId\\": \\"48602B78-0DDF-414C-8688-70CAB6070115\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ListLhTaskFlowAndScenarioResponse>\\n    <RawDAGList>\\n        <CreatorId>51****</CreatorId>\\n        <IsDeleted>false</IsDeleted>\\n        <DemoId>-</DemoId>\\n        <SpaceId>1</SpaceId>\\n        <CreatorNickName>Creator_Name</CreatorNickName>\\n        <DagOwnerNickName>Owner_Name</DagOwnerNickName>\\n        <CanEdit>true</CanEdit>\\n        <Status>2</Status>\\n        <LatestInstanceStatus>0</LatestInstanceStatus>\\n        <DagName>Dag_Name</DagName>\\n        <DagOwnerId>51****</DagOwnerId>\\n    </RawDAGList>\\n    <ScenarioDAGList>\\n        <Scenario>\\n            <ScenarioName>Scenario_2</ScenarioName>\\n            <CreatorId>51****</CreatorId>\\n            <Description>test</Description>\\n        </Scenario>\\n        <DagList>\\n            <CreatorId>51****</CreatorId>\\n            <IsDeleted>false</IsDeleted>\\n            <DemoId>-</DemoId>\\n            <SpaceId>1</SpaceId>\\n            <CreatorNickName>Creator_Name</CreatorNickName>\\n            <DagOwnerNickName>Owner_Name</DagOwnerNickName>\\n            <CanEdit>true</CanEdit>\\n            <Status>1</Status>\\n            <LatestInstanceStatus>1</LatestInstanceStatus>\\n            <DagName>Dag_Name</DagName>\\n            <DagOwnerId>51****</DagOwnerId>\\n        </DagList>\\n    </ScenarioDAGList>\\n    <RequestId>48602B78-0DDF-414C-8688-70CAB6070115</RequestId>\\n    <Success>true</Success>\\n</ListLhTaskFlowAndScenarioResponse>","errorExample":""}]',
      'title' => '查询项目空间中业务场景对应的任务流列表',
      'description' => '- 前提条件：具有目标项目空间的访问权限。如果您没有项目空间的访问权限，DMS管理员、DBA或空间管理员可以通过调用[AddLhMembers](~~424759~~)将您添加为目标项目空间成员。
- 补充说明：如果您的用户角色为DMS管理员或空间管理员，可通过指定用户ID查询某个项目空间中与该用户相关的应用场景和任务流列表。
  
',
    ),
    'AddLhMembers' => 
    array (
      'summary' => '调用AddLhMembers接口，添加DMS数仓开发项目空间管理员、空间成员或任务流开发者。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '131032',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ObjectType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对象类型，取值如下：
- **0**：项目空间
- **1**：任务流',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '0',
          ),
        ),
        1 => 
        array (
          'name' => 'ObjectId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对象ID：

- 项目空间ID（Id），可通过调用接口[GetLhSpaceByName](~~424379~~)获取该参数的值。
- 任务流ID（Id），可通过调用接口[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        2 => 
        array (
          'name' => 'Members',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '目标用户信息列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '目标用户信息列表。',
              'type' => 'object',
              'properties' => 
              array (
                'UserId' => 
                array (
                  'description' => '需添加用户的用户ID，可通过调用接口[ListUsers](~~141938~~)或[GetUser](~~147098~~)获取该参数的值。',
                  'type' => 'integer',
                  'format' => 'int64',
                  'required' => true,
                  'docRequired' => true,
                  'example' => '15****',
                ),
                'Roles' => 
                array (
                  'description' => '权限角色列表。',
                  'type' => 'array',
                  'items' => 
                  array (
                    'description' => '权限角色，取值如下：
- **ADMIN**：空间管理员，只有DMS的管理员和DBA可以添加空间管理员。
- **MEMBER**：空间成员。
- **DEVELOPER**：任务流开发者，只有空间成员允许被添加为任务流开发者。
',
                    'type' => 'string',
                    'required' => true,
                    'docRequired' => true,
                    'example' => 'ADMIN',
                  ),
                  'required' => true,
                  'docRequired' => true,
                ),
              ),
              'required' => true,
              'docRequired' => true,
            ),
            'required' => true,
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3000',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '31853A2B-DC9D-5B39-8492-D2AC8BCF550E',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '403',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"31853A2B-DC9D-5B39-8492-D2AC8BCF550E\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<AddLhMembersResponse>\\n    <RequestId>31853A2B-DC9D-5B39-8492-D2AC8BCF550E</RequestId>\\n    <Success>true</Success>\\n</AddLhMembersResponse>","errorExample":""}]',
      'title' => '添加项目空间管理员、空间成员或任务流开发者',
      'description' => '前提条件：您的用户角色为管理员、DBA或空间管理员。  

补充说明：

- 新增任务流开发者时，请先添加该用户为空间成员。 
- 本接口不支持移交任务流负责人，请调用[ChangLhDagOwner](~~424761~~)接口移交项目空间任务流负责人。
- 关于数仓开发项目空间中的角色划分，请参见[项目空间权限体系](~~410893~~)。',
    ),
    'DeleteLhMembers' => 
    array (
      'summary' => '调用DeleteLhMembers接口，删除DMS数仓开发项目空间成员或任务流开发者。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'delete',
        'abilityTreeCode' => '130999',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'ObjectType',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对象类型，取值如下：
- **0**：项目空间
- **1**：任务流',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'docRequired' => true,
            'example' => '1',
          ),
        ),
        1 => 
        array (
          'name' => 'ObjectId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '对象ID：

- 项目空间ID（Id），可通过调用接口[GetLhSpaceByName](~~424379~~)获取该参数的值。
- 任务流ID（Id），可通过调用接口[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。

',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '9***',
          ),
        ),
        2 => 
        array (
          'name' => 'MemberIds',
          'in' => 'query',
          'style' => 'json',
          'schema' => 
          array (
            'description' => '目标用户信息列表。',
            'type' => 'array',
            'items' => 
            array (
              'description' => '需删除用户的用户ID，可通过调用接口[ListUsers](~~141938~~)或[GetUser](~~147098~~)获取该参数的值。',
              'type' => 'integer',
              'format' => 'int32',
              'required' => true,
              'docRequired' => true,
              'example' => '[50****,51****]',
            ),
            'required' => true,
            'docRequired' => true,
            'maxItems' => 50,
            'minItems' => 1,
          ),
        ),
        3 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'F1C78D32-1AFD-58AD-9DD2-C8A0896969DD',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '403',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"F1C78D32-1AFD-58AD-9DD2-C8A0896969DD\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<DeleteLhMembersResponse>\\n    <RequestId>F1C78D32-1AFD-58AD-9DD2-C8A0896969DD</RequestId>\\n    <Success>true</Success>\\n</DeleteLhMembersResponse>","errorExample":""}]',
      'title' => '删除项目空间成员或任务流开发者',
      'description' => '前提条件：您的用户角色为管理员、DBA或项目管理员。  
补充说明：本接口不支持移交任务流负责人，移交项目空间任务流负责人请调用[ChangLhDagOwner](~~424761~~)接口。',
    ),
    'ChangeLhDagOwner' => 
    array (
      'summary' => '转交DMS数仓开发项目空间中的任务流责任人。',
      'methods' => 
      array (
        0 => 'post',
        1 => 'get',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
        'abilityTreeCode' => '131459',
        'abilityTreeNodes' => 
        array (
          0 => 'FEATUREdmsXSH6IQ',
        ),
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DagId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '任务流ID，可通过调用接口[ListLhTaskFlowAndScenario](~~426672~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '9***',
          ),
        ),
        1 => 
        array (
          'name' => 'OwnerUserId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '新的任务流责任人的用户ID，可通过调用接口[ListUsers](~~141938~~)或[GetUser](~~147098~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'docRequired' => true,
            'example' => '50****',
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID，可通过调用接口[GetUserActiveTenant](~~198073~~)或[ListUserTenants](~~198074~~)获取该参数的值。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'description' => '请求ID。',
                'type' => 'string',
                'example' => '9997630E-1993-5E6D-9DF1-4EFEE755FE31',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => '403',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"9997630E-1993-5E6D-9DF1-4EFEE755FE31\\",\\n  \\"ErrorCode\\": \\"403\\",\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"Success\\": true\\n}","errorExample":""},{"type":"xml","example":"<ChangeLhDagOwnerResponse>\\n    <RequestId>9997630E-1993-5E6D-9DF1-4EFEE755FE31</RequestId>\\n    <Success>true</Success>\\n</ChangeLhDagOwnerResponse>","errorExample":""}]',
      'title' => '转交任务流责任人',
      'description' => '补充说明：
- 转交任务流责任人后，已发布任务流的责任人保持不变。
- 您可以通过调用[ReDeployLhDagVersion](~~424712~~)接口，重新部署任务流历史版本。
',
    ),
    'ListEffectiveOrders' => 
    array (
      'summary' => '查询有效订单列表。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'list',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。

> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'A8FE12AA-300D-5FDF-806F-C2CB99161F32',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'OrderSummary' => 
              array (
                'description' => '订单概览。',
                'type' => 'array',
                'items' => 
                array (
                  'type' => 'object',
                  'properties' => 
                  array (
                    'CommodityCode' => 
                    array (
                      'title' => 'DMS的商品Code
- 中国站：dms_pre_public_cn（包年包月）、dms_post_public_cn（按量付费）
- 国际站：dms_pre_public_intl（包年包月）、dms_post_public_intl（按量付费）',
                      'description' => 'DMS的商品Code。

<props="china">
- dms\\_pre\\_public_cn（包年包月）</props>
<props="china">
- dms\\_post\\_public_cn（按量付费）</props>

<props="intl">
- dms\\_pre\\_public_intl（包年包月）</props>
<props="intl">
- dms\\_post\\_public_intl（按量付费）</props>


',
                      'type' => 'string',
                      'example' => '包年包月',
                    ),
                    'CommodityType' => 
                    array (
                      'title' => '商品类型
- versionType：管控模式
- SensitiveDataProtection：敏感数据保护',
                      'description' => '商品类型。
- **VersionType**：管控模式
- **SensitiveDataProtection**：敏感数据保护',
                      'type' => 'string',
                      'example' => 'VersionType',
                    ),
                    'VersionType' => 
                    array (
                      'title' => '商品类型为管控模式时（CommodityType = versionType ），区分管控模式的类型：
- stand：稳定变更
- safety：安全协同',
                      'description' => '购买商品类型为管控模式时，有以下类型可选择：
- **stand**：稳定变更
- **safety**：安全协同',
                      'type' => 'string',
                      'example' => 'safety',
                    ),
                    'TotalQuota' => 
                    array (
                      'title' => 'OrderList订单明细额度总和',
                      'description' => '订单列表中所有订单额度总和。
',
                      'type' => 'integer',
                      'format' => 'int32',
                      'example' => '12',
                    ),
                    'OrderList' => 
                    array (
                      'title' => '订单明细',
                      'description' => '订单明细',
                      'type' => 'array',
                      'items' => 
                      array (
                        'title' => '订单',
                        'description' => '订单',
                        'type' => 'object',
                        'properties' => 
                        array (
                          'OrderId' => 
                          array (
                            'title' => '购买订单ID',
                            'description' => '订单ID。',
                            'type' => 'string',
                            'example' => '2190037****',
                          ),
                          'BuyerId' => 
                          array (
                            'title' => '购买用户UID',
                            'description' => '购买用户的UID。',
                            'type' => 'string',
                            'example' => '2698420314****',
                          ),
                          'InstanceId' => 
                          array (
                            'title' => '购买商品实例ID',
                            'description' => '购买商品的实例ID。',
                            'type' => 'string',
                            'example' => 'rm-bp1xd1v866****',
                          ),
                          'StartTime' => 
                          array (
                            'title' => '订单开始时间',
                            'description' => '实例的开始时间。',
                            'type' => 'string',
                            'example' => '2022-10-24 00:00:00',
                          ),
                          'EndTime' => 
                          array (
                            'title' => '订单到期时间',
                            'description' => '实例的到期时间。',
                            'type' => 'string',
                            'example' => '2022-11-24 00:00:00',
                          ),
                          'InsNum' => 
                          array (
                            'title' => '订单购买规格',
                            'description' => '已购买的管控模式或敏感数据的使用额度。',
                            'type' => 'string',
                            'example' => '7',
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"A8FE12AA-300D-5FDF-806F-C2CB99161F32\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"OrderSummary\\": [\\n    {\\n      \\"CommodityCode\\": \\"包年包月\\",\\n      \\"CommodityType\\": \\"VersionType\\",\\n      \\"VersionType\\": \\"safety\\",\\n      \\"TotalQuota\\": 12,\\n      \\"OrderList\\": [\\n        {\\n          \\"OrderId\\": \\"2190037****\\",\\n          \\"BuyerId\\": \\"2698420314****\\",\\n          \\"InstanceId\\": \\"rm-bp1xd1v866****\\",\\n          \\"StartTime\\": \\"2022-10-24 00:00:00\\",\\n          \\"EndTime\\": \\"2022-11-24 00:00:00\\",\\n          \\"InsNum\\": \\"7\\"\\n        }\\n      ]\\n    }\\n  ]\\n}","errorExample":""},{"type":"xml","example":"<ListEffectiveOrdersResponse>\\n    <RequestId>A8FE12AA-300D-5FDF-806F-C2CB99161F32</RequestId>\\n    <Success>true</Success>\\n    <OrderSummary>\\n        <CommodityCode>包年包月</CommodityCode>\\n        <CommodityType>VersionType</CommodityType>\\n        <VersionType>safety</VersionType>\\n        <TotalQuota>12</TotalQuota>\\n        <OrderList>\\n            <OrderId>2190037****</OrderId>\\n            <BuyerId>2698420314****</BuyerId>\\n            <InstanceId>rm-bp1xd1v866****</InstanceId>\\n            <StartTime>2022-10-24 00:00:00</StartTime>\\n            <EndTime>2022-11-24 00:00:00</EndTime>\\n            <InsNum>7</InsNum>\\n        </OrderList>\\n    </OrderSummary>\\n</ListEffectiveOrdersResponse>","errorExample":""}]',
      'title' => '查询有效订单列表',
    ),
    'RefundPayAsYouGoOrder' => 
    array (
      'summary' => '调用RefundPayAsYouGoOrder接口，退订已购买的DMS按量付费商品。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'readAndWrite',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'update',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。

> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'OrderId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '购买订单ID，可通过 ListEffectiveOrders 获取，只支持按量付费订单ID',
            'description' => '已购买按量付费商品的订单ID。可通过调用ListEffectiveOrders接口获取该参数的值。',
            'type' => 'string',
            'required' => true,
            'example' => '2190037****',
          ),
        ),
        2 => 
        array (
          'name' => 'InstanceId',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '售卖订单的实例ID',
            'description' => '售卖订单的实例ID。',
            'type' => 'string',
            'required' => true,
            'example' => '27****',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C51420E3-144A-4A94-B473-8662FCF4AD10',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C51420E3-144A-4A94-B473-8662FCF4AD10\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\"\\n}","errorExample":""},{"type":"xml","example":"<RefundPayAsYouGoOrderResponse>\\n    <RequestId>C51420E3-144A-4A94-B473-8662FCF4AD10</RequestId>\\n    <Success>true</Success>\\n</RefundPayAsYouGoOrderResponse>","errorExample":""}]',
      'title' => '退订已购买的DMS按量付费商品',
    ),
    'BuyPayAsYouGoOrder' => 
    array (
      'summary' => '调用BuyPayAsYouGoOrder接口，购买DMS按量付费的商品。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'create',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。

> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
        1 => 
        array (
          'name' => 'CommodityType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '商品类型
- versionType：管控模式
- SensitiveDataProtection：敏感数据保护',
            'description' => '商品类型。
- **VersionType**：管控模式
- **SensitiveDataProtection**：敏感数据保护',
            'type' => 'string',
            'required' => true,
            'example' => 'SensitiveDataProtection',
          ),
        ),
        2 => 
        array (
          'name' => 'InsNum',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '购买额度（一个额度可用于一个数据库实例）',
            'description' => '购买管控模式或敏感数据的使用额度。

> 一个额度仅可用于一个数据库实例。',
            'type' => 'integer',
            'format' => 'int32',
            'required' => true,
            'example' => '7',
          ),
        ),
        3 => 
        array (
          'name' => 'VersionType',
          'in' => 'query',
          'schema' => 
          array (
            'title' => '购买管控模式时（CommodityType = versionType ），区分管控模式的类型：
- stand：稳定变更
- safety：安全协同',
            'description' => '购买商品类型为管控模式时，有以下类型可选择：
- **stand**：稳定变更
- **safety**：安全协同',
            'type' => 'string',
            'required' => false,
            'example' => 'stand',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'C51420E3-144A-4A94-B473-8662FCF4AD10',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功，返回值如下：
- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'InstanceId' => 
              array (
                'title' => '购买成功后，返回购买的订单实例ID',
                'description' => '购买成功后，返回购买的订单实例ID。',
                'type' => 'string',
                'example' => 'dms_pre_public_cn-nif23l****',
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"type":"json","example":"{\\n  \\"RequestId\\": \\"C51420E3-144A-4A94-B473-8662FCF4AD10\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"InstanceId\\": \\"dms_pre_public_cn-nif23l****\\"\\n}","errorExample":""},{"type":"xml","example":"<BuyPayAsYouGoOrderResponse>\\n    <RequestId>C51420E3-144A-4A94-B473-8662FCF4AD10</RequestId>\\n    <Success>true</Success>\\n    <InstanceId>dms_pre_public_cn-nif23l****</InstanceId>\\n</BuyPayAsYouGoOrderResponse>","errorExample":""}]',
      'title' => '购买DMS按量付费的商品',
    ),
    'AnalyzeSQLLineage' => 
    array (
      'summary' => '分析SQL语句中的表、字段之间的血缘关系（依赖和影响关系）。',
      'methods' => 
      array (
        0 => 'get',
        1 => 'post',
      ),
      'schemes' => 
      array (
        0 => 'http',
        1 => 'https',
      ),
      'security' => 
      array (
        0 => 
        array (
          'AK' => 
          array (
          ),
        ),
      ),
      'operationType' => 'read',
      'deprecated' => false,
      'systemTags' => 
      array (
        'operationType' => 'get',
      ),
      'parameters' => 
      array (
        0 => 
        array (
          'name' => 'DbId',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '数据库ID。
> 该参数对应[SearchDatabase](~~141876~~)、[ListDatabases](~~141873~~)、[GetDatabase](~~141869~~)等接口中的DatabaseId参数，您可以调用上述任一接口获取数据库ID。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => true,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '123***',
          ),
        ),
        1 => 
        array (
          'name' => 'SqlContent',
          'in' => 'query',
          'schema' => 
          array (
            'description' => 'SQL语句。',
            'type' => 'string',
            'required' => true,
            'example' => 'insert into a (id) select id from b;',
          ),
        ),
        2 => 
        array (
          'name' => 'Tid',
          'in' => 'query',
          'schema' => 
          array (
            'description' => '租户ID。
> 取自系统右上角头像处悬停展示的租户ID信息，详情请参见[查看租户信息](~~181330~~)。',
            'type' => 'integer',
            'format' => 'int64',
            'required' => false,
            'maximum' => '9223372036854775807',
            'minimum' => '1',
            'example' => '3***',
          ),
        ),
      ),
      'responses' => 
      array (
        200 => 
        array (
          'schema' => 
          array (
            'title' => 'Schema of Response',
            'description' => 'Schema of Response',
            'type' => 'object',
            'properties' => 
            array (
              'RequestId' => 
              array (
                'title' => 'Id of the request',
                'description' => '请求ID。',
                'type' => 'string',
                'example' => 'B4B07137-F6AE-4756-8474-7F92BB6C4E04',
              ),
              'Success' => 
              array (
                'description' => '请求是否成功。返回值如下：

- **true**：请求成功
- **false**：请求失败',
                'type' => 'boolean',
                'example' => 'true',
              ),
              'ErrorMessage' => 
              array (
                'description' => '调用失败时，返回的错误信息。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'ErrorCode' => 
              array (
                'description' => '错误码。',
                'type' => 'string',
                'example' => 'UnknownError',
              ),
              'LineageResult' => 
              array (
                'description' => 'SQL血缘关系结果集。',
                'type' => 'object',
                'properties' => 
                array (
                  'Lineages' => 
                  array (
                    'description' => '血缘关系详情列表。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'description' => '血缘关系详情。',
                      'type' => 'object',
                      'properties' => 
                      array (
                        'LineageType' => 
                        array (
                          'description' => '血缘关系类型，取值和说明如下：
- **FIELD\\_DEPEND\\_FIELD**：字段依赖字段。
- **TABLE\\_DEPEND\\_TABLE**：表依赖表。
- **FIELD\\_INFLU\\_TABLE**：字段影响表。
- **FIELD\\_INFLU\\_FIELD**：字段影响字段。
- **TABLE\\_INFLU\\_FIELD**：表影响字段。
- **FIELD\\_JOIN\\_FIELD**：字段关联字段。',
                          'type' => 'string',
                          'example' => 'FIELD_DEPEND_FIELD',
                        ),
                        'Src' => 
                        array (
                          'description' => '来源。',
                          'type' => 'string',
                          'example' => 'dmstest.b.id',
                        ),
                        'Dst' => 
                        array (
                          'description' => '目标。',
                          'type' => 'string',
                          'example' => 'dmstest.a.id',
                        ),
                        'OperType' => 
                        array (
                          'description' => '操作类型，指产生血缘的位置。例如，操作类型为SELECT，则表示该血缘关系来源于SELECT语句。

> 该字段为扩展字段，暂无实际用途。',
                          'type' => 'string',
                          'example' => 'SELECT',
                        ),
                        'ProcessDetail' => 
                        array (
                          'description' => '处理详情。仅字段来源字段关系（FIELD\\_DEPEND\\_FIELD）会存在此参数。',
                          'type' => 'object',
                          'properties' => 
                          array (
                            'Code' => 
                            array (
                              'description' => '字段加工SQL片段。',
                              'type' => 'string',
                              'example' => 'dmstest.b.id',
                            ),
                            'CalWay' => 
                            array (
                              'description' => '计算方式，取值和说明如下：
- **DIRECT**：表示未经过任何函数或者表达式加工。
- **EXPR**：表示经过函数或者表达式加工。',
                              'type' => 'string',
                              'example' => 'DIRECT',
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  'ObjectMetadata' => 
                  array (
                    'description' => '表和字段元数据信息。',
                    'type' => 'array',
                    'items' => 
                    array (
                      'type' => 'object',
                      'properties' => 
                      array (
                        'Name' => 
                        array (
                          'description' => '对象名称。',
                          'type' => 'string',
                          'example' => 'a',
                        ),
                        'Type' => 
                        array (
                          'description' => '对象类型，取值和说明如下：
- **TABLE**：表。
- **VIEW**：视图。
- **TMP_TABLE**：临时表。',
                          'type' => 'string',
                          'example' => 'TABLE',
                        ),
                        'Source' => 
                        array (
                          'description' => '元数据获取来源，取值和说明如下：
- **DDL**：来源于SQL解析或DMS采集的库表元数据定义。
- **LINEAGE**：来源于血缘解析的结果。',
                          'type' => 'string',
                          'example' => 'DDL',
                        ),
                        'Fields' => 
                        array (
                          'description' => '字段列表。',
                          'type' => 'array',
                          'items' => 
                          array (
                            'description' => '字段。',
                            'type' => 'object',
                            'properties' => 
                            array (
                              'Name' => 
                              array (
                                'description' => '字段名。',
                                'type' => 'string',
                                'example' => 'dmstest.a.id',
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
      'responseDemo' => '[{"errorExample":"","example":"{\\n  \\"RequestId\\": \\"B4B07137-F6AE-4756-8474-7F92BB6C4E04\\",\\n  \\"Success\\": true,\\n  \\"ErrorMessage\\": \\"UnknownError\\",\\n  \\"ErrorCode\\": \\"UnknownError\\",\\n  \\"LineageResult\\": {\\n    \\"Lineages\\": [\\n      {\\n        \\"LineageType\\": \\"FIELD_DEPEND_FIELD\\",\\n        \\"Src\\": \\"dmstest.b.id\\",\\n        \\"Dst\\": \\"dmstest.a.id\\",\\n        \\"OperType\\": \\"SELECT\\",\\n        \\"ProcessDetail\\": {\\n          \\"Code\\": \\"dmstest.b.id\\",\\n          \\"CalWay\\": \\"DIRECT\\"\\n        }\\n      }\\n    ],\\n    \\"ObjectMetadata\\": [\\n      {\\n        \\"Name\\": \\"a\\",\\n        \\"Type\\": \\"TABLE\\",\\n        \\"Source\\": \\"DDL\\",\\n        \\"Fields\\": [\\n          {\\n            \\"Name\\": \\"dmstest.a.id\\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}","type":"json"}]',
      'title' => '分析SQL血缘',
      'description' => '您需满足如下条件，才可调用此API。
- 数据库为：RDS MySQL、PolarDB MySQL版、AnalyticDB MySQL版、RDS PostgreSQL、PolarDB PostgreSQL版、AnalyticDB PostgreSQL版、Oracle、OpenGauss。
- 实例的管控模式为安全协同。管控模式的详细信息，请参见[管控模式](~~151629~~)。',
    ),
  ),
  'endpoints' => 
  array (
    0 => 
    array (
      'regionId' => 'cn-qingdao',
      'endpoint' => 'dms-enterprise.cn-qingdao.aliyuncs.com',
    ),
    1 => 
    array (
      'regionId' => 'cn-beijing',
      'endpoint' => 'dms-enterprise.cn-beijing.aliyuncs.com',
    ),
    2 => 
    array (
      'regionId' => 'cn-zhangjiakou',
      'endpoint' => 'dms-enterprise.cn-zhangjiakou.aliyuncs.com',
    ),
    3 => 
    array (
      'regionId' => 'cn-huhehaote',
      'endpoint' => 'dms-enterprise.cn-huhehaote.aliyuncs.com',
    ),
    4 => 
    array (
      'regionId' => 'cn-hangzhou',
      'endpoint' => 'dms-enterprise.cn-hangzhou.aliyuncs.com',
    ),
    5 => 
    array (
      'regionId' => 'cn-shanghai',
      'endpoint' => 'dms-enterprise.cn-shanghai.aliyuncs.com',
    ),
    6 => 
    array (
      'regionId' => 'cn-shenzhen',
      'endpoint' => 'dms-enterprise.cn-shenzhen.aliyuncs.com',
    ),
    7 => 
    array (
      'regionId' => 'cn-chengdu',
      'endpoint' => 'dms-enterprise.cn-chengdu.aliyuncs.com',
    ),
    8 => 
    array (
      'regionId' => 'cn-hongkong',
      'endpoint' => 'dms-enterprise.cn-hongkong.aliyuncs.com',
    ),
    9 => 
    array (
      'regionId' => 'ap-northeast-1',
      'endpoint' => 'dms-enterprise.ap-northeast-1.aliyuncs.com',
    ),
    10 => 
    array (
      'regionId' => 'ap-southeast-1',
      'endpoint' => 'dms-enterprise.ap-southeast-1.aliyuncs.com',
    ),
    11 => 
    array (
      'regionId' => 'ap-southeast-2',
      'endpoint' => 'dms-enterprise.ap-southeast-2.aliyuncs.com',
    ),
    12 => 
    array (
      'regionId' => 'ap-southeast-3',
      'endpoint' => 'dms-enterprise.ap-southeast-3.aliyuncs.com',
    ),
    13 => 
    array (
      'regionId' => 'ap-southeast-5',
      'endpoint' => 'dms-enterprise.ap-southeast-5.aliyuncs.com',
    ),
    14 => 
    array (
      'regionId' => 'us-east-1',
      'endpoint' => 'dms-enterprise.us-east-1.aliyuncs.com',
    ),
    15 => 
    array (
      'regionId' => 'us-west-1',
      'endpoint' => 'dms-enterprise.us-west-1.aliyuncs.com',
    ),
    16 => 
    array (
      'regionId' => 'eu-west-1',
      'endpoint' => 'dms-enterprise.eu-west-1.aliyuncs.com',
    ),
    17 => 
    array (
      'regionId' => 'eu-central-1',
      'endpoint' => 'dms-enterprise.eu-central-1.aliyuncs.com',
    ),
    18 => 
    array (
      'regionId' => 'ap-south-1',
      'endpoint' => 'dms-enterprise.ap-south-1.aliyuncs.com',
    ),
    19 => 
    array (
      'regionId' => 'me-east-1',
      'endpoint' => 'dms-enterprise.me-east-1.aliyuncs.com',
    ),
  ),
);