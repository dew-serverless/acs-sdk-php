<?php

declare(strict_types=1);

namespace Dew\Acs\RocketMQ;

use Dew\Acs\AcsClient;

/**
 * @method \Dew\Acs\Result createInstance(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result updateInstance(array $arguments = [])
 * @method \Http\Promise\Promise updateInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstance(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result listInstances(array $arguments = [])
 * @method \Http\Promise\Promise listInstancesAsync($arguments = [])
 * @method \Dew\Acs\Result getInstance(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceAsync($arguments = [])
 * @method \Dew\Acs\Result createTopic(array $arguments = [])
 * @method \Http\Promise\Promise createTopicAsync($arguments = [])
 * @method \Dew\Acs\Result updateTopic(array $arguments = [])
 * @method \Http\Promise\Promise updateTopicAsync($arguments = [])
 * @method \Dew\Acs\Result deleteTopic(array $arguments = [])
 * @method \Http\Promise\Promise deleteTopicAsync($arguments = [])
 * @method \Dew\Acs\Result listTopics(array $arguments = [])
 * @method \Http\Promise\Promise listTopicsAsync($arguments = [])
 * @method \Dew\Acs\Result getTopic(array $arguments = [])
 * @method \Http\Promise\Promise getTopicAsync($arguments = [])
 * @method \Dew\Acs\Result createConsumerGroup(array $arguments = [])
 * @method \Http\Promise\Promise createConsumerGroupAsync($arguments = [])
 * @method \Dew\Acs\Result updateConsumerGroup(array $arguments = [])
 * @method \Http\Promise\Promise updateConsumerGroupAsync($arguments = [])
 * @method \Dew\Acs\Result deleteConsumerGroup(array $arguments = [])
 * @method \Http\Promise\Promise deleteConsumerGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listConsumerGroups(array $arguments = [])
 * @method \Http\Promise\Promise listConsumerGroupsAsync($arguments = [])
 * @method \Dew\Acs\Result getConsumerGroup(array $arguments = [])
 * @method \Http\Promise\Promise getConsumerGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listTopicSubscriptions(array $arguments = [])
 * @method \Http\Promise\Promise listTopicSubscriptionsAsync($arguments = [])
 * @method \Dew\Acs\Result deleteConsumerGroupSubscription(array $arguments = [])
 * @method \Http\Promise\Promise deleteConsumerGroupSubscriptionAsync($arguments = [])
 * @method \Dew\Acs\Result listConsumerGroupSubscriptions(array $arguments = [])
 * @method \Http\Promise\Promise listConsumerGroupSubscriptionsAsync($arguments = [])
 * @method \Dew\Acs\Result getConsumerGroupSubscription(array $arguments = [])
 * @method \Http\Promise\Promise getConsumerGroupSubscriptionAsync($arguments = [])
 * @method \Dew\Acs\Result resetConsumeOffset(array $arguments = [])
 * @method \Http\Promise\Promise resetConsumeOffsetAsync($arguments = [])
 * @method \Dew\Acs\Result getConsumerGroupLag(array $arguments = [])
 * @method \Http\Promise\Promise getConsumerGroupLagAsync($arguments = [])
 * @method \Dew\Acs\Result getConsumerStack(array $arguments = [])
 * @method \Http\Promise\Promise getConsumerStackAsync($arguments = [])
 * @method \Dew\Acs\Result listConsumerConnections(array $arguments = [])
 * @method \Http\Promise\Promise listConsumerConnectionsAsync($arguments = [])
 * @method \Dew\Acs\Result verifySendMessage(array $arguments = [])
 * @method \Http\Promise\Promise verifySendMessageAsync($arguments = [])
 * @method \Dew\Acs\Result verifyConsumeMessage(array $arguments = [])
 * @method \Http\Promise\Promise verifyConsumeMessageAsync($arguments = [])
 * @method \Dew\Acs\Result listMessages(array $arguments = [])
 * @method \Http\Promise\Promise listMessagesAsync($arguments = [])
 * @method \Dew\Acs\Result getMessageDetail(array $arguments = [])
 * @method \Http\Promise\Promise getMessageDetailAsync($arguments = [])
 * @method \Dew\Acs\Result listTraces(array $arguments = [])
 * @method \Http\Promise\Promise listTracesAsync($arguments = [])
 * @method \Dew\Acs\Result getTrace(array $arguments = [])
 * @method \Http\Promise\Promise getTraceAsync($arguments = [])
 * @method \Dew\Acs\Result getInstanceIpWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceIpWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result getInstanceAcl(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceAclAsync($arguments = [])
 * @method \Dew\Acs\Result createInstanceAccount(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceAccountAsync($arguments = [])
 * @method \Dew\Acs\Result createInstanceAcl(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceAclAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstanceAccount(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstanceAccountAsync($arguments = [])
 * @method \Dew\Acs\Result createInstanceIpWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise createInstanceIpWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstanceAcl(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstanceAclAsync($arguments = [])
 * @method \Dew\Acs\Result deleteInstanceIpWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise deleteInstanceIpWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result updateInstanceAcl(array $arguments = [])
 * @method \Http\Promise\Promise updateInstanceAclAsync($arguments = [])
 * @method \Dew\Acs\Result updateInstanceAccount(array $arguments = [])
 * @method \Http\Promise\Promise updateInstanceAccountAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceIpWhitelist(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceIpWhitelistAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceAcl(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceAclAsync($arguments = [])
 * @method \Dew\Acs\Result listInstanceAccount(array $arguments = [])
 * @method \Http\Promise\Promise listInstanceAccountAsync($arguments = [])
 * @method \Dew\Acs\Result getInstanceAccount(array $arguments = [])
 * @method \Http\Promise\Promise getInstanceAccountAsync($arguments = [])
 * @method \Dew\Acs\Result deleteDisasterRecoveryPlan(array $arguments = [])
 * @method \Http\Promise\Promise deleteDisasterRecoveryPlanAsync($arguments = [])
 * @method \Dew\Acs\Result startDisasterRecoveryItem(array $arguments = [])
 * @method \Http\Promise\Promise startDisasterRecoveryItemAsync($arguments = [])
 * @method \Dew\Acs\Result stopDisasterRecoveryItem(array $arguments = [])
 * @method \Http\Promise\Promise stopDisasterRecoveryItemAsync($arguments = [])
 * @method \Dew\Acs\Result addDisasterRecoveryItem(array $arguments = [])
 * @method \Http\Promise\Promise addDisasterRecoveryItemAsync($arguments = [])
 * @method \Dew\Acs\Result listTagResources(array $arguments = [])
 * @method \Http\Promise\Promise listTagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result untagResources(array $arguments = [])
 * @method \Http\Promise\Promise untagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result tagResources(array $arguments = [])
 * @method \Http\Promise\Promise tagResourcesAsync($arguments = [])
 * @method \Dew\Acs\Result changeResourceGroup(array $arguments = [])
 * @method \Http\Promise\Promise changeResourceGroupAsync($arguments = [])
 * @method \Dew\Acs\Result listRegions(array $arguments = [])
 * @method \Http\Promise\Promise listRegionsAsync($arguments = [])
 * @method \Dew\Acs\Result listAvailableZones(array $arguments = [])
 * @method \Http\Promise\Promise listAvailableZonesAsync($arguments = [])
 * @method \Dew\Acs\Result listMetricMeta(array $arguments = [])
 * @method \Http\Promise\Promise listMetricMetaAsync($arguments = [])
 */
final class RocketMQClient extends AcsClient
{
    //
}
